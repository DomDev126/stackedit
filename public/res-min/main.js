
/*!
 * jQuery JavaScript Library v2.0.3
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03T13:30Z
 */
(function( window, undefined ) {

// Can't do this because several apps including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
// Support: Firefox 18+
//
var
	// A central reference to the root jQuery(document)
	rootjQuery,

	// The deferred used on DOM ready
	readyList,

	// Support: IE9
	// For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`
	core_strundefined = typeof undefined,

	// Use the correct document accordingly with window argument (sandbox)
	location = window.location,
	document = window.document,
	docElem = document.documentElement,

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// [[Class]] -> type pairs
	class2type = {},

	// List of deleted data cache ids, so we can reuse them
	core_deletedIds = [],

	core_version = "2.0.3",

	// Save a reference to some core methods
	core_concat = core_deletedIds.concat,
	core_push = core_deletedIds.push,
	core_slice = core_deletedIds.slice,
	core_indexOf = core_deletedIds.indexOf,
	core_toString = class2type.toString,
	core_hasOwn = class2type.hasOwnProperty,
	core_trim = core_version.trim,

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Used for matching numbers
	core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,

	// Used for splitting on whitespace
	core_rnotwhite = /\S+/g,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	},

	// The ready event handler and self cleanup method
	completed = function() {
		document.removeEventListener( "DOMContentLoaded", completed, false );
		window.removeEventListener( "load", completed, false );
		jQuery.ready();
	};

jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: core_version,

	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;

					// scripts is true for back-compat
					jQuery.merge( this, jQuery.parseHTML(
						match[1],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return core_slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	},

	slice: function() {
		return this.pushStack( core_slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: core_push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( core_version + Math.random() ).replace( /\D/g, "" ),

	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.trigger ) {
			jQuery( document ).trigger("ready").off("ready");
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {
		return !isNaN( parseFloat(obj) ) && isFinite( obj );
	},

	type: function( obj ) {
		if ( obj == null ) {
			return String( obj );
		}
		// Support: Safari <= 5.1 (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ core_toString.call(obj) ] || "object" :
			typeof obj;
	},

	isPlainObject: function( obj ) {
		// Not plain objects:
		// - Any object or value whose internal [[Class]] property is not "[object Object]"
		// - DOM nodes
		// - window
		if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		// Support: Firefox <20
		// The try/catch suppresses exceptions thrown when attempting to access
		// the "constructor" property of certain host objects, ie. |window.location|
		// https://bugzilla.mozilla.org/show_bug.cgi?id=814622
		try {
			if ( obj.constructor &&
					!core_hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
				return false;
			}
		} catch ( e ) {
			return false;
		}

		// If the function hasn't returned already, we're confident that
		// |obj| is a plain object, created by {} or constructed with new Object
		return true;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw new Error( msg );
	},

	// data: string of html
	// context (optional): If specified, the fragment will be created in this context, defaults to document
	// keepScripts (optional): If true, will include scripts passed in the html string
	parseHTML: function( data, context, keepScripts ) {
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			keepScripts = context;
			context = false;
		}
		context = context || document;

		var parsed = rsingleTag.exec( data ),
			scripts = !keepScripts && [];

		// Single tag
		if ( parsed ) {
			return [ context.createElement( parsed[1] ) ];
		}

		parsed = jQuery.buildFragment( [ data ], context, scripts );

		if ( scripts ) {
			jQuery( scripts ).remove();
		}

		return jQuery.merge( [], parsed.childNodes );
	},

	parseJSON: JSON.parse,

	// Cross-browser xml parsing
	parseXML: function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}

		// Support: IE9
		try {
			tmp = new DOMParser();
			xml = tmp.parseFromString( data , "text/xml" );
		} catch ( e ) {
			xml = undefined;
		}

		if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		var script,
				indirect = eval;

		code = jQuery.trim( code );

		if ( code ) {
			// If the code includes a valid, prologue position
			// strict mode pragma, execute code by injecting a
			// script tag into the document.
			if ( code.indexOf("use strict") === 1 ) {
				script = document.createElement("script");
				script.text = code;
				document.head.appendChild( script ).parentNode.removeChild( script );
			} else {
			// Otherwise, avoid the DOM node creation, insertion
			// and removal by using an indirect global eval
				indirect( code );
			}
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var value,
			i = 0,
			length = obj.length,
			isArray = isArraylike( obj );

		if ( args ) {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	trim: function( text ) {
		return text == null ? "" : core_trim.call( text );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArraylike( Object(arr) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				core_push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : core_indexOf.call( arr, elem, i );
	},

	merge: function( first, second ) {
		var l = second.length,
			i = first.length,
			j = 0;

		if ( typeof l === "number" ) {
			for ( ; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}
		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var retVal,
			ret = [],
			i = 0,
			length = elems.length;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value,
			i = 0,
			length = elems.length,
			isArray = isArraylike( elems ),
			ret = [];

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return core_concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = core_slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
		var i = 0,
			length = elems.length,
			bulk = key == null;

		// Sets many values
		if ( jQuery.type( key ) === "object" ) {
			chainable = true;
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
			}

		// Sets one value
		} else if ( value !== undefined ) {
			chainable = true;

			if ( !jQuery.isFunction( value ) ) {
				raw = true;
			}

			if ( bulk ) {
				// Bulk operations run against the entire set
				if ( raw ) {
					fn.call( elems, value );
					fn = null;

				// ...except when executing function values
				} else {
					bulk = fn;
					fn = function( elem, key, value ) {
						return bulk.call( jQuery( elem ), value );
					};
				}
			}

			if ( fn ) {
				for ( ; i < length; i++ ) {
					fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
				}
			}
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				length ? fn( elems[0], key ) : emptyGet;
	},

	now: Date.now,

	// A method for quickly swapping in/out CSS properties to get correct calculations.
	// Note: this method belongs to the css module but it's needed here for the support module.
	// If support gets modularized, this method should be moved back to the css module.
	swap: function( elem, options, callback, args ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.apply( elem, args || [] );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	}
});

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready );

		} else {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed, false );
		}
	}
	return readyList.promise( obj );
};

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {
	var length = obj.length,
		type = jQuery.type( obj );

	if ( jQuery.isWindow( obj ) ) {
		return false;
	}

	if ( obj.nodeType === 1 && length ) {
		return true;
	}

	return type === "array" || type !== "function" &&
		( length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj );
}

// All jQuery objects should point back to these
rootjQuery = jQuery(document);
/*!
 * Sizzle CSS Selector Engine v1.9.4-pre
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-06-03
 */
(function( window, undefined ) {

var i,
	support,
	cachedruns,
	Expr,
	getText,
	isXML,
	compile,
	outermostContext,
	sortInput,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + -(new Date()),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	hasDuplicate = false,
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}
		return 0;
	},

	// General-purpose constants
	strundefined = typeof undefined,
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf if we can't use a native one
	indexOf = arr.indexOf || function( elem ) {
		var i = 0,
			len = this.length;
		for ( ; i < len; i++ ) {
			if ( this[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +
		"*(?:([*^$|!~]?=)" + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",

	// Prefer arguments quoted,
	//   then not containing pseudos/brackets,
	//   then attribute selectors/non-parenthetical expressions,
	//   then anything else
	// These preferences are here to reduce the number of selectors
	//   needing tokenize in the PSEUDO preFilter
	pseudos = ":(" + characterEncoding + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + attributes.replace( 3, 8 ) + ")*)|.*)\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rsibling = new RegExp( whitespace + "*[+~]" ),
	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			// BMP codepoint
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var match, elem, m, nodeType,
		// QSA vars
		i, groups, old, nid, newContext, newSelector;

	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
		setDocument( context );
	}

	context = context || document;
	results = results || [];

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	if ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {
		return [];
	}

	if ( documentIsHTML && !seed ) {

		// Shortcuts
		if ( (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, context.getElementsByTagName( selector ) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {
				push.apply( results, context.getElementsByClassName( m ) );
				return results;
			}
		}

		// QSA path
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
			nid = old = expando;
			newContext = context;
			newSelector = nodeType === 9 && selector;

			// qSA works strangely on Element-rooted queries
			// We can work around this by specifying an extra ID on the root
			// and working up from there (Thanks to Andrew Dupont for the technique)
			// IE 8 doesn't work on object elements
			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
				groups = tokenize( selector );

				if ( (old = context.getAttribute("id")) ) {
					nid = old.replace( rescape, "\\$&" );
				} else {
					context.setAttribute( "id", nid );
				}
				nid = "[id='" + nid + "'] ";

				i = groups.length;
				while ( i-- ) {
					groups[i] = nid + toSelector( groups[i] );
				}
				newContext = rsibling.test( selector ) && context.parentNode || context;
				newSelector = groups.join(",");
			}

			if ( newSelector ) {
				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch(qsaError) {
				} finally {
					if ( !old ) {
						context.removeAttribute("id");
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key += " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = attrs.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Detect xml
 * @param {Element|Object} elem An element or a document
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var doc = node ? node.ownerDocument || node : preferredDoc,
		parent = doc.defaultView;

	// If no document and documentElement is available, return
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Set our document
	document = doc;
	docElem = doc.documentElement;

	// Support tests
	documentIsHTML = !isXML( doc );

	// Support: IE>8
	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
	// IE6-8 do not support the defaultView property so parent will be undefined
	if ( parent && parent.attachEvent && parent !== parent.top ) {
		parent.attachEvent( "onbeforeunload", function() {
			setDocument();
		});
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( doc.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Check if getElementsByClassName can be trusted
	support.getElementsByClassName = assert(function( div ) {
		div.innerHTML = "<div class='a'></div><div class='a i'></div>";

		// Support: Safari<4
		// Catch class over-caching
		div.firstChild.className = "i";
		// Support: Opera<10
		// Catch gEBCN failure to find non-leading classes
		return div.getElementsByClassName("i").length === 2;
	});

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== strundefined && documentIsHTML ) {
				var m = context.getElementById( id );
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [m] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== strundefined ) {
				return context.getElementsByTagName( tag );
			}
		} :
		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			div.innerHTML = "<select><option selected=''></option></select>";

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}
		});

		assert(function( div ) {

			// Support: Opera 10-12/IE8
			// ^= $= *= and empty values
			// Should not select anything
			// Support: Windows 8 Native Apps
			// The type attribute is restricted during .innerHTML assignment
			var input = doc.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "t", "" );

			if ( div.querySelectorAll("[t^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */

	// Element contains another
	// Purposefully does not implement inclusive descendent
	// As in, an element does not contain itself
	contains = rnative.test( docElem.contains ) || docElem.compareDocumentPosition ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = docElem.compareDocumentPosition ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b );

		if ( compare ) {
			// Disconnected nodes
			if ( compare & 1 ||
				(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

				// Choose the first element that is related to our preferred document
				if ( a === doc || contains(preferredDoc, a) ) {
					return -1;
				}
				if ( b === doc || contains(preferredDoc, b) ) {
					return 1;
				}

				// Maintain original order
				return sortInput ?
					( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
					0;
			}

			return compare & 4 ? -1 : 1;
		}

		// Not directly comparable, sort on existence of method
		return a.compareDocumentPosition ? -1 : 1;
	} :
	function( a, b ) {
		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Parentless nodes are either documents or disconnected
		} else if ( !aup || !bup ) {
			return a === doc ? -1 :
				b === doc ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return doc;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch(e) {}
	}

	return Sizzle( expr, document, null, [elem] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val === undefined ?
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null :
		val;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		for ( ; (node = elem[i]); i++ ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (see #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[5] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] && match[4] !== undefined ) {
				match[2] = match[4];

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, outerCache, node, diff, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || (parent[ expando ] = {});
							cache = outerCache[ type ] || [];
							nodeIndex = cache[0] === dirruns && cache[1];
							diff = cache[0] === dirruns && cache[2];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						// Use previously-cached element index if available
						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
							diff = cache[1];

						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
						} else {
							// Use the same loop as above to seek `elem` from the start
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								(diff = nodeIndex = 0) || start.pop()) ) {

								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
									// Cache the index of each encountered element
									if ( useCache ) {
										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
									}

									if ( node === elem ) {
										break;
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf.call( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
			//   not comment, processing instructions, or others
			// Thanks to Diego Perini for the nodeName shortcut
			//   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeName > "@" || elem.nodeType === 3 || elem.nodeType === 4 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === elem.type );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

function tokenize( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( tokens = [] );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
}

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var data, cache, outerCache,
				dirkey = dirruns + " " + doneName;

			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						if ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {
							if ( (data = cache[1]) === true || data === cachedruns ) {
								return data === true;
							}
						} else {
							cache = outerCache[ dir ] = [ dirkey ];
							cache[1] = matcher( elem, context, xml ) || cachedruns;
							if ( cache[1] === true ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf.call( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	// A counter to specify which element is currently being matched
	var matcherCachedRuns = 0,
		bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, expandContext ) {
			var elem, j, matcher,
				setMatched = [],
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				outermost = expandContext != null,
				contextBackup = outermostContext,
				// We must always have either seed elements or context
				elems = seed || byElement && Expr.find["TAG"]( "*", expandContext && context.parentNode || context ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);

			if ( outermost ) {
				outermostContext = context !== document && context;
				cachedruns = matcherCachedRuns;
			}

			// Add elements passing elementMatchers directly to results
			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
			for ( ; (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
						cachedruns = ++matcherCachedRuns;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !group ) {
			group = tokenize( selector );
		}
		i = group.length;
		while ( i-- ) {
			cached = matcherFromTokens( group[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
	}
	return cached;
};

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function select( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		match = tokenize( selector );

	if ( !seed ) {
		// Try to minimize operations if there is only one group
		if ( match.length === 1 ) {

			// Take a shortcut and set the context if the root selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					support.getById && context.nodeType === 9 && documentIsHTML &&
					Expr.relative[ tokens[1].type ] ) {

				context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
				if ( !context ) {
					return results;
				}
				selector = selector.slice( tokens.shift().value.length );
			}

			// Fetch a seed set for right-to-left matching
			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
			while ( i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( runescape, funescape ),
						rsibling.test( tokens[0].type ) && context.parentNode || context
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && toSelector( tokens );
						if ( !selector ) {
							push.apply( results, seed );
							return results;
						}

						break;
					}
				}
			}
		}
	}

	// Compile and execute a filtering function
	// Provide `match` to avoid retokenization if we modified the selector above
	compile( selector, match )(
		seed,
		context,
		!documentIsHTML,
		results,
		rsibling.test( selector )
	);
	return results;
}

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome<14
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return (val = elem.getAttributeNode( name )) && val.specified ?
				val.value :
				elem[ name ] === true ? name.toLowerCase() : null;
		}
	});
}

jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})( window );
// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				firingLength = 0;
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( list && ( !fired || stack ) ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};
jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var action = tuple[ 0 ],
								fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ action + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = core_slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
					if( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});
jQuery.support = (function( support ) {
	var input = document.createElement("input"),
		fragment = document.createDocumentFragment(),
		div = document.createElement("div"),
		select = document.createElement("select"),
		opt = select.appendChild( document.createElement("option") );

	// Finish early in limited environments
	if ( !input.type ) {
		return support;
	}

	input.type = "checkbox";

	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
	// Check the default checkbox/radio value ("" on old WebKit; "on" elsewhere)
	support.checkOn = input.value !== "";

	// Must access the parent to make an option select properly
	// Support: IE9, IE10
	support.optSelected = opt.selected;

	// Will be defined later
	support.reliableMarginRight = true;
	support.boxSizingReliable = true;
	support.pixelPosition = false;

	// Make sure checked status is properly cloned
	// Support: IE9, IE10
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Check if an input maintains its value after becoming a radio
	// Support: IE9, IE10
	input = document.createElement("input");
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";

	// #11217 - WebKit loses check when the name is after the checked attribute
	input.setAttribute( "checked", "t" );
	input.setAttribute( "name", "t" );

	fragment.appendChild( input );

	// Support: Safari 5.1, Android 4.x, Android 2.3
	// old WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: Firefox, Chrome, Safari
	// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
	support.focusinBubbles = "onfocusin" in window;

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	// Run tests that need a body at doc ready
	jQuery(function() {
		var container, marginDiv,
			// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).
			divReset = "padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box",
			body = document.getElementsByTagName("body")[ 0 ];

		if ( !body ) {
			// Return for frameset docs that don't have a body
			return;
		}

		container = document.createElement("div");
		container.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px";

		// Check box-sizing and margin behavior.
		body.appendChild( container ).appendChild( div );
		div.innerHTML = "";
		// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).
		div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%";

		// Workaround failing boxSizing test due to offsetWidth returning wrong value
		// with some non-1 values of body zoom, ticket #13543
		jQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function() {
			support.boxSizing = div.offsetWidth === 4;
		});

		// Use window.getComputedStyle because jsdom on node.js will break without it.
		if ( window.getComputedStyle ) {
			support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
			support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

			// Support: Android 2.3
			// Check if div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container. (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			marginDiv = div.appendChild( document.createElement("div") );
			marginDiv.style.cssText = div.style.cssText = divReset;
			marginDiv.style.marginRight = marginDiv.style.width = "0";
			div.style.width = "1px";

			support.reliableMarginRight =
				!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
		}

		body.removeChild( container );
	});

	return support;
})( {} );

/*
	Implementation Summary

	1. Enforce API surface and semantic compatibility with 1.9.x branch
	2. Improve the module's maintainability by reducing the storage
		paths to a single mechanism.
	3. Use the same single mechanism to support "private" and "user" data.
	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
	5. Avoid exposing implementation details on user objects (eg. expando properties)
	6. Provide a clear path for implementation upgrade to WeakMap in 2014
*/
var data_user, data_priv,
	rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
	rmultiDash = /([A-Z])/g;

function Data() {
	// Support: Android < 4,
	// Old WebKit does not have Object.preventExtensions/freeze method,
	// return new empty object instead with no [[set]] accessor
	Object.defineProperty( this.cache = {}, 0, {
		get: function() {
			return {};
		}
	});

	this.expando = jQuery.expando + Math.random();
}

Data.uid = 1;

Data.accepts = function( owner ) {
	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType ?
		owner.nodeType === 1 || owner.nodeType === 9 : true;
};

Data.prototype = {
	key: function( owner ) {
		// We can accept data for non-element nodes in modern browsers,
		// but we should not, see #8335.
		// Always return the key for a frozen object.
		if ( !Data.accepts( owner ) ) {
			return 0;
		}

		var descriptor = {},
			// Check if the owner object already has a cache key
			unlock = owner[ this.expando ];

		// If not, create one
		if ( !unlock ) {
			unlock = Data.uid++;

			// Secure it in a non-enumerable, non-writable property
			try {
				descriptor[ this.expando ] = { value: unlock };
				Object.defineProperties( owner, descriptor );

			// Support: Android < 4
			// Fallback to a less secure definition
			} catch ( e ) {
				descriptor[ this.expando ] = unlock;
				jQuery.extend( owner, descriptor );
			}
		}

		// Ensure the cache object
		if ( !this.cache[ unlock ] ) {
			this.cache[ unlock ] = {};
		}

		return unlock;
	},
	set: function( owner, data, value ) {
		var prop,
			// There may be an unlock assigned to this node,
			// if there is no entry for this "owner", create one inline
			// and set the unlock as though an owner entry had always existed
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		// Handle: [ owner, key, value ] args
		if ( typeof data === "string" ) {
			cache[ data ] = value;

		// Handle: [ owner, { properties } ] args
		} else {
			// Fresh assignments by object are shallow copied
			if ( jQuery.isEmptyObject( cache ) ) {
				jQuery.extend( this.cache[ unlock ], data );
			// Otherwise, copy the properties one-by-one to the cache object
			} else {
				for ( prop in data ) {
					cache[ prop ] = data[ prop ];
				}
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		// Either a valid cache is found, or will be created.
		// New caches will be created and the unlock returned,
		// allowing direct access to the newly created
		// empty data object. A valid owner object must be provided.
		var cache = this.cache[ this.key( owner ) ];

		return key === undefined ?
			cache : cache[ key ];
	},
	access: function( owner, key, value ) {
		var stored;
		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				((key && typeof key === "string") && value === undefined) ) {

			stored = this.get( owner, key );

			return stored !== undefined ?
				stored : this.get( owner, jQuery.camelCase(key) );
		}

		// [*]When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i, name, camel,
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		if ( key === undefined ) {
			this.cache[ unlock ] = {};

		} else {
			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {
				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = key.concat( key.map( jQuery.camelCase ) );
			} else {
				camel = jQuery.camelCase( key );
				// Try the string as a key before any manipulation
				if ( key in cache ) {
					name = [ key, camel ];
				} else {
					// If a key with the spaces exists, use it.
					// Otherwise, create an array by matching non-whitespace
					name = camel;
					name = name in cache ?
						[ name ] : ( name.match( core_rnotwhite ) || [] );
				}
			}

			i = name.length;
			while ( i-- ) {
				delete cache[ name[ i ] ];
			}
		}
	},
	hasData: function( owner ) {
		return !jQuery.isEmptyObject(
			this.cache[ owner[ this.expando ] ] || {}
		);
	},
	discard: function( owner ) {
		if ( owner[ this.expando ] ) {
			delete this.cache[ owner[ this.expando ] ];
		}
	}
};

// These may be used throughout the jQuery core codebase
data_user = new Data();
data_priv = new Data();


jQuery.extend({
	acceptData: Data.accepts,

	hasData: function( elem ) {
		return data_user.hasData( elem ) || data_priv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return data_user.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		data_user.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to data_priv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return data_priv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		data_priv.remove( elem, name );
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var attrs, name,
			elem = this[ 0 ],
			i = 0,
			data = null;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = data_user.get( elem );

				if ( elem.nodeType === 1 && !data_priv.get( elem, "hasDataAttrs" ) ) {
					attrs = elem.attributes;
					for ( ; i < attrs.length; i++ ) {
						name = attrs[ i ].name;

						if ( name.indexOf( "data-" ) === 0 ) {
							name = jQuery.camelCase( name.slice(5) );
							dataAttr( elem, name, data[ name ] );
						}
					}
					data_priv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				data_user.set( this, key );
			});
		}

		return jQuery.access( this, function( value ) {
			var data,
				camelKey = jQuery.camelCase( key );

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {
				// Attempt to get data from the cache
				// with the key as-is
				data = data_user.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to get data from the cache
				// with the key camelized
				data = data_user.get( elem, camelKey );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, camelKey, undefined );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each(function() {
				// First, attempt to store a copy or reference of any
				// data that might've been store with a camelCased key.
				var data = data_user.get( this, camelKey );

				// For HTML5 data-* attribute interop, we have to
				// store property names with dashes in a camelCase form.
				// This might not apply to all properties...*
				data_user.set( this, camelKey, value );

				// *... In the case of properties that might _actually_
				// have dashes, we need to also store a copy of that
				// unchanged property.
				if ( key.indexOf("-") !== -1 && data !== undefined ) {
					data_user.set( this, key, value );
				}
			});
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each(function() {
			data_user.remove( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :
					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? JSON.parse( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			data_user.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}
jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = data_priv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = data_priv.access( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return data_priv.get( elem, key ) || data_priv.access( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				data_priv.remove( elem, [ type + "queue", key ] );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while( i-- ) {
			tmp = data_priv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var nodeHook, boolHook,
	rclass = /[\t\r\n\f]/g,
	rreturn = /\r/g,
	rfocusable = /^(?:input|select|textarea|button)$/i;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},

	prop: function( name, value ) {
		return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each(function() {
			delete this[ jQuery.propFix[ name ] || name ];
		});
	},

	addClass: function( value ) {
		var classes, elem, cur, clazz, j,
			i = 0,
			len = this.length,
			proceed = typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call( this, j, this.className ) );
			});
		}

		if ( proceed ) {
			// The disjunction here is for better compressibility (see removeClass)
			classes = ( value || "" ).match( core_rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					" "
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}
					elem.className = jQuery.trim( cur );

				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, clazz, j,
			i = 0,
			len = this.length,
			proceed = arguments.length === 0 || typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call( this, j, this.className ) );
			});
		}
		if ( proceed ) {
			classes = ( value || "" ).match( core_rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					""
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}
					elem.className = value ? jQuery.trim( cur ) : "";
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					classNames = value.match( core_rnotwhite ) || [];

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( type === core_strundefined || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					data_priv.set( this, "__className__", this.className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// attributes.value is undefined in Blackberry 4.7 but
				// uses .value. See #6932
				var val = elem.attributes.value;
				return !val || val.specified ? elem.value : elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// IE6-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];
					if ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {
						optionSet = true;
					}
				}

				// force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	attr: function( elem, name, value ) {
		var hooks, ret,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === core_strundefined ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );

			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {
			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( core_rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( (name = attrNames[i++]) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {
					// Set corresponding property to false
					elem[ propName ] = false;
				}

				elem.removeAttribute( name );
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
				ret :
				( elem[ name ] = value );

		} else {
			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
				ret :
				elem[ name ];
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
					elem.tabIndex :
					-1;
			}
		}
	}
});

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = jQuery.expr.attrHandle[ name ] || jQuery.find.attr;

	jQuery.expr.attrHandle[ name ] = function( elem, name, isXML ) {
		var fn = jQuery.expr.attrHandle[ name ],
			ret = isXML ?
				undefined :
				/* jshint eqeqeq: false */
				// Temporarily disable this handler to check existence
				(jQuery.expr.attrHandle[ name ] = undefined) !=
					getter( elem, name, isXML ) ?

					name.toLowerCase() :
					null;

		// Restore handler
		jQuery.expr.attrHandle[ name ] = fn;

		return ret;
	};
});

// Support: IE9+
// Selectedness for an option in an optgroup can be inaccurate
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		}
	};
}

jQuery.each([
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
});

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	};
	if ( !jQuery.support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			// Support: Webkit
			// "" is returned instead of "on" if a value isn't specified
			return elem.getAttribute("value") === null ? "on" : elem.value;
		};
	}
});
var rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !(events = elemData.events) ) {
			events = elemData.events = {};
		}
		if ( !(eventHandle = elemData.handle) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( core_rnotwhite ) || [""];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !(handlers = events[ type ]) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.hasData( elem ) && data_priv.get( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( core_rnotwhite ) || [""];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;
			data_priv.remove( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = core_hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = core_hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf(":") < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join(".");
		event.namespace_re = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === (elem.ownerDocument || document) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] && data_priv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {
				event.preventDefault();
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
				jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = core_slice.call( arguments ),
			handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( (event.result = ret) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.disabled !== true || event.type !== "click" ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, handlers: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
		}

		return handlerQueue;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: Cordova 2.5 (WebKit) (#13255)
		// All events should have a target; Cordova deviceready doesn't
		if ( !event.target ) {
			event.target = document;
		}

		// Support: Safari 6.0+, Chrome < 28
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle, false );
	}
};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = ( src.defaultPrevented ||
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && e.preventDefault ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && e.stopPropagation ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// Support: Chrome 15+
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// Create "bubbling" focus and blur events
// Support: Firefox, Chrome, Safari
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0,
			handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		var elem = this[0];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
});
var isSimple = /^.[^:#\[\.,]*$/,
	rparentsprev = /^(?:parents|prev(?:Until|All))/,
	rneedsContext = jQuery.expr.match.needsContext,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var i,
			ret = [],
			self = this,
			len = self.length;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter(function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			}) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},

	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter(function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector || [], true) );
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector || [], false) );
	},

	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = ( rneedsContext.test( selectors ) || typeof selectors !== "string" ) ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
				// Always skip document fragments
				if ( cur.nodeType < 11 && (pos ?
					pos.index(cur) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector(cur, selectors)) ) {

					cur = matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return core_indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return core_indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( jQuery.unique(all) );
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

function sibling( cur, dir ) {
	while ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}

	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.unique( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		var elem = elems[ 0 ];

		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 && elem.nodeType === 1 ?
			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
				return elem.nodeType === 1;
			}));
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			truncate = until !== undefined;

		while ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {
			if ( elem.nodeType === 1 ) {
				if ( truncate && jQuery( elem ).is( until ) ) {
					break;
				}
				matched.push( elem );
			}
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var matched = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				matched.push( n );
			}
		}

		return matched;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		});

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		});

	}

	if ( typeof qualifier === "string" ) {
		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( core_indexOf.call( qualifier, elem ) >= 0 ) !== not;
	});
}
var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	manipulation_rcheckableType = /^(?:checkbox|radio)$/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /^$|\/(?:java|ecma)script/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

	// We have to close these tags to support XHTML (#13200)
	wrapMap = {

		// Support: IE 9
		option: [ 1, "<select multiple='multiple'>", "</select>" ],

		thead: [ 1, "<table>", "</table>" ],
		col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		_default: [ 0, "", "" ]
	};

// Support: IE 9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

jQuery.fn.extend({
	text: function( value ) {
		return jQuery.access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	append: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		});
	},

	before: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		});
	},

	after: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		});
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		var elem,
			elems = selector ? jQuery.filter( selector, this ) : this,
			i = 0;

		for ( ; (elem = elems[i]) != null; i++ ) {
			if ( !keepData && elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem ) );
			}

			if ( elem.parentNode ) {
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
					setGlobalEval( getAll( elem, "script" ) );
				}
				elem.parentNode.removeChild( elem );
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return jQuery.access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var
			// Snapshot the DOM in case .domManip sweeps something relevant into its fragment
			args = jQuery.map( this, function( elem ) {
				return [ elem.nextSibling, elem.parentNode ];
			}),
			i = 0;

		// Make the changes, replacing each context element with the new content
		this.domManip( arguments, function( elem ) {
			var next = args[ i++ ],
				parent = args[ i++ ];

			if ( parent ) {
				// Don't use the snapshot next if it has moved (#13810)
				if ( next && next.parentNode !== parent ) {
					next = this.nextSibling;
				}
				jQuery( this ).remove();
				parent.insertBefore( elem, next );
			}
		// Allow new content to include elements from the context set
		}, true );

		// Force removal if there was no new content (e.g., from empty arguments)
		return i ? this : this.remove();
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, callback, allowIntersection ) {

		// Flatten any nested arrays
		args = core_concat.apply( [], args );

		var fragment, first, scripts, hasScripts, node, doc,
			i = 0,
			l = this.length,
			set = this,
			iNoClone = l - 1,
			value = args[ 0 ],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction || !( l <= 1 || typeof value !== "string" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {
			return this.each(function( index ) {
				var self = set.eq( index );
				if ( isFunction ) {
					args[ 0 ] = value.call( this, index, self.html() );
				}
				self.domManip( args, callback, allowIntersection );
			});
		}

		if ( l ) {
			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, !allowIntersection && this );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {
							// Support: QtWebKit
							// jQuery.merge because core_push.apply(_, arraylike) throws
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( this[ i ], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

							if ( node.src ) {
								// Hope ajax is available...
								jQuery._evalUrl( node.src );
							} else {
								jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
							}
						}
					}
				}
			}
		}

		return this;
	}
});

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: QtWebKit
			// .get() because core_push.apply(_, arraylike) throws
			core_push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
});

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Support: IE >= 9
		// Fix Cloning issues
		if ( !jQuery.support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	buildFragment: function( elems, context, scripts, selection ) {
		var elem, tmp, tag, wrap, contains, j,
			i = 0,
			l = elems.length,
			fragment = context.createDocumentFragment(),
			nodes = [];

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					// Support: QtWebKit
					// jQuery.merge because core_push.apply(_, arraylike) throws
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || fragment.appendChild( context.createElement("div") );

					// Deserialize a standard representation
					tag = ( rtagName.exec( elem ) || ["", ""] )[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[ 2 ];

					// Descend through wrappers to the right content
					j = wrap[ 0 ];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Support: QtWebKit
					// jQuery.merge because core_push.apply(_, arraylike) throws
					jQuery.merge( nodes, tmp.childNodes );

					// Remember the top-level container
					tmp = fragment.firstChild;

					// Fixes #12346
					// Support: Webkit, IE
					tmp.textContent = "";
				}
			}
		}

		// Remove wrapper from fragment
		fragment.textContent = "";

		i = 0;
		while ( (elem = nodes[ i++ ]) ) {

			// #4087 - If origin and destination elements are the same, and this is
			// that element, do not do anything
			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( fragment.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( (elem = tmp[ j++ ]) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		return fragment;
	},

	cleanData: function( elems ) {
		var data, elem, events, type, key, j,
			special = jQuery.event.special,
			i = 0;

		for ( ; (elem = elems[ i ]) !== undefined; i++ ) {
			if ( Data.accepts( elem ) ) {
				key = elem[ data_priv.expando ];

				if ( key && (data = data_priv.cache[ key ]) ) {
					events = Object.keys( data.events || {} );
					if ( events.length ) {
						for ( j = 0; (type = events[j]) !== undefined; j++ ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}
					if ( data_priv.cache[ key ] ) {
						// Discard any remaining `private` data
						delete data_priv.cache[ key ];
					}
				}
			}
			// Discard any remaining `user` data
			delete data_user.cache[ elem[ data_user.expando ] ];
		}
	},

	_evalUrl: function( url ) {
		return jQuery.ajax({
			url: url,
			type: "GET",
			dataType: "script",
			async: false,
			global: false,
			"throws": true
		});
	}
});

// Support: 1.x compatibility
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType === 1 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName("tbody")[0] ||
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute("type");
	}

	return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var l = elems.length,
		i = 0;

	for ( ; i < l; i++ ) {
		data_priv.set(
			elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )
		);
	}
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( data_priv.hasData( src ) ) {
		pdataOld = data_priv.access( src );
		pdataCur = data_priv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( data_user.hasData( src ) ) {
		udataOld = data_user.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		data_user.set( dest, udataCur );
	}
}


function getAll( context, tag ) {
	var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :
			context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :
			[];

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], ret ) :
		ret;
}

// Support: IE >= 9
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && manipulation_rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}
jQuery.fn.extend({
	wrapAll: function( html ) {
		var wrap;

		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapAll( html.call(this, i) );
			});
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	}
});
var curCSS, iframe,
	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rmargin = /^margin/,
	rnumsplit = new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),
	rnumnonpx = new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),
	rrelNum = new RegExp( "^([+-])=(" + core_pnum + ")", "i" ),
	elemdisplay = { BODY: "block" },

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: 0,
		fontWeight: 400
	},

	cssExpand = [ "Top", "Right", "Bottom", "Left" ],
	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt(0).toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function isHidden( elem, el ) {
	// isHidden might be called from jQuery#filter function;
	// in that case, element will be second argument
	elem = el || elem;
	return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
}

// NOTE: we've included the "window" in window.getComputedStyle
// because jsdom on node.js will break without it.
function getStyles( elem ) {
	return window.getComputedStyle( elem, null );
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = data_priv.get( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = data_priv.access( elem, "olddisplay", css_defaultDisplay(elem.nodeName) );
			}
		} else {

			if ( !values[ index ] ) {
				hidden = isHidden( elem );

				if ( display && display !== "none" || !hidden ) {
					data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css(elem, "display") );
				}
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.fn.extend({
	css: function( name, value ) {
		return jQuery.access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each(function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"columnCount": true,
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that NaN and null values aren't set. See: #7116
			if ( value == null || type === "number" && isNaN( value ) ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// Fixes #8908, it can be done more correctly by specifying setters in cssHooks,
			// but it would mean to define eight (for every problematic property) identical functions
			if ( !jQuery.support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
				style[ name ] = value;
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	}
});

curCSS = function( elem, name, _computed ) {
	var width, minWidth, maxWidth,
		computed = _computed || getStyles( elem ),

		// Support: IE9
		// getPropertyValue is only needed for .css('filter') in IE9, see #12537
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,
		style = elem.style;

	if ( computed ) {

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// Support: Safari 5.1
		// A tribute to the "awesome hack by Dean Edwards"
		// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
		// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
		if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret;
};


function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

// Try to determine the default display value of an element
function css_defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {
			// Use the already-created iframe if possible
			iframe = ( iframe ||
				jQuery("<iframe frameborder='0' width='0' height='0'/>")
				.css( "cssText", "display:block !important" )
			).appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;
			doc.write("<!doctype html><html><body>");
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}

// Called ONLY from within css_defaultDisplay
function actualDisplay( name, doc ) {
	var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),
		display = jQuery.css( elem[0], "display" );
	elem.remove();
	return display;
}

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, "display" ) ) ?
					jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					}) :
					getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
});

// These hooks cannot be added until DOM ready because the support test
// for it is not run until after DOM ready
jQuery(function() {
	// Support: Android 2.3
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				if ( computed ) {
					// Support: Android 2.3
					// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
					// Work around by temporarily setting element display to inline-block
					return jQuery.swap( elem, { "display": "inline-block" },
						curCSS, [ elem, "marginRight" ] );
				}
			}
		};
	}

	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// getComputedStyle returns percent when specified for top/left/bottom/right
	// rather than make the css module depend on the offset module, we just check for it here
	if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {
		jQuery.each( [ "top", "left" ], function( i, prop ) {
			jQuery.cssHooks[ prop ] = {
				get: function( elem, computed ) {
					if ( computed ) {
						computed = curCSS( elem, prop );
						// if curCSS returns percentage, fallback to offset
						return rnumnonpx.test( computed ) ?
							jQuery( elem ).position()[ prop ] + "px" :
							computed;
					}
				}
			};
		});
	}

});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		// Support: Opera <= 12.12
		// Opera reports offsetWidths and offsetHeights less than zero on some elements
		return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});
var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function(){
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		})
		.filter(function(){
			var type = this.type;
			// Use .is(":disabled") so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !manipulation_rcheckableType.test( type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

//Serialize an array of form elements or a set of
//key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}
jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
});

jQuery.fn.extend({
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	}
});
var
	// Document location
	ajaxLocParts,
	ajaxLocation,

	ajax_nonce = jQuery.now(),

	ajax_rquery = /\?/,
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat("*");

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( (dataType = dataTypes[i++]) ) {
				// Prepend if requested
				if ( dataType[0] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

				// Otherwise append
				} else {
					(structure[ dataType ] = structure[ dataType ] || []).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		});
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = url.slice( off );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax({
			url: url,

			// if "type" variable is undefined, then "GET" method will be used
			type: type,
			dataType: "html",
			data: params
		}).done(function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		}).complete( callback && function( jqXHR, status ) {
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
		});
	}

	return this;
};

// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
	jQuery.fn[ type ] = function( fn ){
		return this.on( type, fn );
	};
});

jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,
			// URL without anti-cache param
			cacheURL,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks("once memory"),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( (match = rheaders.exec( responseHeadersString )) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {
								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( core_rnotwhite ) || [""];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger("ajaxStart");
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + ajax_nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ajax_nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout(function() {
					jqXHR.abort("timeout");
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader("etag");
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger("ajaxStop");
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		});
	};
});

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

		// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}
// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /(?:java|ecma)script/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {
	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery("<script>").prop({
					async: true,
					charset: s.scriptCharset,
					src: s.url
				}).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});
var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( ajax_nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( ajax_rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});
jQuery.ajaxSettings.xhr = function() {
	try {
		return new XMLHttpRequest();
	} catch( e ) {}
};

var xhrSupported = jQuery.ajaxSettings.xhr(),
	xhrSuccessStatus = {
		// file protocol always yields status code 0, assume 200
		0: 200,
		// Support: IE9
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	// Support: IE9
	// We need to keep track of outbound xhr and abort them manually
	// because IE is not smart enough to do it all by itself
	xhrId = 0,
	xhrCallbacks = {};

if ( window.ActiveXObject ) {
	jQuery( window ).on( "unload", function() {
		for( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]();
		}
		xhrCallbacks = undefined;
	});
}

jQuery.support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
jQuery.support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport(function( options ) {
	var callback;
	// Cross domain only allowed if supported through XMLHttpRequest
	if ( jQuery.support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i, id,
					xhr = options.xhr();
				xhr.open( options.type, options.url, options.async, options.username, options.password );
				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}
				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}
				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers["X-Requested-With"] ) {
					headers["X-Requested-With"] = "XMLHttpRequest";
				}
				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}
				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							delete xhrCallbacks[ id ];
							callback = xhr.onload = xhr.onerror = null;
							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {
								complete(
									// file protocol always yields status 0, assume 404
									xhr.status || 404,
									xhr.statusText
								);
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,
									// Support: IE9
									// #11426: When requesting binary data, IE9 will throw an exception
									// on any attempt to access responseText
									typeof xhr.responseText === "string" ? {
										text: xhr.responseText
									} : undefined,
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};
				// Listen to events
				xhr.onload = callback();
				xhr.onerror = callback("error");
				// Create the abort callback
				callback = xhrCallbacks[( id = xhrId++ )] = callback("abort");
				// Do send the request
				// This may raise an exception which is actually
				// handled in jQuery.ajax (so no try/catch here)
				xhr.send( options.hasContent && options.data || null );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});
var fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([+-])=|)(" + core_pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [function( prop, value ) {
			var tween = this.createTween( prop, value ),
				target = tween.cur(),
				parts = rfxnum.exec( value ),
				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
				scale = 1,
				maxIterations = 20;

			if ( start && start[ 3 ] !== unit ) {
				// Trust units reported by jQuery.css
				unit = unit || start[ 3 ];

				// Make sure we update the tween properties later on
				parts = parts || [];

				// Iteratively approximate from a nonzero starting point
				start = +target || 1;

				do {
					// If previous iteration zeroed out, double until we get *something*
					// Use a string for doubling factor so we don't accidentally see scale as unchanged below
					scale = scale || ".5";

					// Adjust and apply
					start = start / scale;
					jQuery.style( tween.elem, prop, start + unit );

				// Update scale, tolerating zero or NaN from tween.cur()
				// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
			}

			// Update tween properties
			if ( parts ) {
				start = tween.start = +start || +target || 0;
				tween.unit = unit;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[ 1 ] ?
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
					+parts[ 2 ];
			}

			return tween;
		}]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	});
	return ( fxNow = jQuery.now() );
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( (tween = collection[ index ].call( animation, prop, value )) ) {

			// we're done with this property
			return tween;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = data_priv.get( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE9-10 do not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		if ( jQuery.css( elem, "display" ) === "inline" &&
				jQuery.css( elem, "float" ) === "none" ) {

			style.display = "inline-block";
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always(function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		});
	}


	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = data_priv.access( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;

			data_priv.remove( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}
	}
}

function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || data_priv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = data_priv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each(function() {
			var index,
				data = data_priv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		});
	}
});

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth? 1 : 0;
	for( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p*Math.PI ) / 2;
	}
};

jQuery.timers = [];
jQuery.fx = Tween.prototype.init;
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	if ( timer() && jQuery.timers.push( timer ) ) {
		jQuery.fx.start();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};

// Back Compat <1.8 extension point
jQuery.fx.step = {};

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}
jQuery.fn.offset = function( options ) {
	if ( arguments.length ) {
		return options === undefined ?
			this :
			this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
	}

	var docElem, win,
		elem = this[ 0 ],
		box = { top: 0, left: 0 },
		doc = elem && elem.ownerDocument;

	if ( !doc ) {
		return;
	}

	docElem = doc.documentElement;

	// Make sure it's not a disconnected DOM node
	if ( !jQuery.contains( docElem, elem ) ) {
		return box;
	}

	// If we don't have gBCR, just use 0,0 rather than error
	// BlackBerry 5, iOS 3 (original iPhone)
	if ( typeof elem.getBoundingClientRect !== core_strundefined ) {
		box = elem.getBoundingClientRect();
	}
	win = getWindow( doc );
	return {
		top: box.top + win.pageYOffset - docElem.clientTop,
		left: box.left + win.pageXOffset - docElem.clientLeft
	};
};

jQuery.offset = {

	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) && ( curCSSTop + curCSSLeft ).indexOf("auto") > -1;

		// Need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// We assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {
			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || docElem;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position") === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || docElem;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return jQuery.access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : window.pageXOffset,
					top ? val : window.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}
// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return jQuery.access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});
// Limit scope pollution from any deprecated API
// (function() {

// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;

// })();
if ( typeof module === "object" && module && typeof module.exports === "object" ) {
	// Expose jQuery as module.exports in loaders that implement the Node
	// module pattern (including browserify). Do not create the global, since
	// the user will be storing it themselves locally, and globals are frowned
	// upon in the Node module world.
	module.exports = jQuery;
} else {
	// Register as a named AMD module, since jQuery can be concatenated with other
	// files that may use define, but not via a proper concatenation script that
	// understands anonymous AMD modules. A named AMD is safest and most robust
	// way to register. Lowercase jquery is used because AMD module names are
	// derived from file names, and jQuery is normally delivered in a lowercase
	// file name. Do this after creating the global so that if an AMD module wants
	// to call noConflict to hide this version of jQuery, it will work.
	if ( typeof define === "function" && define.amd ) {
		define( "jquery", [], function () { return jQuery; } );
	}
}

// If there is a window object, that at least has a document property,
// define jQuery and $ identifiers
if ( typeof window === "object" && typeof window.document === "object" ) {
	window.jQuery = window.$ = jQuery;
}

})( window );

//     Underscore.js 1.5.1
//     http://underscorejs.org
//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `global` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Establish the object that gets returned to break out of a loop iteration.
  var breaker = {};

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var
    push             = ArrayProto.push,
    slice            = ArrayProto.slice,
    concat           = ArrayProto.concat,
    toString         = ObjProto.toString,
    hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeForEach      = ArrayProto.forEach,
    nativeMap          = ArrayProto.map,
    nativeReduce       = ArrayProto.reduce,
    nativeReduceRight  = ArrayProto.reduceRight,
    nativeFilter       = ArrayProto.filter,
    nativeEvery        = ArrayProto.every,
    nativeSome         = ArrayProto.some,
    nativeIndexOf      = ArrayProto.indexOf,
    nativeLastIndexOf  = ArrayProto.lastIndexOf,
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind;

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object via a string identifier,
  // for Closure Compiler "advanced" mode.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.5.1';

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles objects with the built-in `forEach`, arrays, and raw objects.
  // Delegates to **ECMAScript 5**'s native `forEach` if available.
  var each = _.each = _.forEach = function(obj, iterator, context) {
    if (obj == null) return;
    if (nativeForEach && obj.forEach === nativeForEach) {
      obj.forEach(iterator, context);
    } else if (obj.length === +obj.length) {
      for (var i = 0, l = obj.length; i < l; i++) {
        if (iterator.call(context, obj[i], i, obj) === breaker) return;
      }
    } else {
      for (var key in obj) {
        if (_.has(obj, key)) {
          if (iterator.call(context, obj[key], key, obj) === breaker) return;
        }
      }
    }
  };

  // Return the results of applying the iterator to each element.
  // Delegates to **ECMAScript 5**'s native `map` if available.
  _.map = _.collect = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);
    each(obj, function(value, index, list) {
      results.push(iterator.call(context, value, index, list));
    });
    return results;
  };

  var reduceError = 'Reduce of empty array with no initial value';

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.
  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduce && obj.reduce === nativeReduce) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
    }
    each(obj, function(value, index, list) {
      if (!initial) {
        memo = value;
        initial = true;
      } else {
        memo = iterator.call(context, memo, value, index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  };

  // The right-associative version of reduce, also known as `foldr`.
  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.
  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
    }
    var length = obj.length;
    if (length !== +length) {
      var keys = _.keys(obj);
      length = keys.length;
    }
    each(obj, function(value, index, list) {
      index = keys ? keys[--length] : --length;
      if (!initial) {
        memo = obj[index];
        initial = true;
      } else {
        memo = iterator.call(context, memo, obj[index], index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  };

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, iterator, context) {
    var result;
    any(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  };

  // Return all the elements that pass a truth test.
  // Delegates to **ECMAScript 5**'s native `filter` if available.
  // Aliased as `select`.
  _.filter = _.select = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);
    each(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, iterator, context) {
    return _.filter(obj, function(value, index, list) {
      return !iterator.call(context, value, index, list);
    }, context);
  };

  // Determine whether all of the elements match a truth test.
  // Delegates to **ECMAScript 5**'s native `every` if available.
  // Aliased as `all`.
  _.every = _.all = function(obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = true;
    if (obj == null) return result;
    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);
    each(obj, function(value, index, list) {
      if (!(result = result && iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if at least one element in the object matches a truth test.
  // Delegates to **ECMAScript 5**'s native `some` if available.
  // Aliased as `any`.
  var any = _.some = _.any = function(obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = false;
    if (obj == null) return result;
    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);
    each(obj, function(value, index, list) {
      if (result || (result = iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if the array or object contains a given value (using `===`).
  // Aliased as `include`.
  _.contains = _.include = function(obj, target) {
    if (obj == null) return false;
    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;
    return any(obj, function(value) {
      return value === target;
    });
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      return (isFunc ? method : value[method]).apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, function(value){ return value[key]; });
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs, first) {
    if (_.isEmpty(attrs)) return first ? void 0 : [];
    return _[first ? 'find' : 'filter'](obj, function(value) {
      for (var key in attrs) {
        if (attrs[key] !== value[key]) return false;
      }
      return true;
    });
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.where(obj, attrs, true);
  };

  // Return the maximum element or (element-based computation).
  // Can't optimize arrays of integers longer than 65,535 elements.
  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)
  _.max = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.max.apply(Math, obj);
    }
    if (!iterator && _.isEmpty(obj)) return -Infinity;
    var result = {computed : -Infinity, value: -Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed > result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.min.apply(Math, obj);
    }
    if (!iterator && _.isEmpty(obj)) return Infinity;
    var result = {computed : Infinity, value: Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed < result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Shuffle an array.
  _.shuffle = function(obj) {
    var rand;
    var index = 0;
    var shuffled = [];
    each(obj, function(value) {
      rand = _.random(index++);
      shuffled[index - 1] = shuffled[rand];
      shuffled[rand] = value;
    });
    return shuffled;
  };

  // An internal function to generate lookup iterators.
  var lookupIterator = function(value) {
    return _.isFunction(value) ? value : function(obj){ return obj[value]; };
  };

  // Sort the object's values by a criterion produced by an iterator.
  _.sortBy = function(obj, value, context) {
    var iterator = lookupIterator(value);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value : value,
        index : index,
        criteria : iterator.call(context, value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index < right.index ? -1 : 1;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(obj, value, context, behavior) {
    var result = {};
    var iterator = lookupIterator(value == null ? _.identity : value);
    each(obj, function(value, index) {
      var key = iterator.call(context, value, index, obj);
      behavior(result, key, value);
    });
    return result;
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = function(obj, value, context) {
    return group(obj, value, context, function(result, key, value) {
      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);
    });
  };

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = function(obj, value, context) {
    return group(obj, value, context, function(result, key) {
      if (!_.has(result, key)) result[key] = 0;
      result[key]++;
    });
  };

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iterator, context) {
    iterator = iterator == null ? _.identity : lookupIterator(iterator);
    var value = iterator.call(context, obj);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = (low + high) >>> 1;
      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;
    }
    return low;
  };

  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (obj.length === +obj.length) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if ((n != null) && !guard) {
      return slice.call(array, Math.max(array.length - n, 0));
    } else {
      return array[array.length - 1];
    }
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, (n == null) || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, output) {
    if (shallow && _.every(input, _.isArray)) {
      return concat.apply(output, input);
    }
    each(input, function(value) {
      if (_.isArray(value) || _.isArguments(value)) {
        shallow ? push.apply(output, value) : flatten(value, shallow, output);
      } else {
        output.push(value);
      }
    });
    return output;
  };

  // Return a completely flattened version of an array.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, []);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iterator, context) {
    if (_.isFunction(isSorted)) {
      context = iterator;
      iterator = isSorted;
      isSorted = false;
    }
    var initial = iterator ? _.map(array, iterator, context) : array;
    var results = [];
    var seen = [];
    each(initial, function(value, index) {
      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {
        seen.push(value);
        results.push(array[index]);
      }
    });
    return results;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(_.flatten(arguments, true));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var rest = slice.call(arguments, 1);
    return _.filter(_.uniq(array), function(item) {
      return _.every(rest, function(other) {
        return _.indexOf(other, item) >= 0;
      });
    });
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));
    return _.filter(array, function(value){ return !_.contains(rest, value); });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    var length = _.max(_.pluck(arguments, "length").concat(0));
    var results = new Array(length);
    for (var i = 0; i < length; i++) {
      results[i] = _.pluck(arguments, '' + i);
    }
    return results;
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    if (list == null) return {};
    var result = {};
    for (var i = 0, l = list.length; i < l; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),
  // we need this function. Return the position of the first occurrence of an
  // item in an array, or -1 if the item is not included in the array.
  // Delegates to **ECMAScript 5**'s native `indexOf` if available.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function(array, item, isSorted) {
    if (array == null) return -1;
    var i = 0, l = array.length;
    if (isSorted) {
      if (typeof isSorted == 'number') {
        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);
      } else {
        i = _.sortedIndex(array, item);
        return array[i] === item ? i : -1;
      }
    }
    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);
    for (; i < l; i++) if (array[i] === item) return i;
    return -1;
  };

  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
  _.lastIndexOf = function(array, item, from) {
    if (array == null) return -1;
    var hasIndex = from != null;
    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {
      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);
    }
    var i = (hasIndex ? from : array.length);
    while (i--) if (array[i] === item) return i;
    return -1;
  };

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = arguments[2] || 1;

    var len = Math.max(Math.ceil((stop - start) / step), 0);
    var idx = 0;
    var range = new Array(len);

    while(idx < len) {
      range[idx++] = start;
      start += step;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Reusable constructor function for prototype setting.
  var ctor = function(){};

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    var args, bound;
    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError;
    args = slice.call(arguments, 2);
    return bound = function() {
      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
      ctor.prototype = func.prototype;
      var self = new ctor;
      ctor.prototype = null;
      var result = func.apply(self, args.concat(slice.call(arguments)));
      if (Object(result) === result) return result;
      return self;
    };
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context.
  _.partial = function(func) {
    var args = slice.call(arguments, 1);
    return function() {
      return func.apply(this, args.concat(slice.call(arguments)));
    };
  };

  // Bind all of an object's methods to that object. Useful for ensuring that
  // all callbacks defined on an object belong to it.
  _.bindAll = function(obj) {
    var funcs = slice.call(arguments, 1);
    if (funcs.length === 0) throw new Error("bindAll must be passed function names");
    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memo = {};
    hasher || (hasher = _.identity);
    return function() {
      var key = hasher.apply(this, arguments);
      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));
    };
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){ return func.apply(null, args); }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function(func) {
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
  };

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    options || (options = {});
    var later = function() {
      previous = options.leading === false ? 0 : new Date;
      timeout = null;
      result = func.apply(context, args);
    };
    return function() {
      var now = new Date;
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0) {
        clearTimeout(timeout);
        timeout = null;
        previous = now;
        result = func.apply(context, args);
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var result;
    var timeout = null;
    return function() {
      var context = this, args = arguments;
      var later = function() {
        timeout = null;
        if (!immediate) result = func.apply(context, args);
      };
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) result = func.apply(context, args);
      return result;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = function(func) {
    var ran = false, memo;
    return function() {
      if (ran) return memo;
      ran = true;
      memo = func.apply(this, arguments);
      func = null;
      return memo;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return function() {
      var args = [func];
      push.apply(args, arguments);
      return wrapper.apply(this, args);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var funcs = arguments;
    return function() {
      var args = arguments;
      for (var i = funcs.length - 1; i >= 0; i--) {
        args = [funcs[i].apply(this, args)];
      }
      return args[0];
    };
  };

  // Returns a function that will only be executed after being called N times.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Object Functions
  // ----------------

  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = nativeKeys || function(obj) {
    if (obj !== Object(obj)) throw new TypeError('Invalid object');
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var values = [];
    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);
    return values;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var pairs = [];
    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      if (source) {
        for (var prop in source) {
          obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    each(keys, function(key) {
      if (key in obj) copy[key] = obj[key];
    });
    return copy;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    for (var key in obj) {
      if (!_.contains(keys, key)) copy[key] = obj[key];
    }
    return copy;
  };

  // Fill in a given object with default properties.
  _.defaults = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      if (source) {
        for (var prop in source) {
          if (obj[prop] === void 0) obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a == 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className != toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, dates, and booleans are compared by value.
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return a == String(b);
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for
        // other numeric values.
        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a == +b;
      // RegExps are compared by their source patterns and flags.
      case '[object RegExp]':
        return a.source == b.source &&
               a.global == b.global &&
               a.multiline == b.multiline &&
               a.ignoreCase == b.ignoreCase;
    }
    if (typeof a != 'object' || typeof b != 'object') return false;
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] == a) return bStack[length] == b;
    }
    // Objects with different constructors are not equivalent, but `Object`s
    // from different frames are.
    var aCtor = a.constructor, bCtor = b.constructor;
    if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&
                             _.isFunction(bCtor) && (bCtor instanceof bCtor))) {
      return false;
    }
    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);
    var size = 0, result = true;
    // Recursively compare objects and arrays.
    if (className == '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size == b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          if (!(result = eq(a[size], b[size], aStack, bStack))) break;
        }
      }
    } else {
      // Deep compare objects.
      for (var key in a) {
        if (_.has(a, key)) {
          // Count the expected number of properties.
          size++;
          // Deep compare each member.
          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
        }
      }
      // Ensure that both objects contain the same number of properties.
      if (result) {
        for (key in b) {
          if (_.has(b, key) && !(size--)) break;
        }
        result = !size;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return result;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b, [], []);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;
    for (var key in obj) if (_.has(obj, key)) return false;
    return true;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) == '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    return obj === Object(obj);
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) == '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return !!(obj && _.has(obj, 'callee'));
    };
  }

  // Optimize `isFunction` if appropriate.
  if (typeof (/./) !== 'function') {
    _.isFunction = function(obj) {
      return typeof obj === 'function';
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj != +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iterators.
  _.identity = function(value) {
    return value;
  };

  // Run a function **n** times.
  _.times = function(n, iterator, context) {
    var accum = Array(Math.max(0, n));
    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // List of HTML entities for escaping.
  var entityMap = {
    escape: {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;',
      '/': '&#x2F;'
    }
  };
  entityMap.unescape = _.invert(entityMap.escape);

  // Regexes containing the keys and values listed immediately above.
  var entityRegexes = {
    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),
    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')
  };

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  _.each(['escape', 'unescape'], function(method) {
    _[method] = function(string) {
      if (string == null) return '';
      return ('' + string).replace(entityRegexes[method], function(match) {
        return entityMap[method][match];
      });
    };
  });

  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function(object, property) {
    if (object == null) return void 0;
    var value = object[property];
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    each(_.functions(obj), function(name){
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result.call(this, func.apply(_, args));
      };
    });
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\t':     't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  _.template = function(text, data, settings) {
    var render;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = new RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset)
        .replace(escaper, function(match) { return '\\' + escapes[match]; });

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      }
      if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      }
      if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }
      index = offset + match.length;
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + "return __p;\n";

    try {
      render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    if (data) return render(data, _);
    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled function source as a convenience for precompilation.
    template.source = 'function(' + (settings.variable || 'obj') + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function, which will delegate to the wrapper.
  _.chain = function(obj) {
    return _(obj).chain();
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(obj) {
    return this._chain ? _(obj).chain() : obj;
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];
      return result.call(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result.call(this, method.apply(this._wrapped, arguments));
    };
  });

  _.extend(_.prototype, {

    // Start chaining a wrapped Underscore object.
    chain: function() {
      this._chain = true;
      return this;
    },

    // Extracts the result from a wrapped and chained object.
    value: function() {
      return this._wrapped;
    }

  });

}).call(this);

define("underscore", (function (global) {
    return function () {
        var ret, fn;
        return ret || global._;
    };
}(this)));

//Copyright (C) 2012 Kory Nunn

//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/*

    This code is not formatted for readability, but rather run-speed and to assist compilers.
    
    However, the code's intention should be transparent.
    
    *** IE SUPPORT ***
    
    If you require this library to work in IE7, add the following after declaring crel.
    
    var testDiv = document.createElement('div'),
        testLabel = document.createElement('label');

    testDiv.setAttribute('class', 'a');    
    testDiv['className'] !== 'a' ? crel.attrMap['class'] = 'className':undefined;
    testDiv.setAttribute('name','a');
    testDiv['name'] !== 'a' ? crel.attrMap['name'] = function(element, value){
        element.id = value;
    }:undefined;
    

    testLabel.setAttribute('for', 'a');
    testLabel['htmlFor'] !== 'a' ? crel.attrMap['for'] = 'htmlFor':undefined;
    
    

*/

(function (root, factory) {
    if (typeof exports === 'object') {
        module.exports = factory();
    } else if (typeof define === 'function' && define.amd) {
        define('crel',factory);
    } else {
        root.crel = factory();
    }
}(this, function () {
    // based on http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object
    var isNode = typeof Node === 'object'
        ? function (object) { return object instanceof Node }
        : function (object) {
            return object
                && typeof object === 'object'
                && typeof object.nodeType === 'number'
                && typeof object.nodeName === 'string';
        };

    function crel(){
        var document = window.document,
            args = arguments, //Note: assigned to a variable to assist compilers. Saves about 40 bytes in closure compiler. Has negligable effect on performance.
            element = document.createElement(args[0]),
            child,
            settings = args[1],
            childIndex = 2,
            argumentsLength = args.length,
            attributeMap = crel.attrMap;

        // shortcut
        if(argumentsLength === 1){
            return element;
        }

        if(typeof settings !== 'object' || isNode(settings)) {
            --childIndex;
            settings = null;
        }

        // shortcut if there is only one child that is a string    
        if((argumentsLength - childIndex) === 1 && typeof args[childIndex] === 'string' && element.textContent !== undefined){
            element.textContent = args[childIndex];
        }else{    
            for(; childIndex < argumentsLength; ++childIndex){
                child = args[childIndex];
                
                if(child == null){
                    continue;
                }
                
                if(!isNode(child)){
                    child = document.createTextNode(child);
                }
                
                element.appendChild(child);
            }
        }
        
        for(var key in settings){
            if(!attributeMap[key]){
                element.setAttribute(key, settings[key]);
            }else{
                var attr = crel.attrMap[key];
                if(typeof attr === 'function'){     
                    attr(element, settings[key]);               
                }else{            
                    element.setAttribute(attr, settings[key]);
                }
            }
        }
        
        return element;
    }
    
    // Used for mapping one kind of attribute to the supported version of that in bad browsers.
    // String referenced so that compilers maintain the property name.
    crel['attrMap'] = {};
    
    // String referenced so that compilers maintain the property name.
    crel["isNode"] = isNode;
    
    return crel;
}));

/*
 *  Based on code from:
 *
 * XRegExp 1.5.0
 * (c) 2007-2010 Steven Levithan
 * MIT License
 * <http://xregexp.com>
 * Provides an augmented, extensible, cross-browser implementation of regular expressions,
 * including support for additional syntax, flags, and methods
 */
 
define('ace/lib/regexp',['require','exports','module'],function(require, exports, module) {


    //---------------------------------
    //  Private variables
    //---------------------------------

    var real = {
            exec: RegExp.prototype.exec,
            test: RegExp.prototype.test,
            match: String.prototype.match,
            replace: String.prototype.replace,
            split: String.prototype.split
        },
        compliantExecNpcg = real.exec.call(/()??/, "")[1] === undefined, // check `exec` handling of nonparticipating capturing groups
        compliantLastIndexIncrement = function () {
            var x = /^/g;
            real.test.call(x, "");
            return !x.lastIndex;
        }();

    if (compliantLastIndexIncrement && compliantExecNpcg)
        return;

    //---------------------------------
    //  Overriden native methods
    //---------------------------------

    // Adds named capture support (with backreferences returned as `result.name`), and fixes two
    // cross-browser issues per ES3:
    // - Captured values for nonparticipating capturing groups should be returned as `undefined`,
    //   rather than the empty string.
    // - `lastIndex` should not be incremented after zero-length matches.
    RegExp.prototype.exec = function (str) {
        var match = real.exec.apply(this, arguments),
            name, r2;
        if ( typeof(str) == 'string' && match) {
            // Fix browsers whose `exec` methods don't consistently return `undefined` for
            // nonparticipating capturing groups
            if (!compliantExecNpcg && match.length > 1 && indexOf(match, "") > -1) {
                r2 = RegExp(this.source, real.replace.call(getNativeFlags(this), "g", ""));
                // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed
                // matching due to characters outside the match
                real.replace.call(str.slice(match.index), r2, function () {
                    for (var i = 1; i < arguments.length - 2; i++) {
                        if (arguments[i] === undefined)
                            match[i] = undefined;
                    }
                });
            }
            // Attach named capture properties
            if (this._xregexp && this._xregexp.captureNames) {
                for (var i = 1; i < match.length; i++) {
                    name = this._xregexp.captureNames[i - 1];
                    if (name)
                       match[name] = match[i];
                }
            }
            // Fix browsers that increment `lastIndex` after zero-length matches
            if (!compliantLastIndexIncrement && this.global && !match[0].length && (this.lastIndex > match.index))
                this.lastIndex--;
        }
        return match;
    };

    // Don't override `test` if it won't change anything
    if (!compliantLastIndexIncrement) {
        // Fix browser bug in native method
        RegExp.prototype.test = function (str) {
            // Use the native `exec` to skip some processing overhead, even though the overriden
            // `exec` would take care of the `lastIndex` fix
            var match = real.exec.call(this, str);
            // Fix browsers that increment `lastIndex` after zero-length matches
            if (match && this.global && !match[0].length && (this.lastIndex > match.index))
                this.lastIndex--;
            return !!match;
        };
    }

    //---------------------------------
    //  Private helper functions
    //---------------------------------

    function getNativeFlags (regex) {
        return (regex.global     ? "g" : "") +
               (regex.ignoreCase ? "i" : "") +
               (regex.multiline  ? "m" : "") +
               (regex.extended   ? "x" : "") + // Proposed for ES4; included in AS3
               (regex.sticky     ? "y" : "");
    }

    function indexOf (array, item, from) {
        if (Array.prototype.indexOf) // Use the native array method if available
            return array.indexOf(item, from);
        for (var i = from || 0; i < array.length; i++) {
            if (array[i] === item)
                return i;
        }
        return -1;
    }

});

// https://github.com/kriskowal/es5-shim
// Copyright 2009-2012 by contributors, MIT License

define('ace/lib/es5-shim',['require','exports','module'],function(require, exports, module) {

/*
 * Brings an environment as close to ECMAScript 5 compliance
 * as is possible with the facilities of erstwhile engines.
 *
 * Annotated ES5: http://es5.github.com/ (specific links below)
 * ES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf
 * Required reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/
 */

//
// Function
// ========
//

// ES-5 15.3.4.5
// http://es5.github.com/#x15.3.4.5

function Empty() {}

if (!Function.prototype.bind) {
    Function.prototype.bind = function bind(that) { // .length is 1
        // 1. Let Target be the this value.
        var target = this;
        // 2. If IsCallable(Target) is false, throw a TypeError exception.
        if (typeof target != "function") {
            throw new TypeError("Function.prototype.bind called on incompatible " + target);
        }
        // 3. Let A be a new (possibly empty) internal list of all of the
        //   argument values provided after thisArg (arg1, arg2 etc), in order.
        // XXX slicedArgs will stand in for "A" if used
        var args = slice.call(arguments, 1); // for normal call
        // 4. Let F be a new native ECMAScript object.
        // 11. Set the [[Prototype]] internal property of F to the standard
        //   built-in Function prototype object as specified in 15.3.3.1.
        // 12. Set the [[Call]] internal property of F as described in
        //   15.3.4.5.1.
        // 13. Set the [[Construct]] internal property of F as described in
        //   15.3.4.5.2.
        // 14. Set the [[HasInstance]] internal property of F as described in
        //   15.3.4.5.3.
        var bound = function () {

            if (this instanceof bound) {
                // 15.3.4.5.2 [[Construct]]
                // When the [[Construct]] internal method of a function object,
                // F that was created using the bind function is called with a
                // list of arguments ExtraArgs, the following steps are taken:
                // 1. Let target be the value of F's [[TargetFunction]]
                //   internal property.
                // 2. If target has no [[Construct]] internal method, a
                //   TypeError exception is thrown.
                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Construct]] internal
                //   method of target providing args as the arguments.

                var result = target.apply(
                    this,
                    args.concat(slice.call(arguments))
                );
                if (Object(result) === result) {
                    return result;
                }
                return this;

            } else {
                // 15.3.4.5.1 [[Call]]
                // When the [[Call]] internal method of a function object, F,
                // which was created using the bind function is called with a
                // this value and a list of arguments ExtraArgs, the following
                // steps are taken:
                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 2. Let boundThis be the value of F's [[BoundThis]] internal
                //   property.
                // 3. Let target be the value of F's [[TargetFunction]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Call]] internal method
                //   of target providing boundThis as the this value and
                //   providing args as the arguments.

                // equiv: target.call(this, ...boundArgs, ...args)
                return target.apply(
                    that,
                    args.concat(slice.call(arguments))
                );

            }

        };
        if(target.prototype) {
            Empty.prototype = target.prototype;
            bound.prototype = new Empty();
            // Clean up dangling references.
            Empty.prototype = null;
        }
        // XXX bound.length is never writable, so don't even try
        //
        // 15. If the [[Class]] internal property of Target is "Function", then
        //     a. Let L be the length property of Target minus the length of A.
        //     b. Set the length own property of F to either 0 or L, whichever is
        //       larger.
        // 16. Else set the length own property of F to 0.
        // 17. Set the attributes of the length own property of F to the values
        //   specified in 15.3.5.1.

        // TODO
        // 18. Set the [[Extensible]] internal property of F to true.

        // TODO
        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).
        // 20. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "caller", PropertyDescriptor {[[Get]]: thrower, [[Set]]:
        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and
        //   false.
        // 21. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "arguments", PropertyDescriptor {[[Get]]: thrower,
        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},
        //   and false.

        // TODO
        // NOTE Function objects created using Function.prototype.bind do not
        // have a prototype property or the [[Code]], [[FormalParameters]], and
        // [[Scope]] internal properties.
        // XXX can't delete prototype in pure-js.

        // 22. Return F.
        return bound;
    };
}

// Shortcut to an often accessed properties, in order to avoid multiple
// dereference that costs universally.
// _Please note: Shortcuts are defined after `Function.prototype.bind` as we
// us it in defining shortcuts.
var call = Function.prototype.call;
var prototypeOfArray = Array.prototype;
var prototypeOfObject = Object.prototype;
var slice = prototypeOfArray.slice;
// Having a toString local variable name breaks in Opera so use _toString.
var _toString = call.bind(prototypeOfObject.toString);
var owns = call.bind(prototypeOfObject.hasOwnProperty);

// If JS engine supports accessors creating shortcuts.
var defineGetter;
var defineSetter;
var lookupGetter;
var lookupSetter;
var supportsAccessors;
if ((supportsAccessors = owns(prototypeOfObject, "__defineGetter__"))) {
    defineGetter = call.bind(prototypeOfObject.__defineGetter__);
    defineSetter = call.bind(prototypeOfObject.__defineSetter__);
    lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);
    lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);
}

//
// Array
// =====
//

// ES5 15.4.4.12
// http://es5.github.com/#x15.4.4.12
// Default value for second param
// [bugfix, ielt9, old browsers]
// IE < 9 bug: [1,2].splice(0).join("") == "" but should be "12"
if ([1,2].splice(0).length != 2) {
    if(function() { // test IE < 9 to splice bug - see issue #138
        function makeArray(l) {
            var a = new Array(l+2);
            a[0] = a[1] = 0;
            return a;
        }
        var array = [], lengthBefore;
        
        array.splice.apply(array, makeArray(20));
        array.splice.apply(array, makeArray(26));

        lengthBefore = array.length; //46
        array.splice(5, 0, "XXX"); // add one element

        lengthBefore + 1 == array.length

        if (lengthBefore + 1 == array.length) {
            return true;// has right splice implementation without bugs
        }
        // else {
        // IE8 bug
        // }
    }()) {//IE 6/7
        var array_splice = Array.prototype.splice;
        Array.prototype.splice = function(start, deleteCount) {
            if (!arguments.length) {
                return [];
            } else {
                return array_splice.apply(this, [
                    start === void 0 ? 0 : start,
                    deleteCount === void 0 ? (this.length - start) : deleteCount
                ].concat(slice.call(arguments, 2)))
            }
        };
    } else {//IE8
        // taken from http://docs.sencha.com/ext-js/4-1/source/Array2.html
        Array.prototype.splice = function(pos, removeCount){
            var length = this.length;
            if (pos > 0) {
                if (pos > length)
                    pos = length;
            } else if (pos == void 0) {
                pos = 0;
            } else if (pos < 0) {
                pos = Math.max(length + pos, 0);
            }

            if (!(pos+removeCount < length))
                removeCount = length - pos;

            var removed = this.slice(pos, pos+removeCount);
            var insert = slice.call(arguments, 2);
            var add = insert.length;            

            // we try to use Array.push when we can for efficiency...
            if (pos === length) {
                if (add) {
                    this.push.apply(this, insert);
                }
            } else {
                var remove = Math.min(removeCount, length - pos);
                var tailOldPos = pos + remove;
                var tailNewPos = tailOldPos + add - remove;
                var tailCount = length - tailOldPos;
                var lengthAfterRemove = length - remove;

                if (tailNewPos < tailOldPos) { // case A
                    for (var i = 0; i < tailCount; ++i) {
                        this[tailNewPos+i] = this[tailOldPos+i];
                    }
                } else if (tailNewPos > tailOldPos) { // case B
                    for (i = tailCount; i--; ) {
                        this[tailNewPos+i] = this[tailOldPos+i];
                    }
                } // else, add == remove (nothing to do)

                if (add && pos === lengthAfterRemove) {
                    this.length = lengthAfterRemove; // truncate array
                    this.push.apply(this, insert);
                } else {
                    this.length = lengthAfterRemove + add; // reserves space
                    for (i = 0; i < add; ++i) {
                        this[pos+i] = insert[i];
                    }
                }
            }
            return removed;
        };
    }
}

// ES5 15.4.3.2
// http://es5.github.com/#x15.4.3.2
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray
if (!Array.isArray) {
    Array.isArray = function isArray(obj) {
        return _toString(obj) == "[object Array]";
    };
}

// The IsCallable() check in the Array functions
// has been replaced with a strict check on the
// internal class of the object to trap cases where
// the provided function was actually a regular
// expression literal, which in V8 and
// JavaScriptCore is a typeof "function".  Only in
// V8 are regular expression literals permitted as
// reduce parameters, so it is desirable in the
// general case for the shim to match the more
// strict and common behavior of rejecting regular
// expressions.

// ES5 15.4.4.18
// http://es5.github.com/#x15.4.4.18
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach

// Check failure of by-index access of string characters (IE < 9)
// and failure of `0 in boxedString` (Rhino)
var boxedString = Object("a"),
    splitString = boxedString[0] != "a" || !(0 in boxedString);

if (!Array.prototype.forEach) {
    Array.prototype.forEach = function forEach(fun /*, thisp*/) {
        var object = toObject(this),
            self = splitString && _toString(this) == "[object String]" ?
                this.split("") :
                object,
            thisp = arguments[1],
            i = -1,
            length = self.length >>> 0;

        // If no callback function or if callback is not a callable function
        if (_toString(fun) != "[object Function]") {
            throw new TypeError(); // TODO message
        }

        while (++i < length) {
            if (i in self) {
                // Invoke the callback function with call, passing arguments:
                // context, property value, property key, thisArg object
                // context
                fun.call(thisp, self[i], i, object);
            }
        }
    };
}

// ES5 15.4.4.19
// http://es5.github.com/#x15.4.4.19
// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map
if (!Array.prototype.map) {
    Array.prototype.map = function map(fun /*, thisp*/) {
        var object = toObject(this),
            self = splitString && _toString(this) == "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0,
            result = Array(length),
            thisp = arguments[1];

        // If no callback function or if callback is not a callable function
        if (_toString(fun) != "[object Function]") {
            throw new TypeError(fun + " is not a function");
        }

        for (var i = 0; i < length; i++) {
            if (i in self)
                result[i] = fun.call(thisp, self[i], i, object);
        }
        return result;
    };
}

// ES5 15.4.4.20
// http://es5.github.com/#x15.4.4.20
// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter
if (!Array.prototype.filter) {
    Array.prototype.filter = function filter(fun /*, thisp */) {
        var object = toObject(this),
            self = splitString && _toString(this) == "[object String]" ?
                this.split("") :
                    object,
            length = self.length >>> 0,
            result = [],
            value,
            thisp = arguments[1];

        // If no callback function or if callback is not a callable function
        if (_toString(fun) != "[object Function]") {
            throw new TypeError(fun + " is not a function");
        }

        for (var i = 0; i < length; i++) {
            if (i in self) {
                value = self[i];
                if (fun.call(thisp, value, i, object)) {
                    result.push(value);
                }
            }
        }
        return result;
    };
}

// ES5 15.4.4.16
// http://es5.github.com/#x15.4.4.16
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every
if (!Array.prototype.every) {
    Array.prototype.every = function every(fun /*, thisp */) {
        var object = toObject(this),
            self = splitString && _toString(this) == "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0,
            thisp = arguments[1];

        // If no callback function or if callback is not a callable function
        if (_toString(fun) != "[object Function]") {
            throw new TypeError(fun + " is not a function");
        }

        for (var i = 0; i < length; i++) {
            if (i in self && !fun.call(thisp, self[i], i, object)) {
                return false;
            }
        }
        return true;
    };
}

// ES5 15.4.4.17
// http://es5.github.com/#x15.4.4.17
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some
if (!Array.prototype.some) {
    Array.prototype.some = function some(fun /*, thisp */) {
        var object = toObject(this),
            self = splitString && _toString(this) == "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0,
            thisp = arguments[1];

        // If no callback function or if callback is not a callable function
        if (_toString(fun) != "[object Function]") {
            throw new TypeError(fun + " is not a function");
        }

        for (var i = 0; i < length; i++) {
            if (i in self && fun.call(thisp, self[i], i, object)) {
                return true;
            }
        }
        return false;
    };
}

// ES5 15.4.4.21
// http://es5.github.com/#x15.4.4.21
// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce
if (!Array.prototype.reduce) {
    Array.prototype.reduce = function reduce(fun /*, initial*/) {
        var object = toObject(this),
            self = splitString && _toString(this) == "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0;

        // If no callback function or if callback is not a callable function
        if (_toString(fun) != "[object Function]") {
            throw new TypeError(fun + " is not a function");
        }

        // no value to return if no initial value and an empty array
        if (!length && arguments.length == 1) {
            throw new TypeError("reduce of empty array with no initial value");
        }

        var i = 0;
        var result;
        if (arguments.length >= 2) {
            result = arguments[1];
        } else {
            do {
                if (i in self) {
                    result = self[i++];
                    break;
                }

                // if array contains no values, no initial value to return
                if (++i >= length) {
                    throw new TypeError("reduce of empty array with no initial value");
                }
            } while (true);
        }

        for (; i < length; i++) {
            if (i in self) {
                result = fun.call(void 0, result, self[i], i, object);
            }
        }

        return result;
    };
}

// ES5 15.4.4.22
// http://es5.github.com/#x15.4.4.22
// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight
if (!Array.prototype.reduceRight) {
    Array.prototype.reduceRight = function reduceRight(fun /*, initial*/) {
        var object = toObject(this),
            self = splitString && _toString(this) == "[object String]" ?
                this.split("") :
                object,
            length = self.length >>> 0;

        // If no callback function or if callback is not a callable function
        if (_toString(fun) != "[object Function]") {
            throw new TypeError(fun + " is not a function");
        }

        // no value to return if no initial value, empty array
        if (!length && arguments.length == 1) {
            throw new TypeError("reduceRight of empty array with no initial value");
        }

        var result, i = length - 1;
        if (arguments.length >= 2) {
            result = arguments[1];
        } else {
            do {
                if (i in self) {
                    result = self[i--];
                    break;
                }

                // if array contains no values, no initial value to return
                if (--i < 0) {
                    throw new TypeError("reduceRight of empty array with no initial value");
                }
            } while (true);
        }

        do {
            if (i in this) {
                result = fun.call(void 0, result, self[i], i, object);
            }
        } while (i--);

        return result;
    };
}

// ES5 15.4.4.14
// http://es5.github.com/#x15.4.4.14
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf
if (!Array.prototype.indexOf || ([0, 1].indexOf(1, 2) != -1)) {
    Array.prototype.indexOf = function indexOf(sought /*, fromIndex */ ) {
        var self = splitString && _toString(this) == "[object String]" ?
                this.split("") :
                toObject(this),
            length = self.length >>> 0;

        if (!length) {
            return -1;
        }

        var i = 0;
        if (arguments.length > 1) {
            i = toInteger(arguments[1]);
        }

        // handle negative indices
        i = i >= 0 ? i : Math.max(0, length + i);
        for (; i < length; i++) {
            if (i in self && self[i] === sought) {
                return i;
            }
        }
        return -1;
    };
}

// ES5 15.4.4.15
// http://es5.github.com/#x15.4.4.15
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf
if (!Array.prototype.lastIndexOf || ([0, 1].lastIndexOf(0, -3) != -1)) {
    Array.prototype.lastIndexOf = function lastIndexOf(sought /*, fromIndex */) {
        var self = splitString && _toString(this) == "[object String]" ?
                this.split("") :
                toObject(this),
            length = self.length >>> 0;

        if (!length) {
            return -1;
        }
        var i = length - 1;
        if (arguments.length > 1) {
            i = Math.min(i, toInteger(arguments[1]));
        }
        // handle negative indices
        i = i >= 0 ? i : length - Math.abs(i);
        for (; i >= 0; i--) {
            if (i in self && sought === self[i]) {
                return i;
            }
        }
        return -1;
    };
}

//
// Object
// ======
//

// ES5 15.2.3.2
// http://es5.github.com/#x15.2.3.2
if (!Object.getPrototypeOf) {
    // https://github.com/kriskowal/es5-shim/issues#issue/2
    // http://ejohn.org/blog/objectgetprototypeof/
    // recommended by fschaefer on github
    Object.getPrototypeOf = function getPrototypeOf(object) {
        return object.__proto__ || (
            object.constructor ?
            object.constructor.prototype :
            prototypeOfObject
        );
    };
}

// ES5 15.2.3.3
// http://es5.github.com/#x15.2.3.3
if (!Object.getOwnPropertyDescriptor) {
    var ERR_NON_OBJECT = "Object.getOwnPropertyDescriptor called on a " +
                         "non-object: ";
    Object.getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {
        if ((typeof object != "object" && typeof object != "function") || object === null)
            throw new TypeError(ERR_NON_OBJECT + object);
        // If object does not owns property return undefined immediately.
        if (!owns(object, property))
            return;

        var descriptor, getter, setter;

        // If object has a property then it's for sure both `enumerable` and
        // `configurable`.
        descriptor =  { enumerable: true, configurable: true };

        // If JS engine supports accessor properties then property may be a
        // getter or setter.
        if (supportsAccessors) {
            // Unfortunately `__lookupGetter__` will return a getter even
            // if object has own non getter property along with a same named
            // inherited getter. To avoid misbehavior we temporary remove
            // `__proto__` so that `__lookupGetter__` will return getter only
            // if it's owned by an object.
            var prototype = object.__proto__;
            object.__proto__ = prototypeOfObject;

            var getter = lookupGetter(object, property);
            var setter = lookupSetter(object, property);

            // Once we have getter and setter we can put values back.
            object.__proto__ = prototype;

            if (getter || setter) {
                if (getter) descriptor.get = getter;
                if (setter) descriptor.set = setter;

                // If it was accessor property we're done and return here
                // in order to avoid adding `value` to the descriptor.
                return descriptor;
            }
        }

        // If we got this far we know that object has an own property that is
        // not an accessor so we set it as a value and return descriptor.
        descriptor.value = object[property];
        return descriptor;
    };
}

// ES5 15.2.3.4
// http://es5.github.com/#x15.2.3.4
if (!Object.getOwnPropertyNames) {
    Object.getOwnPropertyNames = function getOwnPropertyNames(object) {
        return Object.keys(object);
    };
}

// ES5 15.2.3.5
// http://es5.github.com/#x15.2.3.5
if (!Object.create) {
    var createEmpty;
    if (Object.prototype.__proto__ === null) {
        createEmpty = function () {
            return { "__proto__": null };
        };
    } else {
        // In old IE __proto__ can't be used to manually set `null`
        createEmpty = function () {
            var empty = {};
            for (var i in empty)
                empty[i] = null;
            empty.constructor =
            empty.hasOwnProperty =
            empty.propertyIsEnumerable =
            empty.isPrototypeOf =
            empty.toLocaleString =
            empty.toString =
            empty.valueOf =
            empty.__proto__ = null;
            return empty;
        }
    }

    Object.create = function create(prototype, properties) {
        var object;
        if (prototype === null) {
            object = createEmpty();
        } else {
            if (typeof prototype != "object")
                throw new TypeError("typeof prototype["+(typeof prototype)+"] != 'object'");
            var Type = function () {};
            Type.prototype = prototype;
            object = new Type();
            // IE has no built-in implementation of `Object.getPrototypeOf`
            // neither `__proto__`, but this manually setting `__proto__` will
            // guarantee that `Object.getPrototypeOf` will work as expected with
            // objects created using `Object.create`
            object.__proto__ = prototype;
        }
        if (properties !== void 0)
            Object.defineProperties(object, properties);
        return object;
    };
}

// ES5 15.2.3.6
// http://es5.github.com/#x15.2.3.6

// Patch for WebKit and IE8 standard mode
// Designed by hax <hax.github.com>
// related issue: https://github.com/kriskowal/es5-shim/issues#issue/5
// IE8 Reference:
//     http://msdn.microsoft.com/en-us/library/dd282900.aspx
//     http://msdn.microsoft.com/en-us/library/dd229916.aspx
// WebKit Bugs:
//     https://bugs.webkit.org/show_bug.cgi?id=36423

function doesDefinePropertyWork(object) {
    try {
        Object.defineProperty(object, "sentinel", {});
        return "sentinel" in object;
    } catch (exception) {
        // returns falsy
    }
}

// check whether defineProperty works if it's given. Otherwise,
// shim partially.
if (Object.defineProperty) {
    var definePropertyWorksOnObject = doesDefinePropertyWork({});
    var definePropertyWorksOnDom = typeof document == "undefined" ||
        doesDefinePropertyWork(document.createElement("div"));
    if (!definePropertyWorksOnObject || !definePropertyWorksOnDom) {
        var definePropertyFallback = Object.defineProperty;
    }
}

if (!Object.defineProperty || definePropertyFallback) {
    var ERR_NON_OBJECT_DESCRIPTOR = "Property description must be an object: ";
    var ERR_NON_OBJECT_TARGET = "Object.defineProperty called on non-object: "
    var ERR_ACCESSORS_NOT_SUPPORTED = "getters & setters can not be defined " +
                                      "on this javascript engine";

    Object.defineProperty = function defineProperty(object, property, descriptor) {
        if ((typeof object != "object" && typeof object != "function") || object === null)
            throw new TypeError(ERR_NON_OBJECT_TARGET + object);
        if ((typeof descriptor != "object" && typeof descriptor != "function") || descriptor === null)
            throw new TypeError(ERR_NON_OBJECT_DESCRIPTOR + descriptor);

        // make a valiant attempt to use the real defineProperty
        // for I8's DOM elements.
        if (definePropertyFallback) {
            try {
                return definePropertyFallback.call(Object, object, property, descriptor);
            } catch (exception) {
                // try the shim if the real one doesn't work
            }
        }

        // If it's a data property.
        if (owns(descriptor, "value")) {
            // fail silently if "writable", "enumerable", or "configurable"
            // are requested but not supported
            /*
            // alternate approach:
            if ( // can't implement these features; allow false but not true
                !(owns(descriptor, "writable") ? descriptor.writable : true) ||
                !(owns(descriptor, "enumerable") ? descriptor.enumerable : true) ||
                !(owns(descriptor, "configurable") ? descriptor.configurable : true)
            )
                throw new RangeError(
                    "This implementation of Object.defineProperty does not " +
                    "support configurable, enumerable, or writable."
                );
            */

            if (supportsAccessors && (lookupGetter(object, property) ||
                                      lookupSetter(object, property)))
            {
                // As accessors are supported only on engines implementing
                // `__proto__` we can safely override `__proto__` while defining
                // a property to make sure that we don't hit an inherited
                // accessor.
                var prototype = object.__proto__;
                object.__proto__ = prototypeOfObject;
                // Deleting a property anyway since getter / setter may be
                // defined on object itself.
                delete object[property];
                object[property] = descriptor.value;
                // Setting original `__proto__` back now.
                object.__proto__ = prototype;
            } else {
                object[property] = descriptor.value;
            }
        } else {
            if (!supportsAccessors)
                throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);
            // If we got that far then getters and setters can be defined !!
            if (owns(descriptor, "get"))
                defineGetter(object, property, descriptor.get);
            if (owns(descriptor, "set"))
                defineSetter(object, property, descriptor.set);
        }

        return object;
    };
}

// ES5 15.2.3.7
// http://es5.github.com/#x15.2.3.7
if (!Object.defineProperties) {
    Object.defineProperties = function defineProperties(object, properties) {
        for (var property in properties) {
            if (owns(properties, property))
                Object.defineProperty(object, property, properties[property]);
        }
        return object;
    };
}

// ES5 15.2.3.8
// http://es5.github.com/#x15.2.3.8
if (!Object.seal) {
    Object.seal = function seal(object) {
        // this is misleading and breaks feature-detection, but
        // allows "securable" code to "gracefully" degrade to working
        // but insecure code.
        return object;
    };
}

// ES5 15.2.3.9
// http://es5.github.com/#x15.2.3.9
if (!Object.freeze) {
    Object.freeze = function freeze(object) {
        // this is misleading and breaks feature-detection, but
        // allows "securable" code to "gracefully" degrade to working
        // but insecure code.
        return object;
    };
}

// detect a Rhino bug and patch it
try {
    Object.freeze(function () {});
} catch (exception) {
    Object.freeze = (function freeze(freezeObject) {
        return function freeze(object) {
            if (typeof object == "function") {
                return object;
            } else {
                return freezeObject(object);
            }
        };
    })(Object.freeze);
}

// ES5 15.2.3.10
// http://es5.github.com/#x15.2.3.10
if (!Object.preventExtensions) {
    Object.preventExtensions = function preventExtensions(object) {
        // this is misleading and breaks feature-detection, but
        // allows "securable" code to "gracefully" degrade to working
        // but insecure code.
        return object;
    };
}

// ES5 15.2.3.11
// http://es5.github.com/#x15.2.3.11
if (!Object.isSealed) {
    Object.isSealed = function isSealed(object) {
        return false;
    };
}

// ES5 15.2.3.12
// http://es5.github.com/#x15.2.3.12
if (!Object.isFrozen) {
    Object.isFrozen = function isFrozen(object) {
        return false;
    };
}

// ES5 15.2.3.13
// http://es5.github.com/#x15.2.3.13
if (!Object.isExtensible) {
    Object.isExtensible = function isExtensible(object) {
        // 1. If Type(O) is not Object throw a TypeError exception.
        if (Object(object) === object) {
            throw new TypeError(); // TODO message
        }
        // 2. Return the Boolean value of the [[Extensible]] internal property of O.
        var name = '';
        while (owns(object, name)) {
            name += '?';
        }
        object[name] = true;
        var returnValue = owns(object, name);
        delete object[name];
        return returnValue;
    };
}

// ES5 15.2.3.14
// http://es5.github.com/#x15.2.3.14
if (!Object.keys) {
    // http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation
    var hasDontEnumBug = true,
        dontEnums = [
            "toString",
            "toLocaleString",
            "valueOf",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "constructor"
        ],
        dontEnumsLength = dontEnums.length;

    for (var key in {"toString": null}) {
        hasDontEnumBug = false;
    }

    Object.keys = function keys(object) {

        if (
            (typeof object != "object" && typeof object != "function") ||
            object === null
        ) {
            throw new TypeError("Object.keys called on a non-object");
        }

        var keys = [];
        for (var name in object) {
            if (owns(object, name)) {
                keys.push(name);
            }
        }

        if (hasDontEnumBug) {
            for (var i = 0, ii = dontEnumsLength; i < ii; i++) {
                var dontEnum = dontEnums[i];
                if (owns(object, dontEnum)) {
                    keys.push(dontEnum);
                }
            }
        }
        return keys;
    };

}

//
// most of es5-shim Date section is removed since ace doesn't need it, it is too intrusive and it causes problems for users
// ====
//

// ES5 15.9.4.4
// http://es5.github.com/#x15.9.4.4
if (!Date.now) {
    Date.now = function now() {
        return new Date().getTime();
    };
}


//
// String
// ======
//

// ES5 15.5.4.20
// http://es5.github.com/#x15.5.4.20
var ws = "\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003" +
    "\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028" +
    "\u2029\uFEFF";
if (!String.prototype.trim || ws.trim()) {
    // http://blog.stevenlevithan.com/archives/faster-trim-javascript
    // http://perfectionkills.com/whitespace-deviations/
    ws = "[" + ws + "]";
    var trimBeginRegexp = new RegExp("^" + ws + ws + "*"),
        trimEndRegexp = new RegExp(ws + ws + "*$");
    String.prototype.trim = function trim() {
        return String(this).replace(trimBeginRegexp, "").replace(trimEndRegexp, "");
    };
}

//
// Util
// ======
//

// ES5 9.4
// http://es5.github.com/#x9.4
// http://jsperf.com/to-integer

function toInteger(n) {
    n = +n;
    if (n !== n) { // isNaN
        n = 0;
    } else if (n !== 0 && n !== (1/0) && n !== -(1/0)) {
        n = (n > 0 || -1) * Math.floor(Math.abs(n));
    }
    return n;
}

function isPrimitive(input) {
    var type = typeof input;
    return (
        input === null ||
        type === "undefined" ||
        type === "boolean" ||
        type === "number" ||
        type === "string"
    );
}

function toPrimitive(input) {
    var val, valueOf, toString;
    if (isPrimitive(input)) {
        return input;
    }
    valueOf = input.valueOf;
    if (typeof valueOf === "function") {
        val = valueOf.call(input);
        if (isPrimitive(val)) {
            return val;
        }
    }
    toString = input.toString;
    if (typeof toString === "function") {
        val = toString.call(input);
        if (isPrimitive(val)) {
            return val;
        }
    }
    throw new TypeError();
}

// ES5 9.9
// http://es5.github.com/#x9.9
var toObject = function (o) {
    if (o == null) { // this matches both null and undefined
        throw new TypeError("can't convert "+o+" to object");
    }
    return Object(o);
};

});

// vim:set ts=4 sts=4 sw=4 st:
// -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License
// -- tlrobinson Tom Robinson Copyright (C) 2009-2010 MIT License (Narwhal Project)
// -- dantman Daniel Friesen Copyright(C) 2010 XXX No License Specified
// -- fschaefer Florian Schäfer Copyright (C) 2010 MIT License
// -- Irakli Gozalishvili Copyright (C) 2010 MIT License

/*!
    Copyright (c) 2009, 280 North Inc. http://280north.com/
    MIT License. http://github.com/280north/narwhal/blob/master/README.md
*/

define('ace/lib/fixoldbrowsers',['require','exports','module','./regexp','./es5-shim'],function(require, exports, module) {


require("./regexp");
require("./es5-shim");

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/lib/dom',['require','exports','module'],function(require, exports, module) {


if (typeof document == "undefined")
    return;

var XHTML_NS = "http://www.w3.org/1999/xhtml";

exports.getDocumentHead = function(doc) {
    if (!doc)
        doc = document;
    return doc.head || doc.getElementsByTagName("head")[0] || doc.documentElement;
}

exports.createElement = function(tag, ns) {
    return document.createElementNS ?
           document.createElementNS(ns || XHTML_NS, tag) :
           document.createElement(tag);
};

exports.hasCssClass = function(el, name) {
    var classes = el.className.split(/\s+/g);
    return classes.indexOf(name) !== -1;
};

/*
* Add a CSS class to the list of classes on the given node
*/
exports.addCssClass = function(el, name) {
    if (!exports.hasCssClass(el, name)) {
        el.className += " " + name;
    }
};

/*
* Remove a CSS class from the list of classes on the given node
*/
exports.removeCssClass = function(el, name) {
    var classes = el.className.split(/\s+/g);
    while (true) {
        var index = classes.indexOf(name);
        if (index == -1) {
            break;
        }
        classes.splice(index, 1);
    }
    el.className = classes.join(" ");
};

exports.toggleCssClass = function(el, name) {
    var classes = el.className.split(/\s+/g), add = true;
    while (true) {
        var index = classes.indexOf(name);
        if (index == -1) {
            break;
        }
        add = false;
        classes.splice(index, 1);
    }
    if(add)
        classes.push(name);

    el.className = classes.join(" ");
    return add;
};

/*
 * Add or remove a CSS class from the list of classes on the given node
 * depending on the value of <tt>include</tt>
 */
exports.setCssClass = function(node, className, include) {
    if (include) {
        exports.addCssClass(node, className);
    } else {
        exports.removeCssClass(node, className);
    }
};

exports.hasCssString = function(id, doc) {
    var index = 0, sheets;
    doc = doc || document;

    if (doc.createStyleSheet && (sheets = doc.styleSheets)) {
        while (index < sheets.length)
            if (sheets[index++].owningElement.id === id) return true;
    } else if ((sheets = doc.getElementsByTagName("style"))) {
        while (index < sheets.length)
            if (sheets[index++].id === id) return true;
    }

    return false;
};

exports.importCssString = function importCssString(cssText, id, doc) {
    doc = doc || document;
    // If style is already imported return immediately.
    if (id && exports.hasCssString(id, doc))
        return null;
    
    var style;
    
    if (doc.createStyleSheet) {
        style = doc.createStyleSheet();
        style.cssText = cssText;
        if (id)
            style.owningElement.id = id;
    } else {
        style = doc.createElementNS
            ? doc.createElementNS(XHTML_NS, "style")
            : doc.createElement("style");

        style.appendChild(doc.createTextNode(cssText));
        if (id)
            style.id = id;

        exports.getDocumentHead(doc).appendChild(style);
    }
};

exports.importCssStylsheet = function(uri, doc) {
    if (doc.createStyleSheet) {
        doc.createStyleSheet(uri);
    } else {
        var link = exports.createElement('link');
        link.rel = 'stylesheet';
        link.href = uri;

        exports.getDocumentHead(doc).appendChild(link);
    }
};

exports.getInnerWidth = function(element) {
    return (
        parseInt(exports.computedStyle(element, "paddingLeft"), 10) +
        parseInt(exports.computedStyle(element, "paddingRight"), 10) + 
        element.clientWidth
    );
};

exports.getInnerHeight = function(element) {
    return (
        parseInt(exports.computedStyle(element, "paddingTop"), 10) +
        parseInt(exports.computedStyle(element, "paddingBottom"), 10) +
        element.clientHeight
    );
};

if (window.pageYOffset !== undefined) {
    exports.getPageScrollTop = function() {
        return window.pageYOffset;
    };

    exports.getPageScrollLeft = function() {
        return window.pageXOffset;
    };
}
else {
    exports.getPageScrollTop = function() {
        return document.body.scrollTop;
    };

    exports.getPageScrollLeft = function() {
        return document.body.scrollLeft;
    };
}

if (window.getComputedStyle)
    exports.computedStyle = function(element, style) {
        if (style)
            return (window.getComputedStyle(element, "") || {})[style] || "";
        return window.getComputedStyle(element, "") || {};
    };
else
    exports.computedStyle = function(element, style) {
        if (style)
            return element.currentStyle[style];
        return element.currentStyle;
    };

exports.scrollbarWidth = function(document) {
    var inner = exports.createElement("ace_inner");
    inner.style.width = "100%";
    inner.style.minWidth = "0px";
    inner.style.height = "200px";
    inner.style.display = "block";

    var outer = exports.createElement("ace_outer");
    var style = outer.style;

    style.position = "absolute";
    style.left = "-10000px";
    style.overflow = "hidden";
    style.width = "200px";
    style.minWidth = "0px";
    style.height = "150px";
    style.display = "block";

    outer.appendChild(inner);

    var body = document.documentElement;
    body.appendChild(outer);

    var noScrollbar = inner.offsetWidth;

    style.overflow = "scroll";
    var withScrollbar = inner.offsetWidth;

    if (noScrollbar == withScrollbar) {
        withScrollbar = outer.clientWidth;
    }

    body.removeChild(outer);

    return noScrollbar-withScrollbar;
};

/*
 * Optimized set innerHTML. This is faster than plain innerHTML if the element
 * already contains a lot of child elements.
 *
 * See http://blog.stevenlevithan.com/archives/faster-than-innerhtml for details
 */
exports.setInnerHtml = function(el, innerHtml) {
    var element = el.cloneNode(false);//document.createElement("div");
    element.innerHTML = innerHtml;
    el.parentNode.replaceChild(element, el);
    return element;
};

if ("textContent" in document.documentElement) {
    exports.setInnerText = function(el, innerText) {
        el.textContent = innerText;
    };

    exports.getInnerText = function(el) {
        return el.textContent;
    };
}
else {
    exports.setInnerText = function(el, innerText) {
        el.innerText = innerText;
    };

    exports.getInnerText = function(el) {
        return el.innerText;
    };
}

exports.getParentWindow = function(document) {
    return document.defaultView || document.parentWindow;
};

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/lib/oop',['require','exports','module'],function(require, exports, module) {


exports.inherits = (function() {
    var tempCtor = function() {};
    return function(ctor, superCtor) {
        tempCtor.prototype = superCtor.prototype;
        ctor.super_ = superCtor.prototype;
        ctor.prototype = new tempCtor();
        ctor.prototype.constructor = ctor;
    };
}());

exports.mixin = function(obj, mixin) {
    for (var key in mixin) {
        obj[key] = mixin[key];
    }
    return obj;
};

exports.implement = function(proto, mixin) {
    exports.mixin(proto, mixin);
};

});

/*! @license
==========================================================================
SproutCore -- JavaScript Application Framework
copyright 2006-2009, Sprout Systems Inc., Apple Inc. and contributors.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

SproutCore and the SproutCore logo are trademarks of Sprout Systems, Inc.

For more information about SproutCore, visit http://www.sproutcore.com


==========================================================================
@license */

// Most of the following code is taken from SproutCore with a few changes.

define('ace/lib/keys',['require','exports','module','./oop'],function(require, exports, module) {


var oop = require("./oop");

/*
 * Helper functions and hashes for key handling.
 */
var Keys = (function() {
    var ret = {
        MODIFIER_KEYS: {
            16: 'Shift', 17: 'Ctrl', 18: 'Alt', 224: 'Meta'
        },

        KEY_MODS: {
            "ctrl": 1, "alt": 2, "option" : 2,
            "shift": 4, "meta": 8, "command": 8, "cmd": 8
        },

        FUNCTION_KEYS : {
            8  : "Backspace",
            9  : "Tab",
            13 : "Return",
            19 : "Pause",
            27 : "Esc",
            32 : "Space",
            33 : "PageUp",
            34 : "PageDown",
            35 : "End",
            36 : "Home",
            37 : "Left",
            38 : "Up",
            39 : "Right",
            40 : "Down",
            44 : "Print",
            45 : "Insert",
            46 : "Delete",
            96 : "Numpad0",
            97 : "Numpad1",
            98 : "Numpad2",
            99 : "Numpad3",
            100: "Numpad4",
            101: "Numpad5",
            102: "Numpad6",
            103: "Numpad7",
            104: "Numpad8",
            105: "Numpad9",
            '-13': "NumpadEnter",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "Numlock",
            145: "Scrolllock"
        },

        PRINTABLE_KEYS: {
           32: ' ',  48: '0',  49: '1',  50: '2',  51: '3',  52: '4', 53:  '5',
           54: '6',  55: '7',  56: '8',  57: '9',  59: ';',  61: '=', 65:  'a',
           66: 'b',  67: 'c',  68: 'd',  69: 'e',  70: 'f',  71: 'g', 72:  'h',
           73: 'i',  74: 'j',  75: 'k',  76: 'l',  77: 'm',  78: 'n', 79:  'o',
           80: 'p',  81: 'q',  82: 'r',  83: 's',  84: 't',  85: 'u', 86:  'v',
           87: 'w',  88: 'x',  89: 'y',  90: 'z', 107: '+', 109: '-', 110: '.',
          188: ',', 190: '.', 191: '/', 192: '`', 219: '[', 220: '\\',
          221: ']', 222: '\''
        }
    };

    // A reverse map of FUNCTION_KEYS
    for (var i in ret.FUNCTION_KEYS) {
        var name = ret.FUNCTION_KEYS[i].toLowerCase();
        ret[name] = parseInt(i, 10);
    }

    // Add the MODIFIER_KEYS, FUNCTION_KEYS and PRINTABLE_KEYS to the KEY
    // variables as well.
    oop.mixin(ret, ret.MODIFIER_KEYS);
    oop.mixin(ret, ret.PRINTABLE_KEYS);
    oop.mixin(ret, ret.FUNCTION_KEYS);

    // aliases
    ret.enter = ret["return"];
    ret.escape = ret.esc;
    ret.del = ret["delete"];
    
    // workaround for firefox bug
    ret[173] = '-';

    return ret;
})();
oop.mixin(exports, Keys);

exports.keyCodeToString = function(keyCode) {
    return (Keys[keyCode] || String.fromCharCode(keyCode)).toLowerCase();
}

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/lib/useragent',['require','exports','module'],function(require, exports, module) {


/*
 * I hate doing this, but we need some way to determine if the user is on a Mac
 * The reason is that users have different expectations of their key combinations.
 *
 * Take copy as an example, Mac people expect to use CMD or APPLE + C
 * Windows folks expect to use CTRL + C
 */
exports.OS = {
    LINUX: "LINUX",
    MAC: "MAC",
    WINDOWS: "WINDOWS"
};

/*
 * Return an exports.OS constant
 */
exports.getOS = function() {
    if (exports.isMac) {
        return exports.OS.MAC;
    } else if (exports.isLinux) {
        return exports.OS.LINUX;
    } else {
        return exports.OS.WINDOWS;
    }
};

// this can be called in non browser environments (e.g. from ace/requirejs/text)
if (typeof navigator != "object")
    return;

var os = (navigator.platform.match(/mac|win|linux/i) || ["other"])[0].toLowerCase();
var ua = navigator.userAgent;

// Is the user using a browser that identifies itself as Windows
exports.isWin = (os == "win");

// Is the user using a browser that identifies itself as Mac OS
exports.isMac = (os == "mac");

// Is the user using a browser that identifies itself as Linux
exports.isLinux = (os == "linux");

// Windows Store JavaScript apps (aka Metro apps written in HTML5 and JavaScript) do not use the "Microsoft Internet Explorer" string in their user agent, but "MSAppHost" instead.
exports.isIE = 
    (navigator.appName == "Microsoft Internet Explorer" || navigator.appName.indexOf("MSAppHost") >= 0)
    && parseFloat(navigator.userAgent.match(/MSIE ([0-9]+[\.0-9]+)/)[1]);
    
exports.isOldIE = exports.isIE && exports.isIE < 9;

// Is this Firefox or related?
exports.isGecko = exports.isMozilla = window.controllers && window.navigator.product === "Gecko";

// oldGecko == rev < 2.0 
exports.isOldGecko = exports.isGecko && parseInt((navigator.userAgent.match(/rv\:(\d+)/)||[])[1], 10) < 4;

// Is this Opera 
exports.isOpera = window.opera && Object.prototype.toString.call(window.opera) == "[object Opera]";

// Is the user using a browser that identifies itself as WebKit 
exports.isWebKit = parseFloat(ua.split("WebKit/")[1]) || undefined;

exports.isChrome = parseFloat(ua.split(" Chrome/")[1]) || undefined;

exports.isAIR = ua.indexOf("AdobeAIR") >= 0;

exports.isIPad = ua.indexOf("iPad") >= 0;

exports.isTouchPad = ua.indexOf("TouchPad") >= 0;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/lib/event',['require','exports','module','./keys','./useragent','./dom'],function(require, exports, module) {


var keys = require("./keys");
var useragent = require("./useragent");
var dom = require("./dom");

exports.addListener = function(elem, type, callback) {
    if (elem.addEventListener) {
        return elem.addEventListener(type, callback, false);
    }
    if (elem.attachEvent) {
        var wrapper = function() {
            callback(window.event);
        };
        callback._wrapper = wrapper;
        elem.attachEvent("on" + type, wrapper);
    }
};

exports.removeListener = function(elem, type, callback) {
    if (elem.removeEventListener) {
        return elem.removeEventListener(type, callback, false);
    }
    if (elem.detachEvent) {
        elem.detachEvent("on" + type, callback._wrapper || callback);
    }
};

/*
* Prevents propagation and clobbers the default action of the passed event
*/
exports.stopEvent = function(e) {
    exports.stopPropagation(e);
    exports.preventDefault(e);
    return false;
};

exports.stopPropagation = function(e) {
    if (e.stopPropagation)
        e.stopPropagation();
    else
        e.cancelBubble = true;
};

exports.preventDefault = function(e) {
    if (e.preventDefault)
        e.preventDefault();
    else
        e.returnValue = false;
};

/*
 * @return {Number} 0 for left button, 1 for middle button, 2 for right button
 */
exports.getButton = function(e) {
    if (e.type == "dblclick")
        return 0;
    if (e.type == "contextmenu" || (e.ctrlKey && useragent.isMac))
        return 2;

    // DOM Event
    if (e.preventDefault) {
        return e.button;
    }
    // old IE
    else {
        return {1:0, 2:2, 4:1}[e.button];
    }
};

if (document.documentElement.setCapture) {
    exports.capture = function(el, eventHandler, releaseCaptureHandler) {
        var called = false;
        function onReleaseCapture(e) {
            eventHandler(e);

            if (!called) {
                called = true;
                releaseCaptureHandler(e);
            }

            exports.removeListener(el, "mousemove", eventHandler);
            exports.removeListener(el, "mouseup", onReleaseCapture);
            exports.removeListener(el, "losecapture", onReleaseCapture);

            el.releaseCapture();
        }

        exports.addListener(el, "mousemove", eventHandler);
        exports.addListener(el, "mouseup", onReleaseCapture);
        exports.addListener(el, "losecapture", onReleaseCapture);
        el.setCapture();
    };
}
else {
    exports.capture = function(el, eventHandler, releaseCaptureHandler) {
        function onMouseUp(e) {
            eventHandler && eventHandler(e);
            releaseCaptureHandler && releaseCaptureHandler(e);

            document.removeEventListener("mousemove", eventHandler, true);
            document.removeEventListener("mouseup", onMouseUp, true);
        }

        document.addEventListener("mousemove", eventHandler, true);
        document.addEventListener("mouseup", onMouseUp, true);
    };
}

exports.addMouseWheelListener = function(el, callback) {
    if ("onmousewheel" in el) {
        var factor = 8;
        exports.addListener(el, "mousewheel", function(e) {
            if (e.wheelDeltaX !== undefined) {
                e.wheelX = -e.wheelDeltaX / factor;
                e.wheelY = -e.wheelDeltaY / factor;
            } else {
                e.wheelX = 0;
                e.wheelY = -e.wheelDelta / factor;
            }
            callback(e);
        });
    } else if ("onwheel" in el) {
        exports.addListener(el, "wheel",  function(e) {
            e.wheelX = (e.deltaX || 0) * 5;
            e.wheelY = (e.deltaY || 0) * 5;
            callback(e);
        });
    } else {
        exports.addListener(el, "DOMMouseScroll", function(e) {
            if (e.axis && e.axis == e.HORIZONTAL_AXIS) {
                e.wheelX = (e.detail || 0) * 5;
                e.wheelY = 0;
            } else {
                e.wheelX = 0;
                e.wheelY = (e.detail || 0) * 5;
            }
            callback(e);
        });
    }
};

exports.addMultiMouseDownListener = function(el, timeouts, eventHandler, callbackName) {
    var clicks = 0;
    var startX, startY, timer;
    var eventNames = {
        2: "dblclick",
        3: "tripleclick",
        4: "quadclick"
    };

    exports.addListener(el, "mousedown", function(e) {
        if (exports.getButton(e) != 0) {
            clicks = 0;
        } else {
            var isNewClick = Math.abs(e.clientX - startX) > 5 || Math.abs(e.clientY - startY) > 5;

            if (!timer || isNewClick)
                clicks = 0;

            clicks += 1;

            if (timer)
                clearTimeout(timer)
            timer = setTimeout(function() {timer = null}, timeouts[clicks - 1] || 600);
        }
        if (clicks == 1) {
            startX = e.clientX;
            startY = e.clientY;
        }

        eventHandler[callbackName]("mousedown", e);

        if (clicks > 4)
            clicks = 0;
        else if (clicks > 1)
            return eventHandler[callbackName](eventNames[clicks], e);
    });

    if (useragent.isOldIE) {
        exports.addListener(el, "dblclick", function(e) {
            clicks = 2;
            if (timer)
                clearTimeout(timer);
            timer = setTimeout(function() {timer = null}, timeouts[clicks - 1] || 600);
            eventHandler[callbackName]("mousedown", e);
            eventHandler[callbackName](eventNames[clicks], e);
        });
    }
};

function normalizeCommandKeys(callback, e, keyCode) {
    var hashId = 0;
    if ((useragent.isOpera && !("KeyboardEvent" in window)) && useragent.isMac) {
        hashId = 0 | (e.metaKey ? 1 : 0) | (e.altKey ? 2 : 0)
            | (e.shiftKey ? 4 : 0) | (e.ctrlKey ? 8 : 0);
    } else {
        hashId = 0 | (e.ctrlKey ? 1 : 0) | (e.altKey ? 2 : 0)
            | (e.shiftKey ? 4 : 0) | (e.metaKey ? 8 : 0);
    }

    if (!useragent.isMac && pressedKeys) {
        if (pressedKeys[91] || pressedKeys[92])
            hashId |= 8;
        if (pressedKeys.altGr) {
            if ((3 & hashId) != 3)
                pressedKeys.altGr = 0
            else
                return;
        }
        if (keyCode === 18 || keyCode === 17) {
            var location = e.location || e.keyLocation;
            if (keyCode === 17 && location === 1) {
                ts = e.timeStamp;
            } else if (keyCode === 18 && hashId === 3 && location === 2) {
                var dt = -ts;
                ts = e.timeStamp;
                dt += ts;
                if (dt < 3)
                    pressedKeys.altGr = true;
            }
        }
    }
    
    if (keyCode in keys.MODIFIER_KEYS) {
        switch (keys.MODIFIER_KEYS[keyCode]) {
            case "Alt":
                hashId = 2;
                break;
            case "Shift":
                hashId = 4;
                break;
            case "Ctrl":
                hashId = 1;
                break;
            default:
                hashId = 8;
                break;
        }
        keyCode = 0;
    }

    if (hashId & 8 && (keyCode === 91 || keyCode === 93)) {
        keyCode = 0;
    }
    
    if (!hashId && keyCode === 13) {
        if (e.location || e.keyLocation === 3) {
            callback(e, hashId, -keyCode)
            if (e.defaultPrevented)
                return;
        }
    }
    

    // If there is no hashId and the keyCode is not a function key, then
    // we don't call the callback as we don't handle a command key here
    // (it's a normal key/character input).
    if (!hashId && !(keyCode in keys.FUNCTION_KEYS) && !(keyCode in keys.PRINTABLE_KEYS)) {
        return false;
    }
    
    
    
    return callback(e, hashId, keyCode);
}

var pressedKeys = null;
var ts = 0;
exports.addCommandKeyListener = function(el, callback) {
    var addListener = exports.addListener;
    if (useragent.isOldGecko || (useragent.isOpera && !("KeyboardEvent" in window))) {
        // Old versions of Gecko aka. Firefox < 4.0 didn't repeat the keydown
        // event if the user pressed the key for a longer time. Instead, the
        // keydown event was fired once and later on only the keypress event.
        // To emulate the 'right' keydown behavior, the keyCode of the initial
        // keyDown event is stored and in the following keypress events the
        // stores keyCode is used to emulate a keyDown event.
        var lastKeyDownKeyCode = null;
        addListener(el, "keydown", function(e) {
            lastKeyDownKeyCode = e.keyCode;
        });
        addListener(el, "keypress", function(e) {
            return normalizeCommandKeys(callback, e, lastKeyDownKeyCode);
        });
    } else {
        var lastDefaultPrevented = null;

        addListener(el, "keydown", function(e) {
            pressedKeys[e.keyCode] = true;
            var result = normalizeCommandKeys(callback, e, e.keyCode);
            lastDefaultPrevented = e.defaultPrevented;
            return result;
        });

        addListener(el, "keypress", function(e) {
            if (lastDefaultPrevented && (e.ctrlKey || e.altKey || e.shiftKey || e.metaKey)) {
                exports.stopEvent(e);
                lastDefaultPrevented = null;
            }
        });

        addListener(el, "keyup", function(e) {
            pressedKeys[e.keyCode] = null;
        });

        if (!pressedKeys) {
            pressedKeys = Object.create(null);
            addListener(window, "focus", function(e) {
                pressedKeys = Object.create(null);
            });
        }
    }
};

if (window.postMessage && !useragent.isOldIE) {
    var postMessageId = 1;
    exports.nextTick = function(callback, win) {
        win = win || window;
        var messageName = "zero-timeout-message-" + postMessageId;
        exports.addListener(win, "message", function listener(e) {
            if (e.data == messageName) {
                exports.stopPropagation(e);
                exports.removeListener(win, "message", listener);
                callback();
            }
        });
        win.postMessage(messageName, "*");
    };
}


exports.nextFrame = window.requestAnimationFrame ||
    window.mozRequestAnimationFrame ||
    window.webkitRequestAnimationFrame ||
    window.msRequestAnimationFrame ||
    window.oRequestAnimationFrame;

if (exports.nextFrame)
    exports.nextFrame = exports.nextFrame.bind(window);
else
    exports.nextFrame = function(callback) {
        setTimeout(callback, 17);
    };
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/lib/lang',['require','exports','module'],function(require, exports, module) {


exports.stringReverse = function(string) {
    return string.split("").reverse().join("");
};

exports.stringRepeat = function (string, count) {
    var result = '';
    while (count > 0) {
        if (count & 1)
            result += string;

        if (count >>= 1)
            string += string;
    }
    return result;
};

var trimBeginRegexp = /^\s\s*/;
var trimEndRegexp = /\s\s*$/;

exports.stringTrimLeft = function (string) {
    return string.replace(trimBeginRegexp, '');
};

exports.stringTrimRight = function (string) {
    return string.replace(trimEndRegexp, '');
};

exports.copyObject = function(obj) {
    var copy = {};
    for (var key in obj) {
        copy[key] = obj[key];
    }
    return copy;
};

exports.copyArray = function(array){
    var copy = [];
    for (var i=0, l=array.length; i<l; i++) {
        if (array[i] && typeof array[i] == "object")
            copy[i] = this.copyObject( array[i] );
        else 
            copy[i] = array[i];
    }
    return copy;
};

exports.deepCopy = function (obj) {
    if (typeof obj != "object") {
        return obj;
    }
    
    var copy = obj.constructor();
    for (var key in obj) {
        if (typeof obj[key] == "object") {
            copy[key] = this.deepCopy(obj[key]);
        } else {
            copy[key] = obj[key];
        }
    }
    return copy;
};

exports.arrayToMap = function(arr) {
    var map = {};
    for (var i=0; i<arr.length; i++) {
        map[arr[i]] = 1;
    }
    return map;

};

exports.createMap = function(props) {
    var map = Object.create(null);
    for (var i in props) {
        map[i] = props[i];
    }
    return map;
};

/*
 * splice out of 'array' anything that === 'value'
 */
exports.arrayRemove = function(array, value) {
  for (var i = 0; i <= array.length; i++) {
    if (value === array[i]) {
      array.splice(i, 1);
    }
  }
};

exports.escapeRegExp = function(str) {
    return str.replace(/([.*+?^${}()|[\]\/\\])/g, '\\$1');
};

exports.escapeHTML = function(str) {
    return str.replace(/&/g, "&#38;").replace(/"/g, "&#34;").replace(/'/g, "&#39;").replace(/</g, "&#60;");
};

exports.getMatchOffsets = function(string, regExp) {
    var matches = [];

    string.replace(regExp, function(str) {
        matches.push({
            offset: arguments[arguments.length-2],
            length: str.length
        });
    });

    return matches;
};

/* deprecated */
exports.deferredCall = function(fcn) {

    var timer = null;
    var callback = function() {
        timer = null;
        fcn();
    };

    var deferred = function(timeout) {
        deferred.cancel();
        timer = setTimeout(callback, timeout || 0);
        return deferred;
    };

    deferred.schedule = deferred;

    deferred.call = function() {
        this.cancel();
        fcn();
        return deferred;
    };

    deferred.cancel = function() {
        clearTimeout(timer);
        timer = null;
        return deferred;
    };

    return deferred;
};


exports.delayedCall = function(fcn, defaultTimeout) {
    var timer = null;
    var callback = function() {
        timer = null;
        fcn();
    };

    var _self = function(timeout) {
        timer && clearTimeout(timer);
        timer = setTimeout(callback, timeout || defaultTimeout);
    };

    _self.delay = _self;
    _self.schedule = function(timeout) {
        if (timer == null)
            timer = setTimeout(callback, timeout || 0);
    };

    _self.call = function() {
        this.cancel();
        fcn();
    };

    _self.cancel = function() {
        timer && clearTimeout(timer);
        timer = null;
    };

    _self.isPending = function() {
        return timer;
    };

    return _self;
};
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/keyboard/textinput',['require','exports','module','../lib/event','../lib/useragent','../lib/dom','../lib/lang'],function(require, exports, module) {


var event = require("../lib/event");
var useragent = require("../lib/useragent");
var dom = require("../lib/dom");
var lang = require("../lib/lang");
var BROKEN_SETDATA = useragent.isChrome < 18;

var TextInput = function(parentNode, host) {
    var text = dom.createElement("textarea");
    text.className = "ace_text-input";
    /*/ debug
    text.style.cssText = "opacity:1;background:rgba(0, 250, 0, 0.3);outline:rgba(0, 250, 0, 0.8) solid 1px;outline-offset:3px;width:5em;z-pindex:500";
    /**/
    if (useragent.isTouchPad)
        text.setAttribute("x-palm-disable-auto-cap", true);

    text.wrap = "off";
    text.autocorrect = "off";
    text.autocapitalize = "off";
    text.spellcheck = false;

    text.style.bottom = "2000em";
    parentNode.insertBefore(text, parentNode.firstChild);

    var PLACEHOLDER = "\x01\x01";

    var cut = false;
    var copied = false;
    var pasted = false;
    var inComposition = false;
    var tempStyle = '';
    var isSelectionEmpty = true;

    // FOCUS
    // ie9 throws error if document.activeElement is accessed too soon
    try { var isFocused = document.activeElement === text; } catch(e) {}
    
    event.addListener(text, "blur", function() {
        host.onBlur();
        isFocused = false;
    });
    event.addListener(text, "focus", function() {
        isFocused = true;
        host.onFocus();
        resetSelection();
    });
    this.focus = function() { text.focus(); };
    this.blur = function() { text.blur(); };
    this.isFocused = function() {
        return isFocused;
    };

    // modifying selection of blured textarea can focus it (chrome mac/linux)
    var syncSelection = lang.delayedCall(function() {
        isFocused && resetSelection(isSelectionEmpty);
    });
    var syncValue = lang.delayedCall(function() {
         if (!inComposition) {
            text.value = PLACEHOLDER;
            isFocused && resetSelection();
         }
    });

    function resetSelection(isEmpty) {
        if (inComposition)
            return;
        if (inputHandler) {
            selectionStart = 0;
            selectionEnd = isEmpty ? 0 : text.value.length - 1;
        } else {
            var selectionStart = isEmpty ? 2 : 1;
            var selectionEnd = 2;
        }
        // on firefox this throws if textarea is hidden
        try {
            text.setSelectionRange(selectionStart, selectionEnd);
        } catch(e){}
    }

    function resetValue() {
        if (inComposition)
            return;
        text.value = PLACEHOLDER;
        //http://code.google.com/p/chromium/issues/detail?id=76516
        if (useragent.isWebKit)
            syncValue.schedule();
    }

    useragent.isWebKit || host.addEventListener('changeSelection', function() {
        if (host.selection.isEmpty() != isSelectionEmpty) {
            isSelectionEmpty = !isSelectionEmpty;
            syncSelection.schedule();
        }
    });

    resetValue();
    if (isFocused)
        host.onFocus();


    var isAllSelected = function(text) {
        return text.selectionStart === 0 && text.selectionEnd === text.value.length;
    };
    // IE8 does not support setSelectionRange
    if (!text.setSelectionRange && text.createTextRange) {
        text.setSelectionRange = function(selectionStart, selectionEnd) {
            var range = this.createTextRange();
            range.collapse(true);
            range.moveStart('character', selectionStart);
            range.moveEnd('character', selectionEnd);
            range.select();
        };
        isAllSelected = function(text) {
            try {
                var range = text.ownerDocument.selection.createRange();
            }catch(e) {}
            if (!range || range.parentElement() != text) return false;
                return range.text == text.value;
        }
    }
    if (useragent.isOldIE) {
        var inPropertyChange = false;
        var onPropertyChange = function(e){
            if (inPropertyChange)
                return;
            var data = text.value;
            if (inComposition || !data || data == PLACEHOLDER)
                return;
            // can happen either after delete or during insert operation
            if (e && data == PLACEHOLDER[0])
                return syncProperty.schedule();

            sendText(data);
            // ie8 calls propertychange handlers synchronously!
            inPropertyChange = true;
            resetValue();
            inPropertyChange = false;
        };
        var syncProperty = lang.delayedCall(onPropertyChange);
        event.addListener(text, "propertychange", onPropertyChange);

        var keytable = { 13:1, 27:1 };
        event.addListener(text, "keyup", function (e) {
            if (inComposition && (!text.value || keytable[e.keyCode]))
                setTimeout(onCompositionEnd, 0);
            if ((text.value.charCodeAt(0)||0) < 129) {
                return syncProperty.call();
            }
            inComposition ? onCompositionUpdate() : onCompositionStart();
        });
        // when user presses backspace after focusing the editor 
        // propertychange isn't called for the next character
        event.addListener(text, "keydown", function (e) {
            syncProperty.schedule(50);
        });
    }

    var onSelect = function(e) {
        if (cut) {
            cut = false;
        } else if (copied) {
            copied = false;
        } else if (isAllSelected(text)) {
            host.selectAll();
            resetSelection();
        } else if (inputHandler) {
            resetSelection(host.selection.isEmpty());
        }
    };

    var inputHandler = null;
    this.setInputHandler = function(cb) {inputHandler = cb};
    this.getInputHandler = function() {return inputHandler};
    var afterContextMenu = false;
    
    var sendText = function(data) {
        if (inputHandler) {
            data = inputHandler(data);
            inputHandler = null;
        }
        if (pasted) {
            resetSelection();
            if (data)
                host.onPaste(data);
            pasted = false;
        } else if (data == PLACEHOLDER.charAt(0)) {
            if (afterContextMenu)
                host.execCommand("del", {source: "ace"});
        } else {
            if (data.substring(0, 2) == PLACEHOLDER)
                data = data.substr(2);
            else if (data.charAt(0) == PLACEHOLDER.charAt(0))
                data = data.substr(1);
            else if (data.charAt(data.length - 1) == PLACEHOLDER.charAt(0))
                data = data.slice(0, -1);
            // can happen if undo in textarea isn't stopped
            if (data.charAt(data.length - 1) == PLACEHOLDER.charAt(0))
                data = data.slice(0, -1);
            
            if (data)
                host.onTextInput(data);
        }
        if (afterContextMenu)
            afterContextMenu = false;
    };
    var onInput = function(e) {
        // console.log("onInput", inComposition)
        if (inComposition)
            return;
        var data = text.value;
        sendText(data);
        resetValue();
    };

    var onCut = function(e) {
        var data = host.getCopyText();
        if (!data) {
            event.preventDefault(e);
            return;
        }

        var clipboardData = e.clipboardData || window.clipboardData;

        if (clipboardData && !BROKEN_SETDATA) {
            // Safari 5 has clipboardData object, but does not handle setData()
            var supported = clipboardData.setData("Text", data);
            if (supported) {
                host.onCut();
                event.preventDefault(e);
            }
        }

        if (!supported) {
            cut = true;
            text.value = data;
            text.select();
            setTimeout(function(){
                cut = false;
                resetValue();
                resetSelection();
                host.onCut();
            });
        }
    };

    var onCopy = function(e) {
        var data = host.getCopyText();
        if (!data) {
            event.preventDefault(e);
            return;
        }

        var clipboardData = e.clipboardData || window.clipboardData;
        if (clipboardData && !BROKEN_SETDATA) {
            // Safari 5 has clipboardData object, but does not handle setData()
            var supported = clipboardData.setData("Text", data);
            if (supported) {
                host.onCopy();
                event.preventDefault(e);
            }
        }
        if (!supported) {
            copied = true;
            text.value = data;
            text.select();
            setTimeout(function(){
                copied = false;
                resetValue();
                resetSelection();
                host.onCopy();
            });
        }
    };

    var onPaste = function(e) {
        var clipboardData = e.clipboardData || window.clipboardData;

        if (clipboardData) {
            var data = clipboardData.getData("Text");
            if (data)
                host.onPaste(data);
            if (useragent.isIE)
                setTimeout(resetSelection);
            event.preventDefault(e);
        }
        else {
            text.value = "";
            pasted = true;
        }
    };

    event.addCommandKeyListener(text, host.onCommandKey.bind(host));

    event.addListener(text, "select", onSelect);

    event.addListener(text, "input", onInput);

    event.addListener(text, "cut", onCut);
    event.addListener(text, "copy", onCopy);
    event.addListener(text, "paste", onPaste);


    // Opera has no clipboard events
    if (!('oncut' in text) || !('oncopy' in text) || !('onpaste' in text)){
        event.addListener(parentNode, "keydown", function(e) {
            if ((useragent.isMac && !e.metaKey) || !e.ctrlKey)
            return;

            switch (e.keyCode) {
                case 67:
                    onCopy(e);
                    break;
                case 86:
                    onPaste(e);
                    break;
                case 88:
                    onCut(e);
                    break;
            }
        });
    }


    // COMPOSITION
    var onCompositionStart = function(e) {
        if (inComposition) return;
        // console.log("onCompositionStart", inComposition)
        inComposition = {};
        host.onCompositionStart();
        setTimeout(onCompositionUpdate, 0);
        host.on("mousedown", onCompositionEnd);
        if (!host.selection.isEmpty()) {
            host.insert("");
            host.session.markUndoGroup();
            host.selection.clearSelection();
        }
        host.session.markUndoGroup();
    };

    var onCompositionUpdate = function() {
        // console.log("onCompositionUpdate", inComposition && JSON.stringify(text.value))
        if (!inComposition) return;
        host.onCompositionUpdate(text.value);
        if (inComposition.lastValue)
            host.undo();
        inComposition.lastValue = text.value.replace(/\x01/g, "")
        if (inComposition.lastValue) {
            var r = host.selection.getRange();
            host.insert(inComposition.lastValue);
            host.session.markUndoGroup();
            inComposition.range = host.selection.getRange();
            host.selection.setRange(r);
            host.selection.clearSelection();
        }
    };

    var onCompositionEnd = function(e) {
        // console.log("onCompositionEnd", inComposition &&inComposition.lastValue)
        var c = inComposition;
        inComposition = false;
        var timer = setTimeout(function() {
            var str = text.value.replace(/\x01/g, "");
            // console.log(str, c.lastValue)
            if (inComposition)
                return
            else if (str == c.lastValue)
                resetValue();
            else if (!c.lastValue && str) {
                resetValue();
                sendText(str);
            }
        });
        inputHandler = function compositionInputHandler(str) {
            // console.log("onCompositionEnd", str, c.lastValue)
            clearTimeout(timer);
            str = str.replace(/\x01/g, "");
            if (str == c.lastValue)
                return "";
            if (c.lastValue)
                host.undo();
            return str;
        }        
        host.onCompositionEnd();
        host.removeListener("mousedown", onCompositionEnd);
        if (e.type == "compositionend" && c.range) {
            host.selection.setRange(c.range);
        }
    };
    
    

    var syncComposition = lang.delayedCall(onCompositionUpdate, 50);

    event.addListener(text, "compositionstart", onCompositionStart);
    event.addListener(text, useragent.isGecko ? "text" : "keyup", function(){syncComposition.schedule()});
    event.addListener(text, "compositionend", onCompositionEnd);

    this.getElement = function() {
        return text;
    };

    this.setReadOnly = function(readOnly) {
       text.readOnly = readOnly;
    };

    this.onContextMenu = function(e) {
        afterContextMenu = true;
        if (!tempStyle)
            tempStyle = text.style.cssText;

        text.style.cssText = "z-index:100000;" + (useragent.isIE ? "opacity:0.1;" : "");
        //debug*/ text.style.cssText += "background:rgba(250, 0, 0, 0.3); opacity:1;";

        resetSelection(host.selection.isEmpty());
        host._emit("nativecontextmenu", {target: host, domEvent: e});
        var rect = host.container.getBoundingClientRect();
        var style = dom.computedStyle(host.container);
        var top = rect.top + (parseInt(style.borderTopWidth) || 0);
        var left = rect.left + (parseInt(rect.borderLeftWidth) || 0);
        var maxTop = rect.bottom - top - text.clientHeight;
        var move = function(e) {
            text.style.left = e.clientX - left - 2 + "px";
            text.style.top = Math.min(e.clientY - top - 2, maxTop) + "px";
        }; 
        move(e);

        if (e.type != "mousedown")
            return;

        if (host.renderer.$keepTextAreaAtCursor)
            host.renderer.$keepTextAreaAtCursor = null;

        // on windows context menu is opened after mouseup
        if (useragent.isWin)
            event.capture(host.container, move, onContextMenuClose);
    };

    this.onContextMenuClose = onContextMenuClose;
    function onContextMenuClose() {
        setTimeout(function () {
            if (tempStyle) {
                text.style.cssText = tempStyle;
                tempStyle = '';
            }
            if (host.renderer.$keepTextAreaAtCursor == null) {
                host.renderer.$keepTextAreaAtCursor = true;
                host.renderer.$moveTextAreaToCursor();
            }
        }, 0);
    }

    // firefox fires contextmenu event after opening it
    if (!useragent.isGecko || useragent.isMac) {
        event.addListener(text, "contextmenu", function(e) {
            host.textInput.onContextMenu(e);
            onContextMenuClose();
        });
    }
};

exports.TextInput = TextInput;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mouse/default_handlers',['require','exports','module','../lib/dom','../lib/useragent'],function(require, exports, module) {


var dom = require("../lib/dom");
var useragent = require("../lib/useragent");

var DRAG_OFFSET = 0; // pixels

function DefaultHandlers(mouseHandler) {
    mouseHandler.$clickSelection = null;

    var editor = mouseHandler.editor;
    editor.setDefaultHandler("mousedown", this.onMouseDown.bind(mouseHandler));
    editor.setDefaultHandler("dblclick", this.onDoubleClick.bind(mouseHandler));
    editor.setDefaultHandler("tripleclick", this.onTripleClick.bind(mouseHandler));
    editor.setDefaultHandler("quadclick", this.onQuadClick.bind(mouseHandler));
    editor.setDefaultHandler("mousewheel", this.onMouseWheel.bind(mouseHandler));

    var exports = ["select", "startSelect", "drag", "dragEnd", "dragWait",
        "dragWaitEnd", "startDrag", "focusWait"];

    exports.forEach(function(x) {
        mouseHandler[x] = this[x];
    }, this);

    mouseHandler.selectByLines = this.extendSelectionBy.bind(mouseHandler, "getLineRange");
    mouseHandler.selectByWords = this.extendSelectionBy.bind(mouseHandler, "getWordRange");
}

(function() {

    this.onMouseDown = function(ev) {
        var inSelection = ev.inSelection();
        var pos = ev.getDocumentPosition();
        this.mousedownEvent = ev;
        var editor = this.editor;

        var button = ev.getButton();
        if (button !== 0) {
            var selectionRange = editor.getSelectionRange();
            var selectionEmpty = selectionRange.isEmpty();

            if (selectionEmpty) {
                editor.moveCursorToPosition(pos);
                editor.selection.clearSelection();
            }

            // 2: contextmenu, 1: linux paste
            editor.textInput.onContextMenu(ev.domEvent);
            return; // stopping event here breaks contextmenu on ff mac
        }

        // if this click caused the editor to be focused should not clear the
        // selection
        if (inSelection && !editor.isFocused()) {
            editor.focus();
            if (this.$focusTimout && !this.$clickSelection && !editor.inMultiSelectMode) {
                this.setState("focusWait");
                this.captureMouse(ev);
                return ev.preventDefault();
            }
        }

        if (!inSelection || this.$clickSelection || ev.getShiftKey() || editor.inMultiSelectMode) {
            // Directly pick STATE_SELECT, since the user is not clicking inside
            // a selection.
            this.startSelect(pos);
        } else if (inSelection) {
            this.mousedownEvent.time = (new Date()).getTime();
            this.setState("dragWait");
        }

        this.captureMouse(ev);
        return ev.preventDefault();
    };

    this.startSelect = function(pos) {
        pos = pos || this.editor.renderer.screenToTextCoordinates(this.x, this.y);
        if (this.mousedownEvent.getShiftKey()) {
            this.editor.selection.selectToPosition(pos);
        }
        else if (!this.$clickSelection) {
            this.editor.moveCursorToPosition(pos);
            this.editor.selection.clearSelection();
        }
        this.setState("select");
    };

    this.select = function() {
        var anchor, editor = this.editor;
        var cursor = editor.renderer.screenToTextCoordinates(this.x, this.y);

        if (this.$clickSelection) {
            var cmp = this.$clickSelection.comparePoint(cursor);

            if (cmp == -1) {
                anchor = this.$clickSelection.end;
            } else if (cmp == 1) {
                anchor = this.$clickSelection.start;
            } else {
                var orientedRange = calcRangeOrientation(this.$clickSelection, cursor);
                cursor = orientedRange.cursor;
                anchor = orientedRange.anchor;
            }
            editor.selection.setSelectionAnchor(anchor.row, anchor.column);
        }
        editor.selection.selectToPosition(cursor);

        editor.renderer.scrollCursorIntoView();
    };

    this.extendSelectionBy = function(unitName) {
        var anchor, editor = this.editor;
        var cursor = editor.renderer.screenToTextCoordinates(this.x, this.y);
        var range = editor.selection[unitName](cursor.row, cursor.column);

        if (this.$clickSelection) {
            var cmpStart = this.$clickSelection.comparePoint(range.start);
            var cmpEnd = this.$clickSelection.comparePoint(range.end);

            if (cmpStart == -1 && cmpEnd <= 0) {
                anchor = this.$clickSelection.end;
                if (range.end.row != cursor.row || range.end.column != cursor.column)
                    cursor = range.start;
            } else if (cmpEnd == 1 && cmpStart >= 0) {
                anchor = this.$clickSelection.start;
                if (range.start.row != cursor.row || range.start.column != cursor.column)
                    cursor = range.end;
            } else if (cmpStart == -1 && cmpEnd == 1) {
                cursor = range.end;
                anchor = range.start;
            } else {
                var orientedRange = calcRangeOrientation(this.$clickSelection, cursor);
                cursor = orientedRange.cursor;
                anchor = orientedRange.anchor;
            }
            editor.selection.setSelectionAnchor(anchor.row, anchor.column);
        }
        editor.selection.selectToPosition(cursor);

        editor.renderer.scrollCursorIntoView();
    };

    this.startDrag = function() {
        var editor = this.editor;
        this.setState("drag");
        this.dragRange = editor.getSelectionRange();
        var style = editor.getSelectionStyle();
        this.dragSelectionMarker = editor.session.addMarker(this.dragRange, "ace_selection", style);
        editor.clearSelection();
        dom.addCssClass(editor.container, "ace_dragging");
        if (!this.$dragKeybinding) {
            this.$dragKeybinding = {
                handleKeyboard: function(data, hashId, keyString, keyCode) {
                    if (keyString == "esc")
                        return {command: this.command};
                },
                command: {
                    exec: function(editor) {
                        var self = editor.$mouseHandler;
                        self.dragCursor = null;
                        self.dragEnd();
                        self.startSelect();
                    }
                }
            }
        }

        editor.keyBinding.addKeyboardHandler(this.$dragKeybinding);
    };

    this.focusWait = function() {
        var distance = calcDistance(this.mousedownEvent.x, this.mousedownEvent.y, this.x, this.y);
        var time = (new Date()).getTime();

        if (distance > DRAG_OFFSET || time - this.mousedownEvent.time > this.$focusTimout)
            this.startSelect(this.mousedownEvent.getDocumentPosition());
    };

    this.dragWait = function(e) {
        var distance = calcDistance(this.mousedownEvent.x, this.mousedownEvent.y, this.x, this.y);
        var time = (new Date()).getTime();
        var editor = this.editor;

        if (distance > DRAG_OFFSET) {
            this.startSelect(this.mousedownEvent.getDocumentPosition());
        } else if (time - this.mousedownEvent.time > editor.$mouseHandler.$dragDelay) {
            this.startDrag();
        }
    };

    this.dragWaitEnd = function(e) {
        this.mousedownEvent.domEvent = e;
        this.startSelect();
    };

    this.drag = function() {
        var editor = this.editor;
        this.dragCursor = editor.renderer.screenToTextCoordinates(this.x, this.y);
        editor.moveCursorToPosition(this.dragCursor);
        editor.renderer.scrollCursorIntoView();
    };

    this.dragEnd = function(e) {
        var editor = this.editor;
        var dragCursor = this.dragCursor;
        var dragRange = this.dragRange;
        dom.removeCssClass(editor.container, "ace_dragging");
        editor.session.removeMarker(this.dragSelectionMarker);
        editor.keyBinding.removeKeyboardHandler(this.$dragKeybinding);

        if (!dragCursor)
            return;

        editor.clearSelection();
        if (e && (e.ctrlKey || e.altKey)) {
            var session = editor.session;
            var newRange = dragRange;
            newRange.end = session.insert(dragCursor, session.getTextRange(dragRange));
            newRange.start = dragCursor;
        } else if (dragRange.contains(dragCursor.row, dragCursor.column)) {
            return;
        } else {
            var newRange = editor.moveText(dragRange, dragCursor);
        }

        if (!newRange)
            return;

        editor.selection.setSelectionRange(newRange);
    };

    this.onDoubleClick = function(ev) {
        var pos = ev.getDocumentPosition();
        var editor = this.editor;
        var session = editor.session;

        var range = session.getBracketRange(pos);
        if (range) {
            if (range.isEmpty()) {
                range.start.column--;
                range.end.column++;
            }
            this.$clickSelection = range;
            this.setState("select");
            return;
        }

        this.$clickSelection = editor.selection.getWordRange(pos.row, pos.column);
        this.setState("selectByWords");
    };

    this.onTripleClick = function(ev) {
        var pos = ev.getDocumentPosition();
        var editor = this.editor;

        this.setState("selectByLines");
        this.$clickSelection = editor.selection.getLineRange(pos.row);
    };

    this.onQuadClick = function(ev) {
        var editor = this.editor;

        editor.selectAll();
        this.$clickSelection = editor.getSelectionRange();
        this.setState("null");
    };

    this.onMouseWheel = function(ev) {
        if (ev.getShiftKey() || ev.getAccelKey())
            return;
        var t = ev.domEvent.timeStamp;
        var dt = t - (this.$lastScrollTime||0);
        
        var editor = this.editor;
        var isScrolable = editor.renderer.isScrollableBy(ev.wheelX * ev.speed, ev.wheelY * ev.speed);
        if (isScrolable || dt < 200) {
            this.$lastScrollTime = t;
            editor.renderer.scrollBy(ev.wheelX * ev.speed, ev.wheelY * ev.speed);
            return ev.stop();
        }
    };

}).call(DefaultHandlers.prototype);

exports.DefaultHandlers = DefaultHandlers;

function calcDistance(ax, ay, bx, by) {
    return Math.sqrt(Math.pow(bx - ax, 2) + Math.pow(by - ay, 2));
}

function calcRangeOrientation(range, cursor) {
    if (range.start.row == range.end.row)
        var cmp = 2 * cursor.column - range.start.column - range.end.column;
    else if (range.start.row == range.end.row - 1 && !range.start.column && !range.end.column)
        var cmp = cursor.column - 4;
    else
        var cmp = 2 * cursor.row - range.start.row - range.end.row;

    if (cmp < 0)
        return {cursor: range.start, anchor: range.end};
    else
        return {cursor: range.end, anchor: range.start};
}

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mouse/default_gutter_handler',['require','exports','module','../lib/dom','../lib/event'],function(require, exports, module) {

var dom = require("../lib/dom");
var event = require("../lib/event");

function GutterHandler(mouseHandler) {
    var editor = mouseHandler.editor;
    var gutter = editor.renderer.$gutterLayer;

    mouseHandler.editor.setDefaultHandler("guttermousedown", function(e) {
        if (!editor.isFocused() || e.getButton() != 0)
            return;
        var gutterRegion = gutter.getRegion(e);

        if (gutterRegion == "foldWidgets")
            return;

        var row = e.getDocumentPosition().row;
        var selection = editor.session.selection;

        if (e.getShiftKey())
            selection.selectTo(row, 0);
        else {
            if (e.domEvent.detail == 2) {
                editor.selectAll();
                return e.preventDefault();
            }
            mouseHandler.$clickSelection = editor.selection.getLineRange(row);
        }
        mouseHandler.captureMouse(e, "selectByLines");
        return e.preventDefault();
    });


    var tooltipTimeout, mouseEvent, tooltip, tooltipAnnotation;
    function createTooltip() {
        tooltip = dom.createElement("div");
        tooltip.className = "ace_gutter-tooltip";
        tooltip.style.display = "none";
        editor.container.appendChild(tooltip);
    }

    function showTooltip() {
        if (!tooltip) {
            createTooltip();
        }
        var row = mouseEvent.getDocumentPosition().row;
        var annotation = gutter.$annotations[row];
        if (!annotation)
            return hideTooltip();

        var maxRow = editor.session.getLength();
        if (row == maxRow) {
            var screenRow = editor.renderer.pixelToScreenCoordinates(0, mouseEvent.y).row;
            var pos = mouseEvent.$pos;
            if (screenRow > editor.session.documentToScreenRow(pos.row, pos.column))
                return hideTooltip();
        }

        if (tooltipAnnotation == annotation)
            return;
        tooltipAnnotation = annotation.text.join("<br/>");

        tooltip.style.display = "block";
        tooltip.innerHTML = tooltipAnnotation;
        editor.on("mousewheel", hideTooltip);

        moveTooltip(mouseEvent);
    }

    function hideTooltip() {
        if (tooltipTimeout)
            tooltipTimeout = clearTimeout(tooltipTimeout);
        if (tooltipAnnotation) {
            tooltip.style.display = "none";
            tooltipAnnotation = null;
            editor.removeEventListener("mousewheel", hideTooltip);
        }
    }

    function moveTooltip(e) {
        var rect = editor.renderer.$gutter.getBoundingClientRect();
        tooltip.style.left = e.x + 15 + "px";
        if (e.y + 3 * editor.renderer.lineHeight + 15 < rect.bottom) {
            tooltip.style.bottom =  "";
            tooltip.style.top =  e.y + 15 + "px";
        } else {
            tooltip.style.top =  "";
            tooltip.style.bottom = rect.bottom - e.y + 5 + "px";
        }
    }

    mouseHandler.editor.setDefaultHandler("guttermousemove", function(e) {
        var target = e.domEvent.target || e.domEvent.srcElement;
        if (dom.hasCssClass(target, "ace_fold-widget"))
            return hideTooltip();

        if (tooltipAnnotation)
            moveTooltip(e);

        mouseEvent = e;
        if (tooltipTimeout)
            return;
        tooltipTimeout = setTimeout(function() {
            tooltipTimeout = null;
            if (mouseEvent && !mouseHandler.isMousePressed)
                showTooltip();
            else
                hideTooltip();
        }, 50);
    });

    event.addListener(editor.renderer.$gutter, "mouseout", function(e) {
        mouseEvent = null;
        if (!tooltipAnnotation || tooltipTimeout)
            return;

        tooltipTimeout = setTimeout(function() {
            tooltipTimeout = null;
            hideTooltip();
        }, 50);
    });
    
    editor.on("changeSession", hideTooltip);
}

exports.GutterHandler = GutterHandler;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mouse/mouse_event',['require','exports','module','../lib/event','../lib/useragent'],function(require, exports, module) {


var event = require("../lib/event");
var useragent = require("../lib/useragent");

/*
 * Custom Ace mouse event
 */
var MouseEvent = exports.MouseEvent = function(domEvent, editor) {
    this.domEvent = domEvent;
    this.editor = editor;
    
    this.x = this.clientX = domEvent.clientX;
    this.y = this.clientY = domEvent.clientY;

    this.$pos = null;
    this.$inSelection = null;
    
    this.propagationStopped = false;
    this.defaultPrevented = false;
};

(function() {  
    
    this.stopPropagation = function() {
        event.stopPropagation(this.domEvent);
        this.propagationStopped = true;
    };
    
    this.preventDefault = function() {
        event.preventDefault(this.domEvent);
        this.defaultPrevented = true;
    };
    
    this.stop = function() {
        this.stopPropagation();
        this.preventDefault();
    };

    /*
     * Get the document position below the mouse cursor
     * 
     * @return {Object} 'row' and 'column' of the document position
     */
    this.getDocumentPosition = function() {
        if (this.$pos)
            return this.$pos;
        
        this.$pos = this.editor.renderer.screenToTextCoordinates(this.clientX, this.clientY);
        return this.$pos;
    };
    
    /*
     * Check if the mouse cursor is inside of the text selection
     * 
     * @return {Boolean} whether the mouse cursor is inside of the selection
     */
    this.inSelection = function() {
        if (this.$inSelection !== null)
            return this.$inSelection;
            
        var editor = this.editor;
        
        if (editor.getReadOnly()) {
            this.$inSelection = false;
        }
        else {
            var selectionRange = editor.getSelectionRange();
            if (selectionRange.isEmpty())
                this.$inSelection = false;
            else {
                var pos = this.getDocumentPosition();
                this.$inSelection = selectionRange.contains(pos.row, pos.column);
            }
        }
        return this.$inSelection;
    };
    
    /*
     * Get the clicked mouse button
     * 
     * @return {Number} 0 for left button, 1 for middle button, 2 for right button
     */
    this.getButton = function() {
        return event.getButton(this.domEvent);
    };
    
    /*
     * @return {Boolean} whether the shift key was pressed when the event was emitted
     */
    this.getShiftKey = function() {
        return this.domEvent.shiftKey;
    };
    
    this.getAccelKey = useragent.isMac
        ? function() { return this.domEvent.metaKey; }
        : function() { return this.domEvent.ctrlKey; };
    
}).call(MouseEvent.prototype);

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mouse/dragdrop',['require','exports','module','../lib/event'],function(require, exports, module) {


var event = require("../lib/event");

var DragdropHandler = function(mouseHandler) {
    var editor = mouseHandler.editor;
    var dragSelectionMarker, x, y;
    var timerId, range;
    var dragCursor, counter = 0;

    var mouseTarget = editor.container;
    event.addListener(mouseTarget, "dragenter", function(e) {
        if (editor.getReadOnly())
            return;
        var types = e.dataTransfer.types;
        if (types && Array.prototype.indexOf.call(types, "text/plain") === -1)
            return;
        if (!dragSelectionMarker)
            addDragMarker();
        counter++;
        return event.preventDefault(e);
    });

    event.addListener(mouseTarget, "dragover", function(e) {
        if (editor.getReadOnly())
            return;
        var types = e.dataTransfer.types;
        if (types && Array.prototype.indexOf.call(types, "text/plain") === -1)
            return;
        if (onMouseMoveTimer !== null)
            onMouseMoveTimer = null;
        x = e.clientX;
        y = e.clientY;
        return event.preventDefault(e);
    });

    var onDragInterval =  function() {
        dragCursor = editor.renderer.screenToTextCoordinates(x, y);
        editor.moveCursorToPosition(dragCursor);
        editor.renderer.scrollCursorIntoView();
    };

    event.addListener(mouseTarget, "dragleave", function(e) {
        counter--;
        if (counter <= 0 && dragSelectionMarker) {
            clearDragMarker();
            return event.preventDefault(e);
        }
    });

    event.addListener(mouseTarget, "drop", function(e) {
        if (!dragSelectionMarker)
            return;
        range.end = editor.session.insert(dragCursor, e.dataTransfer.getData('Text'));
        range.start = dragCursor;
        clearDragMarker();
        editor.focus();
        return event.preventDefault(e);
    });

    function addDragMarker() {
        range = editor.selection.toOrientedRange();
        dragSelectionMarker = editor.session.addMarker(range, "ace_selection", editor.getSelectionStyle());
        editor.clearSelection();
        clearInterval(timerId);
        timerId = setInterval(onDragInterval, 20);
        counter = 0;
        event.addListener(document, "mousemove", onMouseMove);
    }
    function clearDragMarker() {
        clearInterval(timerId);
        editor.session.removeMarker(dragSelectionMarker);
        dragSelectionMarker = null;
        editor.selection.fromOrientedRange(range);
        counter = 0;
        event.removeListener(document, "mousemove", onMouseMove);
    }
    // sometimes other code on the page can stop dragleave event leaving editor stuck in the drag state
    var onMouseMoveTimer = null;
    function onMouseMove() {
        if (onMouseMoveTimer == null) {
            onMouseMoveTimer = setTimeout(function() {
                if (onMouseMoveTimer != null && dragSelectionMarker)
                    clearDragMarker();
            }, 20);
        }
    }
};

exports.DragdropHandler = DragdropHandler;
});

/*
 * based on code from:
 *
 * @license RequireJS text 0.25.0 Copyright (c) 2010-2011, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/requirejs for details
 */
define('ace/lib/net',['require','exports','module','./dom'],function(require, exports, module) {

var dom = require("./dom");

exports.get = function (url, callback) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.onreadystatechange = function () {
        //Do not explicitly handle errors, those should be
        //visible via console output in the browser.
        if (xhr.readyState === 4) {
            callback(xhr.responseText);
        }
    };
    xhr.send(null);
};

exports.loadScript = function(path, callback) {
    var head = dom.getDocumentHead();
    var s = document.createElement('script');

    s.src = path;
    head.appendChild(s);

    s.onload = s.onreadystatechange = function(_, isAbort) {
        if (isAbort || !s.readyState || s.readyState == "loaded" || s.readyState == "complete") {
            s = s.onload = s.onreadystatechange = null;
            if (!isAbort)
                callback();
        }
    };
};

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/lib/event_emitter',['require','exports','module'],function(require, exports, module) {


var EventEmitter = {};
var stopPropagation = function() { this.propagationStopped = true; };
var preventDefault = function() { this.defaultPrevented = true; };

EventEmitter._emit =
EventEmitter._dispatchEvent = function(eventName, e) {
    this._eventRegistry || (this._eventRegistry = {});
    this._defaultHandlers || (this._defaultHandlers = {});

    var listeners = this._eventRegistry[eventName] || [];
    var defaultHandler = this._defaultHandlers[eventName];
    if (!listeners.length && !defaultHandler)
        return;

    if (typeof e != "object" || !e)
        e = {};

    if (!e.type)
        e.type = eventName;
    if (!e.stopPropagation)
        e.stopPropagation = stopPropagation;
    if (!e.preventDefault)
        e.preventDefault = preventDefault;

    listeners = listeners.slice();
    for (var i=0; i<listeners.length; i++) {
        listeners[i](e, this);
        if (e.propagationStopped)
            break;
    }
    
    if (defaultHandler && !e.defaultPrevented)
        return defaultHandler(e, this);
};


EventEmitter._signal = function(eventName, e) {
    var listeners = (this._eventRegistry || {})[eventName];
    if (!listeners)
        return;
    listeners = listeners.slice();
    for (var i=0; i<listeners.length; i++)
        listeners[i](e, this);
};

EventEmitter.once = function(eventName, callback) {
    var _self = this;
    callback && this.addEventListener(eventName, function newCallback() {
        _self.removeEventListener(eventName, newCallback);
        callback.apply(null, arguments);
    });
};


EventEmitter.setDefaultHandler = function(eventName, callback) {
    var handlers = this._defaultHandlers
    if (!handlers)
        handlers = this._defaultHandlers = {_disabled_: {}};
    
    if (handlers[eventName]) {
        var old = handlers[eventName];
        var disabled = handlers._disabled_[eventName];
        if (!disabled)
            handlers._disabled_[eventName] = disabled = [];
        disabled.push(old);
        var i = disabled.indexOf(callback);
        if (i != -1) 
            disabled.splice(i, 1);
    }
    handlers[eventName] = callback;
};
EventEmitter.removeDefaultHandler = function(eventName, callback) {
    var handlers = this._defaultHandlers
    if (!handlers)
        return;
    var disabled = handlers._disabled_[eventName];
    
    if (handlers[eventName] == callback) {
        var old = handlers[eventName];
        if (disabled)
            this.setDefaultHandler(eventName, disabled.pop());
    } else if (disabled) {
        var i = disabled.indexOf(callback);
        if (i != -1)
            disabled.splice(i, 1);
    }
};

EventEmitter.on =
EventEmitter.addEventListener = function(eventName, callback, capturing) {
    this._eventRegistry = this._eventRegistry || {};

    var listeners = this._eventRegistry[eventName];
    if (!listeners)
        listeners = this._eventRegistry[eventName] = [];

    if (listeners.indexOf(callback) == -1)
        listeners[capturing ? "unshift" : "push"](callback);
    return callback;
};

EventEmitter.off =
EventEmitter.removeListener =
EventEmitter.removeEventListener = function(eventName, callback) {
    this._eventRegistry = this._eventRegistry || {};

    var listeners = this._eventRegistry[eventName];
    if (!listeners)
        return;

    var index = listeners.indexOf(callback);
    if (index !== -1)
        listeners.splice(index, 1);
};

EventEmitter.removeAllListeners = function(eventName) {
    if (this._eventRegistry) this._eventRegistry[eventName] = [];
};

exports.EventEmitter = EventEmitter;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/config',['require','exports','module','./lib/lang','./lib/oop','./lib/net','./lib/event_emitter'],function(require, exports, module) {
"no use strict";

var lang = require("./lib/lang");
var oop = require("./lib/oop");
var net = require("./lib/net");
var EventEmitter = require("./lib/event_emitter").EventEmitter;

var global = (function() {
    return this;
})();

var options = {
    packaged: false,
    workerPath: null,
    modePath: null,
    themePath: null,
    basePath: "",
    suffix: ".js",
    $moduleUrls: {}
};

exports.get = function(key) {
    if (!options.hasOwnProperty(key))
        throw new Error("Unknown config key: " + key);

    return options[key];
};

exports.set = function(key, value) {
    if (!options.hasOwnProperty(key))
        throw new Error("Unknown config key: " + key);

    options[key] = value;
};

exports.all = function() {
    return lang.copyObject(options);
};

// module loading
oop.implement(exports, EventEmitter);

exports.moduleUrl = function(name, component) {
    if (options.$moduleUrls[name])
        return options.$moduleUrls[name];

    var parts = name.split("/");
    component = component || parts[parts.length - 2] || "";
    
    // todo make this configurable or get rid of '-'
    var sep = component == "snippets" ? "/" : "-";
    var base = parts[parts.length - 1];    
    if (sep == "-") {
        var re = new RegExp("^" + component + "[\-_]|[\-_]" + component + "$", "g");
        base = base.replace(re, "");
    }

    if ((!base || base == component) && parts.length > 1)
        base = parts[parts.length - 2];
    var path = options[component + "Path"];
    if (path == null) {
        path = options.basePath;
    } else if (sep == "/") {
        component = sep = "";
    }
    if (path && path.slice(-1) != "/")
        path += "/";
    return path + component + sep + base + this.get("suffix");
};

exports.setModuleUrl = function(name, subst) {
    return options.$moduleUrls[name] = subst;
};

exports.$loading = {};
exports.loadModule = function(moduleName, onLoad) {
    var module, moduleType;
    if (Array.isArray(moduleName)) {
        moduleType = moduleName[0];
        moduleName = moduleName[1];
    }

    try {
        module = require(moduleName);
    } catch (e) {};
    // require(moduleName) can return empty object if called after require([moduleName], callback)
    if (module && !exports.$loading[moduleName])
        return onLoad && onLoad(module);

    if (!exports.$loading[moduleName])
        exports.$loading[moduleName] = [];

    exports.$loading[moduleName].push(onLoad);

    if (exports.$loading[moduleName].length > 1)
        return;

    var afterLoad = function() {
        require([moduleName], function(module) {
            exports._emit("load.module", {name: moduleName, module: module});
            var listeners = exports.$loading[moduleName];
            exports.$loading[moduleName] = null;
            listeners.forEach(function(onLoad) {
                onLoad && onLoad(module);
            });
        });
    };

    if (!exports.get("packaged"))
        return afterLoad();
    net.loadScript(exports.moduleUrl(moduleName, moduleType), afterLoad);
};


// initialization
exports.init = function() {
    options.packaged = require.packaged || module.packaged || (global.define && define.packaged);

    if (!global.document)
        return "";

    var scriptOptions = {};
    var scriptUrl = "";

    var scripts = document.getElementsByTagName("script");
    for (var i=0; i<scripts.length; i++) {
        var script = scripts[i];

        var src = script.src || script.getAttribute("src");
        if (!src)
            continue;

        var attributes = script.attributes;
        for (var j=0, l=attributes.length; j < l; j++) {
            var attr = attributes[j];
            if (attr.name.indexOf("data-ace-") === 0) {
                scriptOptions[deHyphenate(attr.name.replace(/^data-ace-/, ""))] = attr.value;
            }
        }

        var m = src.match(/^(.*)\/ace(\-\w+)?\.js(\?|$)/);
        if (m)
            scriptUrl = m[1];
    }

    if (scriptUrl) {
        scriptOptions.base = scriptOptions.base || scriptUrl;
        scriptOptions.packaged = true;
    }

    scriptOptions.basePath = scriptOptions.base;
    scriptOptions.workerPath = scriptOptions.workerPath || scriptOptions.base;
    scriptOptions.modePath = scriptOptions.modePath || scriptOptions.base;
    scriptOptions.themePath = scriptOptions.themePath || scriptOptions.base;
    delete scriptOptions.base;

    for (var key in scriptOptions)
        if (typeof scriptOptions[key] !== "undefined")
            exports.set(key, scriptOptions[key]);
};

function deHyphenate(str) {
    return str.replace(/-(.)/g, function(m, m1) { return m1.toUpperCase(); });
}

var optionsProvider = {
    setOptions: function(optList) {
        Object.keys(optList).forEach(function(key) {
            this.setOption(key, optList[key]);
        }, this);
    },
    getOptions: function(optionNames) {
        var result = {};
        if (!optionNames) {
            optionNames = Object.keys(this.$options);
        } else if (!Array.isArray(optionNames)) {
            result = optionNames;
            optionNames = Object.keys(result);
        }
        optionNames.forEach(function(key) {
            result[key] = this.getOption(key);
        }, this);
        return result;
    },
    setOption: function(name, value) {
        if (this["$" + name] === value)
            return;
        var opt = this.$options[name];
        if (!opt)
            return undefined;
        if (opt.forwardTo)
            return this[opt.forwardTo] && this[opt.forwardTo].setOption(name, value);

        if (!opt.handlesSet)
            this["$" + name] = value;
        if (opt && opt.set)
            opt.set.call(this, value);
    },
    getOption: function(name) {
        var opt = this.$options[name];
        if (!opt)
            return undefined;
        if (opt.forwardTo)
            return this[opt.forwardTo] && this[opt.forwardTo].getOption(name);
        return opt && opt.get ? opt.get.call(this) : this["$" + name];
    }
};

var defaultOptions = {};
/*
 * option {name, value, initialValue, setterName, set, get }
 */
exports.defineOptions = function(obj, path, options) {
    if (!obj.$options)
        defaultOptions[path] = obj.$options = {};

    Object.keys(options).forEach(function(key) {
        var opt = options[key];
        if (typeof opt == "string")
            opt = {forwardTo: opt};

        opt.name || (opt.name = key);
        obj.$options[opt.name] = opt;
        if ("initialValue" in opt)
            obj["$" + opt.name] = opt.initialValue;
    });

    // implement option provider interface
    oop.implement(obj, optionsProvider);

    return this;
};

exports.resetOptions = function(obj) {
    Object.keys(obj.$options).forEach(function(key) {
        var opt = obj.$options[key];
        if ("value" in opt)
            obj.setOption(key, opt.value);
    });
};

exports.setDefaultValue = function(path, name, value) {
    var opts = defaultOptions[path] || (defaultOptions[path] = {});
    if (opts[name]) {
        if (opts.forwardTo)
            exports.setDefaultValue(opts.forwardTo, name, value)
        else
            opts[name].value = value;
    }
};

exports.setDefaultValues = function(path, optionHash) {
    Object.keys(optionHash).forEach(function(key) {
        exports.setDefaultValue(path, key, optionHash[key]);
    });
};

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mouse/mouse_handler',['require','exports','module','../lib/event','../lib/useragent','./default_handlers','./default_gutter_handler','./mouse_event','./dragdrop','../config'],function(require, exports, module) {


var event = require("../lib/event");
var useragent = require("../lib/useragent");
var DefaultHandlers = require("./default_handlers").DefaultHandlers;
var DefaultGutterHandler = require("./default_gutter_handler").GutterHandler;
var MouseEvent = require("./mouse_event").MouseEvent;
var DragdropHandler = require("./dragdrop").DragdropHandler;
var config = require("../config");

var MouseHandler = function(editor) {
    this.editor = editor;

    new DefaultHandlers(this);
    new DefaultGutterHandler(this);
    new DragdropHandler(this);

    var mouseTarget = editor.renderer.getMouseEventTarget();
    event.addListener(mouseTarget, "click", this.onMouseEvent.bind(this, "click"));
    event.addListener(mouseTarget, "mousemove", this.onMouseMove.bind(this, "mousemove"));
    event.addMultiMouseDownListener(mouseTarget, [300, 300, 250], this, "onMouseEvent");
    if (editor.renderer.scrollBarV) {
        event.addMultiMouseDownListener(editor.renderer.scrollBarV.inner, [300, 300, 250], this, "onMouseEvent");
        event.addMultiMouseDownListener(editor.renderer.scrollBarH.inner, [300, 300, 250], this, "onMouseEvent");
    }
    event.addMouseWheelListener(editor.container, this.onMouseWheel.bind(this, "mousewheel"));

    var gutterEl = editor.renderer.$gutter;
    event.addListener(gutterEl, "mousedown", this.onMouseEvent.bind(this, "guttermousedown"));
    event.addListener(gutterEl, "click", this.onMouseEvent.bind(this, "gutterclick"));
    event.addListener(gutterEl, "dblclick", this.onMouseEvent.bind(this, "gutterdblclick"));
    event.addListener(gutterEl, "mousemove", this.onMouseEvent.bind(this, "guttermousemove"));
    
    event.addListener(mouseTarget, "mousedown", function(e) {
        editor.focus();
        return event.preventDefault(e);
    });
    
    event.addListener(gutterEl, "mousedown", function(e) {
        editor.focus();
        return event.preventDefault(e);
    });
};

(function() {
    this.onMouseEvent = function(name, e) {
        this.editor._emit(name, new MouseEvent(e, this.editor));
    };

    this.onMouseMove = function(name, e) {
        // optimization, because mousemove doesn't have a default handler.
        var listeners = this.editor._eventRegistry && this.editor._eventRegistry.mousemove;
        if (!listeners || !listeners.length)
            return;

        this.editor._emit(name, new MouseEvent(e, this.editor));
    };

    this.onMouseWheel = function(name, e) {
        var mouseEvent = new MouseEvent(e, this.editor);
        mouseEvent.speed = this.$scrollSpeed * 2;
        mouseEvent.wheelX = e.wheelX;
        mouseEvent.wheelY = e.wheelY;

        this.editor._emit(name, mouseEvent);
    };

    this.setState = function(state) {
        this.state = state;
    };

    this.captureMouse = function(ev, state) {
        if (state)
            this.setState(state);

        this.x = ev.x;
        this.y = ev.y;
        
        this.isMousePressed = true;

        // do not move textarea during selection
        var renderer = this.editor.renderer;
        if (renderer.$keepTextAreaAtCursor)
            renderer.$keepTextAreaAtCursor = null;

        var self = this;
        var onMouseMove = function(e) {
            self.x = e.clientX;
            self.y = e.clientY;
        };

        var onCaptureEnd = function(e) {
            clearInterval(timerId);
            onCaptureInterval();
            self[self.state + "End"] && self[self.state + "End"](e);
            self.$clickSelection = null;
            if (renderer.$keepTextAreaAtCursor == null) {
                renderer.$keepTextAreaAtCursor = true;
                renderer.$moveTextAreaToCursor();
            }
            self.isMousePressed = false;
            self.onMouseEvent("mouseup", e)
        };

        var onCaptureInterval = function() {
            self[self.state] && self[self.state]();
        };
        
        if (useragent.isOldIE && ev.domEvent.type == "dblclick") {
            return setTimeout(function() {onCaptureEnd(ev);});
        }

        event.capture(this.editor.container, onMouseMove, onCaptureEnd);
        var timerId = setInterval(onCaptureInterval, 20);
    };
}).call(MouseHandler.prototype);

config.defineOptions(MouseHandler.prototype, "mouseHandler", {
    scrollSpeed: {initialValue: 2},
    dragDelay: {initialValue: 150},
    focusTimout: {initialValue: 0}
});


exports.MouseHandler = MouseHandler;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mouse/fold_handler',['require','exports','module'],function(require, exports, module) {


function FoldHandler(editor) {

    editor.on("click", function(e) {
        var position = e.getDocumentPosition();
        var session = editor.session;

        // If the user clicked on a fold, then expand it.
        var fold = session.getFoldAt(position.row, position.column, 1);
        if (fold) {
            if (e.getAccelKey())
                session.removeFold(fold);
            else
                session.expandFold(fold);

            e.stop();
        }
    });

    editor.on("gutterclick", function(e) {
        var gutterRegion = editor.renderer.$gutterLayer.getRegion(e);

        if (gutterRegion == "foldWidgets") {
            var row = e.getDocumentPosition().row;
            var session = editor.session;
            if (session.foldWidgets && session.foldWidgets[row])
                editor.session.onFoldWidgetClick(row, e);
            if (!editor.isFocused())
                editor.focus();
            e.stop();
        }
    });

    editor.on("gutterdblclick", function(e) {
        var gutterRegion = editor.renderer.$gutterLayer.getRegion(e);

        if (gutterRegion == "foldWidgets") {
            var row = e.getDocumentPosition().row;
            var session = editor.session;
            var data = session.getParentFoldRangeData(row, true);
            var range = data.range || data.firstRange;

            if (range) {
                var row = range.start.row;
                var fold = session.getFoldAt(row, session.getLine(row).length, 1);

                if (fold) {
                    session.removeFold(fold);
                } else {
                    session.addFold("...", range);
                    editor.renderer.scrollCursorIntoView({row: range.start.row, column: 0});
                }
            }
            e.stop();
        }
    });
}

exports.FoldHandler = FoldHandler;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/keyboard/keybinding',['require','exports','module','../lib/keys','../lib/event'],function(require, exports, module) {


var keyUtil  = require("../lib/keys");
var event = require("../lib/event");

var KeyBinding = function(editor) {
    this.$editor = editor;
    this.$data = { };
    this.$handlers = [];
    this.setDefaultHandler(editor.commands);
};

(function() {
    this.setDefaultHandler = function(kb) {
        this.removeKeyboardHandler(this.$defaultHandler);
        this.$defaultHandler = kb;
        this.addKeyboardHandler(kb, 0);
        this.$data = {editor: this.$editor};
    };

    this.setKeyboardHandler = function(kb) {
        var h = this.$handlers;
        if (h[h.length - 1] == kb)
            return;

        while (h[h.length - 1] && h[h.length - 1] != this.$defaultHandler)
            this.removeKeyboardHandler(h[h.length - 1]);

        this.addKeyboardHandler(kb, 1);
    };

    this.addKeyboardHandler = function(kb, pos) {
        if (!kb)
            return;
        var i = this.$handlers.indexOf(kb);
        if (i != -1)
            this.$handlers.splice(i, 1);

        if (pos == undefined)
            this.$handlers.push(kb);
        else
            this.$handlers.splice(pos, 0, kb);

        if (i == -1 && kb.attach)
            kb.attach(this.$editor);
    };

    this.removeKeyboardHandler = function(kb) {
        var i = this.$handlers.indexOf(kb);
        if (i == -1)
            return false;
        this.$handlers.splice(i, 1);
        kb.detach && kb.detach(this.$editor);
        return true;
    };

    this.getKeyboardHandler = function() {
        return this.$handlers[this.$handlers.length - 1];
    };

    this.$callKeyboardHandlers = function (hashId, keyString, keyCode, e) {
        var toExecute;
        var success = false;
        var commands = this.$editor.commands;

        for (var i = this.$handlers.length; i--;) {
            toExecute = this.$handlers[i].handleKeyboard(
                this.$data, hashId, keyString, keyCode, e
            );
            if (!toExecute || !toExecute.command)
                continue;
            
            // allow keyboardHandler to consume keys
            if (toExecute.command == "null") {
                success = true;
            } else {
                success = commands.exec(toExecute.command, this.$editor, toExecute.args, e);                
            }
            // do not stop input events to not break repeating
            if (success && e && hashId != -1 && 
                toExecute.passEvent != true && toExecute.command.passEvent != true
            ) {
                event.stopEvent(e);
            }
            if (success)
                break;
        }
        return success;
    };

    this.onCommandKey = function(e, hashId, keyCode) {
        var keyString = keyUtil.keyCodeToString(keyCode);
        this.$callKeyboardHandlers(hashId, keyString, keyCode, e);
    };

    this.onTextInput = function(text) {
        var success = this.$callKeyboardHandlers(-1, text);
        if (!success)
            this.$editor.commands.exec("insertstring", this.$editor, text);
    };

}).call(KeyBinding.prototype);

exports.KeyBinding = KeyBinding;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/range',['require','exports','module'],function(require, exports, module) {

var comparePoints = function(p1, p2) {
    return p1.row - p2.row || p1.column - p2.column;
};
/**
 * This object is used in various places to indicate a region within the editor. To better visualize how this works, imagine a rectangle. Each quadrant of the rectangle is analogus to a range, as ranges contain a starting row and starting column, and an ending row, and ending column.
 * @class Range
 **/

/**
 * Creates a new `Range` object with the given starting and ending row and column points.
 * @param {Number} startRow The starting row
 * @param {Number} startColumn The starting column
 * @param {Number} endRow The ending row
 * @param {Number} endColumn The ending column
 *
 * @constructor
 **/
var Range = function(startRow, startColumn, endRow, endColumn) {
    this.start = {
        row: startRow,
        column: startColumn
    };

    this.end = {
        row: endRow,
        column: endColumn
    };
};

(function() {
    /**
     * Returns `true` if and only if the starting row and column, and ending row and column, are equivalent to those given by `range`.
     * @param {Range} range A range to check against
     *
     * @return {Boolean}
     **/
    this.isEqual = function(range) {
        return this.start.row === range.start.row &&
            this.end.row === range.end.row &&
            this.start.column === range.start.column &&
            this.end.column === range.end.column;
    };

    /**
     *
     * Returns a string containing the range's row and column information, given like this:
     * ```
     *    [start.row/start.column] -> [end.row/end.column]
     * ```
     * @return {String}
     **/
    this.toString = function() {
        return ("Range: [" + this.start.row + "/" + this.start.column +
            "] -> [" + this.end.row + "/" + this.end.column + "]");
    };

    /**
     *
     * Returns `true` if the `row` and `column` provided are within the given range. This can better be expressed as returning `true` if:
     * ```javascript
     *    this.start.row <= row <= this.end.row &&
     *    this.start.column <= column <= this.end.column
     * ```
     * @param {Number} row A row to check for
     * @param {Number} column A column to check for
     * @returns {Boolean}
     * @related Range.compare
     **/

    this.contains = function(row, column) {
        return this.compare(row, column) == 0;
    };

    /**
     * Compares `this` range (A) with another range (B).
     * @param {Range} range A range to compare with
     *
     * @related Range.compare
     * @returns {Number} This method returns one of the following numbers:<br/>
     * <br/>
     * * `-2`: (B) is in front of (A), and doesn't intersect with (A)<br/>
     * * `-1`: (B) begins before (A) but ends inside of (A)<br/>
     * * `0`: (B) is completely inside of (A) OR (A) is completely inside of (B)<br/>
     * * `+1`: (B) begins inside of (A) but ends outside of (A)<br/>
     * * `+2`: (B) is after (A) and doesn't intersect with (A)<br/>
     * * `42`: FTW state: (B) ends in (A) but starts outside of (A)
     **/
    this.compareRange = function(range) {
        var cmp,
            end = range.end,
            start = range.start;

        cmp = this.compare(end.row, end.column);
        if (cmp == 1) {
            cmp = this.compare(start.row, start.column);
            if (cmp == 1) {
                return 2;
            } else if (cmp == 0) {
                return 1;
            } else {
                return 0;
            }
        } else if (cmp == -1) {
            return -2;
        } else {
            cmp = this.compare(start.row, start.column);
            if (cmp == -1) {
                return -1;
            } else if (cmp == 1) {
                return 42;
            } else {
                return 0;
            }
        }
    };

    /**
     * Checks the row and column points of `p` with the row and column points of the calling range.
     *
     * @param {Range} p A point to compare with
     *
     * @related Range.compare
     * @returns {Number} This method returns one of the following numbers:<br/>
     * * `0` if the two points are exactly equal<br/>
     * * `-1` if `p.row` is less then the calling range<br/>
     * * `1` if `p.row` is greater than the calling range<br/>
     * <br/>
     * If the starting row of the calling range is equal to `p.row`, and:<br/>
     * * `p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>
     * * Otherwise, it returns -1<br/>
     *<br/>
     * If the ending row of the calling range is equal to `p.row`, and:<br/>
     * * `p.column` is less than or equal to the calling range's ending column, this returns `0`<br/>
     * * Otherwise, it returns 1<br/>
     **/
    this.comparePoint = function(p) {
        return this.compare(p.row, p.column);
    };

    /**
     * Checks the start and end points of `range` and compares them to the calling range. Returns `true` if the `range` is contained within the caller's range.
     * @param {Range} range A range to compare with
     *
     * @returns {Boolean}
     * @related Range.comparePoint
     **/
    this.containsRange = function(range) {
        return this.comparePoint(range.start) == 0 && this.comparePoint(range.end) == 0;
    };

    /**
     * Returns `true` if passed in `range` intersects with the one calling this method.
     * @param {Range} range A range to compare with
     *
     * @returns {Boolean}
     **/
    this.intersects = function(range) {
        var cmp = this.compareRange(range);
        return (cmp == -1 || cmp == 0 || cmp == 1);
    };

    /**
     * Returns `true` if the caller's ending row point is the same as `row`, and if the caller's ending column is the same as `column`.
     * @param {Number} row A row point to compare with
     * @param {Number} column A column point to compare with
     *
     * @returns {Boolean}
     **/
    this.isEnd = function(row, column) {
        return this.end.row == row && this.end.column == column;
    };

    /**
     * Returns `true` if the caller's starting row point is the same as `row`, and if the caller's starting column is the same as `column`.
     * @param {Number} row A row point to compare with
     * @param {Number} column A column point to compare with
     *
     * @returns {Boolean}
     **/
    this.isStart = function(row, column) {
        return this.start.row == row && this.start.column == column;
    };

    /**
     * Sets the starting row and column for the range.
     * @param {Number} row A row point to set
     * @param {Number} column A column point to set
     *
     **/
    this.setStart = function(row, column) {
        if (typeof row == "object") {
            this.start.column = row.column;
            this.start.row = row.row;
        } else {
            this.start.row = row;
            this.start.column = column;
        }
    };

    /**
     * Sets the starting row and column for the range.
     * @param {Number} row A row point to set
     * @param {Number} column A column point to set
     *
     **/
    this.setEnd = function(row, column) {
        if (typeof row == "object") {
            this.end.column = row.column;
            this.end.row = row.row;
        } else {
            this.end.row = row;
            this.end.column = column;
        }
    };

    /**
     * Returns `true` if the `row` and `column` are within the given range.
     * @param {Number} row A row point to compare with
     * @param {Number} column A column point to compare with
     *
     *
     * @returns {Boolean}
     * @related Range.compare
     **/
    this.inside = function(row, column) {
        if (this.compare(row, column) == 0) {
            if (this.isEnd(row, column) || this.isStart(row, column)) {
                return false;
            } else {
                return true;
            }
        }
        return false;
    };

    /**
     * Returns `true` if the `row` and `column` are within the given range's starting points.
     * @param {Number} row A row point to compare with
     * @param {Number} column A column point to compare with
     *
     * @returns {Boolean}
     * @related Range.compare
     **/
    this.insideStart = function(row, column) {
        if (this.compare(row, column) == 0) {
            if (this.isEnd(row, column)) {
                return false;
            } else {
                return true;
            }
        }
        return false;
    };

    /**
     * Returns `true` if the `row` and `column` are within the given range's ending points.
     * @param {Number} row A row point to compare with
     * @param {Number} column A column point to compare with
     *
     * @returns {Boolean}
     * @related Range.compare
     *
     **/
    this.insideEnd = function(row, column) {
        if (this.compare(row, column) == 0) {
            if (this.isStart(row, column)) {
                return false;
            } else {
                return true;
            }
        }
        return false;
    };

    /**
     * Checks the row and column points with the row and column points of the calling range.
     * @param {Number} row A row point to compare with
     * @param {Number} column A column point to compare with
     *
     *
     * @returns {Number} This method returns one of the following numbers:<br/>
     * `0` if the two points are exactly equal <br/>
     * `-1` if `p.row` is less then the calling range <br/>
     * `1` if `p.row` is greater than the calling range <br/>
     *  <br/>
     * If the starting row of the calling range is equal to `p.row`, and: <br/>
     * `p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>
     * Otherwise, it returns -1<br/>
     * <br/>
     * If the ending row of the calling range is equal to `p.row`, and: <br/>
     * `p.column` is less than or equal to the calling range's ending column, this returns `0` <br/>
     * Otherwise, it returns 1
     **/
    this.compare = function(row, column) {
        if (!this.isMultiLine()) {
            if (row === this.start.row) {
                return column < this.start.column ? -1 : (column > this.end.column ? 1 : 0);
            };
        }

        if (row < this.start.row)
            return -1;

        if (row > this.end.row)
            return 1;

        if (this.start.row === row)
            return column >= this.start.column ? 0 : -1;

        if (this.end.row === row)
            return column <= this.end.column ? 0 : 1;

        return 0;
    };

    /**
     * Checks the row and column points with the row and column points of the calling range.
     * @param {Number} row A row point to compare with
     * @param {Number} column A column point to compare with
     *
     * @returns {Number} This method returns one of the following numbers:<br/>
     * <br/>
     * `0` if the two points are exactly equal<br/>
     * `-1` if `p.row` is less then the calling range<br/>
     * `1` if `p.row` is greater than the calling range, or if `isStart` is `true`.<br/>
     * <br/>
     * If the starting row of the calling range is equal to `p.row`, and:<br/>
     * `p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>
     * Otherwise, it returns -1<br/>
     * <br/>
     * If the ending row of the calling range is equal to `p.row`, and:<br/>
     * `p.column` is less than or equal to the calling range's ending column, this returns `0`<br/>
     * Otherwise, it returns 1
     *
     **/
    this.compareStart = function(row, column) {
        if (this.start.row == row && this.start.column == column) {
            return -1;
        } else {
            return this.compare(row, column);
        }
    };

    /**
     * Checks the row and column points with the row and column points of the calling range.
     * @param {Number} row A row point to compare with
     * @param {Number} column A column point to compare with
     *
     *
     * @returns {Number} This method returns one of the following numbers:<br/>
     * `0` if the two points are exactly equal<br/>
     * `-1` if `p.row` is less then the calling range<br/>
     * `1` if `p.row` is greater than the calling range, or if `isEnd` is `true.<br/>
     * <br/>
     * If the starting row of the calling range is equal to `p.row`, and:<br/>
     * `p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>
     * Otherwise, it returns -1<br/>
     *<br/>
     * If the ending row of the calling range is equal to `p.row`, and:<br/>
     * `p.column` is less than or equal to the calling range's ending column, this returns `0`<br/>
     * Otherwise, it returns 1
     */
    this.compareEnd = function(row, column) {
        if (this.end.row == row && this.end.column == column) {
            return 1;
        } else {
            return this.compare(row, column);
        }
    };

    /**
     * Checks the row and column points with the row and column points of the calling range.
     * @param {Number} row A row point to compare with
     * @param {Number} column A column point to compare with
     *
     *
     * @returns {Number} This method returns one of the following numbers:<br/>
     * * `1` if the ending row of the calling range is equal to `row`, and the ending column of the calling range is equal to `column`<br/>
     * * `-1` if the starting row of the calling range is equal to `row`, and the starting column of the calling range is equal to `column`<br/>
     * <br/>
     * Otherwise, it returns the value after calling [[Range.compare `compare()`]].
     *
     **/
    this.compareInside = function(row, column) {
        if (this.end.row == row && this.end.column == column) {
            return 1;
        } else if (this.start.row == row && this.start.column == column) {
            return -1;
        } else {
            return this.compare(row, column);
        }
    };

    /**
     * Returns the part of the current `Range` that occurs within the boundaries of `firstRow` and `lastRow` as a new `Range` object.
     * @param {Number} firstRow The starting row
     * @param {Number} lastRow The ending row
     *
     *
     * @returns {Range}
    **/
    this.clipRows = function(firstRow, lastRow) {
        if (this.end.row > lastRow)
            var end = {row: lastRow + 1, column: 0};
        else if (this.end.row < firstRow)
            var end = {row: firstRow, column: 0};

        if (this.start.row > lastRow)
            var start = {row: lastRow + 1, column: 0};
        else if (this.start.row < firstRow)
            var start = {row: firstRow, column: 0};

        return Range.fromPoints(start || this.start, end || this.end);
    };

    /**
     * Changes the row and column points for the calling range for both the starting and ending points.
     * @param {Number} row A new row to extend to
     * @param {Number} column A new column to extend to
     *
     *
     * @returns {Range} The original range with the new row
    **/
    this.extend = function(row, column) {
        var cmp = this.compare(row, column);

        if (cmp == 0)
            return this;
        else if (cmp == -1)
            var start = {row: row, column: column};
        else
            var end = {row: row, column: column};

        return Range.fromPoints(start || this.start, end || this.end);
    };

    this.isEmpty = function() {
        return (this.start.row === this.end.row && this.start.column === this.end.column);
    };

    /**
     *
     * Returns `true` if the range spans across multiple lines.
     * @returns {Boolean}
    **/
    this.isMultiLine = function() {
        return (this.start.row !== this.end.row);
    };

    /**
     *
     * Returns a duplicate of the calling range.
     * @returns {Range}
    **/
    this.clone = function() {
        return Range.fromPoints(this.start, this.end);
    };

    /**
     *
     * Returns a range containing the starting and ending rows of the original range, but with a column value of `0`.
     * @returns {Range}
    **/
    this.collapseRows = function() {
        if (this.end.column == 0)
            return new Range(this.start.row, 0, Math.max(this.start.row, this.end.row-1), 0)
        else
            return new Range(this.start.row, 0, this.end.row, 0)
    };

    /**
     * Given the current `Range`, this function converts those starting and ending points into screen positions, and then returns a new `Range` object.
     * @param {EditSession} session The `EditSession` to retrieve coordinates from
     *
     *
     * @returns {Range}
    **/
    this.toScreenRange = function(session) {
        var screenPosStart = session.documentToScreenPosition(this.start);
        var screenPosEnd = session.documentToScreenPosition(this.end);

        return new Range(
            screenPosStart.row, screenPosStart.column,
            screenPosEnd.row, screenPosEnd.column
        );
    };
    
    
    /* experimental */
    this.moveBy = function(row, column) {
        this.start.row += row;
        this.start.column += column;
        this.end.row += row;
        this.end.column += column;
    };

}).call(Range.prototype);

/**
 * Creates and returns a new `Range` based on the row and column of the given parameters.
 * @param {Range} start A starting point to use
 * @param {Range} end An ending point to use
 *
 * @returns {Range}
**/
Range.fromPoints = function(start, end) {
    return new Range(start.row, start.column, end.row, end.column);
};
Range.comparePoints = comparePoints;

Range.comparePoints = function(p1, p2) {
    return p1.row - p2.row || p1.column - p2.column;
};


exports.Range = Range;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/selection',['require','exports','module','./lib/oop','./lib/lang','./lib/event_emitter','./range'],function(require, exports, module) {


var oop = require("./lib/oop");
var lang = require("./lib/lang");
var EventEmitter = require("./lib/event_emitter").EventEmitter;
var Range = require("./range").Range;

/**
 *
 * Contains the cursor position and the text selection of an edit session.
 *
 * The row/columns used in the selection are in document coordinates representing ths coordinates as thez appear in the document before applying soft wrap and folding.
 * @class Selection
 **/


/**
 * Emitted when the cursor position changes.
 * @event changeCursor
 *
 *
 *
**/
/**
 * Emitted when the cursor selection changes.
 *  @event changeSelection
 *
 *
 *
**/
/**
 * Creates a new `Selection` object.
 * @param {EditSession} session The session to use
 *
 *
 *
 * @constructor
 **/
var Selection = function(session) {
    this.session = session;
    this.doc = session.getDocument();

    this.clearSelection();
    this.lead = this.selectionLead = this.doc.createAnchor(0, 0);
    this.anchor = this.selectionAnchor = this.doc.createAnchor(0, 0);

    var self = this;
    this.lead.on("change", function(e) {
        self._emit("changeCursor");
        if (!self.$isEmpty)
            self._emit("changeSelection");
        if (!self.$keepDesiredColumnOnChange && e.old.column != e.value.column)
            self.$desiredColumn = null;
    });

    this.selectionAnchor.on("change", function() {
        if (!self.$isEmpty)
            self._emit("changeSelection");
    });
};

(function() {

    oop.implement(this, EventEmitter);

    /**
    *
    * Returns `true` if the selection is empty.
    * @returns {Boolean}
    **/
    this.isEmpty = function() {
        return (this.$isEmpty || (
            this.anchor.row == this.lead.row &&
            this.anchor.column == this.lead.column
        ));
    };

    /**
    * Returns `true` if the selection is a multi-line.
    * @returns {Boolean}
    **/
    this.isMultiLine = function() {
        if (this.isEmpty()) {
            return false;
        }

        return this.getRange().isMultiLine();
    };

    /**
    * Gets the current position of the cursor.
    * @returns {Number}
    **/
    this.getCursor = function() {
        return this.lead.getPosition();
    };

    /**
    * Sets the row and column position of the anchor. This function also emits the `'changeSelection'` event.
    * @param {Number} row The new row
    * @param {Number} column The new column
    *
    *
    **/
    this.setSelectionAnchor = function(row, column) {
        this.anchor.setPosition(row, column);

        if (this.$isEmpty) {
            this.$isEmpty = false;
            this._emit("changeSelection");
        }
    };

    /**
    * Returns an object containing the `row` and `column` of the calling selection anchor.
    *
    * @returns {Object}
    * @related Anchor.getPosition
    **/
    this.getSelectionAnchor = function() {
        if (this.$isEmpty)
            return this.getSelectionLead()
        else
            return this.anchor.getPosition();
    };

    /**
    *
    * Returns an object containing the `row` and `column` of the calling selection lead.
    * @returns {Object}
    **/
    this.getSelectionLead = function() {
        return this.lead.getPosition();
    };

    /**
    * Shifts the selection up (or down, if [[Selection.isBackwards `isBackwards()`]] is true) the given number of columns.
    * @param {Number} columns The number of columns to shift by
    *
    *
    *
    **/
    this.shiftSelection = function(columns) {
        if (this.$isEmpty) {
            this.moveCursorTo(this.lead.row, this.lead.column + columns);
            return;
        };

        var anchor = this.getSelectionAnchor();
        var lead = this.getSelectionLead();

        var isBackwards = this.isBackwards();

        if (!isBackwards || anchor.column !== 0)
            this.setSelectionAnchor(anchor.row, anchor.column + columns);

        if (isBackwards || lead.column !== 0) {
            this.$moveSelection(function() {
                this.moveCursorTo(lead.row, lead.column + columns);
            });
        }
    };

    /**
    * Returns `true` if the selection is going backwards in the document.
    * @returns {Boolean}
    **/
    this.isBackwards = function() {
        var anchor = this.anchor;
        var lead = this.lead;
        return (anchor.row > lead.row || (anchor.row == lead.row && anchor.column > lead.column));
    };

    /**
    * [Returns the [[Range]] for the selected text.]{: #Selection.getRange}
    * @returns {Range}
    **/
    this.getRange = function() {
        var anchor = this.anchor;
        var lead = this.lead;

        if (this.isEmpty())
            return Range.fromPoints(lead, lead);

        if (this.isBackwards()) {
            return Range.fromPoints(lead, anchor);
        }
        else {
            return Range.fromPoints(anchor, lead);
        }
    };

    /**
    * [Empties the selection (by de-selecting it). This function also emits the `'changeSelection'` event.]{: #Selection.clearSelection}
    **/
    this.clearSelection = function() {
        if (!this.$isEmpty) {
            this.$isEmpty = true;
            this._emit("changeSelection");
        }
    };

    /**
    * Selects all the text in the document.
    **/
    this.selectAll = function() {
        var lastRow = this.doc.getLength() - 1;
        this.setSelectionAnchor(0, 0);
        this.moveCursorTo(lastRow, this.doc.getLine(lastRow).length);
    };

    /**
    * Sets the selection to the provided range.
    * @param {Range} range The range of text to select
    * @param {Boolean} reverse Indicates if the range should go backwards (`true`) or not
    *
    *
    * @method setSelectionRange
    * @alias setRange
    **/
    this.setRange =
    this.setSelectionRange = function(range, reverse) {
        if (reverse) {
            this.setSelectionAnchor(range.end.row, range.end.column);
            this.selectTo(range.start.row, range.start.column);
        } else {
            this.setSelectionAnchor(range.start.row, range.start.column);
            this.selectTo(range.end.row, range.end.column);
        }
        if (this.getRange().isEmpty())
            this.$isEmpty = true;
        this.$desiredColumn = null;
    };

    this.$moveSelection = function(mover) {
        var lead = this.lead;
        if (this.$isEmpty)
            this.setSelectionAnchor(lead.row, lead.column);

        mover.call(this);
    };

    /**
    * Moves the selection cursor to the indicated row and column.
    * @param {Number} row The row to select to
    * @param {Number} column The column to select to
    *
    *
    *
    **/
    this.selectTo = function(row, column) {
        this.$moveSelection(function() {
            this.moveCursorTo(row, column);
        });
    };

    /**
    * Moves the selection cursor to the row and column indicated by `pos`.
    * @param {Object} pos An object containing the row and column
    *
    *
    *
    **/
    this.selectToPosition = function(pos) {
        this.$moveSelection(function() {
            this.moveCursorToPosition(pos);
        });
    };

    /**
    *
    * Moves the selection up one row.
    **/
    this.selectUp = function() {
        this.$moveSelection(this.moveCursorUp);
    };

    /**
    *
    * Moves the selection down one row.
    **/
    this.selectDown = function() {
        this.$moveSelection(this.moveCursorDown);
    };

    /**
    *
    *
    * Moves the selection right one column.
    **/
    this.selectRight = function() {
        this.$moveSelection(this.moveCursorRight);
    };

    /**
    *
    * Moves the selection left one column.
    **/
    this.selectLeft = function() {
        this.$moveSelection(this.moveCursorLeft);
    };

    /**
    *
    * Moves the selection to the beginning of the current line.
    **/
    this.selectLineStart = function() {
        this.$moveSelection(this.moveCursorLineStart);
    };

    /**
    *
    * Moves the selection to the end of the current line.
    **/
    this.selectLineEnd = function() {
        this.$moveSelection(this.moveCursorLineEnd);
    };

    /**
    *
    * Moves the selection to the end of the file.
    **/
    this.selectFileEnd = function() {
        this.$moveSelection(this.moveCursorFileEnd);
    };

    /**
    *
    * Moves the selection to the start of the file.
    **/
    this.selectFileStart = function() {
        this.$moveSelection(this.moveCursorFileStart);
    };

    /**
    *
    * Moves the selection to the first word on the right.
    **/
    this.selectWordRight = function() {
        this.$moveSelection(this.moveCursorWordRight);
    };

    /**
    *
    * Moves the selection to the first word on the left.
    **/
    this.selectWordLeft = function() {
        this.$moveSelection(this.moveCursorWordLeft);
    };

    /**
    * Moves the selection to highlight the entire word.
    * @related EditSession.getWordRange
    **/
    this.getWordRange = function(row, column) {
        if (typeof column == "undefined") {
            var cursor = row || this.lead;
            row = cursor.row;
            column = cursor.column;
        }
        return this.session.getWordRange(row, column);
    };

    /**
    *
    * Selects an entire word boundary.
    **/
    this.selectWord = function() {
        this.setSelectionRange(this.getWordRange());
    };

    /**
    * Selects a word, including its right whitespace.
    * @related EditSession.getAWordRange
    **/
    this.selectAWord = function() {
        var cursor = this.getCursor();
        var range = this.session.getAWordRange(cursor.row, cursor.column);
        this.setSelectionRange(range);
    };

    this.getLineRange = function(row, excludeLastChar) {
        var rowStart = typeof row == "number" ? row : this.lead.row;
        var rowEnd;

        var foldLine = this.session.getFoldLine(rowStart);
        if (foldLine) {
            rowStart = foldLine.start.row;
            rowEnd = foldLine.end.row;
        } else {
            rowEnd = rowStart;
        }
        if (excludeLastChar === true)
            return new Range(rowStart, 0, rowEnd, this.session.getLine(rowEnd).length);
        else
            return new Range(rowStart, 0, rowEnd + 1, 0);
    };

    /**
    * Selects the entire line.
    **/
    this.selectLine = function() {
        this.setSelectionRange(this.getLineRange());
    };

    /**
    *
    * Moves the cursor up one row.
    **/
    this.moveCursorUp = function() {
        this.moveCursorBy(-1, 0);
    };

    /**
    *
    * Moves the cursor down one row.
    **/
    this.moveCursorDown = function() {
        this.moveCursorBy(1, 0);
    };

    /**
    *
    * Moves the cursor left one column.
    **/
    this.moveCursorLeft = function() {
        var cursor = this.lead.getPosition(),
            fold;

        if (fold = this.session.getFoldAt(cursor.row, cursor.column, -1)) {
            this.moveCursorTo(fold.start.row, fold.start.column);
        } else if (cursor.column == 0) {
            // cursor is a line (start
            if (cursor.row > 0) {
                this.moveCursorTo(cursor.row - 1, this.doc.getLine(cursor.row - 1).length);
            }
        }
        else {
            var tabSize = this.session.getTabSize();
            if (this.session.isTabStop(cursor) && this.doc.getLine(cursor.row).slice(cursor.column-tabSize, cursor.column).split(" ").length-1 == tabSize)
                this.moveCursorBy(0, -tabSize);
            else
                this.moveCursorBy(0, -1);
        }
    };

    /**
    *
    * Moves the cursor right one column.
    **/
    this.moveCursorRight = function() {
        var cursor = this.lead.getPosition(),
            fold;
        if (fold = this.session.getFoldAt(cursor.row, cursor.column, 1)) {
            this.moveCursorTo(fold.end.row, fold.end.column);
        }
        else if (this.lead.column == this.doc.getLine(this.lead.row).length) {
            if (this.lead.row < this.doc.getLength() - 1) {
                this.moveCursorTo(this.lead.row + 1, 0);
            }
        }
        else {
            var tabSize = this.session.getTabSize();
            var cursor = this.lead;
            if (this.session.isTabStop(cursor) && this.doc.getLine(cursor.row).slice(cursor.column, cursor.column+tabSize).split(" ").length-1 == tabSize)
                this.moveCursorBy(0, tabSize);
            else
                this.moveCursorBy(0, 1);
        }
    };

    /**
    *
    * Moves the cursor to the start of the line.
    **/
    this.moveCursorLineStart = function() {
        var row = this.lead.row;
        var column = this.lead.column;
        var screenRow = this.session.documentToScreenRow(row, column);

        // Determ the doc-position of the first character at the screen line.
        var firstColumnPosition = this.session.screenToDocumentPosition(screenRow, 0);

        // Determ the line
        var beforeCursor = this.session.getDisplayLine(
            row, null, firstColumnPosition.row,
            firstColumnPosition.column
        );

        var leadingSpace = beforeCursor.match(/^\s*/);
        // TODO find better way for emacs mode to override selection behaviors
        if (leadingSpace[0].length != column && !this.session.$useEmacsStyleLineStart)
            firstColumnPosition.column += leadingSpace[0].length;
        this.moveCursorToPosition(firstColumnPosition);
    };

    /**
    *
    * Moves the cursor to the end of the line.
    **/
    this.moveCursorLineEnd = function() {
        var lead = this.lead;
        var lineEnd = this.session.getDocumentLastRowColumnPosition(lead.row, lead.column);
        if (this.lead.column == lineEnd.column) {
            var line = this.session.getLine(lineEnd.row);
            if (lineEnd.column == line.length) {
                var textEnd = line.search(/\s+$/);
                if (textEnd > 0)
                    lineEnd.column = textEnd;
            }
        }

        this.moveCursorTo(lineEnd.row, lineEnd.column);
    };

    /**
    *
    * Moves the cursor to the end of the file.
    **/
    this.moveCursorFileEnd = function() {
        var row = this.doc.getLength() - 1;
        var column = this.doc.getLine(row).length;
        this.moveCursorTo(row, column);
    };

    /**
    *
    * Moves the cursor to the start of the file.
    **/
    this.moveCursorFileStart = function() {
        this.moveCursorTo(0, 0);
    };

    /**
    *
    * Moves the cursor to the word on the right.
    **/
    this.moveCursorLongWordRight = function() {
        var row = this.lead.row;
        var column = this.lead.column;
        var line = this.doc.getLine(row);
        var rightOfCursor = line.substring(column);

        var match;
        this.session.nonTokenRe.lastIndex = 0;
        this.session.tokenRe.lastIndex = 0;

        // skip folds
        var fold = this.session.getFoldAt(row, column, 1);
        if (fold) {
            this.moveCursorTo(fold.end.row, fold.end.column);
            return;
        }

        // first skip space
        if (match = this.session.nonTokenRe.exec(rightOfCursor)) {
            column += this.session.nonTokenRe.lastIndex;
            this.session.nonTokenRe.lastIndex = 0;
            rightOfCursor = line.substring(column);
        }

        // if at line end proceed with next line
        if (column >= line.length) {
            this.moveCursorTo(row, line.length);
            this.moveCursorRight();
            if (row < this.doc.getLength() - 1)
                this.moveCursorWordRight();
            return;
        }

        // advance to the end of the next token
        if (match = this.session.tokenRe.exec(rightOfCursor)) {
            column += this.session.tokenRe.lastIndex;
            this.session.tokenRe.lastIndex = 0;
        }

        this.moveCursorTo(row, column);
    };

    /**
    *
    * Moves the cursor to the word on the left.
    **/
    this.moveCursorLongWordLeft = function() {
        var row = this.lead.row;
        var column = this.lead.column;

        // skip folds
        var fold;
        if (fold = this.session.getFoldAt(row, column, -1)) {
            this.moveCursorTo(fold.start.row, fold.start.column);
            return;
        }

        var str = this.session.getFoldStringAt(row, column, -1);
        if (str == null) {
            str = this.doc.getLine(row).substring(0, column)
        }

        var leftOfCursor = lang.stringReverse(str);
        var match;
        this.session.nonTokenRe.lastIndex = 0;
        this.session.tokenRe.lastIndex = 0;

        // skip whitespace
        if (match = this.session.nonTokenRe.exec(leftOfCursor)) {
            column -= this.session.nonTokenRe.lastIndex;
            leftOfCursor = leftOfCursor.slice(this.session.nonTokenRe.lastIndex);
            this.session.nonTokenRe.lastIndex = 0;
        }

        // if at begin of the line proceed in line above
        if (column <= 0) {
            this.moveCursorTo(row, 0);
            this.moveCursorLeft();
            if (row > 0)
                this.moveCursorWordLeft();
            return;
        }

        // move to the begin of the word
        if (match = this.session.tokenRe.exec(leftOfCursor)) {
            column -= this.session.tokenRe.lastIndex;
            this.session.tokenRe.lastIndex = 0;
        }

        this.moveCursorTo(row, column);
    };

    this.$shortWordEndIndex = function(rightOfCursor) {
        var match, index = 0, ch;
        var whitespaceRe = /\s/;
        var tokenRe = this.session.tokenRe;

        tokenRe.lastIndex = 0;
        if (match = this.session.tokenRe.exec(rightOfCursor)) {
            index = this.session.tokenRe.lastIndex;
        } else {
            while ((ch = rightOfCursor[index]) && whitespaceRe.test(ch))
                index ++;

            if (index < 1) {
                tokenRe.lastIndex = 0;
                 while ((ch = rightOfCursor[index]) && !tokenRe.test(ch)) {
                    tokenRe.lastIndex = 0;
                    index ++;
                    if (whitespaceRe.test(ch)) {
                        if (index > 2) {
                            index--
                            break;
                        } else {
                            while ((ch = rightOfCursor[index]) && whitespaceRe.test(ch))
                                index ++;
                            if (index > 2)
                                break
                        }
                    }
                }
            }
        }
        tokenRe.lastIndex = 0;

        return index;
    };

    this.moveCursorShortWordRight = function() {
        var row = this.lead.row;
        var column = this.lead.column;
        var line = this.doc.getLine(row);
        var rightOfCursor = line.substring(column);

        var fold = this.session.getFoldAt(row, column, 1);
        if (fold)
            return this.moveCursorTo(fold.end.row, fold.end.column);

        if (column == line.length) {
            var l = this.doc.getLength();
            do {
                row++;
                rightOfCursor = this.doc.getLine(row)
            } while (row < l && /^\s*$/.test(rightOfCursor))

            if (!/^\s+/.test(rightOfCursor))
                rightOfCursor = ""
            column = 0;
        }

        var index = this.$shortWordEndIndex(rightOfCursor);

        this.moveCursorTo(row, column + index);
    };

    this.moveCursorShortWordLeft = function() {
        var row = this.lead.row;
        var column = this.lead.column;

        var fold;
        if (fold = this.session.getFoldAt(row, column, -1))
            return this.moveCursorTo(fold.start.row, fold.start.column);

        var line = this.session.getLine(row).substring(0, column);
        if (column == 0) {
            do {
                row--;
                line = this.doc.getLine(row);
            } while (row > 0 && /^\s*$/.test(line))

            column = line.length;
            if (!/\s+$/.test(line))
                line = ""
        }

        var leftOfCursor = lang.stringReverse(line);
        var index = this.$shortWordEndIndex(leftOfCursor);

        return this.moveCursorTo(row, column - index);
    };

    this.moveCursorWordRight = function() {
        if (this.session.$selectLongWords)
            this.moveCursorLongWordRight();
        else
            this.moveCursorShortWordRight();
    };

    this.moveCursorWordLeft = function() {
        if (this.session.$selectLongWords)
            this.moveCursorLongWordLeft();
        else
            this.moveCursorShortWordLeft();
    };

    /**
    * Moves the cursor to position indicated by the parameters. Negative numbers move the cursor backwards in the document.
    * @param {Number} rows The number of rows to move by
    * @param {Number} chars The number of characters to move by
    *
    *
    * @related EditSession.documentToScreenPosition
    **/
    this.moveCursorBy = function(rows, chars) {
        var screenPos = this.session.documentToScreenPosition(
            this.lead.row,
            this.lead.column
        );

        if (chars === 0) {
            if (this.$desiredColumn)
                screenPos.column = this.$desiredColumn;
            else
                this.$desiredColumn = screenPos.column;
        }

        var docPos = this.session.screenToDocumentPosition(screenPos.row + rows, screenPos.column);

        // move the cursor and update the desired column
        this.moveCursorTo(docPos.row, docPos.column + chars, chars === 0);
    };

    /**
    * Moves the selection to the position indicated by its `row` and `column`.
    * @param {Object} position The position to move to
    *
    *
    **/
    this.moveCursorToPosition = function(position) {
        this.moveCursorTo(position.row, position.column);
    };

    /**
    * Moves the cursor to the row and column provided. [If `preventUpdateDesiredColumn` is `true`, then the cursor stays in the same column position as its original point.]{: #preventUpdateBoolDesc}
    * @param {Number} row The row to move to
    * @param {Number} column The column to move to
    * @param {Boolean} keepDesiredColumn [If `true`, the cursor move does not respect the previous column]{: #preventUpdateBool}
    *
    *
    **/
    this.moveCursorTo = function(row, column, keepDesiredColumn) {
        // Ensure the row/column is not inside of a fold.
        var fold = this.session.getFoldAt(row, column, 1);
        if (fold) {
            row = fold.start.row;
            column = fold.start.column;
        }

        this.$keepDesiredColumnOnChange = true;
        this.lead.setPosition(row, column);
        this.$keepDesiredColumnOnChange = false;

        if (!keepDesiredColumn)
            this.$desiredColumn = null;
    };

    /**
    * Moves the cursor to the screen position indicated by row and column. {:preventUpdateBoolDesc}
    * @param {Number} row The row to move to
    * @param {Number} column The column to move to
    * @param {Boolean} keepDesiredColumn {:preventUpdateBool}
    *
    *
    **/
    this.moveCursorToScreen = function(row, column, keepDesiredColumn) {
        var pos = this.session.screenToDocumentPosition(row, column);
        this.moveCursorTo(pos.row, pos.column, keepDesiredColumn);
    };

    // remove listeners from document
    this.detach = function() {
        this.lead.detach();
        this.anchor.detach();
        this.session = this.doc = null;
    }

    this.fromOrientedRange = function(range) {
        this.setSelectionRange(range, range.cursor == range.start);
        this.$desiredColumn = range.desiredColumn || this.$desiredColumn;
    }

    this.toOrientedRange = function(range) {
        var r = this.getRange();
        if (range) {
            range.start.column = r.start.column;
            range.start.row = r.start.row;
            range.end.column = r.end.column;
            range.end.row = r.end.row;
        } else {
            range = r;
        }

        range.cursor = this.isBackwards() ? range.start : range.end;
        range.desiredColumn = this.$desiredColumn;
        return range;
    }

    this.toJSON = function() {
        if (this.rangeCount) {
            var data = this.ranges.map(function(r) {
                var r1 = r.clone();
                r1.isBackwards = r.cursor == r.start;
                return r1;
            });
        } else {
            var data = this.getRange();
            data.isBackwards = this.isBackwards();
        }
        return data;
    };

    this.fromJSON = function(data) {
        if (data.start == undefined) {
            if (this.rangeList) {
                this.toSingleRange(data[0]);
                for (var i = data.length; i--; ) {
                    var r = Range.fromPoints(data[i].start, data[i].end);
                    if (data.isBackwards)
                        r.cursor = r.start;
                    this.addRange(r, true);
                }
                return;
            } else
                data = data[0];
        }
        if (this.rangeList)
            this.toSingleRange(data);
        this.setSelectionRange(data, data.isBackwards);
    };

    this.isEqual = function(data) {
        if ((data.length || this.rangeCount) && data.length != this.rangeCount)
            return false;
        if (!data.length || !this.ranges)
            return this.getRange().isEqual(data);

        for (var i = this.ranges.length; i--; ) {
            if (!this.ranges[i].isEqual(data[i]))
                return false
        }
        return true;
    }

}).call(Selection.prototype);

exports.Selection = Selection;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/tokenizer',['require','exports','module'],function(require, exports, module) {


// tokenizing lines longer than this makes editor very slow
var MAX_TOKEN_COUNT = 1000;
/**
 *
 *
 * This class takes a set of highlighting rules, and creates a tokenizer out of them. For more information, see [the wiki on extending highlighters](https://github.com/ajaxorg/ace/wiki/Creating-or-Extending-an-Edit-Mode#wiki-extendingTheHighlighter).
 * @class Tokenizer
 **/

/**
 * Constructs a new tokenizer based on the given rules and flags.
 * @param {Object} rules The highlighting rules
 *
 * @constructor
 **/
var Tokenizer = function(rules) {
    this.states = rules;

    this.regExps = {};
    this.matchMappings = {};
    for (var key in this.states) {
        var state = this.states[key];
        var ruleRegExps = [];
        var matchTotal = 0;
        var mapping = this.matchMappings[key] = {defaultToken: "text"};
        var flag = "g";

        var splitterRurles = [];
        for (var i = 0; i < state.length; i++) {
            var rule = state[i];
            if (rule.defaultToken)
                mapping.defaultToken = rule.defaultToken;
            if (rule.caseInsensitive)
                flag = "gi";
            if (rule.regex == null)
                continue;

            if (rule.regex instanceof RegExp)
                rule.regex = rule.regex.toString().slice(1, -1);

            // Count number of matching groups. 2 extra groups from the full match
            // And the catch-all on the end (used to force a match);
            var adjustedregex = rule.regex;
            var matchcount = new RegExp("(?:(" + adjustedregex + ")|(.))").exec("a").length - 2;
            if (Array.isArray(rule.token)) {
                if (rule.token.length == 1 || matchcount == 1) {
                    rule.token = rule.token[0];
                } else if (matchcount - 1 != rule.token.length) {
                    throw new Error("number of classes and regexp groups in '" + 
                        rule.token + "'\n'" + rule.regex +  "' doesn't match\n"
                        + (matchcount - 1) + "!=" + rule.token.length);
                } else {
                    rule.tokenArray = rule.token;
                    rule.token = null;
                    rule.onMatch = this.$arrayTokens;
                }
            } else if (typeof rule.token == "function" && !rule.onMatch) {
                if (matchcount > 1)
                    rule.onMatch = this.$applyToken;
                else
                    rule.onMatch = rule.token;
            }

            if (matchcount > 1) {
                if (/\\\d/.test(rule.regex)) {
                    // Replace any backreferences and offset appropriately.
                    adjustedregex = rule.regex.replace(/\\([0-9]+)/g, function (match, digit) {
                        return "\\" + (parseInt(digit, 10) + matchTotal + 1);
                    });
                } else {
                    matchcount = 1;
                    adjustedregex = this.removeCapturingGroups(rule.regex);
                }
                if (!rule.splitRegex && typeof rule.token != "string")
                    splitterRurles.push(rule); // flag will be known only at the very end
            }

            mapping[matchTotal] = i;
            matchTotal += matchcount;

            ruleRegExps.push(adjustedregex);

            // makes property access faster
            if (!rule.onMatch)
                rule.onMatch = null;
            rule.__proto__ = null;
        }
        
        splitterRurles.forEach(function(rule) {
            rule.splitRegex = this.createSplitterRegexp(rule.regex, flag);
        }, this);

        this.regExps[key] = new RegExp("(" + ruleRegExps.join(")|(") + ")|($)", flag);
    }
};

(function() {
    this.$applyToken = function(str) {
        var values = this.splitRegex.exec(str).slice(1);
        var types = this.token.apply(this, values);

        // required for compatibility with old modes
        if (typeof types === "string")
            return [{type: types, value: str}];

        var tokens = [];
        for (var i = 0, l = types.length; i < l; i++) {
            if (values[i])
                tokens[tokens.length] = {
                    type: types[i],
                    value: values[i]
                };
        }
        return tokens;
    },

    this.$arrayTokens = function(str) {
        if (!str)
            return [];
        var values = this.splitRegex.exec(str);
        if (!values)
            return "text";
        var tokens = [];
        var types = this.tokenArray;
        for (var i = 0, l = types.length; i < l; i++) {
            if (values[i + 1])
                tokens[tokens.length] = {
                    type: types[i],
                    value: values[i + 1]
                };
        }
        return tokens;
    };

    this.removeCapturingGroups = function(src) {
        var r = src.replace(
            /\[(?:\\.|[^\]])*?\]|\\.|\(\?[:=!]|(\()/g,
            function(x, y) {return y ? "(?:" : x;}
        );
        return r;
    };

    this.createSplitterRegexp = function(src, flag) {
        if (src.indexOf("(?=") != -1) {
            var stack = 0;
            var inChClass = false;
            var lastCapture = {};
            src.replace(/(\\.)|(\((?:\?[=!])?)|(\))|([\[\]])/g, function(
                m, esc, parenOpen, parenClose, square, index
            ) {
                if (inChClass) {
                    inChClass = square != "]";
                } else if (square) {
                    inChClass = true;
                } else if (parenClose) {
                    if (stack == lastCapture.stack) {
                        lastCapture.end = index+1;
                        lastCapture.stack = -1;
                    }
                    stack--;
                } else if (parenOpen) {
                    stack++;
                    if (parenOpen.length != 1) {
                        lastCapture.stack = stack
                        lastCapture.start = index;
                    }
                }
                return m;
            });

            if (lastCapture.end != null && /^\)*$/.test(src.substr(lastCapture.end)))
                src = src.substring(0, lastCapture.start) + src.substr(lastCapture.end);
        }
        return new RegExp(src, (flag||"").replace("g", ""));
    };

    /**
    * Returns an object containing two properties: `tokens`, which contains all the tokens; and `state`, the current state.
    * @returns {Object}
    **/
    this.getLineTokens = function(line, startState) {
        if (startState && typeof startState != "string") {
            var stack = startState.slice(0);
            startState = stack[0];
        } else
            var stack = [];

        var currentState = startState || "start";
        var state = this.states[currentState];
        var mapping = this.matchMappings[currentState];
        var re = this.regExps[currentState];
        re.lastIndex = 0;

        var match, tokens = [];
        var lastIndex = 0;

        var token = {type: null, value: ""};

        while (match = re.exec(line)) {
            var type = mapping.defaultToken;
            var rule = null;
            var value = match[0];
            var index = re.lastIndex;

            if (index - value.length > lastIndex) {
                var skipped = line.substring(lastIndex, index - value.length);
                if (token.type == type) {
                    token.value += skipped;
                } else {
                    if (token.type)
                        tokens.push(token);
                    token = {type: type, value: skipped};
                }
            }

            for (var i = 0; i < match.length-2; i++) {
                if (match[i + 1] === undefined)
                    continue;

                rule = state[mapping[i]];

                if (rule.onMatch)
                    type = rule.onMatch(value, currentState, stack);
                else
                    type = rule.token;

                if (rule.next) {
                    if (typeof rule.next == "string")
                        currentState = rule.next;
                    else
                        currentState = rule.next(currentState, stack);

                    state = this.states[currentState];
                    if (!state) {
                        window.console && console.error && console.error(currentState, "doesn't exist");
                        currentState = "start";
                        state = this.states[currentState];
                    }
                    mapping = this.matchMappings[currentState];
                    lastIndex = index;
                    re = this.regExps[currentState];
                    re.lastIndex = index;
                }
                break;
            }

            if (value) {
                if (typeof type == "string") {
                    if ((!rule || rule.merge !== false) && token.type === type) {
                        token.value += value;
                    } else {
                        if (token.type)
                            tokens.push(token);
                        token = {type: type, value: value};
                    }
                } else if (type) {
                    if (token.type)
                        tokens.push(token);
                    token = {type: null, value: ""};
                    for (var i = 0; i < type.length; i++)
                        tokens.push(type[i]);
                }
            }

            if (lastIndex == line.length)
                break;

            lastIndex = index;

            if (tokens.length > MAX_TOKEN_COUNT) {
                // chrome doens't show contents of text nodes with very long text
                while (lastIndex < line.length) {
                    if (token.type)
                        tokens.push(token);
                    token = {
                        value: line.substring(lastIndex, lastIndex += 2000),
                        type: "overflow"
                    }    
                }
                currentState = "start";
                stack = [];
                break;
            }
        }

        if (token.type)
            tokens.push(token);

        return {
            tokens : tokens,
            state : stack.length ? stack : currentState
        };
    };

}).call(Tokenizer.prototype);

exports.Tokenizer = Tokenizer;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mode/text_highlight_rules',['require','exports','module','../lib/lang'],function(require, exports, module) {


var lang = require("../lib/lang");

var TextHighlightRules = function() {

    // regexp must not have capturing parentheses
    // regexps are ordered -> the first match is used

    this.$rules = {
        "start" : [{
            token : "empty_line",
            regex : '^$'
        }, {
            defaultToken : "text"
        }]
    };
};

(function() {

    this.addRules = function(rules, prefix) {
        if (!prefix) {
            for (var key in rules)
                this.$rules[key] = rules[key];
            return;
        }
        for (var key in rules) {
            var state = rules[key];
            for (var i = 0; i < state.length; i++) {
                var rule = state[i];
                if (rule.next) {
                    if (typeof rule.next != "string") {
                        if (rule.nextState && rule.nextState.indexOf(prefix) !== 0)
                            rule.nextState = prefix + rule.nextState;
                    } else {
                        if (rule.next.indexOf(prefix) !== 0)
                            rule.next = prefix + rule.next;
                    }

                }
            }
            this.$rules[prefix + key] = state;
        }
    };

    this.getRules = function() {
        return this.$rules;
    };

    this.embedRules = function (HighlightRules, prefix, escapeRules, states, append) {
        var embedRules = new HighlightRules().getRules();
        if (states) {
            for (var i = 0; i < states.length; i++)
                states[i] = prefix + states[i];
        } else {
            states = [];
            for (var key in embedRules)
                states.push(prefix + key);
        }

        this.addRules(embedRules, prefix);

        if (escapeRules) {
            var addRules = Array.prototype[append ? "push" : "unshift"];
            for (var i = 0; i < states.length; i++)
                addRules.apply(this.$rules[states[i]], lang.deepCopy(escapeRules));
        }

        if (!this.$embeds)
            this.$embeds = [];
        this.$embeds.push(prefix);
    };

    this.getEmbeds = function() {
        return this.$embeds;
    };

    var pushState = function(currentState, stack) {
        if (currentState != "start")
            stack.unshift(this.nextState, currentState);
        return this.nextState;
    };
    var popState = function(currentState, stack) {
        if (stack[0] !== currentState)
            return "start";
        stack.shift();
        return stack.shift();
    };

    this.normalizeRules = function() {
        var id = 0;
        var rules = this.$rules;
        function processState(key) {
            var state = rules[key];
            state.processed = true;
            for (var i = 0; i < state.length; i++) {
                var rule = state[i];
                if (!rule.regex && rule.start) {
                    rule.regex = rule.start;
                    if (!rule.next)
                        rule.next = [];
                    rule.next.push({
                        defaultToken: rule.token
                    }, {
                        token: rule.token + ".end",
                        regex: rule.end || rule.start,
                        next: "pop"
                    });
                    rule.token = rule.token + ".start";
                    rule.push = true;
                }
                var next = rule.next || rule.push;
                if (next && Array.isArray(next)) {
                    var stateName = rule.stateName;
                    if (!stateName)  {
                        stateName = rule.token;
                        if (typeof stateName != "string")
                            stateName = stateName[0] || "";
                        if (rules[stateName])
                            stateName += id++;
                    }
                    rules[stateName] = next;
                    rule.next = stateName;
                    processState(stateName);
                } else if (next == "pop") {
                    rule.next = popState;
                }

                if (rule.push) {
                    rule.nextState = rule.next || rule.push;
                    rule.next = pushState;
                    delete rule.push;
                }

                if (rule.rules) {
                    for (var r in rule.rules) {
                        if (rules[r]) {
                            if (rules[r].push)
                                rules[r].push.apply(rules[r], rule.rules[r]);
                        } else {
                            rules[r] = rule.rules[r];
                        }
                    }
                }
                if (rule.include || typeof rule == "string") {
                    var includeName = rule.include || rule;
                    var toInsert = rules[includeName];
                } else if (Array.isArray(rule))
                    toInsert = rule;

                if (toInsert) {
                    var args = [i, 1].concat(toInsert);
                    if (rule.noEscape)
                        args = args.filter(function(x) {return !x.next;});
                    state.splice.apply(state, args);
                    // skip included rules since they are already processed
                    //i += args.length - 3;
                    i--;
                    toInsert = null
                }
                
                if (rule.keywordMap) {
                    rule.token = this.createKeywordMapper(
                        rule.keywordMap, rule.defaultToken || "text", rule.caseInsensitive
                    );
                    delete rule.defaultToken;
                }
            }
        };
        Object.keys(rules).forEach(processState, this);
    };

    this.createKeywordMapper = function(map, defaultToken, ignoreCase, splitChar) {
        var keywords = Object.create(null);
        Object.keys(map).forEach(function(className) {
            var a = map[className];
            if (ignoreCase)
                a = a.toLowerCase();
            var list = a.split(splitChar || "|");
            for (var i = list.length; i--; )
                keywords[list[i]] = className;
        });
        this.$keywordList = Object.keys(keywords);
        map = null;
        return ignoreCase
            ? function(value) {return keywords[value.toLowerCase()] || defaultToken }
            : function(value) {return keywords[value] || defaultToken };
    }

    this.getKeywords = function() {
        return this.$keywords;
    };

}).call(TextHighlightRules.prototype);

exports.TextHighlightRules = TextHighlightRules;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mode/behaviour',['require','exports','module'],function(require, exports, module) {


var Behaviour = function() {
   this.$behaviours = {};
};

(function () {

    this.add = function (name, action, callback) {
        switch (undefined) {
          case this.$behaviours:
              this.$behaviours = {};
          case this.$behaviours[name]:
              this.$behaviours[name] = {};
        }
        this.$behaviours[name][action] = callback;
    }
    
    this.addBehaviours = function (behaviours) {
        for (var key in behaviours) {
            for (var action in behaviours[key]) {
                this.add(key, action, behaviours[key][action]);
            }
        }
    }
    
    this.remove = function (name) {
        if (this.$behaviours && this.$behaviours[name]) {
            delete this.$behaviours[name];
        }
    }
    
    this.inherit = function (mode, filter) {
        if (typeof mode === "function") {
            var behaviours = new mode().getBehaviours(filter);
        } else {
            var behaviours = mode.getBehaviours(filter);
        }
        this.addBehaviours(behaviours);
    }
    
    this.getBehaviours = function (filter) {
        if (!filter) {
            return this.$behaviours;
        } else {
            var ret = {}
            for (var i = 0; i < filter.length; i++) {
                if (this.$behaviours[filter[i]]) {
                    ret[filter[i]] = this.$behaviours[filter[i]];
                }
            }
            return ret;
        }
    }

}).call(Behaviour.prototype);

exports.Behaviour = Behaviour;
});

define('ace/unicode',['require','exports','module'],function(require, exports, module) {


/*
XRegExp Unicode plugin pack: Categories 1.0
(c) 2010 Steven Levithan
MIT License
<http://xregexp.com>
Uses the Unicode 5.2 character database

This package for the XRegExp Unicode plugin enables the following Unicode categories (aka properties):

L - Letter (the top-level Letter category is included in the Unicode plugin base script)
    Ll - Lowercase letter
    Lu - Uppercase letter
    Lt - Titlecase letter
    Lm - Modifier letter
    Lo - Letter without case
M - Mark
    Mn - Non-spacing mark
    Mc - Spacing combining mark
    Me - Enclosing mark
N - Number
    Nd - Decimal digit
    Nl - Letter number
    No -  Other number
P - Punctuation
    Pd - Dash punctuation
    Ps - Open punctuation
    Pe - Close punctuation
    Pi - Initial punctuation
    Pf - Final punctuation
    Pc - Connector punctuation
    Po - Other punctuation
S - Symbol
    Sm - Math symbol
    Sc - Currency symbol
    Sk - Modifier symbol
    So - Other symbol
Z - Separator
    Zs - Space separator
    Zl - Line separator
    Zp - Paragraph separator
C - Other
    Cc - Control
    Cf - Format
    Co - Private use
    Cs - Surrogate
    Cn - Unassigned

Example usage:

    \p{N}
    \p{Cn}
*/


// will be populated by addUnicodePackage
exports.packages = {};

addUnicodePackage({
    L:  "0041-005A0061-007A00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE0370-037403760377037A-037D03860388-038A038C038E-03A103A3-03F503F7-0481048A-05250531-055605590561-058705D0-05EA05F0-05F20621-064A066E066F0671-06D306D506E506E606EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA07F407F507FA0800-0815081A082408280904-0939093D09500958-0961097109720979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10D05-0D0C0D0E-0D100D12-0D280D2A-0D390D3D0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E460E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EC60EDC0EDD0F000F40-0F470F49-0F6C0F88-0F8B1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10A0-10C510D0-10FA10FC1100-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317D717DC1820-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541AA71B05-1B331B45-1B4B1B83-1BA01BAE1BAF1C00-1C231C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF11D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209421022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E218321842C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2D00-2D252D30-2D652D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2E2F300530063031-3035303B303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31B731F0-31FF3400-4DB54E00-9FCBA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A65FA662-A66EA67F-A697A6A0-A6E5A717-A71FA722-A788A78BA78CA7FB-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2A9CFAA00-AA28AA40-AA42AA44-AA4BAA60-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADB-AADDABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA2DFA30-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC",
    Ll: "0061-007A00AA00B500BA00DF-00F600F8-00FF01010103010501070109010B010D010F01110113011501170119011B011D011F01210123012501270129012B012D012F01310133013501370138013A013C013E014001420144014601480149014B014D014F01510153015501570159015B015D015F01610163016501670169016B016D016F0171017301750177017A017C017E-0180018301850188018C018D019201950199-019B019E01A101A301A501A801AA01AB01AD01B001B401B601B901BA01BD-01BF01C601C901CC01CE01D001D201D401D601D801DA01DC01DD01DF01E101E301E501E701E901EB01ED01EF01F001F301F501F901FB01FD01FF02010203020502070209020B020D020F02110213021502170219021B021D021F02210223022502270229022B022D022F02310233-0239023C023F0240024202470249024B024D024F-02930295-02AF037103730377037B-037D039003AC-03CE03D003D103D5-03D703D903DB03DD03DF03E103E303E503E703E903EB03ED03EF-03F303F503F803FB03FC0430-045F04610463046504670469046B046D046F04710473047504770479047B047D047F0481048B048D048F04910493049504970499049B049D049F04A104A304A504A704A904AB04AD04AF04B104B304B504B704B904BB04BD04BF04C204C404C604C804CA04CC04CE04CF04D104D304D504D704D904DB04DD04DF04E104E304E504E704E904EB04ED04EF04F104F304F504F704F904FB04FD04FF05010503050505070509050B050D050F05110513051505170519051B051D051F0521052305250561-05871D00-1D2B1D62-1D771D79-1D9A1E011E031E051E071E091E0B1E0D1E0F1E111E131E151E171E191E1B1E1D1E1F1E211E231E251E271E291E2B1E2D1E2F1E311E331E351E371E391E3B1E3D1E3F1E411E431E451E471E491E4B1E4D1E4F1E511E531E551E571E591E5B1E5D1E5F1E611E631E651E671E691E6B1E6D1E6F1E711E731E751E771E791E7B1E7D1E7F1E811E831E851E871E891E8B1E8D1E8F1E911E931E95-1E9D1E9F1EA11EA31EA51EA71EA91EAB1EAD1EAF1EB11EB31EB51EB71EB91EBB1EBD1EBF1EC11EC31EC51EC71EC91ECB1ECD1ECF1ED11ED31ED51ED71ED91EDB1EDD1EDF1EE11EE31EE51EE71EE91EEB1EED1EEF1EF11EF31EF51EF71EF91EFB1EFD1EFF-1F071F10-1F151F20-1F271F30-1F371F40-1F451F50-1F571F60-1F671F70-1F7D1F80-1F871F90-1F971FA0-1FA71FB0-1FB41FB61FB71FBE1FC2-1FC41FC61FC71FD0-1FD31FD61FD71FE0-1FE71FF2-1FF41FF61FF7210A210E210F2113212F21342139213C213D2146-2149214E21842C30-2C5E2C612C652C662C682C6A2C6C2C712C732C742C76-2C7C2C812C832C852C872C892C8B2C8D2C8F2C912C932C952C972C992C9B2C9D2C9F2CA12CA32CA52CA72CA92CAB2CAD2CAF2CB12CB32CB52CB72CB92CBB2CBD2CBF2CC12CC32CC52CC72CC92CCB2CCD2CCF2CD12CD32CD52CD72CD92CDB2CDD2CDF2CE12CE32CE42CEC2CEE2D00-2D25A641A643A645A647A649A64BA64DA64FA651A653A655A657A659A65BA65DA65FA663A665A667A669A66BA66DA681A683A685A687A689A68BA68DA68FA691A693A695A697A723A725A727A729A72BA72DA72F-A731A733A735A737A739A73BA73DA73FA741A743A745A747A749A74BA74DA74FA751A753A755A757A759A75BA75DA75FA761A763A765A767A769A76BA76DA76FA771-A778A77AA77CA77FA781A783A785A787A78CFB00-FB06FB13-FB17FF41-FF5A",
    Lu: "0041-005A00C0-00D600D8-00DE01000102010401060108010A010C010E01100112011401160118011A011C011E01200122012401260128012A012C012E01300132013401360139013B013D013F0141014301450147014A014C014E01500152015401560158015A015C015E01600162016401660168016A016C016E017001720174017601780179017B017D018101820184018601870189-018B018E-0191019301940196-0198019C019D019F01A001A201A401A601A701A901AC01AE01AF01B1-01B301B501B701B801BC01C401C701CA01CD01CF01D101D301D501D701D901DB01DE01E001E201E401E601E801EA01EC01EE01F101F401F6-01F801FA01FC01FE02000202020402060208020A020C020E02100212021402160218021A021C021E02200222022402260228022A022C022E02300232023A023B023D023E02410243-02460248024A024C024E03700372037603860388-038A038C038E038F0391-03A103A3-03AB03CF03D2-03D403D803DA03DC03DE03E003E203E403E603E803EA03EC03EE03F403F703F903FA03FD-042F04600462046404660468046A046C046E04700472047404760478047A047C047E0480048A048C048E04900492049404960498049A049C049E04A004A204A404A604A804AA04AC04AE04B004B204B404B604B804BA04BC04BE04C004C104C304C504C704C904CB04CD04D004D204D404D604D804DA04DC04DE04E004E204E404E604E804EA04EC04EE04F004F204F404F604F804FA04FC04FE05000502050405060508050A050C050E05100512051405160518051A051C051E0520052205240531-055610A0-10C51E001E021E041E061E081E0A1E0C1E0E1E101E121E141E161E181E1A1E1C1E1E1E201E221E241E261E281E2A1E2C1E2E1E301E321E341E361E381E3A1E3C1E3E1E401E421E441E461E481E4A1E4C1E4E1E501E521E541E561E581E5A1E5C1E5E1E601E621E641E661E681E6A1E6C1E6E1E701E721E741E761E781E7A1E7C1E7E1E801E821E841E861E881E8A1E8C1E8E1E901E921E941E9E1EA01EA21EA41EA61EA81EAA1EAC1EAE1EB01EB21EB41EB61EB81EBA1EBC1EBE1EC01EC21EC41EC61EC81ECA1ECC1ECE1ED01ED21ED41ED61ED81EDA1EDC1EDE1EE01EE21EE41EE61EE81EEA1EEC1EEE1EF01EF21EF41EF61EF81EFA1EFC1EFE1F08-1F0F1F18-1F1D1F28-1F2F1F38-1F3F1F48-1F4D1F591F5B1F5D1F5F1F68-1F6F1FB8-1FBB1FC8-1FCB1FD8-1FDB1FE8-1FEC1FF8-1FFB21022107210B-210D2110-211221152119-211D212421262128212A-212D2130-2133213E213F214521832C00-2C2E2C602C62-2C642C672C692C6B2C6D-2C702C722C752C7E-2C802C822C842C862C882C8A2C8C2C8E2C902C922C942C962C982C9A2C9C2C9E2CA02CA22CA42CA62CA82CAA2CAC2CAE2CB02CB22CB42CB62CB82CBA2CBC2CBE2CC02CC22CC42CC62CC82CCA2CCC2CCE2CD02CD22CD42CD62CD82CDA2CDC2CDE2CE02CE22CEB2CEDA640A642A644A646A648A64AA64CA64EA650A652A654A656A658A65AA65CA65EA662A664A666A668A66AA66CA680A682A684A686A688A68AA68CA68EA690A692A694A696A722A724A726A728A72AA72CA72EA732A734A736A738A73AA73CA73EA740A742A744A746A748A74AA74CA74EA750A752A754A756A758A75AA75CA75EA760A762A764A766A768A76AA76CA76EA779A77BA77DA77EA780A782A784A786A78BFF21-FF3A",
    Lt: "01C501C801CB01F21F88-1F8F1F98-1F9F1FA8-1FAF1FBC1FCC1FFC",
    Lm: "02B0-02C102C6-02D102E0-02E402EC02EE0374037A0559064006E506E607F407F507FA081A0824082809710E460EC610FC17D718431AA71C78-1C7D1D2C-1D611D781D9B-1DBF2071207F2090-20942C7D2D6F2E2F30053031-3035303B309D309E30FC-30FEA015A4F8-A4FDA60CA67FA717-A71FA770A788A9CFAA70AADDFF70FF9EFF9F",
    Lo: "01BB01C0-01C3029405D0-05EA05F0-05F20621-063F0641-064A066E066F0671-06D306D506EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA0800-08150904-0939093D09500958-096109720979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10D05-0D0C0D0E-0D100D12-0D280D2A-0D390D3D0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E450E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EDC0EDD0F000F40-0F470F49-0F6C0F88-0F8B1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10D0-10FA1100-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317DC1820-18421844-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541B05-1B331B45-1B4B1B83-1BA01BAE1BAF1C00-1C231C4D-1C4F1C5A-1C771CE9-1CEC1CEE-1CF12135-21382D30-2D652D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE3006303C3041-3096309F30A1-30FA30FF3105-312D3131-318E31A0-31B731F0-31FF3400-4DB54E00-9FCBA000-A014A016-A48CA4D0-A4F7A500-A60BA610-A61FA62AA62BA66EA6A0-A6E5A7FB-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2AA00-AA28AA40-AA42AA44-AA4BAA60-AA6FAA71-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADBAADCABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA2DFA30-FA6DFA70-FAD9FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF66-FF6FFF71-FF9DFFA0-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC",
    M:  "0300-036F0483-04890591-05BD05BF05C105C205C405C505C70610-061A064B-065E067006D6-06DC06DE-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0900-0903093C093E-094E0951-0955096209630981-098309BC09BE-09C409C709C809CB-09CD09D709E209E30A01-0A030A3C0A3E-0A420A470A480A4B-0A4D0A510A700A710A750A81-0A830ABC0ABE-0AC50AC7-0AC90ACB-0ACD0AE20AE30B01-0B030B3C0B3E-0B440B470B480B4B-0B4D0B560B570B620B630B820BBE-0BC20BC6-0BC80BCA-0BCD0BD70C01-0C030C3E-0C440C46-0C480C4A-0C4D0C550C560C620C630C820C830CBC0CBE-0CC40CC6-0CC80CCA-0CCD0CD50CD60CE20CE30D020D030D3E-0D440D46-0D480D4A-0D4D0D570D620D630D820D830DCA0DCF-0DD40DD60DD8-0DDF0DF20DF30E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F3E0F3F0F71-0F840F860F870F90-0F970F99-0FBC0FC6102B-103E1056-1059105E-10601062-10641067-106D1071-10741082-108D108F109A-109D135F1712-17141732-1734175217531772177317B6-17D317DD180B-180D18A91920-192B1930-193B19B0-19C019C819C91A17-1A1B1A55-1A5E1A60-1A7C1A7F1B00-1B041B34-1B441B6B-1B731B80-1B821BA1-1BAA1C24-1C371CD0-1CD21CD4-1CE81CED1CF21DC0-1DE61DFD-1DFF20D0-20F02CEF-2CF12DE0-2DFF302A-302F3099309AA66F-A672A67CA67DA6F0A6F1A802A806A80BA823-A827A880A881A8B4-A8C4A8E0-A8F1A926-A92DA947-A953A980-A983A9B3-A9C0AA29-AA36AA43AA4CAA4DAA7BAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1ABE3-ABEAABECABEDFB1EFE00-FE0FFE20-FE26",
    Mn: "0300-036F0483-04870591-05BD05BF05C105C205C405C505C70610-061A064B-065E067006D6-06DC06DF-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0900-0902093C0941-0948094D0951-095509620963098109BC09C1-09C409CD09E209E30A010A020A3C0A410A420A470A480A4B-0A4D0A510A700A710A750A810A820ABC0AC1-0AC50AC70AC80ACD0AE20AE30B010B3C0B3F0B41-0B440B4D0B560B620B630B820BC00BCD0C3E-0C400C46-0C480C4A-0C4D0C550C560C620C630CBC0CBF0CC60CCC0CCD0CE20CE30D41-0D440D4D0D620D630DCA0DD2-0DD40DD60E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F71-0F7E0F80-0F840F860F870F90-0F970F99-0FBC0FC6102D-10301032-10371039103A103D103E10581059105E-10601071-1074108210851086108D109D135F1712-17141732-1734175217531772177317B7-17BD17C617C9-17D317DD180B-180D18A91920-19221927192819321939-193B1A171A181A561A58-1A5E1A601A621A65-1A6C1A73-1A7C1A7F1B00-1B031B341B36-1B3A1B3C1B421B6B-1B731B801B811BA2-1BA51BA81BA91C2C-1C331C361C371CD0-1CD21CD4-1CE01CE2-1CE81CED1DC0-1DE61DFD-1DFF20D0-20DC20E120E5-20F02CEF-2CF12DE0-2DFF302A-302F3099309AA66FA67CA67DA6F0A6F1A802A806A80BA825A826A8C4A8E0-A8F1A926-A92DA947-A951A980-A982A9B3A9B6-A9B9A9BCAA29-AA2EAA31AA32AA35AA36AA43AA4CAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1ABE5ABE8ABEDFB1EFE00-FE0FFE20-FE26",
    Mc: "0903093E-09400949-094C094E0982098309BE-09C009C709C809CB09CC09D70A030A3E-0A400A830ABE-0AC00AC90ACB0ACC0B020B030B3E0B400B470B480B4B0B4C0B570BBE0BBF0BC10BC20BC6-0BC80BCA-0BCC0BD70C01-0C030C41-0C440C820C830CBE0CC0-0CC40CC70CC80CCA0CCB0CD50CD60D020D030D3E-0D400D46-0D480D4A-0D4C0D570D820D830DCF-0DD10DD8-0DDF0DF20DF30F3E0F3F0F7F102B102C10311038103B103C105610571062-10641067-106D108310841087-108C108F109A-109C17B617BE-17C517C717C81923-19261929-192B193019311933-193819B0-19C019C819C91A19-1A1B1A551A571A611A631A641A6D-1A721B041B351B3B1B3D-1B411B431B441B821BA11BA61BA71BAA1C24-1C2B1C341C351CE11CF2A823A824A827A880A881A8B4-A8C3A952A953A983A9B4A9B5A9BAA9BBA9BD-A9C0AA2FAA30AA33AA34AA4DAA7BABE3ABE4ABE6ABE7ABE9ABEAABEC",
    Me: "0488048906DE20DD-20E020E2-20E4A670-A672",
    N:  "0030-003900B200B300B900BC-00BE0660-066906F0-06F907C0-07C90966-096F09E6-09EF09F4-09F90A66-0A6F0AE6-0AEF0B66-0B6F0BE6-0BF20C66-0C6F0C78-0C7E0CE6-0CEF0D66-0D750E50-0E590ED0-0ED90F20-0F331040-10491090-10991369-137C16EE-16F017E0-17E917F0-17F91810-18191946-194F19D0-19DA1A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C5920702074-20792080-20892150-21822185-21892460-249B24EA-24FF2776-27932CFD30073021-30293038-303A3192-31953220-32293251-325F3280-328932B1-32BFA620-A629A6E6-A6EFA830-A835A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19",
    Nd: "0030-00390660-066906F0-06F907C0-07C90966-096F09E6-09EF0A66-0A6F0AE6-0AEF0B66-0B6F0BE6-0BEF0C66-0C6F0CE6-0CEF0D66-0D6F0E50-0E590ED0-0ED90F20-0F291040-10491090-109917E0-17E91810-18191946-194F19D0-19DA1A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C59A620-A629A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19",
    Nl: "16EE-16F02160-21822185-218830073021-30293038-303AA6E6-A6EF",
    No: "00B200B300B900BC-00BE09F4-09F90BF0-0BF20C78-0C7E0D70-0D750F2A-0F331369-137C17F0-17F920702074-20792080-20892150-215F21892460-249B24EA-24FF2776-27932CFD3192-31953220-32293251-325F3280-328932B1-32BFA830-A835",
    P:  "0021-00230025-002A002C-002F003A003B003F0040005B-005D005F007B007D00A100AB00B700BB00BF037E0387055A-055F0589058A05BE05C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E0964096509700DF40E4F0E5A0E5B0F04-0F120F3A-0F3D0F850FD0-0FD4104A-104F10FB1361-13681400166D166E169B169C16EB-16ED1735173617D4-17D617D8-17DA1800-180A1944194519DE19DF1A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601C3B-1C3F1C7E1C7F1CD32010-20272030-20432045-20512053-205E207D207E208D208E2329232A2768-277527C527C627E6-27EF2983-299829D8-29DB29FC29FD2CF9-2CFC2CFE2CFF2E00-2E2E2E302E313001-30033008-30113014-301F3030303D30A030FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFABEBFD3EFD3FFE10-FE19FE30-FE52FE54-FE61FE63FE68FE6AFE6BFF01-FF03FF05-FF0AFF0C-FF0FFF1AFF1BFF1FFF20FF3B-FF3DFF3FFF5BFF5DFF5F-FF65",
    Pd: "002D058A05BE140018062010-20152E172E1A301C303030A0FE31FE32FE58FE63FF0D",
    Ps: "0028005B007B0F3A0F3C169B201A201E2045207D208D23292768276A276C276E27702772277427C527E627E827EA27EC27EE2983298529872989298B298D298F299129932995299729D829DA29FC2E222E242E262E283008300A300C300E3010301430163018301A301DFD3EFE17FE35FE37FE39FE3BFE3DFE3FFE41FE43FE47FE59FE5BFE5DFF08FF3BFF5BFF5FFF62",
    Pe: "0029005D007D0F3B0F3D169C2046207E208E232A2769276B276D276F27712773277527C627E727E927EB27ED27EF298429862988298A298C298E2990299229942996299829D929DB29FD2E232E252E272E293009300B300D300F3011301530173019301B301E301FFD3FFE18FE36FE38FE3AFE3CFE3EFE40FE42FE44FE48FE5AFE5CFE5EFF09FF3DFF5DFF60FF63",
    Pi: "00AB2018201B201C201F20392E022E042E092E0C2E1C2E20",
    Pf: "00BB2019201D203A2E032E052E0A2E0D2E1D2E21",
    Pc: "005F203F20402054FE33FE34FE4D-FE4FFF3F",
    Po: "0021-00230025-0027002A002C002E002F003A003B003F0040005C00A100B700BF037E0387055A-055F058905C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E0964096509700DF40E4F0E5A0E5B0F04-0F120F850FD0-0FD4104A-104F10FB1361-1368166D166E16EB-16ED1735173617D4-17D617D8-17DA1800-18051807-180A1944194519DE19DF1A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601C3B-1C3F1C7E1C7F1CD3201620172020-20272030-2038203B-203E2041-20432047-205120532055-205E2CF9-2CFC2CFE2CFF2E002E012E06-2E082E0B2E0E-2E162E182E192E1B2E1E2E1F2E2A-2E2E2E302E313001-3003303D30FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFABEBFE10-FE16FE19FE30FE45FE46FE49-FE4CFE50-FE52FE54-FE57FE5F-FE61FE68FE6AFE6BFF01-FF03FF05-FF07FF0AFF0CFF0EFF0FFF1AFF1BFF1FFF20FF3CFF61FF64FF65",
    S:  "0024002B003C-003E005E0060007C007E00A2-00A900AC00AE-00B100B400B600B800D700F702C2-02C502D2-02DF02E5-02EB02ED02EF-02FF03750384038503F604820606-0608060B060E060F06E906FD06FE07F609F209F309FA09FB0AF10B700BF3-0BFA0C7F0CF10CF20D790E3F0F01-0F030F13-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F13601390-139917DB194019E0-19FF1B61-1B6A1B74-1B7C1FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE20442052207A-207C208A-208C20A0-20B8210021012103-21062108210921142116-2118211E-2123212521272129212E213A213B2140-2144214A-214D214F2190-2328232B-23E82400-24262440-244A249C-24E92500-26CD26CF-26E126E326E8-26FF2701-27042706-2709270C-27272729-274B274D274F-27522756-275E2761-276727942798-27AF27B1-27BE27C0-27C427C7-27CA27CC27D0-27E527F0-29822999-29D729DC-29FB29FE-2B4C2B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F309B309C319031913196-319F31C0-31E33200-321E322A-32503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A700-A716A720A721A789A78AA828-A82BA836-A839AA77-AA79FB29FDFCFDFDFE62FE64-FE66FE69FF04FF0BFF1C-FF1EFF3EFF40FF5CFF5EFFE0-FFE6FFE8-FFEEFFFCFFFD",
    Sm: "002B003C-003E007C007E00AC00B100D700F703F60606-060820442052207A-207C208A-208C2140-2144214B2190-2194219A219B21A021A321A621AE21CE21CF21D221D421F4-22FF2308-230B23202321237C239B-23B323DC-23E125B725C125F8-25FF266F27C0-27C427C7-27CA27CC27D0-27E527F0-27FF2900-29822999-29D729DC-29FB29FE-2AFF2B30-2B442B47-2B4CFB29FE62FE64-FE66FF0BFF1C-FF1EFF5CFF5EFFE2FFE9-FFEC",
    Sc: "002400A2-00A5060B09F209F309FB0AF10BF90E3F17DB20A0-20B8A838FDFCFE69FF04FFE0FFE1FFE5FFE6",
    Sk: "005E006000A800AF00B400B802C2-02C502D2-02DF02E5-02EB02ED02EF-02FF0375038403851FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE309B309CA700-A716A720A721A789A78AFF3EFF40FFE3",
    So: "00A600A700A900AE00B000B60482060E060F06E906FD06FE07F609FA0B700BF3-0BF80BFA0C7F0CF10CF20D790F01-0F030F13-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F13601390-1399194019E0-19FF1B61-1B6A1B74-1B7C210021012103-21062108210921142116-2118211E-2123212521272129212E213A213B214A214C214D214F2195-2199219C-219F21A121A221A421A521A7-21AD21AF-21CD21D021D121D321D5-21F32300-2307230C-231F2322-2328232B-237B237D-239A23B4-23DB23E2-23E82400-24262440-244A249C-24E92500-25B625B8-25C025C2-25F72600-266E2670-26CD26CF-26E126E326E8-26FF2701-27042706-2709270C-27272729-274B274D274F-27522756-275E2761-276727942798-27AF27B1-27BE2800-28FF2B00-2B2F2B452B462B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F319031913196-319F31C0-31E33200-321E322A-32503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A828-A82BA836A837A839AA77-AA79FDFDFFE4FFE8FFEDFFEEFFFCFFFD",
    Z:  "002000A01680180E2000-200A20282029202F205F3000",
    Zs: "002000A01680180E2000-200A202F205F3000",
    Zl: "2028",
    Zp: "2029",
    C:  "0000-001F007F-009F00AD03780379037F-0383038B038D03A20526-05300557055805600588058B-059005C8-05CF05EB-05EF05F5-0605061C061D0620065F06DD070E070F074B074C07B2-07BF07FB-07FF082E082F083F-08FF093A093B094F095609570973-097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF00AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B72-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D290D3A-0D3C0D450D490D4E-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EDE-0EFF0F480F6D-0F700F8C-0F8F0F980FBD0FCD0FD9-0FFF10C6-10CF10FD-10FF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B-135E137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17B417B517DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BAB-1BAD1BBA-1BFF1C38-1C3A1C4A-1C4C1C80-1CCF1CF3-1CFF1DE7-1DFC1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF200B-200F202A-202E2060-206F20722073208F2095-209F20B9-20CF20F1-20FF218A-218F23E9-23FF2427-243F244B-245F26CE26E226E4-26E727002705270A270B2728274C274E2753-2755275F27602795-279727B027BF27CB27CD-27CF2B4D-2B4F2B5A-2BFF2C2F2C5F2CF2-2CF82D26-2D2F2D66-2D6E2D70-2D7F2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E32-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31B8-31BF31E4-31EF321F32FF4DB6-4DBF9FCC-9FFFA48D-A48FA4C7-A4CFA62C-A63FA660A661A674-A67BA698-A69FA6F8-A6FFA78D-A7FAA82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAE0-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-F8FFFA2EFA2FFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBB2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFD-FF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFFBFFFEFFFF",
    Cc: "0000-001F007F-009F",
    Cf: "00AD0600-060306DD070F17B417B5200B-200F202A-202E2060-2064206A-206FFEFFFFF9-FFFB",
    Co: "E000-F8FF",
    Cs: "D800-DFFF",
    Cn: "03780379037F-0383038B038D03A20526-05300557055805600588058B-059005C8-05CF05EB-05EF05F5-05FF06040605061C061D0620065F070E074B074C07B2-07BF07FB-07FF082E082F083F-08FF093A093B094F095609570973-097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF00AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B72-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D290D3A-0D3C0D450D490D4E-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EDE-0EFF0F480F6D-0F700F8C-0F8F0F980FBD0FCD0FD9-0FFF10C6-10CF10FD-10FF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B-135E137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BAB-1BAD1BBA-1BFF1C38-1C3A1C4A-1C4C1C80-1CCF1CF3-1CFF1DE7-1DFC1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF2065-206920722073208F2095-209F20B9-20CF20F1-20FF218A-218F23E9-23FF2427-243F244B-245F26CE26E226E4-26E727002705270A270B2728274C274E2753-2755275F27602795-279727B027BF27CB27CD-27CF2B4D-2B4F2B5A-2BFF2C2F2C5F2CF2-2CF82D26-2D2F2D66-2D6E2D70-2D7F2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E32-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31B8-31BF31E4-31EF321F32FF4DB6-4DBF9FCC-9FFFA48D-A48FA4C7-A4CFA62C-A63FA660A661A674-A67BA698-A69FA6F8-A6FFA78D-A7FAA82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAE0-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-D7FFFA2EFA2FFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBB2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFDFEFEFF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFF8FFFEFFFF"
});

function addUnicodePackage (pack) {
    var codePoint = /\w{4}/g;
    for (var name in pack)
        exports.packages[name] = pack[name].replace(codePoint, "\\u$&");
};

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/token_iterator',['require','exports','module'],function(require, exports, module) {


/**
 * 
 *
 * This class provides an essay way to treat the document as a stream of tokens, and provides methods to iterate over these tokens.
 * @class TokenIterator
 **/

/**
 * Creates a new token iterator object. The inital token index is set to the provided row and column coordinates.
 * @param {EditSession} session The session to associate with
 * @param {Number} initialRow The row to start the tokenizing at
 * @param {Number} initialColumn The column to start the tokenizing at
 *
 * @constructor
 **/
var TokenIterator = function(session, initialRow, initialColumn) {
    this.$session = session;
    this.$row = initialRow;
    this.$rowTokens = session.getTokens(initialRow);

    var token = session.getTokenAt(initialRow, initialColumn);
    this.$tokenIndex = token ? token.index : -1;
};

(function() {
   
    /**
    * 
    * Tokenizes all the items from the current point to the row prior in the document. 
    * @returns {[String]} If the current point is not at the top of the file, this function returns `null`. Otherwise, it returns an array of the tokenized strings.
    **/ 
    this.stepBackward = function() {
        this.$tokenIndex -= 1;
        
        while (this.$tokenIndex < 0) {
            this.$row -= 1;
            if (this.$row < 0) {
                this.$row = 0;
                return null;
            }
                
            this.$rowTokens = this.$session.getTokens(this.$row);
            this.$tokenIndex = this.$rowTokens.length - 1;
        }
            
        return this.$rowTokens[this.$tokenIndex];
    };
  
    /**
    * 
    * Tokenizes all the items from the current point until the next row in the document. If the current point is at the end of the file, this function returns `null`. Otherwise, it returns the tokenized string.
    * @returns {String}
    **/   
    this.stepForward = function() {
        this.$tokenIndex += 1;
        var rowCount;
        while (this.$tokenIndex >= this.$rowTokens.length) {
            this.$row += 1;
            if (!rowCount)
                rowCount = this.$session.getLength();
            if (this.$row >= rowCount) {
                this.$row = rowCount - 1;
                return null;
            }

            this.$rowTokens = this.$session.getTokens(this.$row);
            this.$tokenIndex = 0;
        }
            
        return this.$rowTokens[this.$tokenIndex];
    };
 
    /**
    * 
    * Returns the current tokenized string.
    * @returns {String}
    **/      
    this.getCurrentToken = function () {
        return this.$rowTokens[this.$tokenIndex];
    };

    /**
    * 
    * Returns the current row.
    * @returns {Number}
    **/      
    this.getCurrentTokenRow = function () {
        return this.$row;
    };

    /**
    * 
    * Returns the current column.
    * @returns {Number}
    **/     
    this.getCurrentTokenColumn = function() {
        var rowTokens = this.$rowTokens;
        var tokenIndex = this.$tokenIndex;
        
        // If a column was cached by EditSession.getTokenAt, then use it
        var column = rowTokens[tokenIndex].start;
        if (column !== undefined)
            return column;
            
        column = 0;
        while (tokenIndex > 0) {
            tokenIndex -= 1;
            column += rowTokens[tokenIndex].value.length;
        }
        
        return column;  
    };
            
}).call(TokenIterator.prototype);

exports.TokenIterator = TokenIterator;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mode/text',['require','exports','module','../tokenizer','./text_highlight_rules','./behaviour','../unicode','../lib/lang','../token_iterator','../range'],function(require, exports, module) {


var Tokenizer = require("../tokenizer").Tokenizer;
var TextHighlightRules = require("./text_highlight_rules").TextHighlightRules;
var Behaviour = require("./behaviour").Behaviour;
var unicode = require("../unicode");
var lang = require("../lib/lang");
var TokenIterator = require("../token_iterator").TokenIterator;
var Range = require("../range").Range;

var Mode = function() {
    this.$tokenizer = new Tokenizer(new TextHighlightRules().getRules());
    this.$behaviour = new Behaviour();
};

(function() {

    this.tokenRe = new RegExp("^["
        + unicode.packages.L
        + unicode.packages.Mn + unicode.packages.Mc
        + unicode.packages.Nd
        + unicode.packages.Pc + "\\$_]+", "g"
    );

    this.nonTokenRe = new RegExp("^(?:[^"
        + unicode.packages.L
        + unicode.packages.Mn + unicode.packages.Mc
        + unicode.packages.Nd
        + unicode.packages.Pc + "\\$_]|\s])+", "g"
    );

    this.getTokenizer = function() {
        return this.$tokenizer;
    };

    this.lineCommentStart = "";
    this.blockComment = "";

    this.toggleCommentLines = function(state, session, startRow, endRow) {
        var doc = session.doc;

        var ignoreBlankLines = true;
        var shouldRemove = true;
        var minIndent = Infinity;
        var tabSize = session.getTabSize();
        var insertAtTabStop = false;

        if (!this.lineCommentStart) {
            if (!this.blockComment)
                return false;
            var lineCommentStart = this.blockComment.start;
            var lineCommentEnd = this.blockComment.end;
            var regexpStart = new RegExp("^(\\s*)(?:" + lang.escapeRegExp(lineCommentStart) + ")");
            var regexpEnd = new RegExp("(?:" + lang.escapeRegExp(lineCommentEnd) + ")\\s*$");

            var comment = function(line, i) {
                if (testRemove(line, i))
                    return;
                if (!ignoreBlankLines || /\S/.test(line)) {
                    doc.insertInLine({row: i, column: line.length}, lineCommentEnd);
                    doc.insertInLine({row: i, column: minIndent}, lineCommentStart);
                }
            };

            var uncomment = function(line, i) {
                var m;
                if (m = line.match(regexpEnd))
                    doc.removeInLine(i, line.length - m[0].length, line.length);
                if (m = line.match(regexpStart))
                    doc.removeInLine(i, m[1].length, m[0].length);
            };

            var testRemove = function(line, row) {
                if (regexpStart.test(line))
                    return true;
                var tokens = session.getTokens(row);
                for (var i = 0; i < tokens.length; i++) {
                    if (tokens[i].type === 'comment')
                        return true;
                }
            };
        } else {
            if (Array.isArray(this.lineCommentStart)) {
                var regexpStart = this.lineCommentStart.map(lang.escapeRegExp).join("|");
                var lineCommentStart = this.lineCommentStart[0];
            } else {
                var regexpStart = lang.escapeRegExp(this.lineCommentStart);
                var lineCommentStart = this.lineCommentStart;
            }
            regexpStart = new RegExp("^(\\s*)(?:" + regexpStart + ") ?");
            
            insertAtTabStop = session.getUseSoftTabs();

            var uncomment = function(line, i) {
                var m = line.match(regexpStart);
                if (!m) return;
                var start = m[1].length, end = m[0].length;
                if (!shouldInsertSpace(line, start, end) && m[0][end - 1] == " ")
                    end--;
                doc.removeInLine(i, start, end);
            };
            var commentWithSpace = lineCommentStart + " ";
            var comment = function(line, i) {
                if (!ignoreBlankLines || /\S/.test(line)) {
                    if (shouldInsertSpace(line, minIndent, minIndent))
                        doc.insertInLine({row: i, column: minIndent}, commentWithSpace);
                    else
                        doc.insertInLine({row: i, column: minIndent}, lineCommentStart);
                }
            };
            var testRemove = function(line, i) {
                return regexpStart.test(line);
            };
            
            var shouldInsertSpace = function(line, before, after) {
                var spaces = 0;
                while (before-- && line.charAt(before) == " ")
                    spaces++;
                if (spaces % tabSize != 0)
                    return false;
                var spaces = 0;
                while (line.charAt(after++) == " ")
                    spaces++;
                if (tabSize > 2)
                    return spaces % tabSize != tabSize - 1;
                else
                    return spaces % tabSize == 0;
                return true;
            };
        }

        function iter(fun) {
            for (var i = startRow; i <= endRow; i++)
                fun(doc.getLine(i), i);
        }


        var minEmptyLength = Infinity;
        iter(function(line, i) {
            var indent = line.search(/\S/);
            if (indent !== -1) {
                if (indent < minIndent)
                    minIndent = indent;
                if (shouldRemove && !testRemove(line, i))
                    shouldRemove = false;
            } else if (minEmptyLength > line.length) {
                minEmptyLength = line.length;
            }
        });

        if (minIndent == Infinity) {
            minIndent = minEmptyLength;
            ignoreBlankLines = false;
            shouldRemove = false;
        }

        if (insertAtTabStop && minIndent % tabSize != 0)
            minIndent = Math.floor(minIndent / tabSize) * tabSize;

        iter(shouldRemove ? uncomment : comment);
    };

    this.toggleBlockComment = function(state, session, range, cursor) {
        var comment = this.blockComment;
        if (!comment)
            return;
        if (!comment.start && comment[0])
            comment = comment[0];

        var iterator = new TokenIterator(session, cursor.row, cursor.column);
        var token = iterator.getCurrentToken();

        var sel = session.selection;
        var initialRange = session.selection.toOrientedRange();
        var startRow, colDiff;

        if (token && /comment/.test(token.type)) {
            var startRange, endRange;
            while (token && /comment/.test(token.type)) {
                var i = token.value.indexOf(comment.start);
                if (i != -1) {
                    var row = iterator.getCurrentTokenRow();
                    var column = iterator.getCurrentTokenColumn() + i;
                    startRange = new Range(row, column, row, column + comment.start.length);
                    break
                }
                token = iterator.stepBackward();
            };

            var iterator = new TokenIterator(session, cursor.row, cursor.column);
            var token = iterator.getCurrentToken();
            while (token && /comment/.test(token.type)) {
                var i = token.value.indexOf(comment.end);
                if (i != -1) {
                    var row = iterator.getCurrentTokenRow();
                    var column = iterator.getCurrentTokenColumn() + i;
                    endRange = new Range(row, column, row, column + comment.end.length);
                    break;
                }
                token = iterator.stepForward();
            }
            if (endRange)
                session.remove(endRange);
            if (startRange) {
                session.remove(startRange);
                startRow = startRange.start.row;
                colDiff = -comment.start.length
            }
        } else {
            colDiff = comment.start.length
            startRow = range.start.row;
            session.insert(range.end, comment.end);
            session.insert(range.start, comment.start);
        }
        // todo: selection should have ended up in the right place automatically!
        if (initialRange.start.row == startRow)
            initialRange.start.column += colDiff;
        if (initialRange.end.row == startRow)
            initialRange.end.column += colDiff;
        session.selection.fromOrientedRange(initialRange);
    };

    this.getNextLineIndent = function(state, line, tab) {
        return this.$getIndent(line);
    };

    this.checkOutdent = function(state, line, input) {
        return false;
    };

    this.autoOutdent = function(state, doc, row) {
    };

    this.$getIndent = function(line) {
        return line.match(/^\s*/)[0];
    };

    this.createWorker = function(session) {
        return null;
    };

    this.createModeDelegates = function (mapping) {
        if (!this.$embeds) {
            return;
        }
        this.$modes = {};
        for (var i = 0; i < this.$embeds.length; i++) {
            if (mapping[this.$embeds[i]]) {
                this.$modes[this.$embeds[i]] = new mapping[this.$embeds[i]]();
            }
        }

        var delegations = ['toggleCommentLines', 'getNextLineIndent', 'checkOutdent', 'autoOutdent', 'transformAction', 'getCompletions'];

        for (var i = 0; i < delegations.length; i++) {
            (function(scope) {
              var functionName = delegations[i];
              var defaultHandler = scope[functionName];
              scope[delegations[i]] = function() {
                  return this.$delegator(functionName, arguments, defaultHandler);
              }
            } (this));
        }
    };

    this.$delegator = function(method, args, defaultHandler) {
        var state = args[0];
        if (typeof state != "string")
            state = state[0];
        for (var i = 0; i < this.$embeds.length; i++) {
            if (!this.$modes[this.$embeds[i]]) continue;

            var split = state.split(this.$embeds[i]);
            if (!split[0] && split[1]) {
                args[0] = split[1];
                var mode = this.$modes[this.$embeds[i]];
                return mode[method].apply(mode, args);
            }
        }
        var ret = defaultHandler.apply(this, args);
        return defaultHandler ? ret : undefined;
    };

    this.transformAction = function(state, action, editor, session, param) {
        if (this.$behaviour) {
            var behaviours = this.$behaviour.getBehaviours();
            for (var key in behaviours) {
                if (behaviours[key][action]) {
                    var ret = behaviours[key][action].apply(this, arguments);
                    if (ret) {
                        return ret;
                    }
                }
            }
        }
    };
    
    this.getKeywords = function(append) {
        // this is for autocompletion to pick up regexp'ed keywords
        if (!this.completionKeywords) {
            var rules = this.$tokenizer.rules;
            var completionKeywords = [];
            for (var rule in rules) {
                var ruleItr = rules[rule];
                for (var r = 0, l = ruleItr.length; r < l; r++) {
                    if (typeof ruleItr[r].token === "string") {
                        if (/keyword|support|storage/.test(ruleItr[r].token))
                            completionKeywords.push(ruleItr[r].regex);
                    }
                    else if (typeof ruleItr[r].token === "object") {
                        for (var a = 0, aLength = ruleItr[r].token.length; a < aLength; a++) {    
                            if (/keyword|support|storage/.test(ruleItr[r].token[a])) {
                                // drop surrounding parens
                                var rule = ruleItr[r].regex.match(/\(.+?\)/g)[a];
                                completionKeywords.push(rule.substr(1, rule.length - 2));
                            }
                        }
                    }
                }
            }
            this.completionKeywords = completionKeywords;
        }
        // this is for highlighting embed rules, like HAML/Ruby or Obj-C/C
        if (!append)
            return this.$keywordList;
        return completionKeywords.concat(this.$keywordList || []);
    };

    this.getCompletions = function(state, session, pos, prefix) {
        var keywords = this.$keywordList || [];
        return keywords.map(function(word) {
            return {
                name: word,
                value: word,
                score: 0,
                meta: "keyword"
            };
        });
    };

}).call(Mode.prototype);

exports.Mode = Mode;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/anchor',['require','exports','module','./lib/oop','./lib/event_emitter'],function(require, exports, module) {


var oop = require("./lib/oop");
var EventEmitter = require("./lib/event_emitter").EventEmitter;

/**
 *
 * Defines the floating pointer in the document. Whenever text is inserted or deleted before the cursor, the position of the cursor is updated.
 *
 * @class Anchor
 **/

/**
 * Creates a new `Anchor` and associates it with a document.
 *
 * @param {Document} doc The document to associate with the anchor
 * @param {Number} row The starting row position
 * @param {Number} column The starting column position
 *
 * @constructor
 **/

var Anchor = exports.Anchor = function(doc, row, column) {
    this.$onChange = this.onChange.bind(this);
    this.attach(doc);
    
    if (typeof column == "undefined")
        this.setPosition(row.row, row.column);
    else
        this.setPosition(row, column);
};

(function() {

    oop.implement(this, EventEmitter);

    /**
     * Returns an object identifying the `row` and `column` position of the current anchor.
     * @returns {Object}
     **/
    this.getPosition = function() {
        return this.$clipPositionToDocument(this.row, this.column);
    };

    /**
     *
     * Returns the current document.
     * @returns {Document}
     **/
    this.getDocument = function() {
        return this.document;
    };

    /**
     * experimental: allows anchor to stick to the next on the left
     */
    this.$insertRight = false;
    /**
     * Fires whenever the anchor position changes.
     *
     * Both of these objects have a `row` and `column` property corresponding to the position.
     *
     * Events that can trigger this function include [[Anchor.setPosition `setPosition()`]].
     *
     * @event change
     * @param {Object} e  An object containing information about the anchor position. It has two properties:
     *  - `old`: An object describing the old Anchor position
     *  - `value`: An object describing the new Anchor position
     *
     **/
    this.onChange = function(e) {
        var delta = e.data;
        var range = delta.range;

        if (range.start.row == range.end.row && range.start.row != this.row)
            return;

        if (range.start.row > this.row)
            return;

        if (range.start.row == this.row && range.start.column > this.column)
            return;

        var row = this.row;
        var column = this.column;
        var start = range.start;
        var end = range.end;

        if (delta.action === "insertText") {
            if (start.row === row && start.column <= column) {
                if (start.column === column && this.$insertRight) {
                    // do nothing
                } else if (start.row === end.row) {
                    column += end.column - start.column;
                } else {
                    column -= start.column;
                    row += end.row - start.row;
                }
            } else if (start.row !== end.row && start.row < row) {
                row += end.row - start.row;
            }
        } else if (delta.action === "insertLines") {
            if (start.row <= row) {
                row += end.row - start.row;
            }
        } else if (delta.action === "removeText") {
            if (start.row === row && start.column < column) {
                if (end.column >= column)
                    column = start.column;
                else
                    column = Math.max(0, column - (end.column - start.column));

            } else if (start.row !== end.row && start.row < row) {
                if (end.row === row)
                    column = Math.max(0, column - end.column) + start.column;
                row -= (end.row - start.row);
            } else if (end.row === row) {
                row -= end.row - start.row;
                column = Math.max(0, column - end.column) + start.column;
            }
        } else if (delta.action == "removeLines") {
            if (start.row <= row) {
                if (end.row <= row)
                    row -= end.row - start.row;
                else {
                    row = start.row;
                    column = 0;
                }
            }
        }

        this.setPosition(row, column, true);
    };

    /**
     * Sets the anchor position to the specified row and column. If `noClip` is `true`, the position is not clipped.
     * @param {Number} row The row index to move the anchor to
     * @param {Number} column The column index to move the anchor to
     * @param {Boolean} noClip Identifies if you want the position to be clipped
     *
     **/
    this.setPosition = function(row, column, noClip) {
        var pos;
        if (noClip) {
            pos = {
                row: row,
                column: column
            };
        } else {
            pos = this.$clipPositionToDocument(row, column);
        }

        if (this.row == pos.row && this.column == pos.column)
            return;

        var old = {
            row: this.row,
            column: this.column
        };

        this.row = pos.row;
        this.column = pos.column;
        this._emit("change", {
            old: old,
            value: pos
        });
    };

    /**
     * When called, the `'change'` event listener is removed.
     *
     **/
    this.detach = function() {
        this.document.removeEventListener("change", this.$onChange);
    };
    this.attach = function(doc) {
        this.document = doc || this.document;
        this.document.on("change", this.$onChange);
    };

    /**
     * Clips the anchor position to the specified row and column.
     * @param {Number} row The row index to clip the anchor to
     * @param {Number} column The column index to clip the anchor to
     *
     **/
    this.$clipPositionToDocument = function(row, column) {
        var pos = {};

        if (row >= this.document.getLength()) {
            pos.row = Math.max(0, this.document.getLength() - 1);
            pos.column = this.document.getLine(pos.row).length;
        }
        else if (row < 0) {
            pos.row = 0;
            pos.column = 0;
        }
        else {
            pos.row = row;
            pos.column = Math.min(this.document.getLine(pos.row).length, Math.max(0, column));
        }

        if (column < 0)
            pos.column = 0;

        return pos;
    };

}).call(Anchor.prototype);

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/document',['require','exports','module','./lib/oop','./lib/event_emitter','./range','./anchor'],function(require, exports, module) {


var oop = require("./lib/oop");
var EventEmitter = require("./lib/event_emitter").EventEmitter;
var Range = require("./range").Range;
var Anchor = require("./anchor").Anchor;

/**
 * Contains the text of the document. Document can be attached to several [[EditSession `EditSession`]]s. 
 *
 * At its core, `Document`s are just an array of strings, with each row in the document matching up to the array index.
 *
 * @class Document
 **/

 /**
 *
 * Creates a new `Document`. If `text` is included, the `Document` contains those strings; otherwise, it's empty.
 * @param {String | Array} text The starting text
 * @constructor
 **/

var Document = function(text) {
    this.$lines = [];

    // There has to be one line at least in the document. If you pass an empty
    // string to the insert function, nothing will happen. Workaround.
    if (text.length == 0) {
        this.$lines = [""];
    } else if (Array.isArray(text)) {
        this._insertLines(0, text);
    } else {
        this.insert({row: 0, column:0}, text);
    }
};

(function() {

    oop.implement(this, EventEmitter);

    /**
    * Replaces all the lines in the current `Document` with the value of `text`.
    *
    * @param {String} text The text to use
    **/
    this.setValue = function(text) {
        var len = this.getLength();
        this.remove(new Range(0, 0, len, this.getLine(len-1).length));
        this.insert({row: 0, column:0}, text);
    };

    /**
    * Returns all the lines in the document as a single string, joined by the new line character.
    **/
    this.getValue = function() {
        return this.getAllLines().join(this.getNewLineCharacter());
    };

    /** 
    * Creates a new `Anchor` to define a floating point in the document.
    * @param {Number} row The row number to use
    * @param {Number} column The column number to use
    *
    **/
    this.createAnchor = function(row, column) {
        return new Anchor(this, row, column);
    };

    /** 
    * Splits a string of text on any newline (`\n`) or carriage-return ('\r') characters.
    *
    * @method $split
    * @param {String} text The text to work with
    * @returns {String} A String array, with each index containing a piece of the original `text` string.
    *
    **/

    // check for IE split bug
    if ("aaa".split(/a/).length == 0)
        this.$split = function(text) {
            return text.replace(/\r\n|\r/g, "\n").split("\n");
        }
    else
        this.$split = function(text) {
            return text.split(/\r\n|\r|\n/);
        };


    this.$detectNewLine = function(text) {
        var match = text.match(/^.*?(\r\n|\r|\n)/m);
        this.$autoNewLine = match ? match[1] : "\n";
    };

    /**
    * Returns the newline character that's being used, depending on the value of `newLineMode`. 
    * @returns {String} If `newLineMode == windows`, `\r\n` is returned.  
    *  If `newLineMode == unix`, `\n` is returned.  
    *  If `newLineMode == auto`, the value of `autoNewLine` is returned.
    *
    **/
    this.getNewLineCharacter = function() {
        switch (this.$newLineMode) {
          case "windows":
            return "\r\n";
          case "unix":
            return "\n";
          default:
            return this.$autoNewLine;
        }
    };

    this.$autoNewLine = "\n";
    this.$newLineMode = "auto";
    /**
     * [Sets the new line mode.]{: #Document.setNewLineMode.desc}
     * @param {String} newLineMode [The newline mode to use; can be either `windows`, `unix`, or `auto`]{: #Document.setNewLineMode.param}
     *
     **/
    this.setNewLineMode = function(newLineMode) {
        if (this.$newLineMode === newLineMode)
            return;

        this.$newLineMode = newLineMode;
    };

    /**
    * [Returns the type of newlines being used; either `windows`, `unix`, or `auto`]{: #Document.getNewLineMode}
    * @returns {String}
    **/
    this.getNewLineMode = function() {
        return this.$newLineMode;
    };

    /**
    * Returns `true` if `text` is a newline character (either `\r\n`, `\r`, or `\n`).
    * @param {String} text The text to check
    *
    **/
    this.isNewLine = function(text) {
        return (text == "\r\n" || text == "\r" || text == "\n");
    };

    /**
    * Returns a verbatim copy of the given line as it is in the document
    * @param {Number} row The row index to retrieve
    *
    **/
    this.getLine = function(row) {
        return this.$lines[row] || "";
    };

    /**
    * Returns an array of strings of the rows between `firstRow` and `lastRow`. This function is inclusive of `lastRow`.
    * @param {Number} firstRow The first row index to retrieve
    * @param {Number} lastRow The final row index to retrieve
    *
    **/
    this.getLines = function(firstRow, lastRow) {
        return this.$lines.slice(firstRow, lastRow + 1);
    };

    /**
    * Returns all lines in the document as string array.
    **/
    this.getAllLines = function() {
        return this.getLines(0, this.getLength());
    };

    /**
    * Returns the number of rows in the document.
    **/
    this.getLength = function() {
        return this.$lines.length;
    };

    /**
    * [Given a range within the document, this function returns all the text within that range as a single string.]{: #Document.getTextRange.desc}
    * @param {Range} range The range to work with
    * 
    * @returns {String}
    **/
    this.getTextRange = function(range) {
        if (range.start.row == range.end.row) {
            return this.getLine(range.start.row)
                .substring(range.start.column, range.end.column);
        }
        var lines = this.getLines(range.start.row, range.end.row);
        lines[0] = (lines[0] || "").substring(range.start.column);
        var l = lines.length - 1;
        if (range.end.row - range.start.row == l)
            lines[l] = lines[l].substring(0, range.end.column);
        return lines.join(this.getNewLineCharacter());
    };

    this.$clipPosition = function(position) {
        var length = this.getLength();
        if (position.row >= length) {
            position.row = Math.max(0, length - 1);
            position.column = this.getLine(length-1).length;
        } else if (position.row < 0)
            position.row = 0;
        return position;
    };

    /**
    * Inserts a block of `text` at the indicated `position`.
    * @param {Object} position The position to start inserting at; it's an object that looks like `{ row: row, column: column}`
    * @param {String} text A chunk of text to insert
    * @returns {Object} The position ({row, column}) of the last line of `text`. If the length of `text` is 0, this function simply returns `position`. 
    *
    **/
    this.insert = function(position, text) {
        if (!text || text.length === 0)
            return position;

        position = this.$clipPosition(position);

        // only detect new lines if the document has no line break yet
        if (this.getLength() <= 1)
            this.$detectNewLine(text);

        var lines = this.$split(text);
        var firstLine = lines.splice(0, 1)[0];
        var lastLine = lines.length == 0 ? null : lines.splice(lines.length - 1, 1)[0];

        position = this.insertInLine(position, firstLine);
        if (lastLine !== null) {
            position = this.insertNewLine(position); // terminate first line
            position = this._insertLines(position.row, lines);
            position = this.insertInLine(position, lastLine || "");
        }
        return position;
    };

    /**
     * Fires whenever the document changes.
     *
     * Several methods trigger different `"change"` events. Below is a list of each action type, followed by each property that's also available:
     *
     *  * `"insertLines"` (emitted by [[Document.insertLines]])
     *    * `range`: the [[Range]] of the change within the document
     *    * `lines`: the lines in the document that are changing
     *  * `"insertText"` (emitted by [[Document.insertNewLine]])
     *    * `range`: the [[Range]] of the change within the document
     *    * `text`: the text that's being added
     *  * `"removeLines"` (emitted by [[Document.insertLines]])
     *    * `range`: the [[Range]] of the change within the document
     *    * `lines`: the lines in the document that were removed
     *    * `nl`: the new line character (as defined by [[Document.getNewLineCharacter]])
     *  * `"removeText"` (emitted by [[Document.removeInLine]] and [[Document.removeNewLine]])
     *    * `range`: the [[Range]] of the change within the document
     *    * `text`: the text that's being removed
     *
     * @event change
     * @param {Object} e Contains at least one property called `"action"`. `"action"` indicates the action that triggered the change. Each action also has a set of additional properties.
     *
     **/
    /**
    * Inserts the elements in `lines` into the document, starting at the row index given by `row`. This method also triggers the `'change'` event.
    * @param {Number} row The index of the row to insert at
    * @param {Array} lines An array of strings
    * @returns {Object} Contains the final row and column, like this:  
    *   ```
    *   {row: endRow, column: 0}
    *   ```  
    *   If `lines` is empty, this function returns an object containing the current row, and column, like this:  
    *   ``` 
    *   {row: row, column: 0}
    *   ```
    *
    **/
    this.insertLines = function(row, lines) {
        if (row >= this.getLength())
            return this.insert({row: row, column: 0}, "\n" + lines.join("\n"));
        return this._insertLines(Math.max(row, 0), lines);
    };
    this._insertLines = function(row, lines) {
        if (lines.length == 0)
            return {row: row, column: 0};

        // apply doesn't work for big arrays (smallest threshold is on safari 0xFFFF)
        // to circumvent that we have to break huge inserts into smaller chunks here
        if (lines.length > 0xFFFF) {
            var end = this._insertLines(row, lines.slice(0xFFFF));
            lines = lines.slice(0, 0xFFFF);
        }

        var args = [row, 0];
        args.push.apply(args, lines);
        this.$lines.splice.apply(this.$lines, args);

        var range = new Range(row, 0, row + lines.length, 0);
        var delta = {
            action: "insertLines",
            range: range,
            lines: lines
        };
        this._emit("change", { data: delta });
        return end || range.end;
    };

    /**
    * Inserts a new line into the document at the current row's `position`. This method also triggers the `'change'` event. 
    * @param {Object} position The position to insert at
    * @returns {Object} Returns an object containing the final row and column, like this:<br/>
    *    ```
    *    {row: endRow, column: 0}
    *    ```
    *
    **/
    this.insertNewLine = function(position) {
        position = this.$clipPosition(position);
        var line = this.$lines[position.row] || "";

        this.$lines[position.row] = line.substring(0, position.column);
        this.$lines.splice(position.row + 1, 0, line.substring(position.column, line.length));

        var end = {
            row : position.row + 1,
            column : 0
        };

        var delta = {
            action: "insertText",
            range: Range.fromPoints(position, end),
            text: this.getNewLineCharacter()
        };
        this._emit("change", { data: delta });

        return end;
    };

    /**
    * Inserts `text` into the `position` at the current row. This method also triggers the `'change'` event.
    * @param {Object} position The position to insert at; it's an object that looks like `{ row: row, column: column}`
    * @param {String} text A chunk of text
    * @returns {Object} Returns an object containing the final row and column, like this:  
    *     ```
    *     {row: endRow, column: 0}
    *     ```
    *
    **/
    this.insertInLine = function(position, text) {
        if (text.length == 0)
            return position;

        var line = this.$lines[position.row] || "";

        this.$lines[position.row] = line.substring(0, position.column) + text
                + line.substring(position.column);

        var end = {
            row : position.row,
            column : position.column + text.length
        };

        var delta = {
            action: "insertText",
            range: Range.fromPoints(position, end),
            text: text
        };
        this._emit("change", { data: delta });

        return end;
    };

    /**
    * Removes the `range` from the document.
    * @param {Range} range A specified Range to remove
    * @returns {Object} Returns the new `start` property of the range, which contains `startRow` and `startColumn`. If `range` is empty, this function returns the unmodified value of `range.start`.
    *
    **/
    this.remove = function(range) {
        if (!range instanceof Range)
            range = Range.fromPoints(range.start, range.end);
        // clip to document
        range.start = this.$clipPosition(range.start);
        range.end = this.$clipPosition(range.end);

        if (range.isEmpty())
            return range.start;

        var firstRow = range.start.row;
        var lastRow = range.end.row;

        if (range.isMultiLine()) {
            var firstFullRow = range.start.column == 0 ? firstRow : firstRow + 1;
            var lastFullRow = lastRow - 1;

            if (range.end.column > 0)
                this.removeInLine(lastRow, 0, range.end.column);

            if (lastFullRow >= firstFullRow)
                this._removeLines(firstFullRow, lastFullRow);

            if (firstFullRow != firstRow) {
                this.removeInLine(firstRow, range.start.column, this.getLine(firstRow).length);
                this.removeNewLine(range.start.row);
            }
        }
        else {
            this.removeInLine(firstRow, range.start.column, range.end.column);
        }
        return range.start;
    };

    /**
    * Removes the specified columns from the `row`. This method also triggers the `'change'` event.
    * @param {Number} row The row to remove from
    * @param {Number} startColumn The column to start removing at 
    * @param {Number} endColumn The column to stop removing at
    * @returns {Object} Returns an object containing `startRow` and `startColumn`, indicating the new row and column values.<br/>If `startColumn` is equal to `endColumn`, this function returns nothing.
    *
    **/
    this.removeInLine = function(row, startColumn, endColumn) {
        if (startColumn == endColumn)
            return;

        var range = new Range(row, startColumn, row, endColumn);
        var line = this.getLine(row);
        var removed = line.substring(startColumn, endColumn);
        var newLine = line.substring(0, startColumn) + line.substring(endColumn, line.length);
        this.$lines.splice(row, 1, newLine);

        var delta = {
            action: "removeText",
            range: range,
            text: removed
        };
        this._emit("change", { data: delta });
        return range.start;
    };

    /**
    * Removes a range of full lines. This method also triggers the `'change'` event.
    * @param {Number} firstRow The first row to be removed
    * @param {Number} lastRow The last row to be removed
    * @returns {[String]} Returns all the removed lines.
    *
    **/
    this.removeLines = function(firstRow, lastRow) {
        if (firstRow < 0 || lastRow >= this.getLength())
            return this.remove(new Range(firstRow, 0, lastRow + 1, 0));
        return this._removeLines(firstRow, lastRow);
    };

    this._removeLines = function(firstRow, lastRow) {
        var range = new Range(firstRow, 0, lastRow + 1, 0);
        var removed = this.$lines.splice(firstRow, lastRow - firstRow + 1);

        var delta = {
            action: "removeLines",
            range: range,
            nl: this.getNewLineCharacter(),
            lines: removed
        };
        this._emit("change", { data: delta });
        return removed;
    };

    /**
    * Removes the new line between `row` and the row immediately following it. This method also triggers the `'change'` event.
    * @param {Number} row The row to check
    *
    **/
    this.removeNewLine = function(row) {
        var firstLine = this.getLine(row);
        var secondLine = this.getLine(row+1);

        var range = new Range(row, firstLine.length, row+1, 0);
        var line = firstLine + secondLine;

        this.$lines.splice(row, 2, line);

        var delta = {
            action: "removeText",
            range: range,
            text: this.getNewLineCharacter()
        };
        this._emit("change", { data: delta });
    };

    /**
    * Replaces a range in the document with the new `text`.
    * @param {Range} range A specified Range to replace
    * @param {String} text The new text to use as a replacement
    * @returns {Object} Returns an object containing the final row and column, like this:
    *     {row: endRow, column: 0}
    * If the text and range are empty, this function returns an object containing the current `range.start` value.
    * If the text is the exact same as what currently exists, this function returns an object containing the current `range.end` value.
    *
    **/
    this.replace = function(range, text) {
        if (!range instanceof Range)
            range = Range.fromPoints(range.start, range.end);
        if (text.length == 0 && range.isEmpty())
            return range.start;

        // Shortcut: If the text we want to insert is the same as it is already
        // in the document, we don't have to replace anything.
        if (text == this.getTextRange(range))
            return range.end;

        this.remove(range);
        if (text) {
            var end = this.insert(range.start, text);
        }
        else {
            end = range.start;
        }

        return end;
    };

    /**
    * Applies all the changes previously accumulated. These can be either `'includeText'`, `'insertLines'`, `'removeText'`, and `'removeLines'`.
    **/
    this.applyDeltas = function(deltas) {
        for (var i=0; i<deltas.length; i++) {
            var delta = deltas[i];
            var range = Range.fromPoints(delta.range.start, delta.range.end);

            if (delta.action == "insertLines")
                this.insertLines(range.start.row, delta.lines);
            else if (delta.action == "insertText")
                this.insert(range.start, delta.text);
            else if (delta.action == "removeLines")
                this._removeLines(range.start.row, range.end.row - 1);
            else if (delta.action == "removeText")
                this.remove(range);
        }
    };

    /**
    * Reverts any changes previously applied. These can be either `'includeText'`, `'insertLines'`, `'removeText'`, and `'removeLines'`.
    **/
    this.revertDeltas = function(deltas) {
        for (var i=deltas.length-1; i>=0; i--) {
            var delta = deltas[i];

            var range = Range.fromPoints(delta.range.start, delta.range.end);

            if (delta.action == "insertLines")
                this._removeLines(range.start.row, range.end.row - 1);
            else if (delta.action == "insertText")
                this.remove(range);
            else if (delta.action == "removeLines")
                this._insertLines(range.start.row, delta.lines);
            else if (delta.action == "removeText")
                this.insert(range.start, delta.text);
        }
    };

    /**
     * Converts an index position in a document to a `{row, column}` object.
     *
     * Index refers to the "absolute position" of a character in the document. For example:
     *
     * ```javascript
     * var x = 0; // 10 characters, plus one for newline
     * var y = -1;
     * ```
     * 
     * Here, `y` is an index 15: 11 characters for the first row, and 5 characters until `y` in the second.
     *
     * @param {Number} index An index to convert
     * @param {Number} startRow=0 The row from which to start the conversion
     * @returns {Object} A `{row, column}` object of the `index` position
     */
    this.indexToPosition = function(index, startRow) {
        var lines = this.$lines || this.getAllLines();
        var newlineLength = this.getNewLineCharacter().length;
        for (var i = startRow || 0, l = lines.length; i < l; i++) {
            index -= lines[i].length + newlineLength;
            if (index < 0)
                return {row: i, column: index + lines[i].length + newlineLength};
        }
        return {row: l-1, column: lines[l-1].length};
    };

    /**
     * Converts the `{row, column}` position in a document to the character's index.
     *
     * Index refers to the "absolute position" of a character in the document. For example:
     *
     * ```javascript
     * var x = 0; // 10 characters, plus one for newline
     * var y = -1;
     * ```
     * 
     * Here, `y` is an index 15: 11 characters for the first row, and 5 characters until `y` in the second.
     *
     * @param {Object} pos The `{row, column}` to convert
     * @param {Number} startRow=0 The row from which to start the conversion
     * @returns {Number} The index position in the document
     */
    this.positionToIndex = function(pos, startRow) {
        var lines = this.$lines || this.getAllLines();
        var newlineLength = this.getNewLineCharacter().length;
        var index = 0;
        var row = Math.min(pos.row, lines.length);
        for (var i = startRow || 0; i < row; ++i)
            index += lines[i].length + newlineLength;

        return index + pos.column;
    };

}).call(Document.prototype);

exports.Document = Document;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/background_tokenizer',['require','exports','module','./lib/oop','./lib/event_emitter'],function(require, exports, module) {


var oop = require("./lib/oop");
var EventEmitter = require("./lib/event_emitter").EventEmitter;


/**
 * 
 *
 * Tokenizes the current [[Document `Document`]] in the background, and caches the tokenized rows for future use. 
 * 
 * If a certain row is changed, everything below that row is re-tokenized.
 *
 * @class BackgroundTokenizer
 **/

/**
 * Creates a new `BackgroundTokenizer` object.
 * @param {Tokenizer} tokenizer The tokenizer to use
 * @param {Editor} editor The editor to associate with
 *
 * 
 * 
 * @constructor
 **/

var BackgroundTokenizer = function(tokenizer, editor) {
    this.running = false;
    this.lines = [];
    this.states = [];
    this.currentLine = 0;
    this.tokenizer = tokenizer;

    var self = this;

    this.$worker = function() {
        if (!self.running) { return; }

        var workerStart = new Date();
        var currentLine = self.currentLine;
        var endLine = -1;
        var doc = self.doc;

        while (self.lines[currentLine])
            currentLine++;

        var startLine = currentLine;

        var len = doc.getLength();
        var processedLines = 0;
        self.running = false;
        while (currentLine < len) {
            self.$tokenizeRow(currentLine);
            endLine = currentLine;
            do {
                currentLine++;
            } while (self.lines[currentLine]);

            // only check every 5 lines
            processedLines ++;
            if ((processedLines % 5 == 0) && (new Date() - workerStart) > 20) {                
                self.running = setTimeout(self.$worker, 20);
                self.currentLine = currentLine;
                return;
            }
        }
        self.currentLine = currentLine;
        
        if (startLine <= endLine)
            self.fireUpdateEvent(startLine, endLine);
    };
};

(function(){

    oop.implement(this, EventEmitter);

    /**
     * Sets a new tokenizer for this object.
     *
     * @param {Tokenizer} tokenizer The new tokenizer to use
     *
     **/
    this.setTokenizer = function(tokenizer) {
        this.tokenizer = tokenizer;
        this.lines = [];
        this.states = [];

        this.start(0);
    };

    /**
     * Sets a new document to associate with this object.
     * @param {Document} doc The new document to associate with
     **/
    this.setDocument = function(doc) {
        this.doc = doc;
        this.lines = [];
        this.states = [];

        this.stop();
    };

     /**
     * Fires whenever the background tokeniziers between a range of rows are going to be updated.
     * 
     * @event update
     * @param {Object} e An object containing two properties, `first` and `last`, which indicate the rows of the region being updated.
     *
     **/
    /**
     * Emits the `'update'` event. `firstRow` and `lastRow` are used to define the boundaries of the region to be updated.
     * @param {Number} firstRow The starting row region
     * @param {Number} lastRow The final row region
     *
     **/
    this.fireUpdateEvent = function(firstRow, lastRow) {
        var data = {
            first: firstRow,
            last: lastRow
        };
        this._emit("update", {data: data});
    };

    /**
     * Starts tokenizing at the row indicated.
     *
     * @param {Number} startRow The row to start at
     *
     **/
    this.start = function(startRow) {
        this.currentLine = Math.min(startRow || 0, this.currentLine, this.doc.getLength());

        // remove all cached items below this line
        this.lines.splice(this.currentLine, this.lines.length);
        this.states.splice(this.currentLine, this.states.length);

        this.stop();
        // pretty long delay to prevent the tokenizer from interfering with the user
        this.running = setTimeout(this.$worker, 700);
    };
    
    this.scheduleStart = function() {
        this.running = setTimeout(this.$worker, 700);
    }

    this.$updateOnChange = function(delta) {
        var range = delta.range;
        var startRow = range.start.row;
        var len = range.end.row - startRow;

        if (len === 0) {
            this.lines[startRow] = null;
        } else if (delta.action == "removeText" || delta.action == "removeLines") {
            this.lines.splice(startRow, len + 1, null);
            this.states.splice(startRow, len + 1, null);
        } else {
            var args = Array(len + 1);
            args.unshift(startRow, 1);
            this.lines.splice.apply(this.lines, args);
            this.states.splice.apply(this.states, args);
        }

        this.currentLine = Math.min(startRow, this.currentLine, this.doc.getLength());

        this.stop();
    };

    /**
     * Stops tokenizing.
     *
     **/
    this.stop = function() {
        if (this.running)
            clearTimeout(this.running);
        this.running = false;
    };

    /**
     * Gives list of tokens of the row. (tokens are cached)
     * 
     * @param {Number} row The row to get tokens at
     *
     * 
     *
     **/
    this.getTokens = function(row) {
        return this.lines[row] || this.$tokenizeRow(row);
    };

    /**
     * [Returns the state of tokenization at the end of a row.]{: #BackgroundTokenizer.getState}
     *
     * @param {Number} row The row to get state at
     **/
    this.getState = function(row) {
        if (this.currentLine == row)
            this.$tokenizeRow(row);
        return this.states[row] || "start";
    };

    this.$tokenizeRow = function(row) {
        var line = this.doc.getLine(row);
        var state = this.states[row - 1];

        var data = this.tokenizer.getLineTokens(line, state, row);

        if (this.states[row] + "" !== data.state + "") {
            this.states[row] = data.state;
            this.lines[row + 1] = null;
            if (this.currentLine > row + 1)
                this.currentLine = row + 1;
        } else if (this.currentLine == row) {
            this.currentLine = row + 1;
        }

        return this.lines[row] = data.tokens;
    };

}).call(BackgroundTokenizer.prototype);

exports.BackgroundTokenizer = BackgroundTokenizer;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/search_highlight',['require','exports','module','./lib/lang','./lib/oop','./range'],function(require, exports, module) {


var lang = require("./lib/lang");
var oop = require("./lib/oop");
var Range = require("./range").Range;

var SearchHighlight = function(regExp, clazz, type) {
    this.setRegexp(regExp);
    this.clazz = clazz;
    this.type = type || "text";
};

(function() {
    // needed to prevent long lines from freezing the browser
    this.MAX_RANGES = 500;
    
    this.setRegexp = function(regExp) {
        if (this.regExp+"" == regExp+"")
            return;
        this.regExp = regExp;
        this.cache = [];
    };

    this.update = function(html, markerLayer, session, config) {
        if (!this.regExp)
            return;
        var start = config.firstRow, end = config.lastRow;

        for (var i = start; i <= end; i++) {
            var ranges = this.cache[i];
            if (ranges == null) {
                ranges = lang.getMatchOffsets(session.getLine(i), this.regExp);
                if (ranges.length > this.MAX_RANGES)
                    ranges = ranges.slice(0, this.MAX_RANGES);
                ranges = ranges.map(function(match) {
                    return new Range(i, match.offset, i, match.offset + match.length);
                });
                this.cache[i] = ranges.length ? ranges : "";
            }

            for (var j = ranges.length; j --; ) {
                markerLayer.drawSingleLineMarker(
                    html, ranges[j].toScreenRange(session), this.clazz, config);
            }
        }
    };

}).call(SearchHighlight.prototype);

exports.SearchHighlight = SearchHighlight;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/edit_session/fold_line',['require','exports','module','../range'],function(require, exports, module) {


var Range = require("../range").Range;

/*
 * If an array is passed in, the folds are expected to be sorted already.
 */
function FoldLine(foldData, folds) {
    this.foldData = foldData;
    if (Array.isArray(folds)) {
        this.folds = folds;
    } else {
        folds = this.folds = [ folds ];
    }

    var last = folds[folds.length - 1]
    this.range = new Range(folds[0].start.row, folds[0].start.column,
                           last.end.row, last.end.column);
    this.start = this.range.start;
    this.end   = this.range.end;

    this.folds.forEach(function(fold) {
        fold.setFoldLine(this);
    }, this);
}

(function() {
    /*
     * Note: This doesn't update wrapData!
     */
    this.shiftRow = function(shift) {
        this.start.row += shift;
        this.end.row += shift;
        this.folds.forEach(function(fold) {
            fold.start.row += shift;
            fold.end.row += shift;
        });
    }

    this.addFold = function(fold) {
        if (fold.sameRow) {
            if (fold.start.row < this.startRow || fold.endRow > this.endRow) {
                throw "Can't add a fold to this FoldLine as it has no connection";
            }
            this.folds.push(fold);
            this.folds.sort(function(a, b) {
                return -a.range.compareEnd(b.start.row, b.start.column);
            });
            if (this.range.compareEnd(fold.start.row, fold.start.column) > 0) {
                this.end.row = fold.end.row;
                this.end.column =  fold.end.column;
            } else if (this.range.compareStart(fold.end.row, fold.end.column) < 0) {
                this.start.row = fold.start.row;
                this.start.column = fold.start.column;
            }
        } else if (fold.start.row == this.end.row) {
            this.folds.push(fold);
            this.end.row = fold.end.row;
            this.end.column = fold.end.column;
        } else if (fold.end.row == this.start.row) {
            this.folds.unshift(fold);
            this.start.row = fold.start.row;
            this.start.column = fold.start.column;
        } else {
            throw "Trying to add fold to FoldRow that doesn't have a matching row";
        }
        fold.foldLine = this;
    }

    this.containsRow = function(row) {
        return row >= this.start.row && row <= this.end.row;
    }

    this.walk = function(callback, endRow, endColumn) {
        var lastEnd = 0,
            folds = this.folds,
            fold,
            comp, stop, isNewRow = true;

        if (endRow == null) {
            endRow = this.end.row;
            endColumn = this.end.column;
        }

        for (var i = 0; i < folds.length; i++) {
            fold = folds[i];

            comp = fold.range.compareStart(endRow, endColumn);
            // This fold is after the endRow/Column.
            if (comp == -1) {
                callback(null, endRow, endColumn, lastEnd, isNewRow);
                return;
            }

            stop = callback(null, fold.start.row, fold.start.column, lastEnd, isNewRow);
            stop = !stop && callback(fold.placeholder, fold.start.row, fold.start.column, lastEnd);

            // If the user requested to stop the walk or endRow/endColumn is
            // inside of this fold (comp == 0), then end here.
            if (stop || comp == 0) {
                return;
            }

            // Note the new lastEnd might not be on the same line. However,
            // it's the callback's job to recognize this.
            isNewRow = !fold.sameRow;
            lastEnd = fold.end.column;
        }
        callback(null, endRow, endColumn, lastEnd, isNewRow);
    }

    this.getNextFoldTo = function(row, column) {
        var fold, cmp;
        for (var i = 0; i < this.folds.length; i++) {
            fold = this.folds[i];
            cmp = fold.range.compareEnd(row, column);
            if (cmp == -1) {
                return {
                    fold: fold,
                    kind: "after"
                };
            } else if (cmp == 0) {
                return {
                    fold: fold,
                    kind: "inside"
                }
            }
        }
        return null;
    }

    this.addRemoveChars = function(row, column, len) {
        var ret = this.getNextFoldTo(row, column),
            fold, folds;
        if (ret) {
            fold = ret.fold;
            if (ret.kind == "inside"
                && fold.start.column != column
                && fold.start.row != row)
            {
                //throwing here breaks whole editor
                //TODO: properly handle this
                window.console && window.console.log(row, column, fold);
            } else if (fold.start.row == row) {
                folds = this.folds;
                var i = folds.indexOf(fold);
                if (i == 0) {
                    this.start.column += len;
                }
                for (i; i < folds.length; i++) {
                    fold = folds[i];
                    fold.start.column += len;
                    if (!fold.sameRow) {
                        return;
                    }
                    fold.end.column += len;
                }
                this.end.column += len;
            }
        }
    }

    this.split = function(row, column) {
        var fold = this.getNextFoldTo(row, column).fold;
        var folds = this.folds;
        var foldData = this.foldData;

        if (!fold)
            return null;

        var i = folds.indexOf(fold);
        var foldBefore = folds[i - 1];
        this.end.row = foldBefore.end.row;
        this.end.column = foldBefore.end.column;

        // Remove the folds after row/column and create a new FoldLine
        // containing these removed folds.
        folds = folds.splice(i, folds.length - i);

        var newFoldLine = new FoldLine(foldData, folds);
        foldData.splice(foldData.indexOf(this) + 1, 0, newFoldLine);
        return newFoldLine;
    }

    this.merge = function(foldLineNext) {
        var folds = foldLineNext.folds;
        for (var i = 0; i < folds.length; i++) {
            this.addFold(folds[i]);
        }
        // Remove the foldLineNext - no longer needed, as
        // it's merged now with foldLineNext.
        var foldData = this.foldData;
        foldData.splice(foldData.indexOf(foldLineNext), 1);
    }

    this.toString = function() {
        var ret = [this.range.toString() + ": [" ];

        this.folds.forEach(function(fold) {
            ret.push("  " + fold.toString());
        });
        ret.push("]")
        return ret.join("\n");
    }

    this.idxToPosition = function(idx) {
        var lastFoldEndColumn = 0;
        var fold;

        for (var i = 0; i < this.folds.length; i++) {
            var fold = this.folds[i];

            idx -= fold.start.column - lastFoldEndColumn;
            if (idx < 0) {
                return {
                    row: fold.start.row,
                    column: fold.start.column + idx
                };
            }

            idx -= fold.placeholder.length;
            if (idx < 0) {
                return fold.start;
            }

            lastFoldEndColumn = fold.end.column;
        }

        return {
            row: this.end.row,
            column: this.end.column + idx
        };
    }
}).call(FoldLine.prototype);

exports.FoldLine = FoldLine;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/range_list',['require','exports','module','./range'],function(require, exports, module) {

var Range = require("./range").Range;
var comparePoints = Range.comparePoints;

var RangeList = function() {
    this.ranges = [];
};

(function() {
    this.comparePoints = comparePoints;

    this.pointIndex = function(pos, excludeEdges, startIndex) {
        var list = this.ranges;

        for (var i = startIndex || 0; i < list.length; i++) {
            var range = list[i];
            var cmpEnd = comparePoints(pos, range.end);
            if (cmpEnd > 0)
                continue;
            var cmpStart = comparePoints(pos, range.start);
            if (cmpEnd === 0)
                return excludeEdges && cmpStart !== 0 ? -i-2 : i;
            if (cmpStart > 0 || (cmpStart === 0 && !excludeEdges))
                return i;

            return -i-1;
        }
        return -i - 1;
    };

    this.add = function(range) {
        var excludeEdges = !range.isEmpty();
        var startIndex = this.pointIndex(range.start, excludeEdges);
        if (startIndex < 0)
            startIndex = -startIndex - 1;

        var endIndex = this.pointIndex(range.end, excludeEdges, startIndex);

        if (endIndex < 0)
            endIndex = -endIndex - 1;
        else
            endIndex++;
        return this.ranges.splice(startIndex, endIndex - startIndex, range);
    };

    this.addList = function(list) {
        var removed = [];
        for (var i = list.length; i--; ) {
            removed.push.call(removed, this.add(list[i]));
        }
        return removed;
    };

    this.substractPoint = function(pos) {
        var i = this.pointIndex(pos);

        if (i >= 0)
            return this.ranges.splice(i, 1);
    };

    // merge overlapping ranges
    this.merge = function() {
        var removed = [];
        var list = this.ranges;
        
        list = list.sort(function(a, b) {
            return comparePoints(a.start, b.start);
        });
        
        var next = list[0], range;
        for (var i = 1; i < list.length; i++) {
            range = next;
            next = list[i];
            var cmp = comparePoints(range.end, next.start);
            if (cmp < 0)
                continue;

            if (cmp == 0 && !range.isEmpty() && !next.isEmpty())
                continue;

            if (comparePoints(range.end, next.end) < 0) {
                range.end.row = next.end.row;
                range.end.column = next.end.column;
            }

            list.splice(i, 1);
            removed.push(next);
            next = range;
            i--;
        }
        
        this.ranges = list;

        return removed;
    };

    this.contains = function(row, column) {
        return this.pointIndex({row: row, column: column}) >= 0;
    };

    this.containsPoint = function(pos) {
        return this.pointIndex(pos) >= 0;
    };

    this.rangeAtPoint = function(pos) {
        var i = this.pointIndex(pos);
        if (i >= 0)
            return this.ranges[i];
    };


    this.clipRows = function(startRow, endRow) {
        var list = this.ranges;
        if (list[0].start.row > endRow || list[list.length - 1].start.row < startRow)
            return [];

        var startIndex = this.pointIndex({row: startRow, column: 0});
        if (startIndex < 0)
            startIndex = -startIndex - 1;
        var endIndex = this.pointIndex({row: endRow, column: 0}, startIndex);
        if (endIndex < 0)
            endIndex = -endIndex - 1;

        var clipped = [];
        for (var i = startIndex; i < endIndex; i++) {
            clipped.push(list[i]);
        }
        return clipped;
    };

    this.removeAll = function() {
        return this.ranges.splice(0, this.ranges.length);
    };

    this.attach = function(session) {
        if (this.session)
            this.detach();

        this.session = session;
        this.onChange = this.$onChange.bind(this);

        this.session.on('change', this.onChange);
    };

    this.detach = function() {
        if (!this.session)
            return;
        this.session.removeListener('change', this.onChange);
        this.session = null;
    };

    this.$onChange = function(e) {
        var changeRange = e.data.range;
        if (e.data.action[0] == "i"){
            var start = changeRange.start;
            var end = changeRange.end;
        } else {
            var end = changeRange.start;
            var start = changeRange.end;
        }
        var startRow = start.row;
        var endRow = end.row;
        var lineDif = endRow - startRow;

        var colDiff = -start.column + end.column;
        var ranges = this.ranges;

        for (var i = 0, n = ranges.length; i < n; i++) {
            var r = ranges[i];
            if (r.end.row < startRow)
                continue;
            if (r.start.row > startRow)
                break;

            if (r.start.row == startRow && r.start.column >= start.column ) {
                if (r.start.column == start.column && this.$insertRight) {
                    // do nothing
                } else {
                    r.start.column += colDiff;
                    r.start.row += lineDif;
                }
            }
            if (r.end.row == startRow && r.end.column >= start.column) {
                if (r.end.column == start.column && this.$insertRight) {
                    continue;
                }
                // special handling for the case when two ranges share an edge
                if (r.end.column == start.column && colDiff > 0 && i < n - 1) {                
                    if (r.end.column > r.start.column && r.end.column == ranges[i+1].start.column)
                        r.end.column -= colDiff;
                }
                r.end.column += colDiff;
                r.end.row += lineDif;
            }
        }

        if (lineDif != 0 && i < n) {
            for (; i < n; i++) {
                var r = ranges[i];
                r.start.row += lineDif;
                r.end.row += lineDif;
            }
        }
    };

}).call(RangeList.prototype);

exports.RangeList = RangeList;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/edit_session/fold',['require','exports','module','../range','../range_list','../lib/oop'],function(require, exports, module) {


var Range = require("../range").Range;
var RangeList = require("../range_list").RangeList;
var oop = require("../lib/oop")
/*
 * Simple fold-data struct.
 **/
var Fold = exports.Fold = function(range, placeholder) {
    this.foldLine = null;
    this.placeholder = placeholder;
    this.range = range;
    this.start = range.start;
    this.end = range.end;

    this.sameRow = range.start.row == range.end.row;
    this.subFolds = this.ranges = [];
};

oop.inherits(Fold, RangeList);

(function() {

    this.toString = function() {
        return '"' + this.placeholder + '" ' + this.range.toString();
    };

    this.setFoldLine = function(foldLine) {
        this.foldLine = foldLine;
        this.subFolds.forEach(function(fold) {
            fold.setFoldLine(foldLine);
        });
    };

    this.clone = function() {
        var range = this.range.clone();
        var fold = new Fold(range, this.placeholder);
        this.subFolds.forEach(function(subFold) {
            fold.subFolds.push(subFold.clone());
        });
        fold.collapseChildren = this.collapseChildren;
        return fold;
    };

    this.addSubFold = function(fold) {
        if (this.range.isEqual(fold))
            return;

        if (!this.range.containsRange(fold))
            throw "A fold can't intersect already existing fold" + fold.range + this.range;

        // transform fold to local coordinates
        consumeRange(fold, this.start);

        var row = fold.start.row, column = fold.start.column;
        for (var i = 0, cmp = -1; i < this.subFolds.length; i++) {
            cmp = this.subFolds[i].range.compare(row, column);
            if (cmp != 1)
                break;
        }
        var afterStart = this.subFolds[i];

        if (cmp == 0)
            return afterStart.addSubFold(fold);

        // cmp == -1
        var row = fold.range.end.row, column = fold.range.end.column;
        for (var j = i, cmp = -1; j < this.subFolds.length; j++) {
            cmp = this.subFolds[j].range.compare(row, column);
            if (cmp != 1)
                break;
        }
        var afterEnd = this.subFolds[j];

        if (cmp == 0)
            throw "A fold can't intersect already existing fold" + fold.range + this.range;

        var consumedFolds = this.subFolds.splice(i, j - i, fold);
        fold.setFoldLine(this.foldLine);

        return fold;
    };
    
    this.restoreRange = function(range) {
        return restoreRange(range, this.start);
    };

}).call(Fold.prototype);

function consumePoint(point, anchor) {
    point.row -= anchor.row;
    if (point.row == 0)
        point.column -= anchor.column;
}
function consumeRange(range, anchor) {
    consumePoint(range.start, anchor);
    consumePoint(range.end, anchor);
}
function restorePoint(point, anchor) {
    if (point.row == 0)
        point.column += anchor.column;
    point.row += anchor.row;
}
function restoreRange(range, anchor) {
    restorePoint(range.start, anchor);
    restorePoint(range.end, anchor);
}

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/edit_session/folding',['require','exports','module','../range','./fold_line','./fold','../token_iterator'],function(require, exports, module) {


var Range = require("../range").Range;
var FoldLine = require("./fold_line").FoldLine;
var Fold = require("./fold").Fold;
var TokenIterator = require("../token_iterator").TokenIterator;

function Folding() {
    /*
     * Looks up a fold at a given row/column. Possible values for side:
     *   -1: ignore a fold if fold.start = row/column
     *   +1: ignore a fold if fold.end = row/column
     */
    this.getFoldAt = function(row, column, side) {
        var foldLine = this.getFoldLine(row);
        if (!foldLine)
            return null;

        var folds = foldLine.folds;
        for (var i = 0; i < folds.length; i++) {
            var fold = folds[i];
            if (fold.range.contains(row, column)) {
                if (side == 1 && fold.range.isEnd(row, column)) {
                    continue;
                } else if (side == -1 && fold.range.isStart(row, column)) {
                    continue;
                }
                return fold;
            }
        }
    };

    /*
     * Returns all folds in the given range. Note, that this will return folds
     *
     */
    this.getFoldsInRange = function(range) {
        var start = range.start;
        var end = range.end;
        var foldLines = this.$foldData;
        var foundFolds = [];

        start.column += 1;
        end.column -= 1;

        for (var i = 0; i < foldLines.length; i++) {
            var cmp = foldLines[i].range.compareRange(range);
            if (cmp == 2) {
                // Range is before foldLine. No intersection. This means,
                // there might be other foldLines that intersect.
                continue;
            }
            else if (cmp == -2) {
                // Range is after foldLine. There can't be any other foldLines then,
                // so let's give up.
                break;
            }

            var folds = foldLines[i].folds;
            for (var j = 0; j < folds.length; j++) {
                var fold = folds[j];
                cmp = fold.range.compareRange(range);
                if (cmp == -2) {
                    break;
                } else if (cmp == 2) {
                    continue;
                } else
                // WTF-state: Can happen due to -1/+1 to start/end column.
                if (cmp == 42) {
                    break;
                }
                foundFolds.push(fold);
            }
        }
        start.column -= 1;
        end.column += 1;

        return foundFolds;
    };
    
    /*
     * Returns all folds in the document
     */
    this.getAllFolds = function() {
        var folds = [];
        var foldLines = this.$foldData;
        
        function addFold(fold) {
            folds.push(fold);
        }
        
        for (var i = 0; i < foldLines.length; i++)
            for (var j = 0; j < foldLines[i].folds.length; j++)
                addFold(foldLines[i].folds[j]);

        return folds;
    };

    /*
     * Returns the string between folds at the given position.
     * E.g.
     *  foo<fold>b|ar<fold>wolrd -> "bar"
     *  foo<fold>bar<fold>wol|rd -> "world"
     *  foo<fold>bar<fo|ld>wolrd -> <null>
     *
     * where | means the position of row/column
     *
     * The trim option determs if the return string should be trimed according
     * to the "side" passed with the trim value:
     *
     * E.g.
     *  foo<fold>b|ar<fold>wolrd -trim=-1> "b"
     *  foo<fold>bar<fold>wol|rd -trim=+1> "rld"
     *  fo|o<fold>bar<fold>wolrd -trim=00> "foo"
     */
    this.getFoldStringAt = function(row, column, trim, foldLine) {
        foldLine = foldLine || this.getFoldLine(row);
        if (!foldLine)
            return null;

        var lastFold = {
            end: { column: 0 }
        };
        // TODO: Refactor to use getNextFoldTo function.
        var str, fold;
        for (var i = 0; i < foldLine.folds.length; i++) {
            fold = foldLine.folds[i];
            var cmp = fold.range.compareEnd(row, column);
            if (cmp == -1) {
                str = this
                    .getLine(fold.start.row)
                    .substring(lastFold.end.column, fold.start.column);
                break;
            }
            else if (cmp === 0) {
                return null;
            }
            lastFold = fold;
        }
        if (!str)
            str = this.getLine(fold.start.row).substring(lastFold.end.column);

        if (trim == -1)
            return str.substring(0, column - lastFold.end.column);
        else if (trim == 1)
            return str.substring(column - lastFold.end.column);
        else
            return str;
    };

    this.getFoldLine = function(docRow, startFoldLine) {
        var foldData = this.$foldData;
        var i = 0;
        if (startFoldLine)
            i = foldData.indexOf(startFoldLine);
        if (i == -1)
            i = 0;
        for (i; i < foldData.length; i++) {
            var foldLine = foldData[i];
            if (foldLine.start.row <= docRow && foldLine.end.row >= docRow) {
                return foldLine;
            } else if (foldLine.end.row > docRow) {
                return null;
            }
        }
        return null;
    };

    // returns the fold which starts after or contains docRow
    this.getNextFoldLine = function(docRow, startFoldLine) {
        var foldData = this.$foldData;
        var i = 0;
        if (startFoldLine)
            i = foldData.indexOf(startFoldLine);
        if (i == -1)
            i = 0;
        for (i; i < foldData.length; i++) {
            var foldLine = foldData[i];
            if (foldLine.end.row >= docRow) {
                return foldLine;
            }
        }
        return null;
    };

    this.getFoldedRowCount = function(first, last) {
        var foldData = this.$foldData, rowCount = last-first+1;
        for (var i = 0; i < foldData.length; i++) {
            var foldLine = foldData[i],
                end = foldLine.end.row,
                start = foldLine.start.row;
            if (end >= last) {
                if(start < last) {
                    if(start >= first)
                        rowCount -= last-start;
                    else
                        rowCount = 0;//in one fold
                }
                break;
            } else if(end >= first){
                if (start >= first) //fold inside range
                    rowCount -=  end-start;
                else
                    rowCount -=  end-first+1;
            }
        }
        return rowCount;
    };

    this.$addFoldLine = function(foldLine) {
        this.$foldData.push(foldLine);
        this.$foldData.sort(function(a, b) {
            return a.start.row - b.start.row;
        });
        return foldLine;
    };

    /**
     * Adds a new fold.
     *
     * @returns
     *      The new created Fold object or an existing fold object in case the
     *      passed in range fits an existing fold exactly.
     */
    this.addFold = function(placeholder, range) {
        var foldData = this.$foldData;
        var added = false;
        var fold;
        
        if (placeholder instanceof Fold)
            fold = placeholder;
        else {
            fold = new Fold(range, placeholder);
            fold.collapseChildren = range.collapseChildren;
        }
        this.$clipRangeToDocument(fold.range);

        var startRow = fold.start.row;
        var startColumn = fold.start.column;
        var endRow = fold.end.row;
        var endColumn = fold.end.column;

        // --- Some checking ---
        if (!(startRow < endRow || 
            startRow == endRow && startColumn <= endColumn - 2))
            throw "The range has to be at least 2 characters width";

        var startFold = this.getFoldAt(startRow, startColumn, 1);
        var endFold = this.getFoldAt(endRow, endColumn, -1);
        if (startFold && endFold == startFold)
            return startFold.addSubFold(fold);

        if (
            (startFold && !startFold.range.isStart(startRow, startColumn))
            || (endFold && !endFold.range.isEnd(endRow, endColumn))
        ) {
            throw "A fold can't intersect already existing fold" + fold.range + startFold.range;
        }

        // Check if there are folds in the range we create the new fold for.
        var folds = this.getFoldsInRange(fold.range);
        if (folds.length > 0) {
            // Remove the folds from fold data.
            this.removeFolds(folds);
            // Add the removed folds as subfolds on the new fold.
            folds.forEach(function(subFold) {
                fold.addSubFold(subFold);
            });
        }

        for (var i = 0; i < foldData.length; i++) {
            var foldLine = foldData[i];
            if (endRow == foldLine.start.row) {
                foldLine.addFold(fold);
                added = true;
                break;
            } else if (startRow == foldLine.end.row) {
                foldLine.addFold(fold);
                added = true;
                if (!fold.sameRow) {
                    // Check if we might have to merge two FoldLines.
                    var foldLineNext = foldData[i + 1];
                    if (foldLineNext && foldLineNext.start.row == endRow) {
                        // We need to merge!
                        foldLine.merge(foldLineNext);
                        break;
                    }
                }
                break;
            } else if (endRow <= foldLine.start.row) {
                break;
            }
        }

        if (!added)
            foldLine = this.$addFoldLine(new FoldLine(this.$foldData, fold));

        if (this.$useWrapMode)
            this.$updateWrapData(foldLine.start.row, foldLine.start.row);
        else
            this.$updateRowLengthCache(foldLine.start.row, foldLine.start.row);

        // Notify that fold data has changed.
        this.$modified = true;
        this._emit("changeFold", { data: fold, action: "add" });

        return fold;
    };

    this.addFolds = function(folds) {
        folds.forEach(function(fold) {
            this.addFold(fold);
        }, this);
    };

    this.removeFold = function(fold) {
        var foldLine = fold.foldLine;
        var startRow = foldLine.start.row;
        var endRow = foldLine.end.row;

        var foldLines = this.$foldData;
        var folds = foldLine.folds;
        // Simple case where there is only one fold in the FoldLine such that
        // the entire fold line can get removed directly.
        if (folds.length == 1) {
            foldLines.splice(foldLines.indexOf(foldLine), 1);
        } else
        // If the fold is the last fold of the foldLine, just remove it.
        if (foldLine.range.isEnd(fold.end.row, fold.end.column)) {
            folds.pop();
            foldLine.end.row = folds[folds.length - 1].end.row;
            foldLine.end.column = folds[folds.length - 1].end.column;
        } else
        // If the fold is the first fold of the foldLine, just remove it.
        if (foldLine.range.isStart(fold.start.row, fold.start.column)) {
            folds.shift();
            foldLine.start.row = folds[0].start.row;
            foldLine.start.column = folds[0].start.column;
        } else
        // We know there are more then 2 folds and the fold is not at the edge.
        // This means, the fold is somewhere in between.
        //
        // If the fold is in one row, we just can remove it.
        if (fold.sameRow) {
            folds.splice(folds.indexOf(fold), 1);
        } else
        // The fold goes over more then one row. This means remvoing this fold
        // will cause the fold line to get splitted up. newFoldLine is the second part
        {
            var newFoldLine = foldLine.split(fold.start.row, fold.start.column);
            folds = newFoldLine.folds;
            folds.shift();
            newFoldLine.start.row = folds[0].start.row;
            newFoldLine.start.column = folds[0].start.column;
        }

        if (!this.$updating) {
            if (this.$useWrapMode)
                this.$updateWrapData(startRow, endRow);
            else
                this.$updateRowLengthCache(startRow, endRow);
        }
        
        // Notify that fold data has changed.
        this.$modified = true;
        this._emit("changeFold", { data: fold, action: "remove" });
    };

    this.removeFolds = function(folds) {
        // We need to clone the folds array passed in as it might be the folds
        // array of a fold line and as we call this.removeFold(fold), folds
        // are removed from folds and changes the current index.
        var cloneFolds = [];
        for (var i = 0; i < folds.length; i++) {
            cloneFolds.push(folds[i]);
        }

        cloneFolds.forEach(function(fold) {
            this.removeFold(fold);
        }, this);
        this.$modified = true;
    };

    this.expandFold = function(fold) {
        this.removeFold(fold);        
        fold.subFolds.forEach(function(subFold) {
            fold.restoreRange(subFold);
            this.addFold(subFold);
        }, this);
        if (fold.collapseChildren > 0) {
            this.foldAll(fold.start.row+1, fold.end.row, fold.collapseChildren-1);
        }
        fold.subFolds = [];
    };

    this.expandFolds = function(folds) {
        folds.forEach(function(fold) {
            this.expandFold(fold);
        }, this);
    };

    this.unfold = function(location, expandInner) {
        var range, folds;
        if (location == null) {
            range = new Range(0, 0, this.getLength(), 0);
            expandInner = true;
        } else if (typeof location == "number")
            range = new Range(location, 0, location, this.getLine(location).length);
        else if ("row" in location)
            range = Range.fromPoints(location, location);
        else
            range = location;

        folds = this.getFoldsInRange(range);
        if (expandInner) {
            this.removeFolds(folds);
        } else {
            // TODO: might need to remove and add folds in one go instead of using
            // expandFolds several times.
            while (folds.length) {
                this.expandFolds(folds);
                folds = this.getFoldsInRange(range);
            }
        }
    };

    /*
     * Checks if a given documentRow is folded. This is true if there are some
     * folded parts such that some parts of the line is still visible.
     **/
    this.isRowFolded = function(docRow, startFoldRow) {
        return !!this.getFoldLine(docRow, startFoldRow);
    };

    this.getRowFoldEnd = function(docRow, startFoldRow) {
        var foldLine = this.getFoldLine(docRow, startFoldRow);
        return foldLine ? foldLine.end.row : docRow;
    };

    this.getRowFoldStart = function(docRow, startFoldRow) {
        var foldLine = this.getFoldLine(docRow, startFoldRow);
        return foldLine ? foldLine.start.row : docRow;
    };

    this.getFoldDisplayLine = function(foldLine, endRow, endColumn, startRow, startColumn) {
        if (startRow == null) {
            startRow = foldLine.start.row;
            startColumn = 0;
        }

        if (endRow == null) {
            endRow = foldLine.end.row;
            endColumn = this.getLine(endRow).length;
        }

        // Build the textline using the FoldLine walker.
        var doc = this.doc;
        var textLine = "";

        foldLine.walk(function(placeholder, row, column, lastColumn) {
            if (row < startRow)
                return;
            if (row == startRow) {
                if (column < startColumn)
                    return;
                lastColumn = Math.max(startColumn, lastColumn);
            }

            if (placeholder != null) {
                textLine += placeholder;
            } else {
                textLine += doc.getLine(row).substring(lastColumn, column);
            }
        }, endRow, endColumn);
        return textLine;
    };

    this.getDisplayLine = function(row, endColumn, startRow, startColumn) {
        var foldLine = this.getFoldLine(row);

        if (!foldLine) {
            var line;
            line = this.doc.getLine(row);
            return line.substring(startColumn || 0, endColumn || line.length);
        } else {
            return this.getFoldDisplayLine(
                foldLine, row, endColumn, startRow, startColumn);
        }
    };

    this.$cloneFoldData = function() {
        var fd = [];
        fd = this.$foldData.map(function(foldLine) {
            var folds = foldLine.folds.map(function(fold) {
                return fold.clone();
            });
            return new FoldLine(fd, folds);
        });

        return fd;
    };

    this.toggleFold = function(tryToUnfold) {
        var selection = this.selection;
        var range = selection.getRange();
        var fold;
        var bracketPos;

        if (range.isEmpty()) {
            var cursor = range.start;
            fold = this.getFoldAt(cursor.row, cursor.column);

            if (fold) {
                this.expandFold(fold);
                return;
            } else if (bracketPos = this.findMatchingBracket(cursor)) {
                if (range.comparePoint(bracketPos) == 1) {
                    range.end = bracketPos;
                } else {
                    range.start = bracketPos;
                    range.start.column++;
                    range.end.column--;
                }
            } else if (bracketPos = this.findMatchingBracket({row: cursor.row, column: cursor.column + 1})) {
                if (range.comparePoint(bracketPos) == 1)
                    range.end = bracketPos;
                else
                    range.start = bracketPos;

                range.start.column++;
            } else {
                range = this.getCommentFoldRange(cursor.row, cursor.column) || range;
            }
        } else {
            var folds = this.getFoldsInRange(range);
            if (tryToUnfold && folds.length) {
                this.expandFolds(folds);
                return;
            } else if (folds.length == 1 ) {
                fold = folds[0];
            }
        }

        if (!fold)
            fold = this.getFoldAt(range.start.row, range.start.column);

        if (fold && fold.range.toString() == range.toString()) {
            this.expandFold(fold);
            return;
        }

        var placeholder = "...";
        if (!range.isMultiLine()) {
            placeholder = this.getTextRange(range);
            if(placeholder.length < 4)
                return;
            placeholder = placeholder.trim().substring(0, 2) + "..";
        }

        this.addFold(placeholder, range);
    };

    this.getCommentFoldRange = function(row, column, dir) {
        var iterator = new TokenIterator(this, row, column);
        var token = iterator.getCurrentToken();
        if (token && /^comment|string/.test(token.type)) {
            var range = new Range();
            var re = new RegExp(token.type.replace(/\..*/, "\\."));
            if (dir != 1) {
                do {
                    token = iterator.stepBackward();
                } while(token && re.test(token.type));
                iterator.stepForward();
            }
            
            range.start.row = iterator.getCurrentTokenRow();
            range.start.column = iterator.getCurrentTokenColumn() + 2;

            iterator = new TokenIterator(this, row, column);
            
            if (dir != -1) {
                do {
                    token = iterator.stepForward();
                } while(token && re.test(token.type));
                token = iterator.stepBackward();
            } else
                token = iterator.getCurrentToken();

            range.end.row = iterator.getCurrentTokenRow();
            range.end.column = iterator.getCurrentTokenColumn() + token.value.length - 2;
            return range;
        }
    };

    this.foldAll = function(startRow, endRow, depth) {
        if (depth == undefined)
            depth = 100000; // JSON.stringify doesn't hanle Infinity
        var foldWidgets = this.foldWidgets;
        endRow = endRow || this.getLength();
        startRow = startRow || 0;
        for (var row = startRow; row < endRow; row++) {
            if (foldWidgets[row] == null)
                foldWidgets[row] = this.getFoldWidget(row);
            if (foldWidgets[row] != "start")
                continue;

            var range = this.getFoldWidgetRange(row);
            var rangeEndRow = range.end.row;
            // sometimes range can be incompatible with existing fold
            // TODO change addFold to return null istead of throwing
            if (range && range.isMultiLine()
                && rangeEndRow <= endRow
                && range.start.row >= startRow
            ) try {
                var fold = this.addFold("...", range);
                fold.collapseChildren = depth;
                // addFold can change the range
                row = rangeEndRow;
            } catch(e) {}
        }
    };
    
    // structured folding
    this.$foldStyles = {
        "manual": 1,
        "markbegin": 1,
        "markbeginend": 1
    };
    this.$foldStyle = "markbegin";
    this.setFoldStyle = function(style) {
        if (!this.$foldStyles[style])
            throw new Error("invalid fold style: " + style + "[" + Object.keys(this.$foldStyles).join(", ") + "]");
        
        if (this.$foldStyle == style)
            return;

        this.$foldStyle = style;
        
        if (style == "manual")
            this.unfold();
        
        // reset folding
        var mode = this.$foldMode;
        this.$setFolding(null);
        this.$setFolding(mode);
    };

    this.$setFolding = function(foldMode) {
        if (this.$foldMode == foldMode)
            return;
            
        this.$foldMode = foldMode;
        
        this.removeListener('change', this.$updateFoldWidgets);
        this._emit("changeAnnotation");
        
        if (!foldMode || this.$foldStyle == "manual") {
            this.foldWidgets = null;
            return;
        }
        
        this.foldWidgets = [];
        this.getFoldWidget = foldMode.getFoldWidget.bind(foldMode, this, this.$foldStyle);
        this.getFoldWidgetRange = foldMode.getFoldWidgetRange.bind(foldMode, this, this.$foldStyle);
        
        this.$updateFoldWidgets = this.updateFoldWidgets.bind(this);
        this.on('change', this.$updateFoldWidgets);
        
    };

    this.getParentFoldRangeData = function (row, ignoreCurrent) {
        var fw = this.foldWidgets;
        if (!fw || (ignoreCurrent && fw[row]))
            return {};

        var i = row - 1, firstRange;
        while (i >= 0) {
            var c = fw[i];
            if (c == null)
                c = fw[i] = this.getFoldWidget(i);

            if (c == "start") {
                var range = this.getFoldWidgetRange(i);
                if (!firstRange)
                    firstRange = range;
                if (range && range.end.row >= row)
                    break;
            }
            i--;
        }

        return {
            range: i !== -1 && range,
            firstRange: firstRange
        };
    }

    this.onFoldWidgetClick = function(row, e) {
        var type = this.getFoldWidget(row);
        var line = this.getLine(row);
        e = e.domEvent;
        var children = e.shiftKey;
        var all = e.ctrlKey || e.metaKey;
        var siblings = e.altKey;

        var dir = type === "end" ? -1 : 1;
        var fold = this.getFoldAt(row, dir === -1 ? 0 : line.length, dir);

        if (fold) {
            if (children || all)
                this.removeFold(fold);
            else
                this.expandFold(fold);
            return;
        }

        var range = this.getFoldWidgetRange(row);
        // sometimes singleline folds can be missed by the code above
        if (range && !range.isMultiLine()) {
            fold = this.getFoldAt(range.start.row, range.start.column, 1);
            if (fold && range.isEqual(fold.range)) {
                this.removeFold(fold);
                return;
            }
        }
        
        if (siblings) {
            var data = this.getParentFoldRangeData(row);
            if (data.range) {
                var startRow = data.range.start.row + 1;
                var endRow = data.range.end.row;
            }
            this.foldAll(startRow, endRow, all ? 10000 : 0);
        } else if (children) {
            var endRow = range ? range.end.row : this.getLength();
            this.foldAll(row + 1, range.end.row, all ? 10000 : 0);
        } else if (range) {
            if (all) 
                range.collapseChildren = 10000;
            this.addFold("...", range);
        }
        
        if (!range)
            (e.target || e.srcElement).className += " ace_invalid"
    };

    this.updateFoldWidgets = function(e) {
        var delta = e.data;
        var range = delta.range;
        var firstRow = range.start.row;
        var len = range.end.row - firstRow;

        if (len === 0) {
            this.foldWidgets[firstRow] = null;
        } else if (delta.action == "removeText" || delta.action == "removeLines") {
            this.foldWidgets.splice(firstRow, len + 1, null);
        } else {
            var args = Array(len + 1);
            args.unshift(firstRow, 1);
            this.foldWidgets.splice.apply(this.foldWidgets, args);
        }
    };

}

exports.Folding = Folding;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/edit_session/bracket_match',['require','exports','module','../token_iterator','../range'],function(require, exports, module) {


var TokenIterator = require("../token_iterator").TokenIterator;
var Range = require("../range").Range;


function BracketMatch() {

    this.findMatchingBracket = function(position, chr) {
        if (position.column == 0) return null;

        var charBeforeCursor = chr || this.getLine(position.row).charAt(position.column-1);
        if (charBeforeCursor == "") return null;

        var match = charBeforeCursor.match(/([\(\[\{])|([\)\]\}])/);
        if (!match)
            return null;

        if (match[1])
            return this.$findClosingBracket(match[1], position);
        else
            return this.$findOpeningBracket(match[2], position);
    };
    
    this.getBracketRange = function(pos) {
        var line = this.getLine(pos.row);
        var before = true, range;

        var chr = line.charAt(pos.column-1);
        var match = chr && chr.match(/([\(\[\{])|([\)\]\}])/);
        if (!match) {
            chr = line.charAt(pos.column);
            pos = {row: pos.row, column: pos.column + 1};
            match = chr && chr.match(/([\(\[\{])|([\)\]\}])/);
            before = false;
        }
        if (!match)
            return null;

        if (match[1]) {
            var bracketPos = this.$findClosingBracket(match[1], pos);
            if (!bracketPos)
                return null;
            range = Range.fromPoints(pos, bracketPos);
            if (!before) {
                range.end.column++;
                range.start.column--;
            }
            range.cursor = range.end;
        } else {
            var bracketPos = this.$findOpeningBracket(match[2], pos);
            if (!bracketPos)
                return null;
            range = Range.fromPoints(bracketPos, pos);
            if (!before) {
                range.start.column++;
                range.end.column--;
            }
            range.cursor = range.start;
        }
        
        return range;
    };

    this.$brackets = {
        ")": "(",
        "(": ")",
        "]": "[",
        "[": "]",
        "{": "}",
        "}": "{"
    };

    this.$findOpeningBracket = function(bracket, position, typeRe) {
        var openBracket = this.$brackets[bracket];
        var depth = 1;

        var iterator = new TokenIterator(this, position.row, position.column);
        var token = iterator.getCurrentToken();
        if (!token)
            token = iterator.stepForward();
        if (!token)
            return;
        
         if (!typeRe){
            typeRe = new RegExp(
                "(\\.?" +
                token.type.replace(".", "\\.").replace("rparen", ".paren")
                + ")+"
            );
        }
        
        // Start searching in token, just before the character at position.column
        var valueIndex = position.column - iterator.getCurrentTokenColumn() - 2;
        var value = token.value;
        
        while (true) {
        
            while (valueIndex >= 0) {
                var chr = value.charAt(valueIndex);
                if (chr == openBracket) {
                    depth -= 1;
                    if (depth == 0) {
                        return {row: iterator.getCurrentTokenRow(),
                            column: valueIndex + iterator.getCurrentTokenColumn()};
                    }
                }
                else if (chr == bracket) {
                    depth += 1;
                }
                valueIndex -= 1;
            }

            // Scan backward through the document, looking for the next token
            // whose type matches typeRe
            do {
                token = iterator.stepBackward();
            } while (token && !typeRe.test(token.type));

            if (token == null)
                break;
                
            value = token.value;
            valueIndex = value.length - 1;
        }
        
        return null;
    };

    this.$findClosingBracket = function(bracket, position, typeRe) {
        var closingBracket = this.$brackets[bracket];
        var depth = 1;

        var iterator = new TokenIterator(this, position.row, position.column);
        var token = iterator.getCurrentToken();
        if (!token)
            token = iterator.stepForward();
        if (!token)
            return;

        if (!typeRe){
            typeRe = new RegExp(
                "(\\.?" +
                token.type.replace(".", "\\.").replace("lparen", ".paren")
                + ")+"
            );
        }

        // Start searching in token, after the character at position.column
        var valueIndex = position.column - iterator.getCurrentTokenColumn();

        while (true) {

            var value = token.value;
            var valueLength = value.length;
            while (valueIndex < valueLength) {
                var chr = value.charAt(valueIndex);
                if (chr == closingBracket) {
                    depth -= 1;
                    if (depth == 0) {
                        return {row: iterator.getCurrentTokenRow(),
                            column: valueIndex + iterator.getCurrentTokenColumn()};
                    }
                }
                else if (chr == bracket) {
                    depth += 1;
                }
                valueIndex += 1;
            }

            // Scan forward through the document, looking for the next token
            // whose type matches typeRe
            do {
                token = iterator.stepForward();
            } while (token && !typeRe.test(token.type));

            if (token == null)
                break;

            valueIndex = 0;
        }
        
        return null;
    };
}
exports.BracketMatch = BracketMatch;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/edit_session',['require','exports','module','./lib/oop','./lib/lang','./config','./lib/event_emitter','./selection','./mode/text','./range','./document','./background_tokenizer','./search_highlight','./edit_session/folding','./edit_session/bracket_match'],function(require, exports, module) {


var oop = require("./lib/oop");
var lang = require("./lib/lang");
var config = require("./config");
var EventEmitter = require("./lib/event_emitter").EventEmitter;
var Selection = require("./selection").Selection;
var TextMode = require("./mode/text").Mode;
var Range = require("./range").Range;
var Document = require("./document").Document;
var BackgroundTokenizer = require("./background_tokenizer").BackgroundTokenizer;
var SearchHighlight = require("./search_highlight").SearchHighlight;

/**
 * Stores all the data about [[Editor `Editor`]] state providing easy way to change editors state.
 *
 * `EditSession` can be attached to only one [[Document `Document`]]. Same `Document` can be attached to several `EditSession`s.
 * @class EditSession
 **/

//{ events
/**
 *
 * Emitted when the document changes.
 * @event change
 * @param {Object} e An object containing a `delta` of information about the change.
 **/
/**
 * Emitted when the tab size changes, via [[EditSession.setTabSize]].
 *
 * @event changeTabSize
 **/
/**
 * Emitted when the ability to overwrite text changes, via [[EditSession.setOverwrite]].
 *
 * @event changeOverwrite
 **/
/**
 * Emitted when the gutter changes, either by setting or removing breakpoints, or when the gutter decorations change.
 *
 * @event changeBreakpoint
 **/
/**
 * Emitted when a front marker changes.
 *
 * @event changeFrontMarker
 **/
/**
 * Emitted when a back marker changes.
 *
 * @event changeBackMarker
 **/
/**
 * Emitted when an annotation changes, like through [[EditSession.setAnnotations]].
 *
 * @event changeAnnotation
 **/
/**
 * Emitted when a background tokenizer asynchronously processes new rows.
 * @event tokenizerUpdate
 *
 * @param {Object} e An object containing one property, `"data"`, that contains information about the changing rows
 *
 **/
/**
 * Emitted when the current mode changes.
 *
 * @event changeMode
 *
 **/
/**
 * Emitted when the wrap mode changes.
 *
 * @event changeWrapMode
 *
 **/
/**
 * Emitted when the wrapping limit changes.
 *
 * @event changeWrapLimit
 *
 **/
/**
 * Emitted when a code fold is added or removed.
 *
 * @event changeFold
 *
 **/
 /**
 * Emitted when the scroll top changes.
 * @event changeScrollTop
 *
 * @param {Number} scrollTop The new scroll top value
 **/
/**
 * Emitted when the scroll left changes.
 * @event changeScrollLeft
 *
 * @param {Number} scrollLeft The new scroll left value
 **/
//}

/**
 *
 * Sets up a new `EditSession` and associates it with the given `Document` and `TextMode`.
 * @param {Document | String} text [If `text` is a `Document`, it associates the `EditSession` with it. Otherwise, a new `Document` is created, with the initial text]{: #textParam}
 * @param {TextMode} mode [The inital language mode to use for the document]{: #modeParam}
 *
 * @constructor
 **/

var EditSession = function(text, mode) {
    this.$breakpoints = [];
    this.$decorations = [];
    this.$frontMarkers = {};
    this.$backMarkers = {};
    this.$markerId = 1;
    this.$undoSelect = true;

    this.$foldData = [];
    this.$foldData.toString = function() {
        return this.join("\n");
    }
    this.on("changeFold", this.onChangeFold.bind(this));
    this.$onChange = this.onChange.bind(this);

    if (typeof text != "object" || !text.getLine)
        text = new Document(text);

    this.setDocument(text);
    this.selection = new Selection(this);

    config.resetOptions(this);
    this.setMode(mode);
    config._emit("session", this);
};


(function() {

    oop.implement(this, EventEmitter);

    /**
     * Sets the `EditSession` to point to a new `Document`. If a `BackgroundTokenizer` exists, it also points to `doc`.
     *
     * @param {Document} doc The new `Document` to use
     *
     **/
    this.setDocument = function(doc) {
        if (this.doc)
            this.doc.removeListener("change", this.$onChange);

        this.doc = doc;
        doc.on("change", this.$onChange);

        if (this.bgTokenizer)
            this.bgTokenizer.setDocument(this.getDocument());

        this.resetCaches();
    };

    /**
     * Returns the `Document` associated with this session.
     * @return {Document}
     **/
    this.getDocument = function() {
        return this.doc;
    };

    /**
     * @param {Number} row The row to work with
     *
     **/
    this.$resetRowCache = function(docRow) {
        if (!docRow) {
            this.$docRowCache = [];
            this.$screenRowCache = [];
            return;
        }
        var l = this.$docRowCache.length;
        var i = this.$getRowCacheIndex(this.$docRowCache, docRow) + 1;
        if (l > i) {
            this.$docRowCache.splice(i, l);
            this.$screenRowCache.splice(i, l);
        }
    };

    this.$getRowCacheIndex = function(cacheArray, val) {
        var low = 0;
        var hi = cacheArray.length - 1;

        while (low <= hi) {
            var mid = (low + hi) >> 1;
            var c = cacheArray[mid];

            if (val > c)
                low = mid + 1;
            else if (val < c)
                hi = mid - 1;
            else
                return mid;
        }

        return low -1;
    };

    this.resetCaches = function() {
        this.$modified = true;
        this.$wrapData = [];
        this.$rowLengthCache = [];
        this.$resetRowCache(0);
        if (this.bgTokenizer)
            this.bgTokenizer.start(0);
    };

    this.onChangeFold = function(e) {
        var fold = e.data;
        this.$resetRowCache(fold.start.row);
    };

    this.onChange = function(e) {
        var delta = e.data;
        this.$modified = true;

        this.$resetRowCache(delta.range.start.row);

        var removedFolds = this.$updateInternalDataOnChange(e);
        if (!this.$fromUndo && this.$undoManager && !delta.ignore) {
            this.$deltasDoc.push(delta);
            if (removedFolds && removedFolds.length != 0) {
                this.$deltasFold.push({
                    action: "removeFolds",
                    folds:  removedFolds
                });
            }

            this.$informUndoManager.schedule();
        }

        this.bgTokenizer.$updateOnChange(delta);
        this._emit("change", e);
    };

    /**
    * Sets the session text.
    * @param {String} text The new text to place
    *
    *
    *
    **/
    this.setValue = function(text) {
        this.doc.setValue(text);
        this.selection.moveCursorTo(0, 0);
        this.selection.clearSelection();

        this.$resetRowCache(0);
        this.$deltas = [];
        this.$deltasDoc = [];
        this.$deltasFold = [];
        this.getUndoManager().reset();
    };

    /**
    * Returns the current [[Document `Document`]] as a string.
    * @method toString
    * @returns {String}
    * @alias EditSession.getValue
    *
    **/

    /**
    * Returns the current [[Document `Document`]] as a string.
    * @method getValue
    * @returns {String}
    * @alias EditSession.toString
    **/
    this.getValue =
    this.toString = function() {
        return this.doc.getValue();
    };

    /**
    * Returns the string of the current selection.
    **/
    this.getSelection = function() {
        return this.selection;
    };

    /**
     * {:BackgroundTokenizer.getState}
     * @param {Number} row The row to start at
     *
     * @related BackgroundTokenizer.getState
     **/
    this.getState = function(row) {
        return this.bgTokenizer.getState(row);
    };

    /**
     * Starts tokenizing at the row indicated. Returns a list of objects of the tokenized rows.
     * @param {Number} row The row to start at
     *
     *
     *
     **/
    this.getTokens = function(row) {
        return this.bgTokenizer.getTokens(row);
    };

    /**
    * Returns an object indicating the token at the current row. The object has two properties: `index` and `start`.
    * @param {Number} row The row number to retrieve from
    * @param {Number} column The column number to retrieve from
    *
    *
    **/
    this.getTokenAt = function(row, column) {
        var tokens = this.bgTokenizer.getTokens(row);
        var token, c = 0;
        if (column == null) {
            i = tokens.length - 1;
            c = this.getLine(row).length;
        } else {
            for (var i = 0; i < tokens.length; i++) {
                c += tokens[i].value.length;
                if (c >= column)
                    break;
            }
        }
        token = tokens[i];
        if (!token)
            return null;
        token.index = i;
        token.start = c - token.value.length;
        return token;
    };

    /**
    * Sets the undo manager.
    * @param {UndoManager} undoManager The new undo manager
    *
    *
    **/
    this.setUndoManager = function(undoManager) {
        this.$undoManager = undoManager;
        this.$deltas = [];
        this.$deltasDoc = [];
        this.$deltasFold = [];

        if (this.$informUndoManager)
            this.$informUndoManager.cancel();

        if (undoManager) {
            var self = this;

            this.$syncInformUndoManager = function() {
                self.$informUndoManager.cancel();

                if (self.$deltasFold.length) {
                    self.$deltas.push({
                        group: "fold",
                        deltas: self.$deltasFold
                    });
                    self.$deltasFold = [];
                }

                if (self.$deltasDoc.length) {
                    self.$deltas.push({
                        group: "doc",
                        deltas: self.$deltasDoc
                    });
                    self.$deltasDoc = [];
                }

                if (self.$deltas.length > 0) {
                    undoManager.execute({
                        action: "aceupdate",
                        args: [self.$deltas, self],
                        merge: self.mergeUndoDeltas
                    });
                }
                self.mergeUndoDeltas = false;
                self.$deltas = [];
            }
            this.$informUndoManager = lang.delayedCall(this.$syncInformUndoManager);
        }
    };

    /**
     * starts a new group in undo history
     **/
    this.markUndoGroup = function() {
        if (this.$syncInformUndoManager)
            this.$syncInformUndoManager();
    };
    
    this.$defaultUndoManager = {
        undo: function() {},
        redo: function() {},
        reset: function() {}
    };

    /**
    * Returns the current undo manager.
    **/
    this.getUndoManager = function() {
        return this.$undoManager || this.$defaultUndoManager;
    };

    /**
    * Returns the current value for tabs. If the user is using soft tabs, this will be a series of spaces (defined by [[EditSession.getTabSize `getTabSize()`]]); otherwise it's simply `'\t'`.
    **/
    this.getTabString = function() {
        if (this.getUseSoftTabs()) {
            return lang.stringRepeat(" ", this.getTabSize());
        } else {
            return "\t";
        }
    };

    /**
    /**
    * Pass `true` to enable the use of soft tabs. Soft tabs means you're using spaces instead of the tab character (`'\t'`).
    * @param {Boolean} useSoftTabs Value indicating whether or not to use soft tabs
    **/
    this.setUseSoftTabs = function(val) {
        this.setOption("useSoftTabs", val);
    };
    /**
    * Returns `true` if soft tabs are being used, `false` otherwise.
    * @returns {Boolean}
    **/
    this.getUseSoftTabs = function() {
        // todo might need more general way for changing settings from mode, but this is ok for now
        return this.$useSoftTabs && !this.$mode.$indentWithTabs;
    };
    /**
    * Set the number of spaces that define a soft tab; for example, passing in `4` transforms the soft tabs to be equivalent to four spaces. This function also emits the `changeTabSize` event.
    * @param {Number} tabSize The new tab size
    **/
    this.setTabSize = function(tabSize) {
        this.setOption("tabSize", tabSize)
    };
    /**
    * Returns the current tab size.
    **/
    this.getTabSize = function() {
        return this.$tabSize;
    };

    /**
    * Returns `true` if the character at the position is a soft tab.
    * @param {Object} position The position to check
    *
    *
    **/
    this.isTabStop = function(position) {
        return this.$useSoftTabs && (position.column % this.$tabSize == 0);
    };

    this.$overwrite = false;
    /**
    * Pass in `true` to enable overwrites in your session, or `false` to disable.
    *
    * If overwrites is enabled, any text you enter will type over any text after it. If the value of `overwrite` changes, this function also emites the `changeOverwrite` event.
    *
    * @param {Boolean} overwrite Defines wheter or not to set overwrites
    *
    *
    **/
    this.setOverwrite = function(overwrite) {
        this.setOption("overwrite", overwrite)
    };

    /**
    * Returns `true` if overwrites are enabled; `false` otherwise.
    **/
    this.getOverwrite = function() {
        return this.$overwrite;
    };

    /**
    * Sets the value of overwrite to the opposite of whatever it currently is.
    **/
    this.toggleOverwrite = function() {
        this.setOverwrite(!this.$overwrite);
    };

    /**
    * Adds `className` to the `row`, to be used for CSS stylings and whatnot.
    * @param {Number} row The row number
    * @param {String} className The class to add
    *
    *
    **/
    this.addGutterDecoration = function(row, className) {
        if (!this.$decorations[row])
            this.$decorations[row] = "";
        this.$decorations[row] += " " + className;
        this._emit("changeBreakpoint", {});
    };

    /**
    * Removes `className` from the `row`.
    * @param {Number} row The row number
    * @param {String} className The class to add
    *
    *
    **/
    this.removeGutterDecoration = function(row, className) {
        this.$decorations[row] = (this.$decorations[row] || "").replace(" " + className, "");
        this._emit("changeBreakpoint", {});
    };

    /**
    * Returns an array of numbers, indicating which rows have breakpoints.
    * @returns {[Number]}
    **/
    this.getBreakpoints = function() {
        return this.$breakpoints;
    };

    /**
    * Sets a breakpoint on every row number given by `rows`. This function also emites the `'changeBreakpoint'` event.
    * @param {Array} rows An array of row indices
    *
    *
    *
    **/
    this.setBreakpoints = function(rows) {
        this.$breakpoints = [];
        for (var i=0; i<rows.length; i++) {
            this.$breakpoints[rows[i]] = "ace_breakpoint";
        }
        this._emit("changeBreakpoint", {});
    };

    /**
    * Removes all breakpoints on the rows. This function also emites the `'changeBreakpoint'` event.
    **/
    this.clearBreakpoints = function() {
        this.$breakpoints = [];
        this._emit("changeBreakpoint", {});
    };

    /**
    * Sets a breakpoint on the row number given by `rows`. This function also emites the `'changeBreakpoint'` event.
    * @param {Number} row A row index
    * @param {String} className Class of the breakpoint
    *
    *
    **/
    this.setBreakpoint = function(row, className) {
        if (className === undefined)
            className = "ace_breakpoint";
        if (className)
            this.$breakpoints[row] = className;
        else
            delete this.$breakpoints[row];
        this._emit("changeBreakpoint", {});
    };

    /**
    * Removes a breakpoint on the row number given by `rows`. This function also emites the `'changeBreakpoint'` event.
    * @param {Number} row A row index
    *
    *
    **/
    this.clearBreakpoint = function(row) {
        delete this.$breakpoints[row];
        this._emit("changeBreakpoint", {});
    };

    /**
    * Adds a new marker to the given `Range`. If `inFront` is `true`, a front marker is defined, and the `'changeFrontMarker'` event fires; otherwise, the `'changeBackMarker'` event fires.
    * @param {Range} range Define the range of the marker
    * @param {String} clazz Set the CSS class for the marker
    * @param {Function | String} type Identify the type of the marker
    * @param {Boolean} inFront Set to `true` to establish a front marker
    *
    *
    * @return {Number} The new marker id
    **/
    this.addMarker = function(range, clazz, type, inFront) {
        var id = this.$markerId++;

        var marker = {
            range : range,
            type : type || "line",
            renderer: typeof type == "function" ? type : null,
            clazz : clazz,
            inFront: !!inFront,
            id: id
        }

        if (inFront) {
            this.$frontMarkers[id] = marker;
            this._emit("changeFrontMarker")
        } else {
            this.$backMarkers[id] = marker;
            this._emit("changeBackMarker")
        }

        return id;
    };

    /**
     * Adds a dynamic marker to the session.
     * @param {Object} marker object with update method
     * @param {Boolean} inFront Set to `true` to establish a front marker
     *
     *
     * @return {Object} The added marker
     **/
    this.addDynamicMarker = function(marker, inFront) {
        if (!marker.update)
            return;
        var id = this.$markerId++;
        marker.id = id;
        marker.inFront = !!inFront;

        if (inFront) {
            this.$frontMarkers[id] = marker;
            this._emit("changeFrontMarker")
        } else {
            this.$backMarkers[id] = marker;
            this._emit("changeBackMarker")
        }

        return marker;
    };

    /**
    * Removes the marker with the specified ID. If this marker was in front, the `'changeFrontMarker'` event is emitted. If the marker was in the back, the `'changeBackMarker'` event is emitted.
    * @param {Number} markerId A number representing a marker
    *
    *
    *
    **/
    this.removeMarker = function(markerId) {
        var marker = this.$frontMarkers[markerId] || this.$backMarkers[markerId];
        if (!marker)
            return;

        var markers = marker.inFront ? this.$frontMarkers : this.$backMarkers;
        if (marker) {
            delete (markers[markerId]);
            this._emit(marker.inFront ? "changeFrontMarker" : "changeBackMarker");
        }
    };

    /**
    * Returns an array containing the IDs of all the markers, either front or back.
    * @param {Boolean} inFront If `true`, indicates you only want front markers; `false` indicates only back markers
    *
    * @returns {Array}
    **/
    this.getMarkers = function(inFront) {
        return inFront ? this.$frontMarkers : this.$backMarkers;
    };

    this.highlight = function(re) {
        if (!this.$searchHighlight) {
            var highlight = new SearchHighlight(null, "ace_selected-word", "text");
            this.$searchHighlight = this.addDynamicMarker(highlight);
        }
        this.$searchHighlight.setRegexp(re);
    }

    // experimental
    this.highlightLines = function(startRow, endRow, clazz, inFront) {
        if (typeof endRow != "number") {
            clazz = endRow;
            endRow = startRow;
        }
        if (!clazz)
            clazz = "ace_step";

        var range = new Range(startRow, 0, endRow, Infinity);
        range.id = this.addMarker(range, clazz, "fullLine", inFront);
        return range;
    };

    /*
     * Error:
     *  {
     *    row: 12,
     *    column: 2, //can be undefined
     *    text: "Missing argument",
     *    type: "error" // or "warning" or "info"
     *  }
     */
    /**
    * Sets annotations for the `EditSession`. This functions emits the `'changeAnnotation'` event.
    * @param {Array} annotations A list of annotations
    *
    **/
    this.setAnnotations = function(annotations) {
        this.$annotations = annotations;
        this._emit("changeAnnotation", {});
    };

    /**
    * Returns the annotations for the `EditSession`.
    * @returns {Array}
    **/
    this.getAnnotations = function() {
        return this.$annotations || [];
    };

    /**
    * Clears all the annotations for this session. This function also triggers the `'changeAnnotation'` event.
    **/
    this.clearAnnotations = function() {
        this.setAnnotations([]);
    };

    /**
    * If `text` contains either the newline (`\n`) or carriage-return ('\r') characters, `$autoNewLine` stores that value.
    * @param {String} text A block of text
    *
    *
    **/
    this.$detectNewLine = function(text) {
        var match = text.match(/^.*?(\r?\n)/m);
        if (match) {
            this.$autoNewLine = match[1];
        } else {
            this.$autoNewLine = "\n";
        }
    };

    /**
    * Given a starting row and column, this method returns the `Range` of the first word boundary it finds.
    * @param {Number} row The row to start at
    * @param {Number} column The column to start at
    *
    * @returns {Range}
    **/
    this.getWordRange = function(row, column) {
        var line = this.getLine(row);

        var inToken = false;
        if (column > 0)
            inToken = !!line.charAt(column - 1).match(this.tokenRe);

        if (!inToken)
            inToken = !!line.charAt(column).match(this.tokenRe);

        if (inToken)
            var re = this.tokenRe;
        else if (/^\s+$/.test(line.slice(column-1, column+1)))
            var re = /\s/;
        else
            var re = this.nonTokenRe;

        var start = column;
        if (start > 0) {
            do {
                start--;
            }
            while (start >= 0 && line.charAt(start).match(re));
            start++;
        }

        var end = column;
        while (end < line.length && line.charAt(end).match(re)) {
            end++;
        }

        return new Range(row, start, row, end);
    };

    /**
    * Gets the range of a word, including its right whitespace.
    * @param {Number} row The row number to start from
    * @param {Number} column The column number to start from
    *
    * @return {Range}
    **/
    this.getAWordRange = function(row, column) {
        var wordRange = this.getWordRange(row, column);
        var line = this.getLine(wordRange.end.row);

        while (line.charAt(wordRange.end.column).match(/[ \t]/)) {
            wordRange.end.column += 1;
        }
        return wordRange;
    };

    /**
    * {:Document.setNewLineMode.desc}
    * @param {String} newLineMode {:Document.setNewLineMode.param}
    *
    *
    * @related Document.setNewLineMode
    **/
    this.setNewLineMode = function(newLineMode) {
        this.doc.setNewLineMode(newLineMode);
    };

    /**
    *
    * Returns the current new line mode.
    * @returns {String}
    * @related Document.getNewLineMode
    **/
    this.getNewLineMode = function() {
        return this.doc.getNewLineMode();
    };

    /**
    * Identifies if you want to use a worker for the `EditSession`.
    * @param {Boolean} useWorker Set to `true` to use a worker
    *
    **/
    this.setUseWorker = function(useWorker) { this.setOption("useWorker", useWorker); };

    /**
    * Returns `true` if workers are being used.
    **/
    this.getUseWorker = function() { return this.$useWorker; };

    /**
    * Reloads all the tokens on the current session. This function calls [[BackgroundTokenizer.start `BackgroundTokenizer.start ()`]] to all the rows; it also emits the `'tokenizerUpdate'` event.
    **/
    this.onReloadTokenizer = function(e) {
        var rows = e.data;
        this.bgTokenizer.start(rows.first);
        this._emit("tokenizerUpdate", e);
    };

    this.$modes = {};

    /**
    * Sets a new text mode for the `EditSession`. This method also emits the `'changeMode'` event. If a [[BackgroundTokenizer `BackgroundTokenizer`]] is set, the `'tokenizerUpdate'` event is also emitted.
    * @param {TextMode} mode Set a new text mode
    * @param {cb} optional callback
    *
    **/
    this.$mode = null;
    this.$modeId = null;
    this.setMode = function(mode, cb) {
        if (mode && typeof mode === "object") {
            if (mode.getTokenizer)
                return this.$onChangeMode(mode);
            var options = mode;
            var path = options.path;
        } else {
            path = mode || "ace/mode/text";
        }

        // this is needed if ace isn't on require path (e.g tests in node)
        if (!this.$modes["ace/mode/text"])
            this.$modes["ace/mode/text"] = new TextMode();

        if (this.$modes[path] && !options)
            return this.$onChangeMode(this.$modes[path]);

        // load on demand
        this.$modeId = path;
        config.loadModule(["mode", path], function(m) {
            if (this.$modeId !== path)
                return cb && cb();
            if (this.$modes[path] && !options)
                return this.$onChangeMode(this.$modes[path]);
            if (m && m.Mode) {
                m = new m.Mode(options);
                if (!options) {
                    this.$modes[path] = m;
                    m.$id = path;
                }
                this.$onChangeMode(m);
                cb && cb(this.mode);
            }
        }.bind(this));

        // set mode to text until loading is finished
        if (!this.$mode)
            this.$onChangeMode(this.$modes["ace/mode/text"], true);
    };

    this.$onChangeMode = function(mode, $isPlaceholder) {
        if (!$isPlaceholder)
            this.$modeId = mode.$id;
        if (this.$mode === mode) 
            return;

        this.$mode = mode;

        this.$stopWorker();

        if (this.$useWorker)
            this.$startWorker();

        var tokenizer = mode.getTokenizer();

        if(tokenizer.addEventListener !== undefined) {
            var onReloadTokenizer = this.onReloadTokenizer.bind(this);
            tokenizer.addEventListener("update", onReloadTokenizer);
        }

        if (!this.bgTokenizer) {
            this.bgTokenizer = new BackgroundTokenizer(tokenizer);
            var _self = this;
            this.bgTokenizer.addEventListener("update", function(e) {
                _self._emit("tokenizerUpdate", e);
            });
        } else {
            this.bgTokenizer.setTokenizer(tokenizer);
        }

        this.bgTokenizer.setDocument(this.getDocument());

        this.tokenRe = mode.tokenRe;
        this.nonTokenRe = mode.nonTokenRe;

        this.$options.wrapMethod.set.call(this, this.$wrapMethod);
        
        if (!$isPlaceholder) {
            this.$setFolding(mode.foldingRules);
            this._emit("changeMode");
            this.bgTokenizer.start(0);
        }
    };


    this.$stopWorker = function() {
        if (this.$worker)
            this.$worker.terminate();

        this.$worker = null;
    };

    this.$startWorker = function() {
        if (typeof Worker !== "undefined" && !require.noWorker) {
            try {
                this.$worker = this.$mode.createWorker(this);
            } catch (e) {
                console.log("Could not load worker");
                console.log(e);
                this.$worker = null;
            }
        }
        else
            this.$worker = null;
    };

    /**
    * Returns the current text mode.
    * @returns {TextMode} The current text mode
    **/
    this.getMode = function() {
        return this.$mode;
    };

    this.$scrollTop = 0;
    /**
    * This function sets the scroll top value. It also emits the `'changeScrollTop'` event.
    * @param {Number} scrollTop The new scroll top value
    *
    **/
    this.setScrollTop = function(scrollTop) {
        // TODO: should we force integer lineheight instead? scrollTop = Math.round(scrollTop); 
        if (this.$scrollTop === scrollTop || isNaN(scrollTop))
            return;

        this.$scrollTop = scrollTop;
        this._signal("changeScrollTop", scrollTop);
    };

    /**
    * [Returns the value of the distance between the top of the editor and the topmost part of the visible content.]{: #EditSession.getScrollTop}
    * @returns {Number}
    **/
    this.getScrollTop = function() {
        return this.$scrollTop;
    };

    this.$scrollLeft = 0;
    /**
    * [Sets the value of the distance between the left of the editor and the leftmost part of the visible content.]{: #EditSession.setScrollLeft}
    **/
    this.setScrollLeft = function(scrollLeft) {
        // scrollLeft = Math.round(scrollLeft);
        if (this.$scrollLeft === scrollLeft || isNaN(scrollLeft))
            return;

        this.$scrollLeft = scrollLeft;
        this._signal("changeScrollLeft", scrollLeft);
    };

    /**
    * [Returns the value of the distance between the left of the editor and the leftmost part of the visible content.]{: #EditSession.getScrollLeft}
    * @returns {Number}
    **/
    this.getScrollLeft = function() {
        return this.$scrollLeft;
    };

    /**
    * Returns the width of the screen.
    * @returns {Number}
    **/
    this.getScreenWidth = function() {
        this.$computeWidth();
        return this.screenWidth;
    };

    this.$computeWidth = function(force) {
        if (this.$modified || force) {
            this.$modified = false;

            if (this.$useWrapMode)
                return this.screenWidth = this.$wrapLimit;

            var lines = this.doc.getAllLines();
            var cache = this.$rowLengthCache;
            var longestScreenLine = 0;
            var foldIndex = 0;
            var foldLine = this.$foldData[foldIndex];
            var foldStart = foldLine ? foldLine.start.row : Infinity;
            var len = lines.length;

            for (var i = 0; i < len; i++) {
                if (i > foldStart) {
                    i = foldLine.end.row + 1;
                    if (i >= len)
                        break;
                    foldLine = this.$foldData[foldIndex++];
                    foldStart = foldLine ? foldLine.start.row : Infinity;
                }

                if (cache[i] == null)
                    cache[i] = this.$getStringScreenWidth(lines[i])[0];

                if (cache[i] > longestScreenLine)
                    longestScreenLine = cache[i];
            }
            this.screenWidth = longestScreenLine;
        }
    };

    /**
     * Returns a verbatim copy of the given line as it is in the document
     * @param {Number} row The row to retrieve from
     *
    *
     * @returns {String}
    *
    **/
    this.getLine = function(row) {
        return this.doc.getLine(row);
    };

    /**
     * Returns an array of strings of the rows between `firstRow` and `lastRow`. This function is inclusive of `lastRow`.
     * @param {Number} firstRow The first row index to retrieve
     * @param {Number} lastRow The final row index to retrieve
     *
     * @returns {[String]}
     *
     **/
    this.getLines = function(firstRow, lastRow) {
        return this.doc.getLines(firstRow, lastRow);
    };

    /**
     * Returns the number of rows in the document.
     * @returns {Number}
     **/
    this.getLength = function() {
        return this.doc.getLength();
    };

    /**
     * {:Document.getTextRange.desc}
     * @param {Range} range The range to work with
     *
     * @returns {String}
     **/
    this.getTextRange = function(range) {
        return this.doc.getTextRange(range || this.selection.getRange());
    };

    /**
     * Inserts a block of `text` and the indicated `position`.
     * @param {Object} position The position {row, column} to start inserting at
     * @param {String} text A chunk of text to insert
     * @returns {Object} The position of the last line of `text`. If the length of `text` is 0, this function simply returns `position`.
     *
     *
     **/
    this.insert = function(position, text) {
        return this.doc.insert(position, text);
    };

    /**
     * Removes the `range` from the document.
     * @param {Range} range A specified Range to remove
     * @returns {Object} The new `start` property of the range, which contains `startRow` and `startColumn`. If `range` is empty, this function returns the unmodified value of `range.start`.
     *
     * @related Document.remove
     *
     **/
    this.remove = function(range) {
        return this.doc.remove(range);
    };

    /**
     * Reverts previous changes to your document.
     * @param {Array} deltas An array of previous changes
     * @param {Boolean} dontSelect [If `true`, doesn't select the range of where the change occured]{: #dontSelect}
    *
     *
     * @returns {Range}
    **/
    this.undoChanges = function(deltas, dontSelect) {
        if (!deltas.length)
            return;

        this.$fromUndo = true;
        var lastUndoRange = null;
        for (var i = deltas.length - 1; i != -1; i--) {
            var delta = deltas[i];
            if (delta.group == "doc") {
                this.doc.revertDeltas(delta.deltas);
                lastUndoRange =
                    this.$getUndoSelection(delta.deltas, true, lastUndoRange);
            } else {
                delta.deltas.forEach(function(foldDelta) {
                    this.addFolds(foldDelta.folds);
                }, this);
            }
        }
        this.$fromUndo = false;
        lastUndoRange &&
            this.$undoSelect &&
            !dontSelect &&
            this.selection.setSelectionRange(lastUndoRange);
        return lastUndoRange;
    };

    /**
     * Re-implements a previously undone change to your document.
     * @param {Array} deltas An array of previous changes
     * @param {Boolean} dontSelect {:dontSelect}
     *
    *
     * @returns {Range}
    **/
    this.redoChanges = function(deltas, dontSelect) {
        if (!deltas.length)
            return;

        this.$fromUndo = true;
        var lastUndoRange = null;
        for (var i = 0; i < deltas.length; i++) {
            var delta = deltas[i];
            if (delta.group == "doc") {
                this.doc.applyDeltas(delta.deltas);
                lastUndoRange =
                    this.$getUndoSelection(delta.deltas, false, lastUndoRange);
            }
        }
        this.$fromUndo = false;
        lastUndoRange &&
            this.$undoSelect &&
            !dontSelect &&
            this.selection.setSelectionRange(lastUndoRange);
        return lastUndoRange;
    };

    /**
     * Enables or disables highlighting of the range where an undo occured.
     * @param {Boolean} enable If `true`, selects the range of the reinserted change
    *
    **/
    this.setUndoSelect = function(enable) {
        this.$undoSelect = enable;
    };

    this.$getUndoSelection = function(deltas, isUndo, lastUndoRange) {
        function isInsert(delta) {
            var insert =
                delta.action === "insertText" || delta.action === "insertLines";
            return isUndo ? !insert : insert;
        }

        var delta = deltas[0];
        var range, point;
        var lastDeltaIsInsert = false;
        if (isInsert(delta)) {
            range = Range.fromPoints(delta.range.start, delta.range.end);
            lastDeltaIsInsert = true;
        } else {
            range = Range.fromPoints(delta.range.start, delta.range.start);
            lastDeltaIsInsert = false;
        }

        for (var i = 1; i < deltas.length; i++) {
            delta = deltas[i];
            if (isInsert(delta)) {
                point = delta.range.start;
                if (range.compare(point.row, point.column) == -1) {
                    range.setStart(delta.range.start);
                }
                point = delta.range.end;
                if (range.compare(point.row, point.column) == 1) {
                    range.setEnd(delta.range.end);
                }
                lastDeltaIsInsert = true;
            } else {
                point = delta.range.start;
                if (range.compare(point.row, point.column) == -1) {
                    range =
                        Range.fromPoints(delta.range.start, delta.range.start);
                }
                lastDeltaIsInsert = false;
            }
        }

        // Check if this range and the last undo range has something in common.
        // If true, merge the ranges.
        if (lastUndoRange != null) {
            if (Range.comparePoints(lastUndoRange.start, range.start) == 0) {
                lastUndoRange.start.column += range.end.column - range.start.column;
                lastUndoRange.end.column += range.end.column - range.start.column;
            }

            var cmp = lastUndoRange.compareRange(range);
            if (cmp == 1) {
                range.setStart(lastUndoRange.start);
            } else if (cmp == -1) {
                range.setEnd(lastUndoRange.end);
            }
        }

        return range;
    };

    /**
    * Replaces a range in the document with the new `text`.
    *
    * @param {Range} range A specified Range to replace
    * @param {String} text The new text to use as a replacement
    * @returns {Object} An object containing the final row and column, like this:
    * ```
    * {row: endRow, column: 0}
    * ```
    * If the text and range are empty, this function returns an object containing the current `range.start` value.
    * If the text is the exact same as what currently exists, this function returns an object containing the current `range.end` value.
    *
    *
    *
    * @related Document.replace
    *
    *
    **/
    this.replace = function(range, text) {
        return this.doc.replace(range, text);
    };

    /**
    * Moves a range of text from the given range to the given position. `toPosition` is an object that looks like this:
     *  ```json
    *    { row: newRowLocation, column: newColumnLocation }
     *  ```
     * @param {Range} fromRange The range of text you want moved within the document
     * @param {Object} toPosition The location (row and column) where you want to move the text to
     * @returns {Range} The new range where the text was moved to.
    *
    *
    *
    **/
    this.moveText = function(fromRange, toPosition, copy) {
        var text = this.getTextRange(fromRange);
        var folds = this.getFoldsInRange(fromRange);

        var toRange = Range.fromPoints(toPosition, toPosition);
        if (!copy) {
            this.remove(fromRange);
            var rowDiff = fromRange.start.row - fromRange.end.row;
            var collDiff = rowDiff ? -fromRange.end.column : fromRange.start.column - fromRange.end.column;
            if (collDiff) {
                if (toRange.start.row == fromRange.end.row && toRange.start.column > fromRange.end.column)
                    toRange.start.column += collDiff;
                if (toRange.end.row == fromRange.end.row && toRange.end.column > fromRange.end.column)
                    toRange.end.column += collDiff;
            }
            if (rowDiff && toRange.start.row >= fromRange.end.row) {
                toRange.start.row += rowDiff;
                toRange.end.row += rowDiff;
            }
        }

        this.insert(toRange.start, text);
        if (folds.length) {
            var oldStart = fromRange.start;
            var newStart = toRange.start;
            var rowDiff = newStart.row - oldStart.row;
            var collDiff = newStart.column - oldStart.column;
            this.addFolds(folds.map(function(x) {
                x = x.clone();
                if (x.start.row == oldStart.row)
                    x.start.column += collDiff;
                if (x.end.row == oldStart.row)
                    x.end.column += collDiff;
                x.start.row += rowDiff;
                x.end.row += rowDiff;
                return x;
            }));
        }

        return toRange;
    };

    /**
    * Indents all the rows, from `startRow` to `endRow` (inclusive), by prefixing each row with the token in `indentString`.
    *
    * If `indentString` contains the `'\t'` character, it's replaced by whatever is defined by [[EditSession.getTabString `getTabString()`]].
    * @param {Number} startRow Starting row
    * @param {Number} endRow Ending row
    * @param {String} indentString The indent token
    *
    *
    **/
    this.indentRows = function(startRow, endRow, indentString) {
        indentString = indentString.replace(/\t/g, this.getTabString());
        for (var row=startRow; row<=endRow; row++)
            this.insert({row: row, column:0}, indentString);
    };

    /**
    * Outdents all the rows defined by the `start` and `end` properties of `range`.
    * @param {Range} range A range of rows
    *
    *
    **/
    this.outdentRows = function (range) {
        var rowRange = range.collapseRows();
        var deleteRange = new Range(0, 0, 0, 0);
        var size = this.getTabSize();

        for (var i = rowRange.start.row; i <= rowRange.end.row; ++i) {
            var line = this.getLine(i);

            deleteRange.start.row = i;
            deleteRange.end.row = i;
            for (var j = 0; j < size; ++j)
                if (line.charAt(j) != ' ')
                    break;
            if (j < size && line.charAt(j) == '\t') {
                deleteRange.start.column = j;
                deleteRange.end.column = j + 1;
            } else {
                deleteRange.start.column = 0;
                deleteRange.end.column = j;
            }
            this.remove(deleteRange);
        }
    };

    this.$moveLines = function(firstRow, lastRow, dir) {
        firstRow = this.getRowFoldStart(firstRow);
        lastRow = this.getRowFoldEnd(lastRow);
        if (dir < 0) {
            var row = this.getRowFoldStart(firstRow + dir);
            if (row < 0) return 0;
            var diff = row-firstRow;
        } else if (dir > 0) {
            var row = this.getRowFoldEnd(lastRow + dir);
            if (row > this.doc.getLength()-1) return 0;
            var diff = row-lastRow;
        } else {
            firstRow = this.$clipRowToDocument(firstRow);
            lastRow = this.$clipRowToDocument(lastRow);
            var diff = lastRow - firstRow + 1;
        }

        var range = new Range(firstRow, 0, lastRow, Number.MAX_VALUE);
        var folds = this.getFoldsInRange(range).map(function(x){
            x = x.clone();
            x.start.row += diff;
            x.end.row += diff;
            return x;
        });

        var lines = dir == 0
            ? this.doc.getLines(firstRow, lastRow)
            : this.doc.removeLines(firstRow, lastRow);
        this.doc.insertLines(firstRow+diff, lines);
        folds.length && this.addFolds(folds);
        return diff;
    };
    /**
    * Shifts all the lines in the document up one, starting from `firstRow` and ending at `lastRow`.
    * @param {Number} firstRow The starting row to move up
    * @param {Number} lastRow The final row to move up
    * @returns {Number} If `firstRow` is less-than or equal to 0, this function returns 0. Otherwise, on success, it returns -1.
    *
    * @related Document.insertLines
    *
    **/
    this.moveLinesUp = function(firstRow, lastRow) {
        return this.$moveLines(firstRow, lastRow, -1);
    };

    /**
    * Shifts all the lines in the document down one, starting from `firstRow` and ending at `lastRow`.
    * @param {Number} firstRow The starting row to move down
    * @param {Number} lastRow The final row to move down
    * @returns {Number} If `firstRow` is less-than or equal to 0, this function returns 0. Otherwise, on success, it returns -1.
    *
    * @related Document.insertLines
    **/
    this.moveLinesDown = function(firstRow, lastRow) {
        return this.$moveLines(firstRow, lastRow, 1);
    };

    /**
    * Duplicates all the text between `firstRow` and `lastRow`.
    * @param {Number} firstRow The starting row to duplicate
    * @param {Number} lastRow The final row to duplicate
    * @returns {Number} Returns the number of new rows added; in other words, `lastRow - firstRow + 1`.
    *
    *
    **/
    this.duplicateLines = function(firstRow, lastRow) {
        return this.$moveLines(firstRow, lastRow, 0);
    };


    this.$clipRowToDocument = function(row) {
        return Math.max(0, Math.min(row, this.doc.getLength()-1));
    };

    this.$clipColumnToRow = function(row, column) {
        if (column < 0)
            return 0;
        return Math.min(this.doc.getLine(row).length, column);
    };


    this.$clipPositionToDocument = function(row, column) {
        column = Math.max(0, column);

        if (row < 0) {
            row = 0;
            column = 0;
        } else {
            var len = this.doc.getLength();
            if (row >= len) {
                row = len - 1;
                column = this.doc.getLine(len-1).length;
            } else {
                column = Math.min(this.doc.getLine(row).length, column);
            }
        }

        return {
            row: row,
            column: column
        };
    };

    this.$clipRangeToDocument = function(range) {
        if (range.start.row < 0) {
            range.start.row = 0;
            range.start.column = 0;
        } else {
            range.start.column = this.$clipColumnToRow(
                range.start.row,
                range.start.column
            );
        }

        var len = this.doc.getLength() - 1;
        if (range.end.row > len) {
            range.end.row = len;
            range.end.column = this.doc.getLine(len).length;
        } else {
            range.end.column = this.$clipColumnToRow(
                range.end.row,
                range.end.column
            );
        }
        return range;
    };

    // WRAPMODE
    this.$wrapLimit = 80;
    this.$useWrapMode = false;
    this.$wrapLimitRange = {
        min : null,
        max : null
    };

    /**
     * Sets whether or not line wrapping is enabled. If `useWrapMode` is different than the current value, the `'changeWrapMode'` event is emitted.
     * @param {Boolean} useWrapMode Enable (or disable) wrap mode
     *
    *
    **/
    this.setUseWrapMode = function(useWrapMode) {
        if (useWrapMode != this.$useWrapMode) {
            this.$useWrapMode = useWrapMode;
            this.$modified = true;
            this.$resetRowCache(0);

            // If wrapMode is activaed, the wrapData array has to be initialized.
            if (useWrapMode) {
                var len = this.getLength();
                this.$wrapData = [];
                for (var i = 0; i < len; i++) {
                    this.$wrapData.push([]);
                }
                this.$updateWrapData(0, len - 1);
            }

            this._emit("changeWrapMode");
        }
    };

    /**
    * Returns `true` if wrap mode is being used; `false` otherwise.
    * @returns {Boolean}
    **/
    this.getUseWrapMode = function() {
        return this.$useWrapMode;
    };

    // Allow the wrap limit to move freely between min and max. Either
    // parameter can be null to allow the wrap limit to be unconstrained
    // in that direction. Or set both parameters to the same number to pin
    // the limit to that value.
    /**
     * Sets the boundaries of wrap. Either value can be `null` to have an unconstrained wrap, or, they can be the same number to pin the limit. If the wrap limits for `min` or `max` are different, this method also emits the `'changeWrapMode'` event.
     * @param {Number} min The minimum wrap value (the left side wrap)
     * @param {Number} max The maximum wrap value (the right side wrap)
     *
    *
    **/
    this.setWrapLimitRange = function(min, max) {
        if (this.$wrapLimitRange.min !== min || this.$wrapLimitRange.max !== max) {
            this.$wrapLimitRange = {
                min: min,
                max: max
            };
            this.$modified = true;
            // This will force a recalculation of the wrap limit
            this._emit("changeWrapMode");
        }
    };

    /**
    * This should generally only be called by the renderer when a resize is detected.
    * @param {Number} desiredLimit The new wrap limit
    * @returns {Boolean}
    *
    * @private
    **/
    this.adjustWrapLimit = function(desiredLimit, $printMargin) {
        var limits = this.$wrapLimitRange
        if (limits.max < 0)
            limits = {min: $printMargin, max: $printMargin};
        var wrapLimit = this.$constrainWrapLimit(desiredLimit, limits.min, limits.max);
        if (wrapLimit != this.$wrapLimit && wrapLimit > 1) {
            this.$wrapLimit = wrapLimit;
            this.$modified = true;
            if (this.$useWrapMode) {
                this.$updateWrapData(0, this.getLength() - 1);
                this.$resetRowCache(0);
                this._emit("changeWrapLimit");
            }
            return true;
        }
        return false;
    };

    this.$constrainWrapLimit = function(wrapLimit, min, max) {
        if (min)
            wrapLimit = Math.max(min, wrapLimit);

        if (max)
            wrapLimit = Math.min(max, wrapLimit);

        return wrapLimit;
    };

    /**
    * Returns the value of wrap limit.
    * @returns {Number} The wrap limit.
    **/
    this.getWrapLimit = function() {
        return this.$wrapLimit;
    };
    
    /**
     * Sets the line length for soft wrap in the editor. Lines will break
     *  at a minimum of the given length minus 20 chars and at a maximum
     *  of the given number of chars.
     * @param {number} limit The maximum line length in chars, for soft wrapping lines.
     */
    this.setWrapLimit = function (limit) {
        this.setWrapLimitRange(limit, limit);
    };
    
    /**
    * Returns an object that defines the minimum and maximum of the wrap limit; it looks something like this:
    *
    *     { min: wrapLimitRange_min, max: wrapLimitRange_max }
    *
    * @returns {Object}
    **/
    this.getWrapLimitRange = function() {
        // Avoid unexpected mutation by returning a copy
        return {
            min : this.$wrapLimitRange.min,
            max : this.$wrapLimitRange.max
        };
    };

    this.$updateInternalDataOnChange = function(e) {
        var useWrapMode = this.$useWrapMode;
        var len;
        var action = e.data.action;
        var firstRow = e.data.range.start.row;
        var lastRow = e.data.range.end.row;
        var start = e.data.range.start;
        var end = e.data.range.end;
        var removedFolds = null;

        if (action.indexOf("Lines") != -1) {
            if (action == "insertLines") {
                lastRow = firstRow + (e.data.lines.length);
            } else {
                lastRow = firstRow;
            }
            len = e.data.lines ? e.data.lines.length : lastRow - firstRow;
        } else {
            len = lastRow - firstRow;
        }

        this.$updating = true;
        if (len != 0) {
            if (action.indexOf("remove") != -1) {
                this[useWrapMode ? "$wrapData" : "$rowLengthCache"].splice(firstRow, len);

                var foldLines = this.$foldData;
                removedFolds = this.getFoldsInRange(e.data.range);
                this.removeFolds(removedFolds);

                var foldLine = this.getFoldLine(end.row);
                var idx = 0;
                if (foldLine) {
                    foldLine.addRemoveChars(end.row, end.column, start.column - end.column);
                    foldLine.shiftRow(-len);

                    var foldLineBefore = this.getFoldLine(firstRow);
                    if (foldLineBefore && foldLineBefore !== foldLine) {
                        foldLineBefore.merge(foldLine);
                        foldLine = foldLineBefore;
                    }
                    idx = foldLines.indexOf(foldLine) + 1;
                }

                for (idx; idx < foldLines.length; idx++) {
                    var foldLine = foldLines[idx];
                    if (foldLine.start.row >= end.row) {
                        foldLine.shiftRow(-len);
                    }
                }

                lastRow = firstRow;
            } else {
                var args;
                if (useWrapMode) {
                    args = [firstRow, 0];
                    for (var i = 0; i < len; i++) args.push([]);
                    this.$wrapData.splice.apply(this.$wrapData, args);
                } else {
                    args = Array(len);
                    args.unshift(firstRow, 0);
                    this.$rowLengthCache.splice.apply(this.$rowLengthCache, args);
                }

                // If some new line is added inside of a foldLine, then split
                // the fold line up.
                var foldLines = this.$foldData;
                var foldLine = this.getFoldLine(firstRow);
                var idx = 0;
                if (foldLine) {
                    var cmp = foldLine.range.compareInside(start.row, start.column)
                    // Inside of the foldLine range. Need to split stuff up.
                    if (cmp == 0) {
                        foldLine = foldLine.split(start.row, start.column);
                        foldLine.shiftRow(len);
                        foldLine.addRemoveChars(
                            lastRow, 0, end.column - start.column);
                    } else
                    // Infront of the foldLine but same row. Need to shift column.
                    if (cmp == -1) {
                        foldLine.addRemoveChars(firstRow, 0, end.column - start.column);
                        foldLine.shiftRow(len);
                    }
                    // Nothing to do if the insert is after the foldLine.
                    idx = foldLines.indexOf(foldLine) + 1;
                }

                for (idx; idx < foldLines.length; idx++) {
                    var foldLine = foldLines[idx];
                    if (foldLine.start.row >= firstRow) {
                        foldLine.shiftRow(len);
                    }
                }
            }
        } else {
            // Realign folds. E.g. if you add some new chars before a fold, the
            // fold should "move" to the right.
            len = Math.abs(e.data.range.start.column - e.data.range.end.column);
            if (action.indexOf("remove") != -1) {
                // Get all the folds in the change range and remove them.
                removedFolds = this.getFoldsInRange(e.data.range);
                this.removeFolds(removedFolds);

                len = -len;
            }
            var foldLine = this.getFoldLine(firstRow);
            if (foldLine) {
                foldLine.addRemoveChars(firstRow, start.column, len);
            }
        }

        if (useWrapMode && this.$wrapData.length != this.doc.getLength()) {
            console.error("doc.getLength() and $wrapData.length have to be the same!");
        }
        this.$updating = false;

        if (useWrapMode)
            this.$updateWrapData(firstRow, lastRow);
        else
            this.$updateRowLengthCache(firstRow, lastRow);

        return removedFolds;
    };

    this.$updateRowLengthCache = function(firstRow, lastRow, b) {
        this.$rowLengthCache[firstRow] = null;
        this.$rowLengthCache[lastRow] = null;
    };

    this.$updateWrapData = function(firstRow, lastRow) {
        var lines = this.doc.getAllLines();
        var tabSize = this.getTabSize();
        var wrapData = this.$wrapData;
        var wrapLimit = this.$wrapLimit;
        var tokens;
        var foldLine;

        var row = firstRow;
        lastRow = Math.min(lastRow, lines.length - 1);
        while (row <= lastRow) {
            foldLine = this.getFoldLine(row, foldLine);
            if (!foldLine) {
                tokens = this.$getDisplayTokens(lines[row]);
                wrapData[row] = this.$computeWrapSplits(tokens, wrapLimit, tabSize);
                row ++;
            } else {
                tokens = [];
                foldLine.walk(function(placeholder, row, column, lastColumn) {
                        var walkTokens;
                        if (placeholder != null) {
                            walkTokens = this.$getDisplayTokens(
                                            placeholder, tokens.length);
                            walkTokens[0] = PLACEHOLDER_START;
                            for (var i = 1; i < walkTokens.length; i++) {
                                walkTokens[i] = PLACEHOLDER_BODY;
                            }
                        } else {
                            walkTokens = this.$getDisplayTokens(
                                lines[row].substring(lastColumn, column),
                                tokens.length);
                        }
                        tokens = tokens.concat(walkTokens);
                    }.bind(this),
                    foldLine.end.row,
                    lines[foldLine.end.row].length + 1
                );

                wrapData[foldLine.start.row]
                    = this.$computeWrapSplits(tokens, wrapLimit, tabSize);
                row = foldLine.end.row + 1;
            }
        }
    };

    // "Tokens"
    var CHAR = 1,
        CHAR_EXT = 2,
        PLACEHOLDER_START = 3,
        PLACEHOLDER_BODY =  4,
        PUNCTUATION = 9,
        SPACE = 10,
        TAB = 11,
        TAB_SPACE = 12;


    this.$computeWrapSplits = function(tokens, wrapLimit) {
        if (tokens.length == 0) {
            return [];
        }

        var splits = [];
        var displayLength = tokens.length;
        var lastSplit = 0, lastDocSplit = 0;

        var isCode = this.$wrapAsCode;

        function addSplit(screenPos) {
            var displayed = tokens.slice(lastSplit, screenPos);

            // The document size is the current size - the extra width for tabs
            // and multipleWidth characters.
            var len = displayed.length;
            displayed.join("").
                // Get all the TAB_SPACEs.
                replace(/12/g, function() {
                    len -= 1;
                }).
                // Get all the CHAR_EXT/multipleWidth characters.
                replace(/2/g, function() {
                    len -= 1;
                });

            lastDocSplit += len;
            splits.push(lastDocSplit);
            lastSplit = screenPos;
        }

        while (displayLength - lastSplit > wrapLimit) {
            // This is, where the split should be.
            var split = lastSplit + wrapLimit;

            // If there is a space or tab at this split position, then making
            // a split is simple.
            if (tokens[split - 1] >= SPACE && tokens[split] >= SPACE) {
                /* disabled see https://github.com/ajaxorg/ace/issues/1186
                // Include all following spaces + tabs in this split as well.
                while (tokens[split] >= SPACE) {
                    split ++;
                } */
                addSplit(split);
                continue;
            }

            // === ELSE ===
            // Check if split is inside of a placeholder. Placeholder are
            // not splitable. Therefore, seek the beginning of the placeholder
            // and try to place the split beofre the placeholder's start.
            if (tokens[split] == PLACEHOLDER_START || tokens[split] == PLACEHOLDER_BODY) {
                // Seek the start of the placeholder and do the split
                // before the placeholder. By definition there always
                // a PLACEHOLDER_START between split and lastSplit.
                for (split; split != lastSplit - 1; split--) {
                    if (tokens[split] == PLACEHOLDER_START) {
                        // split++; << No incremental here as we want to
                        //  have the position before the Placeholder.
                        break;
                    }
                }

                // If the PLACEHOLDER_START is not the index of the
                // last split, then we can do the split
                if (split > lastSplit) {
                    addSplit(split);
                    continue;
                }

                // If the PLACEHOLDER_START IS the index of the last
                // split, then we have to place the split after the
                // placeholder. So, let's seek for the end of the placeholder.
                split = lastSplit + wrapLimit;
                for (split; split < tokens.length; split++) {
                    if (tokens[split] != PLACEHOLDER_BODY) {
                        break;
                    }
                }

                // If spilt == tokens.length, then the placeholder is the last
                // thing in the line and adding a new split doesn't make sense.
                if (split == tokens.length) {
                    break;  // Breaks the while-loop.
                }

                // Finally, add the split...
                addSplit(split);
                continue;
            }

            // === ELSE ===
            // Search for the first non space/tab/placeholder/punctuation token backwards.
            var minSplit = Math.max(split - (isCode ? 10 : wrapLimit-(wrapLimit>>2)), lastSplit - 1);
            while (split > minSplit && tokens[split] < PLACEHOLDER_START) {
                split --;
            }
            if (isCode) {
                while (split > minSplit && tokens[split] < PLACEHOLDER_START) {
                    split --;
                }
                while (split > minSplit && tokens[split] == PUNCTUATION) {
                    split --;
                }
            } else {
                while (split > minSplit && tokens[split] < SPACE) {
                    split --;
                }
            }
            // If we found one, then add the split.
            if (split > minSplit) {
                addSplit(++split);
                continue;
            }

            // === ELSE ===
            split = lastSplit + wrapLimit;
            // The split is inside of a CHAR or CHAR_EXT token and no space
            // around -> force a split.
            addSplit(split);
        }
        return splits;
    };

    /**
    * Given a string, returns an array of the display characters, including tabs and spaces.
    * @param {String} str The string to check
    * @param {Number} offset The value to start at
    *
    *
    **/
    this.$getDisplayTokens = function(str, offset) {
        var arr = [];
        var tabSize;
        offset = offset || 0;

        for (var i = 0; i < str.length; i++) {
            var c = str.charCodeAt(i);
            // Tab
            if (c == 9) {
                tabSize = this.getScreenTabSize(arr.length + offset);
                arr.push(TAB);
                for (var n = 1; n < tabSize; n++) {
                    arr.push(TAB_SPACE);
                }
            }
            // Space
            else if (c == 32) {
                arr.push(SPACE);
            } else if((c > 39 && c < 48) || (c > 57 && c < 64)) {
                arr.push(PUNCTUATION);
            }
            // full width characters
            else if (c >= 0x1100 && isFullWidth(c)) {
                arr.push(CHAR, CHAR_EXT);
            } else {
                arr.push(CHAR);
            }
        }
        return arr;
    };

    /**
     * Calculates the width of the string `str` on the screen while assuming that the string starts at the first column on the screen.
    * @param {String} str The string to calculate the screen width of
    * @param {Number} maxScreenColumn
    * @param {Number} screenColumn
    * @returns {[Number]} Returns an `int[]` array with two elements:<br/>
    * The first position indicates the number of columns for `str` on screen.<br/>
    * The second value contains the position of the document column that this function read until.
    *
    *
    *
    *
    **/
    this.$getStringScreenWidth = function(str, maxScreenColumn, screenColumn) {
        if (maxScreenColumn == 0)
            return [0, 0];
        if (maxScreenColumn == null)
            maxScreenColumn = Infinity;
        screenColumn = screenColumn || 0;

        var c, column;
        for (column = 0; column < str.length; column++) {
            c = str.charCodeAt(column);
            // tab
            if (c == 9) {
                screenColumn += this.getScreenTabSize(screenColumn);
            }
            // full width characters
            else if (c >= 0x1100 && isFullWidth(c)) {
                screenColumn += 2;
            } else {
                screenColumn += 1;
            }
            if (screenColumn > maxScreenColumn) {
                break;
            }
        }

        return [screenColumn, column];
    };

    /**
    * Returns number of screenrows in a wrapped line.
    * @param {Number} row The row number to check
    *
    * @returns {Number}
    **/
    this.getRowLength = function(row) {
        if (!this.$useWrapMode || !this.$wrapData[row]) {
            return 1;
        } else {
            return this.$wrapData[row].length + 1;
        }
    };

    /**
     * Returns the position (on screen) for the last character in the provided screen row.
     * @param {Number} screenRow The screen row to check
     * @returns {Number}
     *
     * @related EditSession.documentToScreenColumn
    **/
    this.getScreenLastRowColumn = function(screenRow) {
        var pos = this.screenToDocumentPosition(screenRow, Number.MAX_VALUE);
        return this.documentToScreenColumn(pos.row, pos.column);
    };

    /**
    * For the given document row and column, this returns the column position of the last screen row.
    * @param {Number} docRow
    *
    * @param {Number} docColumn
    **/
    this.getDocumentLastRowColumn = function(docRow, docColumn) {
        var screenRow = this.documentToScreenRow(docRow, docColumn);
        return this.getScreenLastRowColumn(screenRow);
    };

    /**
    * For the given document row and column, this returns the document position of the last row.
    * @param {Number} docRow
    * @param {Number} docColumn
    *
    *
    **/
    this.getDocumentLastRowColumnPosition = function(docRow, docColumn) {
        var screenRow = this.documentToScreenRow(docRow, docColumn);
        return this.screenToDocumentPosition(screenRow, Number.MAX_VALUE / 10);
    };

    /**
    * For the given row, this returns the split data.
    * @returns {String}
    **/
    this.getRowSplitData = function(row) {
        if (!this.$useWrapMode) {
            return undefined;
        } else {
            return this.$wrapData[row];
        }
    };

    /**
    * The distance to the next tab stop at the specified screen column.
    * @param {Number} screenColumn The screen column to check
    *
    *
    * @returns {Number}
    **/
    this.getScreenTabSize = function(screenColumn) {
        return this.$tabSize - screenColumn % this.$tabSize;
    };


    this.screenToDocumentRow = function(screenRow, screenColumn) {
        return this.screenToDocumentPosition(screenRow, screenColumn).row;
    };


    this.screenToDocumentColumn = function(screenRow, screenColumn) {
        return this.screenToDocumentPosition(screenRow, screenColumn).column;
    };

    /**
    * Converts characters coordinates on the screen to characters coordinates within the document. [This takes into account code folding, word wrap, tab size, and any other visual modifications.]{: #conversionConsiderations}
    * @param {Number} screenRow The screen row to check
    * @param {Number} screenColumn The screen column to check
    * @returns {Object} The object returned has two properties: `row` and `column`.
    *
    *
    * @related EditSession.documentToScreenPosition
    *
    **/
    this.screenToDocumentPosition = function(screenRow, screenColumn) {
        if (screenRow < 0)
            return {row: 0, column: 0};

        var line;
        var docRow = 0;
        var docColumn = 0;
        var column;
        var row = 0;
        var rowLength = 0;

        var rowCache = this.$screenRowCache;
        var i = this.$getRowCacheIndex(rowCache, screenRow);
        var l = rowCache.length;
        if (l && i >= 0) {
            var row = rowCache[i];
            var docRow = this.$docRowCache[i];
            var doCache = screenRow > rowCache[l - 1];
        } else {
            var doCache = !l;
        }

        var maxRow = this.getLength() - 1;
        var foldLine = this.getNextFoldLine(docRow);
        var foldStart = foldLine ? foldLine.start.row : Infinity;

        while (row <= screenRow) {
            rowLength = this.getRowLength(docRow);
            if (row + rowLength - 1 >= screenRow || docRow >= maxRow) {
                break;
            } else {
                row += rowLength;
                docRow++;
                if (docRow > foldStart) {
                    docRow = foldLine.end.row+1;
                    foldLine = this.getNextFoldLine(docRow, foldLine);
                    foldStart = foldLine ? foldLine.start.row : Infinity;
                }
            }

            if (doCache) {
                this.$docRowCache.push(docRow);
                this.$screenRowCache.push(row);
            }
        }

        if (foldLine && foldLine.start.row <= docRow) {
            line = this.getFoldDisplayLine(foldLine);
            docRow = foldLine.start.row;
        } else if (row + rowLength <= screenRow || docRow > maxRow) {
            // clip at the end of the document
            return {
                row: maxRow,
                column: this.getLine(maxRow).length
            }
        } else {
            line = this.getLine(docRow);
            foldLine = null;
        }

        if (this.$useWrapMode) {
            var splits = this.$wrapData[docRow];
            if (splits) {
                column = splits[screenRow - row];
                if(screenRow > row && splits.length) {
                    docColumn = splits[screenRow - row - 1] || splits[splits.length - 1];
                    line = line.substring(docColumn);
                }
            }
        }

        docColumn += this.$getStringScreenWidth(line, screenColumn)[1];

        // We remove one character at the end so that the docColumn
        // position returned is not associated to the next row on the screen.
        if (this.$useWrapMode && docColumn >= column)
            docColumn = column - 1;

        if (foldLine)
            return foldLine.idxToPosition(docColumn);

        return {row: docRow, column: docColumn};
    };

    /**
    * Converts document coordinates to screen coordinates. {:conversionConsiderations}
    * @param {Number} docRow The document row to check
    * @param {Number} docColumn The document column to check
    * @returns {Object} The object returned by this method has two properties: `row` and `column`.
    *
    *
    * @related EditSession.screenToDocumentPosition
    *
    **/
    this.documentToScreenPosition = function(docRow, docColumn) {
        // Normalize the passed in arguments.
        if (typeof docColumn === "undefined")
            var pos = this.$clipPositionToDocument(docRow.row, docRow.column);
        else
            pos = this.$clipPositionToDocument(docRow, docColumn);

        docRow = pos.row;
        docColumn = pos.column;

        var screenRow = 0;
        var foldStartRow = null;
        var fold = null;

        // Clamp the docRow position in case it's inside of a folded block.
        fold = this.getFoldAt(docRow, docColumn, 1);
        if (fold) {
            docRow = fold.start.row;
            docColumn = fold.start.column;
        }

        var rowEnd, row = 0;


        var rowCache = this.$docRowCache;
        var i = this.$getRowCacheIndex(rowCache, docRow);
        var l = rowCache.length;
        if (l && i >= 0) {
            var row = rowCache[i];
            var screenRow = this.$screenRowCache[i];
            var doCache = docRow > rowCache[l - 1];
        } else {
            var doCache = !l;
        }

        var foldLine = this.getNextFoldLine(row);
        var foldStart = foldLine ?foldLine.start.row :Infinity;

        while (row < docRow) {
            if (row >= foldStart) {
                rowEnd = foldLine.end.row + 1;
                if (rowEnd > docRow)
                    break;
                foldLine = this.getNextFoldLine(rowEnd, foldLine);
                foldStart = foldLine ?foldLine.start.row :Infinity;
            }
            else {
                rowEnd = row + 1;
            }

            screenRow += this.getRowLength(row);
            row = rowEnd;

            if (doCache) {
                this.$docRowCache.push(row);
                this.$screenRowCache.push(screenRow);
            }
        }

        // Calculate the text line that is displayed in docRow on the screen.
        var textLine = "";
        // Check if the final row we want to reach is inside of a fold.
        if (foldLine && row >= foldStart) {
            textLine = this.getFoldDisplayLine(foldLine, docRow, docColumn);
            foldStartRow = foldLine.start.row;
        } else {
            textLine = this.getLine(docRow).substring(0, docColumn);
            foldStartRow = docRow;
        }
        // Clamp textLine if in wrapMode.
        if (this.$useWrapMode) {
            var wrapRow = this.$wrapData[foldStartRow];
            var screenRowOffset = 0;
            while (textLine.length >= wrapRow[screenRowOffset]) {
                screenRow ++;
                screenRowOffset++;
            }
            textLine = textLine.substring(
                wrapRow[screenRowOffset - 1] || 0, textLine.length
            );
        }

        return {
            row: screenRow,
            column: this.$getStringScreenWidth(textLine)[0]
        };
    };

    /**
    * For the given document row and column, returns the screen column.
    * @param {Number} row
    * @param {Number} docColumn
    * @returns {Number}
    *
    **/
    this.documentToScreenColumn = function(row, docColumn) {
        return this.documentToScreenPosition(row, docColumn).column;
    };

    /**
    * For the given document row and column, returns the screen row.
    * @param {Number} docRow
    * @param {Number} docColumn
    *
    *
    **/
    this.documentToScreenRow = function(docRow, docColumn) {
        return this.documentToScreenPosition(docRow, docColumn).row;
    };

    /**
    * Returns the length of the screen.
    * @returns {Number}
    **/
    this.getScreenLength = function() {
        var screenRows = 0;
        var fold = null;
        if (!this.$useWrapMode) {
            screenRows = this.getLength();

            // Remove the folded lines again.
            var foldData = this.$foldData;
            for (var i = 0; i < foldData.length; i++) {
                fold = foldData[i];
                screenRows -= fold.end.row - fold.start.row;
            }
        } else {
            var lastRow = this.$wrapData.length;
            var row = 0, i = 0;
            var fold = this.$foldData[i++];
            var foldStart = fold ? fold.start.row :Infinity;

            while (row < lastRow) {
                screenRows += this.$wrapData[row].length + 1;
                row ++;
                if (row > foldStart) {
                    row = fold.end.row+1;
                    fold = this.$foldData[i++];
                    foldStart = fold ?fold.start.row :Infinity;
                }
            }
        }

        return screenRows;
    };

    // For every keystroke this gets called once per char in the whole doc!!
    // Wouldn't hurt to make it a bit faster for c >= 0x1100

    /**
     * @private
     *
     */
    function isFullWidth(c) {
        if (c < 0x1100)
            return false;
        return c >= 0x1100 && c <= 0x115F ||
               c >= 0x11A3 && c <= 0x11A7 ||
               c >= 0x11FA && c <= 0x11FF ||
               c >= 0x2329 && c <= 0x232A ||
               c >= 0x2E80 && c <= 0x2E99 ||
               c >= 0x2E9B && c <= 0x2EF3 ||
               c >= 0x2F00 && c <= 0x2FD5 ||
               c >= 0x2FF0 && c <= 0x2FFB ||
               c >= 0x3000 && c <= 0x303E ||
               c >= 0x3041 && c <= 0x3096 ||
               c >= 0x3099 && c <= 0x30FF ||
               c >= 0x3105 && c <= 0x312D ||
               c >= 0x3131 && c <= 0x318E ||
               c >= 0x3190 && c <= 0x31BA ||
               c >= 0x31C0 && c <= 0x31E3 ||
               c >= 0x31F0 && c <= 0x321E ||
               c >= 0x3220 && c <= 0x3247 ||
               c >= 0x3250 && c <= 0x32FE ||
               c >= 0x3300 && c <= 0x4DBF ||
               c >= 0x4E00 && c <= 0xA48C ||
               c >= 0xA490 && c <= 0xA4C6 ||
               c >= 0xA960 && c <= 0xA97C ||
               c >= 0xAC00 && c <= 0xD7A3 ||
               c >= 0xD7B0 && c <= 0xD7C6 ||
               c >= 0xD7CB && c <= 0xD7FB ||
               c >= 0xF900 && c <= 0xFAFF ||
               c >= 0xFE10 && c <= 0xFE19 ||
               c >= 0xFE30 && c <= 0xFE52 ||
               c >= 0xFE54 && c <= 0xFE66 ||
               c >= 0xFE68 && c <= 0xFE6B ||
               c >= 0xFF01 && c <= 0xFF60 ||
               c >= 0xFFE0 && c <= 0xFFE6;
    };

}).call(EditSession.prototype);

require("./edit_session/folding").Folding.call(EditSession.prototype);
require("./edit_session/bracket_match").BracketMatch.call(EditSession.prototype);


config.defineOptions(EditSession.prototype, "session", {
    wrap: {
        set: function(value) {
            if (!value || value == "off")
                value = false;
            else if (value == "free")
                value = true;
            else if (value == "printMargin")
                value = -1;
            else if (typeof value == "string")
                value = parseInt(value, 10) || false;

            if (this.$wrap == value)
                return;
            if (!value) {
                this.setUseWrapMode(false);
            } else {
                var col = typeof value == "number" ? value : null;
                this.setWrapLimitRange(col, col);
                this.setUseWrapMode(true);
            }
            this.$wrap = value;
        },
        get: function() {
            return this.getUseWrapMode() ? this.getWrapLimitRange().min || "free" : "off";
        },
        handlesSet: true
    },    
    wrapMethod: {
        // code|text|auto
        set: function(val) {
            if (val == "auto")
                this.$wrapAsCode = this.$mode.type != "text";
            else
                this.$wrapAsCode = val != "text";
        },
        initialValue: "auto"
    },
    firstLineNumber: {
        set: function() {this._emit("changeBreakpoint");},
        initialValue: 1
    },
    useWorker: {
        set: function(useWorker) {
            this.$useWorker = useWorker;

            this.$stopWorker();
            if (useWorker)
                this.$startWorker();
        },
        initialValue: true
    },
    useSoftTabs: {initialValue: true},
    tabSize: {
        set: function(tabSize) {
            if (isNaN(tabSize) || this.$tabSize === tabSize) return;

            this.$modified = true;
            this.$rowLengthCache = [];
            this.$tabSize = tabSize;
            this._emit("changeTabSize");
        },
        initialValue: 4,
        handlesSet: true
    },
    overwrite: {
        set: function(val) {this._emit("changeOverwrite");},
        initialValue: false
    },
    newLineMode: {
        set: function(val) {this.doc.setNewLineMode(val)},
        get: function() {return this.doc.getNewLineMode()},
        handlesSet: true
    }
});

exports.EditSession = EditSession;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/search',['require','exports','module','./lib/lang','./lib/oop','./range'],function(require, exports, module) {


var lang = require("./lib/lang");
var oop = require("./lib/oop");
var Range = require("./range").Range;

/**
 * @class Search
 *
 * A class designed to handle all sorts of text searches within a [[Document `Document`]].
 *
 **/

/**
 * 
 *
 * Creates a new `Search` object. The following search options are avaliable:
 *
 * - `needle`: The string or regular expression you're looking for
 * - `backwards`: Whether to search backwards from where cursor currently is. Defaults to `false`.
 * - `wrap`: Whether to wrap the search back to the beginning when it hits the end. Defaults to `false`.
 * - `caseSensitive`: Whether the search ought to be case-sensitive. Defaults to `false`.
 * - `wholeWord`: Whether the search matches only on whole words. Defaults to `false`.
 * - `range`: The [[Range]] to search within. Set this to `null` for the whole document
 * - `regExp`: Whether the search is a regular expression or not. Defaults to `false`.
 * - `start`: The starting [[Range]] or cursor position to begin the search
 * - `skipCurrent`: Whether or not to include the current line in the search. Default to `false`.
 * 
 * @constructor
 **/

var Search = function() {
    this.$options = {};
};

(function() {
    /**
     * Sets the search options via the `options` parameter.
     * @param {Object} options An object containing all the new search properties
     *
     * 
     * @returns {Search}
     * @chainable
    **/
    this.set = function(options) {
        oop.mixin(this.$options, options);
        return this;
    };

    /**
     * [Returns an object containing all the search options.]{: #Search.getOptions}
     * @returns {Object}
    **/
    this.getOptions = function() {
        return lang.copyObject(this.$options);
    };
    
    /**
     * Sets the search options via the `options` parameter.
     * @param {Object} An object containing all the search propertie
     * @related Search.set
    **/
    this.setOptions = function(options) {
        this.$options = options;
    };
    /**
     * Searches for `options.needle`. If found, this method returns the [[Range `Range`]] where the text first occurs. If `options.backwards` is `true`, the search goes backwards in the session.
     * @param {EditSession} session The session to search with
     *
     * 
     * @returns {Range}
    **/
    this.find = function(session) {
        var iterator = this.$matchIterator(session, this.$options);

        if (!iterator)
            return false;

        var firstRange = null;
        iterator.forEach(function(range, row, offset) {
            if (!range.start) {
                var column = range.offset + (offset || 0);
                firstRange = new Range(row, column, row, column+range.length);
            } else
                firstRange = range;
            return true;
        });

        return firstRange;
    };

    /**
     * Searches for all occurances `options.needle`. If found, this method returns an array of [[Range `Range`s]] where the text first occurs. If `options.backwards` is `true`, the search goes backwards in the session.
     * @param {EditSession} session The session to search with
     *
     * 
     * @returns {[Range]}
    **/
    this.findAll = function(session) {
        var options = this.$options;
        if (!options.needle)
            return [];
        this.$assembleRegExp(options);

        var range = options.range;
        var lines = range
            ? session.getLines(range.start.row, range.end.row)
            : session.doc.getAllLines();

        var ranges = [];
        var re = options.re;
        if (options.$isMultiLine) {
            var len = re.length;
            var maxRow = lines.length - len;
            for (var row = re.offset || 0; row <= maxRow; row++) {
                for (var j = 0; j < len; j++)
                    if (lines[row + j].search(re[j]) == -1)
                        break;
                
                var startLine = lines[row];
                var line = lines[row + len - 1];
                var startIndex = startLine.match(re[0])[0].length;
                var endIndex = line.match(re[len - 1])[0].length;

                ranges.push(new Range(
                    row, startLine.length - startIndex,
                    row + len - 1, endIndex
                ));
            }
        } else {
            for (var i = 0; i < lines.length; i++) {
                var matches = lang.getMatchOffsets(lines[i], re);
                for (var j = 0; j < matches.length; j++) {
                    var match = matches[j];
                    ranges.push(new Range(i, match.offset, i, match.offset + match.length));
                }
            }
        }

        if (range) {
            var startColumn = range.start.column;
            var endColumn = range.start.column;
            var i = 0, j = ranges.length - 1;
            while (i < j && ranges[i].start.column < startColumn && ranges[i].start.row == range.start.row)
                i++;

            while (i < j && ranges[j].end.column > endColumn && ranges[j].end.row == range.end.row)
                j--;
            
            ranges = ranges.slice(i, j + 1);
            for (i = 0, j = ranges.length; i < j; i++) {
                ranges[i].start.row += range.start.row;
                ranges[i].end.row += range.start.row;
            }
        }

        return ranges;
    };

    /**
     * Searches for `options.needle` in `input`, and, if found, replaces it with `replacement`.
     * @param {String} input The text to search in
     * @param {String} replacement The replacing text
     * + (String): If `options.regExp` is `true`, this function returns `input` with the replacement already made. Otherwise, this function just returns `replacement`.<br/>
     * If `options.needle` was not found, this function returns `null`.
     *
     * 
     * @returns {String}
    **/
    this.replace = function(input, replacement) {
        var options = this.$options;

        var re = this.$assembleRegExp(options);
        if (options.$isMultiLine)
            return replacement;

        if (!re)
            return;

        var match = re.exec(input);
        if (!match || match[0].length != input.length)
            return null;
        
        replacement = input.replace(re, replacement);
        if (options.preserveCase) {
            replacement = replacement.split("");
            for (var i = Math.min(input.length, input.length); i--; ) {
                var ch = input[i];
                if (ch && ch.toLowerCase() != ch)
                    replacement[i] = replacement[i].toUpperCase();
                else
                    replacement[i] = replacement[i].toLowerCase();
            }
            replacement = replacement.join("");
        }
        
        return replacement;
    };

    this.$matchIterator = function(session, options) {
        var re = this.$assembleRegExp(options);
        if (!re)
            return false;

        var self = this, callback, backwards = options.backwards;

        if (options.$isMultiLine) {
            var len = re.length;
            var matchIterator = function(line, row, offset) {
                var startIndex = line.search(re[0]);
                if (startIndex == -1)
                    return;
                for (var i = 1; i < len; i++) {
                    line = session.getLine(row + i);
                    if (line.search(re[i]) == -1)
                        return;
                }

                var endIndex = line.match(re[len - 1])[0].length;

                var range = new Range(row, startIndex, row + len - 1, endIndex);
                if (re.offset == 1) {
                    range.start.row--;
                    range.start.column = Number.MAX_VALUE;
                } else if (offset)
                    range.start.column += offset;

                if (callback(range))
                    return true;
            };
        } else if (backwards) {
            var matchIterator = function(line, row, startIndex) {
                var matches = lang.getMatchOffsets(line, re);
                for (var i = matches.length-1; i >= 0; i--)
                    if (callback(matches[i], row, startIndex))
                        return true;
            };
        } else {
            var matchIterator = function(line, row, startIndex) {
                var matches = lang.getMatchOffsets(line, re);
                for (var i = 0; i < matches.length; i++)
                    if (callback(matches[i], row, startIndex))
                        return true;
            };
        }

        return {
            forEach: function(_callback) {
                callback = _callback;
                self.$lineIterator(session, options).forEach(matchIterator);
            }
        };
    };

    this.$assembleRegExp = function(options, $disableFakeMultiline) {
        if (options.needle instanceof RegExp)
            return options.re = options.needle;

        var needle = options.needle;

        if (!options.needle)
            return options.re = false;

        if (!options.regExp)
            needle = lang.escapeRegExp(needle);

        if (options.wholeWord)
            needle = "\\b" + needle + "\\b";

        var modifier = options.caseSensitive ? "g" : "gi";

        options.$isMultiLine = !$disableFakeMultiline && /[\n\r]/.test(needle);
        if (options.$isMultiLine)
            return options.re = this.$assembleMultilineRegExp(needle, modifier);

        try {
            var re = new RegExp(needle, modifier);
        } catch(e) {
            re = false;
        }
        return options.re = re;
    };

    this.$assembleMultilineRegExp = function(needle, modifier) {
        var parts = needle.replace(/\r\n|\r|\n/g, "$\n^").split("\n");
        var re = [];
        for (var i = 0; i < parts.length; i++) try {
            re.push(new RegExp(parts[i], modifier));
        } catch(e) {
            return false;
        }
        if (parts[0] == "") {
            re.shift();
            re.offset = 1;
        } else {
            re.offset = 0;
        }
        return re;
    };

    this.$lineIterator = function(session, options) {
        var backwards = options.backwards == true;
        var skipCurrent = options.skipCurrent != false;

        var range = options.range;
        var start = options.start;
        if (!start)
            start = range ? range[backwards ? "end" : "start"] : session.selection.getRange();
         
        if (start.start)
            start = start[skipCurrent != backwards ? "end" : "start"];

        var firstRow = range ? range.start.row : 0;
        var lastRow = range ? range.end.row : session.getLength() - 1;

        var forEach = backwards ? function(callback) {
                var row = start.row;

                var line = session.getLine(row).substring(0, start.column);
                if (callback(line, row))
                    return;

                for (row--; row >= firstRow; row--)
                    if (callback(session.getLine(row), row))
                        return;

                if (options.wrap == false)
                    return;

                for (row = lastRow, firstRow = start.row; row >= firstRow; row--)
                    if (callback(session.getLine(row), row))
                        return;
            } : function(callback) {
                var row = start.row;

                var line = session.getLine(row).substr(start.column);
                if (callback(line, row, start.column))
                    return;

                for (row = row+1; row <= lastRow; row++)
                    if (callback(session.getLine(row), row))
                        return;

                if (options.wrap == false)
                    return;

                for (row = firstRow, lastRow = start.row; row <= lastRow; row++)
                    if (callback(session.getLine(row), row))
                        return;
            };
        
        return {forEach: forEach};
    };

}).call(Search.prototype);

exports.Search = Search;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/keyboard/hash_handler',['require','exports','module','../lib/keys','../lib/useragent'],function(require, exports, module) {


var keyUtil = require("../lib/keys");
var useragent = require("../lib/useragent");

function HashHandler(config, platform) {
    this.platform = platform || (useragent.isMac ? "mac" : "win");
    this.commands = {};
    this.commmandKeyBinding = {};

    this.addCommands(config);
};

(function() {

    this.addCommand = function(command) {
        if (this.commands[command.name])
            this.removeCommand(command);

        this.commands[command.name] = command;

        if (command.bindKey)
            this._buildKeyHash(command);
    };

    this.removeCommand = function(command) {
        var name = (typeof command === 'string' ? command : command.name);
        command = this.commands[name];
        delete this.commands[name];

        // exhaustive search is brute force but since removeCommand is
        // not a performance critical operation this should be OK
        var ckb = this.commmandKeyBinding;
        for (var hashId in ckb) {
            for (var key in ckb[hashId]) {
                if (ckb[hashId][key] == command)
                    delete ckb[hashId][key];
            }
        }
    };

    this.bindKey = function(key, command) {
        if(!key)
            return;
        if (typeof command == "function") {
            this.addCommand({exec: command, bindKey: key, name: command.name || key});
            return;
        }

        var ckb = this.commmandKeyBinding;
        key.split("|").forEach(function(keyPart) {
            var binding = this.parseKeys(keyPart, command);
            var hashId = binding.hashId;
            (ckb[hashId] || (ckb[hashId] = {}))[binding.key] = command;
        }, this);
    };

    this.addCommands = function(commands) {
        commands && Object.keys(commands).forEach(function(name) {
            var command = commands[name];
            if (!command)
                return;
            
            if (typeof command === "string")
                return this.bindKey(command, name);

            if (typeof command === "function")
                command = { exec: command };

            if (!command.name)
                command.name = name;

            this.addCommand(command);
        }, this);
    };

    this.removeCommands = function(commands) {
        Object.keys(commands).forEach(function(name) {
            this.removeCommand(commands[name]);
        }, this);
    };

    this.bindKeys = function(keyList) {
        Object.keys(keyList).forEach(function(key) {
            this.bindKey(key, keyList[key]);
        }, this);
    };

    this._buildKeyHash = function(command) {
        var binding = command.bindKey;
        if (!binding)
            return;

        var key = typeof binding == "string" ? binding: binding[this.platform];
        this.bindKey(key, command);
    };

    // accepts keys in the form ctrl+Enter or ctrl-Enter
    // keys without modifiers or shift only 
    this.parseKeys = function(keys) {
        // todo support keychains 
        if (keys.indexOf(" ") != -1)
            keys = keys.split(/\s+/).pop();

        var parts = keys.toLowerCase().split(/[\-\+]([\-\+])?/).filter(function(x){return x});
        var key = parts.pop();

        var keyCode = keyUtil[key];
        if (keyUtil.FUNCTION_KEYS[keyCode])
            key = keyUtil.FUNCTION_KEYS[keyCode].toLowerCase();
        else if (!parts.length)
            return {key: key, hashId: -1};
        else if (parts.length == 1 && parts[0] == "shift")
            return {key: key.toUpperCase(), hashId: -1};

        var hashId = 0;
        for (var i = parts.length; i--;) {
            var modifier = keyUtil.KEY_MODS[parts[i]];
            if (modifier == null) {
                if (typeof console != "undefined")
                console.error("invalid modifier " + parts[i] + " in " + keys);
                return false;
            }
            hashId |= modifier;
        }
        return {key: key, hashId: hashId};
    };

    this.findKeyCommand = function findKeyCommand(hashId, keyString) {
        var ckbr = this.commmandKeyBinding;
        return ckbr[hashId] && ckbr[hashId][keyString];
    };

    this.handleKeyboard = function(data, hashId, keyString, keyCode) {
        return {
            command: this.findKeyCommand(hashId, keyString)
        };
    };

}).call(HashHandler.prototype)

exports.HashHandler = HashHandler;
});

define('ace/commands/command_manager',['require','exports','module','../lib/oop','../keyboard/hash_handler','../lib/event_emitter'],function(require, exports, module) {


var oop = require("../lib/oop");
var HashHandler = require("../keyboard/hash_handler").HashHandler;
var EventEmitter = require("../lib/event_emitter").EventEmitter;

/**
 * @class CommandManager
 *
 *
 **/

/**
 * new CommandManager(platform, commands)
 * @param {String} platform Identifier for the platform; must be either `'mac'` or `'win'`
 * @param {Array} commands A list of commands
 *
 **/

var CommandManager = function(platform, commands) {
    this.platform = platform;
    this.commands = this.byName = {};
    this.commmandKeyBinding = {};

    this.addCommands(commands);

    this.setDefaultHandler("exec", function(e) {
        return e.command.exec(e.editor, e.args || {});
    });
};

oop.inherits(CommandManager, HashHandler);

(function() {

    oop.implement(this, EventEmitter);

    this.exec = function(command, editor, args) {
        if (typeof command === 'string')
            command = this.commands[command];

        if (!command)
            return false;

        if (editor && editor.$readOnly && !command.readOnly)
            return false;

        var e = {editor: editor, command: command, args: args};
        var retvalue = this._emit("exec", e);
        this._signal("afterExec", e);

        return retvalue === false ? false : true;
    };

    this.toggleRecording = function(editor) {
        if (this.$inReplay)
            return;

        editor && editor._emit("changeStatus");
        if (this.recording) {
            this.macro.pop();
            this.removeEventListener("exec", this.$addCommandToMacro);

            if (!this.macro.length)
                this.macro = this.oldMacro;

            return this.recording = false;
        }
        if (!this.$addCommandToMacro) {
            this.$addCommandToMacro = function(e) {
                this.macro.push([e.command, e.args]);
            }.bind(this);
        }

        this.oldMacro = this.macro;
        this.macro = [];
        this.on("exec", this.$addCommandToMacro);
        return this.recording = true;
    };

    this.replay = function(editor) {
        if (this.$inReplay || !this.macro)
            return;

        if (this.recording)
            return this.toggleRecording(editor);

        try {
            this.$inReplay = true;
            this.macro.forEach(function(x) {
                if (typeof x == "string")
                    this.exec(x, editor);
                else
                    this.exec(x[0], editor, x[1]);
            }, this);
        } finally {
            this.$inReplay = false;
        }
    };

    this.trimMacro = function(m) {
        return m.map(function(x){
            if (typeof x[0] != "string")
                x[0] = x[0].name;
            if (!x[1])
                x = x[0];
            return x;
        });
    };

}).call(CommandManager.prototype);

exports.CommandManager = CommandManager;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/commands/default_commands',['require','exports','module','ace/lib/lang','ace/config'],function(require, exports, module) {


var lang = require("ace/lib/lang");
var config = require("ace/config");

function bindKey(win, mac) {
    return {
        win: win,
        mac: mac
    };
}

exports.commands = [{
    name: "overwrite",
    bindKey: "Insert",
    exec: function(editor) { editor.toggleOverwrite(); },
    readOnly: true
}, {
    name: "selecttostart",
    bindKey: bindKey("Ctrl-Shift-Home", "Command-Shift-Up"),
    exec: function(editor) { editor.getSelection().selectFileStart(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "gotostart",
    bindKey: bindKey("Ctrl-Home", "Command-Home|Command-Up"),
    exec: function(editor) { editor.navigateFileStart(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selectup",
    bindKey: bindKey("Shift-Up", "Shift-Up"),
    exec: function(editor) { editor.getSelection().selectUp(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "golineup",
    bindKey: bindKey("Up", "Up"),
    exec: function(editor, args) { editor.navigateUp(args.times); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selecttoend",
    bindKey: bindKey("Ctrl-Shift-End", "Command-Shift-Down"),
    exec: function(editor) { editor.getSelection().selectFileEnd(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "gotoend",
    bindKey: bindKey("Ctrl-End", "Command-End|Command-Down"),
    exec: function(editor) { editor.navigateFileEnd(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selectdown",
    bindKey: bindKey("Shift-Down", "Shift-Down"),
    exec: function(editor) { editor.getSelection().selectDown(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "golinedown",
    bindKey: bindKey("Down", "Down"),
    exec: function(editor, args) { editor.navigateDown(args.times); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selectwordleft",
    bindKey: bindKey("Ctrl-Shift-Left", "Option-Shift-Left"),
    exec: function(editor) { editor.getSelection().selectWordLeft(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "gotowordleft",
    bindKey: bindKey("Ctrl-Left", "Option-Left"),
    exec: function(editor) { editor.navigateWordLeft(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selecttolinestart",
    bindKey: bindKey("Alt-Shift-Left", "Command-Shift-Left"),
    exec: function(editor) { editor.getSelection().selectLineStart(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "gotolinestart",
    bindKey: bindKey("Alt-Left|Home", "Command-Left|Home"),
    exec: function(editor) { editor.navigateLineStart(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selectleft",
    bindKey: bindKey("Shift-Left", "Shift-Left"),
    exec: function(editor) { editor.getSelection().selectLeft(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "gotoleft",
    bindKey: bindKey("Left", "Left"),
    exec: function(editor, args) { editor.navigateLeft(args.times); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selectwordright",
    bindKey: bindKey("Ctrl-Shift-Right", "Option-Shift-Right"),
    exec: function(editor) { editor.getSelection().selectWordRight(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "gotowordright",
    bindKey: bindKey("Ctrl-Right", "Option-Right"),
    exec: function(editor) { editor.navigateWordRight(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selecttolineend",
    bindKey: bindKey("Alt-Shift-Right", "Command-Shift-Right"),
    exec: function(editor) { editor.getSelection().selectLineEnd(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "gotolineend",
    bindKey: bindKey("Alt-Right|End", "Command-Right|End"),
    exec: function(editor) { editor.navigateLineEnd(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selectright",
    bindKey: bindKey("Shift-Right", "Shift-Right"),
    exec: function(editor) { editor.getSelection().selectRight(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "gotoright",
    bindKey: bindKey("Right", "Right"),
    exec: function(editor, args) { editor.navigateRight(args.times); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selectpagedown",
    bindKey: "Shift-PageDown",
    exec: function(editor) { editor.selectPageDown(); },
    readOnly: true
}, {
    name: "pagedown",
    bindKey: bindKey(null, "Option-PageDown"),
    exec: function(editor) { editor.scrollPageDown(); },
    readOnly: true
}, {
    name: "gotopagedown",
    bindKey: bindKey("PageDown", "PageDown"),
    exec: function(editor) { editor.gotoPageDown(); },
    readOnly: true
}, {
    name: "selectpageup",
    bindKey: "Shift-PageUp",
    exec: function(editor) { editor.selectPageUp(); },
    readOnly: true
}, {
    name: "pageup",
    bindKey: bindKey(null, "Option-PageUp"),
    exec: function(editor) { editor.scrollPageUp(); },
    readOnly: true
}, {
    name: "gotopageup",
    bindKey: "PageUp",
    exec: function(editor) { editor.gotoPageUp(); },
    readOnly: true
}, {
    name: "scrollup",
    bindKey: bindKey("Ctrl-Up", null),
    exec: function(e) { e.renderer.scrollBy(0, -2 * e.renderer.layerConfig.lineHeight); },
    readOnly: true
}, {
    name: "scrolldown",
    bindKey: bindKey("Ctrl-Down", null),
    exec: function(e) { e.renderer.scrollBy(0, 2 * e.renderer.layerConfig.lineHeight); },
    readOnly: true
}, {
    name: "selectlinestart",
    bindKey: "Shift-Home",
    exec: function(editor) { editor.getSelection().selectLineStart(); },
    multiSelectAction: "forEach",
    readOnly: true
}, {
    name: "selectlineend",
    bindKey: "Shift-End",
    exec: function(editor) { editor.getSelection().selectLineEnd(); },
    multiSelectAction: "forEach",
    readOnly: true
}, 

// commands disabled in readOnly mode
{
    name: "cut",
    exec: function(editor) {
        var range = editor.getSelectionRange();
        editor._emit("cut", range);

        if (!editor.selection.isEmpty()) {
            editor.session.remove(range);
            editor.clearSelection();
        }
    },
    multiSelectAction: "forEach"
}, {
    name: "undo",
    bindKey: bindKey("Ctrl-Z", "Command-Z"),
    exec: function(editor) { editor.undo(); }
}, {
    name: "redo",
    bindKey: bindKey("Ctrl-Shift-Z|Ctrl-Y", "Command-Shift-Z|Command-Y"),
    exec: function(editor) { editor.redo(); }
}, {
    name: "del",
    bindKey: bindKey("Delete", "Delete|Ctrl-D"),
    exec: function(editor) { editor.remove("right"); },
    multiSelectAction: "forEach"
}, {
    name: "backspace",
    bindKey: bindKey(
        "Command-Backspace|Option-Backspace|Shift-Backspace|Backspace",
        "Ctrl-Backspace|Command-Backspace|Shift-Backspace|Backspace|Ctrl-H"
    ),
    exec: function(editor) { editor.remove("left"); },
    multiSelectAction: "forEach"
}, {
    name: "removetolinestart",
    bindKey: bindKey("Alt-Backspace", "Command-Backspace"),
    exec: function(editor) { editor.removeToLineStart(); },
    multiSelectAction: "forEach"
}, {
    name: "removetolineend",
    bindKey: bindKey("Alt-Delete", "Ctrl-K"),
    exec: function(editor) { editor.removeToLineEnd(); },
    multiSelectAction: "forEach"
}, {
    name: "removewordleft",
    bindKey: bindKey("Ctrl-Backspace", "Alt-Backspace|Ctrl-Alt-Backspace"),
    exec: function(editor) { editor.removeWordLeft(); },
    multiSelectAction: "forEach"
}, {
    name: "removewordright",
    bindKey: bindKey("Ctrl-Delete", "Alt-Delete"),
    exec: function(editor) { editor.removeWordRight(); },
    multiSelectAction: "forEach"
}, {
    name: "outdent",
    bindKey: bindKey("Shift-Tab", "Shift-Tab"),
    exec: function(editor) { editor.blockOutdent(); },
    multiSelectAction: "forEach"
}, {
    name: "indent",
    bindKey: bindKey("Tab", "Tab"),
    exec: function(editor) { editor.indent(); },
    multiSelectAction: "forEach"
}, {
    name: "insertstring",
    exec: function(editor, str) { editor.insert(str); },
    multiSelectAction: "forEach"
}, {
    name: "inserttext",
    exec: function(editor, args) {
        editor.insert(lang.stringRepeat(args.text  || "", args.times || 1));
    },
    multiSelectAction: "forEach"
}];

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/editor',['require','exports','module','./lib/fixoldbrowsers','./lib/oop','./lib/dom','./lib/lang','./lib/useragent','./keyboard/textinput','./mouse/mouse_handler','./mouse/fold_handler','./keyboard/keybinding','./edit_session','./search','./range','./lib/event_emitter','./commands/command_manager','./commands/default_commands','./config'],function(require, exports, module) {


require("./lib/fixoldbrowsers");

var oop = require("./lib/oop");
var dom = require("./lib/dom");
var lang = require("./lib/lang");
var useragent = require("./lib/useragent");
var TextInput = require("./keyboard/textinput").TextInput;
var MouseHandler = require("./mouse/mouse_handler").MouseHandler;
var FoldHandler = require("./mouse/fold_handler").FoldHandler;
var KeyBinding = require("./keyboard/keybinding").KeyBinding;
var EditSession = require("./edit_session").EditSession;
var Search = require("./search").Search;
var Range = require("./range").Range;
var EventEmitter = require("./lib/event_emitter").EventEmitter;
var CommandManager = require("./commands/command_manager").CommandManager;
var defaultCommands = require("./commands/default_commands").commands;
var config = require("./config");

/**
 * The main entry point into the Ace functionality.
 *
 * The `Editor` manages the [[EditSession]] (which manages [[Document]]s), as well as the [[VirtualRenderer]], which draws everything to the screen.
 *
 * Event sessions dealing with the mouse and keyboard are bubbled up from `Document` to the `Editor`, which decides what to do with them.
 * @class Editor
 **/

/**
 * Creates a new `Editor` object.
 *
 * @param {VirtualRenderer} renderer Associated `VirtualRenderer` that draws everything
 * @param {EditSession} session The `EditSession` to refer to
 *
 *
 * @constructor
 **/
var Editor = function(renderer, session) {
    var container = renderer.getContainerElement();
    this.container = container;
    this.renderer = renderer;

    this.commands = new CommandManager(useragent.isMac ? "mac" : "win", defaultCommands);
    this.textInput  = new TextInput(renderer.getTextAreaContainer(), this);
    this.renderer.textarea = this.textInput.getElement();
    this.keyBinding = new KeyBinding(this);

    // TODO detect touch event support
    this.$mouseHandler = new MouseHandler(this);
    new FoldHandler(this);

    this.$blockScrolling = 0;
    this.$search = new Search().set({
        wrap: true
    });

    this.$historyTracker = this.$historyTracker.bind(this);
    this.commands.on("exec", this.$historyTracker);

    this.$initOperationListeners();
    
    this._$emitInputEvent = lang.delayedCall(function() {
        this._signal("input", {});
        this.session.bgTokenizer && this.session.bgTokenizer.scheduleStart();
    }.bind(this));
    
    this.on("change", function(_, _self) {
        _self._$emitInputEvent.schedule(31);
    });

    this.setSession(session || new EditSession(""));
    config.resetOptions(this);
    config._emit("editor", this);
};

(function(){

    oop.implement(this, EventEmitter);

    this.$initOperationListeners = function() {
        function last(a) {return a[a.length - 1]};

        this.selections = [];
        this.commands.on("exec", function(e) {
            this.startOperation(e);

            var command = e.command;
            if (command.group == "fileJump") {
                var prev = this.prevOp;
                if (!prev || prev.command.group != "fileJump") {
                    this.lastFileJumpPos = last(this.selections)
                }
            } else {
                this.lastFileJumpPos = null;
            }
        }.bind(this), true);

        this.commands.on("afterExec", function(e) {
            var command = e.command;

            if (command.group == "fileJump") {
                if (this.lastFileJumpPos && !this.curOp.selectionChanged) {
                    this.selection.fromJSON(this.lastFileJumpPos);
                    return
                }
            }
            this.endOperation(e);
        }.bind(this), true);

        this.$opResetTimer = lang.delayedCall(this.endOperation.bind(this));

        this.on("change", function() {
            this.curOp || this.startOperation();
            this.curOp.docChanged = true;
        }.bind(this), true);

        this.on("changeSelection", function() {
            this.curOp || this.startOperation();
            this.curOp.selectionChanged = true;
        }.bind(this), true);
    }

    this.curOp = null;
    this.prevOp = {};
    this.startOperation = function(commadEvent) {
        if (this.curOp) {
            if (!commadEvent || this.curOp.command)
                return;
            this.prevOp = this.curOp;
        }
        if (!commadEvent) {
            this.previousCommand = null;
            commadEvent = {};
        }

        this.$opResetTimer.schedule();
        this.curOp = {
            command: commadEvent.command || {},
            args: commadEvent.args
        };

        this.selections.push(this.selection.toJSON());
    };

    this.endOperation = function() {
        if (this.curOp) {
            this.prevOp = this.curOp;
            this.curOp = null;
        }
    };

    this.$historyTracker = function(e) {
        if (!this.$mergeUndoDeltas)
            return;


        var prev = this.prevOp;
        var mergeableCommands = ["backspace", "del", "insertstring"];
        // previous command was the same
        var shouldMerge = prev.command && (e.command.name == prev.command.name);
        if (e.command.name == "insertstring") {
            var text = e.args;
            if (this.mergeNextCommand === undefined)
                this.mergeNextCommand = true;

            shouldMerge = shouldMerge
                && this.mergeNextCommand // previous command allows to coalesce with
                && (!/\s/.test(text) || /\s/.test(prev.args)) // previous insertion was of same type

            this.mergeNextCommand = true;
        } else {
            shouldMerge = shouldMerge
                && mergeableCommands.indexOf(e.command.name) !== -1// the command is mergeable
        }

        if (
            this.$mergeUndoDeltas != "always"
            && Date.now() - this.sequenceStartTime > 2000
        ) {
            shouldMerge = false; // the sequence is too long
        }

        if (shouldMerge)
            this.session.mergeUndoDeltas = true;
        else if (mergeableCommands.indexOf(e.command.name) !== -1)
            this.sequenceStartTime = Date.now();
    };

    /**
     * Sets a new key handler, such as "vim" or "windows".
     * @param {String} keyboardHandler The new key handler
     *
     *
     **/
    this.setKeyboardHandler = function(keyboardHandler) {
        if (!keyboardHandler) {
            this.keyBinding.setKeyboardHandler(null);
        } else if (typeof keyboardHandler == "string") {
            this.$keybindingId = keyboardHandler;
            var _self = this;
            config.loadModule(["keybinding", keyboardHandler], function(module) {
                if (_self.$keybindingId == keyboardHandler)
                    _self.keyBinding.setKeyboardHandler(module && module.handler);
            });
        } else {
            this.$keybindingId = null;
            this.keyBinding.setKeyboardHandler(keyboardHandler);
        }
    };

    /**
     * Returns the keyboard handler, such as "vim" or "windows".
     *
     * @returns {String}
     *
     **/
    this.getKeyboardHandler = function() {
        return this.keyBinding.getKeyboardHandler();
    };


    /**
     * Emitted whenever the [[EditSession]] changes.
     * @event changeSession
     * @param {Object} e An object with two properties, `oldSession` and `session`, that represent the old and new [[EditSession]]s.
     *
     *
     **/
    /**
     * Sets a new editsession to use. This method also emits the `'changeSession'` event.
     * @param {EditSession} session The new session to use
     *
     *
     **/
    this.setSession = function(session) {
        if (this.session == session)
            return;

        if (this.session) {
            var oldSession = this.session;
            this.session.removeEventListener("change", this.$onDocumentChange);
            this.session.removeEventListener("changeMode", this.$onChangeMode);
            this.session.removeEventListener("tokenizerUpdate", this.$onTokenizerUpdate);
            this.session.removeEventListener("changeTabSize", this.$onChangeTabSize);
            this.session.removeEventListener("changeWrapLimit", this.$onChangeWrapLimit);
            this.session.removeEventListener("changeWrapMode", this.$onChangeWrapMode);
            this.session.removeEventListener("onChangeFold", this.$onChangeFold);
            this.session.removeEventListener("changeFrontMarker", this.$onChangeFrontMarker);
            this.session.removeEventListener("changeBackMarker", this.$onChangeBackMarker);
            this.session.removeEventListener("changeBreakpoint", this.$onChangeBreakpoint);
            this.session.removeEventListener("changeAnnotation", this.$onChangeAnnotation);
            this.session.removeEventListener("changeOverwrite", this.$onCursorChange);
            this.session.removeEventListener("changeScrollTop", this.$onScrollTopChange);
            this.session.removeEventListener("changeScrollLeft", this.$onScrollLeftChange);

            var selection = this.session.getSelection();
            selection.removeEventListener("changeCursor", this.$onCursorChange);
            selection.removeEventListener("changeSelection", this.$onSelectionChange);
        }

        this.session = session;

        this.$onDocumentChange = this.onDocumentChange.bind(this);
        session.addEventListener("change", this.$onDocumentChange);
        this.renderer.setSession(session);

        this.$onChangeMode = this.onChangeMode.bind(this);
        session.addEventListener("changeMode", this.$onChangeMode);

        this.$onTokenizerUpdate = this.onTokenizerUpdate.bind(this);
        session.addEventListener("tokenizerUpdate", this.$onTokenizerUpdate);

        this.$onChangeTabSize = this.renderer.onChangeTabSize.bind(this.renderer);
        session.addEventListener("changeTabSize", this.$onChangeTabSize);

        this.$onChangeWrapLimit = this.onChangeWrapLimit.bind(this);
        session.addEventListener("changeWrapLimit", this.$onChangeWrapLimit);

        this.$onChangeWrapMode = this.onChangeWrapMode.bind(this);
        session.addEventListener("changeWrapMode", this.$onChangeWrapMode);

        this.$onChangeFold = this.onChangeFold.bind(this);
        session.addEventListener("changeFold", this.$onChangeFold);

        this.$onChangeFrontMarker = this.onChangeFrontMarker.bind(this);
        this.session.addEventListener("changeFrontMarker", this.$onChangeFrontMarker);

        this.$onChangeBackMarker = this.onChangeBackMarker.bind(this);
        this.session.addEventListener("changeBackMarker", this.$onChangeBackMarker);

        this.$onChangeBreakpoint = this.onChangeBreakpoint.bind(this);
        this.session.addEventListener("changeBreakpoint", this.$onChangeBreakpoint);

        this.$onChangeAnnotation = this.onChangeAnnotation.bind(this);
        this.session.addEventListener("changeAnnotation", this.$onChangeAnnotation);

        this.$onCursorChange = this.onCursorChange.bind(this);
        this.session.addEventListener("changeOverwrite", this.$onCursorChange);

        this.$onScrollTopChange = this.onScrollTopChange.bind(this);
        this.session.addEventListener("changeScrollTop", this.$onScrollTopChange);

        this.$onScrollLeftChange = this.onScrollLeftChange.bind(this);
        this.session.addEventListener("changeScrollLeft", this.$onScrollLeftChange);

        this.selection = session.getSelection();
        this.selection.addEventListener("changeCursor", this.$onCursorChange);

        this.$onSelectionChange = this.onSelectionChange.bind(this);
        this.selection.addEventListener("changeSelection", this.$onSelectionChange);

        this.onChangeMode();

        this.$blockScrolling += 1;
        this.onCursorChange();
        this.$blockScrolling -= 1;

        this.onScrollTopChange();
        this.onScrollLeftChange();
        this.onSelectionChange();
        this.onChangeFrontMarker();
        this.onChangeBackMarker();
        this.onChangeBreakpoint();
        this.onChangeAnnotation();
        this.session.getUseWrapMode() && this.renderer.adjustWrapLimit();
        this.renderer.updateFull();

        this._emit("changeSession", {
            session: session,
            oldSession: oldSession
        });
    };

    /**
     * Returns the current session being used.
     * @returns {EditSession}
     **/
    this.getSession = function() {
        return this.session;
    };

    /**
     * Sets the current document to `val`.
     * @param {String} val The new value to set for the document
     * @param {Number} cursorPos Where to set the new value. `undefined` or 0 is selectAll, -1 is at the document start, and 1 is at the end
     *
     * @returns {String} The current document value
     * @related Document.setValue
     **/
    this.setValue = function(val, cursorPos) {
        this.session.doc.setValue(val);

        if (!cursorPos)
            this.selectAll();
        else if (cursorPos == 1)
            this.navigateFileEnd();
        else if (cursorPos == -1)
            this.navigateFileStart();

        return val;
    };

    /**
     * Returns the current session's content.
     *
     * @returns {String}
     * @related EditSession.getValue
     **/
    this.getValue = function() {
        return this.session.getValue();
    };

    /**
     *
     * Returns the currently highlighted selection.
     * @returns {String} The highlighted selection
     **/
    this.getSelection = function() {
        return this.selection;
    };

    /**
     * {:VirtualRenderer.onResize}
     * @param {Boolean} force If `true`, recomputes the size, even if the height and width haven't changed
     *
     *
     * @related VirtualRenderer.onResize
     **/
    this.resize = function(force) {
        this.renderer.onResize(force);
    };

    /**
     * {:VirtualRenderer.setTheme}
     * @param {String} theme The path to a theme
     *
     *
     **/
    this.setTheme = function(theme) {
        this.renderer.setTheme(theme);
    };

    /**
     * {:VirtualRenderer.getTheme}
     *
     * @returns {String} The set theme
     * @related VirtualRenderer.getTheme
     **/
    this.getTheme = function() {
        return this.renderer.getTheme();
    };

    /**
     * {:VirtualRenderer.setStyle}
     * @param {String} style A class name
     *
     *
     * @related VirtualRenderer.setStyle
     **/
    this.setStyle = function(style) {
        this.renderer.setStyle(style);
    };

    /**
     * {:VirtualRenderer.unsetStyle}
     * @related VirtualRenderer.unsetStyle
     **/
    this.unsetStyle = function(style) {
        this.renderer.unsetStyle(style);
    };

    /**
     * Gets the current font size of the editor text.
     */
    this.getFontSize = function () {
        return this.getOption("fontSize") ||
           dom.computedStyle(this.container, "fontSize");
    };

    /**
     * Set a new font size (in pixels) for the editor text.
     * @param {String} size A font size ( _e.g._ "12px")
     *
     *
     **/
    this.setFontSize = function(size) {
        this.setOption("fontSize", size);
    };

    this.$highlightBrackets = function() {
        if (this.session.$bracketHighlight) {
            this.session.removeMarker(this.session.$bracketHighlight);
            this.session.$bracketHighlight = null;
        }

        if (this.$highlightPending) {
            return;
        }

        // perform highlight async to not block the browser during navigation
        var self = this;
        this.$highlightPending = true;
        setTimeout(function() {
            self.$highlightPending = false;

            var pos = self.session.findMatchingBracket(self.getCursorPosition());
            if (pos) {
                var range = new Range(pos.row, pos.column, pos.row, pos.column+1);
            } else if (self.session.$mode.getMatching) {
                var range = self.session.$mode.getMatching(self.session);
            }
            if (range)
                self.session.$bracketHighlight = self.session.addMarker(range, "ace_bracket", "text");
        }, 50);
    };

    /**
     *
     * Brings the current `textInput` into focus.
     **/
    this.focus = function() {
        // Safari needs the timeout
        // iOS and Firefox need it called immediately
        // to be on the save side we do both
        var _self = this;
        setTimeout(function() {
            _self.textInput.focus();
        });
        this.textInput.focus();
    };

    /**
     * Returns `true` if the current `textInput` is in focus.
     * @return {Boolean}
     **/
    this.isFocused = function() {
        return this.textInput.isFocused();
    };

    /**
     *
     * Blurs the current `textInput`.
     **/
    this.blur = function() {
        this.textInput.blur();
    };

    /**
     * Emitted once the editor comes into focus.
     * @event focus
     *
     *
     **/
    this.onFocus = function() {
        if (this.$isFocused)
            return;
        this.$isFocused = true;
        this.renderer.showCursor();
        this.renderer.visualizeFocus();
        this._emit("focus");
    };

    /**
     * Emitted once the editor has been blurred.
     * @event blur
     *
     *
     **/
    this.onBlur = function() {
        if (!this.$isFocused)
            return;
        this.$isFocused = false;
        this.renderer.hideCursor();
        this.renderer.visualizeBlur();
        this._emit("blur");
    };

    this.$cursorChange = function() {
        this.renderer.updateCursor();
    };

    /**
     * Emitted whenever the document is changed.
     * @event change
     * @param {Object} e Contains a single property, `data`, which has the delta of changes
     *
     *
     *
     **/
    this.onDocumentChange = function(e) {
        var delta = e.data;
        var range = delta.range;
        var lastRow;

        if (range.start.row == range.end.row && delta.action != "insertLines" && delta.action != "removeLines")
            lastRow = range.end.row;
        else
            lastRow = Infinity;
        this.renderer.updateLines(range.start.row, lastRow);

        this._emit("change", e);

        // update cursor because tab characters can influence the cursor position
        this.$cursorChange();
    };

    this.onTokenizerUpdate = function(e) {
        var rows = e.data;
        this.renderer.updateLines(rows.first, rows.last);
    };


    this.onScrollTopChange = function() {
        this.renderer.scrollToY(this.session.getScrollTop());
    };

    this.onScrollLeftChange = function() {
        this.renderer.scrollToX(this.session.getScrollLeft());
    };

    /**
     * Emitted when the selection changes.
     *
     **/
    this.onCursorChange = function() {
        this.$cursorChange();

        if (!this.$blockScrolling) {
            this.renderer.scrollCursorIntoView();
        }

        this.$highlightBrackets();
        this.$updateHighlightActiveLine();
        this._emit("changeSelection");
    };

    this.$updateHighlightActiveLine = function() {
        var session = this.getSession();

        var highlight;
        if (this.$highlightActiveLine) {
            if ((this.$selectionStyle != "line" || !this.selection.isMultiLine()))
                highlight = this.getCursorPosition();
            if (this.renderer.$maxLines && this.session.getLength() === 1)
                highlight = false;
        }

        if (session.$highlightLineMarker && !highlight) {
            session.removeMarker(session.$highlightLineMarker.id);
            session.$highlightLineMarker = null;
        } else if (!session.$highlightLineMarker && highlight) {
            var range = new Range(highlight.row, highlight.column, highlight.row, Infinity);
            range.id = session.addMarker(range, "ace_active-line", "screenLine");
            session.$highlightLineMarker = range;
        } else if (highlight) {
            session.$highlightLineMarker.start.row = highlight.row;
            session.$highlightLineMarker.end.row = highlight.row;
            session.$highlightLineMarker.start.column = highlight.column;
            session._emit("changeBackMarker");
        }
    };

    this.onSelectionChange = function(e) {
        var session = this.session;

        if (session.$selectionMarker) {
            session.removeMarker(session.$selectionMarker);
        }
        session.$selectionMarker = null;

        if (!this.selection.isEmpty()) {
            var range = this.selection.getRange();
            var style = this.getSelectionStyle();
            session.$selectionMarker = session.addMarker(range, "ace_selection", style);
        } else {
            this.$updateHighlightActiveLine();
        }

        var re = this.$highlightSelectedWord && this.$getSelectionHighLightRegexp()
        this.session.highlight(re);

        this._emit("changeSelection");
    };

    this.$getSelectionHighLightRegexp = function() {
        var session = this.session;

        var selection = this.getSelectionRange();
        if (selection.isEmpty() || selection.isMultiLine())
            return;

        var startOuter = selection.start.column - 1;
        var endOuter = selection.end.column + 1;
        var line = session.getLine(selection.start.row);
        var lineCols = line.length;
        var needle = line.substring(Math.max(startOuter, 0),
                                    Math.min(endOuter, lineCols));

        // Make sure the outer characters are not part of the word.
        if ((startOuter >= 0 && /^[\w\d]/.test(needle)) ||
            (endOuter <= lineCols && /[\w\d]$/.test(needle)))
            return;

        needle = line.substring(selection.start.column, selection.end.column);
        if (!/^[\w\d]+$/.test(needle))
            return;

        var re = this.$search.$assembleRegExp({
            wholeWord: true,
            caseSensitive: true,
            needle: needle
        });

        return re;
    };


    this.onChangeFrontMarker = function() {
        this.renderer.updateFrontMarkers();
    };

    this.onChangeBackMarker = function() {
        this.renderer.updateBackMarkers();
    };


    this.onChangeBreakpoint = function() {
        this.renderer.updateBreakpoints();
    };

    this.onChangeAnnotation = function() {
        this.renderer.setAnnotations(this.session.getAnnotations());
    };


    this.onChangeMode = function(e) {
        this.renderer.updateText();
        this._emit("changeMode", e);
    };


    this.onChangeWrapLimit = function() {
        this.renderer.updateFull();
    };

    this.onChangeWrapMode = function() {
        this.renderer.onResize(true);
    };


    this.onChangeFold = function() {
        // Update the active line marker as due to folding changes the current
        // line range on the screen might have changed.
        this.$updateHighlightActiveLine();
        // TODO: This might be too much updating. Okay for now.
        this.renderer.updateFull();
    };

    
    /**
     * Returns the string of text currently highlighted.
     * @returns {String}
     **/
    this.getSelectedText = function() {
        return this.session.getTextRange(this.getSelectionRange());
    };
    
    /**
     * Emitted when text is copied.
     * @event copy
     * @param {String} text The copied text
     *
     **/
    /**
     * Returns the string of text currently highlighted.
     * @returns {String}
     * @deprecated Use getSelectedText instead.
     **/
    this.getCopyText = function() {
        var text = this.getSelectedText();
        this._signal("copy", text);
        return text;
    };

    /**
     * Called whenever a text "copy" happens.
     **/
    this.onCopy = function() {
        this.commands.exec("copy", this);
    };

    /**
     * Called whenever a text "cut" happens.
     **/
    this.onCut = function() {
        this.commands.exec("cut", this);
    };

    /**
     * Emitted when text is pasted.
     * @event paste
     * @param {String} text The pasted text
     *
     *
     **/
    /**
     * Called whenever a text "paste" happens.
     * @param {String} text The pasted text
     *
     *
     **/
    this.onPaste = function(text) {
        // todo this should change when paste becomes a command
        if (this.$readOnly)
            return;
        this._emit("paste", text);
        this.insert(text);
    };


    this.execCommand = function(command, args) {
        this.commands.exec(command, this, args);
    };

    /**
     * Inserts `text` into wherever the cursor is pointing.
     * @param {String} text The new text to add
     *
     *
     **/
    this.insert = function(text) {
        var session = this.session;
        var mode = session.getMode();
        var cursor = this.getCursorPosition();

        if (this.getBehavioursEnabled()) {
            // Get a transform if the current mode wants one.
            var transform = mode.transformAction(session.getState(cursor.row), 'insertion', this, session, text);
            if (transform) {
                if (text !== transform.text) {
                    this.session.mergeUndoDeltas = false;
                    this.$mergeNextCommand = false;
                }
                text = transform.text;

            }
        }
        
        if (text == "\t")
            text = this.session.getTabString();

        // remove selected text
        if (!this.selection.isEmpty()) {
            var range = this.getSelectionRange();
            cursor = this.session.remove(range);
            this.clearSelection();
        }
        else if (this.session.getOverwrite()) {
            var range = new Range.fromPoints(cursor, cursor);
            range.end.column += text.length;
            this.session.remove(range);
        }

        if (text == "\n" || text == "\r\n") {
            var line = session.getLine(cursor.row)
            if (cursor.column > line.search(/\S|$/)) {
                var d = line.substr(cursor.column).search(/\S|$/);
                session.doc.removeInLine(cursor.row, cursor.column, cursor.column + d);
            }
        }
        this.clearSelection();

        var start = cursor.column;
        var lineState = session.getState(cursor.row);
        var line = session.getLine(cursor.row);
        var shouldOutdent = mode.checkOutdent(lineState, line, text);
        var end = session.insert(cursor, text);

        if (transform && transform.selection) {
            if (transform.selection.length == 2) { // Transform relative to the current column
                this.selection.setSelectionRange(
                    new Range(cursor.row, start + transform.selection[0],
                              cursor.row, start + transform.selection[1]));
            } else { // Transform relative to the current row.
                this.selection.setSelectionRange(
                    new Range(cursor.row + transform.selection[0],
                              transform.selection[1],
                              cursor.row + transform.selection[2],
                              transform.selection[3]));
            }
        }

        if (session.getDocument().isNewLine(text)) {
            var lineIndent = mode.getNextLineIndent(lineState, line.slice(0, cursor.column), session.getTabString());

            session.insert({row: cursor.row+1, column: 0}, lineIndent);
        }
        if (shouldOutdent)
            mode.autoOutdent(lineState, session, cursor.row);
    };

    this.onTextInput = function(text) {
        this.keyBinding.onTextInput(text);
    };

    this.onCommandKey = function(e, hashId, keyCode) {
        this.keyBinding.onCommandKey(e, hashId, keyCode);
    };

    /**
     * Pass in `true` to enable overwrites in your session, or `false` to disable. If overwrites is enabled, any text you enter will type over any text after it. If the value of `overwrite` changes, this function also emites the `changeOverwrite` event.
     * @param {Boolean} overwrite Defines wheter or not to set overwrites
     *
     *
     * @related EditSession.setOverwrite
     **/
    this.setOverwrite = function(overwrite) {
        this.session.setOverwrite(overwrite);
    };

    /**
     * Returns `true` if overwrites are enabled; `false` otherwise.
     * @returns {Boolean}
     * @related EditSession.getOverwrite
     **/
    this.getOverwrite = function() {
        return this.session.getOverwrite();
    };

    /**
     * Sets the value of overwrite to the opposite of whatever it currently is.
     * @related EditSession.toggleOverwrite
     **/
    this.toggleOverwrite = function() {
        this.session.toggleOverwrite();
    };

    /**
     * Sets how fast the mouse scrolling should do.
     * @param {Number} speed A value indicating the new speed (in milliseconds)
     **/
    this.setScrollSpeed = function(speed) {
        this.setOption("scrollSpeed", speed);
    };

    /**
     * Returns the value indicating how fast the mouse scroll speed is (in milliseconds).
     * @returns {Number}
     **/
    this.getScrollSpeed = function() {
        return this.getOption("scrollSpeed");
    };

    /**
     * Sets the delay (in milliseconds) of the mouse drag.
     * @param {Number} dragDelay A value indicating the new delay
     **/
    this.setDragDelay = function(dragDelay) {
        this.setOption("dragDelay", dragDelay);
    };

    /**
     * Returns the current mouse drag delay.
     * @returns {Number}
     **/
    this.getDragDelay = function() {
        return this.getOption("dragDelay");
    };

    /**
     * Emitted when the selection style changes, via [[Editor.setSelectionStyle]].
     * @event changeSelectionStyle
     * @param {Object} data Contains one property, `data`, which indicates the new selection style
     **/
    /**
     * Draw selection markers spanning whole line, or only over selected text. Default value is "line"
     * @param {String} style The new selection style "line"|"text"
     *
     **/
    this.setSelectionStyle = function(val) {
        this.setOption("selectionStyle", val);
    };

    /**
     * Returns the current selection style.
     * @returns {String}
     **/
    this.getSelectionStyle = function() {
        return this.getOption("selectionStyle");
    };

    /**
     * Determines whether or not the current line should be highlighted.
     * @param {Boolean} shouldHighlight Set to `true` to highlight the current line
     **/
    this.setHighlightActiveLine = function(shouldHighlight) {
        this.setOption("highlightActiveLine", shouldHighlight);
    };
    /**
     * Returns `true` if current lines are always highlighted.
     * @return {Boolean}
     **/
    this.getHighlightActiveLine = function() {
        return this.getOption("highlightActiveLine");
    };
    this.setHighlightGutterLine = function(shouldHighlight) {
        this.setOption("highlightGutterLine", shouldHighlight);
    };

    this.getHighlightGutterLine = function() {
        return this.getOption("highlightGutterLine");
    };
    /**
     * Determines if the currently selected word should be highlighted.
     * @param {Boolean} shouldHighlight Set to `true` to highlight the currently selected word
     *
     **/
    this.setHighlightSelectedWord = function(shouldHighlight) {
        this.setOption("highlightSelectedWord", shouldHighlight);
    };

    /**
     * Returns `true` if currently highlighted words are to be highlighted.
     * @returns {Boolean}
     **/
    this.getHighlightSelectedWord = function() {
        return this.$highlightSelectedWord;
    };

    this.setAnimatedScroll = function(shouldAnimate){
        this.renderer.setAnimatedScroll(shouldAnimate);
    };

    this.getAnimatedScroll = function(){
        return this.renderer.getAnimatedScroll();
    };

    /**
     * If `showInvisibles` is set to `true`, invisible characters&mdash;like spaces or new lines&mdash;are show in the editor.
     * @param {Boolean} showInvisibles Specifies whether or not to show invisible characters
     *
     **/
    this.setShowInvisibles = function(showInvisibles) {
        this.renderer.setShowInvisibles(showInvisibles);
    };

    /**
     * Returns `true` if invisible characters are being shown.
     * @returns {Boolean}
     **/
    this.getShowInvisibles = function() {
        return this.renderer.getShowInvisibles();
    };

    this.setDisplayIndentGuides = function(display) {
        this.renderer.setDisplayIndentGuides(display);
    };

    this.getDisplayIndentGuides = function() {
        return this.renderer.getDisplayIndentGuides();
    };

    /**
     * If `showPrintMargin` is set to `true`, the print margin is shown in the editor.
     * @param {Boolean} showPrintMargin Specifies whether or not to show the print margin
     *
     **/
    this.setShowPrintMargin = function(showPrintMargin) {
        this.renderer.setShowPrintMargin(showPrintMargin);
    };

    /**
     * Returns `true` if the print margin is being shown.
     * @returns {Boolean}
     **/
    this.getShowPrintMargin = function() {
        return this.renderer.getShowPrintMargin();
    };

    /**
     * Sets the column defining where the print margin should be.
     * @param {Number} showPrintMargin Specifies the new print margin
     *
     **/
    this.setPrintMarginColumn = function(showPrintMargin) {
        this.renderer.setPrintMarginColumn(showPrintMargin);
    };

    /**
     * Returns the column number of where the print margin is.
     * @returns {Number}
     **/
    this.getPrintMarginColumn = function() {
        return this.renderer.getPrintMarginColumn();
    };

    /**
     * If `readOnly` is true, then the editor is set to read-only mode, and none of the content can change.
     * @param {Boolean} readOnly Specifies whether the editor can be modified or not
     *
     **/
    this.setReadOnly = function(readOnly) {
        this.setOption("readOnly", readOnly);
    };

    /**
     * Returns `true` if the editor is set to read-only mode.
     * @returns {Boolean}
     **/
    this.getReadOnly = function() {
        return this.getOption("readOnly");
    };

    /**
     * Specifies whether to use behaviors or not. ["Behaviors" in this case is the auto-pairing of special characters, like quotation marks, parenthesis, or brackets.]{: #BehaviorsDef}
     * @param {Boolean} enabled Enables or disables behaviors
     *
     **/
    this.setBehavioursEnabled = function (enabled) {
        this.setOption("behavioursEnabled", enabled);
    };

    /**
     * Returns `true` if the behaviors are currently enabled. {:BehaviorsDef}
     *
     * @returns {Boolean}
     **/
    this.getBehavioursEnabled = function () {
        return this.getOption("behavioursEnabled");
    };

    /**
     * Specifies whether to use wrapping behaviors or not, i.e. automatically wrapping the selection with characters such as brackets
     * when such a character is typed in.
     * @param {Boolean} enabled Enables or disables wrapping behaviors
     *
     **/
    this.setWrapBehavioursEnabled = function (enabled) {
        this.setOption("wrapBehavioursEnabled", enabled);
    };

    /**
     * Returns `true` if the wrapping behaviors are currently enabled.
     **/
    this.getWrapBehavioursEnabled = function () {
        return this.getOption("wrapBehavioursEnabled");
    };

    /**
     * Indicates whether the fold widgets should be shown or not.
     * @param {Boolean} show Specifies whether the fold widgets are shown
     **/
    this.setShowFoldWidgets = function(show) {
        this.setOption("showFoldWidgets", show);

    };
    /**
     * Returns `true` if the fold widgets are shown.
     * @return {Boolean}
     **/
    this.getShowFoldWidgets = function() {
        return this.getOption("showFoldWidgets");
    };

    this.setFadeFoldWidgets = function(fade) {
        this.setOption("fadeFoldWidgets", fade);
    };

    this.getFadeFoldWidgets = function() {
        return this.getOption("fadeFoldWidgets");
    };

    /**
     * Removes words of text from the editor. A "word" is defined as a string of characters bookended by whitespace.
     * @param {String} dir The direction of the deletion to occur, either "left" or "right"
     *
     **/
    this.remove = function(dir) {
        if (this.selection.isEmpty()){
            if (dir == "left")
                this.selection.selectLeft();
            else
                this.selection.selectRight();
        }

        var range = this.getSelectionRange();
        if (this.getBehavioursEnabled()) {
            var session = this.session;
            var state = session.getState(range.start.row);
            var new_range = session.getMode().transformAction(state, 'deletion', this, session, range);

            if (range.end.column == 0) {
                var text = session.getTextRange(range);
                if (text[text.length - 1] == "\n") {
                    var line = session.getLine(range.end.row)
                    if (/^\s+$/.test(line)) {
                        range.end.column = line.length
                    }
                }
            }
            if (new_range)
                range = new_range;
        }

        this.session.remove(range);
        this.clearSelection();
    };

    /**
     * Removes the word directly to the right of the current selection.
     **/
    this.removeWordRight = function() {
        if (this.selection.isEmpty())
            this.selection.selectWordRight();

        this.session.remove(this.getSelectionRange());
        this.clearSelection();
    };

    /**
     * Removes the word directly to the left of the current selection.
     **/
    this.removeWordLeft = function() {
        if (this.selection.isEmpty())
            this.selection.selectWordLeft();

        this.session.remove(this.getSelectionRange());
        this.clearSelection();
    };

    /**
     * Removes all the words to the left of the current selection, until the start of the line.
     **/
    this.removeToLineStart = function() {
        if (this.selection.isEmpty())
            this.selection.selectLineStart();

        this.session.remove(this.getSelectionRange());
        this.clearSelection();
    };

    /**
     * Removes all the words to the right of the current selection, until the end of the line.
     **/
    this.removeToLineEnd = function() {
        if (this.selection.isEmpty())
            this.selection.selectLineEnd();

        var range = this.getSelectionRange();
        if (range.start.column == range.end.column && range.start.row == range.end.row) {
            range.end.column = 0;
            range.end.row++;
        }

        this.session.remove(range);
        this.clearSelection();
    };

    /**
     * Splits the line at the current selection (by inserting an `'\n'`).
     **/
    this.splitLine = function() {
        if (!this.selection.isEmpty()) {
            this.session.remove(this.getSelectionRange());
            this.clearSelection();
        }

        var cursor = this.getCursorPosition();
        this.insert("\n");
        this.moveCursorToPosition(cursor);
    };

    /**
     * Transposes current line.
     **/
    this.transposeLetters = function() {
        if (!this.selection.isEmpty()) {
            return;
        }

        var cursor = this.getCursorPosition();
        var column = cursor.column;
        if (column === 0)
            return;

        var line = this.session.getLine(cursor.row);
        var swap, range;
        if (column < line.length) {
            swap = line.charAt(column) + line.charAt(column-1);
            range = new Range(cursor.row, column-1, cursor.row, column+1);
        }
        else {
            swap = line.charAt(column-1) + line.charAt(column-2);
            range = new Range(cursor.row, column-2, cursor.row, column);
        }
        this.session.replace(range, swap);
    };

    /**
     * Converts the current selection entirely into lowercase.
     **/
    this.toLowerCase = function() {
        var originalRange = this.getSelectionRange();
        if (this.selection.isEmpty()) {
            this.selection.selectWord();
        }

        var range = this.getSelectionRange();
        var text = this.session.getTextRange(range);
        this.session.replace(range, text.toLowerCase());
        this.selection.setSelectionRange(originalRange);
    };

    /**
     * Converts the current selection entirely into uppercase.
     **/
    this.toUpperCase = function() {
        var originalRange = this.getSelectionRange();
        if (this.selection.isEmpty()) {
            this.selection.selectWord();
        }

        var range = this.getSelectionRange();
        var text = this.session.getTextRange(range);
        this.session.replace(range, text.toUpperCase());
        this.selection.setSelectionRange(originalRange);
    };

    /**
     * Inserts an indentation into the current cursor position or indents the selected lines.
     *
     * @related EditSession.indentRows
     **/
    this.indent = function() {
        var session = this.session;
        var range = this.getSelectionRange();

        if (range.start.row < range.end.row) {
            var rows = this.$getSelectedRows();
            session.indentRows(rows.first, rows.last, "\t");
            return;
        } else if (range.start.column < range.end.column) {
            var text = session.getTextRange(range)
            if (!/^\s+$/.test(text)) {
                var rows = this.$getSelectedRows();
                session.indentRows(rows.first, rows.last, "\t");
                return;
            }
        }
        
        var line = session.getLine(range.start.row)
        var position = range.start;
        var size = session.getTabSize();
        var column = session.documentToScreenColumn(position.row, position.column);

        if (this.session.getUseSoftTabs()) {
            var count = (size - column % size);
            var indentString = lang.stringRepeat(" ", count);
        } else {
            var count = column % size;
            while (line[range.start.column] == " " && count) {
                range.start.column--;
                count--;
            }
            this.selection.setSelectionRange(range);
            indentString = "\t";
        }
        return this.insert(indentString);
    };

    /**
     * Indents the current line.
     * @related EditSession.indentRows
     **/
    this.blockIndent = function() {
        var rows = this.$getSelectedRows();
        this.session.indentRows(rows.first, rows.last, "\t");
    };

    /**
     * Outdents the current line.
     * @related EditSession.outdentRows
     **/
    this.blockOutdent = function() {
        var selection = this.session.getSelection();
        this.session.outdentRows(selection.getRange());
    };

    // TODO: move out of core when we have good mechanism for managing extensions
    this.sortLines = function() {
        var rows = this.$getSelectedRows();
        var session = this.session;

        var lines = [];
        for (i = rows.first; i <= rows.last; i++)
            lines.push(session.getLine(i));

        lines.sort(function(a, b) {
            if (a.toLowerCase() < b.toLowerCase()) return -1;
            if (a.toLowerCase() > b.toLowerCase()) return 1;
            return 0;
        });

        var deleteRange = new Range(0, 0, 0, 0);
        for (var i = rows.first; i <= rows.last; i++) {
            var line = session.getLine(i);
            deleteRange.start.row = i;
            deleteRange.end.row = i;
            deleteRange.end.column = line.length;
            session.replace(deleteRange, lines[i-rows.first]);
        }
    };

    /**
     * Given the currently selected range, this function either comments all the lines, or uncomments all of them.
     **/
    this.toggleCommentLines = function() {
        var state = this.session.getState(this.getCursorPosition().row);
        var rows = this.$getSelectedRows();
        this.session.getMode().toggleCommentLines(state, this.session, rows.first, rows.last);
    };

    this.toggleBlockComment = function() {
        var cursor = this.getCursorPosition();
        var state = this.session.getState(cursor.row);
        var range = this.getSelectionRange();
        this.session.getMode().toggleBlockComment(state, this.session, range, cursor);
    };

    /**
     * Works like [[EditSession.getTokenAt]], except it returns a number.
     * @returns {Number}
     **/
    this.getNumberAt = function( row, column ) {
        var _numberRx = /[\-]?[0-9]+(?:\.[0-9]+)?/g
        _numberRx.lastIndex = 0

        var s = this.session.getLine(row)
        while (_numberRx.lastIndex < column) {
            var m = _numberRx.exec(s)
            if(m.index <= column && m.index+m[0].length >= column){
                var number = {
                    value: m[0],
                    start: m.index,
                    end: m.index+m[0].length
                }
                return number;
            }
        }
        return null;
    };

    /**
     * If the character before the cursor is a number, this functions changes its value by `amount`.
     * @param {Number} amount The value to change the numeral by (can be negative to decrease value)
     *
     **/
    this.modifyNumber = function(amount) {
        var row = this.selection.getCursor().row;
        var column = this.selection.getCursor().column;

        // get the char before the cursor
        var charRange = new Range(row, column-1, row, column);

        var c = this.session.getTextRange(charRange);
        // if the char is a digit
        if (!isNaN(parseFloat(c)) && isFinite(c)) {
            // get the whole number the digit is part of
            var nr = this.getNumberAt(row, column);
            // if number found
            if (nr) {
                var fp = nr.value.indexOf(".") >= 0 ? nr.start + nr.value.indexOf(".") + 1 : nr.end;
                var decimals = nr.start + nr.value.length - fp;

                var t = parseFloat(nr.value);
                t *= Math.pow(10, decimals);


                if(fp !== nr.end && column < fp){
                    amount *= Math.pow(10, nr.end - column - 1);
                } else {
                    amount *= Math.pow(10, nr.end - column);
                }

                t += amount;
                t /= Math.pow(10, decimals);
                var nnr = t.toFixed(decimals);

                //update number
                var replaceRange = new Range(row, nr.start, row, nr.end);
                this.session.replace(replaceRange, nnr);

                //reposition the cursor
                this.moveCursorTo(row, Math.max(nr.start +1, column + nnr.length - nr.value.length));

            }
        }
    };

    /**
     * Removes all the lines in the current selection
     * @related EditSession.remove
     **/
    this.removeLines = function() {
        var rows = this.$getSelectedRows();
        var range;
        if (rows.first === 0 || rows.last+1 < this.session.getLength())
            range = new Range(rows.first, 0, rows.last+1, 0);
        else
            range = new Range(
                rows.first-1, this.session.getLine(rows.first-1).length,
                rows.last, this.session.getLine(rows.last).length
            );
        this.session.remove(range);
        this.clearSelection();
    };

    this.duplicateSelection = function() {
        var sel = this.selection;
        var doc = this.session;
        var range = sel.getRange();
        var reverse = sel.isBackwards();
        if (range.isEmpty()) {
            var row = range.start.row;
            doc.duplicateLines(row, row);
        } else {
            var point = reverse ? range.start : range.end;
            var endPoint = doc.insert(point, doc.getTextRange(range), false);
            range.start = point;
            range.end = endPoint;

            sel.setSelectionRange(range, reverse)
        }
    };

    /**
     * Shifts all the selected lines down one row.
     *
     * @returns {Number} On success, it returns -1.
     * @related EditSession.moveLinesUp
     **/
    this.moveLinesDown = function() {
        this.$moveLines(function(firstRow, lastRow) {
            return this.session.moveLinesDown(firstRow, lastRow);
        });
    };

    /**
     * Shifts all the selected lines up one row.
     * @returns {Number} On success, it returns -1.
     * @related EditSession.moveLinesDown
     **/
    this.moveLinesUp = function() {
        this.$moveLines(function(firstRow, lastRow) {
            return this.session.moveLinesUp(firstRow, lastRow);
        });
    };

    /**
     * Moves a range of text from the given range to the given position. `toPosition` is an object that looks like this:
     * ```json
     *    { row: newRowLocation, column: newColumnLocation }
     * ```
     * @param {Range} fromRange The range of text you want moved within the document
     * @param {Object} toPosition The location (row and column) where you want to move the text to
     *
     * @returns {Range} The new range where the text was moved to.
     * @related EditSession.moveText
     **/
    this.moveText = function(range, toPosition) {
        return this.session.moveText(range, toPosition);
    };

    /**
     * Copies all the selected lines up one row.
     * @returns {Number} On success, returns 0.
     *
     **/
    this.copyLinesUp = function() {
        this.$moveLines(function(firstRow, lastRow) {
            this.session.duplicateLines(firstRow, lastRow);
            return 0;
        });
    };

    /**
     * Copies all the selected lines down one row.
     * @returns {Number} On success, returns the number of new rows added; in other words, `lastRow - firstRow + 1`.
     * @related EditSession.duplicateLines
     *
     **/
    this.copyLinesDown = function() {
        this.$moveLines(function(firstRow, lastRow) {
            return this.session.duplicateLines(firstRow, lastRow);
        });
    };

    /**
     * Executes a specific function, which can be anything that manipulates selected lines, such as copying them, duplicating them, or shifting them.
     * @param {Function} mover A method to call on each selected row
     *
     *
     **/
    this.$moveLines = function(mover) {
        var selection = this.selection;
        if (!selection.inMultiSelectMode || this.inVirtualSelectionMode) {
            var range = selection.toOrientedRange();
            var rows = this.$getSelectedRows(range);
            var linesMoved = mover.call(this, rows.first, rows.last);
            range.moveBy(linesMoved, 0);
            selection.fromOrientedRange(range);
        } else {
            var ranges = selection.rangeList.ranges;
            selection.rangeList.detach(this.session);

            for (var i = ranges.length; i--; ) {
                var rangeIndex = i;
                var rows = ranges[i].collapseRows();
                var last = rows.end.row;
                var first = rows.start.row;
                while (i--) {
                    var rows = ranges[i].collapseRows();
                    if (first - rows.end.row <= 1)
                        first = rows.end.row;
                    else
                        break;
                }
                i++;

                var linesMoved = mover.call(this, first, last);
                while (rangeIndex >= i) {
                    ranges[rangeIndex].moveBy(linesMoved, 0);
                    rangeIndex--;
                }
            }
            selection.fromOrientedRange(selection.ranges[0]);
            selection.rangeList.attach(this.session);
        }
    };

    /**
     * Returns an object indicating the currently selected rows. The object looks like this:
     *
     * ```json
     * { first: range.start.row, last: range.end.row }
     * ```
     *
     * @returns {Object}
     **/
    this.$getSelectedRows = function() {
        var range = this.getSelectionRange().collapseRows();

        return {
            first: range.start.row,
            last: range.end.row
        };
    };

    this.onCompositionStart = function(text) {
        this.renderer.showComposition(this.getCursorPosition());
    };

    this.onCompositionUpdate = function(text) {
        this.renderer.setCompositionText(text);
    };

    this.onCompositionEnd = function() {
        this.renderer.hideComposition();
    };

    /**
     * {:VirtualRenderer.getFirstVisibleRow}
     *
     * @returns {Number}
     * @related VirtualRenderer.getFirstVisibleRow
     **/
    this.getFirstVisibleRow = function() {
        return this.renderer.getFirstVisibleRow();
    };

    /**
     * {:VirtualRenderer.getLastVisibleRow}
     *
     * @returns {Number}
     * @related VirtualRenderer.getLastVisibleRow
     **/
    this.getLastVisibleRow = function() {
        return this.renderer.getLastVisibleRow();
    };

    /**
     * Indicates if the row is currently visible on the screen.
     * @param {Number} row The row to check
     *
     * @returns {Boolean}
     **/
    this.isRowVisible = function(row) {
        return (row >= this.getFirstVisibleRow() && row <= this.getLastVisibleRow());
    };

    /**
     * Indicates if the entire row is currently visible on the screen.
     * @param {Number} row The row to check
     *
     *
     * @returns {Boolean}
     **/
    this.isRowFullyVisible = function(row) {
        return (row >= this.renderer.getFirstFullyVisibleRow() && row <= this.renderer.getLastFullyVisibleRow());
    };

    /**
     * Returns the number of currently visibile rows.
     * @returns {Number}
     **/
    this.$getVisibleRowCount = function() {
        return this.renderer.getScrollBottomRow() - this.renderer.getScrollTopRow() + 1;
    };

    this.$moveByPage = function(dir, select) {
        var renderer = this.renderer;
        var config = this.renderer.layerConfig;
        var rows = dir * Math.floor(config.height / config.lineHeight);

        this.$blockScrolling++;
        if (select == true) {
            this.selection.$moveSelection(function(){
                this.moveCursorBy(rows, 0);
            });
        } else if (select == false) {
            this.selection.moveCursorBy(rows, 0);
            this.selection.clearSelection();
        }
        this.$blockScrolling--;

        var scrollTop = renderer.scrollTop;

        renderer.scrollBy(0, rows * config.lineHeight);
        if (select != null)
            renderer.scrollCursorIntoView(null, 0.5);

        renderer.animateScrolling(scrollTop);
    };

    /**
     * Selects the text from the current position of the document until where a "page down" finishes.
     **/
    this.selectPageDown = function() {
        this.$moveByPage(1, true);
    };

    /**
     * Selects the text from the current position of the document until where a "page up" finishes.
     **/
    this.selectPageUp = function() {
        this.$moveByPage(-1, true);
    };

    /**
     * Shifts the document to wherever "page down" is, as well as moving the cursor position.
     **/
    this.gotoPageDown = function() {
       this.$moveByPage(1, false);
    };

    /**
     * Shifts the document to wherever "page up" is, as well as moving the cursor position.
     **/
    this.gotoPageUp = function() {
        this.$moveByPage(-1, false);
    };

    /**
     * Scrolls the document to wherever "page down" is, without changing the cursor position.
     **/
    this.scrollPageDown = function() {
        this.$moveByPage(1);
    };

    /**
     * Scrolls the document to wherever "page up" is, without changing the cursor position.
     **/
    this.scrollPageUp = function() {
        this.$moveByPage(-1);
    };

    /**
     * Moves the editor to the specified row.
     * @related VirtualRenderer.scrollToRow
     **/
    this.scrollToRow = function(row) {
        this.renderer.scrollToRow(row);
    };

    /**
     * Scrolls to a line. If `center` is `true`, it puts the line in middle of screen (or attempts to).
     * @param {Number} line The line to scroll to
     * @param {Boolean} center If `true`
     * @param {Boolean} animate If `true` animates scrolling
     * @param {Function} callback Function to be called when the animation has finished
     *
     *
     * @related VirtualRenderer.scrollToLine
     **/
    this.scrollToLine = function(line, center, animate, callback) {
        this.renderer.scrollToLine(line, center, animate, callback);
    };

    /**
     * Attempts to center the current selection on the screen.
     **/
    this.centerSelection = function() {
        var range = this.getSelectionRange();
        var pos = {
            row: Math.floor(range.start.row + (range.end.row - range.start.row) / 2),
            column: Math.floor(range.start.column + (range.end.column - range.start.column) / 2)
        }
        this.renderer.alignCursor(pos, 0.5);
    };

    /**
     * Gets the current position of the cursor.
     * @returns {Object} An object that looks something like this:
     *
     * ```json
     * { row: currRow, column: currCol }
     * ```
     *
     * @related Selection.getCursor
     **/
    this.getCursorPosition = function() {
        return this.selection.getCursor();
    };

    /**
     * Returns the screen position of the cursor.
     * @returns {Number}
     * @related EditSession.documentToScreenPosition
     **/
    this.getCursorPositionScreen = function() {
        return this.session.documentToScreenPosition(this.getCursorPosition());
    };

    /**
     * {:Selection.getRange}
     * @returns {Range}
     * @related Selection.getRange
     **/
    this.getSelectionRange = function() {
        return this.selection.getRange();
    };


    /**
     * Selects all the text in editor.
     * @related Selection.selectAll
     **/
    this.selectAll = function() {
        this.$blockScrolling += 1;
        this.selection.selectAll();
        this.$blockScrolling -= 1;
    };

    /**
     * {:Selection.clearSelection}
     * @related Selection.clearSelection
     **/
    this.clearSelection = function() {
        this.selection.clearSelection();
    };

    /**
     * Moves the cursor to the specified row and column. Note that this does not de-select the current selection.
     * @param {Number} row The new row number
     * @param {Number} column The new column number
     *
     *
     * @related Selection.moveCursorTo
     **/
    this.moveCursorTo = function(row, column) {
        this.selection.moveCursorTo(row, column);
    };

    /**
     * Moves the cursor to the position indicated by `pos.row` and `pos.column`.
     * @param {Object} pos An object with two properties, row and column
     *
     *
     * @related Selection.moveCursorToPosition
     **/
    this.moveCursorToPosition = function(pos) {
        this.selection.moveCursorToPosition(pos);
    };

    /**
     * Moves the cursor's row and column to the next matching bracket.
     *
     **/
    this.jumpToMatching = function(select) {
        var cursor = this.getCursorPosition();

        var range = this.session.getBracketRange(cursor);
        if (!range) {
            range = this.find({
                needle: /[{}()\[\]]/g,
                preventScroll:true,
                start: {row: cursor.row, column: cursor.column - 1}
            });
            if (!range)
                return;
            var pos = range.start;
            if (pos.row == cursor.row && Math.abs(pos.column - cursor.column) < 2)
                range = this.session.getBracketRange(pos);
        }

        pos = range && range.cursor || pos;
        if (pos) {
            if (select) {
                if (range && range.isEqual(this.getSelectionRange()))
                    this.clearSelection();
                else
                    this.selection.selectTo(pos.row, pos.column);
            } else {
                this.clearSelection();
                this.moveCursorTo(pos.row, pos.column);
            }
        }
    };

    /**
     * Moves the cursor to the specified line number, and also into the indiciated column.
     * @param {Number} lineNumber The line number to go to
     * @param {Number} column A column number to go to
     * @param {Boolean} animate If `true` animates scolling
     *
     **/
    this.gotoLine = function(lineNumber, column, animate) {
        this.selection.clearSelection();
        this.session.unfold({row: lineNumber - 1, column: column || 0});

        this.$blockScrolling += 1;
        // todo: find a way to automatically exit multiselect mode
        this.exitMultiSelectMode && this.exitMultiSelectMode();
        this.moveCursorTo(lineNumber - 1, column || 0);
        this.$blockScrolling -= 1;

        if (!this.isRowFullyVisible(lineNumber - 1))
            this.scrollToLine(lineNumber - 1, true, animate);
    };

    /**
     * Moves the cursor to the specified row and column. Note that this does de-select the current selection.
     * @param {Number} row The new row number
     * @param {Number} column The new column number
     *
     *
     * @related Editor.moveCursorTo
     **/
    this.navigateTo = function(row, column) {
        this.clearSelection();
        this.moveCursorTo(row, column);
    };

    /**
     * Moves the cursor up in the document the specified number of times. Note that this does de-select the current selection.
     * @param {Number} times The number of times to change navigation
     *
     *
     **/
    this.navigateUp = function(times) {
        if (this.selection.isMultiLine() && !this.selection.isBackwards()) {
            var selectionStart = this.selection.anchor.getPosition();
            return this.moveCursorToPosition(selectionStart);
        }
        this.selection.clearSelection();
        times = times || 1;
        this.selection.moveCursorBy(-times, 0);
    };

    /**
     * Moves the cursor down in the document the specified number of times. Note that this does de-select the current selection.
     * @param {Number} times The number of times to change navigation
     *
     *
     **/
    this.navigateDown = function(times) {
        if (this.selection.isMultiLine() && this.selection.isBackwards()) {
            var selectionEnd = this.selection.anchor.getPosition();
            return this.moveCursorToPosition(selectionEnd);
        }
        this.selection.clearSelection();
        times = times || 1;
        this.selection.moveCursorBy(times, 0);
    };

    /**
     * Moves the cursor left in the document the specified number of times. Note that this does de-select the current selection.
     * @param {Number} times The number of times to change navigation
     *
     *
     **/
    this.navigateLeft = function(times) {
        if (!this.selection.isEmpty()) {
            var selectionStart = this.getSelectionRange().start;
            this.moveCursorToPosition(selectionStart);
        }
        else {
            times = times || 1;
            while (times--) {
                this.selection.moveCursorLeft();
            }
        }
        this.clearSelection();
    };

    /**
     * Moves the cursor right in the document the specified number of times. Note that this does de-select the current selection.
     * @param {Number} times The number of times to change navigation
     *
     *
     **/
    this.navigateRight = function(times) {
        if (!this.selection.isEmpty()) {
            var selectionEnd = this.getSelectionRange().end;
            this.moveCursorToPosition(selectionEnd);
        }
        else {
            times = times || 1;
            while (times--) {
                this.selection.moveCursorRight();
            }
        }
        this.clearSelection();
    };

    /**
     *
     * Moves the cursor to the start of the current line. Note that this does de-select the current selection.
     **/
    this.navigateLineStart = function() {
        this.selection.moveCursorLineStart();
        this.clearSelection();
    };

    /**
     *
     * Moves the cursor to the end of the current line. Note that this does de-select the current selection.
     **/
    this.navigateLineEnd = function() {
        this.selection.moveCursorLineEnd();
        this.clearSelection();
    };

    /**
     *
     * Moves the cursor to the end of the current file. Note that this does de-select the current selection.
     **/
    this.navigateFileEnd = function() {
        var scrollTop = this.renderer.scrollTop;
        this.selection.moveCursorFileEnd();
        this.clearSelection();
        this.renderer.animateScrolling(scrollTop);
    };

    /**
     *
     * Moves the cursor to the start of the current file. Note that this does de-select the current selection.
     **/
    this.navigateFileStart = function() {
        var scrollTop = this.renderer.scrollTop;
        this.selection.moveCursorFileStart();
        this.clearSelection();
        this.renderer.animateScrolling(scrollTop);
    };

    /**
     *
     * Moves the cursor to the word immediately to the right of the current position. Note that this does de-select the current selection.
     **/
    this.navigateWordRight = function() {
        this.selection.moveCursorWordRight();
        this.clearSelection();
    };

    /**
     *
     * Moves the cursor to the word immediately to the left of the current position. Note that this does de-select the current selection.
     **/
    this.navigateWordLeft = function() {
        this.selection.moveCursorWordLeft();
        this.clearSelection();
    };

    /**
     * Replaces the first occurance of `options.needle` with the value in `replacement`.
     * @param {String} replacement The text to replace with
     * @param {Object} options The [[Search `Search`]] options to use
     *
     *
     **/
    this.replace = function(replacement, options) {
        if (options)
            this.$search.set(options);

        var range = this.$search.find(this.session);
        var replaced = 0;
        if (!range)
            return replaced;

        if (this.$tryReplace(range, replacement)) {
            replaced = 1;
        }
        if (range !== null) {
            this.selection.setSelectionRange(range);
            this.renderer.scrollSelectionIntoView(range.start, range.end);
        }

        return replaced;
    };

    /**
     * Replaces all occurances of `options.needle` with the value in `replacement`.
     * @param {String} replacement The text to replace with
     * @param {Object} options The [[Search `Search`]] options to use
     *
     *
     **/
    this.replaceAll = function(replacement, options) {
        if (options) {
            this.$search.set(options);
        }

        var ranges = this.$search.findAll(this.session);
        var replaced = 0;
        if (!ranges.length)
            return replaced;

        this.$blockScrolling += 1;

        var selection = this.getSelectionRange();
        this.clearSelection();
        this.selection.moveCursorTo(0, 0);

        for (var i = ranges.length - 1; i >= 0; --i) {
            if(this.$tryReplace(ranges[i], replacement)) {
                replaced++;
            }
        }

        this.selection.setSelectionRange(selection);
        this.$blockScrolling -= 1;

        return replaced;
    };

    this.$tryReplace = function(range, replacement) {
        var input = this.session.getTextRange(range);
        replacement = this.$search.replace(input, replacement);
        if (replacement !== null) {
            range.end = this.session.replace(range, replacement);
            return range;
        } else {
            return null;
        }
    };

    /**
     * {:Search.getOptions} For more information on `options`, see [[Search `Search`]].
     * @related Search.getOptions
     * @returns {Object}
     **/
    this.getLastSearchOptions = function() {
        return this.$search.getOptions();
    };

    /**
     * Attempts to find `needle` within the document. For more information on `options`, see [[Search `Search`]].
     * @param {String} needle The text to search for (optional)
     * @param {Object} options An object defining various search properties
     * @param {Boolean} animate If `true` animate scrolling
     *
     *
     * @related Search.find
     **/
    this.find = function(needle, options, animate) {
        if (!options)
            options = {};

        if (typeof needle == "string" || needle instanceof RegExp)
            options.needle = needle;
        else if (typeof needle == "object")
            oop.mixin(options, needle);

        var range = this.selection.getRange();
        if (options.needle == null) {
            needle = this.session.getTextRange(range)
                || this.$search.$options.needle;
            if (!needle) {
                range = this.session.getWordRange(range.start.row, range.start.column);
                needle = this.session.getTextRange(range);
            }
            this.$search.set({needle: needle});
        }

        this.$search.set(options);
        if (!options.start)
            this.$search.set({start: range});

        var newRange = this.$search.find(this.session);
        if (options.preventScroll)
            return newRange;
        if (newRange) {
            this.revealRange(newRange, animate);
            return newRange;
        }
        // clear selection if nothing is found
        if (options.backwards)
            range.start = range.end;
        else
            range.end = range.start;
        this.selection.setRange(range);
    };

    /**
     * Performs another search for `needle` in the document. For more information on `options`, see [[Search `Search`]].
     * @param {Object} options search options
     * @param {Boolean} animate If `true` animate scrolling
     *
     *
     * @related Editor.find
     **/
    this.findNext = function(options, animate) {
        this.find({skipCurrent: true, backwards: false}, options, animate);
    };

    /**
     * Performs a search for `needle` backwards. For more information on `options`, see [[Search `Search`]].
     * @param {Object} options search options
     * @param {Boolean} animate If `true` animate scrolling
     *
     *
     * @related Editor.find
     **/
    this.findPrevious = function(options, animate) {
        this.find(options, {skipCurrent: true, backwards: true}, animate);
    };

    this.revealRange = function(range, animate) {
        this.$blockScrolling += 1;
        this.session.unfold(range);
        this.selection.setSelectionRange(range);
        this.$blockScrolling -= 1;

        var scrollTop = this.renderer.scrollTop;
        this.renderer.scrollSelectionIntoView(range.start, range.end, 0.5);
        if (animate != false)
            this.renderer.animateScrolling(scrollTop);
    };

    /**
     * {:UndoManager.undo}
     * @related UndoManager.undo
     **/
    this.undo = function() {
        this.$blockScrolling++;
        this.session.getUndoManager().undo();
        this.$blockScrolling--;
        this.renderer.scrollCursorIntoView(null, 0.5);
    };

    /**
     * {:UndoManager.redo}
     * @related UndoManager.redo
     **/
    this.redo = function() {
        this.$blockScrolling++;
        this.session.getUndoManager().redo();
        this.$blockScrolling--;
        this.renderer.scrollCursorIntoView(null, 0.5);
    };

    /**
     *
     * Cleans up the entire editor.
     **/
    this.destroy = function() {
        this.renderer.destroy();
        this._emit("destroy", this);
    };

    /**
     * Enables automatic scrolling of the cursor into view when editor itself is inside scrollable element
     * @param {Boolean} enable default true
     **/
    this.setAutoScrollEditorIntoView = function(enable) {
        if (enable === false)
            return;
        var rect;
        var self = this;
        var shouldScroll = false;
        if (!this.$scrollAnchor)
            this.$scrollAnchor = document.createElement("div");
        var scrollAnchor = this.$scrollAnchor;
        scrollAnchor.style.cssText = "position:absolute";
        this.container.insertBefore(scrollAnchor, this.container.firstChild);
        var onChangeSelection = this.on("changeSelection", function() {
            shouldScroll = true;
        });
        // needed to not trigger sync reflow
        var onBeforeRender = this.renderer.on("beforeRender", function() {
            if (shouldScroll)
                rect = self.renderer.container.getBoundingClientRect();
        });
        var onAfterRender = this.renderer.on("afterRender", function() {
            if (shouldScroll && rect && self.isFocused()) {
                var renderer = self.renderer;
                var pos = renderer.$cursorLayer.$pixelPos;
                var config = renderer.layerConfig;
                var top = pos.top - config.offset;
                if (pos.top >= 0 && top + rect.top < 0) {
                    shouldScroll = true;
                } else if (pos.top < config.height &&
                    pos.top + rect.top + config.lineHeight > window.innerHeight) {
                    shouldScroll = false;
                } else {
                    shouldScroll = null;
                }
                if (shouldScroll != null) {
                    scrollAnchor.style.top = top + "px";
                    scrollAnchor.style.left = pos.left + "px";
                    scrollAnchor.style.height = config.lineHeight + "px";
                    scrollAnchor.scrollIntoView(shouldScroll);
                }
                shouldScroll = rect = null;
            }
        });
        this.setAutoScrollEditorIntoView = function(enable) {
            if (enable === true)
                return;
            delete this.setAutoScrollEditorIntoView;
            this.removeEventListener("changeSelection", onChangeSelection);
            this.renderer.removeEventListener("afterRender", onAfterRender);
            this.renderer.removeEventListener("beforeRender", onBeforeRender);
        };
    };


    this.$resetCursorStyle = function() {
        var style = this.$cursorStyle || "ace";
        var cursorLayer = this.renderer.$cursorLayer;
        if (!cursorLayer)
            return;
        cursorLayer.setSmoothBlinking(style == "smooth");
        cursorLayer.isBlinking = !this.$readOnly && style != "wide";
    };

}).call(Editor.prototype);



config.defineOptions(Editor.prototype, "editor", {
    selectionStyle: {
        set: function(style) {
            this.onSelectionChange();
            this._emit("changeSelectionStyle", {data: style});
        },
        initialValue: "line"
    },
    highlightActiveLine: {
        set: function() {this.$updateHighlightActiveLine();},
        initialValue: true
    },
    highlightSelectedWord: {
        set: function(shouldHighlight) {this.$onSelectionChange();},
        initialValue: true
    },
    readOnly: {
        set: function(readOnly) { this.$resetCursorStyle(); },
        initialValue: false
    },
    cursorStyle: {
        set: function(val) { this.$resetCursorStyle(); },
        values: ["ace", "slim", "smooth", "wide"],
        initialValue: "ace"
    },
    mergeUndoDeltas: {
        values: [false, true, "always"],
        initialValue: true
    },
    behavioursEnabled: {initialValue: true},
    wrapBehavioursEnabled: {initialValue: true},

    hScrollBarAlwaysVisible: "renderer",
    vScrollBarAlwaysVisible: "renderer",
    highlightGutterLine: "renderer",
    animatedScroll: "renderer",
    showInvisibles: "renderer",
    showPrintMargin: "renderer",
    printMarginColumn: "renderer",
    printMargin: "renderer",
    fadeFoldWidgets: "renderer",
    showFoldWidgets: "renderer",
    showGutter: "renderer",
    displayIndentGuides: "renderer",
    fontSize: "renderer",
    fontFamily: "renderer",
    maxLines: "renderer",
    minLines: "renderer",
    scrollPastEnd: "renderer",
    fixedWidthGutter: "renderer",

    scrollSpeed: "$mouseHandler",
    dragDelay: "$mouseHandler",
    focusTimout: "$mouseHandler",

    firstLineNumber: "session",
    overwrite: "session",
    newLineMode: "session",
    useWorker: "session",
    useSoftTabs: "session",
    tabSize: "session",
    wrap: "session",
    foldStyle: "session"
});

exports.Editor = Editor;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/undomanager',['require','exports','module'],function(require, exports, module) {


/**
 * 
 *
 * This object maintains the undo stack for an [[EditSession `EditSession`]].
 * @class UndoManager
 **/

/**
 * 
 * 
 * Resets the current undo state and creates a new `UndoManager`.
 * 
 * @constructor
 **/
var UndoManager = function() {
    this.reset();
};

(function() {

    /**
    * Provides a means for implementing your own undo manager. `options` has one property, `args`, an [[Array `Array`]], with two elements:
    *
    * - `args[0]` is an array of deltas
    * - `args[1]` is the document to associate with
    *
    * @param {Object} options Contains additional properties
    *
    **/
    this.execute = function(options) {
        var deltas = options.args[0];
        this.$doc  = options.args[1];
        if (options.merge && this.hasUndo()){
            deltas = this.$undoStack.pop().concat(deltas);
        }
        this.$undoStack.push(deltas);
        this.$redoStack = [];

        if (this.dirtyCounter < 0) {
            // The user has made a change after undoing past the last clean state.
            // We can never get back to a clean state now until markClean() is called.
            this.dirtyCounter = NaN;
        }
        this.dirtyCounter++;
    };

    /**
    * [Perform an undo operation on the document, reverting the last change.]{: #UndoManager.undo}
    * @param {Boolean} dontSelect {:dontSelect}
    *
    * 
    * @returns {Range} The range of the undo.
    **/
    this.undo = function(dontSelect) {
        var deltas = this.$undoStack.pop();
        var undoSelectionRange = null;
        if (deltas) {
            undoSelectionRange =
                this.$doc.undoChanges(deltas, dontSelect);
            this.$redoStack.push(deltas);
            this.dirtyCounter--;
        }

        return undoSelectionRange;
    };

    /**
    * [Perform a redo operation on the document, reimplementing the last change.]{: #UndoManager.redo}
    * @param {Boolean} dontSelect {:dontSelect}
    *
    * 
    **/
    this.redo = function(dontSelect) {
        var deltas = this.$redoStack.pop();
        var redoSelectionRange = null;
        if (deltas) {
            redoSelectionRange =
                this.$doc.redoChanges(deltas, dontSelect);
            this.$undoStack.push(deltas);
            this.dirtyCounter++;
        }

        return redoSelectionRange;
    };

    /**
    * 
    * Destroys the stack of undo and redo redo operations.
    **/
    this.reset = function() {
        this.$undoStack = [];
        this.$redoStack = [];
        this.dirtyCounter = 0;
    };

    /**
    * 
    * Returns `true` if there are undo operations left to perform.
    * @returns {Boolean}
    **/
    this.hasUndo = function() {
        return this.$undoStack.length > 0;
    };

    /**
    * 
    * Returns `true` if there are redo operations left to perform.
    * @returns {Boolean}
    **/
    this.hasRedo = function() {
        return this.$redoStack.length > 0;
    };

    /**
    *
    * Marks the current status clean
    **/
    this.markClean = function() {
        this.dirtyCounter = 0;
    };

    /**
    *
    * Returns if the current status is clean
    * @returns {Boolean}
    **/
    this.isClean = function() {
        return this.dirtyCounter === 0;
    };

}).call(UndoManager.prototype);

exports.UndoManager = UndoManager;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/layer/gutter',['require','exports','module','../lib/dom','../lib/oop','../lib/lang','../lib/event_emitter'],function(require, exports, module) {


var dom = require("../lib/dom");
var oop = require("../lib/oop");
var lang = require("../lib/lang");
var EventEmitter = require("../lib/event_emitter").EventEmitter;

var Gutter = function(parentEl) {
    this.element = dom.createElement("div");
    this.element.className = "ace_layer ace_gutter-layer";
    parentEl.appendChild(this.element);
    this.setShowFoldWidgets(this.$showFoldWidgets);
    
    this.gutterWidth = 0;

    this.$annotations = [];
    this.$updateAnnotations = this.$updateAnnotations.bind(this);

    this.$cells = [];
};

(function() {

    oop.implement(this, EventEmitter);

    this.setSession = function(session) {
        if (this.session)
            this.session.removeEventListener("change", this.$updateAnnotations);
        this.session = session;
        session.on("change", this.$updateAnnotations);
    };

    this.addGutterDecoration = function(row, className){
        if (window.console)
            console.warn && console.warn("deprecated use session.addGutterDecoration");
        this.session.addGutterDecoration(row, className);
    };

    this.removeGutterDecoration = function(row, className){
        if (window.console)
            console.warn && console.warn("deprecated use session.removeGutterDecoration");
        this.session.removeGutterDecoration(row, className);
    };

    this.setAnnotations = function(annotations) {
        // iterate over sparse array
        this.$annotations = []
        var rowInfo, row;
        for (var i = 0; i < annotations.length; i++) {
            var annotation = annotations[i];
            var row = annotation.row;
            var rowInfo = this.$annotations[row];
            if (!rowInfo)
                rowInfo = this.$annotations[row] = {text: []};
           
            var annoText = annotation.text;
            annoText = annoText ? lang.escapeHTML(annoText) : annotation.html || "";

            if (rowInfo.text.indexOf(annoText) === -1)
                rowInfo.text.push(annoText);

            var type = annotation.type;
            if (type == "error")
                rowInfo.className = " ace_error";
            else if (type == "warning" && rowInfo.className != " ace_error")
                rowInfo.className = " ace_warning";
            else if (type == "info" && (!rowInfo.className))
                rowInfo.className = " ace_info";
        }
    };

    this.$updateAnnotations = function (e) {
        if (!this.$annotations.length)
            return;
        var delta = e.data;
        var range = delta.range;
        var firstRow = range.start.row;
        var len = range.end.row - firstRow;
        if (len === 0) {
            // do nothing
        } else if (delta.action == "removeText" || delta.action == "removeLines") {
            this.$annotations.splice(firstRow, len + 1, null);
        } else {
            var args = Array(len + 1);
            args.unshift(firstRow, 1);
            this.$annotations.splice.apply(this.$annotations, args);
        }
    };

    this.update = function(config) {
        var firstRow = config.firstRow;
        var lastRow = config.lastRow;
        var fold = this.session.getNextFoldLine(firstRow);
        var foldStart = fold ? fold.start.row : Infinity;
        var foldWidgets = this.$showFoldWidgets && this.session.foldWidgets;
        var breakpoints = this.session.$breakpoints;
        var decorations = this.session.$decorations;
        var firstLineNumber = this.session.$firstLineNumber;
        var lastLineNumber = 0;

        var cell = null;
        var index = -1;
        var row = firstRow;
        while (true) {
            if (row > foldStart) {
                row = fold.end.row + 1;
                fold = this.session.getNextFoldLine(row, fold);
                foldStart = fold ? fold.start.row : Infinity;
            }
            if (row > lastRow) {
                while (this.$cells.length > index + 1) {
                    cell = this.$cells.pop();
                    this.element.removeChild(cell.element);
                }
                break;
            }

            cell = this.$cells[++index];
            if (!cell) {
                cell = {element: null, textNode: null, foldWidget: null};
                cell.element = dom.createElement("div");
                cell.textNode = document.createTextNode('');
                cell.element.appendChild(cell.textNode);
                this.element.appendChild(cell.element);
                this.$cells[index] = cell;
            }

            var className = "ace_gutter-cell";
            if (breakpoints[row])
                className += breakpoints[row];
            if (decorations[row])
                className += decorations[row];
            if (this.$annotations[row])
                className += this.$annotations[row].className;
            if (cell.element.className != className)
                cell.element.className = className;

            var height = this.session.getRowLength(row) * config.lineHeight + "px";
            if (height != cell.element.style.height)
                cell.element.style.height = height;

            var text = lastLineNumber = row + firstLineNumber;
            if (text != cell.textNode.data)
                cell.textNode.data  = text;

            if (foldWidgets) {
                var c = foldWidgets[row];
                // check if cached value is invalidated and we need to recompute
                if (c == null)
                    c = foldWidgets[row] = this.session.getFoldWidget(row);
            }

            if (c) {
                if (!cell.foldWidget) {
                    cell.foldWidget = dom.createElement("span");
                    cell.element.appendChild(cell.foldWidget);
                }
                var className = "ace_fold-widget ace_" + c;
                if (c == "start" && row == foldStart && row < fold.end.row)
                    className += " ace_closed";
                else
                    className += " ace_open";
                if (cell.foldWidget.className != className)
                    cell.foldWidget.className = className;

                var height = config.lineHeight + "px";
                if (cell.foldWidget.style.height != height)
                    cell.foldWidget.style.height = height;
            } else {
                if (cell.foldWidget != null) {
                    cell.element.removeChild(cell.foldWidget);
                    cell.foldWidget = null;
                }
            }

            row++;
        }

        this.element.style.height = config.minHeight + "px";

        if (this.$fixedWidth || this.session.$useWrapMode)
            lastLineNumber = this.session.getLength();

        var gutterWidth = lastLineNumber.toString().length * config.characterWidth;
        var padding = this.$padding || this.$computePadding();
        gutterWidth += padding.left + padding.right;
        if (gutterWidth !== this.gutterWidth && !isNaN(gutterWidth)) {
            this.gutterWidth = gutterWidth;
            this.element.style.width = Math.ceil(this.gutterWidth) + "px";
            this._emit("changeGutterWidth", gutterWidth);
        }
    };

    this.$fixedWidth = false;
    
    this.$showFoldWidgets = true;
    this.setShowFoldWidgets = function(show) {
        if (show)
            dom.addCssClass(this.element, "ace_folding-enabled");
        else
            dom.removeCssClass(this.element, "ace_folding-enabled");

        this.$showFoldWidgets = show;
        this.$padding = null;
    };
    
    this.getShowFoldWidgets = function() {
        return this.$showFoldWidgets;
    };

    this.$computePadding = function() {
        if (!this.element.firstChild)
            return {left: 0, right: 0};
        var style = dom.computedStyle(this.element.firstChild);
        this.$padding = {};
        this.$padding.left = parseInt(style.paddingLeft) + 1 || 0;
        this.$padding.right = parseInt(style.paddingRight) || 0;
        return this.$padding;
    };

    this.getRegion = function(point) {
        var padding = this.$padding || this.$computePadding();
        var rect = this.element.getBoundingClientRect();
        if (point.x < padding.left + rect.left)
            return "markers";
        if (this.$showFoldWidgets && point.x > rect.right - padding.right)
            return "foldWidgets";
    };

}).call(Gutter.prototype);

exports.Gutter = Gutter;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/layer/marker',['require','exports','module','../range','../lib/dom'],function(require, exports, module) {


var Range = require("../range").Range;
var dom = require("../lib/dom");

var Marker = function(parentEl) {
    this.element = dom.createElement("div");
    this.element.className = "ace_layer ace_marker-layer";
    parentEl.appendChild(this.element);
};

(function() {

    this.$padding = 0;

    this.setPadding = function(padding) {
        this.$padding = padding;
    };
    this.setSession = function(session) {
        this.session = session;
    };
    
    this.setMarkers = function(markers) {
        this.markers = markers;
    };

    this.update = function(config) {
        var config = config || this.config;
        if (!config)
            return;

        this.config = config;


        var html = [];
        for (var key in this.markers) {
            var marker = this.markers[key];

            if (!marker.range) {
                marker.update(html, this, this.session, config);
                continue;
            }

            var range = marker.range.clipRows(config.firstRow, config.lastRow);
            if (range.isEmpty()) continue;

            range = range.toScreenRange(this.session);
            if (marker.renderer) {
                var top = this.$getTop(range.start.row, config);
                var left = this.$padding + range.start.column * config.characterWidth;
                marker.renderer(html, range, left, top, config);
            } else if (marker.type == "fullLine") {
                this.drawFullLineMarker(html, range, marker.clazz, config);
            } else if (marker.type == "screenLine") {
                this.drawScreenLineMarker(html, range, marker.clazz, config);
            } else if (range.isMultiLine()) {
                if (marker.type == "text")
                    this.drawTextMarker(html, range, marker.clazz, config);
                else
                    this.drawMultiLineMarker(html, range, marker.clazz, config);
            } else {
                this.drawSingleLineMarker(html, range, marker.clazz + " ace_start", config);
            }
        }
        this.element = dom.setInnerHtml(this.element, html.join(""));
    };

    this.$getTop = function(row, layerConfig) {
        return (row - layerConfig.firstRowScreen) * layerConfig.lineHeight;
    };

    // Draws a marker, which spans a range of text on multiple lines 
    this.drawTextMarker = function(stringBuilder, range, clazz, layerConfig, extraStyle) {
        // selection start
        var row = range.start.row;

        var lineRange = new Range(
            row, range.start.column,
            row, this.session.getScreenLastRowColumn(row)
        );
        this.drawSingleLineMarker(stringBuilder, lineRange, clazz + " ace_start", layerConfig, 1, extraStyle);

        // selection end
        row = range.end.row;
        lineRange = new Range(row, 0, row, range.end.column);
        this.drawSingleLineMarker(stringBuilder, lineRange, clazz, layerConfig, 0, extraStyle);

        for (row = range.start.row + 1; row < range.end.row; row++) {
            lineRange.start.row = row;
            lineRange.end.row = row;
            lineRange.end.column = this.session.getScreenLastRowColumn(row);
            this.drawSingleLineMarker(stringBuilder, lineRange, clazz, layerConfig, 1, extraStyle);
        }
    };

    // Draws a multi line marker, where lines span the full width
    this.drawMultiLineMarker = function(stringBuilder, range, clazz, config, extraStyle) {
        // from selection start to the end of the line
        var padding = this.$padding;
        var height = config.lineHeight;
        var top = this.$getTop(range.start.row, config);
        var left = padding + range.start.column * config.characterWidth;
        extraStyle = extraStyle || "";

        stringBuilder.push(
            "<div class='", clazz, " ace_start' style='",
            "height:", height, "px;",
            "right:0;",
            "top:", top, "px;",
            "left:", left, "px;", extraStyle, "'></div>"
        );

        // from start of the last line to the selection end
        top = this.$getTop(range.end.row, config);
        var width = range.end.column * config.characterWidth;

        stringBuilder.push(
            "<div class='", clazz, "' style='",
            "height:", height, "px;",
            "width:", width, "px;",
            "top:", top, "px;",
            "left:", padding, "px;", extraStyle, "'></div>"
        );

        // all the complete lines
        height = (range.end.row - range.start.row - 1) * config.lineHeight;
        if (height < 0)
            return;
        top = this.$getTop(range.start.row + 1, config);

        stringBuilder.push(
            "<div class='", clazz, "' style='",
            "height:", height, "px;",
            "right:0;",
            "top:", top, "px;",
            "left:", padding, "px;", extraStyle, "'></div>"
        );
    };

    // Draws a marker which covers part or whole width of a single screen line
    this.drawSingleLineMarker = function(stringBuilder, range, clazz, config, extraLength, extraStyle) {
        var height = config.lineHeight;
        var width = (range.end.column + (extraLength || 0) - range.start.column) * config.characterWidth;

        var top = this.$getTop(range.start.row, config);
        var left = this.$padding + range.start.column * config.characterWidth;

        stringBuilder.push(
            "<div class='", clazz, "' style='",
            "height:", height, "px;",
            "width:", width, "px;",
            "top:", top, "px;",
            "left:", left, "px;", extraStyle || "", "'></div>"
        );
    };

    this.drawFullLineMarker = function(stringBuilder, range, clazz, config, extraStyle) {
        var top = this.$getTop(range.start.row, config);
        var height = config.lineHeight;
        if (range.start.row != range.end.row)
            height += this.$getTop(range.end.row, config) - top;

        stringBuilder.push(
            "<div class='", clazz, "' style='",
            "height:", height, "px;",
            "top:", top, "px;",
            "left:0;right:0;", extraStyle || "", "'></div>"
        );
    };
    
    this.drawScreenLineMarker = function(stringBuilder, range, clazz, config, extraStyle) {
        var top = this.$getTop(range.start.row, config);
        var height = config.lineHeight;

        stringBuilder.push(
            "<div class='", clazz, "' style='",
            "height:", height, "px;",
            "top:", top, "px;",
            "left:0;right:0;", extraStyle || "", "'></div>"
        );
    };

}).call(Marker.prototype);

exports.Marker = Marker;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/layer/text',['require','exports','module','../lib/oop','../lib/dom','../lib/lang','../lib/useragent','../lib/event_emitter'],function(require, exports, module) {


var oop = require("../lib/oop");
var dom = require("../lib/dom");
var lang = require("../lib/lang");
var useragent = require("../lib/useragent");
var EventEmitter = require("../lib/event_emitter").EventEmitter;

var Text = function(parentEl) {
    this.element = dom.createElement("div");
    this.element.className = "ace_layer ace_text-layer";
    parentEl.appendChild(this.element);

    this.$characterSize = {width: 0, height: 0};
    this.checkForSizeChanges();
    this.$pollSizeChanges();
};

(function() {

    oop.implement(this, EventEmitter);

    this.EOF_CHAR = "\xB6"; //"&para;";
    this.EOL_CHAR = "\xAC"; //"&not;";
    this.TAB_CHAR = "\u2192"; //"&rarr;" "\u21E5";
    this.SPACE_CHAR = "\xB7"; //"&middot;";
    this.$padding = 0;

    this.setPadding = function(padding) {
        this.$padding = padding;
        this.element.style.padding = "0 " + padding + "px";
    };

    this.getLineHeight = function() {
        return this.$characterSize.height || 1;
    };

    this.getCharacterWidth = function() {
        return this.$characterSize.width || 1;
    };

    this.checkForSizeChanges = function() {
        var size = this.$measureSizes();
        if (size && (this.$characterSize.width !== size.width || this.$characterSize.height !== size.height)) {
            this.$measureNode.style.fontWeight = "bold";
            var boldSize = this.$measureSizes();
            this.$measureNode.style.fontWeight = "";
            this.$characterSize = size;
            this.allowBoldFonts = boldSize && boldSize.width === size.width && boldSize.height === size.height;
            this._emit("changeCharacterSize", {data: size});
        }
    };

    this.$pollSizeChanges = function() {
        var self = this;
        this.$pollSizeChangesTimer = setInterval(function() {
            self.checkForSizeChanges();
        }, 500);
    };

    this.$fontStyles = {
        fontFamily : 1,
        fontSize : 1,
        fontWeight : 1,
        fontStyle : 1,
        lineHeight : 1
    };

    this.$measureSizes = useragent.isIE || useragent.isOldGecko ? function() {
        var n = 1000;
        if (!this.$measureNode) {
            var measureNode = this.$measureNode = dom.createElement("div");
            var style = measureNode.style;

            style.width = style.height = "auto";
            style.left = style.top = (-n * 40)  + "px";

            style.visibility = "hidden";
            style.position = "fixed";
            style.overflow = "visible";
            style.whiteSpace = "nowrap";

            // in FF 3.6 monospace fonts can have a fixed sub pixel width.
            // that's why we have to measure many characters
            // Note: characterWidth can be a float!
            measureNode.innerHTML = lang.stringRepeat("Xy", n);

            if (this.element.ownerDocument.body) {
                this.element.ownerDocument.body.appendChild(measureNode);
            } else {
                var container = this.element.parentNode;
                while (!dom.hasCssClass(container, "ace_editor"))
                    container = container.parentNode;
                container.appendChild(measureNode);
            }
        }

        // Size and width can be null if the editor is not visible or
        // detached from the document
        if (!this.element.offsetWidth)
            return null;

        var style = this.$measureNode.style;
        var computedStyle = dom.computedStyle(this.element);
        for (var prop in this.$fontStyles)
            style[prop] = computedStyle[prop];

        var size = {
            height: this.$measureNode.offsetHeight,
            width: this.$measureNode.offsetWidth / (n * 2)
        };

        // Size and width can be null if the editor is not visible or
        // detached from the document
        if (size.width == 0 || size.height == 0)
            return null;

        return size;
    }
    : function() {
        if (!this.$measureNode) {
            var measureNode = this.$measureNode = dom.createElement("div");
            var style = measureNode.style;

            style.width = style.height = "auto";
            style.left = style.top = -100 + "px";

            style.visibility = "hidden";
            style.position = "fixed";
            style.overflow = "visible";
            style.whiteSpace = "nowrap";

            // fixes fractional fixed-width fonts; see http://git.io/CavZNw
            measureNode.innerHTML = lang.stringRepeat("X", 100);

            var container = this.element.parentNode;
            while (container && !dom.hasCssClass(container, "ace_editor"))
                container = container.parentNode;

            if (!container)
                return this.$measureNode = null;

            container.appendChild(measureNode);
        }

        var rect = this.$measureNode.getBoundingClientRect();

        var size = {
            height: rect.height,
            width: rect.width / 100
        };

        // Size and width can be null if the editor is not visible or
        // detached from the document
        if (size.width == 0 || size.height == 0)
            return null;

        return size;
    };

    this.setSession = function(session) {
        this.session = session;
        this.$computeTabString();
    };

    this.showInvisibles = false;
    this.setShowInvisibles = function(showInvisibles) {
        if (this.showInvisibles == showInvisibles)
            return false;

        this.showInvisibles = showInvisibles;
        this.$computeTabString();
        return true;
    };

    this.displayIndentGuides = true;
    this.setDisplayIndentGuides = function(display) {
        if (this.displayIndentGuides == display)
            return false;

        this.displayIndentGuides = display;
        this.$computeTabString();
        return true;
    };

    this.$tabStrings = [];
    this.onChangeTabSize =
    this.$computeTabString = function() {
        var tabSize = this.session.getTabSize();
        this.tabSize = tabSize;
        var tabStr = this.$tabStrings = [0];
        for (var i = 1; i < tabSize + 1; i++) {
            if (this.showInvisibles) {
                tabStr.push("<span class='ace_invisible'>"
                    + this.TAB_CHAR
                    + lang.stringRepeat("\xa0", i - 1)
                    + "</span>");
            } else {
                tabStr.push(lang.stringRepeat("\xa0", i));
            }
        }
        if (this.displayIndentGuides) {
            this.$indentGuideRe =  /\s\S| \t|\t |\s$/;
            var className = "ace_indent-guide";
            if (this.showInvisibles) {
                className += " ace_invisible";
                var spaceContent = lang.stringRepeat(this.SPACE_CHAR, this.tabSize);
                var tabContent = this.TAB_CHAR + lang.stringRepeat("\xa0", this.tabSize - 1);
            } else{
                var spaceContent = lang.stringRepeat("\xa0", this.tabSize);
                var tabContent = spaceContent;
            }

            this.$tabStrings[" "] = "<span class='" + className + "'>" + spaceContent + "</span>";
            this.$tabStrings["\t"] = "<span class='" + className + "'>" + tabContent + "</span>";
        }
    };

    this.updateLines = function(config, firstRow, lastRow) {
        // Due to wrap line changes there can be new lines if e.g.
        // the line to updated wrapped in the meantime.
        if (this.config.lastRow != config.lastRow ||
            this.config.firstRow != config.firstRow) {
            this.scrollLines(config);
        }
        this.config = config;

        var first = Math.max(firstRow, config.firstRow);
        var last = Math.min(lastRow, config.lastRow);

        var lineElements = this.element.childNodes;
        var lineElementsIdx = 0;

        for (var row = config.firstRow; row < first; row++) {
            var foldLine = this.session.getFoldLine(row);
            if (foldLine) {
                if (foldLine.containsRow(first)) {
                    first = foldLine.start.row;
                    break;
                } else {
                    row = foldLine.end.row;
                }
            }
            lineElementsIdx ++;
        }

        var row = first;
        var foldLine = this.session.getNextFoldLine(row);
        var foldStart = foldLine ? foldLine.start.row : Infinity;

        while (true) {
            if (row > foldStart) {
                row = foldLine.end.row+1;
                foldLine = this.session.getNextFoldLine(row, foldLine);
                foldStart = foldLine ? foldLine.start.row :Infinity;
            }
            if (row > last)
                break;

            var lineElement = lineElements[lineElementsIdx++];
            if (lineElement) {
                var html = [];
                this.$renderLine(
                    html, row, !this.$useLineGroups(), row == foldStart ? foldLine : false
                );
                dom.setInnerHtml(lineElement, html.join(""));
            }
            row++;
        }
    };

    this.scrollLines = function(config) {
        var oldConfig = this.config;
        this.config = config;

        if (!oldConfig || oldConfig.lastRow < config.firstRow)
            return this.update(config);

        if (config.lastRow < oldConfig.firstRow)
            return this.update(config);

        var el = this.element;
        if (oldConfig.firstRow < config.firstRow)
            for (var row=this.session.getFoldedRowCount(oldConfig.firstRow, config.firstRow - 1); row>0; row--)
                el.removeChild(el.firstChild);

        if (oldConfig.lastRow > config.lastRow)
            for (var row=this.session.getFoldedRowCount(config.lastRow + 1, oldConfig.lastRow); row>0; row--)
                el.removeChild(el.lastChild);

        if (config.firstRow < oldConfig.firstRow) {
            var fragment = this.$renderLinesFragment(config, config.firstRow, oldConfig.firstRow - 1);
            if (el.firstChild)
                el.insertBefore(fragment, el.firstChild);
            else
                el.appendChild(fragment);
        }

        if (config.lastRow > oldConfig.lastRow) {
            var fragment = this.$renderLinesFragment(config, oldConfig.lastRow + 1, config.lastRow);
            el.appendChild(fragment);
        }
    };

    this.$renderLinesFragment = function(config, firstRow, lastRow) {
        var fragment = this.element.ownerDocument.createDocumentFragment();
        var row = firstRow;
        var foldLine = this.session.getNextFoldLine(row);
        var foldStart = foldLine ? foldLine.start.row : Infinity;

        while (true) {
            if (row > foldStart) {
                row = foldLine.end.row+1;
                foldLine = this.session.getNextFoldLine(row, foldLine);
                foldStart = foldLine ? foldLine.start.row : Infinity;
            }
            if (row > lastRow)
                break;

            var container = dom.createElement("div");

            var html = [];
            // Get the tokens per line as there might be some lines in between
            // beeing folded.
            this.$renderLine(html, row, false, row == foldStart ? foldLine : false);

            // don't use setInnerHtml since we are working with an empty DIV
            container.innerHTML = html.join("");
            if (this.$useLineGroups()) {
                container.className = 'ace_line_group';
                fragment.appendChild(container);
            } else {
                var lines = container.childNodes
                while(lines.length)
                    fragment.appendChild(lines[0]);
            }

            row++;
        }
        return fragment;
    };

    this.update = function(config) {
        this.config = config;

        var html = [];
        var firstRow = config.firstRow, lastRow = config.lastRow;

        var row = firstRow;
        var foldLine = this.session.getNextFoldLine(row);
        var foldStart = foldLine ? foldLine.start.row : Infinity;

        while (true) {
            if (row > foldStart) {
                row = foldLine.end.row+1;
                foldLine = this.session.getNextFoldLine(row, foldLine);
                foldStart = foldLine ? foldLine.start.row :Infinity;
            }
            if (row > lastRow)
                break;

            if (this.$useLineGroups())
                html.push("<div class='ace_line_group'>")

            this.$renderLine(html, row, false, row == foldStart ? foldLine : false);

            if (this.$useLineGroups())
                html.push("</div>"); // end the line group

            row++;
        }
        this.element = dom.setInnerHtml(this.element, html.join(""));
    };

    this.$textToken = {
        "text": true,
        "rparen": true,
        "lparen": true
    };

    this.$renderToken = function(stringBuilder, screenColumn, token, value) {
        var self = this;
        var replaceReg = /\t|&|<|( +)|([\x00-\x1f\x80-\xa0\u1680\u180E\u2000-\u200f\u2028\u2029\u202F\u205F\u3000\uFEFF])|[\u1100-\u115F\u11A3-\u11A7\u11FA-\u11FF\u2329-\u232A\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFB\u3000-\u303E\u3041-\u3096\u3099-\u30FF\u3105-\u312D\u3131-\u318E\u3190-\u31BA\u31C0-\u31E3\u31F0-\u321E\u3220-\u3247\u3250-\u32FE\u3300-\u4DBF\u4E00-\uA48C\uA490-\uA4C6\uA960-\uA97C\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFAFF\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFF01-\uFF60\uFFE0-\uFFE6]/g;
        var replaceFunc = function(c, a, b, tabIdx, idx4) {
            if (a) {
                return self.showInvisibles ?
                    "<span class='ace_invisible'>" + lang.stringRepeat(self.SPACE_CHAR, c.length) + "</span>" :
                    lang.stringRepeat("\xa0", c.length);
            } else if (c == "&") {
                return "&#38;";
            } else if (c == "<") {
                return "&#60;";
            } else if (c == "\t") {
                var tabSize = self.session.getScreenTabSize(screenColumn + tabIdx);
                screenColumn += tabSize - 1;
                return self.$tabStrings[tabSize];
            } else if (c == "\u3000") {
                // U+3000 is both invisible AND full-width, so must be handled uniquely
                var classToUse = self.showInvisibles ? "ace_cjk ace_invisible" : "ace_cjk";
                var space = self.showInvisibles ? self.SPACE_CHAR : "";
                screenColumn += 1;
                return "<span class='" + classToUse + "' style='width:" +
                    (self.config.characterWidth * 2) +
                    "px'>" + space + "</span>";
            } else if (b) {
                return "<span class='ace_invisible ace_invalid'>" + self.SPACE_CHAR + "</span>";
            } else {
                screenColumn += 1;
                return "<span class='ace_cjk' style='width:" +
                    (self.config.characterWidth * 2) +
                    "px'>" + c + "</span>";
            }
        };

        var output = value.replace(replaceReg, replaceFunc);

        if (!this.$textToken[token.type]) {
            var classes = "ace_" + token.type.replace(/\./g, " ace_");
            var style = "";
            if (token.type == "fold")
                style = " style='width:" + (token.value.length * this.config.characterWidth) + "px;' ";
            stringBuilder.push("<span class='", classes, "'", style, ">", output, "</span>");
        }
        else {
            stringBuilder.push(output);
        }
        return screenColumn + value.length;
    };

    this.renderIndentGuide = function(stringBuilder, value, max) {
        var cols = value.search(this.$indentGuideRe);
        if (cols <= 0 || cols >= max)
            return value;
        if (value[0] == " ") {
            cols -= cols % this.tabSize;
            stringBuilder.push(lang.stringRepeat(this.$tabStrings[" "], cols/this.tabSize));
            return value.substr(cols);
        } else if (value[0] == "\t") {
            stringBuilder.push(lang.stringRepeat(this.$tabStrings["\t"], cols));
            return value.substr(cols);
        }
        return value;
    };

    this.$renderWrappedLine = function(stringBuilder, tokens, splits, onlyContents) {
        var chars = 0;
        var split = 0;
        var splitChars = splits[0];
        var screenColumn = 0;

        for (var i = 0; i < tokens.length; i++) {
            var token = tokens[i];
            var value = token.value;
            if (i == 0 && this.displayIndentGuides) {
                chars = value.length;
                value = this.renderIndentGuide(stringBuilder, value, splitChars);
                if (!value)
                    continue;
                chars -= value.length;
            }

            if (chars + value.length < splitChars) {
                screenColumn = this.$renderToken(stringBuilder, screenColumn, token, value);
                chars += value.length;
            } else {
                while (chars + value.length >= splitChars) {
                    screenColumn = this.$renderToken(
                        stringBuilder, screenColumn,
                        token, value.substring(0, splitChars - chars)
                    );
                    value = value.substring(splitChars - chars);
                    chars = splitChars;

                    if (!onlyContents) {
                        stringBuilder.push("</div>",
                            "<div class='ace_line' style='height:",
                            this.config.lineHeight, "px'>"
                        );
                    }

                    split ++;
                    screenColumn = 0;
                    splitChars = splits[split] || Number.MAX_VALUE;
                }
                if (value.length != 0) {
                    chars += value.length;
                    screenColumn = this.$renderToken(
                        stringBuilder, screenColumn, token, value
                    );
                }
            }
        }
    };

    this.$renderSimpleLine = function(stringBuilder, tokens) {
        var screenColumn = 0;
        var token = tokens[0];
        var value = token.value;
        if (this.displayIndentGuides)
            value = this.renderIndentGuide(stringBuilder, value);
        if (value)
            screenColumn = this.$renderToken(stringBuilder, screenColumn, token, value);
        for (var i = 1; i < tokens.length; i++) {
            token = tokens[i];
            value = token.value;
            screenColumn = this.$renderToken(stringBuilder, screenColumn, token, value);
        }
    };

    // row is either first row of foldline or not in fold
    this.$renderLine = function(stringBuilder, row, onlyContents, foldLine) {
        if (!foldLine && foldLine != false)
            foldLine = this.session.getFoldLine(row);

        if (foldLine)
            var tokens = this.$getFoldLineTokens(row, foldLine);
        else
            var tokens = this.session.getTokens(row);


        if (!onlyContents) {
            stringBuilder.push(
                "<div class='ace_line' style='height:", this.config.lineHeight, "px'>"
            );
        }

        if (tokens.length) {
            var splits = this.session.getRowSplitData(row);
            if (splits && splits.length)
                this.$renderWrappedLine(stringBuilder, tokens, splits, onlyContents);
            else
                this.$renderSimpleLine(stringBuilder, tokens);
        }

        if (this.showInvisibles) {
            if (foldLine)
                row = foldLine.end.row

            stringBuilder.push(
                "<span class='ace_invisible'>",
                row == this.session.getLength() - 1 ? this.EOF_CHAR : this.EOL_CHAR,
                "</span>"
            );
        }
        if (!onlyContents)
            stringBuilder.push("</div>");
    };

    this.$getFoldLineTokens = function(row, foldLine) {
        var session = this.session;
        var renderTokens = [];

        function addTokens(tokens, from, to) {
            var idx = 0, col = 0;
            while ((col + tokens[idx].value.length) < from) {
                col += tokens[idx].value.length;
                idx++;

                if (idx == tokens.length)
                    return;
            }
            if (col != from) {
                var value = tokens[idx].value.substring(from - col);
                // Check if the token value is longer then the from...to spacing.
                if (value.length > (to - from))
                    value = value.substring(0, to - from);

                renderTokens.push({
                    type: tokens[idx].type,
                    value: value
                });

                col = from + value.length;
                idx += 1;
            }

            while (col < to && idx < tokens.length) {
                var value = tokens[idx].value;
                if (value.length + col > to) {
                    renderTokens.push({
                        type: tokens[idx].type,
                        value: value.substring(0, to - col)
                    });
                } else
                    renderTokens.push(tokens[idx]);
                col += value.length;
                idx += 1;
            }
        }

        var tokens = session.getTokens(row);
        foldLine.walk(function(placeholder, row, column, lastColumn, isNewRow) {
            if (placeholder != null) {
                renderTokens.push({
                    type: "fold",
                    value: placeholder
                });
            } else {
                if (isNewRow)
                    tokens = session.getTokens(row);

                if (tokens.length)
                    addTokens(tokens, lastColumn, column);
            }
        }, foldLine.end.row, this.session.getLine(foldLine.end.row).length);

        return renderTokens;
    };

    this.$useLineGroups = function() {
        // For the updateLines function to work correctly, it's important that the
        // child nodes of this.element correspond on a 1-to-1 basis to rows in the
        // document (as distinct from lines on the screen). For sessions that are
        // wrapped, this means we need to add a layer to the node hierarchy (tagged
        // with the class name ace_line_group).
        return this.session.getUseWrapMode();
    };

    this.destroy = function() {
        clearInterval(this.$pollSizeChangesTimer);
        if (this.$measureNode)
            this.$measureNode.parentNode.removeChild(this.$measureNode);
        delete this.$measureNode;
    };

}).call(Text.prototype);

exports.Text = Text;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/layer/cursor',['require','exports','module','../lib/dom'],function(require, exports, module) {


var dom = require("../lib/dom");

var Cursor = function(parentEl) {
    this.element = dom.createElement("div");
    this.element.className = "ace_layer ace_cursor-layer";
    parentEl.appendChild(this.element);

    this.isVisible = false;
    this.isBlinking = true;
    this.blinkInterval = 1000;
    this.smoothBlinking = false;

    this.cursors = [];
    this.cursor = this.addCursor();
    dom.addCssClass(this.element, "ace_hidden-cursors");
};

(function() {

    this.$padding = 0;
    this.setPadding = function(padding) {
        this.$padding = padding;
    };

    this.setSession = function(session) {
        this.session = session;
    };

    this.setBlinking = function(blinking) {
        if (blinking != this.isBlinking){
            this.isBlinking = blinking;
            this.restartTimer();
        }
    };

    this.setBlinkInterval = function(blinkInterval) {
        if (blinkInterval != this.blinkInterval){
            this.blinkInterval = blinkInterval;
            this.restartTimer();
        }
    };

    this.setSmoothBlinking = function(smoothBlinking) {
        if (smoothBlinking != this.smoothBlinking) {
            this.smoothBlinking = smoothBlinking;
            if (smoothBlinking)
                dom.addCssClass(this.element, "ace_smooth-blinking");
            else
                dom.removeCssClass(this.element, "ace_smooth-blinking");
            this.restartTimer();
        }
    };

    this.addCursor = function() {
        var el = dom.createElement("div");
        el.className = "ace_cursor";
        this.element.appendChild(el);
        this.cursors.push(el);
        return el;
    };

    this.removeCursor = function() {
        if (this.cursors.length > 1) {
            var el = this.cursors.pop();
            el.parentNode.removeChild(el);
            return el;
        }
    };

    this.hideCursor = function() {
        this.isVisible = false;
        dom.addCssClass(this.element, "ace_hidden-cursors");
        this.restartTimer();
    };

    this.showCursor = function() {
        this.isVisible = true;
        dom.removeCssClass(this.element, "ace_hidden-cursors");
        this.restartTimer();
    };

    this.restartTimer = function() {
        clearInterval(this.intervalId);
        clearTimeout(this.timeoutId);
        if (this.smoothBlinking)
            dom.removeCssClass(this.element, "ace_smooth-blinking");
        for (var i = this.cursors.length; i--; )
            this.cursors[i].style.opacity = "";

        if (!this.isBlinking || !this.blinkInterval || !this.isVisible)
            return;

        if (this.smoothBlinking)
            setTimeout(function(){
                dom.addCssClass(this.element, "ace_smooth-blinking");
            }.bind(this));

        var blink = function(){
            this.timeoutId = setTimeout(function() {
                for (var i = this.cursors.length; i--; ) {
                    this.cursors[i].style.opacity = 0;
                }
            }.bind(this), 0.6 * this.blinkInterval);
        }.bind(this);

        this.intervalId = setInterval(function() {
            for (var i = this.cursors.length; i--; ) {
                this.cursors[i].style.opacity = "";
            }
            blink();
        }.bind(this), this.blinkInterval);

        blink();
    };

    this.getPixelPosition = function(position, onScreen) {
        if (!this.config || !this.session)
            return {left : 0, top : 0};

        if (!position)
            position = this.session.selection.getCursor();
        var pos = this.session.documentToScreenPosition(position);
        var cursorLeft = this.$padding + pos.column * this.config.characterWidth;
        var cursorTop = (pos.row - (onScreen ? this.config.firstRowScreen : 0)) *
            this.config.lineHeight;

        return {left : cursorLeft, top : cursorTop};
    };

    this.update = function(config) {
        this.config = config;

        var selections = this.session.$selectionMarkers;
        var i = 0, cursorIndex = 0;

        if (selections === undefined || selections.length === 0){
            selections = [{cursor: null}];
        }

        for (var i = 0, n = selections.length; i < n; i++) {
            var pixelPos = this.getPixelPosition(selections[i].cursor, true);
            if ((pixelPos.top > config.height + config.offset ||
                 pixelPos.top < -config.offset) && i > 1) {
                continue;
            }

            var style = (this.cursors[cursorIndex++] || this.addCursor()).style;

            style.left = pixelPos.left + "px";
            style.top = pixelPos.top + "px";
            style.width = config.characterWidth + "px";
            style.height = config.lineHeight + "px";
        }
        while (this.cursors.length > cursorIndex)
            this.removeCursor();

        var overwrite = this.session.getOverwrite();
        this.$setOverwrite(overwrite);

        // cache for textarea and gutter highlight
        this.$pixelPos = pixelPos;
        this.restartTimer();
    };

    this.$setOverwrite = function(overwrite) {
        if (overwrite != this.overwrite) {
            this.overwrite = overwrite;
            if (overwrite)
                dom.addCssClass(this.element, "ace_overwrite-cursors");
            else
                dom.removeCssClass(this.element, "ace_overwrite-cursors");
        }
    };

    this.destroy = function() {
        clearInterval(this.intervalId);
        clearTimeout(this.timeoutId);
    };

}).call(Cursor.prototype);

exports.Cursor = Cursor;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/scrollbar',['require','exports','module','./lib/oop','./lib/dom','./lib/event','./lib/event_emitter'],function(require, exports, module) {


var oop = require("./lib/oop");
var dom = require("./lib/dom");
var event = require("./lib/event");
var EventEmitter = require("./lib/event_emitter").EventEmitter;

/**
 * A set of methods for setting and retrieving the editor's scrollbar. 
 * @class ScrollBar
 **/

/**
 * Creates a new `ScrollBar`. `parent` is the owner of the scroll bar.
 * @param {DOMElement} parent A DOM element 
 *
 * @constructor
 **/
var ScrollBarV = function(parent, renderer) {
    this.element = dom.createElement("div");
    this.element.className = "ace_scrollbar";

    this.inner = dom.createElement("div");
    this.inner.className = "ace_scrollbar-inner";
    this.element.appendChild(this.inner);

    parent.appendChild(this.element);

    // in OSX lion the scrollbars appear to have no width. In this case resize the
    // element to show the scrollbar but still pretend that the scrollbar has a width
    // of 0px
    // in Firefox 6+ scrollbar is hidden if element has the same width as scrollbar
    // make element a little bit wider to retain scrollbar when page is zoomed 
    renderer.$scrollbarWidth = 
    this.width = dom.scrollbarWidth(parent.ownerDocument);
    renderer.$scrollbarWidth = 
    this.width = dom.scrollbarWidth(parent.ownerDocument);
    this.fullWidth = this.width;
    this.inner.style.width =
    this.element.style.width = (this.width || 15) + 5 + "px";
    this.setVisible(false);
    this.element.style.overflowY = "scroll";
    
    event.addListener(this.element, "scroll", this.onScrollV.bind(this));
};

var ScrollBarH = function(parent, renderer) {
    this.element = dom.createElement("div");
    this.element.className = "ace_scrollbar-h";

    this.inner = dom.createElement("div");
    this.inner.className = "ace_scrollbar-inner";
    this.element.appendChild(this.inner);

    parent.appendChild(this.element);

    // in OSX lion the scrollbars appear to have no width. In this case resize the
    // element to show the scrollbar but still pretend that the scrollbar has a width
    // of 0px
    // in Firefox 6+ scrollbar is hidden if element has the same width as scrollbar
    // make element a little bit wider to retain scrollbar when page is zoomed 
    this.height = renderer.$scrollbarWidth;
    this.fullHeight = this.height;
    this.inner.style.height =
    this.element.style.height = (this.height || 15) + 5 + "px";
    this.setVisible(false);
    this.element.style.overflowX = "scroll";

    event.addListener(this.element, "scroll", this.onScrollH.bind(this));
};

(function() {
    oop.implement(this, EventEmitter);

    this.setVisible = function(show) {
        if (show) {
            this.element.style.display = "";
            if (this.fullWidth)
                this.width = this.fullWidth;
            if (this.fullHeight)
                this.height = this.fullHeight;
        } else {
            this.element.style.display = "none";
            this.height = this.width = 0;
        }
    };
    
    /**
     * Emitted when the scroll bar, well, scrolls.
     * @event scroll
     * @param {Object} e Contains one property, `"data"`, which indicates the current scroll top position
     **/
    this.onScrollV = function() {
        if (!this.skipEvent) {
            this.scrollTop = this.element.scrollTop;
            this._emit("scroll", {data: this.scrollTop});
        }
        this.skipEvent = false;
    };
    this.onScrollH = function() {
        if (!this.skipEvent) {
            this.scrollLeft = this.element.scrollLeft;
            this._emit("scroll", {data: this.scrollLeft});
        }
        this.skipEvent = false;
    };

    /**
     * Returns the width of the scroll bar.
     * @returns {Number}
     **/
    this.getWidth = function() {
        return this.width;
    };

    this.getHeight = function() {
        return this.height;
    };

    /**
     * Sets the height of the scroll bar, in pixels.
     * @param {Number} height The new height
     **/
    this.setHeight = function(height) {
        this.element.style.height = height + "px";
    };
    
    this.setWidth = function(width) {
        this.element.style.width = width + "px";
    };

    /**
     * Sets the inner height of the scroll bar, in pixels.
     * @param {Number} height The new inner height
     **/
    this.setInnerHeight = function(height) {
        this.inner.style.height = height + "px";
    };
    
    this.setInnerWidth = function(width) {
        this.inner.style.width = width + "px";
    };

    /**
     * Sets the scroll top of the scroll bar.
     * @param {Number} scrollTop The new scroll top
     **/
    // on chrome 17+ for small zoom levels after calling this function
    // this.element.scrollTop != scrollTop which makes page to scroll up.
    this.setScrollTop = function(scrollTop) {
        if (this.scrollTop != scrollTop) {
            this.skipEvent = true;
            this.scrollTop = this.element.scrollTop = scrollTop;
        }
    };
    this.setScrollLeft = function(scrollLeft) {
        if (this.scrollLeft != scrollLeft) {
            this.skipEvent = true;
            this.scrollLeft = this.element.scrollLeft = scrollLeft;
        }
    };

}).call(ScrollBarV.prototype);
ScrollBarH.prototype = ScrollBarV.prototype;



exports.ScrollBar = ScrollBarV; // backward compatibility
exports.ScrollBarV = ScrollBarV;
exports.ScrollBarH = ScrollBarH;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/renderloop',['require','exports','module','./lib/event'],function(require, exports, module) {


var event = require("./lib/event");

/** 
 *
 *
 * Batches changes (that force something to be redrawn) in the background.
 * @class RenderLoop
 **/


var RenderLoop = function(onRender, win) {
    this.onRender = onRender;
    this.pending = false;
    this.changes = 0;
    this.window = win || window;
};

(function() {


    this.schedule = function(change) {
        //this.onRender(change);
        //return;
        this.changes = this.changes | change;
        if (!this.pending) {
            this.pending = true;
            var _self = this;
            event.nextFrame(function() {
                _self.pending = false;
                var changes;
                while (changes = _self.changes) {
                    _self.changes = 0;
                    _self.onRender(changes);
                }
            }, this.window);
        }
    };

}).call(RenderLoop.prototype);

exports.RenderLoop = RenderLoop;
});

(function() {
    
define('ace/requirejs/text',['require','exports','module'],function (require, exports, module) {
    
    
    exports.load = function (name, req, onLoad, config) {
        onLoad('', 'utf8');
    };
});

})();

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/virtual_renderer',['require','exports','module','./lib/oop','./lib/dom','./lib/useragent','./config','./layer/gutter','./layer/marker','./layer/text','./layer/cursor','./scrollbar','./scrollbar','./renderloop','./lib/event_emitter','./requirejs/text!./css/editor.css'],function(require, exports, module) {


var oop = require("./lib/oop");
var dom = require("./lib/dom");
var useragent = require("./lib/useragent");
var config = require("./config");
var GutterLayer = require("./layer/gutter").Gutter;
var MarkerLayer = require("./layer/marker").Marker;
var TextLayer = require("./layer/text").Text;
var CursorLayer = require("./layer/cursor").Cursor;
var ScrollBarH = require("./scrollbar").ScrollBarH;
var ScrollBarV = require("./scrollbar").ScrollBarV;
var RenderLoop = require("./renderloop").RenderLoop;
var EventEmitter = require("./lib/event_emitter").EventEmitter;
var editorCss = require("./requirejs/text!./css/editor.css");

dom.importCssString(editorCss, "ace_editor");

/**
 * The class that is responsible for drawing everything you see on the screen!
 * @class VirtualRenderer
 **/

/**
 * Constructs a new `VirtualRenderer` within the `container` specified, applying the given `theme`.
 * @param {DOMElement} container The root element of the editor
 * @param {String} theme The starting theme
 *
 * @constructor
 **/

var VirtualRenderer = function(container, theme) {
    var _self = this;

    this.container = container || dom.createElement("div");

    // TODO: this breaks rendering in Cloud9 with multiple ace instances
    // // Imports CSS once per DOM document ('ace_editor' serves as an identifier).
    // dom.importCssString(editorCss, "ace_editor", container.ownerDocument);

    // in IE <= 9 the native cursor always shines through
    this.$keepTextAreaAtCursor = !useragent.isIE;

    dom.addCssClass(this.container, "ace_editor");

    this.setTheme(theme);

    this.$gutter = dom.createElement("div");
    this.$gutter.className = "ace_gutter";
    this.container.appendChild(this.$gutter);

    this.scroller = dom.createElement("div");
    this.scroller.className = "ace_scroller";
    this.container.appendChild(this.scroller);

    this.content = dom.createElement("div");
    this.content.className = "ace_content";
    this.scroller.appendChild(this.content);

    this.$gutterLayer = new GutterLayer(this.$gutter);
    this.$gutterLayer.on("changeGutterWidth", this.onGutterResize.bind(this));

    this.$markerBack = new MarkerLayer(this.content);

    var textLayer = this.$textLayer = new TextLayer(this.content);
    this.canvas = textLayer.element;

    this.$markerFront = new MarkerLayer(this.content);

    this.$cursorLayer = new CursorLayer(this.content);

    // Indicates whether the horizontal scrollbar is visible
    this.$horizScroll = false;
    this.$vScroll = false;

    this.scrollBar = 
    this.scrollBarV = new ScrollBarV(this.container, this);
    this.scrollBarH = new ScrollBarH(this.container, this);
    this.scrollBarV.addEventListener("scroll", function(e) {
        if (!_self.$scrollAnimation)
            _self.session.setScrollTop(e.data - _self.scrollMargin.top);
    });
    this.scrollBarH.addEventListener("scroll", function(e) {
        if (!_self.$scrollAnimation)
            _self.session.setScrollLeft(e.data - _self.scrollMargin.left);
    });

    this.scrollTop = 0;
    this.scrollLeft = 0;

    this.cursorPos = {
        row : 0,
        column : 0
    };

    this.$textLayer.addEventListener("changeCharacterSize", function() {
        _self.updateCharacterSize();
        _self.onResize(true);
        _self._signal("changeCharacterSize");
    });

    this.$size = {
        width: 0,
        height: 0,
        scrollerHeight: 0,
        scrollerWidth: 0
    };

    this.layerConfig = {
        width : 1,
        padding : 0,
        firstRow : 0,
        firstRowScreen: 0,
        lastRow : 0,
        lineHeight : 1,
        characterWidth : 1,
        minHeight : 1,
        maxHeight : 1,
        offset : 0,
        height : 1
    };
    
    this.scrollMargin = {
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        v: 0,
        h: 0
    };

    this.$loop = new RenderLoop(
        this.$renderChanges.bind(this),
        this.container.ownerDocument.defaultView
    );
    this.$loop.schedule(this.CHANGE_FULL);

    this.updateCharacterSize();
    this.setPadding(4);
    config.resetOptions(this);
    config._emit("renderer", this);
};

(function() {

    this.CHANGE_CURSOR = 1;
    this.CHANGE_MARKER = 2;
    this.CHANGE_GUTTER = 4;
    this.CHANGE_SCROLL = 8;
    this.CHANGE_LINES = 16;
    this.CHANGE_TEXT = 32;
    this.CHANGE_SIZE = 64;
    this.CHANGE_MARKER_BACK = 128;
    this.CHANGE_MARKER_FRONT = 256;
    this.CHANGE_FULL = 512;
    this.CHANGE_H_SCROLL = 1024;

    // this.$logChanges = function(changes) {
    //     var a = ""
    //     if (changes & this.CHANGE_CURSOR) a += " cursor";
    //     if (changes & this.CHANGE_MARKER) a += " marker";
    //     if (changes & this.CHANGE_GUTTER) a += " gutter";
    //     if (changes & this.CHANGE_SCROLL) a += " scroll";
    //     if (changes & this.CHANGE_LINES) a += " lines";
    //     if (changes & this.CHANGE_TEXT) a += " text";
    //     if (changes & this.CHANGE_SIZE) a += " size";
    //     if (changes & this.CHANGE_MARKER_BACK) a += " marker_back";
    //     if (changes & this.CHANGE_MARKER_FRONT) a += " marker_front";
    //     if (changes & this.CHANGE_FULL) a += " full";
    //     if (changes & this.CHANGE_H_SCROLL) a += " h_scroll";
    //     console.log(a.trim())
    // };

    oop.implement(this, EventEmitter);

    this.updateCharacterSize = function() {
        if (this.$textLayer.allowBoldFonts != this.$allowBoldFonts) {
            this.$allowBoldFonts = this.$textLayer.allowBoldFonts;
            this.setStyle("ace_nobold", !this.$allowBoldFonts);
        }

        this.layerConfig.characterWidth =
        this.characterWidth = this.$textLayer.getCharacterWidth();
        this.layerConfig.lineHeight =
        this.lineHeight = this.$textLayer.getLineHeight();
        this.$updatePrintMargin();
    };

    /**
    *
    * Associates the renderer with an [[EditSession `EditSession`]].
    **/
    this.setSession = function(session) {
        this.session = session;

        this.scroller.className = "ace_scroller";

        this.$cursorLayer.setSession(session);
        this.$markerBack.setSession(session);
        this.$markerFront.setSession(session);
        this.$gutterLayer.setSession(session);
        this.$textLayer.setSession(session);
        this.$loop.schedule(this.CHANGE_FULL);

    };

    /**
    * Triggers a partial update of the text, from the range given by the two parameters.
    * @param {Number} firstRow The first row to update
    * @param {Number} lastRow The last row to update
    *
    *
    **/
    this.updateLines = function(firstRow, lastRow) {
        if (lastRow === undefined)
            lastRow = Infinity;

        if (!this.$changedLines) {
            this.$changedLines = {
                firstRow: firstRow,
                lastRow: lastRow
            };
        }
        else {
            if (this.$changedLines.firstRow > firstRow)
                this.$changedLines.firstRow = firstRow;

            if (this.$changedLines.lastRow < lastRow)
                this.$changedLines.lastRow = lastRow;
        }

        if (this.$changedLines.firstRow > this.layerConfig.lastRow ||
            this.$changedLines.lastRow < this.layerConfig.firstRow)
            return;
        this.$loop.schedule(this.CHANGE_LINES);
    };

    this.onChangeTabSize = function() {
        this.$loop.schedule(this.CHANGE_TEXT | this.CHANGE_MARKER);
        this.$textLayer.onChangeTabSize();
    };

    /**
    * Triggers a full update of the text, for all the rows.
    **/
    this.updateText = function() {
        this.$loop.schedule(this.CHANGE_TEXT);
    };

    /**
    * Triggers a full update of all the layers, for all the rows.
    * @param {Boolean} force If `true`, forces the changes through
    *
    *
    **/
    this.updateFull = function(force) {
        if (force)
            this.$renderChanges(this.CHANGE_FULL, true);
        else
            this.$loop.schedule(this.CHANGE_FULL);
    };

    /**
    *
    * Updates the font size.
    **/
    this.updateFontSize = function() {
        this.$textLayer.checkForSizeChanges();
    };

    this.$changes = 0;
    /**
    * [Triggers a resize of the editor.]{: #VirtualRenderer.onResize}
    * @param {Boolean} force If `true`, recomputes the size, even if the height and width haven't changed
    * @param {Number} gutterWidth The width of the gutter in pixels
    * @param {Number} width The width of the editor in pixels
    * @param {Number} height The hiehgt of the editor, in pixels
    *
    *
    **/
    this.onResize = function(force, gutterWidth, width, height) {
        // if (force)
        //     console.log("force resize requested", width, height)
        if (this.resizing > 2)
            return;
        else if (this.resizing > 0)
            this.resizing++;
        else
            this.resizing = force ? 1 : 0;
        // `|| el.scrollHeight` is required for outosizing editors on ie
        // where elements with clientHeight = 0 alsoe have clientWidth = 0
        var el = this.container;
        if (!height)
            height = el.clientHeight || el.scrollHeight;
        if (!width)
            width = el.clientWidth || el.scrollWidth;

        var changes = this.$updateCachedSize(force, gutterWidth, width, height);
        
        // console.log("resizing to", width, height, JSON.stringify(this.$size))

        // setTimeout(function() {
        //     console.log("actual size ", this.container.clientWidth, this.container.clientHeight)
            
        // }.bind(this), 500)
        
        if (!this.$size.scrollerHeight || (!width && !height))
            return this.resizing = 0;

        if (force)
            this.$gutterLayer.$padding = null;

        if (force)
            this.$renderChanges(changes, true);
        else
            this.$loop.schedule(changes | this.$changes);

        if (this.resizing)
            this.resizing = 0;
    };
    
    this.$updateCachedSize = function(force, gutterWidth, width, height) {
        var changes = 0;
        var size = this.$size;
        var oldSize = {
            width: size.width,
            height: size.height,
            scrollerHeight: size.scrollerHeight,
            scrollerWidth: size.scrollerWidth
        };
        if (height && (force || size.height != height)) {
            size.height = height;
            changes = this.CHANGE_SIZE;

            size.scrollerHeight = size.height;
            if (this.$horizScroll)
                size.scrollerHeight -= this.scrollBarH.getHeight();
                
            // this.scrollBarV.setHeight(size.scrollerHeight);
            this.scrollBarV.element.style.bottom = this.scrollBarH.getHeight() + "px";

            if (this.session) {
                this.session.setScrollTop(this.getScrollTop());
                changes = changes | this.CHANGE_SCROLL;
            }
        }

        if (width && (force || size.width != width)) {
            changes = this.CHANGE_SIZE;
            size.width = width;
            
            if (gutterWidth == null)
                gutterWidth = this.$showGutter ? this.$gutter.offsetWidth : 0;
            
            this.gutterWidth = gutterWidth;
            
            this.scrollBarH.element.style.left = 
            this.scroller.style.left = gutterWidth + "px";
            size.scrollerWidth = Math.max(0, width - gutterWidth - this.scrollBarV.getWidth());           
            
            this.scrollBarH.element.style.right = 
            this.scroller.style.right = this.scrollBarV.getWidth() + "px";
            this.scroller.style.bottom = this.scrollBarH.getHeight() + "px";
                
            // this.scrollBarH.element.style.setWidth(size.scrollerWidth);

            if (this.session && this.session.getUseWrapMode() && this.adjustWrapLimit() || force)
                changes = changes | this.CHANGE_FULL;
        }
        
        if (changes)
            this._signal("resize", oldSize);

        return changes;
    };

    this.onGutterResize = function() {
        var gutterWidth = this.$showGutter ? this.$gutter.offsetWidth : 0;
        if (gutterWidth != this.gutterWidth)
            this.$changes |= this.$updateCachedSize(true, gutterWidth, this.$size.width, this.$size.height);

        if (this.session.getUseWrapMode() && this.adjustWrapLimit())
            this.$loop.schedule(this.CHANGE_FULL);
        else {
            this.$computeLayerConfig();
            this.$loop.schedule(this.CHANGE_MARKER);
        }
    };

    /**
    * Adjusts the wrap limit, which is the number of characters that can fit within the width of the edit area on screen.
    **/
    this.adjustWrapLimit = function() {
        var availableWidth = this.$size.scrollerWidth - this.$padding * 2;
        var limit = Math.floor(availableWidth / this.characterWidth);
        return this.session.adjustWrapLimit(limit, this.$showPrintMargin && this.$printMarginColumn);
    };

    /**
    * Identifies whether you want to have an animated scroll or not.
    * @param {Boolean} shouldAnimate Set to `true` to show animated scrolls
    *
    **/
    this.setAnimatedScroll = function(shouldAnimate){
        this.setOption("animatedScroll", shouldAnimate);
    };

    /**
    * Returns whether an animated scroll happens or not.
    * @returns {Boolean}
    **/
    this.getAnimatedScroll = function() {
        return this.$animatedScroll;
    };

    /**
    * Identifies whether you want to show invisible characters or not.
    * @param {Boolean} showInvisibles Set to `true` to show invisibles
    *
    **/
    this.setShowInvisibles = function(showInvisibles) {
        this.setOption("showInvisibles", showInvisibles);
    };

    /**
    * Returns whether invisible characters are being shown or not.
    * @returns {Boolean}
    **/
    this.getShowInvisibles = function() {
        return this.getOption("showInvisibles");
    };
    this.getDisplayIndentGuides = function() {
        return this.getOption("displayIndentGuides");
    };

    this.setDisplayIndentGuides = function(display) {
        this.setOption("displayIndentGuides", display);
    };

    /**
    * Identifies whether you want to show the print margin or not.
    * @param {Boolean} showPrintMargin Set to `true` to show the print margin
    *
    **/
    this.setShowPrintMargin = function(showPrintMargin) {
        this.setOption("showPrintMargin", showPrintMargin);
    };

    /**
    * Returns whether the print margin is being shown or not.
    * @returns {Boolean}
    **/
    this.getShowPrintMargin = function() {
        return this.getOption("showPrintMargin");
    };
    /**
    * Identifies whether you want to show the print margin column or not.
    * @param {Boolean} showPrintMargin Set to `true` to show the print margin column
    *
    **/
    this.setPrintMarginColumn = function(showPrintMargin) {
        this.setOption("printMarginColumn", showPrintMargin);
    };

    /**
    * Returns whether the print margin column is being shown or not.
    * @returns {Boolean}
    **/
    this.getPrintMarginColumn = function() {
        return this.getOption("printMarginColumn");
    };

    /**
    * Returns `true` if the gutter is being shown.
    * @returns {Boolean}
    **/
    this.getShowGutter = function(){
        return this.getOption("showGutter");
    };

    /**
    * Identifies whether you want to show the gutter or not.
    * @param {Boolean} show Set to `true` to show the gutter
    *
    **/
    this.setShowGutter = function(show){
        return this.setOption("showGutter", show);
    };

    this.getFadeFoldWidgets = function(){
        return this.getOption("fadeFoldWidgets")
    };

    this.setFadeFoldWidgets = function(show) {
        this.setOption("fadeFoldWidgets", show);
    };

    this.setHighlightGutterLine = function(shouldHighlight) {
        this.setOption("highlightGutterLine", shouldHighlight);
    };

    this.getHighlightGutterLine = function() {
        return this.getOption("highlightGutterLine");
    };

    this.$updateGutterLineHighlight = function() {
        var pos = this.$cursorLayer.$pixelPos;
        var height = this.layerConfig.lineHeight;
        if (this.session.getUseWrapMode()) {
            var cursor = this.session.selection.getCursor();
            cursor.column = 0;
            pos = this.$cursorLayer.getPixelPosition(cursor, true);
            height *= this.session.getRowLength(cursor.row);
        }
        this.$gutterLineHighlight.style.top = pos.top - this.layerConfig.offset + "px";
        this.$gutterLineHighlight.style.height = height + "px";
    };

    this.$updatePrintMargin = function() {
        if (!this.$showPrintMargin && !this.$printMarginEl)
            return;

        if (!this.$printMarginEl) {
            var containerEl = dom.createElement("div");
            containerEl.className = "ace_layer ace_print-margin-layer";
            this.$printMarginEl = dom.createElement("div");
            this.$printMarginEl.className = "ace_print-margin";
            containerEl.appendChild(this.$printMarginEl);
            this.content.insertBefore(containerEl, this.content.firstChild);
        }

        var style = this.$printMarginEl.style;
        style.left = ((this.characterWidth * this.$printMarginColumn) + this.$padding) + "px";
        style.visibility = this.$showPrintMargin ? "visible" : "hidden";
        
        if (this.session && this.session.$wrap == -1)
            this.adjustWrapLimit();
    };

    /**
    *
    * Returns the root element containing this renderer.
    * @returns {DOMElement}
    **/
    this.getContainerElement = function() {
        return this.container;
    };

    /**
    *
    * Returns the element that the mouse events are attached to
    * @returns {DOMElement}
    **/
    this.getMouseEventTarget = function() {
        return this.content;
    };

    /**
    *
    * Returns the element to which the hidden text area is added.
    * @returns {DOMElement}
    **/
    this.getTextAreaContainer = function() {
        return this.container;
    };

    // move text input over the cursor
    // this is required for iOS and IME
    this.$moveTextAreaToCursor = function() {
        if (!this.$keepTextAreaAtCursor)
            return;
        var config = this.layerConfig;
        var posTop = this.$cursorLayer.$pixelPos.top;
        var posLeft = this.$cursorLayer.$pixelPos.left;
        posTop -= config.offset;

        var h = this.lineHeight;
        if (posTop < 0 || posTop > config.height - h)
            return;

        var w = this.characterWidth;
        if (this.$composition) {
            var val = this.textarea.value.replace(/^\x01+/, "");
            w *= (this.session.$getStringScreenWidth(val)[0]+2);
            h += 2;
            posTop -= 1;
        }
        posLeft -= this.scrollLeft;
        if (posLeft > this.$size.scrollerWidth - w)
            posLeft = this.$size.scrollerWidth - w;

        posLeft -= this.scrollBar.width;

        this.textarea.style.height = h + "px";
        this.textarea.style.width = w + "px";
        this.textarea.style.right = Math.max(0, this.$size.scrollerWidth - posLeft - w) + "px";
        this.textarea.style.bottom = Math.max(0, this.$size.height - posTop - h) + "px";
    };

    /**
    *
    * [Returns the index of the first visible row.]{: #VirtualRenderer.getFirstVisibleRow}
    * @returns {Number}
    **/
    this.getFirstVisibleRow = function() {
        return this.layerConfig.firstRow;
    };

    /**
    *
    * Returns the index of the first fully visible row. "Fully" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.
    * @returns {Number}
    **/
    this.getFirstFullyVisibleRow = function() {
        return this.layerConfig.firstRow + (this.layerConfig.offset === 0 ? 0 : 1);
    };

    /**
    *
    * Returns the index of the last fully visible row. "Fully" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.
    * @returns {Number}
    **/
    this.getLastFullyVisibleRow = function() {
        var flint = Math.floor((this.layerConfig.height + this.layerConfig.offset) / this.layerConfig.lineHeight);
        return this.layerConfig.firstRow - 1 + flint;
    };

    /**
    *
    * [Returns the index of the last visible row.]{: #VirtualRenderer.getLastVisibleRow}
    * @returns {Number}
    **/
    this.getLastVisibleRow = function() {
        return this.layerConfig.lastRow;
    };

    this.$padding = null;

    /**
    * Sets the padding for all the layers.
    * @param {Number} padding A new padding value (in pixels)
    *
    *
    *
    **/
    this.setPadding = function(padding) {
        this.$padding = padding;
        this.$textLayer.setPadding(padding);
        this.$cursorLayer.setPadding(padding);
        this.$markerFront.setPadding(padding);
        this.$markerBack.setPadding(padding);
        this.$loop.schedule(this.CHANGE_FULL);
        this.$updatePrintMargin();
    };
    
    this.setScrollMargin = function(top, bottom, left, right) {
        var sm = this.scrollMargin;
        sm.top = top|0;
        sm.bottom = bottom|0;
        sm.right = right|0;
        sm.left = left|0;
        sm.v = sm.top + sm.bottom;
        sm.h = sm.left + sm.right;
        this.updateFull();
    };

    /**
     * Returns whether the horizontal scrollbar is set to be always visible.
     * @returns {Boolean}
     **/
    this.getHScrollBarAlwaysVisible = function() {
        return this.$hScrollBarAlwaysVisible;
    };

    /**
     * Identifies whether you want to show the horizontal scrollbar or not.
     * @param {Boolean} alwaysVisible Set to `true` to make the horizontal scroll bar visible
     **/
    this.setHScrollBarAlwaysVisible = function(alwaysVisible) {
        this.setOption("hScrollBarAlwaysVisible", alwaysVisible);
    };
    /**
     * Returns whether the horizontal scrollbar is set to be always visible.
     * @returns {Boolean}
     **/
    this.getVScrollBarAlwaysVisible = function() {
        return this.$hScrollBarAlwaysVisible;
    };

    /**
     * Identifies whether you want to show the horizontal scrollbar or not.
     * @param {Boolean} alwaysVisible Set to `true` to make the horizontal scroll bar visible
     **/
    this.setVScrollBarAlwaysVisible = function(alwaysVisible) {
        this.setOption("vScrollBarAlwaysVisible", alwaysVisible);
    };

    this.$updateScrollBarV = function() {
        this.scrollBarV.setInnerHeight(this.layerConfig.maxHeight + this.scrollMargin.v);
        this.scrollBarV.setScrollTop(this.scrollTop + this.scrollMargin.top);
    };
    this.$updateScrollBarH = function() {
        this.scrollBarH.setInnerWidth(this.layerConfig.width + 2 * this.$padding + this.scrollMargin.h);
        this.scrollBarH.setScrollLeft(this.scrollLeft + this.scrollMargin.left);
    };

    this.$renderChanges = function(changes, force) {
        if (this.$changes) {
            changes |= this.$changes;
            this.$changes = 0;
        }
        if ((!this.session || !this.container.offsetWidth) || (!changes && !force)) {
            this.$changes |= changes;
            return; 
        } 
        if (!this.$size.width) {
            this.$changes |= changes;
            return this.onResize(true);
        }
        // this.$logChanges(changes);
        
        this._signal("beforeRender");
        // text, scrolling and resize changes can cause the view port size to change
        if (changes & this.CHANGE_FULL ||
            changes & this.CHANGE_SIZE ||
            changes & this.CHANGE_TEXT ||
            changes & this.CHANGE_LINES ||
            changes & this.CHANGE_SCROLL ||
            changes & this.CHANGE_H_SCROLL
        )
            changes |= this.$computeLayerConfig();

        // horizontal scrolling
        if (changes & this.CHANGE_H_SCROLL) {
            this.$updateScrollBarH();
            this.content.style.marginLeft = -this.scrollLeft + "px";
            this.scroller.className = this.scrollLeft <= 0 ? "ace_scroller" : "ace_scroller ace_scroll-left";
        }

        // full
        if (changes & this.CHANGE_FULL) {
            this.$textLayer.checkForSizeChanges();
            // update scrollbar first to not lose scroll position when gutter calls resize
            this.$updateScrollBarV();
            this.$updateScrollBarH();
            this.$textLayer.update(this.layerConfig);
            if (this.$showGutter)
                this.$gutterLayer.update(this.layerConfig);
            this.$markerBack.update(this.layerConfig);
            this.$markerFront.update(this.layerConfig);
            this.$cursorLayer.update(this.layerConfig);
            this.$moveTextAreaToCursor();
            this.$highlightGutterLine && this.$updateGutterLineHighlight();
            this._signal("afterRender");
            return;
        }

        // scrolling
        if (changes & this.CHANGE_SCROLL) {
            this.$updateScrollBarV();
            if (changes & this.CHANGE_TEXT || changes & this.CHANGE_LINES)
                this.$textLayer.update(this.layerConfig);
            else
                this.$textLayer.scrollLines(this.layerConfig);

            if (this.$showGutter)
                this.$gutterLayer.update(this.layerConfig);
            this.$markerBack.update(this.layerConfig);
            this.$markerFront.update(this.layerConfig);
            this.$cursorLayer.update(this.layerConfig);
            this.$highlightGutterLine && this.$updateGutterLineHighlight();
            this.$moveTextAreaToCursor();
            this._signal("afterRender");
            return;
        }

        if (changes & this.CHANGE_TEXT) {
            this.$textLayer.update(this.layerConfig);
            if (this.$showGutter)
                this.$gutterLayer.update(this.layerConfig);
        }
        else if (changes & this.CHANGE_LINES) {
            if (this.$updateLines() || (changes & this.CHANGE_GUTTER) && this.$showGutter)
                this.$gutterLayer.update(this.layerConfig);
        }
        else if (changes & this.CHANGE_TEXT || changes & this.CHANGE_GUTTER) {
            if (this.$showGutter)
                this.$gutterLayer.update(this.layerConfig);
        }

        if (changes & this.CHANGE_CURSOR) {
            this.$cursorLayer.update(this.layerConfig);
            this.$moveTextAreaToCursor();
            this.$highlightGutterLine && this.$updateGutterLineHighlight();
        }

        if (changes & (this.CHANGE_MARKER | this.CHANGE_MARKER_FRONT)) {
            this.$markerFront.update(this.layerConfig);
        }

        if (changes & (this.CHANGE_MARKER | this.CHANGE_MARKER_BACK)) {
            this.$markerBack.update(this.layerConfig);
        }

        if (changes & this.CHANGE_SIZE || changes & this.CHANGE_LINES) {
            this.$updateScrollBarV();
            this.$updateScrollBarH();
        }

        this._signal("afterRender");
    };

    
    this.$autosize = function(height, width) {
        var height = this.session.getScreenLength() * this.lineHeight;
        var maxHeight = this.$maxLines * this.lineHeight;
        var desiredHeight = Math.max(
            (this.$minLines||1) * this.lineHeight,
            Math.min(maxHeight, height)
        );
        var vScroll = height > maxHeight;
        
        if (desiredHeight != this.desiredHeight ||
            this.$size.height != this.desiredHeight || vScroll != this.$vScroll) {
            if (vScroll != this.$vScroll) {
                this.$vScroll = vScroll;
                this.scrollBarV.setVisible(vScroll);
            }
            
            var w = this.container.clientWidth;
            this.container.style.height = desiredHeight + "px";
            this.$updateCachedSize(true, this.$gutterWidth, w, desiredHeight);
            // this.$loop.changes = 0;
            this.desiredHeight = desiredHeight;
        }
    };
    
    this.$computeLayerConfig = function() {
        if (this.$maxLines && this.lineHeight > 1)
            this.$autosize();

        var session = this.session;
        
        var hideScrollbars = this.$size.height <= 2 * this.lineHeight;
        var screenLines = this.session.getScreenLength()
        var maxHeight = screenLines * this.lineHeight;

        var offset = this.scrollTop % this.lineHeight;
        var minHeight = this.$size.scrollerHeight + this.lineHeight;

        var longestLine = this.$getLongestLine();
        
        var horizScroll = !hideScrollbars && (this.$hScrollBarAlwaysVisible ||
            this.$size.scrollerWidth - longestLine - 2 * this.$padding < 0);

        var hScrollChanged = this.$horizScroll !== horizScroll;
        if (hScrollChanged) {
            this.$horizScroll = horizScroll;
            this.scrollBarH.setVisible(horizScroll);
        }
        
        if (!this.$maxLines && this.$scrollPastEnd) {
            if (this.scrollTop > maxHeight - this.$size.scrollerHeight)
                maxHeight += Math.min(
                    (this.$size.scrollerHeight - this.lineHeight) * this.$scrollPastEnd,
                    this.scrollTop - maxHeight + this.$size.scrollerHeight
                );
        }
        
        var vScroll = !hideScrollbars && (this.$vScrollBarAlwaysVisible ||
            this.$size.scrollerHeight - maxHeight < 0);
        var vScrollChanged = this.$vScroll !== vScroll;
        if (vScrollChanged) {
            this.$vScroll = vScroll;
            this.scrollBarV.setVisible(vScroll);
        }
        
        this.session.setScrollTop(Math.max(-this.scrollMargin.top,
            Math.min(this.scrollTop, maxHeight - this.$size.scrollerHeight + this.scrollMargin.v)));

        this.session.setScrollLeft(Math.max(-this.scrollMargin.left, Math.min(this.scrollLeft, 
            longestLine + 2 * this.$padding - this.$size.scrollerWidth + this.scrollMargin.h)));

        var lineCount = Math.ceil(minHeight / this.lineHeight) - 1;
        var firstRow = Math.max(0, Math.round((this.scrollTop - offset) / this.lineHeight));
        var lastRow = firstRow + lineCount;

        // Map lines on the screen to lines in the document.
        var firstRowScreen, firstRowHeight;
        var lineHeight = this.lineHeight;
        firstRow = session.screenToDocumentRow(firstRow, 0);

        // Check if firstRow is inside of a foldLine. If true, then use the first
        // row of the foldLine.
        var foldLine = session.getFoldLine(firstRow);
        if (foldLine) {
            firstRow = foldLine.start.row;
        }

        firstRowScreen = session.documentToScreenRow(firstRow, 0);
        firstRowHeight = session.getRowLength(firstRow) * lineHeight;

        lastRow = Math.min(session.screenToDocumentRow(lastRow, 0), session.getLength() - 1);
        minHeight = this.$size.scrollerHeight + session.getRowLength(lastRow) * lineHeight +
                                                firstRowHeight;

        offset = this.scrollTop - firstRowScreen * lineHeight;

        var changes = 0;
        // Horizontal scrollbar visibility may have changed, which changes
        // the client height of the scroller
        if (hScrollChanged || vScrollChanged) {
            changes = this.$updateCachedSize(true, this.gutterWidth, this.$size.width, this.$size.height);
            this._signal("scrollbarVisibilityChanged");
            if (vScrollChanged)
                longestLine = this.$getLongestLine();
        }
        
        this.layerConfig = {
            width : longestLine,
            padding : this.$padding,
            firstRow : firstRow,
            firstRowScreen: firstRowScreen,
            lastRow : lastRow,
            lineHeight : lineHeight,
            characterWidth : this.characterWidth,
            minHeight : minHeight,
            maxHeight : maxHeight,
            offset : offset,
            height : this.$size.scrollerHeight
        };

        // For debugging.
        // console.log(JSON.stringify(this.layerConfig));

        this.$gutterLayer.element.style.marginTop = (-offset) + "px";
        this.content.style.marginTop = (-offset) + "px";
        this.content.style.width = longestLine + 2 * this.$padding + "px";
        this.content.style.height = minHeight + "px";

        return changes;
    };

    this.$updateLines = function() {
        var firstRow = this.$changedLines.firstRow;
        var lastRow = this.$changedLines.lastRow;
        this.$changedLines = null;

        var layerConfig = this.layerConfig;

        if (firstRow > layerConfig.lastRow + 1) { return; }
        if (lastRow < layerConfig.firstRow) { return; }

        // if the last row is unknown -> redraw everything
        if (lastRow === Infinity) {
            if (this.$showGutter)
                this.$gutterLayer.update(layerConfig);
            this.$textLayer.update(layerConfig);
            return;
        }

        // else update only the changed rows
        this.$textLayer.updateLines(layerConfig, firstRow, lastRow);
        return true;
    };

    this.$getLongestLine = function() {
        var charCount = this.session.getScreenWidth();
        if (this.showInvisibles && !this.session.$useWrapMode)
            charCount += 1;

        return Math.max(this.$size.scrollerWidth - 2 * this.$padding, Math.round(charCount * this.characterWidth));
    };

    /**
    *
    * Schedules an update to all the front markers in the document.
    **/
    this.updateFrontMarkers = function() {
        this.$markerFront.setMarkers(this.session.getMarkers(true));
        this.$loop.schedule(this.CHANGE_MARKER_FRONT);
    };

    /**
    *
    * Schedules an update to all the back markers in the document.
    **/
    this.updateBackMarkers = function() {
        this.$markerBack.setMarkers(this.session.getMarkers());
        this.$loop.schedule(this.CHANGE_MARKER_BACK);
    };

    /**
    *
    * Deprecated; (moved to [[EditSession]])
    * @deprecated
    **/
    this.addGutterDecoration = function(row, className){
        this.$gutterLayer.addGutterDecoration(row, className);
    };

    /**
    * Deprecated; (moved to [[EditSession]])
    * @deprecated
    **/
    this.removeGutterDecoration = function(row, className){
        this.$gutterLayer.removeGutterDecoration(row, className);
    };

    /**
    *
    * Redraw breakpoints.
    **/
    this.updateBreakpoints = function(rows) {
        this.$loop.schedule(this.CHANGE_GUTTER);
    };

    /**
    *
    * Sets annotations for the gutter.
    * @param {Array} annotations An array containing annotations
    *
    *
    **/
    this.setAnnotations = function(annotations) {
        this.$gutterLayer.setAnnotations(annotations);
        this.$loop.schedule(this.CHANGE_GUTTER);
    };

    /**
    *
    * Updates the cursor icon.
    **/
    this.updateCursor = function() {
        this.$loop.schedule(this.CHANGE_CURSOR);
    };

    /**
    *
    * Hides the cursor icon.
    **/
    this.hideCursor = function() {
        this.$cursorLayer.hideCursor();
    };

    /**
    *
    * Shows the cursor icon.
    **/
    this.showCursor = function() {
        this.$cursorLayer.showCursor();
    };

    this.scrollSelectionIntoView = function(anchor, lead, offset) {
        // first scroll anchor into view then scroll lead into view
        this.scrollCursorIntoView(anchor, offset);
        this.scrollCursorIntoView(lead, offset);
    };

    /**
    *
    * Scrolls the cursor into the first visibile area of the editor
    **/
    this.scrollCursorIntoView = function(cursor, offset) {
        // the editor is not visible
        if (this.$size.scrollerHeight === 0)
            return;

        var pos = this.$cursorLayer.getPixelPosition(cursor);

        var left = pos.left;
        var top = pos.top;
        
        var scrollTop = this.$scrollAnimation ? this.session.getScrollTop() : this.scrollTop;

        if (scrollTop > top) {
            if (offset)
                top -= offset * this.$size.scrollerHeight;
            if (top == 0)
                top = - this.scrollMargin.top;
            else if (top == 0)
                top = + this.scrollMargin.bottom;
            this.session.setScrollTop(top);
        } else if (scrollTop + this.$size.scrollerHeight < top + this.lineHeight) {
            if (offset)
                top += offset * this.$size.scrollerHeight;
            this.session.setScrollTop(top + this.lineHeight - this.$size.scrollerHeight);
        }

        var scrollLeft = this.scrollLeft;

        if (scrollLeft > left) {
            if (left < this.$padding + 2 * this.layerConfig.characterWidth)
                left = -this.scrollMargin.left;
            this.session.setScrollLeft(left);
        } else if (scrollLeft + this.$size.scrollerWidth < left + this.characterWidth) {
            this.session.setScrollLeft(Math.round(left + this.characterWidth - this.$size.scrollerWidth));
        } else if (scrollLeft <= this.$padding && left - scrollLeft < this.characterWidth) {
            this.session.setScrollLeft(0);
        }
    };

    /**
    * {:EditSession.getScrollTop}
    * @related EditSession.getScrollTop
    * @returns {Number}
    **/
    this.getScrollTop = function() {
        return this.session.getScrollTop();
    };

    /**
    * {:EditSession.getScrollLeft}
    * @related EditSession.getScrollLeft
    * @returns {Number}
    **/
    this.getScrollLeft = function() {
        return this.session.getScrollLeft();
    };

    /**
    *
    * Returns the first visible row, regardless of whether it's fully visible or not.
    * @returns {Number}
    **/
    this.getScrollTopRow = function() {
        return this.scrollTop / this.lineHeight;
    };

    /**
    *
    * Returns the last visible row, regardless of whether it's fully visible or not.
    * @returns {Number}
    **/
    this.getScrollBottomRow = function() {
        return Math.max(0, Math.floor((this.scrollTop + this.$size.scrollerHeight) / this.lineHeight) - 1);
    };

    /**
    * Gracefully scrolls from the top of the editor to the row indicated.
    * @param {Number} row A row id
    *
    *
    * @related EditSession.setScrollTop
    **/
    this.scrollToRow = function(row) {
        this.session.setScrollTop(row * this.lineHeight);
    };

    this.alignCursor = function(cursor, alignment) {
        if (typeof cursor == "number")
            cursor = {row: cursor, column: 0};

        var pos = this.$cursorLayer.getPixelPosition(cursor);
        var h = this.$size.scrollerHeight - this.lineHeight;
        var offset = pos.top - h * (alignment || 0);

        this.session.setScrollTop(offset);
        return offset;
    };

    this.STEPS = 8;
    this.$calcSteps = function(fromValue, toValue){
        var i = 0;
        var l = this.STEPS;
        var steps = [];

        var func  = function(t, x_min, dx) {
            return dx * (Math.pow(t - 1, 3) + 1) + x_min;
        };

        for (i = 0; i < l; ++i)
            steps.push(func(i / this.STEPS, fromValue, toValue - fromValue));

        return steps;
    };

    /**
    * Gracefully scrolls the editor to the row indicated.
    * @param {Number} line A line number
    * @param {Boolean} center If `true`, centers the editor the to indicated line
    * @param {Boolean} animate If `true` animates scrolling
    * @param {Function} callback Function to be called after the animation has finished
    *
    *
    **/
    this.scrollToLine = function(line, center, animate, callback) {
        var pos = this.$cursorLayer.getPixelPosition({row: line, column: 0});
        var offset = pos.top;
        if (center)
            offset -= this.$size.scrollerHeight / 2;

        var initialScroll = this.scrollTop;
        this.session.setScrollTop(offset);
        if (animate !== false)
            this.animateScrolling(initialScroll, callback);
    };

    this.animateScrolling = function(fromValue, callback) {
        var toValue = this.scrollTop;
        if (!this.$animatedScroll)
            return;
        var _self = this;
        
        if (fromValue == toValue)
            return;
        
        if (this.$scrollAnimation) {
            var oldSteps = this.$scrollAnimation.steps;
            if (oldSteps.length) {
                fromValue = oldSteps[0];
                if (fromValue == toValue)
                    return;
            }
        }
        
        var steps = _self.$calcSteps(fromValue, toValue);
        this.$scrollAnimation = {from: fromValue, to: toValue, steps: steps};

        clearInterval(this.$timer);

        _self.session.setScrollTop(steps.shift());
        this.$timer = setInterval(function() {
            if (steps.length) {
                _self.session.setScrollTop(steps.shift());
                // trick session to think it's already scrolled to not loose toValue
                _self.session.$scrollTop = toValue;
            } else if (toValue != null) {
                _self.session.$scrollTop = -1;
                _self.session.setScrollTop(toValue);
                toValue = null;
            } else {
                // do this on separate step to not get spurious scroll event from scrollbar
                _self.$timer = clearInterval(_self.$timer);
                _self.$scrollAnimation = null;
                callback && callback();
            }
        }, 10);
    };

    /**
    * Scrolls the editor to the y pixel indicated.
    * @param {Number} scrollTop The position to scroll to
    *
    *
    * @returns {Number}
    **/
    this.scrollToY = function(scrollTop) {
        // after calling scrollBar.setScrollTop
        // scrollbar sends us event with same scrollTop. ignore it
        if (this.scrollTop !== scrollTop) {
            this.$loop.schedule(this.CHANGE_SCROLL);
            this.scrollTop = scrollTop;
        }
    };

    /**
    * Scrolls the editor across the x-axis to the pixel indicated.
    * @param {Number} scrollLeft The position to scroll to
    *
    *
    * @returns {Number}
    **/
    this.scrollToX = function(scrollLeft) {
        if (this.scrollLeft !== scrollLeft)
            this.scrollLeft = scrollLeft;
        this.$loop.schedule(this.CHANGE_H_SCROLL);
    };

    /**
    * Scrolls the editor across both x- and y-axes.
    * @param {Number} x The x value to scroll to
    * @param {Number} y The y value to scroll to
    **/
    this.scrollTo = function(x, y) {
        this.session.setScrollTop(y);
        this.session.setScrollLeft(y);
    };
    
    /**
    * Scrolls the editor across both x- and y-axes.
    * @param {Number} deltaX The x value to scroll by
    * @param {Number} deltaY The y value to scroll by
    **/
    this.scrollBy = function(deltaX, deltaY) {
        deltaY && this.session.setScrollTop(this.session.getScrollTop() + deltaY);
        deltaX && this.session.setScrollLeft(this.session.getScrollLeft() + deltaX);
    };

    /**
    * Returns `true` if you can still scroll by either parameter; in other words, you haven't reached the end of the file or line.
    * @param {Number} deltaX The x value to scroll by
    * @param {Number} deltaY The y value to scroll by
    *
    *
    * @returns {Boolean}
    **/
    this.isScrollableBy = function(deltaX, deltaY) {
        if (deltaY < 0 && this.session.getScrollTop() >= 1 - this.scrollMargin.top)
           return true;
        if (deltaY > 0 && this.session.getScrollTop() + this.$size.scrollerHeight
            - this.layerConfig.maxHeight - (this.$size.scrollerHeight - this.lineHeight) * this.$scrollPastEnd
            < -1 + this.scrollMargin.bottom)
           return true;
        // todo: better handle horizontal scrolling
        if (deltaX)
           return true;
    };

    this.pixelToScreenCoordinates = function(x, y) {
        var canvasPos = this.scroller.getBoundingClientRect();

        var offset = (x + this.scrollLeft - canvasPos.left - this.$padding) / this.characterWidth;
        var row = Math.floor((y + this.scrollTop - canvasPos.top) / this.lineHeight);
        var col = Math.round(offset);

        return {row: row, column: col, side: offset - col > 0 ? 1 : -1};
    };

    this.screenToTextCoordinates = function(x, y) {
        var canvasPos = this.scroller.getBoundingClientRect();

        var col = Math.round(
            (x + this.scrollLeft - canvasPos.left - this.$padding) / this.characterWidth
        );
        var row = Math.floor(
            (y + this.scrollTop - canvasPos.top) / this.lineHeight
        );

        return this.session.screenToDocumentPosition(row, Math.max(col, 0));
    };

    /**
    * Returns an object containing the `pageX` and `pageY` coordinates of the document position.
    * @param {Number} row The document row position
    * @param {Number} column The document column position
    *
    *
    *
    * @returns {Object}
    **/
    this.textToScreenCoordinates = function(row, column) {
        var canvasPos = this.scroller.getBoundingClientRect();
        var pos = this.session.documentToScreenPosition(row, column);

        var x = this.$padding + Math.round(pos.column * this.characterWidth);
        var y = pos.row * this.lineHeight;

        return {
            pageX: canvasPos.left + x - this.scrollLeft,
            pageY: canvasPos.top + y - this.scrollTop
        };
    };

    /**
    *
    * Focuses the current container.
    **/
    this.visualizeFocus = function() {
        dom.addCssClass(this.container, "ace_focus");
    };

    /**
    *
    * Blurs the current container.
    **/
    this.visualizeBlur = function() {
        dom.removeCssClass(this.container, "ace_focus");
    };

    /**
    * @param {Number} position
    *
    * @private
    **/
    this.showComposition = function(position) {
        if (!this.$composition)
            this.$composition = {
                keepTextAreaAtCursor: this.$keepTextAreaAtCursor,
                cssText: this.textarea.style.cssText
            };

        this.$keepTextAreaAtCursor = true;
        dom.addCssClass(this.textarea, "ace_composition");
        this.textarea.style.cssText = "";
        this.$moveTextAreaToCursor();
    };

    /**
    * @param {String} text A string of text to use
    *
    * Sets the inner text of the current composition to `text`.
    **/
    this.setCompositionText = function(text) {
        this.$moveTextAreaToCursor();
    };

    /**
    *
    * Hides the current composition.
    **/
    this.hideComposition = function() {
        if (!this.$composition)
            return;

        dom.removeCssClass(this.textarea, "ace_composition");
        this.$keepTextAreaAtCursor = this.$composition.keepTextAreaAtCursor;
        this.textarea.style.cssText = this.$composition.cssText;
        this.$composition = null;
    };

    /**
    * [Sets a new theme for the editor. `theme` should exist, and be a directory path, like `ace/theme/textmate`.]{: #VirtualRenderer.setTheme}
    * @param {String} theme The path to a theme
    * @param {Function} cb optional callback
    *
    **/
    this.setTheme = function(theme, cb) {
        var _self = this;
        this.$themeValue = theme;
        _self._dispatchEvent('themeChange',{theme:theme});

        if (!theme || typeof theme == "string") {
            var moduleName = theme || "ace/theme/textmate";
            config.loadModule(["theme", moduleName], afterLoad);
        } else {
            afterLoad(theme);
        }

        function afterLoad(module) {
            if (_self.$themeValue != theme)
                return cb && cb();
            if (!module.cssClass)
                return;
            dom.importCssString(
                module.cssText,
                module.cssClass,
                _self.container.ownerDocument
            );

            if (_self.theme)
                dom.removeCssClass(_self.container, _self.theme.cssClass);

            // this is kept only for backwards compatibility
            _self.$theme = module.cssClass;

            _self.theme = module;
            dom.addCssClass(_self.container, module.cssClass);
            dom.setCssClass(_self.container, "ace_dark", module.isDark);

            var padding = module.padding || 4;
            if (_self.$padding && padding != _self.$padding)
                _self.setPadding(padding);

            // force re-measure of the gutter width
            if (_self.$size) {
                _self.$size.width = 0;
                _self.onResize();
            }

            _self._dispatchEvent('themeLoaded', {theme:module});
            cb && cb();
        }
    };

    /**
    * [Returns the path of the current theme.]{: #VirtualRenderer.getTheme}
    * @returns {String}
    **/
    this.getTheme = function() {
        return this.$themeValue;
    };

    // Methods allows to add / remove CSS classnames to the editor element.
    // This feature can be used by plug-ins to provide a visual indication of
    // a certain mode that editor is in.

    /**
    * [Adds a new class, `style`, to the editor.]{: #VirtualRenderer.setStyle}
    * @param {String} style A class name
    *
    **/
    this.setStyle = function(style, include) {
        dom.setCssClass(this.container, style, include != false);
    };

    /**
    * [Removes the class `style` from the editor.]{: #VirtualRenderer.unsetStyle}
    * @param {String} style A class name
    *
    **/
    this.unsetStyle = function(style) {
        dom.removeCssClass(this.container, style);
    };

    /**
    * @param {String} cursorStyle A css cursor style
    *
    **/
    this.setMouseCursor = function(cursorStyle) {
        this.content.style.cursor = cursorStyle;
    };

    /**
    * Destroys the text and cursor layers for this renderer.
    **/
    this.destroy = function() {
        this.$textLayer.destroy();
        this.$cursorLayer.destroy();
    };

}).call(VirtualRenderer.prototype);


config.defineOptions(VirtualRenderer.prototype, "renderer", {
    animatedScroll: {initialValue: false},
    showInvisibles: {
        set: function(value) {
            if (this.$textLayer.setShowInvisibles(value))
                this.$loop.schedule(this.CHANGE_TEXT);
        },
        initialValue: false
    },
    showPrintMargin: {
        set: function() { this.$updatePrintMargin(); },
        initialValue: true
    },
    printMarginColumn: {
        set: function() { this.$updatePrintMargin(); },
        initialValue: 80
    },
    printMargin: {
        set: function(val) {
            if (typeof val == "number")
                this.$printMarginColumn = val;
            this.$showPrintMargin = !!val;
            this.$updatePrintMargin();
        },
        get: function() {
            return this.$showPrintMargin && this.$printMarginColumn; 
        }
    },
    showGutter: {
        set: function(show){
            this.$gutter.style.display = show ? "block" : "none";
            this.onGutterResize();
        },
        initialValue: true
    },
    fadeFoldWidgets: {
        set: function(show) {
            dom.setCssClass(this.$gutter, "ace_fade-fold-widgets", show);
        },
        initialValue: false
    },
    showFoldWidgets: {
        set: function(show) {this.$gutterLayer.setShowFoldWidgets(show)},
        initialValue: true
    },
    displayIndentGuides: {
        set: function(show) {
            if (this.$textLayer.setDisplayIndentGuides(show))
                this.$loop.schedule(this.CHANGE_TEXT);
        },
        initialValue: true
    },
    highlightGutterLine: {
        set: function(shouldHighlight) {
            if (!this.$gutterLineHighlight) {
                this.$gutterLineHighlight = dom.createElement("div");
                this.$gutterLineHighlight.className = "ace_gutter-active-line";
                this.$gutter.appendChild(this.$gutterLineHighlight);
                return;
            }

            this.$gutterLineHighlight.style.display = shouldHighlight ? "" : "none";
            // if cursorlayer have never been updated there's nothing on screen to update
            if (this.$cursorLayer.$pixelPos)
                this.$updateGutterLineHighlight();
        },
        initialValue: false,
        value: true
    },
    hScrollBarAlwaysVisible: {
        set: function(val) {
            if (!this.$hScrollBarAlwaysVisible || !this.$horizScroll)
                this.$loop.schedule(this.CHANGE_SCROLL);
        },
        initialValue: false
    },
    vScrollBarAlwaysVisible: {
        set: function(val) {
            if (!this.$vScrollBarAlwaysVisible || !this.$vScroll)
                this.$loop.schedule(this.CHANGE_SCROLL);
        },
        initialValue: false
    },
    fontSize:  {
        set: function(size) {
            if (typeof size == "number")
                size = size + "px";
            this.container.style.fontSize = size;
            this.updateFontSize();
        },
        initialValue: 12
    },
    fontFamily: {
        set: function(name) {
            this.container.style.fontFamily = name;
            this.updateFontSize();
        }
    },
    maxLines: {
        set: function(val) {
            this.updateFull();
        }
    },
    minLines: {
        set: function(val) {
            this.updateFull();
        }
    },
    scrollPastEnd: {
        set: function(val) {
            val = +val || 0;
            if (this.$scrollPastEnd == val)
                return;
            this.$scrollPastEnd = val;
            this.$loop.schedule(this.CHANGE_SCROLL);
        },
        initialValue: 0,
        handlesSet: true
    },
    fixedWidthGutter: {
        set: function(val) {
            this.$gutterLayer.$fixedWidth = !!val;
            this.$loop.schedule(this.CHANGE_GUTTER);
        }
    }
});

exports.VirtualRenderer = VirtualRenderer;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mouse/multi_select_handler',['require','exports','module','../lib/event'],function(require, exports, module) {

var event = require("../lib/event");


// mouse
function isSamePoint(p1, p2) {
    return p1.row == p2.row && p1.column == p2.column;
}

function onMouseDown(e) {
    var ev = e.domEvent;
    var alt = ev.altKey;
    var shift = ev.shiftKey;
    var ctrl = e.getAccelKey();
    var button = e.getButton();

    if (e.editor.inMultiSelectMode && button == 2) {
        e.editor.textInput.onContextMenu(e.domEvent);
        return;
    }
    
    if (!ctrl && !alt) {
        if (button == 0 && e.editor.inMultiSelectMode)
            e.editor.exitMultiSelectMode();
        return;
    }

    var editor = e.editor;
    var selection = editor.selection;
    var isMultiSelect = editor.inMultiSelectMode;
    var pos = e.getDocumentPosition();
    var cursor = selection.getCursor();
    var inSelection = e.inSelection() || (selection.isEmpty() && isSamePoint(pos, cursor));


    var mouseX = e.x, mouseY = e.y;
    var onMouseSelection = function(e) {
        mouseX = e.clientX;
        mouseY = e.clientY;
    };

    var blockSelect = function() {
        var newCursor = editor.renderer.pixelToScreenCoordinates(mouseX, mouseY);
        var cursor = session.screenToDocumentPosition(newCursor.row, newCursor.column);

        if (isSamePoint(screenCursor, newCursor)
            && isSamePoint(cursor, selection.selectionLead))
            return;
        screenCursor = newCursor;

        editor.selection.moveCursorToPosition(cursor);
        editor.selection.clearSelection();
        editor.renderer.scrollCursorIntoView();

        editor.removeSelectionMarkers(rectSel);
        rectSel = selection.rectangularRangeBlock(screenCursor, screenAnchor);
        rectSel.forEach(editor.addSelectionMarker, editor);
        editor.updateSelectionMarkers();
    };
    
    var session = editor.session;
    var screenAnchor = editor.renderer.pixelToScreenCoordinates(mouseX, mouseY);
    var screenCursor = screenAnchor;

    

    if (ctrl && !shift && !alt && button == 0) {
        if (!isMultiSelect && inSelection)
            return; // dragging

        if (!isMultiSelect) {
            var range = selection.toOrientedRange();
            editor.addSelectionMarker(range);
        }

        var oldRange = selection.rangeList.rangeAtPoint(pos);

        editor.once("mouseup", function() {
            var tmpSel = selection.toOrientedRange();

            if (oldRange && tmpSel.isEmpty() && isSamePoint(oldRange.cursor, tmpSel.cursor))
                selection.substractPoint(tmpSel.cursor);
            else {
                if (range) {
                    editor.removeSelectionMarker(range);
                    selection.addRange(range);
                }
                selection.addRange(tmpSel);
            }
        });

    } else if (alt && button == 0) {
        e.stop();

        if (isMultiSelect && !ctrl)
            selection.toSingleRange();
        else if (!isMultiSelect && ctrl)
            selection.addRange();

        var rectSel = [];
        if (shift) {
            screenAnchor = session.documentToScreenPosition(selection.lead);
            blockSelect();
        } else {
            selection.moveCursorToPosition(pos);
            selection.clearSelection();
        }


        var onMouseSelectionEnd = function(e) {
            clearInterval(timerId);
            editor.removeSelectionMarkers(rectSel);
            for (var i = 0; i < rectSel.length; i++)
                selection.addRange(rectSel[i]);
        };

        var onSelectionInterval = blockSelect;

        event.capture(editor.container, onMouseSelection, onMouseSelectionEnd);
        var timerId = setInterval(function() {onSelectionInterval();}, 20);

        return e.preventDefault();
    }
}


exports.onMouseDown = onMouseDown;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/commands/multi_select_commands',['require','exports','module','../keyboard/hash_handler'],function(require, exports, module) {

// commands to enter multiselect mode
exports.defaultCommands = [{
    name: "addCursorAbove",
    exec: function(editor) { editor.selectMoreLines(-1); },
    bindKey: {win: "Ctrl-Alt-Up", mac: "Ctrl-Alt-Up"},
    readonly: true
}, {
    name: "addCursorBelow",
    exec: function(editor) { editor.selectMoreLines(1); },
    bindKey: {win: "Ctrl-Alt-Down", mac: "Ctrl-Alt-Down"},
    readonly: true
}, {
    name: "addCursorAboveSkipCurrent",
    exec: function(editor) { editor.selectMoreLines(-1, true); },
    bindKey: {win: "Ctrl-Alt-Shift-Up", mac: "Ctrl-Alt-Shift-Up"},
    readonly: true
}, {
    name: "addCursorBelowSkipCurrent",
    exec: function(editor) { editor.selectMoreLines(1, true); },
    bindKey: {win: "Ctrl-Alt-Shift-Down", mac: "Ctrl-Alt-Shift-Down"},
    readonly: true
}, {
    name: "selectMoreBefore",
    exec: function(editor) { editor.selectMore(-1); },
    bindKey: {win: "Ctrl-Alt-Left", mac: "Ctrl-Alt-Left"},
    readonly: true
}, {
    name: "selectMoreAfter",
    exec: function(editor) { editor.selectMore(1); },
    bindKey: {win: "Ctrl-Alt-Right", mac: "Ctrl-Alt-Right"},
    readonly: true
}, {
    name: "selectNextBefore",
    exec: function(editor) { editor.selectMore(-1, true); },
    bindKey: {win: "Ctrl-Alt-Shift-Left", mac: "Ctrl-Alt-Shift-Left"},
    readonly: true
}, {
    name: "selectNextAfter",
    exec: function(editor) { editor.selectMore(1, true); },
    bindKey: {win: "Ctrl-Alt-Shift-Right", mac: "Ctrl-Alt-Shift-Right"},
    readonly: true
}, {
    name: "splitIntoLines",
    exec: function(editor) { editor.multiSelect.splitIntoLines(); },
    bindKey: {win: "Ctrl-Alt-L", mac: "Ctrl-Alt-L"},
    readonly: true
}, {
    name: "alignCursors",
    exec: function(editor) { editor.alignCursors(); },
    bindKey: {win: "Ctrl-Alt-A", mac: "Ctrl-Alt-A"}
}];

// commands active only in multiselect mode
exports.multiSelectCommands = [{
    name: "singleSelection",
    bindKey: "esc",
    exec: function(editor) { editor.exitMultiSelectMode(); },
    readonly: true,
    isAvailable: function(editor) {return editor && editor.inMultiSelectMode}
}];

var HashHandler = require("../keyboard/hash_handler").HashHandler;
exports.keyboardHandler = new HashHandler(exports.multiSelectCommands);

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/multi_select',['require','exports','module','./range_list','./range','./selection','./mouse/multi_select_handler','./lib/event','./lib/lang','./commands/multi_select_commands','./search','./edit_session','./editor','./config'],function(require, exports, module) {

var RangeList = require("./range_list").RangeList;
var Range = require("./range").Range;
var Selection = require("./selection").Selection;
var onMouseDown = require("./mouse/multi_select_handler").onMouseDown;
var event = require("./lib/event");
var lang = require("./lib/lang");
var commands = require("./commands/multi_select_commands");
exports.commands = commands.defaultCommands.concat(commands.multiSelectCommands);

// Todo: session.find or editor.findVolatile that returns range
var Search = require("./search").Search;
var search = new Search();

function find(session, needle, dir) {
    search.$options.wrap = true;
    search.$options.needle = needle;
    search.$options.backwards = dir == -1;
    return search.find(session);
}

// extend EditSession
var EditSession = require("./edit_session").EditSession;
(function() {
    this.getSelectionMarkers = function() {
        return this.$selectionMarkers;
    };
}).call(EditSession.prototype);

// extend Selection
(function() {
    // list of ranges in reverse addition order
    this.ranges = null;

    // automatically sorted list of ranges
    this.rangeList = null;

    /** 
     * Adds a range to a selection by entering multiselect mode, if necessary.
     * @param {Range} range The new range to add
     * @param {Boolean} $blockChangeEvents Whether or not to block changing events
     * @method Selection.addRange
     **/
    this.addRange = function(range, $blockChangeEvents) {
        if (!range)
            return;

        if (!this.inMultiSelectMode && this.rangeCount == 0) {
            var oldRange = this.toOrientedRange();
            this.rangeList.add(oldRange);
            this.rangeList.add(range);
            if (this.rangeList.ranges.length != 2) {
                this.rangeList.removeAll();
                return $blockChangeEvents || this.fromOrientedRange(range);
            }
            this.rangeList.removeAll();
            this.rangeList.add(oldRange);
            this.$onAddRange(oldRange);
        }

        if (!range.cursor)
            range.cursor = range.end;

        var removed = this.rangeList.add(range);

        this.$onAddRange(range);

        if (removed.length)
            this.$onRemoveRange(removed);

        if (this.rangeCount > 1 && !this.inMultiSelectMode) {
            this._emit("multiSelect");
            this.inMultiSelectMode = true;
            this.session.$undoSelect = false;
            this.rangeList.attach(this.session);
        }

        return $blockChangeEvents || this.fromOrientedRange(range);
    };

    /**
     * @method Selection.toSingleRange
     **/

    this.toSingleRange = function(range) {
        range = range || this.ranges[0];
        var removed = this.rangeList.removeAll();
        if (removed.length)
            this.$onRemoveRange(removed);

        range && this.fromOrientedRange(range);
    };

    /**
     * Removes a Range containing pos (if it exists).
     * @param {Range} pos The position to remove, as a `{row, column}` object
     * @method Selection.substractPoint
     **/
    this.substractPoint = function(pos) {
        var removed = this.rangeList.substractPoint(pos);
        if (removed) {
            this.$onRemoveRange(removed);
            return removed[0];
        }
    };

    /**
     * Merges overlapping ranges ensuring consistency after changes
     * @method Selection.mergeOverlappingRanges
     **/
    this.mergeOverlappingRanges = function() {
        var removed = this.rangeList.merge();
        if (removed.length)
            this.$onRemoveRange(removed);
        else if(this.ranges[0])
            this.fromOrientedRange(this.ranges[0]);
    };

    this.$onAddRange = function(range) {
        this.rangeCount = this.rangeList.ranges.length;
        this.ranges.unshift(range);
        this._emit("addRange", {range: range});
    };

    this.$onRemoveRange = function(removed) {
        this.rangeCount = this.rangeList.ranges.length;
        if (this.rangeCount == 1 && this.inMultiSelectMode) {
            var lastRange = this.rangeList.ranges.pop();
            removed.push(lastRange);
            this.rangeCount = 0;
        }

        for (var i = removed.length; i--; ) {
            var index = this.ranges.indexOf(removed[i]);
            this.ranges.splice(index, 1);
        }

        this._emit("removeRange", {ranges: removed});

        if (this.rangeCount == 0 && this.inMultiSelectMode) {
            this.inMultiSelectMode = false;
            this._emit("singleSelect");
            this.session.$undoSelect = true;
            this.rangeList.detach(this.session);
        }

        lastRange = lastRange || this.ranges[0];
        if (lastRange && !lastRange.isEqual(this.getRange()))
            this.fromOrientedRange(lastRange);
    };

    // adds multicursor support to selection
    this.$initRangeList = function() {
        if (this.rangeList)
            return;

        this.rangeList = new RangeList();
        this.ranges = [];
        this.rangeCount = 0;
    };

    /**
     * Returns a concatenation of all the ranges.
     * @returns {Array}
     * @method Selection.getAllRanges
     **/
    this.getAllRanges = function() {
        return this.rangeCount ? this.rangeList.ranges.concat() : [this.getRange()];
    };

    /**
     * Splits all the ranges into lines.
     * @method Selection.splitIntoLines
     **/

    this.splitIntoLines = function () {
        if (this.rangeCount > 1) {
            var ranges = this.rangeList.ranges;
            var lastRange = ranges[ranges.length - 1];
            var range = Range.fromPoints(ranges[0].start, lastRange.end);

            this.toSingleRange();
            this.setSelectionRange(range, lastRange.cursor == lastRange.start);
        } else {
            var range = this.getRange();
            var isBackwards = this.isBackwards();
            var startRow = range.start.row;
            var endRow = range.end.row;
            if (startRow == endRow) {
                if (isBackwards)
                    var start = range.end, end = range.start;
                else
                    var start = range.start, end = range.end;
                
                this.addRange(Range.fromPoints(end, end));
                this.addRange(Range.fromPoints(start, start));
                return;
            }

            var rectSel = [];
            var r = this.getLineRange(startRow, true);
            r.start.column = range.start.column;
            rectSel.push(r);

            for (var i = startRow + 1; i < endRow; i++)
                rectSel.push(this.getLineRange(i, true));

            r = this.getLineRange(endRow, true);
            r.end.column = range.end.column;
            rectSel.push(r);

            rectSel.forEach(this.addRange, this);
        }
    };

    /**
     * @method Selection.toggleBlockSelection
     **/
    this.toggleBlockSelection = function () {
        if (this.rangeCount > 1) {
            var ranges = this.rangeList.ranges;
            var lastRange = ranges[ranges.length - 1];
            var range = Range.fromPoints(ranges[0].start, lastRange.end);

            this.toSingleRange();
            this.setSelectionRange(range, lastRange.cursor == lastRange.start);
        } else {
            var cursor = this.session.documentToScreenPosition(this.selectionLead);
            var anchor = this.session.documentToScreenPosition(this.selectionAnchor);

            var rectSel = this.rectangularRangeBlock(cursor, anchor);
            rectSel.forEach(this.addRange, this);
        }
    };

    /**
     * 
     * Gets list of ranges composing rectangular block on the screen
     * 
     * @param {Cursor} screenCursor The cursor to use
     * @param {Anchor} screenAnchor The anchor to use
     * @param {Boolean} includeEmptyLines If true, this includes ranges inside the block which are empty due to clipping
     * @returns {Range}
     * @method Selection.rectangularRangeBlock
     **/
    this.rectangularRangeBlock = function(screenCursor, screenAnchor, includeEmptyLines) {
        var rectSel = [];

        var xBackwards = screenCursor.column < screenAnchor.column;
        if (xBackwards) {
            var startColumn = screenCursor.column;
            var endColumn = screenAnchor.column;
        } else {
            var startColumn = screenAnchor.column;
            var endColumn = screenCursor.column;
        }

        var yBackwards = screenCursor.row < screenAnchor.row;
        if (yBackwards) {
            var startRow = screenCursor.row;
            var endRow = screenAnchor.row;
        } else {
            var startRow = screenAnchor.row;
            var endRow = screenCursor.row;
        }

        if (startColumn < 0)
            startColumn = 0;
        if (startRow < 0)
            startRow = 0;

        if (startRow == endRow)
            includeEmptyLines = true;

        for (var row = startRow; row <= endRow; row++) {
            var range = Range.fromPoints(
                this.session.screenToDocumentPosition(row, startColumn),
                this.session.screenToDocumentPosition(row, endColumn)
            );
            if (range.isEmpty()) {
                if (docEnd && isSamePoint(range.end, docEnd))
                    break;
                var docEnd = range.end;
            }
            range.cursor = xBackwards ? range.start : range.end;
            rectSel.push(range);
        }

        if (yBackwards)
            rectSel.reverse();

        if (!includeEmptyLines) {
            var end = rectSel.length - 1;
            while (rectSel[end].isEmpty() && end > 0)
                end--;
            if (end > 0) {
                var start = 0;
                while (rectSel[start].isEmpty())
                    start++;
            }
            for (var i = end; i >= start; i--) {
                if (rectSel[i].isEmpty())
                    rectSel.splice(i, 1);
            }
        }

        return rectSel;
    };
}).call(Selection.prototype);

// extend Editor
var Editor = require("./editor").Editor;
(function() {

    /** 
     * 
     * Updates the cursor and marker layers.
     * @method Editor.updateSelectionMarkers
     *
     **/
    this.updateSelectionMarkers = function() {
        this.renderer.updateCursor();
        this.renderer.updateBackMarkers();
    };

    /** 
     * Adds the selection and cursor.
     * @param {Range} orientedRange A range containing a cursor
     * @returns {Range}
     * @method Editor.addSelectionMarker
     **/
    this.addSelectionMarker = function(orientedRange) {
        if (!orientedRange.cursor)
            orientedRange.cursor = orientedRange.end;

        var style = this.getSelectionStyle();
        orientedRange.marker = this.session.addMarker(orientedRange, "ace_selection", style);

        this.session.$selectionMarkers.push(orientedRange);
        this.session.selectionMarkerCount = this.session.$selectionMarkers.length;
        return orientedRange;
    };

    /** 
     * Removes the selection marker.
     * @param {Range} range The selection range added with [[Editor.addSelectionMarker `addSelectionMarker()`]].
     * @method Editor.removeSelectionMarker
     **/
    this.removeSelectionMarker = function(range) {
        if (!range.marker)
            return;
        this.session.removeMarker(range.marker);
        var index = this.session.$selectionMarkers.indexOf(range);
        if (index != -1)
            this.session.$selectionMarkers.splice(index, 1);
        this.session.selectionMarkerCount = this.session.$selectionMarkers.length;
    };

    this.removeSelectionMarkers = function(ranges) {
        var markerList = this.session.$selectionMarkers;
        for (var i = ranges.length; i--; ) {
            var range = ranges[i];
            if (!range.marker)
                continue;
            this.session.removeMarker(range.marker);
            var index = markerList.indexOf(range);
            if (index != -1)
                markerList.splice(index, 1);
        }
        this.session.selectionMarkerCount = markerList.length;
    };

    this.$onAddRange = function(e) {
        this.addSelectionMarker(e.range);
        this.renderer.updateCursor();
        this.renderer.updateBackMarkers();
    };

    this.$onRemoveRange = function(e) {
        this.removeSelectionMarkers(e.ranges);
        this.renderer.updateCursor();
        this.renderer.updateBackMarkers();
    };

    this.$onMultiSelect = function(e) {
        if (this.inMultiSelectMode)
            return;
        this.inMultiSelectMode = true;

        this.setStyle("ace_multiselect");
        this.keyBinding.addKeyboardHandler(commands.keyboardHandler);
        this.commands.setDefaultHandler("exec", this.$onMultiSelectExec);

        this.renderer.updateCursor();
        this.renderer.updateBackMarkers();
    };

    this.$onSingleSelect = function(e) {
        if (this.session.multiSelect.inVirtualMode)
            return;
        this.inMultiSelectMode = false;

        this.unsetStyle("ace_multiselect");
        this.keyBinding.removeKeyboardHandler(commands.keyboardHandler);

        this.commands.removeDefaultHandler("exec", this.$onMultiSelectExec);
        this.renderer.updateCursor();
        this.renderer.updateBackMarkers();
    };

    this.$onMultiSelectExec = function(e) {
        var command = e.command;
        var editor = e.editor;
        if (!editor.multiSelect)
            return;
        if (!command.multiSelectAction) {
            var result = command.exec(editor, e.args || {});
            editor.multiSelect.addRange(editor.multiSelect.toOrientedRange());
            editor.multiSelect.mergeOverlappingRanges();
        } else if (command.multiSelectAction == "forEach") {
            result = editor.forEachSelection(command, e.args);
        } else if (command.multiSelectAction == "forEachLine") {
            result = editor.forEachSelection(command, e.args, true);
        } else if (command.multiSelectAction == "single") {
            editor.exitMultiSelectMode();
            result = command.exec(editor, e.args || {});
        } else {
            result = command.multiSelectAction(editor, e.args || {});
        }
        return result;
    };

    /** 
     * Executes a command for each selection range.
     * @param {String} cmd The command to execute
     * @param {String} args Any arguments for the command
     * @method Editor.forEachSelection
     **/ 
    this.forEachSelection = function(cmd, args, $byLines) {
        if (this.inVirtualSelectionMode)
            return;

        var session = this.session;
        var selection = this.selection;
        var rangeList = selection.rangeList;
        var result;
        
        var reg = selection._eventRegistry;
        selection._eventRegistry = {};

        var tmpSel = new Selection(session);
        this.inVirtualSelectionMode = true;
        for (var i = rangeList.ranges.length; i--;) {
            if ($byLines) {
                while (i > 0 && rangeList.ranges[i].start.row == rangeList.ranges[i - 1].end.row)
                    i--;
            }
            tmpSel.fromOrientedRange(rangeList.ranges[i]);
            this.selection = session.selection = tmpSel;
            var cmdResult = cmd.exec(this, args || {});
            if (!result == undefined)
                result = cmdResult;
            tmpSel.toOrientedRange(rangeList.ranges[i]);
        }
        tmpSel.detach();

        this.selection = session.selection = selection;
        this.inVirtualSelectionMode = false;
        selection._eventRegistry = reg;
        selection.mergeOverlappingRanges();
        
        var anim = this.renderer.$scrollAnimation;
        this.onCursorChange();
        this.onSelectionChange();
        if (anim && anim.from == anim.to)
            this.renderer.animateScrolling(anim.from);
        
        return result;
    };

    /** 
    * Removes all the selections except the last added one.
    * @method Editor.exitMultiSelectMode
    **/
    this.exitMultiSelectMode = function() {
        if (!this.inMultiSelectMode || this.inVirtualSelectionMode)
            return;
        this.multiSelect.toSingleRange();
    };

    this.getSelectedText = function() {
        var text = "";
        if (this.inMultiSelectMode && !this.inVirtualSelectionMode) {
            var ranges = this.multiSelect.rangeList.ranges;
            var buf = [];
            for (var i = 0; i < ranges.length; i++) {
                buf.push(this.session.getTextRange(ranges[i]));
            }
            var nl = this.session.getDocument().getNewLineCharacter();
            text = buf.join(nl);
            if (text.length == (buf.length - 1) * nl.length)
                text = "";
        } else if (!this.selection.isEmpty()) {
            text = this.session.getTextRange(this.getSelectionRange());
        }
        return text;
    };

    // todo this should change when paste becomes a command
    this.onPaste = function(text) {
        if (this.$readOnly)
            return;

        this._signal("paste", text);
        if (!this.inMultiSelectMode || this.inVirtualSelectionMode)
            return this.insert(text);

        var lines = text.split(/\r\n|\r|\n/);
        var ranges = this.selection.rangeList.ranges;

        if (lines.length > ranges.length || lines.length < 2 || !lines[1])
            return this.commands.exec("insertstring", this, text);

        for (var i = ranges.length; i--;) {
            var range = ranges[i];
            if (!range.isEmpty())
                this.session.remove(range);

            this.session.insert(range.start, lines[i]);
        }
    };

    /**
     * Finds and selects all the occurences of `needle`.
     * @param {String} The text to find
     * @param {Object} The search options
     * @param {Boolean} keeps
     *
     * @returns {Number} The cumulative count of all found matches 
     * @method Editor.findAll
     **/
    this.findAll = function(needle, options, additive) {
        options = options || {};
        options.needle = needle || options.needle;
        this.$search.set(options);

        var ranges = this.$search.findAll(this.session);
        if (!ranges.length)
            return 0;

        this.$blockScrolling += 1;
        var selection = this.multiSelect;

        if (!additive)
            selection.toSingleRange(ranges[0]);

        for (var i = ranges.length; i--; )
            selection.addRange(ranges[i], true);

        this.$blockScrolling -= 1;

        return ranges.length;
    };

    /**
     * Adds a cursor above or below the active cursor.
     * 
     * @param {Number} dir The direction of lines to select: -1 for up, 1 for down
     * @param {Boolean} skip If `true`, removes the active selection range
     *
     * @method Editor.selectMoreLines 
     */
    this.selectMoreLines = function(dir, skip) {
        var range = this.selection.toOrientedRange();
        var isBackwards = range.cursor == range.end;

        var screenLead = this.session.documentToScreenPosition(range.cursor);
        if (this.selection.$desiredColumn)
            screenLead.column = this.selection.$desiredColumn;

        var lead = this.session.screenToDocumentPosition(screenLead.row + dir, screenLead.column);

        if (!range.isEmpty()) {
            var screenAnchor = this.session.documentToScreenPosition(isBackwards ? range.end : range.start);
            var anchor = this.session.screenToDocumentPosition(screenAnchor.row + dir, screenAnchor.column);
        } else {
            var anchor = lead;
        }

        if (isBackwards) {
            var newRange = Range.fromPoints(lead, anchor);
            newRange.cursor = newRange.start;
        } else {
            var newRange = Range.fromPoints(anchor, lead);
            newRange.cursor = newRange.end;
        }

        newRange.desiredColumn = screenLead.column;
        if (!this.selection.inMultiSelectMode) {
            this.selection.addRange(range);
        } else {
            if (skip)
                var toRemove = range.cursor;
        }

        this.selection.addRange(newRange);
        if (toRemove)
            this.selection.substractPoint(toRemove);
    };

    /** 
     * Transposes the selected ranges.
     * @param {Number} dir The direction to rotate selections
     * @method Editor.transposeSelections
     **/
    this.transposeSelections = function(dir) {
        var session = this.session;
        var sel = session.multiSelect;
        var all = sel.ranges;

        for (var i = all.length; i--; ) {
            var range = all[i];
            if (range.isEmpty()) {
                var tmp = session.getWordRange(range.start.row, range.start.column);
                range.start.row = tmp.start.row;
                range.start.column = tmp.start.column;
                range.end.row = tmp.end.row;
                range.end.column = tmp.end.column;
            }
        }
        sel.mergeOverlappingRanges();

        var words = [];
        for (var i = all.length; i--; ) {
            var range = all[i];
            words.unshift(session.getTextRange(range));
        }

        if (dir < 0)
            words.unshift(words.pop());
        else
            words.push(words.shift());

        for (var i = all.length; i--; ) {
            var range = all[i];
            var tmp = range.clone();
            session.replace(range, words[i]);
            range.start.row = tmp.start.row;
            range.start.column = tmp.start.column;
        }
    };

    /** 
     * Finds the next occurence of text in an active selection and adds it to the selections.
     * @param {Number} dir The direction of lines to select: -1 for up, 1 for down
     * @param {Boolean} skip If `true`, removes the active selection range
     * @method Editor.selectMore
     **/
    this.selectMore = function(dir, skip) {
        var session = this.session;
        var sel = session.multiSelect;

        var range = sel.toOrientedRange();
        if (range.isEmpty()) {
            var range = session.getWordRange(range.start.row, range.start.column);
            range.cursor = range.end;
            this.multiSelect.addRange(range);
        }
        var needle = session.getTextRange(range);

        var newRange = find(session, needle, dir);
        if (newRange) {
            newRange.cursor = dir == -1 ? newRange.start : newRange.end;
            this.multiSelect.addRange(newRange);
        }
        if (skip)
            this.multiSelect.substractPoint(range.cursor);
    };

    /** 
     * Aligns the cursors or selected text.
     * @method Editor.alignCursors
     **/
    this.alignCursors = function() {
        var session = this.session;
        var sel = session.multiSelect;
        var ranges = sel.ranges;

        if (!ranges.length) {
            var range = this.selection.getRange();
            var fr = range.start.row, lr = range.end.row;
            var lines = this.session.doc.removeLines(fr, lr);
            lines = this.$reAlignText(lines);
            this.session.doc.insertLines(fr, lines);
            range.start.column = 0;
            range.end.column = lines[lines.length - 1].length;
            this.selection.setRange(range);
        } else {
            // filter out ranges on same row
            var row = -1;
            var sameRowRanges = ranges.filter(function(r) {
                if (r.cursor.row == row)
                    return true;
                row = r.cursor.row;
            });
            sel.$onRemoveRange(sameRowRanges);

            var maxCol = 0;
            var minSpace = Infinity;
            var spaceOffsets = ranges.map(function(r) {
                var p = r.cursor;
                var line = session.getLine(p.row);
                var spaceOffset = line.substr(p.column).search(/\S/g);
                if (spaceOffset == -1)
                    spaceOffset = 0;

                if (p.column > maxCol)
                    maxCol = p.column;
                if (spaceOffset < minSpace)
                    minSpace = spaceOffset;
                return spaceOffset;
            });
            ranges.forEach(function(r, i) {
                var p = r.cursor;
                var l = maxCol - p.column;
                var d = spaceOffsets[i] - minSpace;
                if (l > d)
                    session.insert(p, lang.stringRepeat(" ", l - d));
                else
                    session.remove(new Range(p.row, p.column, p.row, p.column - l + d));

                r.start.column = r.end.column = maxCol;
                r.start.row = r.end.row = p.row;
                r.cursor = r.end;
            });
            sel.fromOrientedRange(ranges[0]);
            this.renderer.updateCursor();
            this.renderer.updateBackMarkers();
        }
    };

    this.$reAlignText = function(lines) {
        var isLeftAligned = true, isRightAligned = true;
        var startW, textW, endW;

        return lines.map(function(line) {
            var m = line.match(/(\s*)(.*?)(\s*)([=:].*)/);
            if (!m)
                return [line];

            if (startW == null) {
                startW = m[1].length;
                textW = m[2].length;
                endW = m[3].length;
                return m;
            }

            if (startW + textW + endW != m[1].length + m[2].length + m[3].length)
                isRightAligned = false;
            if (startW != m[1].length)
                isLeftAligned = false;

            if (startW > m[1].length)
                startW = m[1].length;
            if (textW < m[2].length)
                textW = m[2].length;
            if (endW > m[3].length)
                endW = m[3].length;

            return m;
        }).map(isLeftAligned ? isRightAligned ? alignRight : alignLeft : unAlign);

        function spaces(n) {
            return lang.stringRepeat(" ", n);
        }

        function alignLeft(m) {
            return !m[2] ? m[0] : spaces(startW) + m[2]
                + spaces(textW - m[2].length + endW)
                + m[4].replace(/^([=:])\s+/, "$1 ")
        }
        function alignRight(m) {
            return !m[2] ? m[0] : spaces(startW + textW - m[2].length) + m[2]
                + spaces(endW, " ")
                + m[4].replace(/^([=:])\s+/, "$1 ")
        }
        function unAlign(m) {
            return !m[2] ? m[0] : spaces(startW) + m[2]
                + spaces(endW)
                + m[4].replace(/^([=:])\s+/, "$1 ")
        }
    }
}).call(Editor.prototype);


function isSamePoint(p1, p2) {
    return p1.row == p2.row && p1.column == p2.column;
}

// patch
// adds multicursor support to a session
exports.onSessionChange = function(e) {
    var session = e.session;
    if (!session.multiSelect) {
        session.$selectionMarkers = [];
        session.selection.$initRangeList();
        session.multiSelect = session.selection;
    }
    this.multiSelect = session.multiSelect;

    var oldSession = e.oldSession;
    if (oldSession) {
        oldSession.multiSelect.removeEventListener("addRange", this.$onAddRange);
        oldSession.multiSelect.removeEventListener("removeRange", this.$onRemoveRange);
        oldSession.multiSelect.removeEventListener("multiSelect", this.$onMultiSelect);
        oldSession.multiSelect.removeEventListener("singleSelect", this.$onSingleSelect);
    }

    session.multiSelect.on("addRange", this.$onAddRange);
    session.multiSelect.on("removeRange", this.$onRemoveRange);
    session.multiSelect.on("multiSelect", this.$onMultiSelect);
    session.multiSelect.on("singleSelect", this.$onSingleSelect);

    // this.$onSelectionChange = this.onSelectionChange.bind(this);

    if (this.inMultiSelectMode != session.selection.inMultiSelectMode) {
        if (session.selection.inMultiSelectMode)
            this.$onMultiSelect();
        else
            this.$onSingleSelect();
    }
};

// MultiSelect(editor)
// adds multiple selection support to the editor
// (note: should be called only once for each editor instance)
function MultiSelect(editor) {
    if (editor.$multiselectOnSessionChange)
        return;
    editor.$onAddRange = editor.$onAddRange.bind(editor);
    editor.$onRemoveRange = editor.$onRemoveRange.bind(editor);
    editor.$onMultiSelect = editor.$onMultiSelect.bind(editor);
    editor.$onSingleSelect = editor.$onSingleSelect.bind(editor);
    editor.$multiselectOnSessionChange = exports.onSessionChange.bind(editor);

    editor.$multiselectOnSessionChange(editor);
    editor.on("changeSession", editor.$multiselectOnSessionChange);

    editor.on("mousedown", onMouseDown);
    editor.commands.addCommands(commands.defaultCommands);

    addAltCursorListeners(editor);
}

function addAltCursorListeners(editor){
    var el = editor.textInput.getElement();
    var altCursor = false;
    event.addListener(el, "keydown", function(e) {
        if (e.keyCode == 18 && !(e.ctrlKey || e.shiftKey || e.metaKey)) {
            if (!altCursor) {
                editor.renderer.setMouseCursor("crosshair");
                altCursor = true;
            }
        } else if (altCursor) {
            reset();
        }
    });

    event.addListener(el, "keyup", reset);
    event.addListener(el, "blur", reset);
    function reset(e) {
        if (altCursor) {
            editor.renderer.setMouseCursor("");
            altCursor = false;
            // TODO disable menu poping up
            // e && e.preventDefault()
        }
    }
}

exports.MultiSelect = MultiSelect;


require("./config").defineOptions(Editor.prototype, "editor", {
    enableMultiselect: {
        set: function(val) {
            MultiSelect(this);
            if (val) {
                this.on("changeSession", this.$multiselectOnSessionChange);
                this.on("mousedown", onMouseDown);
            } else {
                this.off("changeSession", this.$multiselectOnSessionChange);
                this.off("mousedown", onMouseDown);
            }
        },
        value: true
    }
})



});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/worker/worker_client',['require','exports','module','../lib/oop','../lib/event_emitter','../config'],function(require, exports, module) {


var oop = require("../lib/oop");
var EventEmitter = require("../lib/event_emitter").EventEmitter;
var config = require("../config");

var WorkerClient = function(topLevelNamespaces, mod, classname) {
    this.$sendDeltaQueue = this.$sendDeltaQueue.bind(this);
    this.changeListener = this.changeListener.bind(this);
    this.onMessage = this.onMessage.bind(this);
    this.onError = this.onError.bind(this);

    // nameToUrl is renamed to toUrl in requirejs 2
    if (require.nameToUrl && !require.toUrl)
        require.toUrl = require.nameToUrl;

    var workerUrl;
    if (config.get("packaged") || !require.toUrl) {
        workerUrl = config.moduleUrl(mod, "worker");
    } else {
        var normalizePath = this.$normalizePath;
        workerUrl = normalizePath(require.toUrl("ace/worker/worker.js", null, "_"));

        var tlns = {};
        topLevelNamespaces.forEach(function(ns) {
            tlns[ns] = normalizePath(require.toUrl(ns, null, "_").replace(/(\.js)?(\?.*)?$/, ""));
        });
    }

    this.$worker = new Worker(workerUrl);
    this.$worker.postMessage({
        init : true,
        tlns: tlns,
        module: mod,
        classname: classname
    });

    this.callbackId = 1;
    this.callbacks = {};

    this.$worker.onerror = this.onError;
    this.$worker.onmessage = this.onMessage;
};

(function(){

    oop.implement(this, EventEmitter);

    this.onError = function(e) {
        window.console && console.log && console.log(e);
        throw e;
    };

    this.onMessage = function(e) {
        var msg = e.data;
        switch(msg.type) {
            case "log":
                window.console && console.log && console.log.apply(console, msg.data);
                break;

            case "event":
                this._emit(msg.name, {data: msg.data});
                break;

            case "call":
                var callback = this.callbacks[msg.id];
                if (callback) {
                    callback(msg.data);
                    delete this.callbacks[msg.id];
                }
                break;
        }
    };

    this.$normalizePath = function(path) {
        if (!location.host) // needed for file:// protocol
            return path;
        path = path.replace(/^[a-z]+:\/\/[^\/]+/, ""); // Remove domain name and rebuild it
        path = location.protocol + "//" + location.host
            // paths starting with a slash are relative to the root (host)
            + (path.charAt(0) == "/" ? "" : location.pathname.replace(/\/[^\/]*$/, ""))
            + "/" + path.replace(/^[\/]+/, "");
        return path;
    };

    this.terminate = function() {
        this._emit("terminate", {});
        this.deltaQueue = null;
        this.$worker.terminate();
        this.$worker = null;
        this.$doc.removeEventListener("change", this.changeListener);
        this.$doc = null;
    };

    this.send = function(cmd, args) {
        this.$worker.postMessage({command: cmd, args: args});
    };

    this.call = function(cmd, args, callback) {
        if (callback) {
            var id = this.callbackId++;
            this.callbacks[id] = callback;
            args.push(id);
        }
        this.send(cmd, args);
    };

    this.emit = function(event, data) {
        try {
            // firefox refuses to clone objects which have function properties
            // TODO: cleanup event
            this.$worker.postMessage({event: event, data: {data: data.data}});
        }
        catch(ex) {}
    };

    this.attachToDocument = function(doc) {
        if(this.$doc)
            this.terminate();

        this.$doc = doc;
        this.call("setValue", [doc.getValue()]);
        doc.on("change", this.changeListener);
    };

    this.changeListener = function(e) {
        if (!this.deltaQueue) {
            this.deltaQueue = [e.data];
            setTimeout(this.$sendDeltaQueue, 1);
        } else
            this.deltaQueue.push(e.data);
    };

    this.$sendDeltaQueue = function() {
        var q = this.deltaQueue;
        if (!q) return;
        this.deltaQueue = null;
        if (q.length > 20 && q.length > this.$doc.getLength() >> 1) {
            this.call("setValue", [this.$doc.getValue()]);
        } else
            this.emit("change", {data: q});
    }

}).call(WorkerClient.prototype);


var UIWorkerClient = function(topLevelNamespaces, mod, classname) {
    this.$sendDeltaQueue = this.$sendDeltaQueue.bind(this);
    this.changeListener = this.changeListener.bind(this);
    this.callbackId = 1;
    this.callbacks = {};
    this.messageBuffer = [];

    var main = null;
    var sender = Object.create(EventEmitter);
    var _self = this;

    this.$worker = {};
    this.$worker.terminate = function() {};
    this.$worker.postMessage = function(e) {
        _self.messageBuffer.push(e);
        main && setTimeout(processNext);
    };

    var processNext = function() {
        var msg = _self.messageBuffer.shift();
        if (msg.command)
            main[msg.command].apply(main, msg.args);
        else if (msg.event)
            sender._emit(msg.event, msg.data);
    };

    sender.postMessage = function(msg) {
        _self.onMessage({data: msg});
    };
    sender.callback = function(data, callbackId) {
        this.postMessage({type: "call", id: callbackId, data: data});
    };
    sender.emit = function(name, data) {
        this.postMessage({type: "event", name: name, data: data});
    };

    config.loadModule(["worker", mod], function(Main) {
        main = new Main[classname](sender);
        while (_self.messageBuffer.length)
            processNext();
    });
};

UIWorkerClient.prototype = WorkerClient.prototype;

exports.UIWorkerClient = UIWorkerClient;
exports.WorkerClient = WorkerClient;

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */
define('ace/placeholder',['require','exports','module','./range','./lib/event_emitter','./lib/oop'],function(require, exports, module) {


var Range = require("./range").Range;
var EventEmitter = require("./lib/event_emitter").EventEmitter;
var oop = require("./lib/oop");

/**
 * @class PlaceHolder
 *
 * 
 **/

/**
 * - session (Document): The document to associate with the anchor
 * - length (Number): The starting row position
 * - pos (Number): The starting column position
 * - others (String):
 * - mainClass (String):
 * - othersClass (String):
 *
 * 
 * @constructor
 **/

var PlaceHolder = function(session, length, pos, others, mainClass, othersClass) {
    var _self = this;
    this.length = length;
    this.session = session;
    this.doc = session.getDocument();
    this.mainClass = mainClass;
    this.othersClass = othersClass;
    this.$onUpdate = this.onUpdate.bind(this);
    this.doc.on("change", this.$onUpdate);
    this.$others = others;
    
    this.$onCursorChange = function() {
        setTimeout(function() {
            _self.onCursorChange();
        });
    };
    
    this.$pos = pos;
    // Used for reset
    var undoStack = session.getUndoManager().$undoStack || session.getUndoManager().$undostack || {length: -1};
    this.$undoStackDepth =  undoStack.length;
    this.setup();

    session.selection.on("changeCursor", this.$onCursorChange);
};

(function() {

    oop.implement(this, EventEmitter);

    /**
     * PlaceHolder.setup()
     *
     * TODO
     *
     **/
    this.setup = function() {
        var _self = this;
        var doc = this.doc;
        var session = this.session;
        var pos = this.$pos;

        this.pos = doc.createAnchor(pos.row, pos.column);
        this.markerId = session.addMarker(new Range(pos.row, pos.column, pos.row, pos.column + this.length), this.mainClass, null, false);
        this.pos.on("change", function(event) {
            session.removeMarker(_self.markerId);
            _self.markerId = session.addMarker(new Range(event.value.row, event.value.column, event.value.row, event.value.column+_self.length), _self.mainClass, null, false);
        });
        this.others = [];
        this.$others.forEach(function(other) {
            var anchor = doc.createAnchor(other.row, other.column);
            _self.others.push(anchor);
        });
        session.setUndoSelect(false);
    };
    
    /**
     * PlaceHolder.showOtherMarkers()
     *
     * TODO
     *
     **/
    this.showOtherMarkers = function() {
        if(this.othersActive) return;
        var session = this.session;
        var _self = this;
        this.othersActive = true;
        this.others.forEach(function(anchor) {
            anchor.markerId = session.addMarker(new Range(anchor.row, anchor.column, anchor.row, anchor.column+_self.length), _self.othersClass, null, false);
            anchor.on("change", function(event) {
                session.removeMarker(anchor.markerId);
                anchor.markerId = session.addMarker(new Range(event.value.row, event.value.column, event.value.row, event.value.column+_self.length), _self.othersClass, null, false);
            });
        });
    };
    
    /**
     * PlaceHolder.hideOtherMarkers()
     *
     * Hides all over markers in the [[EditSession `EditSession`]] that are not the currently selected one.
     *
     **/
    this.hideOtherMarkers = function() {
        if(!this.othersActive) return;
        this.othersActive = false;
        for (var i = 0; i < this.others.length; i++) {
            this.session.removeMarker(this.others[i].markerId);
        }
    };

    /**
     * PlaceHolder@onUpdate(e)
     * 
     * Emitted when the place holder updates.
     *
     **/
    this.onUpdate = function(event) {
        var delta = event.data;
        var range = delta.range;
        if(range.start.row !== range.end.row) return;
        if(range.start.row !== this.pos.row) return;
        if (this.$updating) return;
        this.$updating = true;
        var lengthDiff = delta.action === "insertText" ? range.end.column - range.start.column : range.start.column - range.end.column;
        
        if(range.start.column >= this.pos.column && range.start.column <= this.pos.column + this.length + 1) {
            var distanceFromStart = range.start.column - this.pos.column;
            this.length += lengthDiff;
            if(!this.session.$fromUndo) {
                if(delta.action === "insertText") {
                    for (var i = this.others.length - 1; i >= 0; i--) {
                        var otherPos = this.others[i];
                        var newPos = {row: otherPos.row, column: otherPos.column + distanceFromStart};
                        if(otherPos.row === range.start.row && range.start.column < otherPos.column)
                            newPos.column += lengthDiff;
                        this.doc.insert(newPos, delta.text);
                    }
                } else if(delta.action === "removeText") {
                    for (var i = this.others.length - 1; i >= 0; i--) {
                        var otherPos = this.others[i];
                        var newPos = {row: otherPos.row, column: otherPos.column + distanceFromStart};
                        if(otherPos.row === range.start.row && range.start.column < otherPos.column)
                            newPos.column += lengthDiff;
                        this.doc.remove(new Range(newPos.row, newPos.column, newPos.row, newPos.column - lengthDiff));
                    }
                }
                // Special case: insert in beginning
                if(range.start.column === this.pos.column && delta.action === "insertText") {
                    setTimeout(function() {
                        this.pos.setPosition(this.pos.row, this.pos.column - lengthDiff);
                        for (var i = 0; i < this.others.length; i++) {
                            var other = this.others[i];
                            var newPos = {row: other.row, column: other.column - lengthDiff};
                            if(other.row === range.start.row && range.start.column < other.column)
                                newPos.column += lengthDiff;
                            other.setPosition(newPos.row, newPos.column);
                        }
                    }.bind(this), 0);
                }
                else if(range.start.column === this.pos.column && delta.action === "removeText") {
                    setTimeout(function() {
                        for (var i = 0; i < this.others.length; i++) {
                            var other = this.others[i];
                            if(other.row === range.start.row && range.start.column < other.column) {
                                other.setPosition(other.row, other.column - lengthDiff);
                            }
                        }
                    }.bind(this), 0);
                }
            }
            this.pos._emit("change", {value: this.pos});
            for (var i = 0; i < this.others.length; i++) {
                this.others[i]._emit("change", {value: this.others[i]});
            }
        }
        this.$updating = false;
    };
    
    /**
     * PlaceHolder@onCursorChange(e)
     * 
     * Emitted when the cursor changes.
     *
     **/

    this.onCursorChange = function(event) {
        if (this.$updating) return;
        var pos = this.session.selection.getCursor();
        if(pos.row === this.pos.row && pos.column >= this.pos.column && pos.column <= this.pos.column + this.length) {
            this.showOtherMarkers();
            this._emit("cursorEnter", event);
        } else {
            this.hideOtherMarkers();
            this._emit("cursorLeave", event);
        }
    };
    
    /**
     * PlaceHolder.detach()
     * 
     * TODO
     *
     **/    
    this.detach = function() {
        this.session.removeMarker(this.markerId);
        this.hideOtherMarkers();
        this.doc.removeEventListener("change", this.$onUpdate);
        this.session.selection.removeEventListener("changeCursor", this.$onCursorChange);
        this.pos.detach();
        for (var i = 0; i < this.others.length; i++) {
            this.others[i].detach();
        }
        this.session.setUndoSelect(true);
    };
    
    /**
     * PlaceHolder.cancel()
     * 
     * TODO
     *
     **/
    this.cancel = function() {
        if(this.$undoStackDepth === -1)
            throw Error("Canceling placeholders only supported with undo manager attached to session.");
        var undoManager = this.session.getUndoManager();
        var undosRequired = (undoManager.$undoStack || undoManager.$undostack).length - this.$undoStackDepth;
        for (var i = 0; i < undosRequired; i++) {
            undoManager.undo(true);
        }
    };
}).call(PlaceHolder.prototype);


exports.PlaceHolder = PlaceHolder;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mode/folding/fold_mode',['require','exports','module','../../range'],function(require, exports, module) {


var Range = require("../../range").Range;

var FoldMode = exports.FoldMode = function() {};

(function() {

    this.foldingStartMarker = null;
    this.foldingStopMarker = null;

    // must return "" if there's no fold, to enable caching
    this.getFoldWidget = function(session, foldStyle, row) {
        var line = session.getLine(row);
        if (this.foldingStartMarker.test(line))
            return "start";
        if (foldStyle == "markbeginend"
                && this.foldingStopMarker
                && this.foldingStopMarker.test(line))
            return "end";
        return "";
    };

    this.getFoldWidgetRange = function(session, foldStyle, row) {
        return null;
    };

    this.indentationBlock = function(session, row, column) {
        var re = /\S/;
        var line = session.getLine(row);
        var startLevel = line.search(re);
        if (startLevel == -1)
            return;

        var startColumn = column || line.length;
        var maxRow = session.getLength();
        var startRow = row;
        var endRow = row;

        while (++row < maxRow) {
            var level = session.getLine(row).search(re);

            if (level == -1)
                continue;

            if (level <= startLevel)
                break;

            endRow = row;
        }

        if (endRow > startRow) {
            var endColumn = session.getLine(endRow).length;
            return new Range(startRow, startColumn, endRow, endColumn);
        }
    };

    this.openingBracketBlock = function(session, bracket, row, column, typeRe) {
        var start = {row: row, column: column + 1};
        var end = session.$findClosingBracket(bracket, start, typeRe);
        if (!end)
            return;

        var fw = session.foldWidgets[end.row];
        if (fw == null)
            fw = this.getFoldWidget(session, end.row);

        if (fw == "start" && end.row > start.row) {
            end.row --;
            end.column = session.getLine(end.row).length;
        }
        return Range.fromPoints(start, end);
    };

    this.closingBracketBlock = function(session, bracket, row, column, typeRe) {
        var end = {row: row, column: column};
        var start = session.$findOpeningBracket(bracket, end);

        if (!start)
            return;

        start.column++;
        end.column--;

        return  Range.fromPoints(start, end);
    };
}).call(FoldMode.prototype);

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/theme/textmate',['require','exports','module','../requirejs/text!./textmate.css','../lib/dom'],function(require, exports, module) {


exports.isDark = false;
exports.cssClass = "ace-tm";
exports.cssText = require("../requirejs/text!./textmate.css");

var dom = require("../lib/dom");
dom.importCssString(exports.cssText, exports.cssClass);
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

/**
 * The main class required to set up an Ace instance in the browser.
 *
 * @class Ace
 **/

define('ace/ace',['require','exports','module','./lib/fixoldbrowsers','./lib/dom','./lib/event','./editor','./edit_session','./undomanager','./virtual_renderer','./multi_select','./worker/worker_client','./keyboard/hash_handler','./placeholder','./mode/folding/fold_mode','./theme/textmate','./config'],function(require, exports, module) {


require("./lib/fixoldbrowsers");

var dom = require("./lib/dom");
var event = require("./lib/event");

var Editor = require("./editor").Editor;
var EditSession = require("./edit_session").EditSession;
var UndoManager = require("./undomanager").UndoManager;
var Renderer = require("./virtual_renderer").VirtualRenderer;
var MultiSelect = require("./multi_select").MultiSelect;

// The following require()s are for inclusion in the built ace file
require("./worker/worker_client");
require("./keyboard/hash_handler");
require("./placeholder");
require("./mode/folding/fold_mode");
require("./theme/textmate");

exports.config = require("./config");

/**
 * Provides access to require in packed noconflict mode
 * @param {String} moduleName
 * @returns {Object}
 *
 **/
exports.require = require;

/**
 * Embeds the Ace editor into the DOM, at the element provided by `el`.
 * @param {String | DOMElement} el Either the id of an element, or the element itself
 *
 **/
exports.edit = function(el) {
    if (typeof(el) == "string") {
        var _id = el;
        var el = document.getElementById(_id);
        if (!el)
            throw "ace.edit can't find div #" + _id;
    }

    if (el.env && el.env.editor instanceof Editor)
        return el.env.editor;

    var doc = exports.createEditSession(dom.getInnerText(el));
    el.innerHTML = '';

    var editor = new Editor(new Renderer(el));
    new MultiSelect(editor);
    editor.setSession(doc);

    var env = {
        document: doc,
        editor: editor,
        onResize: editor.resize.bind(editor, null)
    };
    event.addListener(window, "resize", env.onResize);
    editor.on("destroy", function() {
        event.removeListener(window, "resize", env.onResize);
    });
    el.env = editor.env = env;
    return editor;
};

/**
 * Creates a new [[EditSession]], and returns the associated [[Document]].
 * @param {Document | String} text {:textParam}
 * @param {TextMode} mode {:modeParam}
 * 
 **/
exports.createEditSession = function(text, mode) {
    var doc = new EditSession(text, mode);
    doc.setUndoManager(new UndoManager());
    return doc;
}
exports.EditSession = EditSession;
exports.UndoManager = UndoManager;
});

define('ace', ['ace/ace'], function (main) { return main; });

/*!
 * XRegExp-All 3.0.0-pre
 * <http://xregexp.com/>
 * Steven Levithan � 2012 MIT License
 */

// Module systems magic dance
;(function(definition) {
    // Don't turn on strict mode for this function, so it can assign to global
    var self;

    // RequireJS
    if (typeof define === 'function') {
        define('xregexp',definition);
    // CommonJS
    } else if (typeof exports === 'object') {
        self = definition();
        // Use Node.js's `module.exports`. This supports both `require('xregexp')` and
        // `require('xregexp').XRegExp`
        (typeof module === 'object' ? (module.exports = self) : exports).XRegExp = self;
    // <script>
    } else {
        // Create global
        XRegExp = definition();
    }
}(function() {

/*!
 * XRegExp 3.0.0-pre
 * <http://xregexp.com/>
 * Steven Levithan � 2007-2012 MIT License
 */

/**
 * XRegExp provides augmented, extensible regular expressions. You get new syntax, flags, and
 * methods beyond what browsers support natively. XRegExp is also a regex utility belt with tools
 * to make your client-side grepping simpler and more powerful, while freeing you from worrying
 * about pesky cross-browser inconsistencies and the dubious `lastIndex` property.
 */
var XRegExp = (function(undefined) {
    

/* ==============================
 * Private variables
 * ============================== */

    var // ...

// Property name used for extended regex instance data
    REGEX_DATA = 'xregexp',

// Internal reference to the `XRegExp` object
    self,

// Optional features that can be installed and uninstalled
    features = {
        astral: false,
        natives: false
    },

// Store native methods to use and restore ('native' is an ES3 reserved keyword)
    nativ = {
        exec: RegExp.prototype.exec,
        test: RegExp.prototype.test,
        match: String.prototype.match,
        replace: String.prototype.replace,
        split: String.prototype.split
    },

// Storage for fixed/extended native methods
    fixed = {},

// Storage for regexes cached by `XRegExp.cache`
    cache = {},

// Storage for pattern details cached by the `XRegExp` constructor
    patternCache = {},

// Storage for regex syntax tokens added internally or by `XRegExp.addToken`
    tokens = [],

// Token scopes
    defaultScope = 'default',
    classScope = 'class',

// Regexes that match native regex syntax, including octals
    nativeTokens = {
        // Any native multicharacter token in default scope, or any single character
        'default': /\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|c[A-Za-z]|[\s\S])|\(\?[:=!]|[?*+]\?|{\d+(?:,\d*)?}\??|[\s\S]/,
        // Any native multicharacter token in character class scope, or any single character
        'class': /\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|c[A-Za-z]|[\s\S])|[\s\S]/
    },

// Any backreference or dollar-prefixed character in replacement strings
    replacementToken = /\$(?:{([\w$]+)}|(\d\d?|[\s\S]))/g,

// Check for correct `exec` handling of nonparticipating capturing groups
    correctExecNpcg = nativ.exec.call(/()??/, '')[1] === undefined,

// Check for flag y support
    hasNativeY = RegExp.prototype.sticky !== undefined,

// Tracker for known flags, including addon flags
    registeredFlags = {
        g: true,
        i: true,
        m: true,
        y: hasNativeY
    },

// Shortcut to `Object.prototype.toString`
    toString = {}.toString,

// Shortcut to `XRegExp.addToken`
    add;

/* ==============================
 * Private functions
 * ============================== */

/**
 * Attaches named capture data and `XRegExp.prototype` properties to a regex object.
 * @private
 * @param {RegExp} regex Regex to augment.
 * @param {Array} captureNames Array with capture names, or `null`.
 * @param {Boolean} [addProto=false] Whether to attach `XRegExp.prototype` properties. Not
 *   attaching properties avoids a minor performance penalty.
 * @returns {RegExp} Augmented regex.
 */
    function augment(regex, captureNames, addProto) {
        var p;

        if (addProto) {
            // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value
            if (regex.__proto__) {
                regex.__proto__ = self.prototype;
            } else {
                for (p in self.prototype) {
                    // A `self.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since
                    // this is performance sensitive, and enumerable `Object.prototype` or
                    // `RegExp.prototype` extensions exist on `regex.prototype` anyway
                    regex[p] = self.prototype[p];
                }
            }
        }

        regex[REGEX_DATA] = {captureNames: captureNames};

        return regex;
    }

/**
 * Removes any duplicate characters from the provided string.
 * @private
 * @param {String} str String to remove duplicate characters from.
 * @returns {String} String with any duplicate characters removed.
 */
    function clipDuplicates(str) {
        return nativ.replace.call(str, /([\s\S])(?=[\s\S]*\1)/g, '');
    }

/**
 * Copies a regex object while preserving special properties for named capture and augmenting with
 * `XRegExp.prototype` methods. The copy has a fresh `lastIndex` property (set to zero). Allows
 * adding and removing native flags while copying the regex.
 * @private
 * @param {RegExp} regex Regex to copy.
 * @param {Object} [options] Allows specifying native flags to add or remove while copying the
 *   regex, and whether to attach `XRegExp.prototype` properties.
 * @returns {RegExp} Copy of the provided regex, possibly with modified flags.
 */
    function copy(regex, options) {
        if (!self.isRegExp(regex)) {
            throw new TypeError('Type RegExp expected');
        }

        // Get native flags in use
        var flags = nativ.exec.call(/\/([a-z]*)$/i, String(regex))[1];
        options = options || {};

        if (options.add) {
            flags = clipDuplicates(flags + options.add);
        }

        if (options.remove) {
            // Would need to escape `options.remove` if this was public
            flags = nativ.replace.call(flags, new RegExp('[' + options.remove + ']+', 'g'), '');
        }

        // Augment with `XRegExp.prototype` methods, but use the native `RegExp` constructor and
        // avoid searching for special tokens. That would be wrong for regexes constructed by
        // `RegExp`, and unnecessary for regexes constructed by `XRegExp` because the regex has
        // already undergone the translation to native regex syntax
        regex = augment(
            new RegExp(regex.source, flags),
            hasNamedCapture(regex) ? regex[REGEX_DATA].captureNames.slice(0) : null,
            options.addProto
        );

        return regex;
    }

/**
 * Returns a new copy of the object used to hold extended regex instance data, tailored for a
 * native nonaugmented regex.
 * @private
 * @returns {Object} Object with base regex instance data.
 */
    function getBaseProps() {
        return {captureNames: null};
    }

/**
 * Determines whether a regex has extended instance data used to track capture names.
 * @private
 * @param {RegExp} regex Regex to check.
 * @returns {Boolean} Whether the regex uses named capture.
 */
    function hasNamedCapture(regex) {
        return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);
    }

/**
 * Returns the first index at which a given value can be found in an array.
 * @private
 * @param {Array} array Array to search.
 * @param {*} value Value to locate in the array.
 * @returns {Number} Zero-based index at which the item is found, or -1.
 */
    function indexOf(array, value) {
        // Use the native array method, if available
        if (Array.prototype.indexOf) {
            return array.indexOf(value);
        }

        var len = array.length, i;

        // Not a very good shim, but good enough for XRegExp's use of it
        for (i = 0; i < len; ++i) {
            if (array[i] === value) {
                return i;
            }
        }

        return -1;
    }

/**
 * Determines whether a value is of the specified type, by resolving its internal [[Class]].
 * @private
 * @param {*} value Object to check.
 * @param {String} type Type to check for, in TitleCase.
 * @returns {Boolean} Whether the object matches the type.
 */
    function isType(value, type) {
        return toString.call(value) === '[object ' + type + ']';
    }

/**
 * Checks whether the next nonignorable token after the specified position is a quantifier.
 * @private
 * @param {String} pattern Pattern to search within.
 * @param {Number} pos Index in `pattern` to search at.
 * @param {String} flags Flags used by the pattern.
 * @returns {Boolean} Whether the next token is a quantifier.
 */
    function isQuantifierNext(pattern, pos, flags) {
        return nativ.test.call(
            flags.indexOf('x') > -1 ?
                // Ignore any leading whitespace, line comments, and inline comments
                /^(?:\s+|#.*|\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/ :
                // Ignore any leading inline comments
                /^(?:\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/,
            pattern.slice(pos)
        );
    }

/**
 * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads
 * the flag preparation logic from the `XRegExp` constructor.
 * @private
 * @param {String} pattern Regex pattern, possibly with a leading mode modifier.
 * @param {String} flags Any combination of flags.
 * @returns {Object} Object with properties `pattern` and `flags`.
 */
    function prepareFlags(pattern, flags) {
        var i;

        // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags
        if (clipDuplicates(flags) !== flags) {
            throw new SyntaxError('Invalid duplicate regex flag ' + flags);
        }

        // Strip and apply a leading mode modifier with any combination of flags except g or y
        pattern = nativ.replace.call(pattern, /^\(\?([\w$]+)\)/, function($0, $1) {
            if (nativ.test.call(/[gy]/, $1)) {
                throw new SyntaxError('Cannot use flag g or y in mode modifier ' + $0);
            }
            // Allow duplicate flags within the mode modifier
            flags = clipDuplicates(flags + $1);
            return '';
        });

        // Throw on unknown native or nonnative flags
        for (i = 0; i < flags.length; ++i) {
            if (!registeredFlags[flags.charAt(i)]) {
                throw new SyntaxError('Unknown regex flag ' + flags.charAt(i));
            }
        }

        return {
            pattern: pattern,
            flags: flags
        };
    }

/**
 * Prepares an options object from the given value.
 * @private
 * @param {String|Object} value Value to convert to an options object.
 * @returns {Object} Options object.
 */
    function prepareOptions(value) {
        value = value || {};

        if (isType(value, 'String')) {
            value = self.forEach(value, /[^\s,]+/, function(match) {
                this[match] = true;
            }, {});
        }

        return value;
    }

/**
 * Registers a flag so it doesn't throw an 'unknown flag' error.
 * @private
 * @param {String} flag Single-character flag to register.
 */
    function registerFlag(flag) {
        if (!/^[\w$]$/.test(flag)) {
            throw new Error('Flag must be a single character A-Za-z0-9_$');
        }

        registeredFlags[flag] = true;
    }

/**
 * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified
 * position, until a match is found.
 * @private
 * @param {String} pattern Original pattern from which an XRegExp object is being built.
 * @param {String} flags Flags being used to construct the regex.
 * @param {Number} pos Position to search for tokens within `pattern`.
 * @param {Number} scope Regex scope to apply: 'default' or 'class'.
 * @param {Object} context Context object to use for token handler functions.
 * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.
 */
    function runTokens(pattern, flags, pos, scope, context) {
        var i = tokens.length,
            result = null,
            match,
            t;

        // Run in reverse insertion order
        while (i--) {
            t = tokens[i];
            if (
                (t.scope === scope || t.scope === 'all') &&
                (!t.flag || flags.indexOf(t.flag) > -1)
            ) {
                match = self.exec(pattern, t.regex, pos, 'sticky');
                if (match) {
                    result = {
                        matchLength: match[0].length,
                        output: t.handler.call(context, match, scope, flags),
                        reparse: t.reparse
                    };
                    // Finished with token tests
                    break;
                }
            }
        }

        return result;
    }

/**
 * Enables or disables implicit astral mode opt-in.
 * @private
 * @param {Boolean} on `true` to enable; `false` to disable.
 */
    function setAstral(on) {
        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and
        // flags might now produce different results
        self.cache.flush('patterns');

        features.astral = on;
    }

/**
 * Enables or disables native method overrides.
 * @private
 * @param {Boolean} on `true` to enable; `false` to disable.
 */
    function setNatives(on) {
        RegExp.prototype.exec = (on ? fixed : nativ).exec;
        RegExp.prototype.test = (on ? fixed : nativ).test;
        String.prototype.match = (on ? fixed : nativ).match;
        String.prototype.replace = (on ? fixed : nativ).replace;
        String.prototype.split = (on ? fixed : nativ).split;

        features.natives = on;
    }

/**
 * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow
 * the ES5 abstract operation `ToObject`.
 * @private
 * @param {*} value Object to check and return.
 * @returns {*} The provided object.
 */
    function toObject(value) {
        // This matches both `null` and `undefined`
        if (value == null) {
            throw new TypeError('Cannot convert null or undefined to object');
        }

        return value;
    }

/* ==============================
 * Constructor
 * ============================== */

/**
 * Creates an extended regular expression object for matching text with a pattern. Differs from a
 * native regular expression in that additional syntax and flags are supported. The returned object
 * is in fact a native `RegExp` and works with all native methods.
 * @class XRegExp
 * @constructor
 * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.
 * @param {String} [flags] Any combination of flags.
 *   Native flags:
 *     <li>`g` - global
 *     <li>`i` - ignore case
 *     <li>`m` - multiline anchors
 *     <li>`y` - sticky (Firefox 3+)
 *   Additional XRegExp flags:
 *     <li>`n` - explicit capture
 *     <li>`s` - dot matches all (aka singleline)
 *     <li>`x` - free-spacing and line comments (aka extended)
 *     <li>`A` - astral (requires the Unicode Base addon)
 *   Flags cannot be provided when constructing one `RegExp` from another.
 * @returns {RegExp} Extended regular expression object.
 * @example
 *
 * // With named capture and flag x
 * XRegExp('(?<year>  [0-9]{4} ) -?  # year  \n\
 *          (?<month> [0-9]{2} ) -?  # month \n\
 *          (?<day>   [0-9]{2} )     # day   ', 'x');
 *
 * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)
 * // syntax. Copies maintain special properties for named capture, are augmented with
 * // `XRegExp.prototype` methods, and have fresh `lastIndex` properties (set to zero).
 * XRegExp(/regex/);
 */
    self = function(pattern, flags) {
        var context = {
                hasNamedCapture: false,
                captureNames: []
            },
            scope = defaultScope,
            output = '',
            pos = 0,
            result,
            token,
            key;

        if (self.isRegExp(pattern)) {
            if (flags !== undefined) {
                throw new TypeError('Cannot supply flags when copying a RegExp');
            }
            return copy(pattern, {addProto: true});
        }

        // Copy the argument behavior of `RegExp`
        pattern = pattern === undefined ? '' : String(pattern);
        flags = flags === undefined ? '' : String(flags);

        // Cache-lookup key; intentionally using an invalid regex sequence as the separator
        key = pattern + '***' + flags;

        if (!patternCache[key]) {
            // Check for flag-related errors, and strip/apply flags in a leading mode modifier
            result = prepareFlags(pattern, flags);
            pattern = result.pattern;
            flags = result.flags;

            // Use XRegExp's syntax tokens to translate the pattern to a native regex pattern...
            // `pattern.length` may change on each iteration, if tokens use the `reparse` option
            while (pos < pattern.length) {
                do {
                    // Check for custom tokens at the current position
                    result = runTokens(pattern, flags, pos, scope, context);
                    // If the matched token used the `reparse` option, splice its output into the
                    // pattern before running tokens again at the same position
                    if (result && result.reparse) {
                        pattern = pattern.slice(0, pos) +
                            result.output +
                            pattern.slice(pos + result.matchLength);
                    }
                } while (result && result.reparse);

                if (result) {
                    output += result.output;
                    pos += (result.matchLength || 1);
                } else {
                    // Get the native token at the current position
                    token = self.exec(pattern, nativeTokens[scope], pos, 'sticky')[0];
                    output += token;
                    pos += token.length;
                    if (token === '[' && scope === defaultScope) {
                        scope = classScope;
                    } else if (token === ']' && scope === classScope) {
                        scope = defaultScope;
                    }
                }
            }

            patternCache[key] = {
                // Cleanup token cruft: repeated `(?:)(?:)` and leading/trailing `(?:)`
                pattern: nativ.replace.call(output, /\(\?:\)(?=\(\?:\))|^\(\?:\)|\(\?:\)$/g, ''),
                // Strip all but native flags
                flags: nativ.replace.call(flags, /[^gimy]+/g, ''),
                // `context.captureNames` has an item for each capturing group, even if unnamed
                captures: context.hasNamedCapture ? context.captureNames : null
            }
        }

        key = patternCache[key];
        return augment(new RegExp(key.pattern, key.flags), key.captures, /*addProto*/ true);
    };

// Add `RegExp.prototype` to the prototype chain
    self.prototype = new RegExp;

/* ==============================
 * Public properties
 * ============================== */

/**
 * The XRegExp version number.
 * @static
 * @memberOf XRegExp
 * @type String
 */
    self.version = '3.0.0-pre';

/* ==============================
 * Public methods
 * ============================== */

/**
 * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to
 * create XRegExp addons. If more than one token can match the same string, the last added wins.
 * @memberOf XRegExp
 * @param {RegExp} regex Regex object that matches the new token.
 * @param {Function} handler Function that returns a new pattern string (using native regex syntax)
 *   to replace the matched token within all future XRegExp regexes. Has access to persistent
 *   properties of the regex being built, through `this`. Invoked with three arguments:
 *   <li>The match array, with named backreference properties.
 *   <li>The regex scope where the match was found: 'default' or 'class'.
 *   <li>The flags used by the regex, including any flags in a leading mode modifier.
 *   The handler function becomes part of the XRegExp construction process, so be careful not to
 *   construct XRegExps within the function or you will trigger infinite recursion.
 * @param {Object} [options] Options object with optional properties:
 *   <li>`scope` {String} Scope where the token applies: 'default', 'class', or 'all'.
 *   <li>`flag` {String} Single-character flag that triggers the token. This also registers the
 *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.
 *   <li>`optionalFlags` {String} Any custom flags checked for within the token `handler` that are
 *     not required to trigger the token. This registers the flags, to prevent XRegExp from
 *     throwing an 'unknown flag' error when any of the flags are used.
 *   <li>`reparse` {Boolean} Whether the `handler` function's output should not be treated as
 *     final, and instead be reparseable by other tokens (including the current token). Allows
 *     token chaining or deferring.
 * @example
 *
 * // Basic usage: Add \a for the ALERT control code
 * XRegExp.addToken(
 *   /\\a/,
 *   function() {return '\\x07';},
 *   {scope: 'all'}
 * );
 * XRegExp('\\a[\\a-\\n]+').test('\x07\n\x07'); // -> true
 *
 * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers
 * XRegExp.addToken(
 *   /([?*+]|{\d+(?:,\d*)?})(\??)/,
 *   function(match) {return match[1] + (match[2] ? '' : '?');},
 *   {flag: 'U'}
 * );
 * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'
 * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'
 */
    self.addToken = function(regex, handler, options) {
        options = options || {};
        var optionalFlags = options.optionalFlags, i;

        if (options.flag) {
            registerFlag(options.flag);
        }

        if (optionalFlags) {
            optionalFlags = nativ.split.call(optionalFlags, '');
            for (i = 0; i < optionalFlags.length; ++i) {
                registerFlag(optionalFlags[i]);
            }
        }

        // Add to the private list of syntax tokens
        tokens.push({
            regex: copy(regex, {add: 'g' + (hasNativeY ? 'y' : '')}),
            handler: handler,
            scope: options.scope || defaultScope,
            flag: options.flag,
            reparse: options.reparse
        });

        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and
        // flags might now produce different results
        self.cache.flush('patterns');
    };

/**
 * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with
 * the same pattern and flag combination, the cached copy of the regex is returned.
 * @memberOf XRegExp
 * @param {String} pattern Regex pattern string.
 * @param {String} [flags] Any combination of XRegExp flags.
 * @returns {RegExp} Cached XRegExp object.
 * @example
 *
 * while (match = XRegExp.cache('.', 'gs').exec(str)) {
 *   // The regex is compiled once only
 * }
 */
    self.cache = function(pattern, flags) {
        var key = pattern + '***' + (flags || '');
        return cache[key] || (cache[key] = self(pattern, flags));
    };

// Intentionally undocumented
    self.cache.flush = function(cacheName) {
        if (cacheName === 'patterns') {
            // Flush the pattern cache used by the `XRegExp` constructor
            patternCache = {};
        } else {
            // Flush the regex object cache populated by `XRegExp.cache`
            cache = {};
        }
    };

/**
 * Escapes any regular expression metacharacters, for use when matching literal strings. The result
 * can safely be used at any point within a regex that uses any flags.
 * @memberOf XRegExp
 * @param {String} str String to escape.
 * @returns {String} String with regex metacharacters escaped.
 * @example
 *
 * XRegExp.escape('Escaped? <.>');
 * // -> 'Escaped\?\ <\.>'
 */
    self.escape = function(str) {
        return nativ.replace.call(toObject(str), /[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
    };

/**
 * Executes a regex search in a specified string. Returns a match array or `null`. If the provided
 * regex uses named capture, named backreference properties are included on the match array.
 * Optional `pos` and `sticky` arguments specify the search start position, and whether the match
 * must start at the specified position only. The `lastIndex` property of the provided regex is not
 * used, but is updated for compatibility. Also fixes browser bugs compared to the native
 * `RegExp.prototype.exec` and can be used reliably cross-browser.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {RegExp} regex Regex to search with.
 * @param {Number} [pos=0] Zero-based index at which to start the search.
 * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position
 *   only. The string `'sticky'` is accepted as an alternative to `true`.
 * @returns {Array} Match array with named backreference properties, or `null`.
 * @example
 *
 * // Basic use, with named backreference
 * var match = XRegExp.exec('U+2620', XRegExp('U\\+(?<hex>[0-9A-F]{4})'));
 * match.hex; // -> '2620'
 *
 * // With pos and sticky, in a loop
 * var pos = 2, result = [], match;
 * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\d)>/, pos, 'sticky')) {
 *   result.push(match[1]);
 *   pos = match.index + match[0].length;
 * }
 * // result -> ['2', '3', '4']
 */
    self.exec = function(str, regex, pos, sticky) {
        var cacheFlags = 'g', match, r2;

        if (hasNativeY && (sticky || (regex.sticky && sticky !== false))) {
            cacheFlags += 'y';
        }

        regex[REGEX_DATA] = regex[REGEX_DATA] || getBaseProps();

        // Shares cached copies with `XRegExp.match`/`replace`
        r2 = regex[REGEX_DATA][cacheFlags] || (
            regex[REGEX_DATA][cacheFlags] = copy(regex, {
                add: cacheFlags,
                remove: sticky === false ? 'y' : ''
            })
        );

        r2.lastIndex = pos = pos || 0;

        // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.
        match = fixed.exec.call(r2, str);

        if (sticky && match && match.index !== pos) {
            match = null;
        }

        if (regex.global) {
            regex.lastIndex = match ? r2.lastIndex : 0;
        }

        return match;
    };

/**
 * Executes a provided function once per regex match.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {RegExp} regex Regex to search with.
 * @param {Function} callback Function to execute for each match. Invoked with four arguments:
 *   <li>The match array, with named backreference properties.
 *   <li>The zero-based match index.
 *   <li>The string being traversed.
 *   <li>The regex object being used to traverse the string.
 * @param {*} [context] Object to use as `this` when executing `callback`.
 * @returns {*} Provided `context` object.
 * @example
 *
 * // Extracts every other digit from a string
 * XRegExp.forEach('1a2345', /\d/, function(match, i) {
 *   if (i % 2) this.push(+match[0]);
 * }, []);
 * // -> [2, 4]
 */
    self.forEach = function(str, regex, callback, context) {
        var pos = 0,
            i = -1,
            match;

        while ((match = self.exec(str, regex, pos))) {
            // Because `regex` is provided to `callback`, the function can use the deprecated/
            // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since
            // `XRegExp.exec` doesn't use `lastIndex` to set the search position, this can't lead
            // to an infinite loop, at least. Actually, because of the way `XRegExp.exec` caches
            // globalized versions of regexes, mutating the regex will not have any effect on the
            // iteration or matched strings, which is a nice side effect that brings extra safety
            callback.call(context, match, ++i, str, regex);

            pos = match.index + (match[0].length || 1);
        }

        return context;
    };

/**
 * Copies a regex object and adds flag `g`. The copy maintains special properties for named
 * capture, is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property
 * (set to zero). Native regexes are not recompiled using XRegExp syntax.
 * @memberOf XRegExp
 * @param {RegExp} regex Regex to globalize.
 * @returns {RegExp} Copy of the provided regex with flag `g` added.
 * @example
 *
 * var globalCopy = XRegExp.globalize(/regex/);
 * globalCopy.global; // -> true
 */
    self.globalize = function(regex) {
        return copy(regex, {add: 'g', addProto: true});
    };

/**
 * Installs optional features according to the specified options. Can be undone using
 * {@link #XRegExp.uninstall}.
 * @memberOf XRegExp
 * @param {Object|String} options Options object or string.
 * @example
 *
 * // With an options object
 * XRegExp.install({
 *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)
 *   astral: true,
 *
 *   // Overrides native regex methods with fixed/extended versions that support named
 *   // backreferences and fix numerous cross-browser bugs
 *   natives: true
 * });
 *
 * // With an options string
 * XRegExp.install('astral natives');
 */
    self.install = function(options) {
        options = prepareOptions(options);

        if (!features.astral && options.astral) {
            setAstral(true);
        }

        if (!features.natives && options.natives) {
            setNatives(true);
        }
    };

/**
 * Checks whether an individual optional feature is installed.
 * @memberOf XRegExp
 * @param {String} feature Name of the feature to check. One of:
 *   <li>`natives`
 *   <li>`astral`
 * @returns {Boolean} Whether the feature is installed.
 * @example
 *
 * XRegExp.isInstalled('natives');
 */
    self.isInstalled = function(feature) {
        return !!(features[feature]);
    };

/**
 * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes
 * created in another frame, when `instanceof` and `constructor` checks would fail.
 * @memberOf XRegExp
 * @param {*} value Object to check.
 * @returns {Boolean} Whether the object is a `RegExp` object.
 * @example
 *
 * XRegExp.isRegExp('string'); // -> false
 * XRegExp.isRegExp(/regex/i); // -> true
 * XRegExp.isRegExp(RegExp('^', 'm')); // -> true
 * XRegExp.isRegExp(XRegExp('(?s).')); // -> true
 */
    self.isRegExp = function(value) {
        return toString.call(value) === '[object RegExp]';
        //return isType(value, 'RegExp');
    };

/**
 * Returns the first matched string, or in global mode, an array containing all matched strings.
 * This is essentially a more convenient re-implementation of `String.prototype.match` that gives
 * the result types you actually want (string instead of `exec`-style array in match-first mode,
 * and an empty array instead of `null` when no matches are found in match-all mode). It also lets
 * you override flag g and ignore `lastIndex`, and fixes browser bugs.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {RegExp} regex Regex to search with.
 * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to
 *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,
 *   `scope` is 'all'.
 * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all
 *   mode: Array of all matched strings, or an empty array.
 * @example
 *
 * // Match first
 * XRegExp.match('abc', /\w/); // -> 'a'
 * XRegExp.match('abc', /\w/g, 'one'); // -> 'a'
 * XRegExp.match('abc', /x/g, 'one'); // -> null
 *
 * // Match all
 * XRegExp.match('abc', /\w/g); // -> ['a', 'b', 'c']
 * XRegExp.match('abc', /\w/, 'all'); // -> ['a', 'b', 'c']
 * XRegExp.match('abc', /x/, 'all'); // -> []
 */
    self.match = function(str, regex, scope) {
        var global = (regex.global && scope !== 'one') || scope === 'all',
            cacheFlags = (global ? 'g' : '') + (regex.sticky ? 'y' : ''),
            result,
            r2;

        regex[REGEX_DATA] = regex[REGEX_DATA] || getBaseProps();

        // Shares cached copies with `XRegExp.exec`/`replace`
        r2 = regex[REGEX_DATA][cacheFlags || 'noGY'] || (
            regex[REGEX_DATA][cacheFlags || 'noGY'] = copy(regex, {
                add: cacheFlags,
                remove: scope === 'one' ? 'g' : ''
            })
        );

        result = nativ.match.call(toObject(str), r2);

        if (regex.global) {
            regex.lastIndex = (
                (scope === 'one' && result) ?
                    // Can't use `r2.lastIndex` since `r2` is nonglobal in this case
                    (result.index + result[0].length) : 0
            );
        }

        return global ? (result || []) : (result && result[0]);
    };

/**
 * Retrieves the matches from searching a string using a chain of regexes that successively search
 * within previous matches. The provided `chain` array can contain regexes and objects with `regex`
 * and `backref` properties. When a backreference is specified, the named or numbered backreference
 * is passed forward to the next regex or returned.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {Array} chain Regexes that each search for matches within preceding results.
 * @returns {Array} Matches by the last regex in the chain, or an empty array.
 * @example
 *
 * // Basic usage; matches numbers within <b> tags
 * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [
 *   XRegExp('(?is)<b>.*?</b>'),
 *   /\d+/
 * ]);
 * // -> ['2', '4', '56']
 *
 * // Passing forward and returning specific backreferences
 * html = '<a href="http://xregexp.com/api/">XRegExp</a>\
 *         <a href="http://www.google.com/">Google</a>';
 * XRegExp.matchChain(html, [
 *   {regex: /<a href="([^"]+)">/i, backref: 1},
 *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}
 * ]);
 * // -> ['xregexp.com', 'www.google.com']
 */
    self.matchChain = function(str, chain) {
        return (function recurseChain(values, level) {
            var item = chain[level].regex ? chain[level] : {regex: chain[level]},
                matches = [],
                addMatch = function(match) {
                    if (item.backref) {
                        /* Safari 4.0.5 (but not 5.0.5+) inappropriately uses sparse arrays to hold
                         * the `undefined`s for backreferences to nonparticipating capturing
                         * groups. In such cases, a `hasOwnProperty` or `in` check on its own would
                         * inappropriately throw the exception, so also check if the backreference
                         * is a number that is within the bounds of the array.
                         */
                        if (!(match.hasOwnProperty(item.backref) || +item.backref < match.length)) {
                            throw new ReferenceError('Backreference to undefined group: ' + item.backref);
                        }

                        matches.push(match[item.backref] || '');
                    } else {
                        matches.push(match[0]);
                    }
                },
                i;

            for (i = 0; i < values.length; ++i) {
                self.forEach(values[i], item.regex, addMatch);
            }

            return ((level === chain.length - 1) || !matches.length) ?
                matches :
                recurseChain(matches, level + 1);
        }([str], 0));
    };

/**
 * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string
 * or regex, and the replacement can be a string or a function to be called for each match. To
 * perform a global search and replace, use the optional `scope` argument or include flag g if
 * using a regex. Replacement strings can use `${n}` for named and numbered backreferences.
 * Replacement functions can use named backreferences via `arguments[0].name`. Also fixes browser
 * bugs compared to the native `String.prototype.replace` and can be used reliably cross-browser.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {RegExp|String} search Search pattern to be replaced.
 * @param {String|Function} replacement Replacement string or a function invoked to create it.
 *   Replacement strings can include special replacement syntax:
 *     <li>$$ - Inserts a literal $ character.
 *     <li>$&, $0 - Inserts the matched substring.
 *     <li>$` - Inserts the string that precedes the matched substring (left context).
 *     <li>$' - Inserts the string that follows the matched substring (right context).
 *     <li>$n, $nn - Where n/nn are digits referencing an existent capturing group, inserts
 *       backreference n/nn.
 *     <li>${n} - Where n is a name or any number of digits that reference an existent capturing
 *       group, inserts backreference n.
 *   Replacement functions are invoked with three or more arguments:
 *     <li>The matched substring (corresponds to $& above). Named backreferences are accessible as
 *       properties of this first argument.
 *     <li>0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).
 *     <li>The zero-based index of the match within the total search string.
 *     <li>The total string being searched.
 * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not
 *   explicitly specified and using a regex with flag g, `scope` is 'all'.
 * @returns {String} New string with one or all matches replaced.
 * @example
 *
 * // Regex search, using named backreferences in replacement string
 * var name = XRegExp('(?<first>\\w+) (?<last>\\w+)');
 * XRegExp.replace('John Smith', name, '${last}, ${first}');
 * // -> 'Smith, John'
 *
 * // Regex search, using named backreferences in replacement function
 * XRegExp.replace('John Smith', name, function(match) {
 *   return match.last + ', ' + match.first;
 * });
 * // -> 'Smith, John'
 *
 * // String search, with replace-all
 * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');
 * // -> 'XRegExp builds XRegExps'
 */
    self.replace = function(str, search, replacement, scope) {
        var isRegex = self.isRegExp(search),
            global = (search.global && scope !== 'one') || scope === 'all',
            cacheFlags = (global ? 'g' : '') + (search.sticky ? 'y' : ''),
            s2 = search,
            result;

        if (isRegex) {
            search[REGEX_DATA] = search[REGEX_DATA] || getBaseProps();

            // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used,
            // `search`'s `lastIndex` isn't updated *during* replacement iterations
            s2 = search[REGEX_DATA][cacheFlags || 'noGY'] || (
                search[REGEX_DATA][cacheFlags || 'noGY'] = copy(search, {
                    add: cacheFlags,
                    remove: scope === 'one' ? 'g' : ''
                })
            );
        } else if (global) {
            s2 = new RegExp(self.escape(String(search)), 'g');
        }

        // Fixed `replace` required for named backreferences, etc.
        result = fixed.replace.call(toObject(str), s2, replacement);

        if (isRegex && search.global) {
            // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)
            search.lastIndex = 0;
        }

        return result;
    };

/**
 * Performs batch processing of string replacements. Used like {@link #XRegExp.replace}, but
 * accepts an array of replacement details. Later replacements operate on the output of earlier
 * replacements. Replacement details are accepted as an array with a regex or string to search for,
 * the replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp
 * replacement text syntax, which supports named backreference properties via `${name}`.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {Array} replacements Array of replacement detail arrays.
 * @returns {String} New string with all replacements.
 * @example
 *
 * str = XRegExp.replaceEach(str, [
 *   [XRegExp('(?<name>a)'), 'z${name}'],
 *   [/b/gi, 'y'],
 *   [/c/g, 'x', 'one'], // scope 'one' overrides /g
 *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g
 *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings
 *   [/f/g, function($0) {
 *     return $0.toUpperCase();
 *   }]
 * ]);
 */
    self.replaceEach = function(str, replacements) {
        var i, r;

        for (i = 0; i < replacements.length; ++i) {
            r = replacements[i];
            str = self.replace(str, r[0], r[1], r[2]);
        }

        return str;
    };

/**
 * Splits a string into an array of strings using a regex or string separator. Matches of the
 * separator are not included in the result array. However, if `separator` is a regex that contains
 * capturing groups, backreferences are spliced into the result each time `separator` is matched.
 * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably
 * cross-browser.
 * @memberOf XRegExp
 * @param {String} str String to split.
 * @param {RegExp|String} separator Regex or string to use for separating the string.
 * @param {Number} [limit] Maximum number of items to include in the result array.
 * @returns {Array} Array of substrings.
 * @example
 *
 * // Basic use
 * XRegExp.split('a b c', ' ');
 * // -> ['a', 'b', 'c']
 *
 * // With limit
 * XRegExp.split('a b c', ' ', 2);
 * // -> ['a', 'b']
 *
 * // Backreferences in result array
 * XRegExp.split('..word1..', /([a-z]+)(\d+)/i);
 * // -> ['..', 'word', '1', '..']
 */
    self.split = function(str, separator, limit) {
        return fixed.split.call(toObject(str), separator, limit);
    };

/**
 * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and
 * `sticky` arguments specify the search start position, and whether the match must start at the
 * specified position only. The `lastIndex` property of the provided regex is not used, but is
 * updated for compatibility. Also fixes browser bugs compared to the native
 * `RegExp.prototype.test` and can be used reliably cross-browser.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {RegExp} regex Regex to search with.
 * @param {Number} [pos=0] Zero-based index at which to start the search.
 * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position
 *   only. The string `'sticky'` is accepted as an alternative to `true`.
 * @returns {Boolean} Whether the regex matched the provided value.
 * @example
 *
 * // Basic use
 * XRegExp.test('abc', /c/); // -> true
 *
 * // With pos and sticky
 * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false
 */
    self.test = function(str, regex, pos, sticky) {
        // Do this the easy way :-)
        return !!self.exec(str, regex, pos, sticky);
    };

/**
 * Uninstalls optional features according to the specified options. All optional features start out
 * uninstalled, so this is used to undo the actions of {@link #XRegExp.install}.
 * @memberOf XRegExp
 * @param {Object|String} options Options object or string.
 * @example
 *
 * // With an options object
 * XRegExp.uninstall({
 *   // Disables support for astral code points in Unicode addons
 *   astral: true,
 *
 *   // Restores native regex methods
 *   natives: true
 * });
 *
 * // With an options string
 * XRegExp.uninstall('astral natives');
 */
    self.uninstall = function(options) {
        options = prepareOptions(options);

        if (features.astral && options.astral) {
            setAstral(false);
        }

        if (features.natives && options.natives) {
            setNatives(false);
        }
    };

/**
 * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as
 * regex objects or strings. Metacharacters are escaped in patterns provided as strings.
 * Backreferences in provided regex objects are automatically renumbered to work correctly within
 * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the
 * `flags` argument.
 * @memberOf XRegExp
 * @param {Array} patterns Regexes and strings to combine.
 * @param {String} [flags] Any combination of XRegExp flags.
 * @returns {RegExp} Union of the provided regexes and strings.
 * @example
 *
 * XRegExp.union(['a+b*c', /(dogs)\1/, /(cats)\1/], 'i');
 * // -> /a\+b\*c|(dogs)\1|(cats)\2/i
 */
    self.union = function(patterns, flags) {
        var parts = /(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*]/g,
            output = [],
            numCaptures = 0,
            numPriorCaptures,
            captureNames,
            pattern,
            rewrite = function(match, paren, backref) {
                var name = captureNames[numCaptures - numPriorCaptures];

                // Capturing group
                if (paren) {
                    ++numCaptures;
                    // If the current capture has a name, preserve the name
                    if (name) {
                        return '(?<' + name + '>';
                    }
                // Backreference
                } else if (backref) {
                    // Rewrite the backreference
                    return '\\' + (+backref + numPriorCaptures);
                }

                return match;
            },
            i;

        if (!(isType(patterns, 'Array') && patterns.length)) {
            throw new TypeError('Must provide a nonempty array of patterns to merge');
        }

        for (i = 0; i < patterns.length; ++i) {
            pattern = patterns[i];

            if (self.isRegExp(pattern)) {
                numPriorCaptures = numCaptures;
                captureNames = (pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames) || [];

                // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns
                // are independently valid; helps keep this simple. Named captures are put back
                output.push(nativ.replace.call(self(pattern.source).source, parts, rewrite));
            } else {
                output.push(self.escape(pattern));
            }
        }

        return self(output.join('|'), flags);
    };

/* ==============================
 * Fixed/extended native methods
 * ============================== */

/**
 * Adds named capture support (with backreferences returned as `result.name`), and fixes browser
 * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to
 * override the native method. Use via `XRegExp.exec` without overriding natives.
 * @private
 * @param {String} str String to search.
 * @returns {Array} Match array with named backreference properties, or `null`.
 */
    fixed.exec = function(str) {
        var origLastIndex = this.lastIndex,
            match = nativ.exec.apply(this, arguments),
            name,
            r2,
            i;

        if (match) {
            // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating
            // capturing groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of
            // older IEs. IE 9 in standards mode follows the spec
            if (!correctExecNpcg && match.length > 1 && indexOf(match, '') > -1) {
                r2 = copy(this, {remove: 'g'});
                // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed
                // matching due to characters outside the match
                nativ.replace.call(String(str).slice(match.index), r2, function() {
                    var len = arguments.length, i;
                    // Skip index 0 and the last 2
                    for (i = 1; i < len - 2; ++i) {
                        if (arguments[i] === undefined) {
                            match[i] = undefined;
                        }
                    }
                });
            }

            // Attach named capture properties
            if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {
                // Skip index 0
                for (i = 1; i < match.length; ++i) {
                    name = this[REGEX_DATA].captureNames[i - 1];
                    if (name) {
                        match[name] = match[i];
                    }
                }
            }

            // Fix browsers that increment `lastIndex` after zero-length matches
            if (this.global && !match[0].length && (this.lastIndex > match.index)) {
                this.lastIndex = match.index;
            }
        }

        if (!this.global) {
            // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)
            this.lastIndex = origLastIndex;
        }

        return match;
    };

/**
 * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`
 * uses this to override the native method.
 * @private
 * @param {String} str String to search.
 * @returns {Boolean} Whether the regex matched the provided value.
 */
    fixed.test = function(str) {
        // Do this the easy way :-)
        return !!fixed.exec.call(this, str);
    };

/**
 * Adds named capture support (with backreferences returned as `result.name`), and fixes browser
 * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to
 * override the native method.
 * @private
 * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.
 * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,
 *   the result of calling `regex.exec(this)`.
 */
    fixed.match = function(regex) {
        var result;

        if (!self.isRegExp(regex)) {
            // Use the native `RegExp` rather than `XRegExp`
            regex = new RegExp(regex);
        } else if (regex.global) {
            result = nativ.match.apply(this, arguments);
            // Fixes IE bug
            regex.lastIndex = 0;

            return result;
        }

        return fixed.exec.call(regex, toObject(this));
    };

/**
 * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and
 * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes
 * browser bugs in replacement text syntax when performing a replacement using a nonregex search
 * value, and the value of a replacement regex's `lastIndex` property during replacement iterations
 * and upon completion. Note that this doesn't support SpiderMonkey's proprietary third (`flags`)
 * argument. Calling `XRegExp.install('natives')` uses this to override the native method. Use via
 * `XRegExp.replace` without overriding natives.
 * @private
 * @param {RegExp|String} search Search pattern to be replaced.
 * @param {String|Function} replacement Replacement string or a function invoked to create it.
 * @returns {String} New string with one or all matches replaced.
 */
    fixed.replace = function(search, replacement) {
        var isRegex = self.isRegExp(search),
            origLastIndex,
            captureNames,
            result;

        if (isRegex) {
            if (search[REGEX_DATA]) {
                captureNames = search[REGEX_DATA].captureNames;
            }
            // Only needed if `search` is nonglobal
            origLastIndex = search.lastIndex;
        } else {
            search += ''; // Type-convert
        }

        // Don't use `typeof`; some older browsers return 'function' for regex objects
        if (isType(replacement, 'Function')) {
            // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement
            // functions isn't type-converted to a string
            result = nativ.replace.call(String(this), search, function() {
                var args = arguments, i;
                if (captureNames) {
                    // Change the `arguments[0]` string primitive to a `String` object that can
                    // store properties. This really does need to use `String` as a constructor
                    args[0] = new String(args[0]);
                    // Store named backreferences on the first argument
                    for (i = 0; i < captureNames.length; ++i) {
                        if (captureNames[i]) {
                            args[0][captureNames[i]] = args[i + 1];
                        }
                    }
                }
                // Update `lastIndex` before calling `replacement`. Fixes IE, Chrome, Firefox,
                // Safari bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)
                if (isRegex && search.global) {
                    search.lastIndex = args[args.length - 2] + args[0].length;
                }
                // Should pass `undefined` as context; see
                // <https://bugs.ecmascript.org/show_bug.cgi?id=154>
                return replacement.apply(undefined, args);
            });
        } else {
            // Ensure that the last value of `args` will be a string when given nonstring `this`,
            // while still throwing on `null` or `undefined` context
            result = nativ.replace.call(this == null ? this : String(this), search, function() {
                // Keep this function's `arguments` available through closure
                var args = arguments;
                return nativ.replace.call(String(replacement), replacementToken, function($0, $1, $2) {
                    var n;
                    // Named or numbered backreference with curly braces
                    if ($1) {
                        /* XRegExp behavior for `${n}`:
                         * 1. Backreference to numbered capture, if `n` is an integer. Use `0` for
                         *    for the entire match. Any number of leading zeros may be used.
                         * 2. Backreference to named capture `n`, if it exists and is not an
                         *    integer overridden by numbered capture. In practice, this does not
                         *    overlap with numbered capture since XRegExp does not allow named
                         *    capture to use a bare integer as the name.
                         * 3. If the name or number does not refer to an existing capturing group,
                         *    it's an error.
                         */
                        n = +$1; // Type-convert; drop leading zeros
                        if (n <= args.length - 3) {
                            return args[n] || '';
                        }
                        // Groups with the same name is an error, else would need `lastIndexOf`
                        n = captureNames ? indexOf(captureNames, $1) : -1;
                        if (n < 0) {
                            throw new SyntaxError('Backreference to undefined group ' + $0);
                        }
                        return args[n + 1] || '';
                    }
                    // Else, special variable or numbered backreference without curly braces
                    if ($2 === '$') { // $$
                        return '$';
                    }
                    if ($2 === '&' || +$2 === 0) { // $&, $0 (not followed by 1-9), $00
                        return args[0];
                    }
                    if ($2 === '`') { // $` (left context)
                        return args[args.length - 1].slice(0, args[args.length - 2]);
                    }
                    if ($2 === "'") { // $' (right context)
                        return args[args.length - 1].slice(args[args.length - 2] + args[0].length);
                    }
                    // Else, numbered backreference without curly braces
                    $2 = +$2; // Type-convert; drop leading zero
                    /* XRegExp behavior for `$n` and `$nn`:
                     * - Backrefs end after 1 or 2 digits. Use `${..}` for more digits.
                     * - `$1` is an error if no capturing groups.
                     * - `$10` is an error if less than 10 capturing groups. Use `${1}0` instead.
                     * - `$01` is `$1` if at least one capturing group, else it's an error.
                     * - `$0` (not followed by 1-9) and `$00` are the entire match.
                     * Native behavior, for comparison:
                     * - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.
                     * - `$1` is a literal `$1` if no capturing groups.
                     * - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.
                     * - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.
                     * - `$0` is a literal `$0`.
                     */
                    if (!isNaN($2)) {
                        if ($2 > args.length - 3) {
                            throw new SyntaxError('Backreference to undefined group ' + $0);
                        }
                        return args[$2] || '';
                    }
                    throw new SyntaxError('Invalid token ' + $0);
                });
            });
        }

        if (isRegex) {
            if (search.global) {
                // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)
                search.lastIndex = 0;
            } else {
                // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)
                search.lastIndex = origLastIndex;
            }
        }

        return result;
    };

/**
 * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`
 * uses this to override the native method. Use via `XRegExp.split` without overriding natives.
 * @private
 * @param {RegExp|String} separator Regex or string to use for separating the string.
 * @param {Number} [limit] Maximum number of items to include in the result array.
 * @returns {Array} Array of substrings.
 */
    fixed.split = function(separator, limit) {
        if (!self.isRegExp(separator)) {
            // Browsers handle nonregex split correctly, so use the faster native method
            return nativ.split.apply(this, arguments);
        }

        var str = String(this),
            output = [],
            origLastIndex = separator.lastIndex,
            lastLastIndex = 0,
            lastLength;

        /* Values for `limit`, per the spec:
         * If undefined: pow(2,32) - 1
         * If 0, Infinity, or NaN: 0
         * If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);
         * If negative number: pow(2,32) - floor(abs(limit))
         * If other: Type-convert, then use the above rules
         */
        // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63,
        // unless Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+
        limit = (limit === undefined ? -1 : limit) >>> 0;

        self.forEach(str, separator, function(match) {
            // This condition is not the same as `if (match[0].length)`
            if ((match.index + match[0].length) > lastLastIndex) {
                output.push(str.slice(lastLastIndex, match.index));
                if (match.length > 1 && match.index < str.length) {
                    Array.prototype.push.apply(output, match.slice(1));
                }
                lastLength = match[0].length;
                lastLastIndex = match.index + lastLength;
            }
        });

        if (lastLastIndex === str.length) {
            if (!nativ.test.call(separator, '') || lastLength) {
                output.push('');
            }
        } else {
            output.push(str.slice(lastLastIndex));
        }

        separator.lastIndex = origLastIndex;
        return output.length > limit ? output.slice(0, limit) : output;
    };

/* ==============================
 * Built-in syntax/flag tokens
 * ============================== */

    add = self.addToken;

/* Letter identity escapes that natively match literal characters: `\a`, `\A`, etc. These should be
 * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser
 * consistency and to reserve their syntax, but lets them be superseded by addons.
 */
    add(
        /\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\dA-Fa-f]{4})|x(?![\dA-Fa-f]{2}))/,
        function(match, scope) {
            // \B is allowed in default scope only
            if (match[1] === 'B' && scope === defaultScope) {
                return match[0];
            }
            throw new SyntaxError('Invalid escape ' + match[0]);
        },
        {scope: 'all'}
    );

/* Empty character class: `[]` or `[^]`. This fixes a critical cross-browser syntax inconsistency.
 * Unless this is standardized (per the ES spec), regex syntax can't be accurately parsed because
 * character class endings can't be determined.
 */
    add(
        /\[(\^?)]/,
        function(match) {
            // For cross-browser compatibility with ES3, convert [] to \b\B and [^] to [\s\S].
            // (?!) should work like \b\B, but is unreliable in some versions of Firefox
            return match[1] ? '[\\s\\S]' : '\\b\\B';
        }
    );

/* Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in
 * free-spacing mode (flag x).
 */
    add(
        /\(\?#[^)]*\)/,
        function(match, scope, flags) {
            // Keep tokens separated unless the following token is a quantifier
            return isQuantifierNext(match.input, match.index + match[0].length, flags) ?
                '' : '(?:)';
        }
    );

/* Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.
 */
    add(
        /\s+|#.*/,
        function(match, scope, flags) {
            // Keep tokens separated unless the following token is a quantifier
            return isQuantifierNext(match.input, match.index + match[0].length, flags) ?
                '' : '(?:)';
        },
        {flag: 'x'}
    );

/* Dot, in dotall mode (aka singleline mode, flag s) only.
 */
    add(
        /\./,
        function() {
            return '[\\s\\S]';
        },
        {flag: 's'}
    );

/* Named backreference: `\k<name>`. Backreference names can use the characters A-Z, a-z, 0-9, _,
 * and $ only. Also allows numbered backreferences as `\k<n>`.
 */
    add(
        /\\k<([\w$]+)>/,
        function(match) {
            // Groups with the same name is an error, else would need `lastIndexOf`
            var index = isNaN(match[1]) ? (indexOf(this.captureNames, match[1]) + 1) : +match[1],
                endIndex = match.index + match[0].length;
            if (!index || index > this.captureNames.length) {
                throw new SyntaxError('Backreference to undefined group ' + match[0]);
            }
            // Keep backreferences separate from subsequent literal numbers
            return '\\' + index + (
                endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ?
                    '' : '(?:)'
            );
        }
    );

/* Numbered backreference or octal, plus any following digits: `\0`, `\11`, etc. Octals except `\0`
 * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches
 * are returned unaltered. IE < 9 doesn't support backreferences above `\99` in regex syntax.
 */
    add(
        /\\(\d+)/,
        function(match, scope) {
            if (
                !(
                    scope === defaultScope &&
                    /^[1-9]/.test(match[1]) &&
                    +match[1] <= this.captureNames.length
                ) &&
                match[1] !== '0'
            ) {
                throw new SyntaxError('Cannot use octal escape or backreference to undefined group ' +
                    match[0]);
            }
            return match[0];
        },
        {scope: 'all'}
    );

/* Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the
 * characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers. Supports Python-style
 * `(?P<name>` as an alternate syntax to avoid issues in recent Opera (which natively supports the
 * Python-style syntax). Otherwise, XRegExp might treat numbered backreferences to Python-style
 * named capture as octals.
 */
    add(
        /\(\?P?<([\w$]+)>/,
        function(match) {
            // Disallow bare integers as names because named backreferences are added to match
            // arrays and therefore numeric properties may lead to incorrect lookups
            if (!isNaN(match[1])) {
                throw new SyntaxError('Cannot use integer as capture name ' + match[0]);
            }
            if (match[1] === 'length' || match[1] === '__proto__') {
                throw new SyntaxError('Cannot use reserved word as capture name ' + match[0]);
            }
            if (indexOf(this.captureNames, match[1]) > -1) {
                throw new SyntaxError('Cannot use same name for multiple groups ' + match[0]);
            }
            this.captureNames.push(match[1]);
            this.hasNamedCapture = true;
            return '(';
        }
    );

/* Capturing group; match the opening parenthesis only. Required for support of named capturing
 * groups. Also adds explicit capture mode (flag n).
 */
    add(
        /\((?!\?)/,
        function(match, scope, flags) {
            if (flags.indexOf('n') > -1) {
                return '(?:';
            }
            this.captureNames.push(null);
            return '(';
        },
        {optionalFlags: 'n'}
    );

/* ==============================
 * Expose XRegExp
 * ============================== */

    return self;

}());

/*!
 * XRegExp.build 3.0.0-pre
 * <http://xregexp.com/>
 * Steven Levithan � 2012 MIT License
 * Inspired by Lea Verou's RegExp.create <http://lea.verou.me/>
 */

(function(XRegExp) {
    

    var REGEX_DATA = 'xregexp',
        subParts = /(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*]/g,
        parts = XRegExp.union([/\({{([\w$]+)}}\)|{{([\w$]+)}}/, subParts], 'g');

/**
 * Strips a leading `^` and trailing unescaped `$`, if both are present.
 * @private
 * @param {String} pattern Pattern to process.
 * @returns {String} Pattern with edge anchors removed.
 */
    function deanchor(pattern) {
        var leadingAnchor = /^\^/,
            trailingAnchor = /\$$/;

        // Ensure that the trailing `$` isn't escaped
        if (leadingAnchor.test(pattern) && trailingAnchor.test(pattern.replace(/\\[\s\S]/g, ''))) {
            return pattern.replace(leadingAnchor, '').replace(trailingAnchor, '');
        }

        return pattern;
    }

/**
 * Converts the provided value to an XRegExp. Native RegExp flags are not preserved.
 * @private
 * @param {String|RegExp} value Value to convert.
 * @returns {RegExp} XRegExp object with XRegExp syntax applied.
 */
    function asXRegExp(value) {
        return XRegExp.isRegExp(value) ?
            (value[REGEX_DATA] && value[REGEX_DATA].captureNames ?
                // Don't recompile, to preserve capture names
                value :
                // Recompile as XRegExp
                XRegExp(value.source)
            ) :
            // Compile string as XRegExp
            XRegExp(value);
    }

/**
 * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in the
 * outer pattern and provided subpatterns are automatically renumbered to work correctly. Native
 * flags used by provided subpatterns are ignored in favor of the `flags` argument.
 * @memberOf XRegExp
 * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows
 *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within
 *   character classes.
 * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A
 *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.
 * @param {String} [flags] Any combination of XRegExp flags.
 * @returns {RegExp} Regex with interpolated subpatterns.
 * @example
 *
 * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {
 *   hours: XRegExp.build('{{h12}} : | {{h24}}', {
 *     h12: /1[0-2]|0?[1-9]/,
 *     h24: /2[0-3]|[01][0-9]/
 *   }, 'x'),
 *   minutes: /^[0-5][0-9]$/
 * });
 * time.test('10:59'); // -> true
 * XRegExp.exec('10:59', time).minutes; // -> '59'
 */
    XRegExp.build = function(pattern, subs, flags) {
        var inlineFlags = /^\(\?([\w$]+)\)/.exec(pattern),
            data = {},
            numCaps = 0, // 'Caps' is short for captures
            numPriorCaps,
            numOuterCaps = 0,
            outerCapsMap = [0],
            outerCapNames,
            sub,
            p;

        // Add flags within a leading mode modifier to the overall pattern's flags
        if (inlineFlags) {
            flags = flags || '';
            inlineFlags[1].replace(/./g, function(flag) {
                // Don't add duplicates
                flags += (flags.indexOf(flag) > -1 ? '' : flag);
            });
        }

        for (p in subs) {
            if (subs.hasOwnProperty(p)) {
                // Passing to XRegExp enables extended syntax and ensures independent validity,
                // lest an unescaped `(`, `)`, `[`, or trailing `\` breaks the `(?:)` wrapper. For
                // subpatterns provided as native regexes, it dies on octals and adds the property
                // used to hold extended regex instance data, for simplicity
                sub = asXRegExp(subs[p]);
                data[p] = {
                    // Deanchoring allows embedding independently useful anchored regexes. If you
                    // really need to keep your anchors, double them (i.e., `^^...$$`)
                    pattern: deanchor(sub.source),
                    names: sub[REGEX_DATA].captureNames || []
                };
            }
        }

        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;
        // helps keep this simple. Named captures will be put back
        pattern = asXRegExp(pattern);
        outerCapNames = pattern[REGEX_DATA].captureNames || [];
        pattern = pattern.source.replace(parts, function($0, $1, $2, $3, $4) {
            var subName = $1 || $2, capName, intro;
            // Named subpattern
            if (subName) {
                if (!data.hasOwnProperty(subName)) {
                    throw new ReferenceError('Undefined property ' + $0);
                }
                // Named subpattern was wrapped in a capturing group
                if ($1) {
                    capName = outerCapNames[numOuterCaps];
                    outerCapsMap[++numOuterCaps] = ++numCaps;
                    // If it's a named group, preserve the name. Otherwise, use the subpattern name
                    // as the capture name
                    intro = '(?<' + (capName || subName) + '>';
                } else {
                    intro = '(?:';
                }
                numPriorCaps = numCaps;
                return intro + data[subName].pattern.replace(subParts, function(match, paren, backref) {
                    // Capturing group
                    if (paren) {
                        capName = data[subName].names[numCaps - numPriorCaps];
                        ++numCaps;
                        // If the current capture has a name, preserve the name
                        if (capName) {
                            return '(?<' + capName + '>';
                        }
                    // Backreference
                    } else if (backref) {
                        // Rewrite the backreference
                        return '\\' + (+backref + numPriorCaps);
                    }
                    return match;
                }) + ')';
            }
            // Capturing group
            if ($3) {
                capName = outerCapNames[numOuterCaps];
                outerCapsMap[++numOuterCaps] = ++numCaps;
                // If the current capture has a name, preserve the name
                if (capName) {
                    return '(?<' + capName + '>';
                }
            // Backreference
            } else if ($4) {
                // Rewrite the backreference
                return '\\' + outerCapsMap[+$4];
            }
            return $0;
        });

        return XRegExp(pattern, flags);
    };

}(XRegExp));

/*!
 * XRegExp.matchRecursive 3.0.0-pre
 * <http://xregexp.com/>
 * Steven Levithan � 2009-2012 MIT License
 */

(function(XRegExp) {
    

/**
 * Returns a match detail object composed of the provided values.
 * @private
 */
    function row(name, value, start, end) {
        return {
            name: name,
            value: value,
            start: start,
            end: end
        };
    }

/**
 * Returns an array of match strings between outermost left and right delimiters, or an array of
 * objects with detailed match parts and position data. An error is thrown if delimiters are
 * unbalanced within the data.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {String} left Left delimiter as an XRegExp pattern.
 * @param {String} right Right delimiter as an XRegExp pattern.
 * @param {String} [flags] Any native or XRegExp flags, used for the left and right delimiters.
 * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.
 * @returns {Array} Array of matches, or an empty array.
 * @example
 *
 * // Basic usage
 * var str = '(t((e))s)t()(ing)';
 * XRegExp.matchRecursive(str, '\\(', '\\)', 'g');
 * // -> ['t((e))s', '', 'ing']
 *
 * // Extended information mode with valueNames
 * str = 'Here is <div> <div>an</div></div> example';
 * XRegExp.matchRecursive(str, '<div\\s*>', '</div>', 'gi', {
 *   valueNames: ['between', 'left', 'match', 'right']
 * });
 * // -> [
 * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},
 * // {name: 'left',    value: '<div>',          start: 8,  end: 13},
 * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},
 * // {name: 'right',   value: '</div>',         start: 27, end: 33},
 * // {name: 'between', value: ' example',       start: 33, end: 41}
 * // ]
 *
 * // Omitting unneeded parts with null valueNames, and using escapeChar
 * str = '...{1}\\{{function(x,y){return y+x;}}';
 * XRegExp.matchRecursive(str, '{', '}', 'g', {
 *   valueNames: ['literal', null, 'value', null],
 *   escapeChar: '\\'
 * });
 * // -> [
 * // {name: 'literal', value: '...', start: 0, end: 3},
 * // {name: 'value',   value: '1',   start: 4, end: 5},
 * // {name: 'literal', value: '\\{', start: 6, end: 8},
 * // {name: 'value',   value: 'function(x,y){return y+x;}', start: 9, end: 35}
 * // ]
 *
 * // Sticky mode via flag y
 * str = '<1><<<2>>><3>4<5>';
 * XRegExp.matchRecursive(str, '<', '>', 'gy');
 * // -> ['1', '<<2>>', '3']
 */
    XRegExp.matchRecursive = function(str, left, right, flags, options) {
        flags = flags || '';
        options = options || {};
        var global = flags.indexOf('g') > -1,
            sticky = flags.indexOf('y') > -1,
            // Flag `y` is controlled internally
            basicFlags = flags.replace(/y/g, ''),
            escapeChar = options.escapeChar,
            vN = options.valueNames,
            output = [],
            openTokens = 0,
            delimStart = 0,
            delimEnd = 0,
            lastOuterEnd = 0,
            outerStart,
            innerStart,
            leftMatch,
            rightMatch,
            esc;
        left = XRegExp(left, basicFlags);
        right = XRegExp(right, basicFlags);

        if (escapeChar) {
            if (escapeChar.length > 1) {
                throw new Error('Cannot use more than one escape character');
            }
            escapeChar = XRegExp.escape(escapeChar);
            // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`
            esc = new RegExp(
                '(?:' + escapeChar + '[\\S\\s]|(?:(?!' +
                    XRegExp.union([left, right]).source +
                    ')[^' + escapeChar + '])+)+',
                // Flags `gy` not needed here
                flags.replace(/[^im]+/g, '')
            );
        }

        while (true) {
            // If using an escape character, advance to the delimiter's next starting position,
            // skipping any escaped characters in between
            if (escapeChar) {
                delimEnd += (XRegExp.exec(str, esc, delimEnd, 'sticky') || [''])[0].length;
            }
            leftMatch = XRegExp.exec(str, left, delimEnd);
            rightMatch = XRegExp.exec(str, right, delimEnd);
            // Keep the leftmost match only
            if (leftMatch && rightMatch) {
                if (leftMatch.index <= rightMatch.index) {
                    rightMatch = null;
                } else {
                    leftMatch = null;
                }
            }
            /* Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):
             * LM | RM | OT | Result
             * 1  | 0  | 1  | loop
             * 1  | 0  | 0  | loop
             * 0  | 1  | 1  | loop
             * 0  | 1  | 0  | throw
             * 0  | 0  | 1  | throw
             * 0  | 0  | 0  | break
             * Doesn't include the sticky mode special case. The loop ends after the first
             * completed match if not `global`.
             */
            if (leftMatch || rightMatch) {
                delimStart = (leftMatch || rightMatch).index;
                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;
            } else if (!openTokens) {
                break;
            }
            if (sticky && !openTokens && delimStart > lastOuterEnd) {
                break;
            }
            if (leftMatch) {
                if (!openTokens) {
                    outerStart = delimStart;
                    innerStart = delimEnd;
                }
                ++openTokens;
            } else if (rightMatch && openTokens) {
                if (!--openTokens) {
                    if (vN) {
                        if (vN[0] && outerStart > lastOuterEnd) {
                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));
                        }
                        if (vN[1]) {
                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));
                        }
                        if (vN[2]) {
                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));
                        }
                        if (vN[3]) {
                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));
                        }
                    } else {
                        output.push(str.slice(innerStart, delimStart));
                    }
                    lastOuterEnd = delimEnd;
                    if (!global) {
                        break;
                    }
                }
            } else {
                throw new Error('Unbalanced delimiter found in string');
            }
            // If the delimiter matched an empty string, avoid an infinite loop
            if (delimStart === delimEnd) {
                ++delimEnd;
            }
        }

        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {
            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));
        }

        return output;
    };

}(XRegExp));

/*!
 * XRegExp Unicode Base 3.0.0-pre
 * <http://xregexp.com/>
 * Steven Levithan � 2008-2012 MIT License
 * Uses Unicode 6.2.0 <http://unicode.org/>
 * Unicode data generated by Mathias Bynens <http://mathiasbynens.be/>
 */

/**
 * Adds support for the `\p{L}` or `\p{Letter}` Unicode category. Addon packages for other Unicode
 * categories, scripts, blocks, and properties are available separately. Also adds flag A (astral),
 * which enables 21-bit Unicode support. All Unicode tokens can be inverted using `\P{..}` or
 * `\p{^..}`. Token names ignore case, spaces, hyphens, and underscores.
 * @requires XRegExp
 */
(function(XRegExp) {
    

// Storage for Unicode data
    var unicode = {};

/* ==============================
 * Private functions
 * ============================== */

// Generates a token lookup name: lowercase, with hyphens, spaces, and underscores removed
    function normalize(name) {
        return name.replace(/[- _]+/g, '').toLowerCase();
    }

// Adds leading zeros if shorter than four characters
    function pad4(str) {
        while (str.length < 4) {
            str = '0' + str;
        }
        return str;
    }

// Converts a hexadecimal number to decimal
    function dec(hex) {
        return parseInt(hex, 16);
    }

// Converts a decimal number to hexadecimal
    function hex(dec) {
        return parseInt(dec, 10).toString(16);
    }

// Gets the decimal code of a literal code unit, \xHH, \uHHHH, or a backslash-escaped literal
    function charCode(chr) {
        var esc = /^\\[xu](.+)/.exec(chr);
        return esc ?
            dec(esc[1]) :
            chr.charCodeAt(chr.charAt(0) === '\\' ? 1 : 0);
    }

// Inverts a list of ordered BMP characters and ranges
    function invertBmp(range) {
        var output = '',
            lastEnd = -1,
            start;
        XRegExp.forEach(range, /(\\x..|\\u....|\\?[\s\S])(?:-(\\x..|\\u....|\\?[\s\S]))?/, function(m) {
            start = charCode(m[1]);
            if (start > (lastEnd + 1)) {
                output += '\\u' + pad4(hex(lastEnd + 1));
                if (start > (lastEnd + 2)) {
                    output += '-\\u' + pad4(hex(start - 1));
                }
            }
            lastEnd = charCode(m[2] || m[1]);
        });
        if (lastEnd < 0xFFFF) {
            output += '\\u' + pad4(hex(lastEnd + 1));
            if (lastEnd < 0xFFFE) {
                output += '-\\uFFFF';
            }
        }
        return output;
    }

// Generates an inverted BMP range on first use
    function cacheInvertedBmp(slug) {
        var prop = 'b!';
        return unicode[slug][prop] || (
            unicode[slug][prop] = invertBmp(unicode[slug].bmp)
        );
    }

// Combines and optionally negates BMP and astral data
    function buildAstral(slug, isNegated) {
        var item = unicode[slug],
            combined = '';
        if (item.bmp && !item.isBmpLast) {
            combined = '[' + item.bmp + ']' + (item.astral ? '|' : '');
        }
        if (item.astral) {
            combined += item.astral;
        }
        if (item.isBmpLast && item.bmp) {
            combined += (item.astral ? '|' : '') + '[' + item.bmp + ']';
        }
        // Astral Unicode tokens always match a code point, never a code unit
        return isNegated ?
            '(?:(?!' + combined + ')(?:[\uD800-\uDBFF][\uDC00-\uDFFF]|[\0-\uFFFF]))' :
            '(?:' + combined + ')';
    }

// Builds a complete astral pattern on first use
    function cacheAstral(slug, isNegated) {
        var prop = isNegated ? 'a!' : 'a=';
        return unicode[slug][prop] || (
            unicode[slug][prop] = buildAstral(slug, isNegated)
        );
    }

/* ==============================
 * Core functionality
 * ============================== */

/* Add Unicode token syntax: \p{..}, \P{..}, \p{^..}. Also add astral mode (flag A).
 */
    XRegExp.addToken(
        // Use `*` instead of `+` to avoid capturing `^` as the token name in `\p{^}`
        /\\([pP])(?:{(\^?)([^}]*)}|([A-Za-z]))/,
        function(match, scope, flags) {
            var ERR_DOUBLE_NEG = 'Invalid double negation ',
                ERR_UNKNOWN_NAME = 'Unknown Unicode token ',
                ERR_UNKNOWN_REF = 'Unicode token missing data ',
                ERR_ASTRAL_ONLY = 'Astral mode required for Unicode token ',
                ERR_ASTRAL_IN_CLASS = 'Astral mode does not support Unicode tokens within character classes',
                // Negated via \P{..} or \p{^..}
                isNegated = match[1] === 'P' || !!match[2],
                // Switch from BMP (U+FFFF) to astral (U+10FFFF) mode via flag A or implicit opt-in
                isAstralMode = flags.indexOf('A') > -1 || XRegExp.isInstalled('astral'),
                // Token lookup name. Check `[4]` first to avoid passing `undefined` via `\p{}`
                slug = normalize(match[4] || match[3]),
                // Token data object
                item = unicode[slug];

            if (match[1] === 'P' && match[2]) {
                throw new SyntaxError(ERR_DOUBLE_NEG + match[0]);
            }
            if (!unicode.hasOwnProperty(slug)) {
                throw new SyntaxError(ERR_UNKNOWN_NAME + match[0]);
            }

            // Switch to the negated form of the referenced Unicode token
            if (item.inverseOf) {
                slug = normalize(item.inverseOf);
                if (!unicode.hasOwnProperty(slug)) {
                    throw new ReferenceError(ERR_UNKNOWN_REF + match[0] + ' -> ' + item.inverseOf);
                }
                item = unicode[slug];
                isNegated = !isNegated;
            }

            if (!(item.bmp || isAstralMode)) {
                throw new SyntaxError(ERR_ASTRAL_ONLY + match[0]);
            }
            if (isAstralMode) {
                if (scope === 'class') {
                    throw new SyntaxError(ERR_ASTRAL_IN_CLASS);
                }

                return cacheAstral(slug, isNegated);
            }

            return scope === 'class' ?
                (isNegated ? cacheInvertedBmp(slug) : item.bmp) :
                (isNegated ? '[^' : '[') + item.bmp + ']';
        },
        {
            scope: 'all',
            optionalFlags: 'A'
        }
    );

/**
 * Adds to the list of Unicode tokens that XRegExp regexes can match via `\p` or `\P`.
 * @memberOf XRegExp
 * @param {Array} data Objects with named character ranges. Each object may have properties `name`,
 *   `alias`, `isBmpLast`, `inverseOf`, `bmp`, and `astral`. All but `name` are optional, although
 *   one of `bmp` or `astral` is required (unless `inverseOf` is set). If `astral` is absent, the
 *   `bmp` data is used for BMP and astral modes. If `bmp` is absent, the name errors in BMP mode
 *   but works in astral mode. If both `bmp` and `astral` are provided, the `bmp` data only is used
 *   in BMP mode, and the combination of `bmp` and `astral` data is used in astral mode.
 *   `isBmpLast` is needed when a token matches orphan high surrogates *and* uses surrogate pairs
 *   to match astral code points. The `bmp` and `astral` data should be a combination of literal
 *   characters and `\xHH` or `\uHHHH` escape sequences, with hyphens to create ranges. Any regex
 *   metacharacters in the data should be escaped, apart from range-creating hyphens. The `astral`
 *   data can additionally use character classes and alternation, and should use surrogate pairs to
 *   represent astral code points. `inverseOf` can be used to avoid duplicating character data if a
 *   Unicode token is defined as the exact inverse of another token.
 * @example
 *
 * // Basic use
 * XRegExp.addUnicodeData([{
 *   name: 'XDigit',
 *   alias: 'Hexadecimal',
 *   bmp: '0-9A-Fa-f'
 * }]);
 * XRegExp('\\p{XDigit}:\\p{Hexadecimal}+').test('0:3D'); // -> true
 */
    XRegExp.addUnicodeData = function(data) {
        var ERR_NO_NAME = 'Unicode token requires name',
            ERR_NO_DATA = 'Unicode token has no character data ',
            item,
            i;

        for (i = 0; i < data.length; ++i) {
            item = data[i];
            if (!item.name) {
                throw new Error(ERR_NO_NAME);
            }
            if (!(item.inverseOf || item.bmp || item.astral)) {
                throw new Error(ERR_NO_DATA + item.name);
            }
            unicode[normalize(item.name)] = item;
            if (item.alias) {
                unicode[normalize(item.alias)] = item;
            }
        }

        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and
        // flags might now produce different results
        XRegExp.cache.flush('patterns');
    };

/* Add data for the Unicode `L` or `Letter` category. Separate addons are available that add other
 * categories, scripts, blocks, and properties.
 */
    XRegExp.addUnicodeData([{
        name: 'L',
        alias: 'Letter',
        bmp: 'A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC',
        astral: '\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72]|\uD801[\uDC00-\uDC9D]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1E\uDF30-\uDF40\uDF42-\uDF49\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD81A[\uDC00-\uDE38]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD83-\uDDB2\uDDC1-\uDDC4]|\uD86E[\uDC00-\uDC1D]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD803[\uDC00-\uDC48]|\uD80D[\uDC00-\uDC2E]|\uD805[\uDE80-\uDEAA]|\uD87E[\uDC00-\uDE1D]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD82C[\uDC00\uDC01]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD808[\uDC00-\uDF6E]'
    }]);

}(XRegExp));

/*!
 * XRegExp Unicode Blocks 3.0.0-pre
 * <http://xregexp.com/>
 * Steven Levithan � 2010-2012 MIT License
 * Uses Unicode 6.2.0 <http://unicode.org/>
 * Unicode data generated by Mathias Bynens <http://mathiasbynens.be/>
 */

/**
 * Adds support for all Unicode blocks. Block names use the prefix 'In'. E.g., `\p{InBasicLatin}`.
 * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.
 * @requires XRegExp, Unicode Base
 */
(function(XRegExp) {
    

    if (!XRegExp.addUnicodeData) {
        throw new ReferenceError('Unicode Base must be loaded before Unicode Blocks');
    }

    XRegExp.addUnicodeData([
        {
            name: 'InAegean_Numbers',
            astral: '\uD800[\uDD00-\uDD3F]'
        },
        {
            name: 'InAlchemical_Symbols',
            astral: '\uD83D[\uDF00-\uDF7F]'
        },
        {
            name: 'InAlphabetic_Presentation_Forms',
            bmp: '\uFB00-\uFB4F'
        },
        {
            name: 'InAncient_Greek_Musical_Notation',
            astral: '\uD834[\uDE00-\uDE4F]'
        },
        {
            name: 'InAncient_Greek_Numbers',
            astral: '\uD800[\uDD40-\uDD8F]'
        },
        {
            name: 'InAncient_Symbols',
            astral: '\uD800[\uDD90-\uDDCF]'
        },
        {
            name: 'InArabic',
            bmp: '\u0600-\u06FF'
        },
        {
            name: 'InArabic_Extended_A',
            bmp: '\u08A0-\u08FF'
        },
        {
            name: 'InArabic_Mathematical_Alphabetic_Symbols',
            astral: '\uD83B[\uDE00-\uDEFF]'
        },
        {
            name: 'InArabic_Presentation_Forms_A',
            bmp: '\uFB50-\uFDFF'
        },
        {
            name: 'InArabic_Presentation_Forms_B',
            bmp: '\uFE70-\uFEFF'
        },
        {
            name: 'InArabic_Supplement',
            bmp: '\u0750-\u077F'
        },
        {
            name: 'InArmenian',
            bmp: '\u0530-\u058F'
        },
        {
            name: 'InArrows',
            bmp: '\u2190-\u21FF'
        },
        {
            name: 'InAvestan',
            astral: '\uD802[\uDF00-\uDF3F]'
        },
        {
            name: 'InBalinese',
            bmp: '\u1B00-\u1B7F'
        },
        {
            name: 'InBamum',
            bmp: '\uA6A0-\uA6FF'
        },
        {
            name: 'InBamum_Supplement',
            astral: '\uD81A[\uDC00-\uDE3F]'
        },
        {
            name: 'InBasic_Latin',
            bmp: '\0-\x7F'
        },
        {
            name: 'InBatak',
            bmp: '\u1BC0-\u1BFF'
        },
        {
            name: 'InBengali',
            bmp: '\u0980-\u09FF'
        },
        {
            name: 'InBlock_Elements',
            bmp: '\u2580-\u259F'
        },
        {
            name: 'InBopomofo',
            bmp: '\u3100-\u312F'
        },
        {
            name: 'InBopomofo_Extended',
            bmp: '\u31A0-\u31BF'
        },
        {
            name: 'InBox_Drawing',
            bmp: '\u2500-\u257F'
        },
        {
            name: 'InBrahmi',
            astral: '\uD804[\uDC00-\uDC7F]'
        },
        {
            name: 'InBraille_Patterns',
            bmp: '\u2800-\u28FF'
        },
        {
            name: 'InBuginese',
            bmp: '\u1A00-\u1A1F'
        },
        {
            name: 'InBuhid',
            bmp: '\u1740-\u175F'
        },
        {
            name: 'InByzantine_Musical_Symbols',
            astral: '\uD834[\uDC00-\uDCFF]'
        },
        {
            name: 'InCJK_Compatibility',
            bmp: '\u3300-\u33FF'
        },
        {
            name: 'InCJK_Compatibility_Forms',
            bmp: '\uFE30-\uFE4F'
        },
        {
            name: 'InCJK_Compatibility_Ideographs',
            bmp: '\uF900-\uFAFF'
        },
        {
            name: 'InCJK_Compatibility_Ideographs_Supplement',
            astral: '\uD87E[\uDC00-\uDE1F]'
        },
        {
            name: 'InCJK_Radicals_Supplement',
            bmp: '\u2E80-\u2EFF'
        },
        {
            name: 'InCJK_Strokes',
            bmp: '\u31C0-\u31EF'
        },
        {
            name: 'InCJK_Symbols_and_Punctuation',
            bmp: '\u3000-\u303F'
        },
        {
            name: 'InCJK_Unified_Ideographs',
            bmp: '\u4E00-\u9FFF'
        },
        {
            name: 'InCJK_Unified_Ideographs_Extension_A',
            bmp: '\u3400-\u4DBF'
        },
        {
            name: 'InCJK_Unified_Ideographs_Extension_B',
            astral: '[\uD840-\uD868][\uDC00-\uDFFF]|\uD869[\uDC00-\uDEDF]'
        },
        {
            name: 'InCJK_Unified_Ideographs_Extension_C',
            astral: '\uD86D[\uDC00-\uDF3F]|[\uD86A-\uD86C][\uDC00-\uDFFF]|\uD869[\uDF00-\uDFFF]'
        },
        {
            name: 'InCJK_Unified_Ideographs_Extension_D',
            astral: '\uD86D[\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1F]'
        },
        {
            name: 'InCarian',
            astral: '\uD800[\uDEA0-\uDEDF]'
        },
        {
            name: 'InChakma',
            astral: '\uD804[\uDD00-\uDD4F]'
        },
        {
            name: 'InCham',
            bmp: '\uAA00-\uAA5F'
        },
        {
            name: 'InCherokee',
            bmp: '\u13A0-\u13FF'
        },
        {
            name: 'InCombining_Diacritical_Marks',
            bmp: '\u0300-\u036F'
        },
        {
            name: 'InCombining_Diacritical_Marks_Supplement',
            bmp: '\u1DC0-\u1DFF'
        },
        {
            name: 'InCombining_Diacritical_Marks_for_Symbols',
            bmp: '\u20D0-\u20FF'
        },
        {
            name: 'InCombining_Half_Marks',
            bmp: '\uFE20-\uFE2F'
        },
        {
            name: 'InCommon_Indic_Number_Forms',
            bmp: '\uA830-\uA83F'
        },
        {
            name: 'InControl_Pictures',
            bmp: '\u2400-\u243F'
        },
        {
            name: 'InCoptic',
            bmp: '\u2C80-\u2CFF'
        },
        {
            name: 'InCounting_Rod_Numerals',
            astral: '\uD834[\uDF60-\uDF7F]'
        },
        {
            name: 'InCuneiform',
            astral: '\uD808[\uDC00-\uDFFF]'
        },
        {
            name: 'InCuneiform_Numbers_and_Punctuation',
            astral: '\uD809[\uDC00-\uDC7F]'
        },
        {
            name: 'InCurrency_Symbols',
            bmp: '\u20A0-\u20CF'
        },
        {
            name: 'InCypriot_Syllabary',
            astral: '\uD802[\uDC00-\uDC3F]'
        },
        {
            name: 'InCyrillic',
            bmp: '\u0400-\u04FF'
        },
        {
            name: 'InCyrillic_Extended_A',
            bmp: '\u2DE0-\u2DFF'
        },
        {
            name: 'InCyrillic_Extended_B',
            bmp: '\uA640-\uA69F'
        },
        {
            name: 'InCyrillic_Supplement',
            bmp: '\u0500-\u052F'
        },
        {
            name: 'InDeseret',
            astral: '\uD801[\uDC00-\uDC4F]'
        },
        {
            name: 'InDevanagari',
            bmp: '\u0900-\u097F'
        },
        {
            name: 'InDevanagari_Extended',
            bmp: '\uA8E0-\uA8FF'
        },
        {
            name: 'InDingbats',
            bmp: '\u2700-\u27BF'
        },
        {
            name: 'InDomino_Tiles',
            astral: '\uD83C[\uDC30-\uDC9F]'
        },
        {
            name: 'InEgyptian_Hieroglyphs',
            astral: '\uD80C[\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F]'
        },
        {
            name: 'InEmoticons',
            astral: '\uD83D[\uDE00-\uDE4F]'
        },
        {
            name: 'InEnclosed_Alphanumeric_Supplement',
            astral: '\uD83C[\uDD00-\uDDFF]'
        },
        {
            name: 'InEnclosed_Alphanumerics',
            bmp: '\u2460-\u24FF'
        },
        {
            name: 'InEnclosed_CJK_Letters_and_Months',
            bmp: '\u3200-\u32FF'
        },
        {
            name: 'InEnclosed_Ideographic_Supplement',
            astral: '\uD83C[\uDE00-\uDEFF]'
        },
        {
            name: 'InEthiopic',
            bmp: '\u1200-\u137F'
        },
        {
            name: 'InEthiopic_Extended',
            bmp: '\u2D80-\u2DDF'
        },
        {
            name: 'InEthiopic_Extended_A',
            bmp: '\uAB00-\uAB2F'
        },
        {
            name: 'InEthiopic_Supplement',
            bmp: '\u1380-\u139F'
        },
        {
            name: 'InGeneral_Punctuation',
            bmp: '\u2000-\u206F'
        },
        {
            name: 'InGeometric_Shapes',
            bmp: '\u25A0-\u25FF'
        },
        {
            name: 'InGeorgian',
            bmp: '\u10A0-\u10FF'
        },
        {
            name: 'InGeorgian_Supplement',
            bmp: '\u2D00-\u2D2F'
        },
        {
            name: 'InGlagolitic',
            bmp: '\u2C00-\u2C5F'
        },
        {
            name: 'InGothic',
            astral: '\uD800[\uDF30-\uDF4F]'
        },
        {
            name: 'InGreek_Extended',
            bmp: '\u1F00-\u1FFF'
        },
        {
            name: 'InGreek_and_Coptic',
            bmp: '\u0370-\u03FF'
        },
        {
            name: 'InGujarati',
            bmp: '\u0A80-\u0AFF'
        },
        {
            name: 'InGurmukhi',
            bmp: '\u0A00-\u0A7F'
        },
        {
            name: 'InHalfwidth_and_Fullwidth_Forms',
            bmp: '\uFF00-\uFFEF'
        },
        {
            name: 'InHangul_Compatibility_Jamo',
            bmp: '\u3130-\u318F'
        },
        {
            name: 'InHangul_Jamo',
            bmp: '\u1100-\u11FF'
        },
        {
            name: 'InHangul_Jamo_Extended_A',
            bmp: '\uA960-\uA97F'
        },
        {
            name: 'InHangul_Jamo_Extended_B',
            bmp: '\uD7B0-\uD7FF'
        },
        {
            name: 'InHangul_Syllables',
            bmp: '\uAC00-\uD7AF'
        },
        {
            name: 'InHanunoo',
            bmp: '\u1720-\u173F'
        },
        {
            name: 'InHebrew',
            bmp: '\u0590-\u05FF'
        },
        {
            name: 'InHigh_Private_Use_Surrogates',
            bmp: '\uDB80-\uDBFF'
        },
        {
            name: 'InHigh_Surrogates',
            bmp: '\uD800-\uDB7F'
        },
        {
            name: 'InHiragana',
            bmp: '\u3040-\u309F'
        },
        {
            name: 'InIPA_Extensions',
            bmp: '\u0250-\u02AF'
        },
        {
            name: 'InIdeographic_Description_Characters',
            bmp: '\u2FF0-\u2FFF'
        },
        {
            name: 'InImperial_Aramaic',
            astral: '\uD802[\uDC40-\uDC5F]'
        },
        {
            name: 'InInscriptional_Pahlavi',
            astral: '\uD802[\uDF60-\uDF7F]'
        },
        {
            name: 'InInscriptional_Parthian',
            astral: '\uD802[\uDF40-\uDF5F]'
        },
        {
            name: 'InJavanese',
            bmp: '\uA980-\uA9DF'
        },
        {
            name: 'InKaithi',
            astral: '\uD804[\uDC80-\uDCCF]'
        },
        {
            name: 'InKana_Supplement',
            astral: '\uD82C[\uDC00-\uDCFF]'
        },
        {
            name: 'InKanbun',
            bmp: '\u3190-\u319F'
        },
        {
            name: 'InKangxi_Radicals',
            bmp: '\u2F00-\u2FDF'
        },
        {
            name: 'InKannada',
            bmp: '\u0C80-\u0CFF'
        },
        {
            name: 'InKatakana',
            bmp: '\u30A0-\u30FF'
        },
        {
            name: 'InKatakana_Phonetic_Extensions',
            bmp: '\u31F0-\u31FF'
        },
        {
            name: 'InKayah_Li',
            bmp: '\uA900-\uA92F'
        },
        {
            name: 'InKharoshthi',
            astral: '\uD802[\uDE00-\uDE5F]'
        },
        {
            name: 'InKhmer',
            bmp: '\u1780-\u17FF'
        },
        {
            name: 'InKhmer_Symbols',
            bmp: '\u19E0-\u19FF'
        },
        {
            name: 'InLao',
            bmp: '\u0E80-\u0EFF'
        },
        {
            name: 'InLatin_Extended_Additional',
            bmp: '\u1E00-\u1EFF'
        },
        {
            name: 'InLatin_Extended_A',
            bmp: '\u0100-\u017F'
        },
        {
            name: 'InLatin_Extended_B',
            bmp: '\u0180-\u024F'
        },
        {
            name: 'InLatin_Extended_C',
            bmp: '\u2C60-\u2C7F'
        },
        {
            name: 'InLatin_Extended_D',
            bmp: '\uA720-\uA7FF'
        },
        {
            name: 'InLatin_1_Supplement',
            bmp: '\x80-\xFF'
        },
        {
            name: 'InLepcha',
            bmp: '\u1C00-\u1C4F'
        },
        {
            name: 'InLetterlike_Symbols',
            bmp: '\u2100-\u214F'
        },
        {
            name: 'InLimbu',
            bmp: '\u1900-\u194F'
        },
        {
            name: 'InLinear_B_Ideograms',
            astral: '\uD800[\uDC80-\uDCFF]'
        },
        {
            name: 'InLinear_B_Syllabary',
            astral: '\uD800[\uDC00-\uDC7F]'
        },
        {
            name: 'InLisu',
            bmp: '\uA4D0-\uA4FF'
        },
        {
            name: 'InLow_Surrogates',
            bmp: '\uDC00-\uDFFF'
        },
        {
            name: 'InLycian',
            astral: '\uD800[\uDE80-\uDE9F]'
        },
        {
            name: 'InLydian',
            astral: '\uD802[\uDD20-\uDD3F]'
        },
        {
            name: 'InMahjong_Tiles',
            astral: '\uD83C[\uDC00-\uDC2F]'
        },
        {
            name: 'InMalayalam',
            bmp: '\u0D00-\u0D7F'
        },
        {
            name: 'InMandaic',
            bmp: '\u0840-\u085F'
        },
        {
            name: 'InMathematical_Alphanumeric_Symbols',
            astral: '\uD835[\uDC00-\uDFFF]'
        },
        {
            name: 'InMathematical_Operators',
            bmp: '\u2200-\u22FF'
        },
        {
            name: 'InMeetei_Mayek',
            bmp: '\uABC0-\uABFF'
        },
        {
            name: 'InMeetei_Mayek_Extensions',
            bmp: '\uAAE0-\uAAFF'
        },
        {
            name: 'InMeroitic_Cursive',
            astral: '\uD802[\uDDA0-\uDDFF]'
        },
        {
            name: 'InMeroitic_Hieroglyphs',
            astral: '\uD802[\uDD80-\uDD9F]'
        },
        {
            name: 'InMiao',
            astral: '\uD81B[\uDF00-\uDF9F]'
        },
        {
            name: 'InMiscellaneous_Mathematical_Symbols_A',
            bmp: '\u27C0-\u27EF'
        },
        {
            name: 'InMiscellaneous_Mathematical_Symbols_B',
            bmp: '\u2980-\u29FF'
        },
        {
            name: 'InMiscellaneous_Symbols',
            bmp: '\u2600-\u26FF'
        },
        {
            name: 'InMiscellaneous_Symbols_And_Pictographs',
            astral: '\uD83D[\uDC00-\uDDFF]|\uD83C[\uDF00-\uDFFF]'
        },
        {
            name: 'InMiscellaneous_Symbols_and_Arrows',
            bmp: '\u2B00-\u2BFF'
        },
        {
            name: 'InMiscellaneous_Technical',
            bmp: '\u2300-\u23FF'
        },
        {
            name: 'InModifier_Tone_Letters',
            bmp: '\uA700-\uA71F'
        },
        {
            name: 'InMongolian',
            bmp: '\u1800-\u18AF'
        },
        {
            name: 'InMusical_Symbols',
            astral: '\uD834[\uDD00-\uDDFF]'
        },
        {
            name: 'InMyanmar',
            bmp: '\u1000-\u109F'
        },
        {
            name: 'InMyanmar_Extended_A',
            bmp: '\uAA60-\uAA7F'
        },
        {
            name: 'InNKo',
            bmp: '\u07C0-\u07FF'
        },
        {
            name: 'InNew_Tai_Lue',
            bmp: '\u1980-\u19DF'
        },
        {
            name: 'InNumber_Forms',
            bmp: '\u2150-\u218F'
        },
        {
            name: 'InOgham',
            bmp: '\u1680-\u169F'
        },
        {
            name: 'InOl_Chiki',
            bmp: '\u1C50-\u1C7F'
        },
        {
            name: 'InOld_Italic',
            astral: '\uD800[\uDF00-\uDF2F]'
        },
        {
            name: 'InOld_Persian',
            astral: '\uD800[\uDFA0-\uDFDF]'
        },
        {
            name: 'InOld_South_Arabian',
            astral: '\uD802[\uDE60-\uDE7F]'
        },
        {
            name: 'InOld_Turkic',
            astral: '\uD803[\uDC00-\uDC4F]'
        },
        {
            name: 'InOptical_Character_Recognition',
            bmp: '\u2440-\u245F'
        },
        {
            name: 'InOriya',
            bmp: '\u0B00-\u0B7F'
        },
        {
            name: 'InOsmanya',
            astral: '\uD801[\uDC80-\uDCAF]'
        },
        {
            name: 'InPhags_pa',
            bmp: '\uA840-\uA87F'
        },
        {
            name: 'InPhaistos_Disc',
            astral: '\uD800[\uDDD0-\uDDFF]'
        },
        {
            name: 'InPhoenician',
            astral: '\uD802[\uDD00-\uDD1F]'
        },
        {
            name: 'InPhonetic_Extensions',
            bmp: '\u1D00-\u1D7F'
        },
        {
            name: 'InPhonetic_Extensions_Supplement',
            bmp: '\u1D80-\u1DBF'
        },
        {
            name: 'InPlaying_Cards',
            astral: '\uD83C[\uDCA0-\uDCFF]'
        },
        {
            name: 'InPrivate_Use_Area',
            bmp: '\uE000-\uF8FF'
        },
        {
            name: 'InRejang',
            bmp: '\uA930-\uA95F'
        },
        {
            name: 'InRumi_Numeral_Symbols',
            astral: '\uD803[\uDE60-\uDE7F]'
        },
        {
            name: 'InRunic',
            bmp: '\u16A0-\u16FF'
        },
        {
            name: 'InSamaritan',
            bmp: '\u0800-\u083F'
        },
        {
            name: 'InSaurashtra',
            bmp: '\uA880-\uA8DF'
        },
        {
            name: 'InSharada',
            astral: '\uD804[\uDD80-\uDDDF]'
        },
        {
            name: 'InShavian',
            astral: '\uD801[\uDC50-\uDC7F]'
        },
        {
            name: 'InSinhala',
            bmp: '\u0D80-\u0DFF'
        },
        {
            name: 'InSmall_Form_Variants',
            bmp: '\uFE50-\uFE6F'
        },
        {
            name: 'InSora_Sompeng',
            astral: '\uD804[\uDCD0-\uDCFF]'
        },
        {
            name: 'InSpacing_Modifier_Letters',
            bmp: '\u02B0-\u02FF'
        },
        {
            name: 'InSpecials',
            bmp: '\uFFF0-\uFFFF'
        },
        {
            name: 'InSundanese',
            bmp: '\u1B80-\u1BBF'
        },
        {
            name: 'InSundanese_Supplement',
            bmp: '\u1CC0-\u1CCF'
        },
        {
            name: 'InSuperscripts_and_Subscripts',
            bmp: '\u2070-\u209F'
        },
        {
            name: 'InSupplemental_Arrows_A',
            bmp: '\u27F0-\u27FF'
        },
        {
            name: 'InSupplemental_Arrows_B',
            bmp: '\u2900-\u297F'
        },
        {
            name: 'InSupplemental_Mathematical_Operators',
            bmp: '\u2A00-\u2AFF'
        },
        {
            name: 'InSupplemental_Punctuation',
            bmp: '\u2E00-\u2E7F'
        },
        {
            name: 'InSupplementary_Private_Use_Area_A',
            astral: '[\uDB80-\uDBBF][\uDC00-\uDFFF]'
        },
        {
            name: 'InSupplementary_Private_Use_Area_B',
            astral: '[\uDBC0-\uDBFF][\uDC00-\uDFFF]'
        },
        {
            name: 'InSyloti_Nagri',
            bmp: '\uA800-\uA82F'
        },
        {
            name: 'InSyriac',
            bmp: '\u0700-\u074F'
        },
        {
            name: 'InTagalog',
            bmp: '\u1700-\u171F'
        },
        {
            name: 'InTagbanwa',
            bmp: '\u1760-\u177F'
        },
        {
            name: 'InTags',
            astral: '\uDB40[\uDC00-\uDC7F]'
        },
        {
            name: 'InTai_Le',
            bmp: '\u1950-\u197F'
        },
        {
            name: 'InTai_Tham',
            bmp: '\u1A20-\u1AAF'
        },
        {
            name: 'InTai_Viet',
            bmp: '\uAA80-\uAADF'
        },
        {
            name: 'InTai_Xuan_Jing_Symbols',
            astral: '\uD834[\uDF00-\uDF5F]'
        },
        {
            name: 'InTakri',
            astral: '\uD805[\uDE80-\uDECF]'
        },
        {
            name: 'InTamil',
            bmp: '\u0B80-\u0BFF'
        },
        {
            name: 'InTelugu',
            bmp: '\u0C00-\u0C7F'
        },
        {
            name: 'InThaana',
            bmp: '\u0780-\u07BF'
        },
        {
            name: 'InThai',
            bmp: '\u0E00-\u0E7F'
        },
        {
            name: 'InTibetan',
            bmp: '\u0F00-\u0FFF'
        },
        {
            name: 'InTifinagh',
            bmp: '\u2D30-\u2D7F'
        },
        {
            name: 'InTransport_And_Map_Symbols',
            astral: '\uD83D[\uDE80-\uDEFF]'
        },
        {
            name: 'InUgaritic',
            astral: '\uD800[\uDF80-\uDF9F]'
        },
        {
            name: 'InUnified_Canadian_Aboriginal_Syllabics',
            bmp: '\u1400-\u167F'
        },
        {
            name: 'InUnified_Canadian_Aboriginal_Syllabics_Extended',
            bmp: '\u18B0-\u18FF'
        },
        {
            name: 'InVai',
            bmp: '\uA500-\uA63F'
        },
        {
            name: 'InVariation_Selectors',
            bmp: '\uFE00-\uFE0F'
        },
        {
            name: 'InVariation_Selectors_Supplement',
            astral: '\uDB40[\uDD00-\uDDEF]'
        },
        {
            name: 'InVedic_Extensions',
            bmp: '\u1CD0-\u1CFF'
        },
        {
            name: 'InVertical_Forms',
            bmp: '\uFE10-\uFE1F'
        },
        {
            name: 'InYi_Radicals',
            bmp: '\uA490-\uA4CF'
        },
        {
            name: 'InYi_Syllables',
            bmp: '\uA000-\uA48F'
        },
        {
            name: 'InYijing_Hexagram_Symbols',
            bmp: '\u4DC0-\u4DFF'
        }
    ]);

}(XRegExp));

/*!
 * XRegExp Unicode Categories 3.0.0-pre
 * <http://xregexp.com/>
 * Steven Levithan � 2010-2012 MIT License
 * Uses Unicode 6.2.0 <http://unicode.org/>
 * Unicode data generated by Mathias Bynens <http://mathiasbynens.be/>
 */

/**
 * Adds support for all Unicode categories. E.g., `\p{Lu}` or `\p{Uppercase Letter}`. Token names
 * are case insensitive, and any spaces, hyphens, and underscores are ignored.
 * @requires XRegExp, Unicode Base
 */
(function(XRegExp) {
    

    if (!XRegExp.addUnicodeData) {
        throw new ReferenceError('Unicode Base must be loaded before Unicode Categories');
    }

    XRegExp.addUnicodeData([
        {
            name: 'C',
            alias: 'Other',
            isBmpLast: true,
            bmp: '\0-\x1F\x7F-\x9F\xAD\u0378\u0379\u037F-\u0383\u038B\u038D\u03A2\u0528-\u0530\u0557\u0558\u0560\u0588\u058B-\u058E\u0590\u05C8-\u05CF\u05EB-\u05EF\u05F5-\u0605\u061C\u061D\u06DD\u070E\u070F\u074B\u074C\u07B2-\u07BF\u07FB-\u07FF\u082E\u082F\u083F\u085C\u085D\u085F-\u089F\u08A1\u08AD-\u08E3\u08FF\u0978\u0980\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA\u09BB\u09C5\u09C6\u09C9\u09CA\u09CF-\u09D6\u09D8-\u09DB\u09DE\u09E4\u09E5\u09FC-\u0A00\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A\u0A3B\u0A3D\u0A43-\u0A46\u0A49\u0A4A\u0A4E-\u0A50\u0A52-\u0A58\u0A5D\u0A5F-\u0A65\u0A76-\u0A80\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA\u0ABB\u0AC6\u0ACA\u0ACE\u0ACF\u0AD1-\u0ADF\u0AE4\u0AE5\u0AF2-\u0B00\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A\u0B3B\u0B45\u0B46\u0B49\u0B4A\u0B4E-\u0B55\u0B58-\u0B5B\u0B5E\u0B64\u0B65\u0B78-\u0B81\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BBD\u0BC3-\u0BC5\u0BC9\u0BCE\u0BCF\u0BD1-\u0BD6\u0BD8-\u0BE5\u0BFB-\u0C00\u0C04\u0C0D\u0C11\u0C29\u0C34\u0C3A-\u0C3C\u0C45\u0C49\u0C4E-\u0C54\u0C57\u0C5A-\u0C5F\u0C64\u0C65\u0C70-\u0C77\u0C80\u0C81\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA\u0CBB\u0CC5\u0CC9\u0CCE-\u0CD4\u0CD7-\u0CDD\u0CDF\u0CE4\u0CE5\u0CF0\u0CF3-\u0D01\u0D04\u0D0D\u0D11\u0D3B\u0D3C\u0D45\u0D49\u0D4F-\u0D56\u0D58-\u0D5F\u0D64\u0D65\u0D76-\u0D78\u0D80\u0D81\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0DC9\u0DCB-\u0DCE\u0DD5\u0DD7\u0DE0-\u0DF1\u0DF5-\u0E00\u0E3B-\u0E3E\u0E5C-\u0E80\u0E83\u0E85\u0E86\u0E89\u0E8B\u0E8C\u0E8E-\u0E93\u0E98\u0EA0\u0EA4\u0EA6\u0EA8\u0EA9\u0EAC\u0EBA\u0EBE\u0EBF\u0EC5\u0EC7\u0ECE\u0ECF\u0EDA\u0EDB\u0EE0-\u0EFF\u0F48\u0F6D-\u0F70\u0F98\u0FBD\u0FCD\u0FDB-\u0FFF\u10C6\u10C8-\u10CC\u10CE\u10CF\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B\u135C\u137D-\u137F\u139A-\u139F\u13F5-\u13FF\u169D-\u169F\u16F1-\u16FF\u170D\u1715-\u171F\u1737-\u173F\u1754-\u175F\u176D\u1771\u1774-\u177F\u17DE\u17DF\u17EA-\u17EF\u17FA-\u17FF\u180F\u181A-\u181F\u1878-\u187F\u18AB-\u18AF\u18F6-\u18FF\u191D-\u191F\u192C-\u192F\u193C-\u193F\u1941-\u1943\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19CF\u19DB-\u19DD\u1A1C\u1A1D\u1A5F\u1A7D\u1A7E\u1A8A-\u1A8F\u1A9A-\u1A9F\u1AAE-\u1AFF\u1B4C-\u1B4F\u1B7D-\u1B7F\u1BF4-\u1BFB\u1C38-\u1C3A\u1C4A-\u1C4C\u1C80-\u1CBF\u1CC8-\u1CCF\u1CF7-\u1CFF\u1DE7-\u1DFB\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FC5\u1FD4\u1FD5\u1FDC\u1FF0\u1FF1\u1FF5\u1FFF\u200B-\u200F\u202A-\u202E\u2060-\u206F\u2072\u2073\u208F\u209D-\u209F\u20BB-\u20CF\u20F1-\u20FF\u218A-\u218F\u23F4-\u23FF\u2427-\u243F\u244B-\u245F\u2700\u2B4D-\u2B4F\u2B5A-\u2BFF\u2C2F\u2C5F\u2CF4-\u2CF8\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D71-\u2D7E\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF\u2E3C-\u2E7F\u2E9A\u2EF4-\u2EFF\u2FD6-\u2FEF\u2FFC-\u2FFF\u3040\u3097\u3098\u3100-\u3104\u312E-\u3130\u318F\u31BB-\u31BF\u31E4-\u31EF\u321F\u32FF\u4DB6-\u4DBF\u9FCD-\u9FFF\uA48D-\uA48F\uA4C7-\uA4CF\uA62C-\uA63F\uA698-\uA69E\uA6F8-\uA6FF\uA78F\uA794-\uA79F\uA7AB-\uA7F7\uA82C-\uA82F\uA83A-\uA83F\uA878-\uA87F\uA8C5-\uA8CD\uA8DA-\uA8DF\uA8FC-\uA8FF\uA954-\uA95E\uA97D-\uA97F\uA9CE\uA9DA-\uA9DD\uA9E0-\uA9FF\uAA37-\uAA3F\uAA4E\uAA4F\uAA5A\uAA5B\uAA7C-\uAA7F\uAAC3-\uAADA\uAAF7-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F-\uABBF\uABEE\uABEF\uABFA-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBC2-\uFBD2\uFD40-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFE\uFDFF\uFE1A-\uFE1F\uFE27-\uFE2F\uFE53\uFE67\uFE6C-\uFE6F\uFE75\uFEFD-\uFF00\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFDF\uFFE7\uFFEF-\uFFFB\uFFFE\uFFFF',
            astral: '\uD808[\uDF6F-\uDFFF]|\uD809[\uDC63-\uDC6F\uDC74-\uDFFF]|\uD804[\uDC4E-\uDC51\uDC70-\uDC7F\uDCBD\uDCC2-\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD44-\uDD7F\uDDC9-\uDDCF\uDDDA-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56\uDC60-\uDCFF\uDD1C-\uDD1E\uDD3A-\uDD3E\uDD40-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE34-\uDE37\uDE3B-\uDE3E\uDE48-\uDE4F\uDE59-\uDE5F\uDE80-\uDEFF\uDF36-\uDF38\uDF56\uDF57\uDF73-\uDF77\uDF80-\uDFFF]|\uD86D[\uDF35-\uDF3F]|\uD81B[\uDC00-\uDEFF\uDF45-\uDF4F\uDF7F-\uDF8E\uDFA0-\uDFFF]|\uD86E[\uDC1E-\uDFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDCFF\uDD03-\uDD06\uDD34-\uDD36\uDD8B-\uDD8F\uDD9C-\uDDCF\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF1F\uDF24-\uDF2F\uDF4B-\uDF7F\uDF9E\uDFC4-\uDFC7\uDFD6-\uDFFF]|\uD869[\uDED7-\uDEFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDEEF\uDEF2-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uDB40[\uDC00-\uDCFF\uDDF0-\uDFFF]|\uD803[\uDC49-\uDE5F\uDE7F-\uDFFF]|\uD80D[\uDC2F-\uDFFF]|[\uD806\uD807\uD80A\uD80B\uD80E-\uD819\uD81C-\uD82B\uD82D-\uD833\uD836-\uD83A\uD83E\uD83F\uD86F-\uD87D\uD87F-\uDB3F\uDB41-\uDBFF][\uDC00-\uDFFF]|\uD83D[\uDC3F\uDC41\uDCF8\uDCFD-\uDCFF\uDD3E\uDD3F\uDD44-\uDD4F\uDD68-\uDDFA\uDE41-\uDE44\uDE50-\uDE7F\uDEC6-\uDEFF\uDF74-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCBF\uDCC0\uDCD0\uDCE0-\uDCFF\uDD0B-\uDD0F\uDD2F\uDD6C-\uDD6F\uDD9B-\uDDE5\uDE03-\uDE0F\uDE3B-\uDE3F\uDE49-\uDE4F\uDE52-\uDEFF\uDF21-\uDF2F\uDF36\uDF7D-\uDF7F\uDF94-\uDF9F\uDFC5\uDFCB-\uDFDF\uDFF1-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]|\uD81A[\uDE39-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDD73-\uDD7A\uDDDE-\uDDFF\uDE46-\uDEFF\uDF57-\uDF5F\uDF72-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDFFF]|\uD805[\uDC00-\uDE7F\uDEB8-\uDEBF\uDECA-\uDFFF]|\uD82C[\uDC02-\uDFFF]'
        },
        {
            name: 'Cc',
            alias: 'Control',
            bmp: '\0-\x1F\x7F-\x9F'
        },
        {
            name: 'Cf',
            alias: 'Format',
            bmp: '\xAD\u0600-\u0604\u06DD\u070F\u200B-\u200F\u202A-\u202E\u2060-\u2064\u206A-\u206F\uFEFF\uFFF9-\uFFFB',
            astral: '\uDB40[\uDC01\uDC20-\uDC7F]|\uD834[\uDD73-\uDD7A]|\uD804\uDCBD'
        },
        {
            name: 'Cn',
            alias: 'Unassigned',
            bmp: '\u0378\u0379\u037F-\u0383\u038B\u038D\u03A2\u0528-\u0530\u0557\u0558\u0560\u0588\u058B-\u058E\u0590\u05C8-\u05CF\u05EB-\u05EF\u05F5-\u05FF\u0605\u061C\u061D\u070E\u074B\u074C\u07B2-\u07BF\u07FB-\u07FF\u082E\u082F\u083F\u085C\u085D\u085F-\u089F\u08A1\u08AD-\u08E3\u08FF\u0978\u0980\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA\u09BB\u09C5\u09C6\u09C9\u09CA\u09CF-\u09D6\u09D8-\u09DB\u09DE\u09E4\u09E5\u09FC-\u0A00\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A\u0A3B\u0A3D\u0A43-\u0A46\u0A49\u0A4A\u0A4E-\u0A50\u0A52-\u0A58\u0A5D\u0A5F-\u0A65\u0A76-\u0A80\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA\u0ABB\u0AC6\u0ACA\u0ACE\u0ACF\u0AD1-\u0ADF\u0AE4\u0AE5\u0AF2-\u0B00\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A\u0B3B\u0B45\u0B46\u0B49\u0B4A\u0B4E-\u0B55\u0B58-\u0B5B\u0B5E\u0B64\u0B65\u0B78-\u0B81\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BBD\u0BC3-\u0BC5\u0BC9\u0BCE\u0BCF\u0BD1-\u0BD6\u0BD8-\u0BE5\u0BFB-\u0C00\u0C04\u0C0D\u0C11\u0C29\u0C34\u0C3A-\u0C3C\u0C45\u0C49\u0C4E-\u0C54\u0C57\u0C5A-\u0C5F\u0C64\u0C65\u0C70-\u0C77\u0C80\u0C81\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA\u0CBB\u0CC5\u0CC9\u0CCE-\u0CD4\u0CD7-\u0CDD\u0CDF\u0CE4\u0CE5\u0CF0\u0CF3-\u0D01\u0D04\u0D0D\u0D11\u0D3B\u0D3C\u0D45\u0D49\u0D4F-\u0D56\u0D58-\u0D5F\u0D64\u0D65\u0D76-\u0D78\u0D80\u0D81\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0DC9\u0DCB-\u0DCE\u0DD5\u0DD7\u0DE0-\u0DF1\u0DF5-\u0E00\u0E3B-\u0E3E\u0E5C-\u0E80\u0E83\u0E85\u0E86\u0E89\u0E8B\u0E8C\u0E8E-\u0E93\u0E98\u0EA0\u0EA4\u0EA6\u0EA8\u0EA9\u0EAC\u0EBA\u0EBE\u0EBF\u0EC5\u0EC7\u0ECE\u0ECF\u0EDA\u0EDB\u0EE0-\u0EFF\u0F48\u0F6D-\u0F70\u0F98\u0FBD\u0FCD\u0FDB-\u0FFF\u10C6\u10C8-\u10CC\u10CE\u10CF\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B\u135C\u137D-\u137F\u139A-\u139F\u13F5-\u13FF\u169D-\u169F\u16F1-\u16FF\u170D\u1715-\u171F\u1737-\u173F\u1754-\u175F\u176D\u1771\u1774-\u177F\u17DE\u17DF\u17EA-\u17EF\u17FA-\u17FF\u180F\u181A-\u181F\u1878-\u187F\u18AB-\u18AF\u18F6-\u18FF\u191D-\u191F\u192C-\u192F\u193C-\u193F\u1941-\u1943\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19CF\u19DB-\u19DD\u1A1C\u1A1D\u1A5F\u1A7D\u1A7E\u1A8A-\u1A8F\u1A9A-\u1A9F\u1AAE-\u1AFF\u1B4C-\u1B4F\u1B7D-\u1B7F\u1BF4-\u1BFB\u1C38-\u1C3A\u1C4A-\u1C4C\u1C80-\u1CBF\u1CC8-\u1CCF\u1CF7-\u1CFF\u1DE7-\u1DFB\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FC5\u1FD4\u1FD5\u1FDC\u1FF0\u1FF1\u1FF5\u1FFF\u2065-\u2069\u2072\u2073\u208F\u209D-\u209F\u20BB-\u20CF\u20F1-\u20FF\u218A-\u218F\u23F4-\u23FF\u2427-\u243F\u244B-\u245F\u2700\u2B4D-\u2B4F\u2B5A-\u2BFF\u2C2F\u2C5F\u2CF4-\u2CF8\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D71-\u2D7E\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF\u2E3C-\u2E7F\u2E9A\u2EF4-\u2EFF\u2FD6-\u2FEF\u2FFC-\u2FFF\u3040\u3097\u3098\u3100-\u3104\u312E-\u3130\u318F\u31BB-\u31BF\u31E4-\u31EF\u321F\u32FF\u4DB6-\u4DBF\u9FCD-\u9FFF\uA48D-\uA48F\uA4C7-\uA4CF\uA62C-\uA63F\uA698-\uA69E\uA6F8-\uA6FF\uA78F\uA794-\uA79F\uA7AB-\uA7F7\uA82C-\uA82F\uA83A-\uA83F\uA878-\uA87F\uA8C5-\uA8CD\uA8DA-\uA8DF\uA8FC-\uA8FF\uA954-\uA95E\uA97D-\uA97F\uA9CE\uA9DA-\uA9DD\uA9E0-\uA9FF\uAA37-\uAA3F\uAA4E\uAA4F\uAA5A\uAA5B\uAA7C-\uAA7F\uAAC3-\uAADA\uAAF7-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F-\uABBF\uABEE\uABEF\uABFA-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBC2-\uFBD2\uFD40-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFE\uFDFF\uFE1A-\uFE1F\uFE27-\uFE2F\uFE53\uFE67\uFE6C-\uFE6F\uFE75\uFEFD\uFEFE\uFF00\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFDF\uFFE7\uFFEF-\uFFF8\uFFFE\uFFFF',
            astral: '\uD808[\uDF6F-\uDFFF]|\uDB40[\uDC00\uDC02-\uDC1F\uDC80-\uDCFF\uDDF0-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDDDE-\uDDFF\uDE46-\uDEFF\uDF57-\uDF5F\uDF72-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56\uDC60-\uDCFF\uDD1C-\uDD1E\uDD3A-\uDD3E\uDD40-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE34-\uDE37\uDE3B-\uDE3E\uDE48-\uDE4F\uDE59-\uDE5F\uDE80-\uDEFF\uDF36-\uDF38\uDF56\uDF57\uDF73-\uDF77\uDF80-\uDFFF]|\uD86D[\uDF35-\uDF3F]|\uD81B[\uDC00-\uDEFF\uDF45-\uDF4F\uDF7F-\uDF8E\uDFA0-\uDFFF]|\uD809[\uDC63-\uDC6F\uDC74-\uDFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDCFF\uDD03-\uDD06\uDD34-\uDD36\uDD8B-\uDD8F\uDD9C-\uDDCF\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF1F\uDF24-\uDF2F\uDF4B-\uDF7F\uDF9E\uDFC4-\uDFC7\uDFD6-\uDFFF]|\uD869[\uDED7-\uDEFF]|\uD804[\uDC4E-\uDC51\uDC70-\uDC7F\uDCC2-\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD44-\uDD7F\uDDC9-\uDDCF\uDDDA-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDEEF\uDEF2-\uDFFF]|[\uDBBF\uDBFF][\uDFFE\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD803[\uDC49-\uDE5F\uDE7F-\uDFFF]|\uD80D[\uDC2F-\uDFFF]|[\uD806\uD807\uD80A\uD80B\uD80E-\uD819\uD81C-\uD82B\uD82D-\uD833\uD836-\uD83A\uD83E\uD83F\uD86F-\uD87D\uD87F-\uDB3F\uDB41-\uDB7F][\uDC00-\uDFFF]|\uD83D[\uDC3F\uDC41\uDCF8\uDCFD-\uDCFF\uDD3E\uDD3F\uDD44-\uDD4F\uDD68-\uDDFA\uDE41-\uDE44\uDE50-\uDE7F\uDEC6-\uDEFF\uDF74-\uDFFF]|\uD86E[\uDC1E-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCBF\uDCC0\uDCD0\uDCE0-\uDCFF\uDD0B-\uDD0F\uDD2F\uDD6C-\uDD6F\uDD9B-\uDDE5\uDE03-\uDE0F\uDE3B-\uDE3F\uDE49-\uDE4F\uDE52-\uDEFF\uDF21-\uDF2F\uDF36\uDF7D-\uDF7F\uDF94-\uDF9F\uDFC5\uDFCB-\uDFDF\uDFF1-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]|\uD81A[\uDE39-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDFFF]|\uD805[\uDC00-\uDE7F\uDEB8-\uDEBF\uDECA-\uDFFF]|\uD82C[\uDC02-\uDFFF]'
        },
        {
            name: 'Co',
            alias: 'Private_Use',
            bmp: '\uE000-\uF8FF',
            astral: '[\uDB80-\uDBBE\uDBC0-\uDBFE][\uDC00-\uDFFF]|[\uDBBF\uDBFF][\uDC00-\uDFFD]'
        },
        {
            name: 'Cs',
            alias: 'Surrogate',
            bmp: '\uD800-\uDFFF'
        },
        // Included in Unicode Base
        /*{
            name: 'L',
            alias: 'Letter',
            bmp: '...',
            astral: '...'
        },*/
        {
            name: 'Ll',
            alias: 'Lowercase_Letter',
            bmp: 'a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0561-\u0587\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7FA\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A',
            astral: '\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD801[\uDC28-\uDC4F]'
        },
        {
            name: 'Lm',
            alias: 'Modifier_Letter',
            bmp: '\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5\u06E6\u07F4\u07F5\u07FA\u081A\u0824\u0828\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA717-\uA71F\uA770\uA788\uA7F8\uA7F9\uA9CF\uAA70\uAADD\uAAF3\uAAF4\uFF70\uFF9E\uFF9F',
            astral: '\uD81B[\uDF93-\uDF9F]'
        },
        {
            name: 'Lo',
            alias: 'Other_Letter',
            bmp: '\xAA\xBA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05F0-\u05F2\u0620-\u063F\u0641-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E45\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10D0-\u10FA\u10FD-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A\uA62B\uA66E\uA6A0-\uA6E5\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC',
            astral: '\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1E\uDF30-\uDF40\uDF42-\uDF49\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD81A[\uDC00-\uDE38]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD83-\uDDB2\uDDC1-\uDDC4]|\uD86E[\uDC00-\uDC1D]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD803[\uDC00-\uDC48]|\uD80D[\uDC00-\uDC2E]|\uD805[\uDE80-\uDEAA]|\uD87E[\uDC00-\uDE1D]|\uD81B[\uDF00-\uDF44\uDF50]|\uD801[\uDC50-\uDC9D]|\uD82C[\uDC00\uDC01]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD808[\uDC00-\uDF6E]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]'
        },
        {
            name: 'Lt',
            alias: 'Titlecase_Letter',
            bmp: '\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC'
        },
        {
            name: 'Lu',
            alias: 'Uppercase_Letter',
            bmp: 'A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA\uFF21-\uFF3A',
            astral: '\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD801[\uDC00-\uDC27]'
        },
        {
            name: 'M',
            alias: 'Mark',
            bmp: '\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u08FE\u0900-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C01-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C82\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D02\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1DC0-\u1DE6\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE26',
            astral: '\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC80-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD80-\uDD82\uDDB3-\uDDC0]|\uD805[\uDEAB-\uDEB7]|\uD800\uDDFD|\uDB40[\uDD00-\uDDEF]'
        },
        {
            name: 'Mc',
            alias: 'Spacing_Mark',
            bmp: '\u0903\u093B\u093E-\u0940\u0949-\u094C\u094E\u094F\u0982\u0983\u09BE-\u09C0\u09C7\u09C8\u09CB\u09CC\u09D7\u0A03\u0A3E-\u0A40\u0A83\u0ABE-\u0AC0\u0AC9\u0ACB\u0ACC\u0B02\u0B03\u0B3E\u0B40\u0B47\u0B48\u0B4B\u0B4C\u0B57\u0BBE\u0BBF\u0BC1\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCC\u0BD7\u0C01-\u0C03\u0C41-\u0C44\u0C82\u0C83\u0CBE\u0CC0-\u0CC4\u0CC7\u0CC8\u0CCA\u0CCB\u0CD5\u0CD6\u0D02\u0D03\u0D3E-\u0D40\u0D46-\u0D48\u0D4A-\u0D4C\u0D57\u0D82\u0D83\u0DCF-\u0DD1\u0DD8-\u0DDF\u0DF2\u0DF3\u0F3E\u0F3F\u0F7F\u102B\u102C\u1031\u1038\u103B\u103C\u1056\u1057\u1062-\u1064\u1067-\u106D\u1083\u1084\u1087-\u108C\u108F\u109A-\u109C\u17B6\u17BE-\u17C5\u17C7\u17C8\u1923-\u1926\u1929-\u192B\u1930\u1931\u1933-\u1938\u19B0-\u19C0\u19C8\u19C9\u1A19-\u1A1B\u1A55\u1A57\u1A61\u1A63\u1A64\u1A6D-\u1A72\u1B04\u1B35\u1B3B\u1B3D-\u1B41\u1B43\u1B44\u1B82\u1BA1\u1BA6\u1BA7\u1BAA\u1BAC\u1BAD\u1BE7\u1BEA-\u1BEC\u1BEE\u1BF2\u1BF3\u1C24-\u1C2B\u1C34\u1C35\u1CE1\u1CF2\u1CF3\u302E\u302F\uA823\uA824\uA827\uA880\uA881\uA8B4-\uA8C3\uA952\uA953\uA983\uA9B4\uA9B5\uA9BA\uA9BB\uA9BD-\uA9C0\uAA2F\uAA30\uAA33\uAA34\uAA4D\uAA7B\uAAEB\uAAEE\uAAEF\uAAF5\uABE3\uABE4\uABE6\uABE7\uABE9\uABEA\uABEC',
            astral: '\uD834[\uDD65\uDD66\uDD6D-\uDD72]|\uD804[\uDC00\uDC02\uDC82\uDCB0-\uDCB2\uDCB7\uDCB8\uDD2C\uDD82\uDDB3-\uDDB5\uDDBF\uDDC0]|\uD805[\uDEAC\uDEAE\uDEAF\uDEB6]|\uD81B[\uDF51-\uDF7E]'
        },
        {
            name: 'Me',
            alias: 'Enclosing_Mark',
            bmp: '\u0488\u0489\u20DD-\u20E0\u20E2-\u20E4\uA670-\uA672'
        },
        {
            name: 'Mn',
            alias: 'Nonspacing_Mark',
            bmp: '\u0300-\u036F\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u08FE\u0900-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09C1-\u09C4\u09CD\u09E2\u09E3\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0B01\u0B3C\u0B3F\u0B41-\u0B44\u0B4D\u0B56\u0B62\u0B63\u0B82\u0BC0\u0BCD\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0CBC\u0CBF\u0CC6\u0CCC\u0CCD\u0CE2\u0CE3\u0D41-\u0D44\u0D4D\u0D62\u0D63\u0DCA\u0DD2-\u0DD4\u0DD6\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1B00-\u1B03\u1B34\u1B36-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1DC0-\u1DE6\u1DFC-\u1DFF\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302D\u3099\u309A\uA66F\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE26',
            astral: '\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F]|\uD834[\uDD67-\uDD69\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD81B[\uDF8F-\uDF92]|\uD805[\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7]|\uD804[\uDC01\uDC38-\uDC46\uDC80\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD80\uDD81\uDDB6-\uDDBE]|\uD800\uDDFD|\uDB40[\uDD00-\uDDEF]'
        },
        {
            name: 'N',
            alias: 'Number',
            bmp: '0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19',
            astral: '\uD802[\uDC58-\uDC5F\uDD16-\uDD1B\uDE40-\uDE47\uDE7D\uDE7E\uDF58-\uDF5F\uDF78-\uDF7F]|\uD801[\uDCA0-\uDCA9]|\uD809[\uDC00-\uDC62]|\uD835[\uDFCE-\uDFFF]|\uD800[\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDF20-\uDF23\uDF41\uDF4A\uDFD1-\uDFD5]|\uD834[\uDF60-\uDF71]|\uD803[\uDE60-\uDE7E]|\uD83C[\uDD00-\uDD0A]|\uD805[\uDEC0-\uDEC9]|\uD804[\uDC52-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9]'
        },
        {
            name: 'Nd',
            alias: 'Decimal_Number',
            bmp: '0-9\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0BE6-\u0BEF\u0C66-\u0C6F\u0CE6-\u0CEF\u0D66-\u0D6F\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F29\u1040-\u1049\u1090-\u1099\u17E0-\u17E9\u1810-\u1819\u1946-\u194F\u19D0-\u19D9\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\uA620-\uA629\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19',
            astral: '\uD804[\uDC66-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9]|\uD805[\uDEC0-\uDEC9]|\uD801[\uDCA0-\uDCA9]|\uD835[\uDFCE-\uDFFF]'
        },
        {
            name: 'Nl',
            alias: 'Letter_Number',
            bmp: '\u16EE-\u16F0\u2160-\u2182\u2185-\u2188\u3007\u3021-\u3029\u3038-\u303A\uA6E6-\uA6EF',
            astral: '\uD800[\uDD40-\uDD74\uDF41\uDF4A\uDFD1-\uDFD5]|\uD809[\uDC00-\uDC62]'
        },
        {
            name: 'No',
            alias: 'Other_Number',
            bmp: '\xB2\xB3\xB9\xBC-\xBE\u09F4-\u09F9\u0B72-\u0B77\u0BF0-\u0BF2\u0C78-\u0C7E\u0D70-\u0D75\u0F2A-\u0F33\u1369-\u137C\u17F0-\u17F9\u19DA\u2070\u2074-\u2079\u2080-\u2089\u2150-\u215F\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA830-\uA835',
            astral: '\uD802[\uDC58-\uDC5F\uDD16-\uDD1B\uDE40-\uDE47\uDE7D\uDE7E\uDF58-\uDF5F\uDF78-\uDF7F]|\uD834[\uDF60-\uDF71]|\uD803[\uDE60-\uDE7E]|\uD800[\uDD07-\uDD33\uDD75-\uDD78\uDD8A\uDF20-\uDF23]|\uD83C[\uDD00-\uDD0A]|\uD804[\uDC52-\uDC65]'
        },
        {
            name: 'P',
            alias: 'Punctuation',
            bmp: '\x21-\x23\x25-\\x2A\x2C-\x2F\x3A\x3B\\x3F\x40\\x5B-\\x5D\x5F\\x7B\x7D\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65',
            astral: '\uD809[\uDC70-\uDC73]|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDF39-\uDF3F]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDDC5-\uDDC8]'
        },
        {
            name: 'Pc',
            alias: 'Connector_Punctuation',
            bmp: '\x5F\u203F\u2040\u2054\uFE33\uFE34\uFE4D-\uFE4F\uFF3F'
        },
        {
            name: 'Pd',
            alias: 'Dash_Punctuation',
            bmp: '\\x2D\u058A\u05BE\u1400\u1806\u2010-\u2015\u2E17\u2E1A\u2E3A\u2E3B\u301C\u3030\u30A0\uFE31\uFE32\uFE58\uFE63\uFF0D'
        },
        {
            name: 'Pe',
            alias: 'Close_Punctuation',
            bmp: '\\x29\\x5D\x7D\u0F3B\u0F3D\u169C\u2046\u207E\u208E\u232A\u2769\u276B\u276D\u276F\u2771\u2773\u2775\u27C6\u27E7\u27E9\u27EB\u27ED\u27EF\u2984\u2986\u2988\u298A\u298C\u298E\u2990\u2992\u2994\u2996\u2998\u29D9\u29DB\u29FD\u2E23\u2E25\u2E27\u2E29\u3009\u300B\u300D\u300F\u3011\u3015\u3017\u3019\u301B\u301E\u301F\uFD3F\uFE18\uFE36\uFE38\uFE3A\uFE3C\uFE3E\uFE40\uFE42\uFE44\uFE48\uFE5A\uFE5C\uFE5E\uFF09\uFF3D\uFF5D\uFF60\uFF63'
        },
        {
            name: 'Pf',
            alias: 'Final_Punctuation',
            bmp: '\xBB\u2019\u201D\u203A\u2E03\u2E05\u2E0A\u2E0D\u2E1D\u2E21'
        },
        {
            name: 'Pi',
            alias: 'Initial_Punctuation',
            bmp: '\xAB\u2018\u201B\u201C\u201F\u2039\u2E02\u2E04\u2E09\u2E0C\u2E1C\u2E20'
        },
        {
            name: 'Po',
            alias: 'Other_Punctuation',
            bmp: '\x21-\x23\x25-\x27\\x2A\x2C\\x2E\x2F\x3A\x3B\\x3F\x40\\x5C\xA1\xA7\xB6\xB7\xBF\u037E\u0387\u055A-\u055F\u0589\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u166D\u166E\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u1805\u1807-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2016\u2017\u2020-\u2027\u2030-\u2038\u203B-\u203E\u2041-\u2043\u2047-\u2051\u2053\u2055-\u205E\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00\u2E01\u2E06-\u2E08\u2E0B\u2E0E-\u2E16\u2E18\u2E19\u2E1B\u2E1E\u2E1F\u2E2A-\u2E2E\u2E30-\u2E39\u3001-\u3003\u303D\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFE10-\uFE16\uFE19\uFE30\uFE45\uFE46\uFE49-\uFE4C\uFE50-\uFE52\uFE54-\uFE57\uFE5F-\uFE61\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF07\uFF0A\uFF0C\uFF0E\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3C\uFF61\uFF64\uFF65',
            astral: '\uD809[\uDC70-\uDC73]|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDF39-\uDF3F]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDDC5-\uDDC8]'
        },
        {
            name: 'Ps',
            alias: 'Open_Punctuation',
            bmp: '\\x28\\x5B\\x7B\u0F3A\u0F3C\u169B\u201A\u201E\u2045\u207D\u208D\u2329\u2768\u276A\u276C\u276E\u2770\u2772\u2774\u27C5\u27E6\u27E8\u27EA\u27EC\u27EE\u2983\u2985\u2987\u2989\u298B\u298D\u298F\u2991\u2993\u2995\u2997\u29D8\u29DA\u29FC\u2E22\u2E24\u2E26\u2E28\u3008\u300A\u300C\u300E\u3010\u3014\u3016\u3018\u301A\u301D\uFD3E\uFE17\uFE35\uFE37\uFE39\uFE3B\uFE3D\uFE3F\uFE41\uFE43\uFE47\uFE59\uFE5B\uFE5D\uFF08\uFF3B\uFF5B\uFF5F\uFF62'
        },
        {
            name: 'S',
            alias: 'Symbol',
            bmp: '\\x24\\x2B\x3C-\x3E\\x5E\x60\\x7C\x7E\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20BA\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u2190-\u2328\u232B-\u23F3\u2400-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u26FF\u2701-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B4C\u2B50-\u2B59\u2CE5-\u2CEA\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFB\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u32FE\u3300-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uFB29\uFBB2-\uFBC1\uFDFC\uFDFD\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD',
            astral: '\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCF7\uDCF9-\uDCFC\uDD00-\uDD3D\uDD40-\uDD43\uDD50-\uDD67\uDDFB-\uDE40\uDE45-\uDE4F\uDE80-\uDEC5\uDF00-\uDF73]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBE\uDCC1-\uDCCF\uDCD1-\uDCDF\uDD10-\uDD2E\uDD30-\uDD6B\uDD70-\uDD9A\uDDE6-\uDE02\uDE10-\uDE3A\uDE40-\uDE48\uDE50\uDE51\uDF00-\uDF20\uDF30-\uDF35\uDF37-\uDF7C\uDF80-\uDF93\uDFA0-\uDFC4\uDFC6-\uDFCA\uDFE0-\uDFF0]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDDD\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD90-\uDD9B\uDDD0-\uDDFC]|\uD83B[\uDEF0\uDEF1]'
        },
        {
            name: 'Sc',
            alias: 'Currency_Symbol',
            bmp: '\\x24\xA2-\xA5\u058F\u060B\u09F2\u09F3\u09FB\u0AF1\u0BF9\u0E3F\u17DB\u20A0-\u20BA\uA838\uFDFC\uFE69\uFF04\uFFE0\uFFE1\uFFE5\uFFE6'
        },
        {
            name: 'Sk',
            alias: 'Modifier_Symbol',
            bmp: '\\x5E\x60\xA8\xAF\xB4\xB8\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u309B\u309C\uA700-\uA716\uA720\uA721\uA789\uA78A\uFBB2-\uFBC1\uFF3E\uFF40\uFFE3'
        },
        {
            name: 'Sm',
            alias: 'Math_Symbol',
            bmp: '\\x2B\x3C-\x3E\\x7C\x7E\xAC\xB1\xD7\xF7\u03F6\u0606-\u0608\u2044\u2052\u207A-\u207C\u208A-\u208C\u2118\u2140-\u2144\u214B\u2190-\u2194\u219A\u219B\u21A0\u21A3\u21A6\u21AE\u21CE\u21CF\u21D2\u21D4\u21F4-\u22FF\u2308-\u230B\u2320\u2321\u237C\u239B-\u23B3\u23DC-\u23E1\u25B7\u25C1\u25F8-\u25FF\u266F\u27C0-\u27C4\u27C7-\u27E5\u27F0-\u27FF\u2900-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2AFF\u2B30-\u2B44\u2B47-\u2B4C\uFB29\uFE62\uFE64-\uFE66\uFF0B\uFF1C-\uFF1E\uFF5C\uFF5E\uFFE2\uFFE9-\uFFEC',
            astral: '\uD83B[\uDEF0\uDEF1]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]'
        },
        {
            name: 'So',
            alias: 'Other_Symbol',
            bmp: '\xA6\xA9\xAE\xB0\u0482\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u09FA\u0B70\u0BF3-\u0BF8\u0BFA\u0C7F\u0D79\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116\u2117\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u214A\u214C\u214D\u214F\u2195-\u2199\u219C-\u219F\u21A1\u21A2\u21A4\u21A5\u21A7-\u21AD\u21AF-\u21CD\u21D0\u21D1\u21D3\u21D5-\u21F3\u2300-\u2307\u230C-\u231F\u2322-\u2328\u232B-\u237B\u237D-\u239A\u23B4-\u23DB\u23E2-\u23F3\u2400-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u25B6\u25B8-\u25C0\u25C2-\u25F7\u2600-\u266E\u2670-\u26FF\u2701-\u2767\u2794-\u27BF\u2800-\u28FF\u2B00-\u2B2F\u2B45\u2B46\u2B50-\u2B59\u2CE5-\u2CEA\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFB\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u32FE\u3300-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA828-\uA82B\uA836\uA837\uA839\uAA77-\uAA79\uFDFD\uFFE4\uFFE8\uFFED\uFFEE\uFFFC\uFFFD',
            astral: '\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCF7\uDCF9-\uDCFC\uDD00-\uDD3D\uDD40-\uDD43\uDD50-\uDD67\uDDFB-\uDE40\uDE45-\uDE4F\uDE80-\uDEC5\uDF00-\uDF73]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDDD\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBE\uDCC1-\uDCCF\uDCD1-\uDCDF\uDD10-\uDD2E\uDD30-\uDD6B\uDD70-\uDD9A\uDDE6-\uDE02\uDE10-\uDE3A\uDE40-\uDE48\uDE50\uDE51\uDF00-\uDF20\uDF30-\uDF35\uDF37-\uDF7C\uDF80-\uDF93\uDFA0-\uDFC4\uDFC6-\uDFCA\uDFE0-\uDFF0]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD90-\uDD9B\uDDD0-\uDDFC]'
        },
        {
            name: 'Z',
            alias: 'Separator',
            bmp: '\x20\xA0\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000'
        },
        {
            name: 'Zl',
            alias: 'Line_Separator',
            bmp: '\u2028'
        },
        {
            name: 'Zp',
            alias: 'Paragraph_Separator',
            bmp: '\u2029'
        },
        {
            name: 'Zs',
            alias: 'Space_Separator',
            bmp: '\x20\xA0\u1680\u180E\u2000-\u200A\u202F\u205F\u3000'
        }
    ]);

}(XRegExp));

/*!
 * XRegExp Unicode Properties 3.0.0-pre
 * <http://xregexp.com/>
 * Steven Levithan � 2012 MIT License
 * Uses Unicode 6.2.0 <http://unicode.org/>
 * Unicode data generated by Mathias Bynens <http://mathiasbynens.be/>
 */

/**
 * Adds Level 1 Unicode properties (detailed in UTS #18 RL1.2). Token names are case insensitive,
 * and any spaces, hyphens, and underscores are ignored.
 * @requires XRegExp, Unicode Base
 */
(function(XRegExp) {
    

    if (!XRegExp.addUnicodeData) {
        throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');
    }

    XRegExp.addUnicodeData([
        {
            name: 'ASCII',
            bmp: '\0-\x7F'
        },
        {
            name: 'Alphabetic',
            bmp: 'A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0345\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05B0-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0657\u0659-\u065F\u066E-\u06D3\u06D5-\u06DC\u06E1-\u06E8\u06ED-\u06EF\u06FA-\u06FC\u06FF\u0710-\u073F\u074D-\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0817\u081A-\u082C\u0840-\u0858\u08A0\u08A2-\u08AC\u08E4-\u08E9\u08F0-\u08FE\u0900-\u093B\u093D-\u094C\u094E-\u0950\u0955-\u0963\u0971-\u0977\u0979-\u097F\u0981-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD-\u09C4\u09C7\u09C8\u09CB\u09CC\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09F0\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3E-\u0A42\u0A47\u0A48\u0A4B\u0A4C\u0A51\u0A59-\u0A5C\u0A5E\u0A70-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD-\u0AC5\u0AC7-\u0AC9\u0ACB\u0ACC\u0AD0\u0AE0-\u0AE3\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D-\u0B44\u0B47\u0B48\u0B4B\u0B4C\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCC\u0BD0\u0BD7\u0C01-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4C\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C82\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCC\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CF1\u0CF2\u0D02\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4C\u0D4E\u0D57\u0D60-\u0D63\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E46\u0E4D\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0ECD\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F71-\u0F81\u0F88-\u0F97\u0F99-\u0FBC\u1000-\u1036\u1038\u103B-\u103F\u1050-\u1062\u1065-\u1068\u106E-\u1086\u108E\u109C\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F0\u1700-\u170C\u170E-\u1713\u1720-\u1733\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17B3\u17B6-\u17C8\u17D7\u17DC\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191C\u1920-\u192B\u1930-\u1938\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A1B\u1A20-\u1A5E\u1A61-\u1A74\u1AA7\u1B00-\u1B33\u1B35-\u1B43\u1B45-\u1B4B\u1B80-\u1BA9\u1BAC-\u1BAF\u1BBA-\u1BE5\u1BE7-\u1BF1\u1C00-\u1C35\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u24B6-\u24E9\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA674-\uA67B\uA67F-\uA697\uA69F-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA827\uA840-\uA873\uA880-\uA8C3\uA8F2-\uA8F7\uA8FB\uA90A-\uA92A\uA930-\uA952\uA960-\uA97C\uA980-\uA9B2\uA9B4-\uA9BF\uA9CF\uAA00-\uAA36\uAA40-\uAA4D\uAA60-\uAA76\uAA7A\uAA80-\uAABE\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF5\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABEA\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC',
            astral: '\uD803[\uDC00-\uDC48]|\uD801[\uDC00-\uDC9D]|\uD809[\uDC00-\uDC62]|\uD81A[\uDC00-\uDE38]|\uD804[\uDC00-\uDC45\uDC82-\uDCB8\uDCD0-\uDCE8\uDD00-\uDD32\uDD80-\uDDBF\uDDC1-\uDDC4]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD87E[\uDC00-\uDE1D]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1E\uDF30-\uDF4A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF93-\uDF9F]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD82C[\uDC00\uDC01]|\uD808[\uDC00-\uDF6E]|\uD805[\uDE80-\uDEB5]'
        },
        // Assert: In BMP-only mode, `[\P{Any}]` (inverted Any within a character class) compiles to `[]`
        {
            name: 'Any',
            isBmpLast: true,
            bmp: '\0-\uFFFF',
            astral: '[\uD800-\uDBFF][\uDC00-\uDFFF]'
        },
        // Defined as the inverse of Unicode category Cn (Unassigned)
        {
            name: 'Assigned',
            inverseOf: 'Cn'
        },
        {
            name: 'Default_Ignorable_Code_Point',
            bmp: '\xAD\u034F\u115F\u1160\u17B4\u17B5\u180B-\u180D\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8',
            astral: '[\uDB40-\uDB43][\uDC00-\uDFFF]|\uD834[\uDD73-\uDD7A]'
        },
        {
            name: 'Lowercase',
            bmp: 'a-z\xAA\xB5\xBA\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02B8\u02C0\u02C1\u02E0-\u02E4\u0345\u0371\u0373\u0377\u037A-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0561-\u0587\u1D00-\u1DBF\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u2071\u207F\u2090-\u209C\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2170-\u217F\u2184\u24D0-\u24E9\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7D\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7F8-\uA7FA\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A',
            astral: '\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD801[\uDC28-\uDC4F]'
        },
        {
            name: 'Noncharacter_Code_Point',
            bmp: '\uFDD0-\uFDEF\uFFFE\uFFFF',
            astral: '[\uDB3F\uDB7F\uDBBF\uDBFF\uD83F\uD87F\uD8BF\uDAFF\uD97F\uD9BF\uD9FF\uDA3F\uD8FF\uDABF\uDA7F\uD93F][\uDFFE\uDFFF]'
        },
        {
            name: 'Uppercase',
            bmp: 'A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2160-\u216F\u2183\u24B6-\u24CF\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA\uFF21-\uFF3A',
            astral: '\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD801[\uDC00-\uDC27]'
        },
        {
            name: 'White_Space',
            bmp: '\x09-\x0D\x20\x85\xA0\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000'
        }
    ]);

}(XRegExp));

/*!
 * XRegExp Unicode Scripts 3.0.0-pre
 * <http://xregexp.com/>
 * Steven Levithan � 2010-2012 MIT License
 * Uses Unicode 6.2.0 <http://unicode.org/>
 * Unicode data generated by Mathias Bynens <http://mathiasbynens.be/>
 */

/**
 * Adds support for all Unicode scripts. E.g., `\p{Latin}`. Token names are case insensitive, and
 * any spaces, hyphens, and underscores are ignored.
 * @requires XRegExp, Unicode Base
 */
(function(XRegExp) {
    

    if (!XRegExp.addUnicodeData) {
        throw new ReferenceError('Unicode Base must be loaded before Unicode Scripts');
    }

    XRegExp.addUnicodeData([
        {
            name: 'Arabic',
            bmp: '\u0600-\u0604\u0606-\u060B\u060D-\u061A\u061E\u0620-\u063F\u0641-\u064A\u0656-\u065F\u066A-\u066F\u0671-\u06DC\u06DE-\u06FF\u0750-\u077F\u08A0\u08A2-\u08AC\u08E4-\u08FE\uFB50-\uFBC1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFC\uFE70-\uFE74\uFE76-\uFEFC',
            astral: '\uD803[\uDE60-\uDE7E]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB\uDEF0\uDEF1]'
        },
        {
            name: 'Armenian',
            bmp: '\u0531-\u0556\u0559-\u055F\u0561-\u0587\u058A\u058F\uFB13-\uFB17'
        },
        {
            name: 'Avestan',
            astral: '\uD802[\uDF00-\uDF35\uDF39-\uDF3F]'
        },
        {
            name: 'Balinese',
            bmp: '\u1B00-\u1B4B\u1B50-\u1B7C'
        },
        {
            name: 'Bamum',
            bmp: '\uA6A0-\uA6F7',
            astral: '\uD81A[\uDC00-\uDE38]'
        },
        {
            name: 'Batak',
            bmp: '\u1BC0-\u1BF3\u1BFC-\u1BFF'
        },
        {
            name: 'Bengali',
            bmp: '\u0981-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09FB'
        },
        {
            name: 'Bopomofo',
            bmp: '\u02EA\u02EB\u3105-\u312D\u31A0-\u31BA'
        },
        {
            name: 'Brahmi',
            astral: '\uD804[\uDC00-\uDC4D\uDC52-\uDC6F]'
        },
        {
            name: 'Braille',
            bmp: '\u2800-\u28FF'
        },
        {
            name: 'Buginese',
            bmp: '\u1A00-\u1A1B\u1A1E\u1A1F'
        },
        {
            name: 'Buhid',
            bmp: '\u1740-\u1753'
        },
        {
            name: 'Canadian_Aboriginal',
            bmp: '\u1400-\u167F\u18B0-\u18F5'
        },
        {
            name: 'Carian',
            astral: '\uD800[\uDEA0-\uDED0]'
        },
        {
            name: 'Chakma',
            astral: '\uD804[\uDD00-\uDD34\uDD36-\uDD43]'
        },
        {
            name: 'Cham',
            bmp: '\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA5C-\uAA5F'
        },
        {
            name: 'Cherokee',
            bmp: '\u13A0-\u13F4'
        },
        {
            name: 'Common',
            bmp: '\0-\x40\\x5B-\x60\\x7B-\xA9\xAB-\xB9\xBB-\xBF\xD7\xF7\u02B9-\u02DF\u02E5-\u02E9\u02EC-\u02FF\u0374\u037E\u0385\u0387\u0589\u060C\u061B\u061F\u0640\u0660-\u0669\u06DD\u0964\u0965\u0E3F\u0FD5-\u0FD8\u10FB\u16EB-\u16ED\u1735\u1736\u1802\u1803\u1805\u1CD3\u1CE1\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u2000-\u200B\u200E-\u2064\u206A-\u2070\u2074-\u207E\u2080-\u208E\u20A0-\u20BA\u2100-\u2125\u2127-\u2129\u212C-\u2131\u2133-\u214D\u214F-\u215F\u2189\u2190-\u23F3\u2400-\u2426\u2440-\u244A\u2460-\u26FF\u2701-\u27FF\u2900-\u2B4C\u2B50-\u2B59\u2E00-\u2E3B\u2FF0-\u2FFB\u3000-\u3004\u3006\u3008-\u3020\u3030-\u3037\u303C-\u303F\u309B\u309C\u30A0\u30FB\u30FC\u3190-\u319F\u31C0-\u31E3\u3220-\u325F\u327F-\u32CF\u3358-\u33FF\u4DC0-\u4DFF\uA700-\uA721\uA788-\uA78A\uA830-\uA839\uFD3E\uFD3F\uFDFD\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFEFF\uFF01-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFF70\uFF9E\uFF9F\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFF9-\uFFFD',
            astral: '\uD800[\uDD00-\uDD02\uDD07-\uDD33\uDD37-\uDD3F\uDD90-\uDD9B\uDDD0-\uDDFC]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBE\uDCC1-\uDCCF\uDCD1-\uDCDF\uDD00-\uDD0A\uDD10-\uDD2E\uDD30-\uDD6B\uDD70-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE10-\uDE3A\uDE40-\uDE48\uDE50\uDE51\uDF00-\uDF20\uDF30-\uDF35\uDF37-\uDF7C\uDF80-\uDF93\uDFA0-\uDFC4\uDFC6-\uDFCA\uDFE0-\uDFF0]|\uDB40[\uDC01\uDC20-\uDC7F]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDFCB\uDFCE-\uDFFF]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD66\uDD6A-\uDD7A\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDDD\uDF00-\uDF56\uDF60-\uDF71]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCF7\uDCF9-\uDCFC\uDD00-\uDD3D\uDD40-\uDD43\uDD50-\uDD67\uDDFB-\uDE40\uDE45-\uDE4F\uDE80-\uDEC5\uDF00-\uDF73]'
        },
        {
            name: 'Coptic',
            bmp: '\u03E2-\u03EF\u2C80-\u2CF3\u2CF9-\u2CFF'
        },
        {
            name: 'Cuneiform',
            astral: '\uD809[\uDC00-\uDC62\uDC70-\uDC73]|\uD808[\uDC00-\uDF6E]'
        },
        {
            name: 'Cypriot',
            astral: '\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F]'
        },
        {
            name: 'Cyrillic',
            bmp: '\u0400-\u0484\u0487-\u0527\u1D2B\u1D78\u2DE0-\u2DFF\uA640-\uA697\uA69F'
        },
        {
            name: 'Deseret',
            astral: '\uD801[\uDC00-\uDC4F]'
        },
        {
            name: 'Devanagari',
            bmp: '\u0900-\u0950\u0953-\u0963\u0966-\u0977\u0979-\u097F\uA8E0-\uA8FB'
        },
        {
            name: 'Egyptian_Hieroglyphs',
            astral: '\uD80C[\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]'
        },
        {
            name: 'Ethiopic',
            bmp: '\u1200-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u137C\u1380-\u1399\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E'
        },
        {
            name: 'Georgian',
            bmp: '\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u10FF\u2D00-\u2D25\u2D27\u2D2D'
        },
        {
            name: 'Glagolitic',
            bmp: '\u2C00-\u2C2E\u2C30-\u2C5E'
        },
        {
            name: 'Gothic',
            astral: '\uD800[\uDF30-\uDF4A]'
        },
        {
            name: 'Greek',
            bmp: '\u0370-\u0373\u0375-\u0377\u037A-\u037D\u0384\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03E1\u03F0-\u03FF\u1D26-\u1D2A\u1D5D-\u1D61\u1D66-\u1D6A\u1DBF\u1F00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FC4\u1FC6-\u1FD3\u1FD6-\u1FDB\u1FDD-\u1FEF\u1FF2-\u1FF4\u1FF6-\u1FFE\u2126',
            astral: '\uD834[\uDE00-\uDE45]|\uD800[\uDD40-\uDD8A]'
        },
        {
            name: 'Gujarati',
            bmp: '\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AF1'
        },
        {
            name: 'Gurmukhi',
            bmp: '\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75'
        },
        {
            name: 'Han',
            bmp: '\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u3005\u3007\u3021-\u3029\u3038-\u303B\u3400-\u4DB5\u4E00-\u9FCC\uF900-\uFA6D\uFA70-\uFAD9',
            astral: '[\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD87E[\uDC00-\uDE1D]'
        },
        {
            name: 'Hangul',
            bmp: '\u1100-\u11FF\u302E\u302F\u3131-\u318E\u3200-\u321E\u3260-\u327E\uA960-\uA97C\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC'
        },
        {
            name: 'Hanunoo',
            bmp: '\u1720-\u1734'
        },
        {
            name: 'Hebrew',
            bmp: '\u0591-\u05C7\u05D0-\u05EA\u05F0-\u05F4\uFB1D-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFB4F'
        },
        {
            name: 'Hiragana',
            bmp: '\u3041-\u3096\u309D-\u309F',
            astral: '\uD82C\uDC01|\uD83C\uDE00'
        },
        {
            name: 'Imperial_Aramaic',
            astral: '\uD802[\uDC40-\uDC55\uDC57-\uDC5F]'
        },
        {
            name: 'Inherited',
            bmp: '\u0300-\u036F\u0485\u0486\u064B-\u0655\u0670\u0951\u0952\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1DC0-\u1DE6\u1DFC-\u1DFF\u200C\u200D\u20D0-\u20F0\u302A-\u302D\u3099\u309A\uFE00-\uFE0F\uFE20-\uFE26',
            astral: '\uD834[\uDD67-\uDD69\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD]|\uD800\uDDFD|\uDB40[\uDD00-\uDDEF]'
        },
        {
            name: 'Inscriptional_Pahlavi',
            astral: '\uD802[\uDF60-\uDF72\uDF78-\uDF7F]'
        },
        {
            name: 'Inscriptional_Parthian',
            astral: '\uD802[\uDF40-\uDF55\uDF58-\uDF5F]'
        },
        {
            name: 'Javanese',
            bmp: '\uA980-\uA9CD\uA9CF-\uA9D9\uA9DE\uA9DF'
        },
        {
            name: 'Kaithi',
            astral: '\uD804[\uDC80-\uDCC1]'
        },
        {
            name: 'Kannada',
            bmp: '\u0C82\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2'
        },
        {
            name: 'Katakana',
            bmp: '\u30A1-\u30FA\u30FD-\u30FF\u31F0-\u31FF\u32D0-\u32FE\u3300-\u3357\uFF66-\uFF6F\uFF71-\uFF9D',
            astral: '\uD82C\uDC00'
        },
        {
            name: 'Kayah_Li',
            bmp: '\uA900-\uA92F'
        },
        {
            name: 'Kharoshthi',
            astral: '\uD802[\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F-\uDE47\uDE50-\uDE58]'
        },
        {
            name: 'Khmer',
            bmp: '\u1780-\u17DD\u17E0-\u17E9\u17F0-\u17F9\u19E0-\u19FF'
        },
        {
            name: 'Lao',
            bmp: '\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF'
        },
        {
            name: 'Latin',
            bmp: 'A-Za-z\xAA\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u02E0-\u02E4\u1D00-\u1D25\u1D2C-\u1D5C\u1D62-\u1D65\u1D6B-\u1D77\u1D79-\u1DBE\u1E00-\u1EFF\u2071\u207F\u2090-\u209C\u212A\u212B\u2132\u214E\u2160-\u2188\u2C60-\u2C7F\uA722-\uA787\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA7FF\uFB00-\uFB06\uFF21-\uFF3A\uFF41-\uFF5A'
        },
        {
            name: 'Lepcha',
            bmp: '\u1C00-\u1C37\u1C3B-\u1C49\u1C4D-\u1C4F'
        },
        {
            name: 'Limbu',
            bmp: '\u1900-\u191C\u1920-\u192B\u1930-\u193B\u1940\u1944-\u194F'
        },
        {
            name: 'Linear_B',
            astral: '\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA]'
        },
        {
            name: 'Lisu',
            bmp: '\uA4D0-\uA4FF'
        },
        {
            name: 'Lycian',
            astral: '\uD800[\uDE80-\uDE9C]'
        },
        {
            name: 'Lydian',
            astral: '\uD802[\uDD20-\uDD39\uDD3F]'
        },
        {
            name: 'Malayalam',
            bmp: '\u0D02\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D75\u0D79-\u0D7F'
        },
        {
            name: 'Mandaic',
            bmp: '\u0840-\u085B\u085E'
        },
        {
            name: 'Meetei_Mayek',
            bmp: '\uAAE0-\uAAF6\uABC0-\uABED\uABF0-\uABF9'
        },
        {
            name: 'Meroitic_Cursive',
            astral: '\uD802[\uDDA0-\uDDB7\uDDBE\uDDBF]'
        },
        {
            name: 'Meroitic_Hieroglyphs',
            astral: '\uD802[\uDD80-\uDD9F]'
        },
        {
            name: 'Miao',
            astral: '\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]'
        },
        {
            name: 'Mongolian',
            bmp: '\u1800\u1801\u1804\u1806-\u180E\u1810-\u1819\u1820-\u1877\u1880-\u18AA'
        },
        {
            name: 'Myanmar',
            bmp: '\u1000-\u109F\uAA60-\uAA7B'
        },
        {
            name: 'New_Tai_Lue',
            bmp: '\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u19DE\u19DF'
        },
        {
            name: 'Nko',
            bmp: '\u07C0-\u07FA'
        },
        {
            name: 'Ogham',
            bmp: '\u1680-\u169C'
        },
        {
            name: 'Ol_Chiki',
            bmp: '\u1C50-\u1C7F'
        },
        {
            name: 'Old_Italic',
            astral: '\uD800[\uDF00-\uDF1E\uDF20-\uDF23]'
        },
        {
            name: 'Old_Persian',
            astral: '\uD800[\uDFA0-\uDFC3\uDFC8-\uDFD5]'
        },
        {
            name: 'Old_South_Arabian',
            astral: '\uD802[\uDE60-\uDE7F]'
        },
        {
            name: 'Old_Turkic',
            astral: '\uD803[\uDC00-\uDC48]'
        },
        {
            name: 'Oriya',
            bmp: '\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B77'
        },
        {
            name: 'Osmanya',
            astral: '\uD801[\uDC80-\uDC9D\uDCA0-\uDCA9]'
        },
        {
            name: 'Phags_Pa',
            bmp: '\uA840-\uA877'
        },
        {
            name: 'Phoenician',
            astral: '\uD802[\uDD00-\uDD1B\uDD1F]'
        },
        {
            name: 'Rejang',
            bmp: '\uA930-\uA953\uA95F'
        },
        {
            name: 'Runic',
            bmp: '\u16A0-\u16EA\u16EE-\u16F0'
        },
        {
            name: 'Samaritan',
            bmp: '\u0800-\u082D\u0830-\u083E'
        },
        {
            name: 'Saurashtra',
            bmp: '\uA880-\uA8C4\uA8CE-\uA8D9'
        },
        {
            name: 'Sharada',
            astral: '\uD804[\uDD80-\uDDC8\uDDD0-\uDDD9]'
        },
        {
            name: 'Shavian',
            astral: '\uD801[\uDC50-\uDC7F]'
        },
        {
            name: 'Sinhala',
            bmp: '\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2-\u0DF4'
        },
        {
            name: 'Sora_Sompeng',
            astral: '\uD804[\uDCD0-\uDCE8\uDCF0-\uDCF9]'
        },
        {
            name: 'Sundanese',
            bmp: '\u1B80-\u1BBF\u1CC0-\u1CC7'
        },
        {
            name: 'Syloti_Nagri',
            bmp: '\uA800-\uA82B'
        },
        {
            name: 'Syriac',
            bmp: '\u0700-\u070D\u070F-\u074A\u074D-\u074F'
        },
        {
            name: 'Tagalog',
            bmp: '\u1700-\u170C\u170E-\u1714'
        },
        {
            name: 'Tagbanwa',
            bmp: '\u1760-\u176C\u176E-\u1770\u1772\u1773'
        },
        {
            name: 'Tai_Le',
            bmp: '\u1950-\u196D\u1970-\u1974'
        },
        {
            name: 'Tai_Tham',
            bmp: '\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA0-\u1AAD'
        },
        {
            name: 'Tai_Viet',
            bmp: '\uAA80-\uAAC2\uAADB-\uAADF'
        },
        {
            name: 'Takri',
            astral: '\uD805[\uDE80-\uDEB7\uDEC0-\uDEC9]'
        },
        {
            name: 'Tamil',
            bmp: '\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BFA'
        },
        {
            name: 'Telugu',
            bmp: '\u0C01-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C78-\u0C7F'
        },
        {
            name: 'Thaana',
            bmp: '\u0780-\u07B1'
        },
        {
            name: 'Thai',
            bmp: '\u0E01-\u0E3A\u0E40-\u0E5B'
        },
        {
            name: 'Tibetan',
            bmp: '\u0F00-\u0F47\u0F49-\u0F6C\u0F71-\u0F97\u0F99-\u0FBC\u0FBE-\u0FCC\u0FCE-\u0FD4\u0FD9\u0FDA'
        },
        {
            name: 'Tifinagh',
            bmp: '\u2D30-\u2D67\u2D6F\u2D70\u2D7F'
        },
        {
            name: 'Ugaritic',
            astral: '\uD800[\uDF80-\uDF9D\uDF9F]'
        },
        {
            name: 'Vai',
            bmp: '\uA500-\uA62B'
        },
        {
            name: 'Yi',
            bmp: '\uA000-\uA48C\uA490-\uA4C6'
        }
    ]);

}(XRegExp));

return XRegExp;

}));


/* FileSaver.js
 * A saveAs() FileSaver implementation.
 * 2013-01-23
 *
 * By Eli Grey, http://eligrey.com
 * License: X11/MIT
 *   See LICENSE.md
 */

/*global self */
/*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,
  plusplus: true */

/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */

var saveAs = saveAs
  || (navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator))
  || (function(view) {
	
	var
		  doc = view.document
		  // only get URL when necessary in case BlobBuilder.js hasn't overridden it yet
		, get_URL = function() {
			return view.URL || view.webkitURL || view;
		}
		, URL = view.URL || view.webkitURL || view
		, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
		, can_use_save_link =  !view.externalHost && "download" in save_link
		, click = function(node) {
			var event = doc.createEvent("MouseEvents");
			event.initMouseEvent(
				"click", true, false, view, 0, 0, 0, 0, 0
				, false, false, false, false, 0, null
			);
			node.dispatchEvent(event);
		}
		, webkit_req_fs = view.webkitRequestFileSystem
		, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem
		, throw_outside = function (ex) {
			(view.setImmediate || view.setTimeout)(function() {
				throw ex;
			}, 0);
		}
		, force_saveable_type = "application/octet-stream"
		, fs_min_size = 0
		, deletion_queue = []
		, process_deletion_queue = function() {
			var i = deletion_queue.length;
			while (i--) {
				var file = deletion_queue[i];
				if (typeof file === "string") { // file is an object URL
					URL.revokeObjectURL(file);
				} else { // file is a File
					file.remove();
				}
			}
			deletion_queue.length = 0; // clear queue
		}
		, dispatch = function(filesaver, event_types, event) {
			event_types = [].concat(event_types);
			var i = event_types.length;
			while (i--) {
				var listener = filesaver["on" + event_types[i]];
				if (typeof listener === "function") {
					try {
						listener.call(filesaver, event || filesaver);
					} catch (ex) {
						throw_outside(ex);
					}
				}
			}
		}
		, FileSaver = function(blob, name) {
			// First try a.download, then web filesystem, then object URLs
			var
				  filesaver = this
				, type = blob.type
				, blob_changed = false
				, object_url
				, target_view
				, get_object_url = function() {
					var object_url = get_URL().createObjectURL(blob);
					deletion_queue.push(object_url);
					return object_url;
				}
				, dispatch_all = function() {
					dispatch(filesaver, "writestart progress write writeend".split(" "));
				}
				// on any filesys errors revert to saving with object URLs
				, fs_error = function() {
					// don't create more object URLs than needed
					if (blob_changed || !object_url) {
						object_url = get_object_url(blob);
					}
					if (target_view) {
						target_view.location.href = object_url;
					} else {
                        window.open(object_url, "_blank");
                    }
					filesaver.readyState = filesaver.DONE;
					dispatch_all();
				}
				, abortable = function(func) {
					return function() {
						if (filesaver.readyState !== filesaver.DONE) {
							return func.apply(this, arguments);
						}
					};
				}
				, create_if_not_found = {create: true, exclusive: false}
				, slice
			;
			filesaver.readyState = filesaver.INIT;
			if (!name) {
				name = "download";
			}
			if (can_use_save_link) {
				object_url = get_object_url(blob);
				save_link.href = object_url;
				save_link.download = name;
				click(save_link);
				filesaver.readyState = filesaver.DONE;
				dispatch_all();
				return;
			}
			// Object and web filesystem URLs have a problem saving in Google Chrome when
			// viewed in a tab, so I force save with application/octet-stream
			// http://code.google.com/p/chromium/issues/detail?id=91158
			if (view.chrome && type && type !== force_saveable_type) {
				slice = blob.slice || blob.webkitSlice;
				blob = slice.call(blob, 0, blob.size, force_saveable_type);
				blob_changed = true;
			}
			// Since I can't be sure that the guessed media type will trigger a download
			// in WebKit, I append .download to the filename.
			// https://bugs.webkit.org/show_bug.cgi?id=65440
			if (webkit_req_fs && name !== "download") {
				name += ".download";
			}
			if (type === force_saveable_type || webkit_req_fs) {
				target_view = view;
			}
			if (!req_fs) {
				fs_error();
				return;
			}
			fs_min_size += blob.size;
			req_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {
				fs.root.getDirectory("saved", create_if_not_found, abortable(function(dir) {
					var save = function() {
						dir.getFile(name, create_if_not_found, abortable(function(file) {
							file.createWriter(abortable(function(writer) {
								writer.onwriteend = function(event) {
									target_view.location.href = file.toURL();
									deletion_queue.push(file);
									filesaver.readyState = filesaver.DONE;
									dispatch(filesaver, "writeend", event);
								};
								writer.onerror = function() {
									var error = writer.error;
									if (error.code !== error.ABORT_ERR) {
										fs_error();
									}
								};
								"writestart progress write abort".split(" ").forEach(function(event) {
									writer["on" + event] = filesaver["on" + event];
								});
								writer.write(blob);
								filesaver.abort = function() {
									writer.abort();
									filesaver.readyState = filesaver.DONE;
								};
								filesaver.readyState = filesaver.WRITING;
							}), fs_error);
						}), fs_error);
					};
					dir.getFile(name, {create: false}, abortable(function(file) {
						// delete file if it already exists
						file.remove();
						save();
					}), abortable(function(ex) {
						if (ex.code === ex.NOT_FOUND_ERR) {
							save();
						} else {
							fs_error();
						}
					}));
				}), fs_error);
			}), fs_error);
		}
		, FS_proto = FileSaver.prototype
		, saveAs = function(blob, name) {
			return new FileSaver(blob, name);
		}
	;
	FS_proto.abort = function() {
		var filesaver = this;
		filesaver.readyState = filesaver.DONE;
		dispatch(filesaver, "abort");
	};
	FS_proto.readyState = FS_proto.INIT = 0;
	FS_proto.WRITING = 1;
	FS_proto.DONE = 2;

	FS_proto.error =
	FS_proto.onwritestart =
	FS_proto.onprogress =
	FS_proto.onwrite =
	FS_proto.onabort =
	FS_proto.onerror =
	FS_proto.onwriteend =
		null;

	view.addEventListener("unload", process_deletion_queue, false);
	return saveAs;
}(self));

if (typeof module !== 'undefined') module.exports = saveAs;

define("FileSaver", function(){});

// Domain Public by Eric Wendelin http://eriwen.com/ (2008)
//                  Luke Smith http://lucassmith.name/ (2008)
//                  Loic Dachary <loic@dachary.org> (2008)
//                  Johan Euphrosine <proppy@aminche.com> (2008)
//                  Oyvind Sean Kinsey http://kinsey.no/blog (2010)
//                  Victor Homyakov <victor-homyakov@users.sourceforge.net> (2010)

/**
 * Main function giving a function stack trace with a forced or passed in Error
 *
 * @cfg {Error} e The error to create a stacktrace from (optional)
 * @cfg {Boolean} guess If we should try to resolve the names of anonymous functions
 * @return {Array} of Strings with functions, lines, files, and arguments where possible
 */
function printStackTrace(options) {
    options = options || {guess: true};
    var ex = options.e || null, guess = !!options.guess;
    var p = new printStackTrace.implementation(), result = p.run(ex);
    return (guess) ? p.guessAnonymousFunctions(result) : result;
}

if (typeof module !== "undefined" && module.exports) {
    module.exports = printStackTrace;
}

printStackTrace.implementation = function() {
};

printStackTrace.implementation.prototype = {
    /**
     * @param {Error} ex The error to create a stacktrace from (optional)
     * @param {String} mode Forced mode (optional, mostly for unit tests)
     */
    run: function(ex, mode) {
        ex = ex || this.createException();
        // examine exception properties w/o debugger
        //for (var prop in ex) {alert("Ex['" + prop + "']=" + ex[prop]);}
        mode = mode || this.mode(ex);
        if (mode === 'other') {
            return this.other(arguments.callee);
        } else {
            return this[mode](ex);
        }
    },

    createException: function() {
        try {
            this.undef();
        } catch (e) {
            return e;
        }
    },

    /**
     * Mode could differ for different exception, e.g.
     * exceptions in Chrome may or may not have arguments or stack.
     *
     * @return {String} mode of operation for the exception
     */
    mode: function(e) {
        if (e['arguments'] && e.stack) {
            return 'chrome';
        } else if (e.stack && e.sourceURL) {
            return 'safari';
        } else if (e.stack && e.number) {
            return 'ie';
        } else if (typeof e.message === 'string' && typeof window !== 'undefined' && window.opera) {
            // e.message.indexOf("Backtrace:") > -1 -> opera
            // !e.stacktrace -> opera
            if (!e.stacktrace) {
                return 'opera9'; // use e.message
            }
            // 'opera#sourceloc' in e -> opera9, opera10a
            if (e.message.indexOf('\n') > -1 && e.message.split('\n').length > e.stacktrace.split('\n').length) {
                return 'opera9'; // use e.message
            }
            // e.stacktrace && !e.stack -> opera10a
            if (!e.stack) {
                return 'opera10a'; // use e.stacktrace
            }
            // e.stacktrace && e.stack -> opera10b
            if (e.stacktrace.indexOf("called from line") < 0) {
                return 'opera10b'; // use e.stacktrace, format differs from 'opera10a'
            }
            // e.stacktrace && e.stack -> opera11
            return 'opera11'; // use e.stacktrace, format differs from 'opera10a', 'opera10b'
        } else if (e.stack && !e.fileName) {
            // Chrome 27 does not have e.arguments as earlier versions,
            // but still does not have e.fileName as Firefox
            return 'chrome';
        } else if (e.stack) {
            return 'firefox';
        }
        return 'other';
    },

    /**
     * Given a context, function name, and callback function, overwrite it so that it calls
     * printStackTrace() first with a callback and then runs the rest of the body.
     *
     * @param {Object} context of execution (e.g. window)
     * @param {String} functionName to instrument
     * @param {Function} callback function to call with a stack trace on invocation
     */
    instrumentFunction: function(context, functionName, callback) {
        context = context || window;
        var original = context[functionName];
        context[functionName] = function instrumented() {
            callback.call(this, printStackTrace().slice(4));
            return context[functionName]._instrumented.apply(this, arguments);
        };
        context[functionName]._instrumented = original;
    },

    /**
     * Given a context and function name of a function that has been
     * instrumented, revert the function to it's original (non-instrumented)
     * state.
     *
     * @param {Object} context of execution (e.g. window)
     * @param {String} functionName to de-instrument
     */
    deinstrumentFunction: function(context, functionName) {
        if (context[functionName].constructor === Function &&
                context[functionName]._instrumented &&
                context[functionName]._instrumented.constructor === Function) {
            context[functionName] = context[functionName]._instrumented;
        }
    },

    /**
     * Given an Error object, return a formatted Array based on Chrome's stack string.
     *
     * @param e - Error object to inspect
     * @return Array<String> of function calls, files and line numbers
     */
    chrome: function(e) {
        var stack = (e.stack + '\n').replace(/^\S[^\(]+?[\n$]/gm, '').
          replace(/^\s+(at eval )?at\s+/gm, '').
          replace(/^([^\(]+?)([\n$])/gm, '{anonymous}()@$1$2').
          replace(/^Object.<anonymous>\s*\(([^\)]+)\)/gm, '{anonymous}()@$1').split('\n');
        stack.pop();
        return stack;
    },

    /**
     * Given an Error object, return a formatted Array based on Safari's stack string.
     *
     * @param e - Error object to inspect
     * @return Array<String> of function calls, files and line numbers
     */
    safari: function(e) {
        return e.stack.replace(/\[native code\]\n/m, '')
            .replace(/^(?=\w+Error\:).*$\n/m, '')
            .replace(/^@/gm, '{anonymous}()@')
            .split('\n');
    },

    /**
     * Given an Error object, return a formatted Array based on IE's stack string.
     *
     * @param e - Error object to inspect
     * @return Array<String> of function calls, files and line numbers
     */
    ie: function(e) {
        var lineRE = /^.*at (\w+) \(([^\)]+)\)$/gm;
        return e.stack.replace(/at Anonymous function /gm, '{anonymous}()@')
            .replace(/^(?=\w+Error\:).*$\n/m, '')
            .replace(lineRE, '$1@$2')
            .split('\n');
    },

    /**
     * Given an Error object, return a formatted Array based on Firefox's stack string.
     *
     * @param e - Error object to inspect
     * @return Array<String> of function calls, files and line numbers
     */
    firefox: function(e) {
        return e.stack.replace(/(?:\n@:0)?\s+$/m, '').replace(/^[\(@]/gm, '{anonymous}()@').split('\n');
    },

    opera11: function(e) {
        var ANON = '{anonymous}', lineRE = /^.*line (\d+), column (\d+)(?: in (.+))? in (\S+):$/;
        var lines = e.stacktrace.split('\n'), result = [];

        for (var i = 0, len = lines.length; i < len; i += 2) {
            var match = lineRE.exec(lines[i]);
            if (match) {
                var location = match[4] + ':' + match[1] + ':' + match[2];
                var fnName = match[3] || "global code";
                fnName = fnName.replace(/<anonymous function: (\S+)>/, "$1").replace(/<anonymous function>/, ANON);
                result.push(fnName + '@' + location + ' -- ' + lines[i + 1].replace(/^\s+/, ''));
            }
        }

        return result;
    },

    opera10b: function(e) {
        // "<anonymous function: run>([arguments not available])@file://localhost/G:/js/stacktrace.js:27\n" +
        // "printStackTrace([arguments not available])@file://localhost/G:/js/stacktrace.js:18\n" +
        // "@file://localhost/G:/js/test/functional/testcase1.html:15"
        var lineRE = /^(.*)@(.+):(\d+)$/;
        var lines = e.stacktrace.split('\n'), result = [];

        for (var i = 0, len = lines.length; i < len; i++) {
            var match = lineRE.exec(lines[i]);
            if (match) {
                var fnName = match[1]? (match[1] + '()') : "global code";
                result.push(fnName + '@' + match[2] + ':' + match[3]);
            }
        }

        return result;
    },

    /**
     * Given an Error object, return a formatted Array based on Opera 10's stacktrace string.
     *
     * @param e - Error object to inspect
     * @return Array<String> of function calls, files and line numbers
     */
    opera10a: function(e) {
        // "  Line 27 of linked script file://localhost/G:/js/stacktrace.js\n"
        // "  Line 11 of inline#1 script in file://localhost/G:/js/test/functional/testcase1.html: In function foo\n"
        var ANON = '{anonymous}', lineRE = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
        var lines = e.stacktrace.split('\n'), result = [];

        for (var i = 0, len = lines.length; i < len; i += 2) {
            var match = lineRE.exec(lines[i]);
            if (match) {
                var fnName = match[3] || ANON;
                result.push(fnName + '()@' + match[2] + ':' + match[1] + ' -- ' + lines[i + 1].replace(/^\s+/, ''));
            }
        }

        return result;
    },

    // Opera 7.x-9.2x only!
    opera9: function(e) {
        // "  Line 43 of linked script file://localhost/G:/js/stacktrace.js\n"
        // "  Line 7 of inline#1 script in file://localhost/G:/js/test/functional/testcase1.html\n"
        var ANON = '{anonymous}', lineRE = /Line (\d+).*script (?:in )?(\S+)/i;
        var lines = e.message.split('\n'), result = [];

        for (var i = 2, len = lines.length; i < len; i += 2) {
            var match = lineRE.exec(lines[i]);
            if (match) {
                result.push(ANON + '()@' + match[2] + ':' + match[1] + ' -- ' + lines[i + 1].replace(/^\s+/, ''));
            }
        }

        return result;
    },

    // Safari 5-, IE 9-, and others
    other: function(curr) {
        var ANON = '{anonymous}', fnRE = /function\s*([\w\-$]+)?\s*\(/i, stack = [], fn, args, maxStackSize = 10;
        while (curr && curr['arguments'] && stack.length < maxStackSize) {
            fn = fnRE.test(curr.toString()) ? RegExp.$1 || ANON : ANON;
            args = Array.prototype.slice.call(curr['arguments'] || []);
            stack[stack.length] = fn + '(' + this.stringifyArguments(args) + ')';
            curr = curr.caller;
        }
        return stack;
    },

    /**
     * Given arguments array as a String, substituting type names for non-string types.
     *
     * @param {Arguments,Array} args
     * @return {String} stringified arguments
     */
    stringifyArguments: function(args) {
        var result = [];
        var slice = Array.prototype.slice;
        for (var i = 0; i < args.length; ++i) {
            var arg = args[i];
            if (arg === undefined) {
                result[i] = 'undefined';
            } else if (arg === null) {
                result[i] = 'null';
            } else if (arg.constructor) {
                if (arg.constructor === Array) {
                    if (arg.length < 3) {
                        result[i] = '[' + this.stringifyArguments(arg) + ']';
                    } else {
                        result[i] = '[' + this.stringifyArguments(slice.call(arg, 0, 1)) + '...' + this.stringifyArguments(slice.call(arg, -1)) + ']';
                    }
                } else if (arg.constructor === Object) {
                    result[i] = '#object';
                } else if (arg.constructor === Function) {
                    result[i] = '#function';
                } else if (arg.constructor === String) {
                    result[i] = '"' + arg + '"';
                } else if (arg.constructor === Number) {
                    result[i] = arg;
                }
            }
        }
        return result.join(',');
    },

    sourceCache: {},

    /**
     * @return the text from a given URL
     */
    ajax: function(url) {
        var req = this.createXMLHTTPObject();
        if (req) {
            try {
                req.open('GET', url, false);
                //req.overrideMimeType('text/plain');
                //req.overrideMimeType('text/javascript');
                req.send(null);
                //return req.status == 200 ? req.responseText : '';
                return req.responseText;
            } catch (e) {
            }
        }
        return '';
    },

    /**
     * Try XHR methods in order and store XHR factory.
     *
     * @return <Function> XHR function or equivalent
     */
    createXMLHTTPObject: function() {
        var xmlhttp, XMLHttpFactories = [
            function() {
                return new XMLHttpRequest();
            }, function() {
                return new ActiveXObject('Msxml2.XMLHTTP');
            }, function() {
                return new ActiveXObject('Msxml3.XMLHTTP');
            }, function() {
                return new ActiveXObject('Microsoft.XMLHTTP');
            }
        ];
        for (var i = 0; i < XMLHttpFactories.length; i++) {
            try {
                xmlhttp = XMLHttpFactories[i]();
                // Use memoization to cache the factory
                this.createXMLHTTPObject = XMLHttpFactories[i];
                return xmlhttp;
            } catch (e) {
            }
        }
    },

    /**
     * Given a URL, check if it is in the same domain (so we can get the source
     * via Ajax).
     *
     * @param url <String> source url
     * @return <Boolean> False if we need a cross-domain request
     */
    isSameDomain: function(url) {
        return typeof location !== "undefined" && url.indexOf(location.hostname) !== -1; // location may not be defined, e.g. when running from nodejs.
    },

    /**
     * Get source code from given URL if in the same domain.
     *
     * @param url <String> JS source URL
     * @return <Array> Array of source code lines
     */
    getSource: function(url) {
        // TODO reuse source from script tags?
        if (!(url in this.sourceCache)) {
            this.sourceCache[url] = this.ajax(url).split('\n');
        }
        return this.sourceCache[url];
    },

    guessAnonymousFunctions: function(stack) {
        for (var i = 0; i < stack.length; ++i) {
            var reStack = /\{anonymous\}\(.*\)@(.*)/,
                reRef = /^(.*?)(?::(\d+))(?::(\d+))?(?: -- .+)?$/,
                frame = stack[i], ref = reStack.exec(frame);

            if (ref) {
                var m = reRef.exec(ref[1]);
                if (m) { // If falsey, we did not get any file/line information
                    var file = m[1], lineno = m[2], charno = m[3] || 0;
                    if (file && this.isSameDomain(file) && lineno) {
                        var functionName = this.guessAnonymousFunction(file, lineno, charno);
                        stack[i] = frame.replace('{anonymous}', functionName);
                    }
                }
            }
        }
        return stack;
    },

    guessAnonymousFunction: function(url, lineNo, charNo) {
        var ret;
        try {
            ret = this.findFunctionName(this.getSource(url), lineNo);
        } catch (e) {
            ret = 'getSource failed with url: ' + url + ', exception: ' + e.toString();
        }
        return ret;
    },

    findFunctionName: function(source, lineNo) {
        // FIXME findFunctionName fails for compressed source
        // (more than one function on the same line)
        // function {name}({args}) m[1]=name m[2]=args
        var reFunctionDeclaration = /function\s+([^(]*?)\s*\(([^)]*)\)/;
        // {name} = function ({args}) TODO args capture
        // /['"]?([0-9A-Za-z_]+)['"]?\s*[:=]\s*function(?:[^(]*)/
        var reFunctionExpression = /['"]?([$_A-Za-z][$_A-Za-z0-9]*)['"]?\s*[:=]\s*function\b/;
        // {name} = eval()
        var reFunctionEvaluation = /['"]?([$_A-Za-z][$_A-Za-z0-9]*)['"]?\s*[:=]\s*(?:eval|new Function)\b/;
        // Walk backwards in the source lines until we find
        // the line which matches one of the patterns above
        var code = "", line, maxLines = Math.min(lineNo, 20), m, commentPos;
        for (var i = 0; i < maxLines; ++i) {
            // lineNo is 1-based, source[] is 0-based
            line = source[lineNo - i - 1];
            commentPos = line.indexOf('//');
            if (commentPos >= 0) {
                line = line.substr(0, commentPos);
            }
            // TODO check other types of comments? Commented code may lead to false positive
            if (line) {
                code = line + code;
                m = reFunctionExpression.exec(code);
                if (m && m[1]) {
                    return m[1];
                }
                m = reFunctionDeclaration.exec(code);
                if (m && m[1]) {
                    //return m[1] + "(" + (m[2] || "") + ")";
                    return m[1];
                }
                m = reFunctionEvaluation.exec(code);
                if (m && m[1]) {
                    return m[1];
                }
            }
        }
        return '(?)';
    }
};

define("stacktrace", function(){});

define('utils',[
    "jquery",
    "underscore",
    "crel",
    "xregexp",
    "FileSaver",
    "stacktrace",
], function($, _, crel, XRegExp) {

    var utils = {};

    // Return a parameter from the URL
    utils.getURLParameter = function(name) {
        var regex = new RegExp(name + "=(.+?)(&|$)");
        try {
            return decodeURIComponent(regex.exec(location.search)[1]);
        }
        catch(e) {
            return undefined;
        }
    };

    // Transform a selector into a jQuery object
    function jqElt(element) {
        if(_.isString(element)) {
            return $(element);
        }
        return element;
    }

    // For input control
    function inputError(element, event) {
        if(event !== undefined) {
            element.stop(true, true).addClass("error").delay(1000).switchClass("error");
            event.stopPropagation();
        }
    }

    // Return input value
    utils.getInputValue = function(element) {
        element = jqElt(element);
        return element.val();
    };

    // Set input value
    utils.setInputValue = function(element, value) {
        element = jqElt(element);
        element.val(value);
    };

    // Return input text value
    utils.getInputTextValue = function(element, event, validationRegex) {
        element = jqElt(element);
        var value = element.val();
        if(value === undefined) {
            inputError(element, event);
            return undefined;
        }
        // trim
        value = utils.trim(value);
        if((value.length === 0) || (validationRegex !== undefined && !value.match(validationRegex))) {
            inputError(element, event);
            return undefined;
        }
        return value;
    };

    // Return input integer value
    utils.getInputIntValue = function(element, event, min, max) {
        element = jqElt(element);
        var value = utils.getInputTextValue(element, event);
        if(value === undefined) {
            return undefined;
        }
        value = parseInt(value);
        if(isNaN(value) || (min !== undefined && value < min) || (max !== undefined && value > max)) {
            inputError(element, event);
            return undefined;
        }
        return value;
    };

    // Return input value and check that it's a valid RegExp
    utils.getInputRegExpValue = function(element, event) {
        element = jqElt(element);
        var value = utils.getInputTextValue(element, event);
        if(value === undefined) {
            return undefined;
        }
        try {
            new RegExp(value);
        }
        catch(e) {
            inputError(element, event);
            return undefined;
        }
        return value;
    };

    // Return input value and check that it's a valid JavaScript object
    utils.getInputJsValue = function(element, event) {
        element = jqElt(element);
        var value = utils.getInputTextValue(element, event);
        if(value === undefined) {
            return undefined;
        }
        try {
            eval("var test=" + value);
        }
        catch(e) {
            inputError(element, event);
            return undefined;
        }
        return value;
    };

    // Return checkbox boolean value
    utils.getInputChecked = function(element) {
        element = jqElt(element);
        return element.prop("checked");
    };

    // Set checkbox state
    utils.setInputChecked = function(element, checked) {
        element = jqElt(element);
        element.prop("checked", checked).change();
    };

    // Get radio button value
    utils.getInputRadio = function(name) {
        return $("input:radio[name=" + name + "]:checked").prop("value");
    };

    // Set radio button value
    utils.setInputRadio = function(name, value) {
        $("input:radio[name=" + name + "][value=" + value + "]").prop("checked", true).change();
    };

    // Reset input control in all modals
    utils.resetModalInputs = function() {
        $(".modal input[type=text]:not([disabled]), .modal input[type=password], .modal textarea").val("");
        $(".modal input[type=checkbox]").prop("checked", false).change();
    };

    // Basic trim function
    utils.trim = function(str) {
        return $.trim(str);
    };

    // Slug function
    utils.slugify = function(text) {
        return text.toLowerCase().replace(/\s/g, '-') // Replace spaces with -
        .replace(XRegExp('[^\\p{L}]', 'g'), '') // Remove
        // all
        // non-word
        // chars
        .replace(/\-\-+/g, '-') // Replace multiple - with single -
        .replace(/^-+/, '') // Trim - from start of text
        .replace(/-+$/, ''); // Trim - from end of text
    };

    // Check an URL
    utils.checkUrl = function(url, addSlash) {
        if(!url) {
            return url;
        }
        if(url.indexOf("http") !== 0) {
            url = "http://" + url;
        }
        if(addSlash && url.indexOf("/", url.length - 1) === -1) {
            url += "/";
        }
        return url;
    };

    // Create the modal element and add to the body
    utils.addModal = function(id, content) {
        var modal = crel('div', {
            class: 'modal ' + id
        });
        modal.innerHTML = content;
        document.body.appendChild(modal);
    };

    // Create a backdrop and add to the body
    utils.createBackdrop = function(toggle, target) {
        var result = crel('div', {
            'class': 'modal-backdrop in',
            'data-toggle': toggle,
            'data-target': target,
        });
        document.body.appendChild(result);
        return result;
    };

    // Create an centered popup window
    utils.popupWindow = function(url, title, width, height) {
        var left = (screen.width / 2) - (width / 2);
        var top = (screen.height / 2) - (height / 2);
        return window.open(url, title, [
            'toolbar=no, ',
            'location=no, ',
            'directories=no, ',
            'status=no, ',
            'menubar=no, ',
            'scrollbars=no, ',
            'resizable=no, ',
            'copyhistory=no, ',
            'width=' + width + ', ',
            'height=' + height + ', ',
            'top=' + top + ', ',
            'left=' + left
        ].join(""));
    };

    // Export data on disk
    utils.saveAs = function(content, filename) {
        if(saveAs !== undefined) {
            if(_.isString(content)) {
                content = new Blob([
                    content
                ], {
                    type: "text/plain;charset=utf-8"
                });
            }
            saveAs(content, filename);
        }
        else {
            var uriContent = "data:application/octet-stream;base64," + utils.encodeBase64(content);
            window.open(uriContent, 'file');
        }
    };

    // Generates a random string
    utils.randomString = function() {
        return _.random(4294967296).toString(36);
    };

    // Time shared by others modules
    utils.updateCurrentTime = function() {
        utils.currentTime = new Date().getTime();
    };
    utils.updateCurrentTime();

    // Serialize sync/publish attributes and store it in the localStorage
    utils.storeAttributes = function(attributes) {
        var storeIndex = attributes.syncIndex || attributes.publishIndex;
        // Don't store sync/publish index
        var storedAttributes = _.omit(attributes, "syncIndex", "publishIndex", "provider");
        // Store providerId instead of provider
        storedAttributes.provider = attributes.provider.providerId;
        localStorage[storeIndex] = JSON.stringify(storedAttributes);
    };

    // Retrieve/parse an index array from localStorage
    utils.retrieveIndexArray = function(storeIndex) {
        try {
            return _.compact(localStorage[storeIndex].split(";"));
        }
        catch(e) {
            localStorage[storeIndex] = ";";
            return [];
        }
    };

    // Append an index to an array in localStorage
    utils.appendIndexToArray = function(storeIndex, index) {
        localStorage[storeIndex] += index + ";";
    };

    // Remove an index from an array in localStorage
    utils.removeIndexFromArray = function(storeIndex, index) {
        localStorage[storeIndex] = localStorage[storeIndex].replace(";" + index + ";", ";");
    };

    // Retrieve/parse an object from localStorage. Returns undefined if error.
    utils.retrieveIgnoreError = function(storeIndex) {
        try {
            return JSON.parse(localStorage[storeIndex]);
        }
        catch(e) {
            return undefined;
        }
    };

    var eventList = [];
    utils.logValue = function(value) {
        eventList.unshift(value);
        if(eventList.length > 5) {
            eventList.pop();
        }
    };
    utils.logStackTrace = function() {
        eventList.unshift(printStackTrace());
        if(eventList.length > 5) {
            eventList.pop();
        }
    };
    utils.formatEventList = function() {
        var result = [];
        _.each(eventList, function(event) {
            result.push("\n");
            if(_.isString(event)) {
                result.push(event);
            }
            else if(_.isArray(event)) {
                result.push(event[5] || "");
                result.push(event[6] || "");
            }
        });
        return result.join("");
    };

    // Base64 conversion
    utils.encodeBase64 = function(str) {
        if(str.length === 0) {
            return "";
        }

        // UTF-8 to byte array
        var bytes = [], offset = 0, length, char;

        str = encodeURI(str);
        length = str.length;

        while (offset < length) {
            char = str[offset];
            offset += 1;

            if('%' !== char) {
                bytes.push(char.charCodeAt(0));
            }
            else {
                char = str[offset] + str[offset + 1];
                bytes.push(parseInt(char, 16));
                offset += 2;
            }
        }

        // byte array to base64
        var padchar = '=';
        var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

        var i, b10;
        var x = [];

        var imax = bytes.length - bytes.length % 3;

        for (i = 0; i < imax; i += 3) {
            b10 = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];
            x.push(alpha.charAt(b10 >> 18));
            x.push(alpha.charAt((b10 >> 12) & 0x3F));
            x.push(alpha.charAt((b10 >> 6) & 0x3f));
            x.push(alpha.charAt(b10 & 0x3f));
        }
        switch (bytes.length - imax) {
        case 1:
            b10 = bytes[i] << 16;
            x.push(alpha.charAt(b10 >> 18) + alpha.charAt((b10 >> 12) & 0x3F) + padchar + padchar);
            break;
        case 2:
            b10 = (bytes[i] << 16) | (bytes[i + 1] << 8);
            x.push(alpha.charAt(b10 >> 18) + alpha.charAt((b10 >> 12) & 0x3F) + alpha.charAt((b10 >> 6) & 0x3f) + padchar);
            break;
        }
        return x.join('');
    };

    // CRC32 algorithm
    var mHash = [
        0,
        1996959894,
        3993919788,
        2567524794,
        124634137,
        1886057615,
        3915621685,
        2657392035,
        249268274,
        2044508324,
        3772115230,
        2547177864,
        162941995,
        2125561021,
        3887607047,
        2428444049,
        498536548,
        1789927666,
        4089016648,
        2227061214,
        450548861,
        1843258603,
        4107580753,
        2211677639,
        325883990,
        1684777152,
        4251122042,
        2321926636,
        335633487,
        1661365465,
        4195302755,
        2366115317,
        997073096,
        1281953886,
        3579855332,
        2724688242,
        1006888145,
        1258607687,
        3524101629,
        2768942443,
        901097722,
        1119000684,
        3686517206,
        2898065728,
        853044451,
        1172266101,
        3705015759,
        2882616665,
        651767980,
        1373503546,
        3369554304,
        3218104598,
        565507253,
        1454621731,
        3485111705,
        3099436303,
        671266974,
        1594198024,
        3322730930,
        2970347812,
        795835527,
        1483230225,
        3244367275,
        3060149565,
        1994146192,
        31158534,
        2563907772,
        4023717930,
        1907459465,
        112637215,
        2680153253,
        3904427059,
        2013776290,
        251722036,
        2517215374,
        3775830040,
        2137656763,
        141376813,
        2439277719,
        3865271297,
        1802195444,
        476864866,
        2238001368,
        4066508878,
        1812370925,
        453092731,
        2181625025,
        4111451223,
        1706088902,
        314042704,
        2344532202,
        4240017532,
        1658658271,
        366619977,
        2362670323,
        4224994405,
        1303535960,
        984961486,
        2747007092,
        3569037538,
        1256170817,
        1037604311,
        2765210733,
        3554079995,
        1131014506,
        879679996,
        2909243462,
        3663771856,
        1141124467,
        855842277,
        2852801631,
        3708648649,
        1342533948,
        654459306,
        3188396048,
        3373015174,
        1466479909,
        544179635,
        3110523913,
        3462522015,
        1591671054,
        702138776,
        2966460450,
        3352799412,
        1504918807,
        783551873,
        3082640443,
        3233442989,
        3988292384,
        2596254646,
        62317068,
        1957810842,
        3939845945,
        2647816111,
        81470997,
        1943803523,
        3814918930,
        2489596804,
        225274430,
        2053790376,
        3826175755,
        2466906013,
        167816743,
        2097651377,
        4027552580,
        2265490386,
        503444072,
        1762050814,
        4150417245,
        2154129355,
        426522225,
        1852507879,
        4275313526,
        2312317920,
        282753626,
        1742555852,
        4189708143,
        2394877945,
        397917763,
        1622183637,
        3604390888,
        2714866558,
        953729732,
        1340076626,
        3518719985,
        2797360999,
        1068828381,
        1219638859,
        3624741850,
        2936675148,
        906185462,
        1090812512,
        3747672003,
        2825379669,
        829329135,
        1181335161,
        3412177804,
        3160834842,
        628085408,
        1382605366,
        3423369109,
        3138078467,
        570562233,
        1426400815,
        3317316542,
        2998733608,
        733239954,
        1555261956,
        3268935591,
        3050360625,
        752459403,
        1541320221,
        2607071920,
        3965973030,
        1969922972,
        40735498,
        2617837225,
        3943577151,
        1913087877,
        83908371,
        2512341634,
        3803740692,
        2075208622,
        213261112,
        2463272603,
        3855990285,
        2094854071,
        198958881,
        2262029012,
        4057260610,
        1759359992,
        534414190,
        2176718541,
        4139329115,
        1873836001,
        414664567,
        2282248934,
        4279200368,
        1711684554,
        285281116,
        2405801727,
        4167216745,
        1634467795,
        376229701,
        2685067896,
        3608007406,
        1308918612,
        956543938,
        2808555105,
        3495958263,
        1231636301,
        1047427035,
        2932959818,
        3654703836,
        1088359270,
        936918000,
        2847714899,
        3736837829,
        1202900863,
        817233897,
        3183342108,
        3401237130,
        1404277552,
        615818150,
        3134207493,
        3453421203,
        1423857449,
        601450431,
        3009837614,
        3294710456,
        1567103746,
        711928724,
        3020668471,
        3272380065,
        1510334235,
        755167117
    ];
    utils.crc32 = function(str) {
        var n = 0, crc = -1;
        for ( var i = 0; i < str.length; i++) {
            n = (crc ^ str.charCodeAt(i)) & 0xFF;
            crc = (crc >>> 8) ^ mHash[n];
        }
        crc = crc ^ (-1);
        if(crc < 0) {
            crc = 0xFFFFFFFF + crc + 1;
        }
        return crc.toString(16);
    };

    return utils;
});

var VERSION = "2.1.7";

var MAIN_URL = "http://benweet.github.io/stackedit/";
var GOOGLE_ANALYTICS_ACCOUNT_ID = "UA-39556145-1";
var GOOGLE_API_KEY = "AIzaSyAeCU8CGcSkn0z9js6iocHuPBX4f_mMWkw";
var GOOGLE_DRIVE_APP_ID = "241271498917";
var DROPBOX_APP_KEY = "lq6mwopab8wskas";
var DROPBOX_APP_SECRET = "851fgnucpezy84t";
var BITLY_ACCESS_TOKEN = "317e033bfd48cf31155a68a536b1860013b09c4c";
var DEFAULT_FILE_TITLE = "Title";
var DEFAULT_FOLDER_NAME = "New folder";
var GDRIVE_DEFAULT_FILE_TITLE = "New Markdown document";
var EDITOR_DEFAULT_PADDING = 15;
var CHECK_ONLINE_PERIOD = 120000;
var AJAX_TIMEOUT = 30000;
var ASYNC_TASK_DEFAULT_TIMEOUT = 60000;
var ASYNC_TASK_LONG_TIMEOUT = 180000;
var SYNC_PERIOD = 180000;
var USER_IDLE_THRESHOLD = 300000;
var IMPORT_FILE_MAX_CONTENT_SIZE = 100000;
var IMPORT_IMG_MAX_CONTENT_SIZE = 10000000;
var TEMPORARY_FILE_INDEX = "file.tempIndex";
var WELCOME_DOCUMENT_TITLE = "Welcome document";
var DOWNLOAD_PROXY_URL = "http://stackedit-download-proxy.herokuapp.com/";
var PICASA_PROXY_URL = "http://stackedit-picasa-proxy.herokuapp.com/";
var WORDPRESS_CLIENT_ID = '3185';
var WORDPRESS_PROXY_URL = "http://stackedit-wordpress-proxy.herokuapp.com/";
var SSH_PROXY_URL = "http://stackedit-ssh-proxy.herokuapp.com/";
var HTMLTOPDF_URL = "http://benweet.insomnia247.nl/stackedit-htmltopdf/";

// Use by Google's client.js
var delayedFunction = undefined;
function runDelayedFunction() {
    if(delayedFunction !== undefined) {
        delayedFunction();
    }
}

// Site dependent
var BASE_URL = "http://localhost/stackedit/";
var GOOGLE_CLIENT_ID = '241271498917-lev37kef013q85avc91am1gccg5g8lrb.apps.googleusercontent.com';
var GITHUB_CLIENT_ID = 'e47fef6055344579799d';
var GATEKEEPER_URL = "http://stackedit-gatekeeper-localhost.herokuapp.com/";
var TUMBLR_PROXY_URL = "http://stackedit-tumblr-proxy-local.herokuapp.com/";

if(location.hostname.indexOf("benweet.github.io") === 0) {
    BASE_URL = MAIN_URL;
    GOOGLE_CLIENT_ID = '241271498917-jpto9lls9fqnem1e4h6ppds9uob8rpvu.apps.googleusercontent.com';
    GITHUB_CLIENT_ID = 'fa0d09514da8377ee32e';
    GATEKEEPER_URL = "http://stackedit-gatekeeper.herokuapp.com/";
    TUMBLR_PROXY_URL = "http://stackedit-tumblr-proxy.herokuapp.com/";
}

if(location.hostname.indexOf("benweet.insomnia247.nl") === 0) {
    BASE_URL = "http://benweet.insomnia247.nl/stackedit/";
    GOOGLE_CLIENT_ID = '241271498917-52hae7a08hv7ltenv7km8h7lghno9sk3.apps.googleusercontent.com';
    GITHUB_CLIENT_ID = 'd2943d6074b2d9c4a830';
    GATEKEEPER_URL = "http://stackedit-gatekeeper-insomnia.herokuapp.com/";
    TUMBLR_PROXY_URL = "http://stackedit-tumblr-proxy-beta.herokuapp.com/";
}

var THEME_LIST = {
    "default": "Default",
    "blue-gray": "Blue-Gray",
    "night": "Night",
    "school": "School",
};

define("config", function(){});

// Setup an empty localStorage or upgrade an existing one
define('storage',[
    "underscore",
    "utils"
], function(_, utils) {

    var fileIndexList = utils.retrieveIndexArray("file.list");

    // localStorage versioning
    var version = localStorage["version"];

    // Upgrade from v0 to v1
    if(version === undefined) {

        // Not used anymore
        localStorage.removeItem("sync.queue");
        localStorage.removeItem("sync.current");
        localStorage.removeItem("file.counter");

        _.each(fileIndexList, function(fileIndex) {
            localStorage[fileIndex + ".publish"] = ";";
            var syncIndexList = utils.retrieveIndexArray(fileIndex + ".sync");
            _.each(syncIndexList, function(syncIndex) {
                localStorage[syncIndex + ".contentCRC"] = "0";
                // We store title CRC only for Google Drive synchronization
                if(localStorage[syncIndex + ".etag"] !== undefined) {
                    localStorage[syncIndex + ".titleCRC"] = "0";
                }
            });
        });
        version = "v1";
    }

    // Upgrade from v1 to v2
    if(version == "v1") {
        var gdriveLastChangeId = localStorage["sync.gdrive.lastChangeId"];
        if(gdriveLastChangeId) {
            localStorage["gdrive.lastChangeId"] = gdriveLastChangeId;
            localStorage.removeItem("sync.gdrive.lastChangeId");
        }
        var dropboxLastChangeId = localStorage["sync.dropbox.lastChangeId"];
        if(dropboxLastChangeId) {
            localStorage["dropbox.lastChangeId"] = dropboxLastChangeId;
            localStorage.removeItem("sync.dropbox.lastChangeId");
        }

        var PROVIDER_GDRIVE = "gdrive";
        var PROVIDER_DROPBOX = "dropbox";
        var SYNC_PROVIDER_GDRIVE = "sync." + PROVIDER_GDRIVE + ".";
        var SYNC_PROVIDER_DROPBOX = "sync." + PROVIDER_DROPBOX + ".";
        _.each(fileIndexList, function(fileIndex) {
            var syncIndexList = utils.retrieveIndexArray(fileIndex + ".sync");
            _.each(syncIndexList, function(syncIndex) {
                var syncAttributes = {};
                if(syncIndex.indexOf(SYNC_PROVIDER_GDRIVE) === 0) {
                    syncAttributes.provider = PROVIDER_GDRIVE;
                    syncAttributes.id = syncIndex.substring(SYNC_PROVIDER_GDRIVE.length);
                    syncAttributes.etag = localStorage[syncIndex + ".etag"];
                    syncAttributes.contentCRC = localStorage[syncIndex + ".contentCRC"];
                    syncAttributes.titleCRC = localStorage[syncIndex + ".titleCRC"];
                }
                else if(syncIndex.indexOf(SYNC_PROVIDER_DROPBOX) === 0) {
                    syncAttributes.provider = PROVIDER_DROPBOX;
                    syncAttributes.path = decodeURIComponent(syncIndex.substring(SYNC_PROVIDER_DROPBOX.length));
                    syncAttributes.version = localStorage[syncIndex + ".version"];
                    syncAttributes.contentCRC = localStorage[syncIndex + ".contentCRC"];
                }
                localStorage[syncIndex] = JSON.stringify(syncAttributes);
                localStorage.removeItem(syncIndex + ".etag");
                localStorage.removeItem(syncIndex + ".version");
                localStorage.removeItem(syncIndex + ".contentCRC");
                localStorage.removeItem(syncIndex + ".titleCRC");
            });
        });
        version = "v2";
    }

    // Upgrade from v2 to v3
    if(version == "v2") {
        _.each(fileIndexList, function(fileIndex) {
            if(!_.has(localStorage, fileIndex + ".sync")) {
                localStorage.removeItem(fileIndex + ".title");
                localStorage.removeItem(fileIndex + ".publish");
                localStorage.removeItem(fileIndex + ".content");
                utils.removeIndexFromArray("file.list", fileIndex);
            }
        });
        version = "v3";
    }

    // Upgrade from v3 to v4
    if(version == "v3") {
        var currentFileIndex = localStorage["file.current"];
        if(currentFileIndex !== undefined && localStorage["file.list"].indexOf(";" + currentFileIndex + ";") === -1) {
            localStorage.removeItem("file.current");
        }
        version = "v4";
    }

    // Upgrade from v4 to v5
    if(version == "v4") {
        // Recreate GitHub token
        localStorage.removeItem("githubToken");
        version = "v5";
    }

    // Upgrade from v5 to v6
    if(version == "v5") {
        _.each(fileIndexList, function(fileIndex) {
            var publishIndexList = utils.retrieveIndexArray(fileIndex + ".publish");
            _.each(publishIndexList, function(publishIndex) {
                var publishAttributes = JSON.parse(localStorage[publishIndex]);
                if(publishAttributes.provider == "gdrive") {
                    // Change fileId to Id to be consistent with syncAttributes
                    publishAttributes.id = publishAttributes.fileId;
                    publishAttributes.fileId = undefined;
                    localStorage[publishIndex] = JSON.stringify(publishAttributes);
                }
            });
        });
        version = "v6";
    }

    // Upgrade from v6 to v7
    if(version == "v6") {
        var currentFileIndex = localStorage["file.current"];
        if(currentFileIndex !== undefined) {
            localStorage[currentFileIndex + ".selectTime"] = new Date().getTime();
            localStorage.removeItem("file.current");
        }
        version = "v7";
    }

    // Upgrade from v7 to v8
    if(version == "v7") {
        _.each(_.keys(localStorage), function(key) {
            var matchResult = key.match(/(file\.\S+\.)\S+/);
            if(matchResult) {
                if(!_.has(localStorage, matchResult[1] + 'title')) {
                    localStorage.removeItem(key);
                }
            }
        });
        version = "v8";
    }

    // Upgrade from v8 to v9
    if(version == "v8") {
        _.each(_.keys(localStorage), function(key) {
            var matchResult = key.match(/file\.\S+\.(editorEnd|editorStart)/);
            if(matchResult) {
                localStorage.removeItem(key);
            }
        });
        version = "v9";
    }

    // Upgrade from v9 to v10
    if(version == "v9") {
        if(_.has(localStorage, 'settings')) {
            var settings = JSON.parse(localStorage.settings);
            delete settings.editorFontFamily;
            delete settings.editorFontSize;
            settings.template && (settings.template = settings.template.replace('http://benweet.github.io/stackedit/css/main-min.css', 'http://benweet.github.io/stackedit/res-min/themes/default.css'));
            localStorage.settings = JSON.stringify(settings);
        }
        version = "v10";
    }

    // Upgrade from v10 to v11
    if(version == "v10") {
        if(_.has(localStorage, 'settings')) {
            var settings = JSON.parse(localStorage.settings);
            settings.extensionSettings && settings.extensionSettings.markdownExtra && settings.extensionSettings.markdownExtra.extensions && settings.extensionSettings.markdownExtra.extensions.push('smartypants');
            localStorage.settings = JSON.stringify(settings);
        }
        version = "v11";
    }

    localStorage["version"] = version;
});
define('settings',[
    "underscore",
    "config",
    "storage"
], function(_) {

    var settings = {
        layoutOrientation: "horizontal",
        lazyRendering: true,
        editorFontFamily: 'Menlo, Consolas, "Courier New", Courier, monospace',
        editorFontSize: 12,
        maxWidth: 960,
        defaultContent: "\n\n\n> Written with [StackEdit](" + MAIN_URL + ").",
        commitMsg: "Published with " + MAIN_URL,
        gdriveFullAccess: true,
        template: [
                   '<!DOCTYPE html>\n',
                   '<html>\n',
                   '<head>\n',
                   '<meta charset="utf-8">\n',
                   '<title><%= documentTitle %></title>\n',
                   '<link rel="stylesheet" href="',
                   MAIN_URL,
                   'res-min/themes/default.css" />\n',
                   '<script type="text/javascript" src="',
                   MAIN_URL,
                   'lib/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>\n',
                   '</head>\n',
                   '<body><div class="container"><%= documentHTML %></div></body>\n',
                   '</html>'
                   ].join(""),
        pdfTemplate: [
                   '<!DOCTYPE html>\n',
                   '<html>\n',
                   '<head>\n',
                   '<meta charset="utf-8">\n',
                   '<title><%= documentTitle %></title>\n',
                   '<link rel="stylesheet" href="',
                   MAIN_URL,
                   'res-min/themes/default.css" />\n',
                   '<script type="text/x-mathjax-config">\n',
                   'MathJax.Hub.Config({ messageStyle: "none" });\n',
	               '</script>\n',
                   '<script type="text/javascript" src="',
                   MAIN_URL,
                   'lib/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>\n',
                   '</head>\n',
                   '<body class="pdf"><%= documentHTML %></body>\n',
                   '</html>'
        ].join(""),
        sshProxy: SSH_PROXY_URL,
        shortcuts: {},
        extensionSettings: {}
    };

    try {
        _.extend(settings, JSON.parse(localStorage.settings));
    }
    catch(e) {
        // Ignore parsing error
    }

    return settings;
});
define('classes/Extension',[],function() {
    
    function Extension(extensionId, extensionName, isOptional, disableInViewer, disableInLight) {
        this.extensionId = extensionId;
        this.extensionName = extensionName;
        this.isOptional = isOptional;
        this.disableInViewer = disableInViewer;
        this.disableInLight = disableInLight;
    }
    
    return Extension;
});
/**
 * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/text for details
 */
/*jslint regexp: true */
/*global require, XMLHttpRequest, ActiveXObject,
  define, window, process, Packages,
  java, location, Components, FileUtils */

define('text',['module'], function (module) {
    

    var text, fs, Cc, Ci, xpcIsWindows,
        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],
        xmlRegExp = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
        bodyRegExp = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
        hasLocation = typeof location !== 'undefined' && location.href,
        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\:/, ''),
        defaultHostName = hasLocation && location.hostname,
        defaultPort = hasLocation && (location.port || undefined),
        buildMap = {},
        masterConfig = (module.config && module.config()) || {};

    text = {
        version: '2.0.10',

        strip: function (content) {
            //Strips <?xml ...?> declarations so that external SVG and XML
            //documents can be added to a document without worry. Also, if the string
            //is an HTML document, only the part inside the body tag is returned.
            if (content) {
                content = content.replace(xmlRegExp, "");
                var matches = content.match(bodyRegExp);
                if (matches) {
                    content = matches[1];
                }
            } else {
                content = "";
            }
            return content;
        },

        jsEscape: function (content) {
            return content.replace(/(['\\])/g, '\\$1')
                .replace(/[\f]/g, "\\f")
                .replace(/[\b]/g, "\\b")
                .replace(/[\n]/g, "\\n")
                .replace(/[\t]/g, "\\t")
                .replace(/[\r]/g, "\\r")
                .replace(/[\u2028]/g, "\\u2028")
                .replace(/[\u2029]/g, "\\u2029");
        },

        createXhr: masterConfig.createXhr || function () {
            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.
            var xhr, i, progId;
            if (typeof XMLHttpRequest !== "undefined") {
                return new XMLHttpRequest();
            } else if (typeof ActiveXObject !== "undefined") {
                for (i = 0; i < 3; i += 1) {
                    progId = progIds[i];
                    try {
                        xhr = new ActiveXObject(progId);
                    } catch (e) {}

                    if (xhr) {
                        progIds = [progId];  // so faster next time
                        break;
                    }
                }
            }

            return xhr;
        },

        /**
         * Parses a resource name into its component parts. Resource names
         * look like: module/name.ext!strip, where the !strip part is
         * optional.
         * @param {String} name the resource name
         * @returns {Object} with properties "moduleName", "ext" and "strip"
         * where strip is a boolean.
         */
        parseName: function (name) {
            var modName, ext, temp,
                strip = false,
                index = name.indexOf("."),
                isRelative = name.indexOf('./') === 0 ||
                             name.indexOf('../') === 0;

            if (index !== -1 && (!isRelative || index > 1)) {
                modName = name.substring(0, index);
                ext = name.substring(index + 1, name.length);
            } else {
                modName = name;
            }

            temp = ext || modName;
            index = temp.indexOf("!");
            if (index !== -1) {
                //Pull off the strip arg.
                strip = temp.substring(index + 1) === "strip";
                temp = temp.substring(0, index);
                if (ext) {
                    ext = temp;
                } else {
                    modName = temp;
                }
            }

            return {
                moduleName: modName,
                ext: ext,
                strip: strip
            };
        },

        xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,

        /**
         * Is an URL on another domain. Only works for browser use, returns
         * false in non-browser environments. Only used to know if an
         * optimized .js version of a text resource should be loaded
         * instead.
         * @param {String} url
         * @returns Boolean
         */
        useXhr: function (url, protocol, hostname, port) {
            var uProtocol, uHostName, uPort,
                match = text.xdRegExp.exec(url);
            if (!match) {
                return true;
            }
            uProtocol = match[2];
            uHostName = match[3];

            uHostName = uHostName.split(':');
            uPort = uHostName[1];
            uHostName = uHostName[0];

            return (!uProtocol || uProtocol === protocol) &&
                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&
                   ((!uPort && !uHostName) || uPort === port);
        },

        finishLoad: function (name, strip, content, onLoad) {
            content = strip ? text.strip(content) : content;
            if (masterConfig.isBuild) {
                buildMap[name] = content;
            }
            onLoad(content);
        },

        load: function (name, req, onLoad, config) {
            //Name has format: some.module.filext!strip
            //The strip part is optional.
            //if strip is present, then that means only get the string contents
            //inside a body tag in an HTML string. For XML/SVG content it means
            //removing the <?xml ...?> declarations so the content can be inserted
            //into the current doc without problems.

            // Do not bother with the work if a build and text will
            // not be inlined.
            if (config.isBuild && !config.inlineText) {
                onLoad();
                return;
            }

            masterConfig.isBuild = config.isBuild;

            var parsed = text.parseName(name),
                nonStripName = parsed.moduleName +
                    (parsed.ext ? '.' + parsed.ext : ''),
                url = req.toUrl(nonStripName),
                useXhr = (masterConfig.useXhr) ||
                         text.useXhr;

            // Do not load if it is an empty: url
            if (url.indexOf('empty:') === 0) {
                onLoad();
                return;
            }

            //Load the text. Use XHR if possible and in a browser.
            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {
                text.get(url, function (content) {
                    text.finishLoad(name, parsed.strip, content, onLoad);
                }, function (err) {
                    if (onLoad.error) {
                        onLoad.error(err);
                    }
                });
            } else {
                //Need to fetch the resource across domains. Assume
                //the resource has been optimized into a JS module. Fetch
                //by the module name + extension, but do not include the
                //!strip part to avoid file system issues.
                req([nonStripName], function (content) {
                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,
                                    parsed.strip, content, onLoad);
                });
            }
        },

        write: function (pluginName, moduleName, write, config) {
            if (buildMap.hasOwnProperty(moduleName)) {
                var content = text.jsEscape(buildMap[moduleName]);
                write.asModule(pluginName + "!" + moduleName,
                               "define(function () { return '" +
                                   content +
                               "';});\n");
            }
        },

        writeFile: function (pluginName, moduleName, req, write, config) {
            var parsed = text.parseName(moduleName),
                extPart = parsed.ext ? '.' + parsed.ext : '',
                nonStripName = parsed.moduleName + extPart,
                //Use a '.js' file name so that it indicates it is a
                //script that can be loaded across domains.
                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';

            //Leverage own load() method to load plugin value, but only
            //write out values that do not have the strip argument,
            //to avoid any potential issues with ! in file names.
            text.load(nonStripName, req, function (value) {
                //Use own write() method to construct full module value.
                //But need to create shell that translates writeFile's
                //write() to the right interface.
                var textWrite = function (contents) {
                    return write(fileName, contents);
                };
                textWrite.asModule = function (moduleName, contents) {
                    return write.asModule(moduleName, fileName, contents);
                };

                text.write(pluginName, nonStripName, textWrite, config);
            }, config);
        }
    };

    if (masterConfig.env === 'node' || (!masterConfig.env &&
            typeof process !== "undefined" &&
            process.versions &&
            !!process.versions.node &&
            !process.versions['node-webkit'])) {
        //Using special require.nodeRequire, something added by r.js.
        fs = require.nodeRequire('fs');

        text.get = function (url, callback, errback) {
            try {
                var file = fs.readFileSync(url, 'utf8');
                //Remove BOM (Byte Mark Order) from utf8 files if it is there.
                if (file.indexOf('\uFEFF') === 0) {
                    file = file.substring(1);
                }
                callback(file);
            } catch (e) {
                errback(e);
            }
        };
    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&
            text.createXhr())) {
        text.get = function (url, callback, errback, headers) {
            var xhr = text.createXhr(), header;
            xhr.open('GET', url, true);

            //Allow plugins direct access to xhr headers
            if (headers) {
                for (header in headers) {
                    if (headers.hasOwnProperty(header)) {
                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);
                    }
                }
            }

            //Allow overrides specified in config
            if (masterConfig.onXhr) {
                masterConfig.onXhr(xhr, url);
            }

            xhr.onreadystatechange = function (evt) {
                var status, err;
                //Do not explicitly handle errors, those should be
                //visible via console output in the browser.
                if (xhr.readyState === 4) {
                    status = xhr.status;
                    if (status > 399 && status < 600) {
                        //An http 4xx or 5xx error. Signal an error.
                        err = new Error(url + ' HTTP status: ' + status);
                        err.xhr = xhr;
                        errback(err);
                    } else {
                        callback(xhr.responseText);
                    }

                    if (masterConfig.onXhrComplete) {
                        masterConfig.onXhrComplete(xhr, url);
                    }
                }
            };
            xhr.send(null);
        };
    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&
            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {
        //Why Java, why is this so awkward?
        text.get = function (url, callback) {
            var stringBuffer, line,
                encoding = "utf-8",
                file = new java.io.File(url),
                lineSeparator = java.lang.System.getProperty("line.separator"),
                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),
                content = '';
            try {
                stringBuffer = new java.lang.StringBuffer();
                line = input.readLine();

                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324
                // http://www.unicode.org/faq/utf_bom.html

                // Note that when we use utf-8, the BOM should appear as "EF BB BF", but it doesn't due to this bug in the JDK:
                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058
                if (line && line.length() && line.charAt(0) === 0xfeff) {
                    // Eat the BOM, since we've already found the encoding on this file,
                    // and we plan to concatenating this buffer with others; the BOM should
                    // only appear at the top of a file.
                    line = line.substring(1);
                }

                if (line !== null) {
                    stringBuffer.append(line);
                }

                while ((line = input.readLine()) !== null) {
                    stringBuffer.append(lineSeparator);
                    stringBuffer.append(line);
                }
                //Make sure we return a JavaScript string and not a Java string.
                content = String(stringBuffer.toString()); //String
            } finally {
                input.close();
            }
            callback(content);
        };
    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&
            typeof Components !== 'undefined' && Components.classes &&
            Components.interfaces)) {
        //Avert your gaze!
        Cc = Components.classes,
        Ci = Components.interfaces;
        Components.utils['import']('resource://gre/modules/FileUtils.jsm');
        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);

        text.get = function (url, callback) {
            var inStream, convertStream, fileObj,
                readData = {};

            if (xpcIsWindows) {
                url = url.replace(/\//g, '\\');
            }

            fileObj = new FileUtils.File(url);

            //XPCOM, you so crazy
            try {
                inStream = Cc['@mozilla.org/network/file-input-stream;1']
                           .createInstance(Ci.nsIFileInputStream);
                inStream.init(fileObj, 1, 0, false);

                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']
                                .createInstance(Ci.nsIConverterInputStream);
                convertStream.init(inStream, "utf-8", inStream.available(),
                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);

                convertStream.readString(inStream.available(), readData);
                convertStream.close();
                inStream.close();
                callback(readData.value);
            } catch (e) {
                throw new Error((fileObj && fileObj.path || '') + ': ' + e);
            }
        };
    }
    return text;
});

define('text!html/settingsExtensionsAccordion.html',[],function () { return '<div class="panel">\n\t<div class="accordion-heading">\n\t\t<div class="checkbox pull-right">\n\t\t\t<label> <input id="input-enable-extension-<%= extensionId %>"\n\t\t\t\ttype="checkbox"<% if(!isOptional) print(\'disabled\') %>>\n\t\t\t\tenabled\n\t\t\t</label>\n\t\t</div>\n\t\t<span data-toggle="collapse" data-parent=".accordion-extensions"\n\t\t\tclass="accordion-toggle" href="#accordion-extensions-collapse-<%= extensionId %>">\n\t\t\t<%= extensionName %> </span>\n\t</div>\n\t<div id="accordion-extensions-collapse-<%= extensionId %>" class="collapse">\n\t\t<div class="accordion-inner clearfix"><%= settingsBlock %></div>\n\t</div>\n</div>\n';});

/*
Copyright (c) 2010 Jeremy Faivre

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is furnished
to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
(function(){
/**
 * Exception class thrown when an error occurs during parsing.
 *
 * @author Fabien Potencier <fabien@symfony.com>
 *
 * @api
 */
 
/**
 * Constructor.
 *
 * @param string	message	The error message
 * @param integer   parsedLine The line where the error occurred
 * @param integer   snippet	The snippet of code near the problem
 * @param string	parsedFile The file name where the error occurred
 */

var YamlParseException = function(message, parsedLine, snippet, parsedFile){

		this.rawMessage = message;
		this.parsedLine = (parsedLine !== undefined) ? parsedLine : -1;
		this.snippet = (snippet !== undefined) ? snippet : null;
		this.parsedFile = (parsedFile !== undefined) ? parsedFile : null;

		this.updateRepr();
		
		this.message = message;

};
YamlParseException.prototype =
{

	name: 'YamlParseException',
	message: null,
	
	parsedFile: null,
	parsedLine: -1,
	snippet: null,
	rawMessage: null,

	isDefined: function(input)
	{
		return input != undefined && input != null;
	},

	/**
	* Gets the snippet of code near the error.
	*
	* @return string The snippet of code
	*/
	getSnippet: function()
	{
		return this.snippet;
	},

	/**
	* Sets the snippet of code near the error.
	*
	* @param string snippet The code snippet
	*/
	setSnippet: function(snippet)
	{
		this.snippet = snippet;

		this.updateRepr();
	},

	/**
	* Gets the filename where the error occurred.
	*
	* This method returns null if a string is parsed.
	*
	* @return string The filename
	*/
	getParsedFile: function()
	{
		return this.parsedFile;
	},

	/**
	* Sets the filename where the error occurred.
	*
	* @param string parsedFile The filename
	*/
	setParsedFile: function(parsedFile)
	{
		this.parsedFile = parsedFile;

		this.updateRepr();
	},

	/**
	* Gets the line where the error occurred.
	*
	* @return integer The file line
	*/
	getParsedLine: function()
	{
		return this.parsedLine;
	},

	/**
	* Sets the line where the error occurred.
	*
	* @param integer parsedLine The file line
	*/
	setParsedLine: function(parsedLine)
	{
		this.parsedLine = parsedLine;

		this.updateRepr();
	},

	updateRepr: function()
	{
		this.message = this.rawMessage;

		var dot = false;
		if ('.' === this.message.charAt(this.message.length - 1)) {
			this.message = this.message.substring(0, this.message.length - 1);
			dot = true;
		}

		if (null !== this.parsedFile) {
			this.message += ' in ' + JSON.stringify(this.parsedFile);
		}

		if (this.parsedLine >= 0) {
			this.message += ' at line ' + this.parsedLine;
		}

		if (this.snippet) {
			this.message += ' (near "' + this.snippet + '")';
		}

		if (dot) {
			this.message += '.';
		}
	}
}
/**
 * Yaml offers convenience methods to parse and dump YAML.
 *
 * @author Fabien Potencier <fabien@symfony.com>
 *
 * @api
 */

var YamlRunningUnderNode = false;
var Yaml = function(){};
Yaml.prototype =
{

	/**
	 * Parses YAML into a JS representation.
	 *
	 * The parse method, when supplied with a YAML stream (file),
	 * will do its best to convert YAML in a file into a JS representation.
	 *
	 *	Usage:
	 *	<code>
	 *	 obj = yaml.parseFile('config.yml');
	 *	</code>
	 *
	 * @param string input Path of YAML file
	 *
	 * @return array The YAML converted to a JS representation
	 *
	 * @throws YamlParseException If the YAML is not valid
	 */
	parseFile: function(file /* String */, callback /* Function */)
	{
		if ( callback == null )
		{
			var input = this.getFileContents(file);
			var ret = null;
			try
			{
				ret = this.parse(input);
			}
			catch ( e )
			{
				if ( e instanceof YamlParseException ) {
					e.setParsedFile(file);
				}
				throw e;
			}
			return ret;
		}
		
		this.getFileContents(file, function(data)
		{
			callback(new Yaml().parse(data));
		});
	},

	/**
	 * Parses YAML into a JS representation.
	 *
	 * The parse method, when supplied with a YAML stream (string),
	 * will do its best to convert YAML into a JS representation.
	 *
	 *	Usage:
	 *	<code>
	 *	 obj = yaml.parse(...);
	 *	</code>
	 *
	 * @param string input string containing YAML
	 *
	 * @return array The YAML converted to a JS representation
	 *
	 * @throws YamlParseException If the YAML is not valid
	 */
	parse: function(input /* String */)
	{
		var yaml = new YamlParser();

		return yaml.parse(input);
	},

	/**
	 * Dumps a JS representation to a YAML string.
	 *
	 * The dump method, when supplied with an array, will do its best
	 * to convert the array into friendly YAML.
	 *
	 * @param array	 array JS representation
	 * @param integer inline The level where you switch to inline YAML
	 *
	 * @return string A YAML string representing the original JS representation
    *
    * @api
    */
	dump: function(array, inline, spaces)
	{
		if ( inline == null ) inline = 2;

		var yaml = new YamlDumper();
		if (spaces) {
		    yaml.numSpacesForIndentation = spaces;
		}

		return yaml.dump(array, inline);
	},
	
	getXHR: function()
	{
		if ( window.XMLHttpRequest )
			return new XMLHttpRequest();
		 
		if ( window.ActiveXObject )
		{
			var names = [
			"Msxml2.XMLHTTP.6.0",
			"Msxml2.XMLHTTP.3.0",
			"Msxml2.XMLHTTP",
			"Microsoft.XMLHTTP"
			];
			
			for ( var i = 0; i < 4; i++ )
			{
				try{ return new ActiveXObject(names[i]); }
				catch(e){}
			}
		}
		return null;
	},
	
	getFileContents: function(file, callback)
	{
	    if ( YamlRunningUnderNode )
	    {
	        var fs = require('fs');
	        if ( callback == null )
	        {
	            var data = fs.readFileSync(file);
	            if (data == null) return null;
	            return ''+data;
	        }
	        else
	        {
	            fs.readFile(file, function(err, data)
	            {
	                if (err)
	                    callback(null);
	                else
	                    callback(data);
	            });
	        }
	    }
	    else
	    {
    		var request = this.getXHR();
		
    		// Sync
    		if ( callback == null )
    		{
    			request.open('GET', file, false);                  
    			request.send(null);

    			if ( request.status == 200 || request.status == 0 )
    				return request.responseText;
			
    			return null;
    		}
		
    		// Async
    		request.onreadystatechange = function()
    		{
    			if ( request.readyState == 4 )
    				if ( request.status == 200 || request.status == 0 )
    					callback(request.responseText);
    				else
    					callback(null);
    		};
    		request.open('GET', file, true);                  
    		request.send(null);
	    }
	}
};

var YAML =
{
	/*
	 * @param integer inline The level where you switch to inline YAML
	 */
	 
	stringify: function(input, inline, spaces)
	{
		return new Yaml().dump(input, inline, spaces);
	},
	
	parse: function(input)
	{
		return new Yaml().parse(input);
	},
	
	load: function(file, callback)
	{
		return new Yaml().parseFile(file, callback);
	}
};

// Handle node.js case
if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
        exports = module.exports = YAML;
        YamlRunningUnderNode = true;
        
        // Add require handler
        (function () {
            var require_handler = function (module, filename) {
                // fill in result
                module.exports = YAML.load(filename);
            };

            // register require extensions only if we're on node.js
            // hack for browserify
            if ( undefined !== require.extensions ) {
                require.extensions['.yml'] = require_handler;
                require.extensions['.yaml'] = require_handler;
            }
        }());
    }
}

// Handle browser case
if ( typeof(window) != "undefined" )
{
    window.YAML = YAML;
}

/**
 * YamlInline implements a YAML parser/dumper for the YAML inline syntax.
 */
var YamlInline = function(){};
YamlInline.prototype =
{
	i: null,
	
	/**
	 * Convert a YAML string to a JS object.
	 *
	 * @param string value A YAML string
	 *
	 * @return object A JS object representing the YAML string
	 */
	parse: function(value)
	{
		var result = null;
		value = this.trim(value);

		if ( 0 == value.length )
		{
			return '';
		}

		switch ( value.charAt(0) )
		{
			case '[':
				result = this.parseSequence(value);
				break;
			case '{':
				result = this.parseMapping(value);
				break;
			default:
				result = this.parseScalar(value);
		}

		// some comment can end the scalar
		if ( value.substr(this.i+1).replace(/^\s*#.*$/, '') != '' ) {
		    console.log("oups "+value.substr(this.i+1));
			throw new YamlParseException('Unexpected characters near "'+value.substr(this.i)+'".');
		}

		return result;
	},

	/**
	 * Dumps a given JS variable to a YAML string.
	 *
	 * @param mixed value The JS variable to convert
	 *
	 * @return string The YAML string representing the JS object
	 */
	dump: function(value)
	{
		if ( undefined == value || null == value )
			return 'null';	
		if ( value instanceof Date)
			return value.toISOString();
		if ( typeof(value) == 'object')
			return this.dumpObject(value);
		if ( typeof(value) == 'boolean' )
			return value ? 'true' : 'false';
		if ( /^\d+$/.test(value) )
			return typeof(value) == 'string' ? "'"+value+"'" : parseInt(value);
		if ( this.isNumeric(value) )
			return typeof(value) == 'string' ? "'"+value+"'" : parseFloat(value);
		if ( typeof(value) == 'number' )
			return value == Infinity ? '.Inf' : ( value == -Infinity ? '-.Inf' : ( isNaN(value) ? '.NAN' : value ) );
		var yaml = new YamlEscaper();
		if ( yaml.requiresDoubleQuoting(value) )
			return yaml.escapeWithDoubleQuotes(value);
		if ( yaml.requiresSingleQuoting(value) )
			return yaml.escapeWithSingleQuotes(value);
		if ( '' == value )
			return "";
		if ( this.getTimestampRegex().test(value) )
			return "'"+value+"'";
		if ( this.inArray(value.toLowerCase(), ['null','~','true','false']) )
			return "'"+value+"'";
		// default
			return value;
	},

	/**
	 * Dumps a JS object to a YAML string.
	 *
	 * @param object value The JS array to dump
	 *
	 * @return string The YAML string representing the JS object
	 */
	dumpObject: function(value)
	{
		var keys = this.getKeys(value);
		var output = null;
		var i;
		var len = keys.length;

		// array
		if ( value instanceof Array )
			/*( 1 == len && '0' == keys[0] )
			||
			( len > 1 && this.reduceArray(keys, function(v,w){return Math.floor(v+w);}, 0) == len * (len - 1) / 2) )*/
		{
			output = [];
			for ( i = 0; i < len; i++ )
			{
				output.push(this.dump(value[keys[i]]));
			}

			return '['+output.join(', ')+']';
		}

		// mapping
		output = [];
		for ( i = 0; i < len; i++ )
		{
			output.push(this.dump(keys[i])+': '+this.dump(value[keys[i]]));
		}

		return '{ '+output.join(', ')+' }';
	},

	/**
	 * Parses a scalar to a YAML string.
	 *
	 * @param scalar scalar
	 * @param string delimiters
	 * @param object stringDelimiters
	 * @param integer i
	 * @param boolean evaluate
	 *
	 * @return string A YAML string
	 *
	 * @throws YamlParseException When malformed inline YAML string is parsed
	 */
	parseScalar: function(scalar, delimiters, stringDelimiters, i, evaluate)
	{
		if ( delimiters == undefined ) delimiters = null;
		if ( stringDelimiters == undefined ) stringDelimiters = ['"', "'"];
		if ( i == undefined ) i = 0;
		if ( evaluate == undefined ) evaluate = true;
		
		var output = null;
		var pos = null;
		var matches = null;
		
		if ( this.inArray(scalar[i], stringDelimiters) )
		{
			// quoted scalar
			output = this.parseQuotedScalar(scalar, i);
			i = this.i;
			if (null !== delimiters) {
				var tmp = scalar.substr(i).replace(/^\s+/, '');
				if (!this.inArray(tmp.charAt(0), delimiters)) {
					throw new YamlParseException('Unexpected characters ('+scalar.substr(i)+').');
				}
			}
		}
		else
		{
			// "normal" string
			if ( !delimiters )
			{
				output = (scalar+'').substring(i);
				
				i += output.length;

				// remove comments
				pos = output.indexOf(' #');
				if ( pos != -1 )
				{
					output = output.substr(0, pos).replace(/\s+$/g,'');
				}
			}
			else if ( matches = new RegExp('^(.+?)('+delimiters.join('|')+')').exec((scalar+'').substring(i)) )
			{
				output = matches[1];
				i += output.length;
			}
			else
			{
				throw new YamlParseException('Malformed inline YAML string ('+scalar+').');
			}
			output = evaluate ? this.evaluateScalar(output) : output;
		}

		this.i = i;
		
		return output;
	},

	/**
	 * Parses a quoted scalar to YAML.
	 *
	 * @param string	scalar
	 * @param integer i
	 *
	 * @return string A YAML string
	 *
	 * @throws YamlParseException When malformed inline YAML string is parsed
	 */
	parseQuotedScalar: function(scalar, i)
	{
		var matches = null;
		//var item = /^(.*?)['"]\s*(?:[,:]|[}\]]\s*,)/.exec((scalar+'').substring(i))[1];
		
		if ( !(matches = new RegExp('^'+YamlInline.REGEX_QUOTED_STRING).exec((scalar+'').substring(i))) )
		{
			throw new YamlParseException('Malformed inline YAML string ('+(scalar+'').substring(i)+').');
		}

		var output = matches[0].substr(1, matches[0].length - 2);
		
		var unescaper = new YamlUnescaper();

		if ( '"' == (scalar+'').charAt(i) )
		{
			output = unescaper.unescapeDoubleQuotedString(output);
		}
		else
		{
			output = unescaper.unescapeSingleQuotedString(output);
		}

		i += matches[0].length;

		this.i = i;
		return output;
	},

	/**
	 * Parses a sequence to a YAML string.
	 *
	 * @param string sequence
	 * @param integer i
	 *
	 * @return string A YAML string
	 *
	 * @throws YamlParseException When malformed inline YAML string is parsed
	 */
	parseSequence: function(sequence, i)
	{
		if ( i == undefined ) i = 0;
		
		var output = [];
		var len = sequence.length;
		i += 1;

		// [foo, bar, ...]
		while ( i < len )
		{
			switch ( sequence.charAt(i) )
			{
				case '[':
					// nested sequence
					output.push(this.parseSequence(sequence, i));
					i = this.i;
					break;
				case '{':
					// nested mapping
					output.push(this.parseMapping(sequence, i));
					i = this.i;
					break;
				case ']':
					this.i = i;
					return output;
				case ',':
				case ' ':
					break;
				default:
					var isQuoted = this.inArray(sequence.charAt(i), ['"', "'"]);
					var value = this.parseScalar(sequence, [',', ']'], ['"', "'"], i);
					i = this.i;
					
					if ( !isQuoted && (value+'').indexOf(': ') != -1 )
					{
						// embedded mapping?
						try
						{
							value = this.parseMapping('{'+value+'}');
						}
						catch ( e )
						{
							if ( !(e instanceof YamlParseException ) ) throw e;
							// no, it's not
						}
					}

					output.push(value);

					i--;
			}

			i++;
		}

		throw new YamlParseException('Malformed inline YAML string "'+sequence+'"');
	},

	/**
	 * Parses a mapping to a YAML string.
	 *
	 * @param string mapping
	 * @param integer i
	 *
	 * @return string A YAML string
	 *
	 * @throws YamlParseException When malformed inline YAML string is parsed
	 */
	parseMapping: function(mapping, i)
	{
		if ( i == undefined ) i = 0;
		var output = {};
		var len = mapping.length;
		i += 1;
		var done = false;
		var doContinue = false;

		// {foo: bar, bar:foo, ...}
		while ( i < len )
		{
			doContinue = false;
			
			switch ( mapping.charAt(i) )
			{
				case ' ':
				case ',':
					i++;
					doContinue = true;
					break;
				case '}':
					this.i = i;
					return output;
			}
			
			if ( doContinue ) continue;

			// key
			var key = this.parseScalar(mapping, [':', ' '], ['"', "'"], i, false);
			i = this.i;

			// value
			done = false;
			while ( i < len )
			{
				switch ( mapping.charAt(i) )
				{
					case '[':
						// nested sequence
						output[key] = this.parseSequence(mapping, i);
						i = this.i;
						done = true;
						break;
					case '{':
						// nested mapping
						output[key] = this.parseMapping(mapping, i);
						i = this.i;
						done = true;
						break;
					case ':':
					case ' ':
						break;
					default:
						output[key] = this.parseScalar(mapping, [',', '}'], ['"', "'"], i);
						i = this.i;
						done = true;
						i--;
				}

				++i;

				if ( done )
				{
					doContinue = true;
					break;
				}
			}
			
			if ( doContinue ) continue;
		}

		throw new YamlParseException('Malformed inline YAML string "'+mapping+'"');
	},

	/**
	 * Evaluates scalars and replaces magic values.
	 *
	 * @param string scalar
	 *
	 * @return string A YAML string
	 */
	evaluateScalar: function(scalar)
	{
		scalar = this.trim(scalar);
		
		var raw = null;
		var cast = null;

		if (	( 'null' == scalar.toLowerCase() ) ||
				( '' == scalar ) ||
				( '~' == scalar ) )
			return null;
		if ( (scalar+'').indexOf('!str ') == 0 )
			return (''+scalar).substring(5);
		if ( (scalar+'').indexOf('! ') == 0 )
			return parseInt(this.parseScalar((scalar+'').substr(2)));
		if ( /^\d+$/.test(scalar) )
		{
			raw = scalar;
			cast = parseInt(scalar);
			return '0' == scalar.charAt(0) ? this.octdec(scalar) : (( ''+raw == ''+cast ) ? cast : raw);
		}
		if ( 'true' == (scalar+'').toLowerCase() )
			return true;
		if ( 'false' == (scalar+'').toLowerCase() )
			return false;
		if ( this.isNumeric(scalar) )
			return '0x' == (scalar+'').substr(0, 2) ? this.hexdec(scalar) : parseFloat(scalar);
		if ( scalar.toLowerCase() == '.inf' )
			return Infinity;
		if ( scalar.toLowerCase() == '.nan' )
			return NaN;
		if ( scalar.toLowerCase() == '-.inf' )
			return -Infinity;
		if ( /^(-|\+)?[0-9,]+(\.[0-9]+)?$/.test(scalar) )
			return parseFloat(scalar.split(',').join(''));
		if ( this.getTimestampRegex().test(scalar) )
			return new Date(this.strtotime(scalar));
		//else
			return ''+scalar;
	},

	/**
	 * Gets a regex that matches an unix timestamp
	 *
	 * @return string The regular expression
	 */
	getTimestampRegex: function()
	{
		return new RegExp('^'+
		'([0-9][0-9][0-9][0-9])'+
		'-([0-9][0-9]?)'+
		'-([0-9][0-9]?)'+
		'(?:(?:[Tt]|[ \t]+)'+
		'([0-9][0-9]?)'+
		':([0-9][0-9])'+
		':([0-9][0-9])'+
		'(?:\.([0-9]*))?'+
		'(?:[ \t]*(Z|([-+])([0-9][0-9]?)'+
		'(?::([0-9][0-9]))?))?)?'+
		'$','gi');
	},
	
	trim: function(str /* String */)
	{
		return (str+'').replace(/^\s+/,'').replace(/\s+$/,'');
	},
	
	isNumeric: function(input)
	{
		return (input - 0) == input && input.length > 0 && input.replace(/\s+/g,'') != '';
	},
	
	inArray: function(key, tab)
	{
		var i;
		var len = tab.length;
		for ( i = 0; i < len; i++ )
		{
			if ( key == tab[i] ) return true;
		}
		return false;
	},
	
	getKeys: function(tab)
	{
		var ret = [];
		
		for ( var name in tab )
		{
			if ( tab.hasOwnProperty(name) )
			{
				ret.push(name);
			}
		}
		
		return ret;
	},
	
	/*reduceArray: function(tab, fun)
	{
		var len = tab.length;
		if (typeof fun != "function")
			throw new YamlParseException("fun is not a function");
		
		// no value to return if no initial value and an empty array
		if (len == 0 && arguments.length == 1)
			throw new YamlParseException("empty array");
		
		var i = 0;
		if (arguments.length >= 2)
		{
			var rv = arguments[1];
		}
		else
		{
			do
			{
				if (i in tab)
				{
					rv = tab[i++];
					break;
				}
		
				// if array contains no values, no initial value to return
				if (++i >= len)
					throw new YamlParseException("no initial value to return");
			}
			while (true);
		}

		for (; i < len; i++)
		{
			if (i in tab)
				rv = fun.call(null, rv, tab[i], i, tab);
		}

		return rv;
	},*/
	
	octdec: function(input)
	{
	    return parseInt((input+'').replace(/[^0-7]/gi, ''), 8);
	},
	
	hexdec: function(input)
	{
		input = this.trim(input);
		if ( (input+'').substr(0, 2) == '0x' ) input = (input+'').substring(2);
	    return parseInt((input+'').replace(/[^a-f0-9]/gi, ''), 16);
	},
	
	/**
	 * @see http://phpjs.org/functions/strtotime
	 * @note we need timestamp with msecs so /1000 removed
	 * @note original contained binary | 0 (wtf?!) everywhere, which messes everything up 
	 */
	strtotime: function (h,b){var f,c,g,k,d="";h=(h+"").replace(/\s{2,}|^\s|\s$/g," ").replace(/[\t\r\n]/g,"");if(h==="now"){return b===null||isNaN(b)?new Date().getTime()||0:b||0}else{if(!isNaN(d=Date.parse(h))){return d||0}else{if(b){b=new Date(b)}else{b=new Date()}}}h=h.toLowerCase();var e={day:{sun:0,mon:1,tue:2,wed:3,thu:4,fri:5,sat:6},mon:["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"]};var a=function(i){var o=(i[2]&&i[2]==="ago");var n=(n=i[0]==="last"?-1:1)*(o?-1:1);switch(i[0]){case"last":case"next":switch(i[1].substring(0,3)){case"yea":b.setFullYear(b.getFullYear()+n);break;case"wee":b.setDate(b.getDate()+(n*7));break;case"day":b.setDate(b.getDate()+n);break;case"hou":b.setHours(b.getHours()+n);break;case"min":b.setMinutes(b.getMinutes()+n);break;case"sec":b.setSeconds(b.getSeconds()+n);break;case"mon":if(i[1]==="month"){b.setMonth(b.getMonth()+n);break}default:var l=e.day[i[1].substring(0,3)];if(typeof l!=="undefined"){var p=l-b.getDay();if(p===0){p=7*n}else{if(p>0){if(i[0]==="last"){p-=7}}else{if(i[0]==="next"){p+=7}}}b.setDate(b.getDate()+p);b.setHours(0,0,0,0)}}break;default:if(/\d+/.test(i[0])){n*=parseInt(i[0],10);switch(i[1].substring(0,3)){case"yea":b.setFullYear(b.getFullYear()+n);break;case"mon":b.setMonth(b.getMonth()+n);break;case"wee":b.setDate(b.getDate()+(n*7));break;case"day":b.setDate(b.getDate()+n);break;case"hou":b.setHours(b.getHours()+n);break;case"min":b.setMinutes(b.getMinutes()+n);break;case"sec":b.setSeconds(b.getSeconds()+n);break}}else{return false}break}return true};g=h.match(/^(\d{2,4}-\d{2}-\d{2})(?:\s(\d{1,2}:\d{2}(:\d{2})?)?(?:\.(\d+))?)?$/);if(g!==null){if(!g[2]){g[2]="00:00:00"}else{if(!g[3]){g[2]+=":00"}}k=g[1].split(/-/g);k[1]=e.mon[k[1]-1]||k[1];k[0]=+k[0];k[0]=(k[0]>=0&&k[0]<=69)?"20"+(k[0]<10?"0"+k[0]:k[0]+""):(k[0]>=70&&k[0]<=99)?"19"+k[0]:k[0]+"";return parseInt(this.strtotime(k[2]+" "+k[1]+" "+k[0]+" "+g[2])+(g[4]?g[4]:""),10)}var j="([+-]?\\d+\\s(years?|months?|weeks?|days?|hours?|min|minutes?|sec|seconds?|sun\\.?|sunday|mon\\.?|monday|tue\\.?|tuesday|wed\\.?|wednesday|thu\\.?|thursday|fri\\.?|friday|sat\\.?|saturday)|(last|next)\\s(years?|months?|weeks?|days?|hours?|min|minutes?|sec|seconds?|sun\\.?|sunday|mon\\.?|monday|tue\\.?|tuesday|wed\\.?|wednesday|thu\\.?|thursday|fri\\.?|friday|sat\\.?|saturday))(\\sago)?";g=h.match(new RegExp(j,"gi"));if(g===null){return false}for(f=0,c=g.length;f<c;f++){if(!a(g[f].split(" "))){return false}}return b.getTime()||0}
	 
};

/*
 * @note uses only non-capturing sub-patterns (unlike PHP original)
 */
YamlInline.REGEX_QUOTED_STRING = '(?:"(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'(?:[^\']*(?:\'\'[^\']*)*)\')';


/**
 * YamlParser parses YAML strings to convert them to JS objects
 * (port of Yaml Symfony Component)
 */
var YamlParser = function(offset /* Integer */)
{
		this.offset = (offset !== undefined) ? offset : 0;
};
YamlParser.prototype =
{
	offset: 0,
	lines: [],
	currentLineNb: -1,
	currentLine: '',
	refs: {},
	
	/**
	 * Parses a YAML string to a JS value.
	 *
	 * @param String value A YAML string
	 *
	 * @return mixed A JS value
	 */
	parse: function(value /* String */)
	{
		this.currentLineNb = -1;
		this.currentLine = '';
		this.lines = this.cleanup(value).split("\n");
		
		var data = null;
      var context = null;
      		
		while ( this.moveToNextLine() )
		{
			if ( this.isCurrentLineEmpty() )
			{
				continue;
			}
			
			// tab?
			if ( this.currentLine.charAt(0) == '\t' )
			{
				throw new YamlParseException('A YAML file cannot contain tabs as indentation.', this.getRealCurrentLineNb() + 1, this.currentLine);
			}
			
			var isRef = false;
			var isInPlace = false;
			var isProcessed = false;
			var values = null;
			var matches = null;
			var c = null;
			var parser = null;
			var block = null;
			var key = null;
			var parsed = null;
			var len = null;
			var reverse = null;
			
			if ( values = /^\-((\s+)(.+?))?\s*$/.exec(this.currentLine) )
			{

				if (context && 'mapping' == context) {
					throw new YamlParseException('You cannot define a sequence item when in a mapping', this.getRealCurrentLineNb() + 1, this.currentLine);
				}
				context = 'sequence';

				if ( !this.isDefined(data) ) data = [];
				//if ( !(data instanceof Array) ) throw new YamlParseException("Non array entry", this.getRealCurrentLineNb() + 1, this.currentLine);
				
				values = {leadspaces: values[2], value: values[3]};
				
				if ( this.isDefined(values.value) && ( matches = /^&([^ ]+) *(.*)/.exec(values.value) ) )
				{
					matches = {ref: matches[1], value: matches[2]};
					isRef = matches.ref;
					values.value = matches.value;
				}
				
				// array
				if ( !this.isDefined(values.value) || '' == this.trim(values.value) || values.value.replace(/^ +/,'').charAt(0) == '#' )
				{
					c = this.getRealCurrentLineNb() + 1;
					parser = new YamlParser(c);
					parser.refs = this.refs;
					data.push(parser.parse(this.getNextEmbedBlock()));
					this.refs = parser.refs;
				}
				else
				{
					if ( this.isDefined(values.leadspaces) && 
						' ' == values.leadspaces && 
						( matches = new RegExp('^('+YamlInline.REGEX_QUOTED_STRING+'|[^ \'"\{\[].*?) *\:(\\s+(.+?))?\\s*$').exec(values.value) ) 
					) {
						matches = {key: matches[1], value: matches[3]};
						// this is a compact notation element, add to next block and parse
						c = this.getRealCurrentLineNb();
						parser = new YamlParser(c);
						parser.refs = this.refs;
						block = values.value;
						
						if ( !this.isNextLineIndented() )
						{
							block += "\n"+this.getNextEmbedBlock(this.getCurrentLineIndentation() + 2);
						}

						data.push(parser.parse(block));
						this.refs = parser.refs;
					}
					else
					{
						data.push(this.parseValue(values.value));
					}
				}
			}
			else if ( values = new RegExp('^('+YamlInline.REGEX_QUOTED_STRING+'|[^ \'"\[\{].*?) *\:(\\s+(.+?))?\\s*$').exec(this.currentLine) )
			{
				if ( !this.isDefined(data) ) data = {};
				if (context && 'sequence' == context) {
					throw new YamlParseException('You cannot define a mapping item when in a sequence', this.getRealCurrentLineNb() + 1, this.currentLine);
				}
				context = 'mapping';				
				//if ( data instanceof Array ) throw new YamlParseException("Non mapped entry", this.getRealCurrentLineNb() + 1, this.currentLine);
				
				values = {key: values[1], value: values[3]};
				
				try {
					key = new YamlInline().parseScalar(values.key);
				} catch (e) {
					if ( e instanceof YamlParseException ) {
						e.setParsedLine(this.getRealCurrentLineNb() + 1);
						e.setSnippet(this.currentLine);
					}
					throw e;
				}				
				
				
				if ( '<<' == key )
				{
					if ( this.isDefined(values.value) && '*' == (values.value+'').charAt(0) )
					{
						isInPlace = values.value.substr(1);
						if ( this.refs[isInPlace] == undefined )
						{
							throw new YamlParseException('Reference "'+value+'" does not exist', this.getRealCurrentLineNb() + 1, this.currentLine);
						}
					}
					else
					{
						if ( this.isDefined(values.value) && values.value != '' )
						{
							value = values.value;
						}
						else
						{
							value = this.getNextEmbedBlock();
						}
						
						c = this.getRealCurrentLineNb() + 1;
						parser = new YamlParser(c);
						parser.refs = this.refs;
						parsed = parser.parse(value);
						this.refs = parser.refs;
				
						var merged = [];
						if ( !this.isObject(parsed) )
						{
							throw new YamlParseException("YAML merge keys used with a scalar value instead of an array", this.getRealCurrentLineNb() + 1, this.currentLine);
						}
						else if ( this.isDefined(parsed[0]) )
						{
							// Numeric array, merge individual elements
							reverse = this.reverseArray(parsed);
							len = reverse.length;
							for ( var i = 0; i < len; i++ )
							{
								var parsedItem = reverse[i];
								if ( !this.isObject(reverse[i]) )
								{
									throw new YamlParseException("Merge items must be arrays", this.getRealCurrentLineNb() + 1, this.currentLine);
								}
								merged = this.mergeObject(reverse[i], merged);
							}
						}
						else
						{
							// Associative array, merge
							merged = this.mergeObject(merged, parsed);
						}
				
						isProcessed = merged;
					}
				}
				else if ( this.isDefined(values.value) && (matches = /^&([^ ]+) *(.*)/.exec(values.value) ) )
				{
					matches = {ref: matches[1], value: matches[2]};
					isRef = matches.ref;
					values.value = matches.value;
				}
				
				if ( isProcessed )
				{
					// Merge keys
					data = isProcessed;
				}
				// hash
				else if ( !this.isDefined(values.value) || '' == this.trim(values.value) || this.trim(values.value).charAt(0) == '#' )
				{
					// if next line is less indented or equal, then it means that the current value is null
					if ( this.isNextLineIndented() && !this.isNextLineUnIndentedCollection() )
					{
						data[key] = null;
					}
					else
					{
						c = this.getRealCurrentLineNb() + 1;
						parser = new YamlParser(c);
						parser.refs = this.refs;
						data[key] = parser.parse(this.getNextEmbedBlock());
						this.refs = parser.refs;
					}
				}
				else
				{
					if ( isInPlace )
					{
						data = this.refs[isInPlace];
					}
					else
					{
						data[key] = this.parseValue(values.value);
					}
				}
			}
			else
			{
				// 1-liner followed by newline
				if ( 2 == this.lines.length && this.isEmpty(this.lines[1]) )
				{
					try {
						value = new YamlInline().parse(this.lines[0]);
					} catch (e) {
						if ( e instanceof YamlParseException ) {
							e.setParsedLine(this.getRealCurrentLineNb() + 1);
							e.setSnippet(this.currentLine);
						}
						throw e;
					}
					
					if ( this.isObject(value) )
					{
						var first = value[0];
						if ( typeof(value) == 'string' && '*' == first.charAt(0) )
						{
							data = [];
							len = value.length;
							for ( var i = 0; i < len; i++ )
							{
								data.push(this.refs[value[i].substr(1)]);
							}
							value = data;
						}
					}
				
					return value;
				}
				
				throw new YamlParseException('Unable to parse.', this.getRealCurrentLineNb() + 1, this.currentLine);
			}
		
			if ( isRef )
			{
				if ( data instanceof Array )
					this.refs[isRef] = data[data.length-1];
				else
				{
					var lastKey = null;
					for ( var k in data )
					{
						if ( data.hasOwnProperty(k) ) lastKey = k;
					}
					this.refs[isRef] = data[k];
				}
			}
		}
		
		return this.isEmpty(data) ? null : data;
	},

	/**
	 * Returns the current line number (takes the offset into account).
	 *
	 * @return integer The current line number
	 */
	getRealCurrentLineNb: function()
	{
		return this.currentLineNb + this.offset;
	},

	/**
	 * Returns the current line indentation.
	 *
	 * @return integer The current line indentation
	 */
	getCurrentLineIndentation: function()
	{
		return this.currentLine.length - this.currentLine.replace(/^ +/g, '').length;
	},

	/**
	 * Returns the next embed block of YAML.
	 *
	 * @param integer indentation The indent level at which the block is to be read, or null for default
	 *
	 * @return string A YAML string
	 *
	 * @throws YamlParseException When indentation problem are detected
	 */
	getNextEmbedBlock: function(indentation)
	{
		this.moveToNextLine();
		var newIndent = null;
		var indent = null;

		if ( !this.isDefined(indentation) )
		{
			newIndent = this.getCurrentLineIndentation();
			
			var unindentedEmbedBlock = this.isStringUnIndentedCollectionItem(this.currentLine);

			if ( !this.isCurrentLineEmpty() && 0 == newIndent && !unindentedEmbedBlock )
			{
				throw new YamlParseException('Indentation problem A', this.getRealCurrentLineNb() + 1, this.currentLine);
			}
		}
		else
		{
			newIndent = indentation;
		}

		var data = [this.currentLine.substr(newIndent)];

		var isUnindentedCollection = this.isStringUnIndentedCollectionItem(this.currentLine);

		var continuationIndent = -1;
		if (isUnindentedCollection === true) {
			continuationIndent = 1 + /^\-((\s+)(.+?))?\s*$/.exec(this.currentLine)[2].length;
		}

		while ( this.moveToNextLine() )
		{

			if (isUnindentedCollection && !this.isStringUnIndentedCollectionItem(this.currentLine) && this.getCurrentLineIndentation() != continuationIndent) {
				this.moveToPreviousLine();
				break;
			}

			if ( this.isCurrentLineEmpty() )
			{
				if ( this.isCurrentLineBlank() )
				{
					data.push(this.currentLine.substr(newIndent));
				}

				continue;
			}

			indent = this.getCurrentLineIndentation();
			var matches;
			if ( matches = /^( *)$/.exec(this.currentLine) )
			{
				// empty line
				data.push(matches[1]);
			}
			else if ( indent >= newIndent )
			{
				data.push(this.currentLine.substr(newIndent));
			}
			else if ( 0 == indent )
			{
				this.moveToPreviousLine();

				break;
			}
			else
			{
				throw new YamlParseException('Indentation problem B', this.getRealCurrentLineNb() + 1, this.currentLine);
			}
		}

		return data.join("\n");
	},

	/**
	 * Moves the parser to the next line.
	 *
	 * @return Boolean
	 */
	moveToNextLine: function()
	{
		if ( this.currentLineNb >= this.lines.length - 1 )
		{
			return false;
		}

		this.currentLineNb++;
		this.currentLine = this.lines[this.currentLineNb];

		return true;
	},

	/**
	 * Moves the parser to the previous line.
	 */
	moveToPreviousLine: function()
	{
		this.currentLineNb--;
		this.currentLine = this.lines[this.currentLineNb];
	},

	/**
	 * Parses a YAML value.
	 *
	 * @param string value A YAML value
	 *
	 * @return mixed A JS value
	 *
	 * @throws YamlParseException When reference does not exist
	 */
	parseValue: function(value)
	{
		if ( '*' == (value+'').charAt(0) )
		{
			if ( this.trim(value).charAt(0) == '#' )
			{
				value = (value+'').substr(1, value.indexOf('#') - 2);
			}
			else
			{
				value = (value+'').substr(1);
			}

			if ( this.refs[value] == undefined )
			{
				throw new YamlParseException('Reference "'+value+'" does not exist', this.getRealCurrentLineNb() + 1, this.currentLine);
			}
			return this.refs[value];
		}

		var matches = null;
		if ( matches = /^(\||>)(\+|\-|\d+|\+\d+|\-\d+|\d+\+|\d+\-)?( +#.*)?$/.exec(value) )
		{
			matches = {separator: matches[1], modifiers: matches[2], comments: matches[3]};
			var modifiers = this.isDefined(matches.modifiers) ? matches.modifiers : '';

			return this.parseFoldedScalar(matches.separator, modifiers.replace(/\d+/g, ''), Math.abs(parseInt(modifiers)));
		}
		try {
			return new YamlInline().parse(value);
		} catch (e) {
			if ( e instanceof YamlParseException ) {
				e.setParsedLine(this.getRealCurrentLineNb() + 1);
				e.setSnippet(this.currentLine);
			}
			throw e;
		}
	},

	/**
	 * Parses a folded scalar.
	 *
	 * @param	string	separator	 The separator that was used to begin this folded scalar (| or >)
	 * @param	string	indicator	 The indicator that was used to begin this folded scalar (+ or -)
	 * @param	integer indentation  The indentation that was used to begin this folded scalar
	 *
	 * @return string	The text value
	 */
	parseFoldedScalar: function(separator, indicator, indentation)
	{
		if ( indicator == undefined ) indicator = '';
		if ( indentation == undefined ) indentation = 0;
		
		separator = '|' == separator ? "\n" : ' ';
		var text = '';
		var diff = null;

		var notEOF = this.moveToNextLine();

		while ( notEOF && this.isCurrentLineBlank() )
		{
			text += "\n";

			notEOF = this.moveToNextLine();
		}

		if ( !notEOF )
		{
			return '';
		}

		var matches = null;
		if ( !(matches = new RegExp('^('+(indentation ? this.strRepeat(' ', indentation) : ' +')+')(.*)$').exec(this.currentLine)) )
		{
			this.moveToPreviousLine();

			return '';
		}
		
		matches = {indent: matches[1], text: matches[2]};
		
		var textIndent = matches.indent;
		var previousIndent = 0;

		text += matches.text + separator;
		while ( this.currentLineNb + 1 < this.lines.length )
		{
			this.moveToNextLine();
			
			if ( matches = new RegExp('^( {'+textIndent.length+',})(.+)$').exec(this.currentLine) )
			{
				matches = {indent: matches[1], text: matches[2]};
				
				if ( ' ' == separator && previousIndent != matches.indent )
				{
					text = text.substr(0, text.length - 1)+"\n";
				}
				
				previousIndent = matches.indent;

				diff = matches.indent.length - textIndent.length;
				text += this.strRepeat(' ', diff) + matches.text + (diff != 0 ? "\n" : separator);
			}
			else if ( matches = /^( *)$/.exec(this.currentLine) )
			{
				text += matches[1].replace(new RegExp('^ {1,'+textIndent.length+'}','g'), '')+"\n";
			}
			else
			{
				this.moveToPreviousLine();

				break;
			}
		}

		if ( ' ' == separator )
		{
			// replace last separator by a newline
			text = text.replace(/ (\n*)$/g, "\n$1");
		}

		switch ( indicator )
		{
			case '':
				text = text.replace(/\n+$/g, "\n");
				break;
			case '+':
				break;
			case '-':
				text = text.replace(/\n+$/g, '');
				break;
		}

		return text;
	},

	/**
	 * Returns true if the next line is indented.
	 *
	 * @return Boolean Returns true if the next line is indented, false otherwise
	 */
	isNextLineIndented: function()
	{
		var currentIndentation = this.getCurrentLineIndentation();
		var notEOF = this.moveToNextLine();

		while ( notEOF && this.isCurrentLineEmpty() )
		{
			notEOF = this.moveToNextLine();
		}

		if ( false == notEOF )
		{
			return false;
		}

		var ret = false;
		if ( this.getCurrentLineIndentation() <= currentIndentation )
		{
			ret = true;
		}

		this.moveToPreviousLine();

		return ret;
	},

	/**
	 * Returns true if the current line is blank or if it is a comment line.
	 *
	 * @return Boolean Returns true if the current line is empty or if it is a comment line, false otherwise
	 */
	isCurrentLineEmpty: function()
	{
		return this.isCurrentLineBlank() || this.isCurrentLineComment();
	},

	/**
	 * Returns true if the current line is blank.
	 *
	 * @return Boolean Returns true if the current line is blank, false otherwise
	 */
	isCurrentLineBlank: function()
	{
		return '' == this.trim(this.currentLine);
	},

	/**
	 * Returns true if the current line is a comment line.
	 *
	 * @return Boolean Returns true if the current line is a comment line, false otherwise
	 */
	isCurrentLineComment: function()
	{
		//checking explicitly the first char of the trim is faster than loops or strpos
		var ltrimmedLine = this.currentLine.replace(/^ +/g, '');
		return ltrimmedLine.charAt(0) == '#';
	},

	/**
	 * Cleanups a YAML string to be parsed.
	 *
	 * @param string value The input YAML string
	 *
	 * @return string A cleaned up YAML string
	 */
	cleanup: function(value)
	{
		value = value.split("\r\n").join("\n").split("\r").join("\n");

		if ( !/\n$/.test(value) )
		{
			value += "\n";
		}

		// strip YAML header
		var count = 0;
		var regex = /^\%YAML[: ][\d\.]+.*\n/;
		while ( regex.test(value) )
		{
			value = value.replace(regex, '');
			count++;
		}
		this.offset += count;

		// remove leading comments
		regex = /^(#.*?\n)+/;
		if ( regex.test(value) )
		{
			var trimmedValue = value.replace(regex, '');
			
			// items have been removed, update the offset
			this.offset += this.subStrCount(value, "\n") - this.subStrCount(trimmedValue, "\n");
			value = trimmedValue;
		}

		// remove start of the document marker (---)
		regex = /^\-\-\-.*?\n/;
		if ( regex.test(value) )
		{
			trimmedValue = value.replace(regex, '');
			
			// items have been removed, update the offset
			this.offset += this.subStrCount(value, "\n") - this.subStrCount(trimmedValue, "\n");
			value = trimmedValue;

			// remove end of the document marker (...)
			value = value.replace(/\.\.\.\s*$/g, '');
		}

		return value;
	},

	/**
	 * Returns true if the next line starts unindented collection
	 *
	 * @return Boolean Returns true if the next line starts unindented collection, false otherwise
	 */
	isNextLineUnIndentedCollection: function()
	{
		var currentIndentation = this.getCurrentLineIndentation();
		var notEOF = this.moveToNextLine();

		while (notEOF && this.isCurrentLineEmpty()) {
			notEOF = this.moveToNextLine();
		}

		if (false === notEOF) {
			return false;
		}

		var ret = false;
		if (
			this.getCurrentLineIndentation() == currentIndentation
			&&
			this.isStringUnIndentedCollectionItem(this.currentLine)
		) {
			ret = true;
		}

		this.moveToPreviousLine();

		return ret;
	},

	/**
	 * Returns true if the string is unindented collection item
	 *
	 * @return Boolean Returns true if the string is unindented collection item, false otherwise
	 */
	isStringUnIndentedCollectionItem: function(string)
	{
		return (0 === this.currentLine.indexOf('- '));
	},
	
	isObject: function(input)
	{
		return typeof(input) == 'object' && this.isDefined(input);
	},
	
	isEmpty: function(input)
	{
		return input == undefined || input == null || input == '' || input == 0 || input == "0" || input == false;
	},
	
	isDefined: function(input)
	{
		return input != undefined && input != null;
	},
	
	reverseArray: function(input /* Array */)
	{
		var result = [];
		var len = input.length;
		for ( var i = len-1; i >= 0; i-- )
		{
			result.push(input[i]);
		}
		
		return result;
	},
	
	merge: function(a /* Object */, b /* Object */)
	{
		var c = {};
		var i;
		
		for ( i in a )
		{
			if ( a.hasOwnProperty(i) )
				if ( /^\d+$/.test(i) ) c.push(a);
				else c[i] = a[i];
		}
		for ( i in b )
		{
			if ( b.hasOwnProperty(i) )
				if ( /^\d+$/.test(i) ) c.push(b);
				else c[i] = b[i];
		}
		
		return c;
	},
	
	strRepeat: function(str /* String */, count /* Integer */)
	{
		var i;
		var result = '';
		for ( i = 0; i < count; i++ ) result += str;
		return result;
	},
	
	subStrCount: function(string, subString, start, length)
	{
		var c = 0;
		
		string = '' + string;
		subString = '' + subString;
		
		if ( start != undefined ) string = string.substr(start);
		if ( length != undefined ) string = string.substr(0, length); 
		
		var len = string.length;
		var sublen = subString.length;
		for ( var i = 0; i < len; i++ )
		{
			if ( subString == string.substr(i, sublen) )
				c++;
				i += sublen - 1;
		}
		
		return c;
	},
	
	trim: function(str /* String */)
	{
		return (str+'').replace(/^ +/,'').replace(/ +$/,'');
	}
};
/**
 * YamlEscaper encapsulates escaping rules for single and double-quoted
 * YAML strings.
 *
 * @author Matthew Lewinski <matthew@lewinski.org>
 */
YamlEscaper = function(){};
YamlEscaper.prototype =
{
	/**
	 * Determines if a JS value would require double quoting in YAML.
	 *
	 * @param string value A JS value
	 *
	 * @return Boolean True if the value would require double quotes.
	 */
	requiresDoubleQuoting: function(value)
	{
		return new RegExp(YamlEscaper.REGEX_CHARACTER_TO_ESCAPE).test(value);
	},

	/**
	 * Escapes and surrounds a JS value with double quotes.
	 *
	 * @param string value A JS value
	 *
	 * @return string The quoted, escaped string
	 */
	escapeWithDoubleQuotes: function(value)
	{
		value = value + '';
		var len = YamlEscaper.escapees.length;
		var maxlen = YamlEscaper.escaped.length;
		var esc = YamlEscaper.escaped;
		for (var i = 0; i < len; ++i)
			if ( i >= maxlen ) esc.push('');

		var ret = '';		
		ret = value.replace(new RegExp(YamlEscaper.escapees.join('|'),'g'), function(str){
			for(var i = 0; i < len; ++i){
				if( str == YamlEscaper.escapees[i] )
					return esc[i];
			}
		});
		return '"' + ret + '"'; 
	},

	/**
	 * Determines if a JS value would require single quoting in YAML.
	 *
	 * @param string value A JS value
	 *
	 * @return Boolean True if the value would require single quotes.
	 */
	requiresSingleQuoting: function(value)
	{
		return /[\s'":{}[\],&*#?]|^[-?|<>=!%@`]/.test(value);
	},

	/**
	 * Escapes and surrounds a JS value with single quotes.
	 *
	 * @param string value A JS value
	 *
	 * @return string The quoted, escaped string
	 */
	escapeWithSingleQuotes : function(value)
	{
		return "'" + value.replace(/'/g, "''") + "'";
	}
};

// Characters that would cause a dumped string to require double quoting.
YamlEscaper.REGEX_CHARACTER_TO_ESCAPE = "[\\x00-\\x1f]|\xc2\x85|\xc2\xa0|\xe2\x80\xa8|\xe2\x80\xa9";

// Mapping arrays for escaping a double quoted string. The backslash is
// first to ensure proper escaping. 
YamlEscaper.escapees = ['\\\\', '\\"', '"',
									 "\x00",  "\x01",  "\x02",  "\x03",  "\x04",  "\x05",  "\x06",  "\x07",
									 "\x08",  "\x09",  "\x0a",  "\x0b",  "\x0c",  "\x0d",  "\x0e",  "\x0f",
									 "\x10",  "\x11",  "\x12",  "\x13",  "\x14",  "\x15",  "\x16",  "\x17",
									 "\x18",  "\x19",  "\x1a",  "\x1b",  "\x1c",  "\x1d",  "\x1e",  "\x1f",
									 "\xc2\x85", "\xc2\xa0", "\xe2\x80\xa8", "\xe2\x80\xa9"];
YamlEscaper.escaped = ['\\"', '\\\\', '\\"',
									 "\\0",   "\\x01", "\\x02", "\\x03", "\\x04", "\\x05", "\\x06", "\\a",
									 "\\b",   "\\t",   "\\n",   "\\v",   "\\f",   "\\r",   "\\x0e", "\\x0f",
									 "\\x10", "\\x11", "\\x12", "\\x13", "\\x14", "\\x15", "\\x16", "\\x17",
									 "\\x18", "\\x19", "\\x1a", "\\e",   "\\x1c", "\\x1d", "\\x1e", "\\x1f",
									 "\\N", "\\_", "\\L", "\\P"];
/**
 * YamlUnescaper encapsulates unescaping rules for single and double-quoted
 * YAML strings.
 *
 * @author Matthew Lewinski <matthew@lewinski.org>
 */
var YamlUnescaper = function(){};
YamlUnescaper.prototype =
{
	/**
	 * Unescapes a single quoted string.
	 *
	 * @param string value A single quoted string.
	 *
	 * @return string The unescaped string.
	 */
	unescapeSingleQuotedString: function(value)
	{
		return value.replace(/''/g, "'");
	},

	/**
	 * Unescapes a double quoted string.
	 *
	 * @param string value A double quoted string.
	 *
	 * @return string The unescaped string.
	 */
	unescapeDoubleQuotedString: function(value)
	{
		var callback = function(m) {
			return new YamlUnescaper().unescapeCharacter(m);
		};

		// evaluate the string
		return value.replace(new RegExp(YamlUnescaper.REGEX_ESCAPED_CHARACTER, 'g'), callback);
	},

	/**
	 * Unescapes a character that was found in a double-quoted string
	 *
	 * @param string value An escaped character
	 *
	 * @return string The unescaped character
	 */
	unescapeCharacter: function(value)
	{
		switch (value.charAt(1)) {
			case '0':
				return String.fromCharCode(0);
			case 'a':
				return String.fromCharCode(7);
			case 'b':
				return String.fromCharCode(8);
			case 't':
				return "\t";
			case "\t":
				return "\t";
			case 'n':
				return "\n";
			case 'v':
				return String.fromCharCode(11);
			case 'f':
				return String.fromCharCode(12);
			case 'r':
				return String.fromCharCode(13);
			case 'e':
				return "\x1b";
			case ' ':
				return ' ';
			case '"':
				return '"';
			case '/':
				return '/';
			case '\\':
				return '\\';
			case 'N':
				// U+0085 NEXT LINE
				return "\x00\x85";
			case '_':
				// U+00A0 NO-BREAK SPACE
				return "\x00\xA0";
			case 'L':
				// U+2028 LINE SEPARATOR
				return "\x20\x28";
			case 'P':
				// U+2029 PARAGRAPH SEPARATOR
				return "\x20\x29";
			case 'x':
				return this.pack('n', new YamlInline().hexdec(value.substr(2, 2)));
			case 'u':
				return this.pack('n', new YamlInline().hexdec(value.substr(2, 4)));
			case 'U':
				return this.pack('N', new YamlInline().hexdec(value.substr(2, 8)));
		}
	},
	
	/**
	 * @see http://phpjs.org/functions/pack
	 * @warning only modes used above copied
	 */
	 pack: function(B){var g=0,o=1,m="",l="",z=0,p=[],E,s,C,I,h,c;var d,b,x,H,u,e,A,q,D,t,w,a,G,F,y,v,f;while(g<B.length){E=B.charAt(g);s="";g++;while((g<B.length)&&(B.charAt(g).match(/[\d\*]/)!==null)){s+=B.charAt(g);g++}if(s===""){s="1"}switch(E){case"n":if(s==="*"){s=arguments.length-o}if(s>(arguments.length-o)){throw new Error("Warning:  pack() Type "+E+": too few arguments")}for(z=0;z<s;z++){m+=String.fromCharCode(arguments[o]>>8&255);m+=String.fromCharCode(arguments[o]&255);o++}break;case"N":if(s==="*"){s=arguments.length-o}if(s>(arguments.length-o)){throw new Error("Warning:  pack() Type "+E+": too few arguments")}for(z=0;z<s;z++){m+=String.fromCharCode(arguments[o]>>24&255);m+=String.fromCharCode(arguments[o]>>16&255);m+=String.fromCharCode(arguments[o]>>8&255);m+=String.fromCharCode(arguments[o]&255);o++}break;default:throw new Error("Warning:  pack() Type "+E+": unknown format code")}}if(o<arguments.length){throw new Error("Warning: pack(): "+(arguments.length-o)+" arguments unused")}return m}
}

// Regex fragment that matches an escaped character in a double quoted
// string.
// why escape quotes, ffs!
YamlUnescaper.REGEX_ESCAPED_CHARACTER = '\\\\([0abt\tnvfre "\\/\\\\N_LP]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})';

/**
 * YamlDumper dumps JS variables to YAML strings.
 *
 * @author Fabien Potencier <fabien@symfony.com>
 */
var YamlDumper = function(){};
YamlDumper.prototype =
{
	/**
	 * Dumps a JS value to YAML.
	 *
	 * @param	mixed	 input	The JS value
	 * @param	integer inline The level where you switch to inline YAML
	 * @param	integer indent The level o indentation indentation (used internally)
	 *
	 * @return string	The YAML representation of the JS value
	 */
	dump: function(input, inline, indent)
	{
		if ( inline == null ) inline = 0;
		if ( indent == null ) indent = 0;
		var output = '';
		var prefix = indent ? this.strRepeat(' ', indent) : '';
		var yaml;
		if (!this.numSpacesForIndentation) this.numSpacesForIndentation = 2;

		if ( inline <= 0 || !this.isObject(input) || this.isEmpty(input) )
		{
			yaml = new YamlInline();
			output += prefix + yaml.dump(input);
		}
		else
		{
			var isAHash = !this.arrayEquals(this.getKeys(input), this.range(0,input.length - 1));
			var willBeInlined;
			
			for ( var key in input )
			{
				if ( input.hasOwnProperty(key) )
				{
					willBeInlined = inline - 1 <= 0 || !this.isObject(input[key]) || this.isEmpty(input[key]);
					
					if ( isAHash ) yaml = new YamlInline();
					
					output += 
						prefix + '' +
						(isAHash ? yaml.dump(key)+':' : '-') + '' +
						(willBeInlined ? ' ' : "\n") + '' +
						this.dump(input[key], inline - 1, (willBeInlined ? 0 : indent + this.numSpacesForIndentation)) + '' +
						(willBeInlined ? "\n" : '');
				}
			}
		}

		return output;
	},
	
	strRepeat: function(str /* String */, count /* Integer */)
	{
		var i;
		var result = '';
		for ( i = 0; i < count; i++ ) result += str;
		return result;
	},
	
	isObject: function(input)
	{
		return this.isDefined(input) && typeof(input) == 'object';
	},
	
	isEmpty: function(input)
	{
		var ret = input == undefined || input == null || input == '' || input == 0 || input == "0" || input == false;
		if ( !ret && typeof(input) == "object" && !(input instanceof Array)){
			var propCount = 0;
			for ( var key in input )
				if ( input.hasOwnProperty(key) ) propCount++;
			ret = !propCount;
		}
		return ret;
	},
	
	isDefined: function(input)
	{
		return input != undefined && input != null;
	},
	
	getKeys: function(tab)
	{
		var ret = [];
		
		for ( var name in tab )
		{
			if ( tab.hasOwnProperty(name) )
			{
				ret.push(name);
			}
		}
		
		return ret;
	},
	
	range: function(start, end)
	{
		if ( start > end ) return [];
		
		var ret = [];
		
		for ( var i = start; i <= end; i++ )
		{
			ret.push(i);
		}
		
		return ret;
	},
	
	arrayEquals: function(a,b)
	{
		if ( a.length != b.length ) return false;
		
		var len = a.length;
		
		for ( var i = 0; i < len; i++ )
		{
			if ( a[i] != b[i] ) return false;
		}
		
		return true;
	}
};
})();

define("yaml-js", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.YAML;
    };
}(this)));

define('extensions/yamlFrontMatterParser',[
    "classes/Extension",
    "yaml-js",
    ], function(Extension, YAML) {

    var yamlFrontMatterParser = new Extension("yamlFrontMatterParser", "YAML front matter");

    var eventMgr = undefined;
    yamlFrontMatterParser.onEventMgrCreated = function(eventMgrParameter) {
        eventMgr = eventMgrParameter;
    };

    var fileDesc = undefined;
    yamlFrontMatterParser.onFileSelected = function(fileDescParam) {
        fileDesc = fileDescParam;
    };

    var regex = /^(\s*-{3}\s*\n([\w\W]+?)\n\s*-{3}\s*\n)?([\w\W]*)*/;
    yamlFrontMatterParser.onPagedownConfigure = function(editor) {
        var converter = editor.getConverter();
        converter.hooks.chain("preConversion", function(text) {
            var results = regex.exec(text),
                yaml;

            if ((yaml = results[2]) && (!fileDesc.frontMatter || fileDesc.frontMatter._yaml != yaml)) {
                fileDesc.frontMatter = undefined;
                try {
                    fileDesc.frontMatter = YAML.parse(yaml);
                    fileDesc.frontMatter._yaml = yaml;
                }
                catch (e) {}
            }
            eventMgr.onMarkdownTrim((results[1] || '').length);
            return results[3];
        });
    };

    return yamlFrontMatterParser;
});
define('extensions/markdownSectionParser',[
    "classes/Extension"
], function(Extension) {

    var markdownSectionParser = new Extension("markdownSectionParser", "Markdown section parser");

    var eventMgr = undefined;
    markdownSectionParser.onEventMgrCreated = function(eventMgrParameter) {
        eventMgr = eventMgrParameter;
    };

    markdownSectionParser.onPagedownConfigure = function(editor) {
        var converter = editor.getConverter();
        converter.hooks.chain("preConversion", function(text) {
            eventMgr.previewStartTime = new Date();
            var tmpText = text + "\n\n";
            var sectionList = [], offset = 0;
            // Look for titles (excluding gfm blocs)
            tmpText.replace(/^```.*\n[\s\S]*?\n```|(^.+[ \t]*\n=+[ \t]*\n+|^.+[ \t]*\n-+[ \t]*\n+|^\#{1,6}[ \t]*.+?[ \t]*\#*\n+)/gm, function(match, title, matchOffset) {
                if(title) {
                    // We just found a title which means end of the previous
                    // section
                    // Exclude last \n of the section
                    sectionList.push(tmpText.substring(offset, matchOffset));
                    offset = matchOffset;
                }
                return "";
            });
            // Last section
            sectionList.push(tmpText.substring(offset, text.length));
            eventMgr.onSectionsCreated(sectionList);
            return text;
        });
    };

    return markdownSectionParser;
});
define('text!html/partialRenderingSettingsBlock.html',[],function () { return '<p>Renders modified sections only.</p>\n<blockquote>\n\t<b>NOTE:</b> Document sections are based on title elements (h1, h2...). Therefore if\n\tyour document does not contain any title, performance will not be increased.\n</blockquote>';});

define('extensions/partialRendering',[
    "underscore",
    "crel",
    "classes/Extension",
    "text!html/partialRenderingSettingsBlock.html",
], function(_, crel, Extension, partialRenderingSettingsBlockHTML) {

    var partialRendering = new Extension("partialRendering", "Partial Rendering", true);
    partialRendering.settingsBlock = partialRenderingSettingsBlockHTML;

    var converter = undefined;
    var sectionCounter = 0;
    var sectionList = [];
    var linkDefinition = undefined;
    var sectionsToRemove = [];
    var modifiedSections = [];
    var insertBeforeSection = undefined;
    var fileChanged = false;
    function updateSectionList(newSectionList, newLinkDefinition) {
        modifiedSections = [];
        sectionsToRemove = [];
        insertBeforeSection = undefined;

        // Render everything if file or linkDefinition changed
        if(fileChanged === true || linkDefinition != newLinkDefinition) {
            fileChanged = false;
            linkDefinition = newLinkDefinition;
            sectionsToRemove = sectionList;
            sectionList = newSectionList;
            modifiedSections = newSectionList;
            return;
        }

        // Find modified section starting from top
        var leftIndex = sectionList.length;
        _.some(sectionList, function(section, index) {
            if(index >= newSectionList.length || section.text != newSectionList[index].text) {
                leftIndex = index;
                return true;
            }
        });
        
        // Find modified section starting from bottom
        var rightIndex = -sectionList.length;
        _.some(sectionList.slice().reverse(), function(section, index) {
            if(index >= newSectionList.length || section.text != newSectionList[newSectionList.length - index - 1].text) {
                rightIndex = -index;
                return true;
            }
        });
        
        if(leftIndex - rightIndex > sectionList.length) {
            // Prevent overlap
            rightIndex = leftIndex - sectionList.length;
        }

        // Create an array composed of left unmodified, modified, right
        // unmodified sections
        var leftSections = sectionList.slice(0, leftIndex);
        modifiedSections = newSectionList.slice(leftIndex, newSectionList.length + rightIndex);
        var rightSections = sectionList.slice(sectionList.length + rightIndex, sectionList.length);
        insertBeforeSection = _.first(rightSections);
        sectionsToRemove = sectionList.slice(leftIndex, sectionList.length + rightIndex);
        sectionList = leftSections.concat(modifiedSections).concat(rightSections);
    }
    var doFootnotes = false;
    var hasFootnotes = false;
    partialRendering.onSectionsCreated = function(sectionListParam) {

        var newSectionList = [];
        var newLinkDefinition = '\n';
        hasFootnotes = false;
        _.each(sectionListParam, function(text) {
            text += "\n\n";

            // Strip footnotes
            if(doFootnotes) {
                text = text.replace(/^```.*\n[\s\S]*?\n```|\n[ ]{0,3}\[\^(.+?)\]\:[ \t]*\n?([\s\S]*?)\n{1,2}((?=\n[ ]{0,3}\S)|$)/g, function(wholeMatch, footnote) {
                    if(footnote) {
                        hasFootnotes = true;
                        newLinkDefinition += wholeMatch.replace(/^\s*\n/gm, '') + '\n';
                        return "";
                    }
                    return wholeMatch;
                });
            }

            // Strip link definitions
            text = text.replace(/^```.*\n[\s\S]*?\n```|^[ ]{0,3}\[(.+)\]:[ \t]*\n?[ \t]*<?(\S+?)>?(?=\s|$)[ \t]*\n?[ \t]*((\n*)["(](.+?)[")][ \t]*)?(?:\n+)/gm, function(wholeMatch, link) {
                if(link) {
                    newLinkDefinition += wholeMatch.replace(/^\s*\n/gm, '') + '\n';
                    return "";
                }
                return wholeMatch;
            });

            // Skip space only sections
            if(/\S/.test(text)) {
                // Add section to the newSectionList
                newSectionList.push({
                    id: ++sectionCounter,
                    text: text + '\n'
                });
            }
        });

        updateSectionList(newSectionList, newLinkDefinition);
    };

    var footnoteContainerElt = undefined;
    var previewContentsElt = undefined;
    var footnoteMap = {};
    function refreshSections() {

        // Remove outdated sections
        _.each(sectionsToRemove, function(section) {
            var sectionElt = document.getElementById("wmd-preview-section-" + section.id);
            previewContentsElt.removeChild(sectionElt);
        });

        var wmdPreviewElt = document.getElementById("wmd-preview");
        var childNode = wmdPreviewElt.firstChild;
        var newSectionEltList = document.createDocumentFragment();
        _.each(modifiedSections, function(section) {
            var sectionElt = crel('div', {
                id: 'wmd-preview-section-' + section.id,
                class: 'wmd-preview-section preview-content'
            });
            var isFirst = true;
            while (childNode) {
                var nextNode = childNode.nextSibling;
                if(isFirst === false && /(^| )wmd-title($| )/.test(childNode.className)) {
                    // Stop when encountered the next wmd-title
                    break;
                }
                isFirst = false;
                if(childNode.tagName == 'DIV' && childNode.className == 'footnotes') {
                    _.each(childNode.querySelectorAll("ol > li"), function(footnoteElt) {
                        // Store each footnote in our footnote map
                        var id = footnoteElt.id.substring(3);
                        footnoteMap[id] = footnoteElt;
                    });
                }
                else {
                    sectionElt.appendChild(childNode);
                }
                childNode = nextNode;
            }
            newSectionEltList.appendChild(sectionElt);
        });
        wmdPreviewElt.innerHTML = '';
        var insertBeforeElt = footnoteContainerElt;
        if(insertBeforeSection !== undefined) {
            insertBeforeElt = document.getElementById("wmd-preview-section-" + insertBeforeSection.id);
        }
        previewContentsElt.insertBefore(newSectionEltList, insertBeforeElt);

        // Rewrite footnotes in the footer and update footnote numbers
        footnoteContainerElt.innerHTML = '';
        var usedFootnoteIds = [];
        if(hasFootnotes === true) {
            var footnoteElts = crel('ol');
            _.each(previewContentsElt.querySelectorAll('a.footnote'), function(elt, index) {
                elt.textContent = index + 1;
                var id = elt.id.substring(6);
                usedFootnoteIds.push(id);
                footnoteElts.appendChild(footnoteMap[id].cloneNode(true));
            });
            if(usedFootnoteIds.length > 0) {
                // Append the whole footnotes at the end of the document
                footnoteContainerElt.appendChild(crel('div', {
                    class: 'footnotes'
                }, crel('hr'), footnoteElts));
            }
            // Keep used footnotes only in our map
            footnoteMap = _.pick(footnoteMap, usedFootnoteIds);
        }
    }

    partialRendering.onPagedownConfigure = function(editor) {
        converter = editor.getConverter();
        converter.hooks.chain("preConversion", function(text) {
            var result = _.map(modifiedSections, function(section) {
                return section.text;
            });
            result.push(linkDefinition + "\n\n");
            return result.join("");
        });
        editor.hooks.chain("onPreviewRefresh", function() {
            refreshSections();
        });
    };

    partialRendering.onExtraExtensions = function(extraExtensions) {
        doFootnotes = _.some(extraExtensions, function(extension) {
            return extension == "footnotes";
        });
    };
    
    partialRendering.onReady = function() {
        footnoteContainerElt = crel('div', {
            id: 'wmd-preview-section-footnotes',
            class: 'preview-content'
        });
        previewContentsElt = document.getElementById("preview-contents");
        previewContentsElt.appendChild(footnoteContainerElt);
    };

    partialRendering.onFileSelected = function() {
        fileChanged = true;
    };

    return partialRendering;
});
define('text!html/buttonMarkdownSyntax.html',[],function () { return '<button class="btn btn-default dropdown-toggle" title="Markdown syntax" data-toggle="dropdown">\n\t<i class="icon-help-circled"></i>\n</button>\n<div class="dropdown-menu pull-right">\n\t<h3>Markdown syntax</h3>\n\t<div class="markdown-syntax">\n<h4>Phrase Emphasis</h4>\n\n<pre><code>*italic*   **bold**\n_italic_   __bold__\n</code></pre>\n\n<h4>Links</h4>\n\n<p>Inline:</p>\n\n<pre><code>An [example](http://url.com/ "Title")\n</code></pre>\n\n<p>Reference-style labels (titles are optional):</p>\n\n<pre><code>An [example][id]. Then, anywhere\nelse in the doc, define the link:\n\n  [id]: http://example.com/  "Title"\n</code></pre>\n\n<h4>Images</h4>\n\n<p>Inline (titles are optional):</p>\n\n<pre><code>![alt text](/path/img.jpg "Title")\n</code></pre>\n\n<p>Reference-style:</p>\n\n<pre><code>![alt text][id]\n\n[id]: /url/to/img.jpg "Title"\n</code></pre>\n\n<h4>Headers</h4>\n\n<p>Setext-style:</p>\n\n<pre><code>Header 1\n========\n\nHeader 2\n--------\n</code></pre>\n\n<p>atx-style (closing #\'s are optional):</p>\n\n<pre><code># Header 1 #\n\n## Header 2 ##\n\n###### Header 6\n</code></pre>\n\n<h4>Lists</h4>\n\n<p>Ordered, without paragraphs:</p>\n\n<pre><code>1.  Foo\n2.  Bar\n</code></pre>\n\n<p>Unordered, with paragraphs:</p>\n\n<pre><code>*   A list item.\n\n    With multiple paragraphs.\n\n*   Bar\n</code></pre>\n\n<p>You can nest them:</p>\n\n<pre><code>*   Abacus\n    * answer\n*   Bubbles\n    1.  bunk\n    2.  bupkis\n        * BELITTLER\n    3. burper\n*   Cunning\n</code></pre>\n\n<h4>Blockquotes</h4>\n\n<pre><code>&gt; Email-style angle brackets\n&gt; are used for blockquotes.\n\n&gt; &gt; And, they can be nested.\n\n&gt; #### Headers in blockquotes\n&gt; \n&gt; * You can quote a list.\n&gt; * Etc.\n</code></pre>\n\n<h4>Code Spans</h4>\n\n<pre><code>`&lt;code&gt;` spans are delimited\nby backticks.\n\nYou can include literal backticks\nlike `` `this` ``.\n</code></pre>\n\n<h4>Preformatted Code Blocks</h4>\n\n<p>Indent every line of a code block by at least 4 spaces or 1 tab.</p>\n\n<pre><code>This is a normal paragraph.\n\n    This is a preformatted\n    code block.\n</code></pre>\n\n<h4>Horizontal Rules</h4>\n\n<p>Three or more dashes or asterisks:</p>\n\n<pre><code>---\n\n* * *\n\n- - - - \n</code></pre>\n\n<h4>Manual Line Breaks</h4>\n\n<p>End a line with two or more spaces:</p>\n\n<pre><code>Roses are red,   \nViolets are blue.\n</code></pre>\n\n<blockquote>Based on the <a target="_blank" href="https://github.com/fletcher/MultiMarkdown/blob/master/Documentation/Markdown%20Syntax.md">Markdown syntax guide</a>, by Fletcher T. Penney.</blockquote>\n    </div>\n</div>\n';});

define('extensions/buttonMarkdownSyntax',[
    "jquery",
    "classes/Extension",
    "text!html/buttonMarkdownSyntax.html",
], function($, Extension, buttonMarkdownSyntaxHTML) {

    var buttonMarkdownSyntax = new Extension("buttonMarkdownSyntax", 'Button "Markdown syntax', true, true);
    buttonMarkdownSyntax.settingsBlock = '<p>Adds a "Markdown syntax" button over the preview.</p>';

    buttonMarkdownSyntax.onCreatePreviewButton = function() {
        return buttonMarkdownSyntaxHTML;
    };

    return buttonMarkdownSyntax;

});
define('extensions/googleAnalytics',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "settings",
    "config",
], function($, _, utils, Extension, settings) {

    var googleAnalytics = new Extension("googleAnalytics", "Google Analytics", true);
    googleAnalytics.settingsBlock = '<p>Sends anonymous statistics about usage and errors to help improve StackEdit.</p>';

    var isLoaded = false;
    var isOffline = false;
    window["_gaq"] = [];

    var init = function() {
        if(isLoaded === false && isOffline === false) {
            var gaUrl = "/ga.js";
            if(location.search.match(/(\?|&)console/)) {
                gaUrl = "/u/ga_debug.js";
            }
            $.ajax({
                url: "http://www.google-analytics.com" + gaUrl,
                dataType: "script"
            }).done(function() {
                isLoaded = true;
            });
        }
    };

    var lastPageView = 0;
    function trackPageView() {
        if(utils.currentTime - lastPageView > 180000) {
            _gaq.push([
                '_trackPageview'
            ]);
            lastPageView = utils.currentTime;
        }
    }
    googleAnalytics.onPeriodicRun = function() {
        trackPageView();
    };

    googleAnalytics.onReady = function() {

        // First configure GA
        _gaq.push([
            '_setAccount',
            GOOGLE_ANALYTICS_ACCOUNT_ID
        ]);
        trackPageView();

        // Collect informations about user settings
        _gaq.push([
            '_trackEvent',
            "Settings",
            'layoutOrientation',
            "" + settings.layoutOrientation
        ]);
        _gaq.push([
            '_trackEvent',
            "Settings",
            'lazyRendering',
            "" + settings.lazyRendering
        ]);
        _gaq.push([
            '_trackEvent',
            "Settings",
            'editorFontFamily',
            "" + settings.editorFontFamily
        ]);
        _gaq.push([
                   '_trackEvent',
                   "Settings",
                   'editorFontSize',
                   "" + settings.editorFontSize
                   ]);
        // Check if user has removed back links
        _gaq.push([
            '_trackEvent',
            "Settings",
            'defaultContent backlink',
            "" + (settings.defaultContent.indexOf(MAIN_URL) !== -1)
        ]);
        _gaq.push([
            '_trackEvent',
            "Settings",
            'commitMsg backlink',
            "" + (settings.commitMsg.indexOf(MAIN_URL) !== -1)
        ]);
        // Check if user has changed sshProxy
        _gaq.push([
            '_trackEvent',
            "Settings",
            'sshProxy unchanged',
            "" + (settings.sshProxy == SSH_PROXY_URL)
        ]);
        // Check if extensions have been disabled
        _.each(settings.extensionSettings, function(config, extensionId) {
            _gaq.push([
                '_trackEvent',
                "Extensions",
                extensionId + " enabled",
                "" + (config.enabled === true)
            ]);
        });

        // Catch window JavaScript errors
        window.onerror = function(message, url, line) {
            _gaq.push([
                "_trackEvent",
                "Error",
                message,
                url + ":" + line + utils.formatEventList()
            ]);
        };

        init();
    };
    googleAnalytics.onOfflineChanged = function(isOfflineParam) {
        isOffline = isOfflineParam;
        init();
    };

    var startTime = 0;
    googleAnalytics.onSyncRunning = function(isRunning) {
        if(isRunning === true) {
            startTime = new Date().getTime();
        }
    };
    googleAnalytics.onPublishRunning = function(isRunning) {
        if(isRunning === true) {
            startTime = new Date().getTime();
        }
    };

    // Log sync time
    googleAnalytics.onSyncSuccess = function() {
        var endTime = new Date().getTime();
        _gaq.push([
            '_trackTiming',
            'Sync',
            'SyncTime',
            endTime - startTime
        ]);
    };
    // Log import frequency and provider
    googleAnalytics.onSyncImportSuccess = function(fileDescList, provider) {
        _gaq.push([
            '_trackEvent',
            'Sync',
            'SyncImport',
        ]);
        _gaq.push([
            '_trackEvent',
            'Sync',
            'SyncImport provider',
            provider.providerId
        ]);
    };
    // Log export frequency and provider
    googleAnalytics.onSyncExportSuccess = function(fileDesc, syncAttributes) {
        _gaq.push([
            '_trackEvent',
            'Sync',
            'SyncExport',
        ]);
        _gaq.push([
            '_trackEvent',
            'Sync',
            'SyncExport provider',
            syncAttributes.provider.providerId
        ]);
    };
    // Log publish time and provider
    googleAnalytics.onPublishSuccess = function(fileDesc) {
        var endTime = new Date().getTime();
        _gaq.push([
            '_trackTiming',
            'Publish',
            'PublishSuccess',
            endTime - startTime
        ]);
        _.each(fileDesc.publishLocations, function(publishAttributes) {
            _gaq.push([
                '_trackEvent',
                'Publish',
                'PublishSuccess provider',
                publishAttributes.provider.providerId
            ]);
        });
    };
    // Log new publication's provider
    googleAnalytics.onNewPublishSuccess = function(fileDesc, publishAttributes) {
        _gaq.push([
            '_trackEvent',
            'Publish',
            'NewPublish provider',
            publishAttributes.provider.providerId
        ]);
    };

    // Log error messages
    googleAnalytics.onError = function(error) {
        if(_.isString(error) || !error.message) {
            return;
        }
        _gaq.push([
            '_trackEvent',
            "Error",
            "message",
            error.message + utils.formatEventList()
        ]);
    };

    return googleAnalytics;
});
define('text!html/dialogAbout.html',[],function () { return '\n<div class="modal-dialog">\n\t<div class="modal-content">\n\n\t\t<div class="modal-header">\n\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t<img data-stackedit-src="stackedit-promo.png" width="240" height="60" />\n\t\t</div>\n\t\t<div class="modal-body">\n\t\t\t<dl>\n\t\t\t\t<dt>About:</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t<a target="_blank" href="https://github.com/benweet/stackedit/">GitHub\n\t\t\t\t\t\tproject</a> / <a target="_blank"\n\t\t\t\t\t\thref="https://github.com/benweet/stackedit/issues">issue\n\t\t\t\t\t\ttracker</a><br /> <a target="_blank"\n\t\t\t\t\t\thref="https://chrome.google.com/webstore/detail/stackedit/iiooodelglhkcpgbajoejffhijaclcdg">Chrome\n\t\t\t\t\t\tapp</a> (thanks for your review!)<br /> <a target="_blank"\n\t\t\t\t\t\thref="https://twitter.com/stackedit/">Follow on Twitter</a><br />\n\t\t\t\t\t<a target="_blank" href="https://www.facebook.com/stackedit/">Follow\n\t\t\t\t\t\ton Facebook</a><br /> <a target="_blank"\n\t\t\t\t\t\thref="https://plus.google.com/110816046787593496375"\n\t\t\t\t\t\trel="publisher">Follow on Google+</a><br />\n\t\t\t\t</dd>\n\t\t\t</dl>\n\t\t\t<dl>\n\t\t\t\t<dt>Developers:</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t<a target="_blank" href="http://www.benoitschweblin.com">Benoit\n\t\t\t\t\t\tSchweblin</a><br /> Pete Eigel (contributor)\n\t\t\t\t</dd>\n\t\t\t</dl>\n\t\t\t<dl>\n\t\t\t\t<dt>Credit:</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t<% _.each(libraries, function(url, name) { %> <a target="_blank"\n\t\t\t\t\t\thref="<%= url %>"><%= name %></a><br /> <% }); %>\n\t\t\t\t</dd>\n\t\t\t</dl>\n\t\t\t<dl>\n\t\t\t\t<dt>Related projects:</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t<% _.each(projects, function(url, name) { %> <a target="_blank"\n\t\t\t\t\t\thref="<%= url %>"><%= name %></a><br /> <% }); %>\n\t\t\t\t</dd>\n\t\t\t</dl>\n\t\t\t<p>\n\t\t\t\tStackEdit <%= version %><br /> Copyright 2013 <a\n\t\t\t\t\ttarget="_blank" href="http://www.benoitschweblin.com">Benoit\n\t\t\t\t\tSchweblin</a><br /> Licensed under an <a target="_blank"\n\t\t\t\t\thref="http://www.apache.org/licenses/LICENSE-2.0">Apache\n\t\t\t\t\tLicense</a>\n\t\t\t</p>\n\t\t</div>\n\t\t<div class="modal-footer">\n\t\t\t<a href="#" class="btn btn-primary" data-dismiss="modal">Close</a>\n\t\t</div>\n\t</div>\n</div>\n';});

define('extensions/dialogAbout',[
    "underscore",
    "utils",
    "classes/Extension",
    "text!html/dialogAbout.html",
    "config"
], function(_, utils, Extension, dialogAboutHTML) {

    var dialogAbout = new Extension("dialogAbout", 'Dialog "About"');

    var libraries = {
        "ACE": "http://ace.c9.io/",
        "Bootstrap": "http://getbootstrap.com/",
        "Bootstrap Tour": "http://bootstraptour.com/",
        "crel": "https://github.com/KoryNunn/crel",
        "Dropbox-js": "https://github.com/dropbox/dropbox-js",
        "FileSaver.js": "https://github.com/eligrey/FileSaver.js/",
        "Fontello": "http://fontello.com/",
        "Font Awesome and others...": "res/libs/fontello/LICENSE.txt",
        "Gatekeeper": "https://github.com/prose/gatekeeper",
        "Github.js": "https://github.com/michael/github",
        "Highlight.js": "http://softwaremaniacs.org/soft/highlight/en/",
        "jGrowl": "https://github.com/stanlemon/jGrowl/",
        "jQuery": "http://jquery.com/",
        "LESS": "http://lesscss.org/",
        "MathJax": "http://www.mathjax.org/",
        "Mousetrap": "http://craig.is/killing/mice",
        "PageDown ACE": "https://github.com/benweet/pagedown-ace",
        "PageDown Extra": "https://github.com/jmcmanus/pagedown-extra/",
        "Prettify": "https://code.google.com/p/google-code-prettify/",
        "RequireJS": "http://requirejs.org/",
        "RequireJS LESS plugin": "https://github.com/guybedford/require-less",
        "stacktrace.js": "http://stacktracejs.com/",
        "to-markdown": "https://github.com/domchristie/to-markdown",
        "UI Layout": "http://layout.jquery-dev.net/",
        "Underscore.js": "http://underscorejs.org/",
        "waitForImages": "https://github.com/alexanderdickson/waitForImages",
        "XRegExp": "https://github.com/slevithan/xregexp"
    };

    var projects = {
        "StackEdit Download Proxy": "https://github.com/benweet/stackedit-download-proxy",
        "StackEdit Picasa Proxy": "https://github.com/benweet/stackedit-picasa-proxy",
        "StackEdit SSH Proxy": "https://github.com/benweet/stackedit-ssh-proxy",
        "StackEdit Tumblr Proxy": "https://github.com/benweet/stackedit-tumblr-proxy",
        "StackEdit WordPress Proxy": "https://github.com/benweet/stackedit-wordpress-proxy",
    };

    dialogAbout.onReady = function() {
        utils.addModal('modal-about', _.template(dialogAboutHTML, {
            libraries: libraries,
            projects: projects,
            version: VERSION
        }));
    };

    return dialogAbout;

});
define('text!html/dialogManagePublicationLocation.html',[],function () { return '<div class="input-group">\n\t<span class="input-group-addon" title="<%= publishAttributes.provider.providerName %>">\n\t\t<i class="icon-provider-<%= publishAttributes.provider.providerId %>"></i>\n\t</span> <input class="form-control" type="text"\n\t\tvalue="<%= publishDesc %>" disabled />\n\t<div class="input-group-btn">\n\t\t<a class="btn btn-link remove-button" title="Remove this location"\n\t\t\tdata-publish-index="<%= publishAttributes.publishIndex %>"><i\n\t\t\tclass="icon-trash"></i></a>\n\t</div>\n</div>\n';});

define('extensions/dialogManagePublication',[
    "jquery",
    "underscore",
    "classes/Extension",
    "text!html/dialogManagePublicationLocation.html",
], function($, _, Extension, dialogManagePublicationLocationHTML) {

    var dialogManagePublication = new Extension("dialogManagePublication", 'Dialog "Manage publication"', false, true);

    var eventMgr = undefined;
    dialogManagePublication.onEventMgrCreated = function(eventMgrParameter) {
        eventMgr = eventMgrParameter;
    };

    var fileDesc = undefined;
    var publishListElt = undefined;
    var $msgPublishListElt = undefined;
    var $msgNoPublishElt = undefined;
    var refreshDialog = function(fileDescParameter) {
        if(fileDescParameter !== undefined && fileDescParameter !== fileDesc) {
            return;
        }

        if(_.size(fileDesc.publishLocations) > 0) {
            $msgPublishListElt.removeClass("hide");
            $msgNoPublishElt.addClass("hide");
        }
        else {
            $msgPublishListElt.addClass("hide");
            $msgNoPublishElt.removeClass("hide");
        }
        
        var publishListHtml = _.reduce(fileDesc.publishLocations, function(result, publishAttributes) {
            var formattedAttributes = _.omit(publishAttributes, "provider", "publishIndex", "sharingLink");
            if(formattedAttributes.password) {
                formattedAttributes.password = "********";
            }
            formattedAttributes = JSON.stringify(formattedAttributes).replace(/{|}|"/g, "").replace(/,/g, ", ");
            return result + _.template(dialogManagePublicationLocationHTML, {
                publishAttributes: publishAttributes,
                publishDesc: formattedAttributes
            });
        }, '');
        publishListElt.innerHTML = publishListHtml;
        
        _.each(publishListElt.querySelectorAll('.remove-button'), function(removeButtonElt) {
            var $removeButtonElt = $(removeButtonElt);
            var publishAttributes = fileDesc.publishLocations[$removeButtonElt.data('publishIndex')];
            $removeButtonElt.click(function() {
                fileDesc.removePublishLocation(publishAttributes);
                eventMgr.onPublishRemoved(fileDesc, publishAttributes);
            });
        });
    };

    dialogManagePublication.onFileSelected = function(fileDescParameter) {
        fileDesc = fileDescParameter;
        refreshDialog(fileDescParameter);
    };

    dialogManagePublication.onNewPublishSuccess = refreshDialog;
    dialogManagePublication.onPublishRemoved = refreshDialog;

    dialogManagePublication.onReady = function() {
        var modalElt = document.querySelector(".modal-manage-publish");
        publishListElt = modalElt.querySelector(".publish-list");
        $msgPublishListElt = $(modalElt.querySelectorAll(".msg-publish-list"));
        $msgNoPublishElt = $(modalElt.querySelectorAll(".msg-no-publish"));
    };

    return dialogManagePublication;

});
define('text!html/dialogManageSynchronizationLocation.html',[],function () { return '<div class="input-group">\n\t<span class="input-group-addon"\n\t\ttitle="<%= syncAttributes.provider.providerName %><%= syncAttributes.isRealtime ? \' (real time)\' : \'\' %>">\n\t\t<i\n\t\tclass="icon-provider-<%= syncAttributes.provider.providerId %><%= syncAttributes.isRealtime ? \' realtime\' : \'\' %>"></i>\n\t</span> <input class="form-control" type="text"\n\t\tvalue="<%= syncDesc %>" disabled />\n\t<div class="input-group-btn">\n\t\t<a class="btn btn-link remove-button" title="Remove this location"\n\t\t\tdata-sync-index="<%= syncAttributes.syncIndex %>"><i class="icon-trash"></i></a>\n\t</div>\n</div>\n';});

define('extensions/dialogManageSynchronization',[
    "jquery",
    "underscore",
    "classes/Extension",
    "text!html/dialogManageSynchronizationLocation.html",
], function($, _, Extension, dialogManageSynchronizationLocationHTML) {

    var dialogManageSynchronization = new Extension("dialogManageSynchronization", 'Dialog "Manage synchronization"', false, true);

    var eventMgr = undefined;
    dialogManageSynchronization.onEventMgrCreated = function(eventMgrParameter) {
        eventMgr = eventMgrParameter;
    };
    
    var synchronizer = undefined;
    dialogManageSynchronization.onSynchronizerCreated = function(synchronizerParameter) {
        synchronizer = synchronizerParameter;
    };

    var fileDesc = undefined;
    var syncListElt = undefined;
    var $msgSyncListElt = undefined;
    var $msgNoSyncElt = undefined;
    var refreshDialog = function(fileDescParameter) {
        if(fileDescParameter !== undefined && fileDescParameter !== fileDesc) {
            return;
        }

        if(_.size(fileDesc.syncLocations) > 0) {
            $msgSyncListElt.removeClass("hide");
            $msgNoSyncElt.addClass("hide");
        }
        else {
            $msgSyncListElt.addClass("hide");
            $msgNoSyncElt.removeClass("hide");
        }
        
        var syncListHtml = _.reduce(fileDesc.syncLocations, function(result, syncAttributes) {
            return result + _.template(dialogManageSynchronizationLocationHTML, {
                syncAttributes: syncAttributes,
                syncDesc: syncAttributes.id || syncAttributes.path
            });
        }, '');
        syncListElt.innerHTML = syncListHtml;
        
        _.each(syncListElt.querySelectorAll('.remove-button'), function(removeButtonElt) {
            var $removeButtonElt = $(removeButtonElt);
            var syncAttributes = fileDesc.syncLocations[$removeButtonElt.data('syncIndex')];
            $removeButtonElt.click(function() {
                synchronizer.tryStopRealtimeSync();
                fileDesc.removeSyncLocation(syncAttributes);
                eventMgr.onSyncRemoved(fileDesc, syncAttributes);
            });
        });
    };

    dialogManageSynchronization.onFileSelected = function(fileDescParameter) {
        fileDesc = fileDescParameter;
        refreshDialog(fileDescParameter);
    };

    dialogManageSynchronization.onSyncExportSuccess = refreshDialog;
    dialogManageSynchronization.onSyncRemoved = refreshDialog;

    dialogManageSynchronization.onReady = function() {
        var modalElt = document.querySelector(".modal-manage-sync");
        syncListElt = modalElt.querySelector(".sync-list");
        $msgSyncListElt = $(modalElt.querySelectorAll(".msg-sync-list"));
        $msgNoSyncElt = $(modalElt.querySelectorAll(".msg-no-sync"));
    };

    return dialogManageSynchronization;

});
/*
 * to-markdown - an HTML to Markdown converter
 *
 * Copyright 2011-2012, Dom Christie
 * Licenced under the MIT licence
 *
 */

(function() {
  
  var root = this;
  var toMarkdown = {};
  var isNode = false;
  
  if(typeof module !== 'undefined' && module.exports) {
    module.exports = toMarkdown;
    root.toMarkdown = toMarkdown;
    isNode = true;
  }
  else {
    root.toMarkdown = toMarkdown;
  }
  
  toMarkdown.converter = function(options) {
    
    if(options && options.elements && $.isArray(options.elements)) {
      ELEMENTS = ELEMENTS.concat(options.elements);
    }
    
    this.makeMd = function(input, callback) {
      var result;
      if(isNode) {
        var jsdom = require('jsdom');
        jsdom.env({
          html: input,
          scripts: [
            'http://code.jquery.com/jquery-1.6.4.min.js'
          ],
          done: function(errors, window) {
            if(typeof callback === 'function') {
              callback(process(input, window.$));
            }
          }
        });
      }
      else {
        result = process(input, $);
      }
      return result;
    };
  };
  
  var process = function(input, $) {
    // Escape potential ol triggers
    // see bottom of lists section: http://daringfireball.net/projects/markdown/syntax#list
    input = input.replace(/(\d+)\. /g, '$1\\. ');

    // Wrap in containing div
    var $container = $('<div/>');
    var $input = $container.html(input);

    // Remove whitespace
    $input.find('*:not(pre, code)').contents().filter(function() {
      return this.nodeType === 3 && (/^\s+$/.test(this.nodeValue));
    }).remove();
    
    var selectors = [];
    for(var i = 0, len = ELEMENTS.length; i < len; i++) {
      selectors.push(ELEMENTS[i].selector);
    }
    selectors = selectors.join(',');
    
    while($input.find(selectors).length) {
      for(var i = 0, len = ELEMENTS.length; i < len; i++) {

        // Find the innermost elements containing NO children that convert to markdown
        $matches = $input.find(ELEMENTS[i].selector + ':not(:has("' + selectors + '"))');

        $matches.each(function(j, el) {
          var $el = $(el);
          $el.before(ELEMENTS[i].replacement($el.html(), $el)).remove();
        });
      }
    }
    return cleanUp($input.html());
  };
  
  // =============
  // = Utilities =
  // =============
  
  var trimNewLines = function(str) {
    return str.replace(/^[\n\r\f]+|[\n\r\f]+$/g, '');
  };
  
  var decodeHtmlEntities = function(str) {
    return String(str).replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"');
  };

  var cleanUp = function(string) {
    string = string.replace(/^[\t\r\n]+|[\t\r\n]+$/g, ''); // trim leading/trailing whitespace
    string = string.replace(/\n\s+\n/g, '\n\n');
    string = string.replace(/\n{3,}/g, '\n\n'); // limit consecutive linebreaks to 2
    string = decodeHtmlEntities(string);
    return string;
  };
  
  var strongReplacement = function(innerHTML) {
    innerHTML = trimNewLines(innerHTML);
    return innerHTML ? '**' + innerHTML + '**' : '';
  };
  var emReplacement = function(innerHTML) {
    innerHTML = trimNewLines(innerHTML);
    return innerHTML ? '_' + innerHTML + '_' : '';
  };
  
  // ============
  // = Elements =
  // ============
  
  var ELEMENTS = [
    {
      selector: 'p',
      replacement: function(innerHTML, el) {
        innerHTML = $.trim(innerHTML);
        return innerHTML ? '\n\n' + innerHTML + '\n\n' : '';
      }
    },
    {
      selector: 'br',
      replacement: function(innerHTML, el) {
        return '\n';
      }
    },
    {
      selector: 'h1,h2,h3,h4,h5,h6',
      replacement: function(innerHTML, $el) {
        innerHTML = $.trim(innerHTML);
        var hLevel = $el.prop("nodeName").charAt(1),
            prefix = '';
        for(var i = 0; i < hLevel; i++) {
          prefix += '#';
        }
        return innerHTML ? '\n\n' + prefix + ' ' + innerHTML + '\n\n' : '';
      }
    },
    {
      selector: 'hr',
      replacement: function(innerHTML, el) {
        return '\n\n* * *\n\n';
      }
    },
    {
      selector: 'a[href]',
      replacement: function(innerHTML, $el) {
        if(innerHTML) {
          innerHTML = trimNewLines(innerHTML);
          var href = $el.attr('href'),
              title = $el.attr('title') || '';
          return '[' + innerHTML + ']' + '(' + href + (title ? ' "' + title + '"' : '') + ')';
        }
        else {
          return false;
        }
      }
    },
    {
      selector: 'b',
      replacement: strongReplacement
    },
    {
      selector: 'strong',
      replacement: strongReplacement
    },
    {
      selector: 'i',
      replacement: emReplacement
    },
    {
      selector: 'em',
      replacement: emReplacement
    },
    {
      selector: 'code',
      replacement: function(innerHTML, el) {
        innerHTML = trimNewLines(innerHTML);
        return innerHTML ? '`' + innerHTML + '`' : '';
      }
    },
    {
      selector: 'img',
      replacement: function(innerHTML, $el) {
        var alt = $el.attr('alt') || '',
            src = $el.attr('src') || '',
            title = $el.attr('title') || '';
        return '![' + alt + ']' + '(' + src + (title ? ' "' + title + '"' : '') + ')';
      }
    },
    {
      selector: 'pre',
      replacement: function(innerHTML, el) {
        if(/^\s*\`/.test(innerHTML)) {
          innerHTML = innerHTML.replace(/\`/g, '');
          return '    ' + innerHTML.replace(/\n/g, '\n    ');
        }
        else {
          return '';
        }
      }
    },
    {
      selector: 'li',
      replacement: function(innerHTML, $el) {
        innerHTML = innerHTML.replace(/^\s+|\s+$/, '').replace(/\n/gm, '\n    ');
        var prefix = '*   ';
        var suffix = '';
        var $parent = $el.parent();
        var $children = $parent.contents().filter(function() {
          return (this.nodeType === 1 && this.nodeName === 'LI') || (this.nodeType === 3);
        });
        var index = $children.index($el) + 1;

        prefix = $parent.is('ol') ? index + '.  ' : '*   ';
        if(index == $children.length) {
          if(!$el.parents('li').length) {
            suffix = '\n';
          }
          innerHTML = innerHTML.replace(/\s+$/, ''); // Trim
          $el.unwrap();
        }
        return prefix + innerHTML + suffix + '\n';
      }
    },
    {
      selector: 'blockquote',
      replacement: function(innerHTML, el) {
        innerHTML = innerHTML = $.trim(innerHTML).replace(/\n{3,}/g, '\n\n');
        innerHTML = innerHTML.replace(/\n/g, '\n&gt; ');
        return "&gt; " + innerHTML;
      }
    }
  ];

  var NON_MD_BLOCK_ELEMENTS = ['address', 'article', 'aside', 'audio', 'canvas', 'div', 'dl', 'dd', 'dt',
    'fieldset', 'figcaption', 'figure', 'footer', 'form', 'header', 'hgroup', 'output',
    'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'section', 'video'];

})();

define("toMarkdown", ["jquery"], (function (global) {
    return function () {
        var ret, fn;
        return ret || global.toMarkdown;
    };
}(this)));

define('extensions/dialogOpenHarddrive',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "toMarkdown",
    "config",
], function($, _, utils, Extension, toMarkdown) {

    var dialogOpenHarddrive = new Extension("dialogOpenHarddrive", 'Dialog "Open from"');

    var fileMgr = undefined;
    dialogOpenHarddrive.onFileMgrCreated = function(fileMgrParameter) {
        fileMgr = fileMgrParameter;
    };

    var eventMgr = undefined;
    dialogOpenHarddrive.onEventMgrCreated = function(eventMgrParameter) {
        eventMgr = eventMgrParameter;
    };

    var contentWrapper = undefined;
    var converter = undefined;
    var htmlContentWrapper = function(content) {
        return converter.makeMd(content);
    };
    function handleFileImport(evt) {
        evt.stopPropagation();
        evt.preventDefault();
        var files = (evt.dataTransfer || evt.target).files;
        $(".modal-import-harddrive-markdown, .modal-import-harddrive-html").modal("hide");
        _.each(files, function(file) {
            if($(evt.target).is("#wmd-input *") && file.name.match(/.(jpe?g|png|gif)$/)) {
                return;
            }
            var reader = new FileReader();
            reader.onload = (function(importedFile) {
                return function(e) {
                    var content = e.target.result;
                    if(content.match(/\uFFFD/)) {
                        eventMgr.onError(importedFile.name + " is a binary file.");
                        return;
                    }
                    content = contentWrapper ? contentWrapper(content) : content;
                    if(content === undefined) {
                        eventMgr.onError(importedFile.name + " is not a valid HTML file.");
                        return;
                    }
                    var title = importedFile.name;
                    var dotPosition = title.lastIndexOf(".");
                    title = dotPosition !== -1 ? title.substring(0, dotPosition) : title; 
                    var fileDesc = fileMgr.createFile(title, content);
                    fileMgr.selectFile(fileDesc);
                };
            })(file);
            var blob = file.slice(0, IMPORT_FILE_MAX_CONTENT_SIZE);
            reader.readAsText(blob);
        });
    }

    function handleMarkdownImport(evt) {
        contentWrapper = undefined;
        handleFileImport(evt);
    }
    
    function handleHtmlImport(evt) {
        contentWrapper = htmlContentWrapper;
        handleFileImport(evt);
    }
    
    function handleDragOver(evt) {
        evt.stopPropagation();
        evt.preventDefault();
        evt.dataTransfer.dropEffect = 'copy';
    }

    dialogOpenHarddrive.onReady = function() {
        // Create toMarkdown converter
        converter = new toMarkdown.converter();
        
        $("#input-file-import-harddrive-markdown").change(handleMarkdownImport);
        $('#dropzone-import-harddrive-markdown, #wmd-input').each(function() {
            this.addEventListener('dragover', handleDragOver, false);
            this.addEventListener('drop', handleMarkdownImport, false);
        });
        $("#input-file-import-harddrive-html").change(handleHtmlImport);
        $('#dropzone-import-harddrive-html').each(function() {
            this.addEventListener('dragover', handleDragOver, false);
            this.addEventListener('drop', handleHtmlImport, false);
        });
        $(".action-convert-html").click(function(e) {
            var content = utils.getInputTextValue("#input-convert-html", e);
            if(content === undefined) {
                return;
            }
            content = converter.makeMd(content);
            if(content === undefined) {
                eventMgr.onError("Invalid HTML code.");
                return;
            }
            var fileDesc = fileMgr.createFile(undefined, content);
            fileMgr.selectFile(fileDesc);
        });
    };

    return dialogOpenHarddrive;

});
define('extensions/documentTitle',[
    "jquery",
    "underscore",
    "classes/Extension",
], function($, _, Extension) {

    var documentTitle = new Extension("documentTitle", "Document Title");

    var layout = undefined;
    documentTitle.onLayoutCreated = function(layoutParameter) {
        layout = layoutParameter;
    };

    var fileDesc = undefined;
    var $fileTitleNavbar = undefined;
    var updateTitle = function(fileDescParameter) {
        if(fileDescParameter !== fileDesc) {
            return;
        }

        var title = fileDesc.title;
        document.title = "StackEdit - " + title;
        $fileTitleNavbar.html(fileDesc.composeTitle());
        $(".file-title").text(title);
        $(".input-file-title").val(title);

        if(layout !== undefined) {
            // Use defer to make sure UI has been updated
            _.defer(layout.resizeAll);
        }
    };

    documentTitle.onFileSelected = function(fileDescParameter) {
        fileDesc = fileDescParameter;
        updateTitle(fileDescParameter);
    };

    documentTitle.onTitleChanged = updateTitle;
    documentTitle.onSyncExportSuccess = updateTitle;
    documentTitle.onSyncRemoved = updateTitle;
    documentTitle.onNewPublishSuccess = updateTitle;
    documentTitle.onPublishRemoved = updateTitle;
    
    documentTitle.onReady = function() {
        $fileTitleNavbar = $(".file-title-navbar");
        // Add a scrolling effect on hover
        $fileTitleNavbar.hover(function() {
            var scrollLeft = $fileTitleNavbar[0].scrollWidth - $fileTitleNavbar.outerWidth();
            $fileTitleNavbar.stop(true, true).animate({
                    scrollLeft: scrollLeft
                }, scrollLeft * 15, 'linear');
        }, function() {
            $fileTitleNavbar.stop(true, true).scrollLeft(0);
        }).click(function() {
            $fileTitleNavbar.stop(true, true).scrollLeft(0);
        });
    };

    return documentTitle;

});
/*global define:false */
/**
 * Copyright 2013 Craig Campbell
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Mousetrap is a simple keyboard shortcut library for Javascript with
 * no external dependencies
 *
 * @version 1.4.5
 * @url craig.is/killing/mice
 */
(function(window, document, undefined) {

    /**
     * mapping of special keycodes to their corresponding keys
     *
     * everything in this dictionary cannot use keypress events
     * so it has to be here to map to the correct keycodes for
     * keyup/keydown events
     *
     * @type {Object}
     */
    var _MAP = {
            8: 'backspace',
            9: 'tab',
            13: 'enter',
            16: 'shift',
            17: 'ctrl',
            18: 'alt',
            20: 'capslock',
            27: 'esc',
            32: 'space',
            33: 'pageup',
            34: 'pagedown',
            35: 'end',
            36: 'home',
            37: 'left',
            38: 'up',
            39: 'right',
            40: 'down',
            45: 'ins',
            46: 'del',
            91: 'meta',
            93: 'meta',
            224: 'meta'
        },

        /**
         * mapping for special characters so they can support
         *
         * this dictionary is only used incase you want to bind a
         * keyup or keydown event to one of these keys
         *
         * @type {Object}
         */
        _KEYCODE_MAP = {
            106: '*',
            107: '+',
            109: '-',
            110: '.',
            111 : '/',
            186: ';',
            187: '=',
            188: ',',
            189: '-',
            190: '.',
            191: '/',
            192: '`',
            219: '[',
            220: '\\',
            221: ']',
            222: '\''
        },

        /**
         * this is a mapping of keys that require shift on a US keypad
         * back to the non shift equivelents
         *
         * this is so you can use keyup events with these keys
         *
         * note that this will only work reliably on US keyboards
         *
         * @type {Object}
         */
        _SHIFT_MAP = {
            '~': '`',
            '!': '1',
            '@': '2',
            '#': '3',
            '$': '4',
            '%': '5',
            '^': '6',
            '&': '7',
            '*': '8',
            '(': '9',
            ')': '0',
            '_': '-',
            '+': '=',
            ':': ';',
            '\"': '\'',
            '<': ',',
            '>': '.',
            '?': '/',
            '|': '\\'
        },

        /**
         * this is a list of special strings you can use to map
         * to modifier keys when you specify your keyboard shortcuts
         *
         * @type {Object}
         */
        _SPECIAL_ALIASES = {
            'option': 'alt',
            'command': 'meta',
            'return': 'enter',
            'escape': 'esc',
            'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'
        },

        /**
         * variable to store the flipped version of _MAP from above
         * needed to check if we should use keypress or not when no action
         * is specified
         *
         * @type {Object|undefined}
         */
        _REVERSE_MAP,

        /**
         * a list of all the callbacks setup via Mousetrap.bind()
         *
         * @type {Object}
         */
        _callbacks = {},

        /**
         * direct map of string combinations to callbacks used for trigger()
         *
         * @type {Object}
         */
        _directMap = {},

        /**
         * keeps track of what level each sequence is at since multiple
         * sequences can start out with the same sequence
         *
         * @type {Object}
         */
        _sequenceLevels = {},

        /**
         * variable to store the setTimeout call
         *
         * @type {null|number}
         */
        _resetTimer,

        /**
         * temporary state where we will ignore the next keyup
         *
         * @type {boolean|string}
         */
        _ignoreNextKeyup = false,

        /**
         * temporary state where we will ignore the next keypress
         *
         * @type {boolean}
         */
        _ignoreNextKeypress = false,

        /**
         * are we currently inside of a sequence?
         * type of action ("keyup" or "keydown" or "keypress") or false
         *
         * @type {boolean|string}
         */
        _nextExpectedAction = false;

    /**
     * loop through the f keys, f1 to f19 and add them to the map
     * programatically
     */
    for (var i = 1; i < 20; ++i) {
        _MAP[111 + i] = 'f' + i;
    }

    /**
     * loop through to map numbers on the numeric keypad
     */
    for (i = 0; i <= 9; ++i) {
        _MAP[i + 96] = i;
    }

    /**
     * cross browser add event method
     *
     * @param {Element|HTMLDocument} object
     * @param {string} type
     * @param {Function} callback
     * @returns void
     */
    function _addEvent(object, type, callback) {
        if (object.addEventListener) {
            object.addEventListener(type, callback, false);
            return;
        }

        object.attachEvent('on' + type, callback);
    }

    /**
     * takes the event and returns the key character
     *
     * @param {Event} e
     * @return {string}
     */
    function _characterFromEvent(e) {

        // for keypress events we should return the character as is
        if (e.type == 'keypress') {
            var character = String.fromCharCode(e.which);

            // if the shift key is not pressed then it is safe to assume
            // that we want the character to be lowercase.  this means if
            // you accidentally have caps lock on then your key bindings
            // will continue to work
            //
            // the only side effect that might not be desired is if you
            // bind something like 'A' cause you want to trigger an
            // event when capital A is pressed caps lock will no longer
            // trigger the event.  shift+a will though.
            if (!e.shiftKey) {
                character = character.toLowerCase();
            }

            return character;
        }

        // for non keypress events the special maps are needed
        if (_MAP[e.which]) {
            return _MAP[e.which];
        }

        if (_KEYCODE_MAP[e.which]) {
            return _KEYCODE_MAP[e.which];
        }

        // if it is not in the special map

        // with keydown and keyup events the character seems to always
        // come in as an uppercase character whether you are pressing shift
        // or not.  we should make sure it is always lowercase for comparisons
        return String.fromCharCode(e.which).toLowerCase();
    }

    /**
     * checks if two arrays are equal
     *
     * @param {Array} modifiers1
     * @param {Array} modifiers2
     * @returns {boolean}
     */
    function _modifiersMatch(modifiers1, modifiers2) {
        return modifiers1.sort().join(',') === modifiers2.sort().join(',');
    }

    /**
     * resets all sequence counters except for the ones passed in
     *
     * @param {Object} doNotReset
     * @returns void
     */
    function _resetSequences(doNotReset) {
        doNotReset = doNotReset || {};

        var activeSequences = false,
            key;

        for (key in _sequenceLevels) {
            if (doNotReset[key]) {
                activeSequences = true;
                continue;
            }
            _sequenceLevels[key] = 0;
        }

        if (!activeSequences) {
            _nextExpectedAction = false;
        }
    }

    /**
     * finds all callbacks that match based on the keycode, modifiers,
     * and action
     *
     * @param {string} character
     * @param {Array} modifiers
     * @param {Event|Object} e
     * @param {string=} sequenceName - name of the sequence we are looking for
     * @param {string=} combination
     * @param {number=} level
     * @returns {Array}
     */
    function _getMatches(character, modifiers, e, sequenceName, combination, level) {
        var i,
            callback,
            matches = [],
            action = e.type;

        // if there are no events related to this keycode
        if (!_callbacks[character]) {
            return [];
        }

        // if a modifier key is coming up on its own we should allow it
        if (action == 'keyup' && _isModifier(character)) {
            modifiers = [character];
        }

        // loop through all callbacks for the key that was pressed
        // and see if any of them match
        for (i = 0; i < _callbacks[character].length; ++i) {
            callback = _callbacks[character][i];

            // if a sequence name is not specified, but this is a sequence at
            // the wrong level then move onto the next match
            if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {
                continue;
            }

            // if the action we are looking for doesn't match the action we got
            // then we should keep going
            if (action != callback.action) {
                continue;
            }

            // if this is a keypress event and the meta key and control key
            // are not pressed that means that we need to only look at the
            // character, otherwise check the modifiers as well
            //
            // chrome will not fire a keypress if meta or control is down
            // safari will fire a keypress if meta or meta+shift is down
            // firefox will fire a keypress if meta or control is down
            if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {

                // when you bind a combination or sequence a second time it
                // should overwrite the first one.  if a sequenceName or
                // combination is specified in this call it does just that
                //
                // @todo make deleting its own method?
                var deleteCombo = !sequenceName && callback.combo == combination;
                var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;
                if (deleteCombo || deleteSequence) {
                    _callbacks[character].splice(i, 1);
                }

                matches.push(callback);
            }
        }

        return matches;
    }

    /**
     * takes a key event and figures out what the modifiers are
     *
     * @param {Event} e
     * @returns {Array}
     */
    function _eventModifiers(e) {
        var modifiers = [];

        if (e.shiftKey) {
            modifiers.push('shift');
        }

        if (e.altKey) {
            modifiers.push('alt');
        }

        if (e.ctrlKey) {
            modifiers.push('ctrl');
        }

        if (e.metaKey) {
            modifiers.push('meta');
        }

        return modifiers;
    }

    /**
     * actually calls the callback function
     *
     * if your callback function returns false this will use the jquery
     * convention - prevent default and stop propogation on the event
     *
     * @param {Function} callback
     * @param {Event} e
     * @returns void
     */
    function _fireCallback(callback, e, combo) {

        // if this event should not happen stop here
        if (Mousetrap.stopCallback(e, e.target || e.srcElement, combo)) {
            return;
        }

        if (callback(e, combo) === false) {
            if (e.preventDefault) {
                e.preventDefault();
            }

            if (e.stopPropagation) {
                e.stopPropagation();
            }

            e.returnValue = false;
            e.cancelBubble = true;
        }
    }

    /**
     * handles a character key event
     *
     * @param {string} character
     * @param {Array} modifiers
     * @param {Event} e
     * @returns void
     */
    function _handleKey(character, modifiers, e) {
        var callbacks = _getMatches(character, modifiers, e),
            i,
            doNotReset = {},
            maxLevel = 0,
            processedSequenceCallback = false;

        // Calculate the maxLevel for sequences so we can only execute the longest callback sequence
        for (i = 0; i < callbacks.length; ++i) {
            if (callbacks[i].seq) {
                maxLevel = Math.max(maxLevel, callbacks[i].level);
            }
        }

        // loop through matching callbacks for this key event
        for (i = 0; i < callbacks.length; ++i) {

            // fire for all sequence callbacks
            // this is because if for example you have multiple sequences
            // bound such as "g i" and "g t" they both need to fire the
            // callback for matching g cause otherwise you can only ever
            // match the first one
            if (callbacks[i].seq) {

                // only fire callbacks for the maxLevel to prevent
                // subsequences from also firing
                //
                // for example 'a option b' should not cause 'option b' to fire
                // even though 'option b' is part of the other sequence
                //
                // any sequences that do not match here will be discarded
                // below by the _resetSequences call
                if (callbacks[i].level != maxLevel) {
                    continue;
                }

                processedSequenceCallback = true;

                // keep a list of which sequences were matches for later
                doNotReset[callbacks[i].seq] = 1;
                _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
                continue;
            }

            // if there were no sequence matches but we are still here
            // that means this is a regular match so we should fire that
            if (!processedSequenceCallback) {
                _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
            }
        }

        // if the key you pressed matches the type of sequence without
        // being a modifier (ie "keyup" or "keypress") then we should
        // reset all sequences that were not matched by this event
        //
        // this is so, for example, if you have the sequence "h a t" and you
        // type "h e a r t" it does not match.  in this case the "e" will
        // cause the sequence to reset
        //
        // modifier keys are ignored because you can have a sequence
        // that contains modifiers such as "enter ctrl+space" and in most
        // cases the modifier key will be pressed before the next key
        //
        // also if you have a sequence such as "ctrl+b a" then pressing the
        // "b" key will trigger a "keypress" and a "keydown"
        //
        // the "keydown" is expected when there is a modifier, but the
        // "keypress" ends up matching the _nextExpectedAction since it occurs
        // after and that causes the sequence to reset
        //
        // we ignore keypresses in a sequence that directly follow a keydown
        // for the same character
        var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;
        if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {
            _resetSequences(doNotReset);
        }

        _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';
    }

    /**
     * handles a keydown event
     *
     * @param {Event} e
     * @returns void
     */
    function _handleKeyEvent(e) {

        // normalize e.which for key events
        // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion
        if (typeof e.which !== 'number') {
            e.which = e.keyCode;
        }

        var character = _characterFromEvent(e);

        // no character found then stop
        if (!character) {
            return;
        }

        // need to use === for the character check because the character can be 0
        if (e.type == 'keyup' && _ignoreNextKeyup === character) {
            _ignoreNextKeyup = false;
            return;
        }

        Mousetrap.handleKey(character, _eventModifiers(e), e);
    }

    /**
     * determines if the keycode specified is a modifier key or not
     *
     * @param {string} key
     * @returns {boolean}
     */
    function _isModifier(key) {
        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';
    }

    /**
     * called to set a 1 second timeout on the specified sequence
     *
     * this is so after each key press in the sequence you have 1 second
     * to press the next key before you have to start over
     *
     * @returns void
     */
    function _resetSequenceTimer() {
        clearTimeout(_resetTimer);
        _resetTimer = setTimeout(_resetSequences, 1000);
    }

    /**
     * reverses the map lookup so that we can look for specific keys
     * to see what can and can't use keypress
     *
     * @return {Object}
     */
    function _getReverseMap() {
        if (!_REVERSE_MAP) {
            _REVERSE_MAP = {};
            for (var key in _MAP) {

                // pull out the numeric keypad from here cause keypress should
                // be able to detect the keys from the character
                if (key > 95 && key < 112) {
                    continue;
                }

                if (_MAP.hasOwnProperty(key)) {
                    _REVERSE_MAP[_MAP[key]] = key;
                }
            }
        }
        return _REVERSE_MAP;
    }

    /**
     * picks the best action based on the key combination
     *
     * @param {string} key - character for key
     * @param {Array} modifiers
     * @param {string=} action passed in
     */
    function _pickBestAction(key, modifiers, action) {

        // if no action was picked in we should try to pick the one
        // that we think would work best for this key
        if (!action) {
            action = _getReverseMap()[key] ? 'keydown' : 'keypress';
        }

        // modifier keys don't work as expected with keypress,
        // switch to keydown
        if (action == 'keypress' && modifiers.length) {
            action = 'keydown';
        }

        return action;
    }

    /**
     * binds a key sequence to an event
     *
     * @param {string} combo - combo specified in bind call
     * @param {Array} keys
     * @param {Function} callback
     * @param {string=} action
     * @returns void
     */
    function _bindSequence(combo, keys, callback, action) {

        // start off by adding a sequence level record for this combination
        // and setting the level to 0
        _sequenceLevels[combo] = 0;

        /**
         * callback to increase the sequence level for this sequence and reset
         * all other sequences that were active
         *
         * @param {string} nextAction
         * @returns {Function}
         */
        function _increaseSequence(nextAction) {
            return function() {
                _nextExpectedAction = nextAction;
                ++_sequenceLevels[combo];
                _resetSequenceTimer();
            };
        }

        /**
         * wraps the specified callback inside of another function in order
         * to reset all sequence counters as soon as this sequence is done
         *
         * @param {Event} e
         * @returns void
         */
        function _callbackAndReset(e) {
            _fireCallback(callback, e, combo);

            // we should ignore the next key up if the action is key down
            // or keypress.  this is so if you finish a sequence and
            // release the key the final key will not trigger a keyup
            if (action !== 'keyup') {
                _ignoreNextKeyup = _characterFromEvent(e);
            }

            // weird race condition if a sequence ends with the key
            // another sequence begins with
            setTimeout(_resetSequences, 10);
        }

        // loop through keys one at a time and bind the appropriate callback
        // function.  for any key leading up to the final one it should
        // increase the sequence. after the final, it should reset all sequences
        //
        // if an action is specified in the original bind call then that will
        // be used throughout.  otherwise we will pass the action that the
        // next key in the sequence should match.  this allows a sequence
        // to mix and match keypress and keydown events depending on which
        // ones are better suited to the key provided
        for (var i = 0; i < keys.length; ++i) {
            var isFinal = i + 1 === keys.length;
            var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);
            _bindSingle(keys[i], wrappedCallback, action, combo, i);
        }
    }

    /**
     * Converts from a string key combination to an array
     *
     * @param  {string} combination like "command+shift+l"
     * @return {Array}
     */
    function _keysFromString(combination) {
        if (combination === '+') {
            return ['+'];
        }

        return combination.split('+');
    }

    /**
     * Gets info for a specific key combination
     *
     * @param  {string} combination key combination ("command+s" or "a" or "*")
     * @param  {string=} action
     * @returns {Object}
     */
    function _getKeyInfo(combination, action) {
        var keys,
            key,
            i,
            modifiers = [];

        // take the keys from this pattern and figure out what the actual
        // pattern is all about
        keys = _keysFromString(combination);

        for (i = 0; i < keys.length; ++i) {
            key = keys[i];

            // normalize key names
            if (_SPECIAL_ALIASES[key]) {
                key = _SPECIAL_ALIASES[key];
            }

            // if this is not a keypress event then we should
            // be smart about using shift keys
            // this will only work for US keyboards however
            if (action && action != 'keypress' && _SHIFT_MAP[key]) {
                key = _SHIFT_MAP[key];
                modifiers.push('shift');
            }

            // if this key is a modifier then add it to the list of modifiers
            if (_isModifier(key)) {
                modifiers.push(key);
            }
        }

        // depending on what the key combination is
        // we will try to pick the best event for it
        action = _pickBestAction(key, modifiers, action);

        return {
            key: key,
            modifiers: modifiers,
            action: action
        };
    }

    /**
     * binds a single keyboard combination
     *
     * @param {string} combination
     * @param {Function} callback
     * @param {string=} action
     * @param {string=} sequenceName - name of sequence if part of sequence
     * @param {number=} level - what part of the sequence the command is
     * @returns void
     */
    function _bindSingle(combination, callback, action, sequenceName, level) {

        // store a direct mapped reference for use with Mousetrap.trigger
        _directMap[combination + ':' + action] = callback;

        // make sure multiple spaces in a row become a single space
        combination = combination.replace(/\s+/g, ' ');

        var sequence = combination.split(' '),
            info;

        // if this pattern is a sequence of keys then run through this method
        // to reprocess each pattern one key at a time
        if (sequence.length > 1) {
            _bindSequence(combination, sequence, callback, action);
            return;
        }

        info = _getKeyInfo(combination, action);

        // make sure to initialize array if this is the first time
        // a callback is added for this key
        _callbacks[info.key] = _callbacks[info.key] || [];

        // remove an existing match if there is one
        _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);

        // add this call back to the array
        // if it is a sequence put it at the beginning
        // if not put it at the end
        //
        // this is important because the way these are processed expects
        // the sequence ones to come first
        _callbacks[info.key][sequenceName ? 'unshift' : 'push']({
            callback: callback,
            modifiers: info.modifiers,
            action: info.action,
            seq: sequenceName,
            level: level,
            combo: combination
        });
    }

    /**
     * binds multiple combinations to the same callback
     *
     * @param {Array} combinations
     * @param {Function} callback
     * @param {string|undefined} action
     * @returns void
     */
    function _bindMultiple(combinations, callback, action) {
        for (var i = 0; i < combinations.length; ++i) {
            _bindSingle(combinations[i], callback, action);
        }
    }

    // start!
    _addEvent(document, 'keypress', _handleKeyEvent);
    _addEvent(document, 'keydown', _handleKeyEvent);
    _addEvent(document, 'keyup', _handleKeyEvent);

    var Mousetrap = {

        /**
         * binds an event to mousetrap
         *
         * can be a single key, a combination of keys separated with +,
         * an array of keys, or a sequence of keys separated by spaces
         *
         * be sure to list the modifier keys first to make sure that the
         * correct key ends up getting bound (the last key in the pattern)
         *
         * @param {string|Array} keys
         * @param {Function} callback
         * @param {string=} action - 'keypress', 'keydown', or 'keyup'
         * @returns void
         */
        bind: function(keys, callback, action) {
            keys = keys instanceof Array ? keys : [keys];
            _bindMultiple(keys, callback, action);
            return this;
        },

        /**
         * unbinds an event to mousetrap
         *
         * the unbinding sets the callback function of the specified key combo
         * to an empty function and deletes the corresponding key in the
         * _directMap dict.
         *
         * TODO: actually remove this from the _callbacks dictionary instead
         * of binding an empty function
         *
         * the keycombo+action has to be exactly the same as
         * it was defined in the bind method
         *
         * @param {string|Array} keys
         * @param {string} action
         * @returns void
         */
        unbind: function(keys, action) {
            return Mousetrap.bind(keys, function() {}, action);
        },

        /**
         * triggers an event that has already been bound
         *
         * @param {string} keys
         * @param {string=} action
         * @returns void
         */
        trigger: function(keys, action) {
            if (_directMap[keys + ':' + action]) {
                _directMap[keys + ':' + action]({}, keys);
            }
            return this;
        },

        /**
         * resets the library back to its initial state.  this is useful
         * if you want to clear out the current keyboard shortcuts and bind
         * new ones - for example if you switch to another page
         *
         * @returns void
         */
        reset: function() {
            _callbacks = {};
            _directMap = {};
            return this;
        },

       /**
        * should we stop this event before firing off callbacks
        *
        * @param {Event} e
        * @param {Element} element
        * @return {boolean}
        */
        stopCallback: function(e, element) {

            // if the element has the class "mousetrap" then no need to stop
            if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {
                return false;
            }

            // stop for input, select, and textarea
            return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;
        },

        /**
         * exposes _handleKey publicly so it can be overwritten by extensions
         */
        handleKey: _handleKey
    };

    // expose mousetrap to the global object
    window.Mousetrap = Mousetrap;

    // expose mousetrap as an AMD module
    if (typeof define === 'function' && define.amd) {
        define('mousetrap',Mousetrap);
    }
}) (window, document);

define('classes/FileDescriptor',[
    "underscore",
    "utils",
    "ace/range"
], function(_, utils, range) {
    var Range = range.Range;

    function FileDescriptor(fileIndex, title, syncLocations, publishLocations) {
        this.fileIndex = fileIndex;
        this._title = title || localStorage[fileIndex + ".title"];
        this._editorScrollTop = parseInt(localStorage[fileIndex + ".editorScrollTop"]) || 0;
        this._editorSelectRange = (function() {
            try {
                var rangeComponents = localStorage[fileIndex + ".editorSelectRange"].split(';');
                rangeComponents = _.map(rangeComponents, function(component) {
                    return parseInt(component);
                });
                return new Range(rangeComponents[0], rangeComponents[1], rangeComponents[2], rangeComponents[3]);
            }
            catch(e) {
                return new Range(0, 0, 0, 0);
            }
        })();
        this._editorEnd = parseInt(localStorage[fileIndex + ".editorEnd"]) || 0;
        this._previewScrollTop = parseInt(localStorage[fileIndex + ".previewScrollTop"]) || 0;
        this._selectTime = parseInt(localStorage[fileIndex + ".selectTime"]) || 0;
        this.syncLocations = syncLocations || {};
        this.publishLocations = publishLocations || {};
        Object.defineProperty(this, 'title', {
            get: function() {
                return this._title;
            },
            set: function(title) {
                this._title = title;
                localStorage[this.fileIndex + ".title"] = title;
            }
        });
        Object.defineProperty(this, 'content', {
            get: function() {
                return localStorage[this.fileIndex + ".content"];
            },
            set: function(content) {
                localStorage[this.fileIndex + ".content"] = content;
            }
        });
        Object.defineProperty(this, 'editorScrollTop', {
            get: function() {
                return this._editorScrollTop;
            },
            set: function(editorScrollTop) {
                this._editorScrollTop = editorScrollTop;
                localStorage[this.fileIndex + ".editorScrollTop"] = editorScrollTop;
            }
        });
        Object.defineProperty(this, 'editorSelectRange', {
            get: function() {
                return this._editorSelectRange;
            },
            set: function(range) {
                this._editorSelectRange = range;
                localStorage[this.fileIndex + ".editorSelectRange"] = [
                    range.start.row,
                    range.start.column,
                    range.end.row,
                    range.end.column
                ].join(';');
            }
        });
        Object.defineProperty(this, 'previewScrollTop', {
            get: function() {
                return this._previewScrollTop;
            },
            set: function(previewScrollTop) {
                this._previewScrollTop = previewScrollTop;
                localStorage[this.fileIndex + ".previewScrollTop"] = previewScrollTop;
            }
        });
        Object.defineProperty(this, 'selectTime', {
            get: function() {
                return this._selectTime;
            },
            set: function(selectTime) {
                this._selectTime = selectTime;
                localStorage[this.fileIndex + ".selectTime"] = selectTime;
            }
        });
    }

    FileDescriptor.prototype.addSyncLocation = function(syncAttributes) {
        utils.storeAttributes(syncAttributes);
        utils.appendIndexToArray(this.fileIndex + ".sync", syncAttributes.syncIndex);
        this.syncLocations[syncAttributes.syncIndex] = syncAttributes;
    };

    FileDescriptor.prototype.removeSyncLocation = function(syncAttributes) {
        utils.removeIndexFromArray(this.fileIndex + ".sync", syncAttributes.syncIndex);
        delete this.syncLocations[syncAttributes.syncIndex];
        localStorage.removeItem(syncAttributes.syncIndex);
    };

    FileDescriptor.prototype.addPublishLocation = function(publishAttributes) {
        utils.storeAttributes(publishAttributes);
        utils.appendIndexToArray(this.fileIndex + ".publish", publishAttributes.publishIndex);
        this.publishLocations[publishAttributes.publishIndex] = publishAttributes;
    };

    FileDescriptor.prototype.removePublishLocation = function(publishAttributes) {
        utils.removeIndexFromArray(this.fileIndex + ".publish", publishAttributes.publishIndex);
        delete this.publishLocations[publishAttributes.publishIndex];
        localStorage.removeItem(publishAttributes.publishIndex);
    };

    FileDescriptor.prototype.composeTitle = function() {
        var result = [];
        var syncAttributesList = _.values(this.syncLocations);
        var publishAttributesList = _.values(this.publishLocations);
        var attributesList = syncAttributesList.concat(publishAttributesList);
        _.chain(attributesList).sortBy(function(attributes) {
            return attributes.provider.providerId;
        }).each(function(attributes) {
            var classes = 'icon-provider-' + attributes.provider.providerId;
            if(attributes.isRealtime === true) {
                classes += ' realtime';
            }
            result.push('<i class="' + classes + '"></i>');
        });
        result.push(' ');
        result.push(this.title);
        return result.join('');
    };

    return FileDescriptor;
});
define('fileSystem',[
    "underscore",
    "utils",
    "classes/FileDescriptor",
    "storage",
], function(_, utils, FileDescriptor) {
    var fileSystem = {};

    // Retrieve file descriptors from localStorage
    _.each(utils.retrieveIndexArray("file.list"), function(fileIndex) {
        fileSystem[fileIndex] = new FileDescriptor(fileIndex);
    });

    return fileSystem;
});
define('text!html/documentSelectorSettingsBlock.html',[],function () { return '<p>Allows toggling document with keyboard shortcuts.</p>\n<div class="form-horizontal">\n\t<div class="form-group">\n\t\t<label class="col-lg-5 control-label" for="select-document-selector-orderby">Order\n\t\t\tby</label>\n\t\t<div class="col-lg-6">\n\t\t\t<select id="select-document-selector-orderby" class="form-control">\n\t\t\t\t<option value="title">Document title</option>\n\t\t\t\t<option value="mru">Most recently used</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n\t\t<label class="col-lg-5 control-label"\n\t\t\tfor="input-document-selector-shortcut-previous">"Previous"\n\t\t\tshortcut <a href="http://craig.is/killing/mice#keys" target="_blank">(?)</a></label>\n\t\t<div class="col-lg-6">\n\t\t\t<input type="text" id="input-document-selector-shortcut-previous"\n\t\t\t\tclass="form-control">\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n\t\t<label class="col-lg-5 control-label"\n\t\t\tfor="input-document-selector-shortcut-next">"Next"\n\t\t\tshortcut <a href="http://craig.is/killing/mice#keys" target="_blank">(?)</a></label>\n\t\t<div class="col-lg-6">\n\t\t\t<input type="text" id="input-document-selector-shortcut-next"\n\t\t\t\tclass="form-control">\n\t\t</div>\n\t</div>\n</div>';});

define('extensions/documentSelector',[
    "jquery",
    "underscore",
    "crel",
    "utils",
    "classes/Extension",
    "mousetrap",
    "fileSystem",
    "text!html/documentSelectorSettingsBlock.html",
], function($, _, crel, utils, Extension, mousetrap, fileSystem, documentSelectorSettingsBlockHTML) {

    var documentSelector = new Extension("documentSelector", 'Document Selector', true, true);
    documentSelector.settingsBlock = documentSelectorSettingsBlockHTML;
    documentSelector.defaultConfig = {
        orderBy: "mru",
        shortcutPrevious: "Ctrl+[",
        shortcutNext: "Ctrl+]"
    };

    documentSelector.onLoadSettings = function() {
        utils.setInputValue("#select-document-selector-orderby", documentSelector.config.orderBy);
        utils.setInputValue("#input-document-selector-shortcut-previous", documentSelector.config.shortcutPrevious);
        utils.setInputValue("#input-document-selector-shortcut-next", documentSelector.config.shortcutNext);
    };

    documentSelector.onSaveSettings = function(newConfig, event) {
        newConfig.orderBy = utils.getInputValue("#select-document-selector-orderby");
        newConfig.shortcutPrevious = utils.getInputTextValue("#input-document-selector-shortcut-previous", event);
        newConfig.shortcutNext = utils.getInputTextValue("#input-document-selector-shortcut-next", event);
    };

    var aceEditor = undefined;
    documentSelector.onAceCreated = function(aceEditorParam) {
        aceEditor = aceEditorParam;
    };

    var fileMgr = undefined;
    documentSelector.onFileMgrCreated = function(fileMgrParameter) {
        fileMgr = fileMgrParameter;
    };

    var liEltTmpl = [
        '<li class="<%= isCurrent ? "disabled" : "" %>" data-file-index="<%= fileDesc.fileIndex %>">',
        '   <a href="#">',
        '       <%= fileDesc.composeTitle() %>',
        '   </a>',
        '</li>'
    ].join('');
    var dropdownElt = undefined;
    var liEltMap = undefined;
    var liEltList = undefined;
    var sortFunction = undefined;
    var selectFileDesc = undefined;
    var selectedLi = undefined;
    var $editorElt = undefined;
    var buildSelector = function() {
        var liListHtml = _.chain(fileSystem).sortBy(sortFunction).reduce(function(result, fileDesc) {
            return result + _.template(liEltTmpl, {
                fileDesc: fileDesc,
                isCurrent: fileDesc === selectFileDesc
            });
        }, '').value();
        dropdownElt.innerHTML = liListHtml;

        liEltList = [];
        liEltMap = {};
        _.each(dropdownElt.querySelectorAll('li'), function(liElt) {
            var $liElt = $(liElt);
            liEltList.push($liElt);
            var fileDesc = fileSystem[$liElt.data('fileIndex')];
            liEltMap[fileDesc.fileIndex] = $liElt;
            $liElt.find("a").click(function() {
                selectedLi = undefined;
                if(!$liElt.hasClass("disabled")) {
                    fileMgr.selectFile(fileDesc);
                }
                else if(aceEditor !== undefined) {
                    aceEditor.focus();
                }
                else {
                    $editorElt.focus();
                }
            });
        });

    };

    documentSelector.onFileSelected = function(fileDesc) {
        selectFileDesc = fileDesc;
        buildSelector();
    };

    documentSelector.onFileCreated = buildSelector;
    documentSelector.onFileDeleted = buildSelector;
    documentSelector.onTitleChanged = buildSelector;
    documentSelector.onSyncExportSuccess = buildSelector;
    documentSelector.onSyncRemoved = buildSelector;
    documentSelector.onNewPublishSuccess = buildSelector;
    documentSelector.onPublishRemoved = buildSelector;

    documentSelector.onReady = function() {
        $editorElt = $('#wmd-input');
        
        if(documentSelector.config.orderBy == "title") {
            sortFunction = function(fileDesc) {
                return fileDesc.title.toLowerCase();
            };
        }
        else if(documentSelector.config.orderBy == "mru") {
            sortFunction = function(fileDesc) {
                return -fileDesc.selectTime;
            };
        }

        dropdownElt = crel('ul', {
            class: 'dropdown-menu dropdown-file-selector'
        });
        document.querySelector('.ui-layout-resizer-north').appendChild(crel('div', crel('div', {
            'data-toggle': 'dropdown'
        }), dropdownElt));
        var $dropdownElt = $(dropdownElt).dropdown();

        var $documentPanelTogglerElt = $('.document-panel .collapse-button');
        $documentPanelTogglerElt.prop("title", _.template("<%= title %>  <%= shortcutPrevious %>  <%= shortcutNext %>", {
            title: $documentPanelTogglerElt.prop("title"),
            shortcutPrevious: documentSelector.config.shortcutPrevious,
            shortcutNext: documentSelector.config.shortcutNext
        }));

        // Handle key shortcut
        var shortcutPrevious = documentSelector.config.shortcutPrevious.toLowerCase();
        mousetrap.bind(shortcutPrevious, function() {
            if(selectedLi === undefined) {
                $dropdownElt.dropdown('toggle');
                selectedLi = liEltMap[selectFileDesc.fileIndex];
            }
            var liIndex = _.indexOf(liEltList, selectedLi) - 1;
            if(liIndex === -2) {
                liIndex = -1;
            }
            selectedLi = liEltList[(liIndex + liEltList.length) % liEltList.length];
            _.defer(function() {
                selectedLi.find("a").focus();
            });
            return false;
        });
        var shortcutNext = documentSelector.config.shortcutNext.toLowerCase();
        mousetrap.bind(documentSelector.config.shortcutNext.toLowerCase(), function() {
            if(selectedLi === undefined) {
                $dropdownElt.dropdown('toggle');
                selectedLi = liEltMap[selectFileDesc.fileIndex];
            }
            var liIndex = _.indexOf(liEltList, selectedLi) + 1;
            selectedLi = liEltList[liIndex % liEltList.length];
            _.defer(function() {
                selectedLi.find("a").focus();
            });
            return false;
        });
        var delimiter1 = shortcutPrevious.indexOf("+");
        var shortcutSelect1 = delimiter1 === -1 ? shortcutPrevious : shortcutPrevious.substring(0, delimiter1);
        var delimiter2 = shortcutNext.indexOf("+");
        var shortcutSelect2 = delimiter2 === -1 ? shortcutNext : shortcutNext.substring(0, delimiter2);
        mousetrap.bind([
            shortcutSelect1,
            shortcutSelect2
        ], function() {
            if(selectedLi !== undefined) {
                selectedLi.find("a").click();
            }
        }, "keyup");
    };

    return documentSelector;

});
define('classes/FolderDescriptor',[
    "underscore",
    "utils",
    "fileSystem"
], function(_, utils, fileSystem) {

    function FolderDescriptor(folderIndex, name, fileList) {
        this.folderIndex = folderIndex;
        this._name = name || localStorage[folderIndex + ".name"];
        // Retrieve file list from localStorage
        this.fileList = {};
        _.each(utils.retrieveIndexArray(folderIndex + ".files"), function(fileIndex) {
            try {
                var fileDesc = fileSystem[fileIndex];
                fileDesc.folder = this;
                this.fileList[fileIndex] = fileDesc;
            }
            catch(e) {
                // localStorage can be corrupted
                // Remove file from folder
                utils.removeIndexFromArray(folderIndex + ".files", fileIndex);
            }
        }, this);
        Object.defineProperty(this, 'name', {
            get: function() {
                return this._name;
            },
            set: function(name) {
                this._name = name;
                localStorage[this.folderIndex + ".name"] = name;
            }
        });
    }

    FolderDescriptor.prototype.addFile = function(fileDesc) {
        fileDesc.folder = this;
        utils.appendIndexToArray(this.folderIndex + ".files", fileDesc.fileIndex);
        this.fileList[fileDesc.fileIndex] = fileDesc;
    };

    FolderDescriptor.prototype.removeFile = function(fileDesc) {
        fileDesc.folder = undefined;
        utils.removeIndexFromArray(this.folderIndex + ".files", fileDesc.fileIndex);
        delete this.fileList[fileDesc.fileIndex];
    };

    return FolderDescriptor;
});
define('folderList',[
    "underscore",
    "utils",
    "classes/FolderDescriptor",
    "storage",
], function(_, utils, FolderDescriptor) {
    var folderList = {};

    // Retrieve folder descriptors from localStorage
    _.each(utils.retrieveIndexArray("folder.list"), function(folderIndex) {
        folderList[folderIndex] = new FolderDescriptor(folderIndex);
    });

    return folderList;
});
define('extensions/documentPanel',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "folderList",
    "fileSystem",
], function($, _, utils, Extension, folderList, fileSystem) {

    var documentPanel = new Extension("documentPanel", 'Document Panel');

    var fileMgr = undefined;
    documentPanel.onFileMgrCreated = function(fileMgrParameter) {
        fileMgr = fileMgrParameter;
    };

    var folderEltTmpl = [
        '<a href="#"',
        ' class="list-group-item folder clearfix"',
        ' data-folder-index="<%= folderDesc.folderIndex %>"',
        ' data-toggle="collapse"',
        ' data-target=".document-panel .file-list.<%= id %>">',
        '   <div class="pull-right file-count">',
        '       <%= _.size(folderDesc.fileList) %>',
        '   </div>',
        '   <i class="icon-folder"></i> <%= folderDesc.name %>',
        '</a>',
        '<div class="file-list collapse <%= id %> clearfix">',
        '   <%= fileListHtml %>',
        '</div>'
    ].join('');
    var documentEltTmpl = [
        '<a href="#"',
        ' class="list-group-item file<%= fileDesc === selectedFileDesc ? " active" : "" %>"',
        ' data-file-index="<%= fileDesc.fileIndex %>"',
        ' data-toggle="collapse"',
        ' data-target=".document-panel">',
        '   <%= fileDesc.composeTitle() %>',
        '</a>',
    ].join('');

    var panelElt = undefined;
    var documentListElt = undefined;
    var $documentListElt = undefined;
    var documentListFilteredElt = undefined;
    var $documentListFilteredElt = undefined;
    var selectedFileDesc = undefined;
    var refreshPanel = function() {

        // List orphan documents
        var orphanDocumentList = _.filter(fileSystem, function(fileDesc) {
            return fileDesc.folder === undefined;
        });

        // Add orphan documents
        var documentListHtml = _.chain(orphanDocumentList).sortBy(function(fileDesc) {
            return fileDesc.title.toLowerCase();
        }).reduce(function(result, fileDesc) {
            return result + '<li>' + _.template(documentEltTmpl, {
                fileDesc: fileDesc,
                selectedFileDesc: selectedFileDesc
            }) + '</li>';
        }, '').value();
        documentListHtml = documentListHtml && '<ul class="nav">' + documentListHtml + '</ul>';

        // Build directories
        _.chain(folderList).sortBy(function(folderDesc) {
            return folderDesc.name.toLowerCase();
        }).each(function(folderDesc) {
            var fileListHtml = _.chain(folderDesc.fileList).sortBy(function(fileDesc) {
                return fileDesc.title.toLowerCase();
            }).reduce(function(result, fileDesc) {
                return result + '<li>' + _.template(documentEltTmpl, {
                    fileDesc: fileDesc,
                    selectedFileDesc: selectedFileDesc
                }) + '</li>';
            }, '').value();
            fileListHtml = fileListHtml && '<ul class="nav">' + fileListHtml + '</ul>';
            documentListHtml += _.template(folderEltTmpl, {
                folderDesc: folderDesc,
                fileListHtml: fileListHtml,
                id: folderDesc.folderIndex.replace('.', '')
            });
        });

        documentListElt.innerHTML = documentListHtml;
        
        // Create filtered list
        var documentListFilteredHtml = _.chain(fileSystem).sortBy(function(fileDesc) {
            return fileDesc.title.toLowerCase();
        }).reduce(function(result, fileDesc) {
            return result + '<li>' + _.template(documentEltTmpl, {
                fileDesc: fileDesc,
                selectedFileDesc: selectedFileDesc
            }) + '</li>';
        }, '').value();
        documentListFilteredHtml = '<ul class="nav">' + documentListFilteredHtml + '</ul>';

        documentListFilteredElt.innerHTML = documentListFilteredHtml;
        
        // Add click listeners
        _.each(panelElt.querySelectorAll('.file'), function(fileElt) {
            var $fileElt = $(fileElt);
            $fileElt.click(function(e) {
                var fileDesc = fileSystem[$fileElt.data('fileIndex')];
                if(fileDesc && fileDesc !== selectedFileDesc) {
                    fileMgr.selectFile(fileDesc);
                }
            });
        });

    };

    documentPanel.onFileSelected = function(fileDesc) {
        selectedFileDesc = fileDesc;
        refreshPanel();
    };

    documentPanel.onFileCreated = refreshPanel;
    documentPanel.onFileDeleted = refreshPanel;
    documentPanel.onTitleChanged = refreshPanel;
    documentPanel.onSyncExportSuccess = refreshPanel;
    documentPanel.onSyncRemoved = refreshPanel;
    documentPanel.onNewPublishSuccess = refreshPanel;
    documentPanel.onPublishRemoved = refreshPanel;
    documentPanel.onFoldersChanged = refreshPanel;

    // Filter for search input in file selector
    var panelContentElt = undefined;
    var previousFilterValue = '';
    function filterFiles(filterValue) {
        if(filterValue == previousFilterValue) {
            return;
        }
        previousFilterValue = filterValue;
        
        // Scroll to top
        panelContentElt.scrollTop = 0;

        if(!filterValue) {
            $documentListFilteredElt.addClass('hide');
            $documentListElt.removeClass('hide');
            return;
        }
        var wordList = filterValue.toLowerCase().split(/\s+/);
        _.each(documentListFilteredElt.querySelectorAll('.file'), function(fileElt) {
            var $fileElt = $(fileElt);
            var fileTitle = $fileElt.text().toLowerCase();
            $fileElt.toggle(!_.some(wordList, function(word) {
                return fileTitle.indexOf(word) === -1;
            }));
        });
        $documentListFilteredElt.removeClass('hide');
        $documentListElt.addClass('hide');
    }

    documentPanel.onReady = function() {
        panelElt = document.querySelector('.document-panel');
        panelContentElt = panelElt.querySelector('.panel-content');
        documentListElt = panelElt.querySelector('.document-list');
        $documentListElt = $(documentListElt);
        documentListFilteredElt = panelElt.querySelector('.document-list-filtered');
        $documentListFilteredElt = $(documentListFilteredElt);
        
        // Open current folder before opening
        $(panelElt).on('show.bs.collapse', function(e) {
            if(e.target === panelElt) {
                var folderDesc = selectedFileDesc.folder;
                if(folderDesc !== undefined) {
                    $(panelElt.querySelector('.file-list.' + folderDesc.folderIndex.replace('.', ''))).collapse('show');
                }
            }
        }).on('shown.bs.collapse', function(e) {
            if(e.target === panelElt) {
                // Unset the filter
                $filterInputElt.val('');
                filterFiles('');
                
                // Scroll to the active file
                panelContentElt.scrollTop += documentListElt.querySelector('.file.active').getBoundingClientRect().top - 120;
            }
        });
        
        // Search bar input change
        var $filterInputElt = $(panelElt.querySelector('.search-bar .form-control'));
        $filterInputElt.bind("propertychange keyup input paste", function() {
            filterFiles($filterInputElt.val());
        });
        
        // Clear button
        $(panelElt.querySelector('.search-bar .close')).click(function() {
            $filterInputElt.val('');
            filterFiles('');
            $filterInputElt.focus();
        });
    };

    return documentPanel;

});
define('extensions/documentManager',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "classes/FolderDescriptor",
    "folderList",
    "fileSystem",
    "config"
], function($, _, utils, Extension, FolderDescriptor, folderList, fileSystem) {

    var documentManager = new Extension("documentManager", 'Document Manager', false, true);

    var fileMgr = undefined;
    documentManager.onFileMgrCreated = function(fileMgrParameter) {
        fileMgr = fileMgrParameter;
    };

    var eventMgr = undefined;
    documentManager.onEventMgrCreated = function(eventMgrParameter) {
        eventMgr = eventMgrParameter;
    };

    var folderEltTmpl = [
        '<a href="#" class="list-group-item folder clearfix" data-folder-index="<%= folderDesc.folderIndex %>" data-toggle="collapse" data-target=".modal-document-manager .file-list.<%= id %>">',
        '<label class="checkbox" title="Select"><input type="checkbox"></label>',
        '<button class="btn btn-default button-delete" title="Delete"><i class="icon-trash"></i></button>',
        '<button class="btn btn-default button-rename" title="Rename"><i class="icon-pencil"></i></button>',
        '<div class="pull-right file-count"><%= _.size(folderDesc.fileList) %></div>',
        '<div class="name"><i class="icon-folder"></i> ',
        '<%= folderDesc.name %></div>',
        '<input type="text" class="input-rename form-control hide"></a>',
        '<div class="file-list collapse <%= id %> clearfix"><%= fileListHtml %></div>'
    ].join('');
    var documentEltTmpl = [
        '<li class="list-group-item file clearfix" data-file-index="<%= fileDesc.fileIndex %>">',
        '<label class="checkbox" title="Select"><input type="checkbox"></label>',
        '<button class="btn btn-default button-delete" title="Delete"><i class="icon-trash"></i></button>',
        '<button class="btn btn-default button-rename" title="Rename"><i class="icon-pencil"></i></button>',
        '<div class="name"><%= fileDesc.composeTitle() %></div>',
        '<input type="text" class="input-rename form-control hide"></li>',
    ].join('');
    var selectFolderEltTmpl = [
        '<a href="#" class="list-group-item folder clearfix" data-folder-index="<%= folderDesc.folderIndex %>">',
        '<div class="pull-right file-count"><%= _.size(folderDesc.fileList) %></div>',
        '<div class="name"><i class="icon-forward"></i> ',
        '<%= folderDesc.name %></div></a>',
    ].join('');
    var selectedDocumentEltTmpl = [
        '<li class="list-group-item file clearfix">',
        '<div class="name"><%= fileDesc.composeTitle() %></div></li>',
    ].join('');

    var isVisible = false;
    var modalElt = undefined;
    var documentListElt = undefined;
    var selectedDocumentList = [];
    var selectedFolderList = [];
    function doSelect() {
        selectedFolderList = [];
        selectedDocumentList = [];
        _.each(documentListElt.querySelectorAll('input[type="checkbox"]:checked'), function(checkboxElt) {
            var $parentElt = $(checkboxElt.parentNode.parentNode);
            var folderDesc = folderList[$parentElt.data('folderIndex')];
            var fileDesc = fileSystem[$parentElt.data('fileIndex')];
            if(folderDesc !== undefined) {
                selectedFolderList.push(folderDesc);
            }
            else if(fileDesc !== undefined) {
                selectedDocumentList.push(fileDesc);
            }
        });
    }

    var selectedDocumentListElt = undefined;
    function doDeleteConfirmation() {
        // Don't ask user confirmation if we delete only folders
        if(_.size(selectedDocumentList) === 0) {
            doDelete();
            return;
        }

        // Build the selected document list
        var selectedDocumentListHtml = _.chain(selectedDocumentList).sortBy(function(fileDesc) {
            return fileDesc.title.toLowerCase();
        }).reduce(function(result, fileDesc) {
            return result + _.template(selectedDocumentEltTmpl, {
                fileDesc: fileDesc,
            });
        }, '').value();
        selectedDocumentListElt.innerHTML = '<ul class="file-list nav">' + selectedDocumentListHtml + '</ul>';

        // Ask user confirmation
        $(modalElt.querySelectorAll('.document-list')).addClass('hide');
        $(modalElt.querySelectorAll('.confirm-delete, .selected-document-list')).removeClass('hide');
    }

    function doDelete() {
        // Delete files
        _.each(selectedDocumentList, function(fileDesc) {
            fileDesc.folder && fileDesc.folder.removeFile(fileDesc);
            fileMgr.deleteFile(fileDesc);
        });

        // Delete folders
        _.each(selectedFolderList, function(folderDesc) {
            utils.removeIndexFromArray("folder.list", folderDesc.folderIndex);
            localStorage.removeItem(folderDesc.folderIndex + ".name");
            localStorage.removeItem(folderDesc.folderIndex + ".files");
            delete folderList[folderDesc.folderIndex];
        });
        eventMgr.onFoldersChanged();
    }

    var $liMoveElt = undefined;
    var $liDeleteElt = undefined;
    function doActiveButtons() {
        doSelect();

        $liMoveElt.toggleClass('disabled', _.size(folderList) === 0 || _.size(selectedDocumentList) === 0);
        $liDeleteElt.toggleClass('disabled', _.size(selectedFolderList) === 0 && _.size(selectedDocumentList) === 0);
    }

    var orphanDocumentList = undefined;
    var $documentCountElt = undefined;
    var $folderCountElt = undefined;
    var refreshManager = function() {
        if(isVisible === false) {
            return;
        }

        doActiveButtons();

        // Refresh file/folder counters
        $documentCountElt.text(_.size(fileSystem));
        $folderCountElt.text(_.size(folderList) + 1);

        // List orphan documents
        orphanDocumentList = _.filter(fileSystem, function(fileDesc) {
            return fileDesc.folder === undefined;
        });

        // Root folder
        var documentListHtml = [
            '<a href="#" class="list-group-item folder clearfix" data-toggle="collapse" data-target=".modal-document-manager .file-list.root-folder">',
            '<label class="checkbox" title="Select"><input type="checkbox"></label>',
            '<div class="pull-right file-count">',
            _.size(orphanDocumentList),
            '</div>',
            '<div class="name"><i class="icon-folder"></i> ',
            'ROOT folder</div></a>',
        ].join('');

        // Add orphan documents
        var orphanListHtml = _.chain(orphanDocumentList).sortBy(function(fileDesc) {
            return fileDesc.title.toLowerCase();
        }).reduce(function(result, fileDesc) {
            return result + _.template(documentEltTmpl, {
                fileDesc: fileDesc,
            });
        }, '').value();
        orphanListHtml = orphanListHtml && '<ul class="nav">' + orphanListHtml + '</ul>';
        documentListHtml += '<div class="file-list collapse root-folder clearfix">' + orphanListHtml + '</div>';

        // Build directories
        _.chain(folderList).sortBy(function(folderDesc) {
            return folderDesc.name.toLowerCase();
        }).each(function(folderDesc) {
            var fileListHtml = _.chain(folderDesc.fileList).sortBy(function(fileDesc) {
                return fileDesc.title.toLowerCase();
            }).reduce(function(result, fileDesc) {
                return result + _.template(documentEltTmpl, {
                    fileDesc: fileDesc,
                });
            }, '').value();
            fileListHtml = fileListHtml && '<ul class="nav">' + fileListHtml + '</ul>';
            documentListHtml += _.template(folderEltTmpl, {
                folderDesc: folderDesc,
                fileListHtml: fileListHtml,
                id: folderDesc.folderIndex.replace('.', '')
            });
        });

        documentListElt.innerHTML = documentListHtml;

        // Set delete event listeners
        _.each(documentListElt.querySelectorAll('.button-delete'), function(buttonElt) {
            var $buttonElt = $(buttonElt);
            $buttonElt.click(function(e) {
                e.stopPropagation();
                var $parentElt = $buttonElt.parent();
                var folderDesc = folderList[$parentElt.data('folderIndex')];
                var fileDesc = fileSystem[$parentElt.data('fileIndex')];
                selectedDocumentList = [];
                selectedFolderList = [];
                if(folderDesc) {
                    selectedFolderList.push(folderDesc);
                    selectedDocumentList = folderDesc.fileList;
                }
                else if(fileDesc) {
                    selectedDocumentList.push(fileDesc);
                }
                doDeleteConfirmation();
            });
        });

        // Set rename event listeners
        _.each(documentListElt.querySelectorAll('.button-rename'), function(buttonElt) {
            var $buttonElt = $(buttonElt);
            $buttonElt.click(function(e) {
                e.stopPropagation();
                var $parentElt = $buttonElt.parent();
                var name = undefined;
                var folderDesc = folderList[$parentElt.data('folderIndex')];
                var fileDesc = fileSystem[$parentElt.data('fileIndex')];
                if(folderDesc) {
                    name = folderDesc.name;
                }
                else if(fileDesc) {
                    name = fileDesc.title;
                }
                $parentElt.find('.name').addClass('hide');
                $parentElt.find('.input-rename').removeClass('hide').val(name)[0].select();
            });
        });
        _.each(documentListElt.querySelectorAll('.input-rename'), function(inputElt) {
            var $inputElt = $(inputElt);
            function rename() {
                var parentElt = $inputElt.parent();
                var name = $.trim($inputElt.val());
                var folderDesc = folderList[parentElt.data('folderIndex')];
                var fileDesc = fileSystem[parentElt.data('fileIndex')];
                if(name && folderDesc && name != folderDesc.name) {
                    folderDesc.name = name;
                    eventMgr.onFoldersChanged();
                }
                else if(name && fileDesc && name != fileDesc.title) {
                    fileDesc.title = name;
                    eventMgr.onTitleChanged(fileDesc);
                }
                else {
                    $inputElt.addClass('hide');
                    parentElt.find('.name').removeClass('hide');
                }
            }
            $inputElt.blur(function() {
                rename();
            }).keyup(function(e) {
                if(e.keyCode == 13) {
                    rename();
                    e.stopPropagation();
                }
                if(e.keyCode == 27) {
                    $inputElt.val('');
                    rename();
                    e.stopPropagation();
                }
            });
        });

        // Set file checkbox behavior
        _.each(documentListElt.querySelectorAll('.file .checkbox'), function(checkboxElt) {
            var $checkboxElt = $(checkboxElt);
            $checkboxElt.click(function(e) {
                e.stopPropagation();
            }).find('[type=checkbox]').change(function() {
                $checkboxElt.parents('.list-group').find('.folder [type=checkbox]').prop('checked', false);
            });
        });

        // Set folder checkbox behavior
        _.each(documentListElt.querySelectorAll('.folder .checkbox'), function(checkboxElt) {
            var $checkboxElt = $(checkboxElt);
            $checkboxElt.click(function(e) {
                e.stopPropagation();
            }).find('[type=checkbox]').change(function() {
                $checkboxElt.parent().next().find('[type=checkbox]').prop('checked', this.checked);
            });
        });

        // Set checkbox event listeners
        $(documentListElt.querySelectorAll('[type=checkbox]')).change(doActiveButtons);
    };

    documentManager.onFileCreated = refreshManager;
    documentManager.onFileDeleted = refreshManager;
    documentManager.onTitleChanged = refreshManager;
    documentManager.onSyncExportSuccess = refreshManager;
    documentManager.onSyncRemoved = refreshManager;
    documentManager.onNewPublishSuccess = refreshManager;
    documentManager.onPublishRemoved = refreshManager;
    documentManager.onFoldersChanged = refreshManager;

    documentManager.onReady = function() {
        modalElt = document.querySelector('.modal-document-manager');
        documentListElt = modalElt.querySelector('.list-group.document-list');
        $documentCountElt = $(modalElt.querySelectorAll('.document-count'));
        $folderCountElt = $(modalElt.querySelectorAll('.folder-count'));
        selectedDocumentListElt = modalElt.querySelector('.list-group.selected-document-list');
        var selectFolderListElt = modalElt.querySelector('.list-group.select-folder-list');

        // Only refresh manager if visible (costly)
        $(modalElt).on('show.bs.modal', function() {
            isVisible = true;
            refreshManager();
        }).on('hide.bs.modal', function() {
            isVisible = false;
        });

        // Create folder action
        $(modalElt.querySelectorAll('.action-create-folder')).click(function() {
            var folderIndex = undefined;
            do {
                folderIndex = "folder." + utils.randomString();
            } while (_.has(folderList, folderIndex));

            localStorage[folderIndex + ".name"] = DEFAULT_FOLDER_NAME;

            // Create the folder descriptor
            var folderDesc = new FolderDescriptor(folderIndex, DEFAULT_FOLDER_NAME);

            // Add the index to the folder list
            utils.appendIndexToArray("folder.list", folderIndex);
            folderList[folderIndex] = folderDesc;
            eventMgr.onFoldersChanged();

            // Edit the name when folder has just been created
            var renameButtonElt = $(modalElt.querySelector('[data-folder-index="' + folderIndex + '"] .button-rename')).click();
            modalElt.scrollTop += renameButtonElt.offset().top - 50;
        });

        // Selection dropdown menu actions
        $(modalElt.querySelectorAll('.action-select-all')).click(function() {
            $(documentListElt.querySelectorAll('input[type="checkbox"]')).prop('checked', true);
        });
        $(modalElt.querySelectorAll('.action-unselect-all')).click(function() {
            $(documentListElt.querySelectorAll('input[type="checkbox"]')).prop('checked', false);
        });

        // Delete selection actions
        var $aDeleteElt = $(modalElt.querySelectorAll('.action-delete-items')).click(function() {
            if($liDeleteElt.hasClass('disabled')) {
                return;
            }

            doSelect();
            doDeleteConfirmation();
        });
        $liDeleteElt = $aDeleteElt.parent();

        // Delete confirmation actions
        $(modalElt.querySelectorAll('.action-delete-items-confirm')).click(function() {
            doDelete();

            $(modalElt.querySelectorAll('.document-list')).removeClass('hide');
            $(modalElt.querySelectorAll('.confirm-delete, .selected-document-list')).addClass('hide');
        });

        // Move selection actions
        var $aMoveElt = $(modalElt.querySelectorAll('.action-move-items')).click(function() {
            if($liMoveElt.hasClass('disabled')) {
                return;
            }

            doSelect();

            // Build the destination folder list
            var selectFolderListHtml = [
                '<a href="#" class="list-group-item folder clearfix">',
                '<div class="pull-right file-count">',
                _.size(orphanDocumentList),
                '</div>',
                '<div class="name"><i class="icon-forward"></i> ',
                'ROOT folder</div></a>',
            ].join('');
            selectFolderListHtml += _.chain(folderList).sortBy(function(folderDesc) {
                return folderDesc.name.toLowerCase();
            }).reduce(function(result, folderDesc) {
                return result + _.template(selectFolderEltTmpl, {
                    folderDesc: folderDesc,
                });
            }, '').value();
            selectFolderListElt.innerHTML = selectFolderListHtml;

            // Set selection event listeners
            _.each(selectFolderListElt.querySelectorAll('.folder'), function(folderElt) {
                folderElt = $(folderElt);
                folderElt.click(function() {
                    var folderDesc = folderList[folderElt.data('folderIndex')];
                    _.each(selectedDocumentList, function(fileDesc) {
                        fileDesc.folder && fileDesc.folder.removeFile(fileDesc);
                        folderDesc && folderDesc.addFile(fileDesc);
                    });
                    eventMgr.onFoldersChanged();

                    $(modalElt.querySelectorAll('.document-list')).removeClass('hide');
                    $(modalElt.querySelectorAll('.choose-folder, .select-folder-list')).addClass('hide');
                });
            });

            // Ask user for destination folder
            $(modalElt.querySelectorAll('.document-list')).addClass('hide');
            $(modalElt.querySelectorAll('.choose-folder, .select-folder-list')).removeClass('hide');
        });
        $liMoveElt = $aMoveElt.parent();

        // Cancel button
        $(modalElt.querySelectorAll('.action-cancel')).click(function() {
            $(modalElt.querySelectorAll('.document-list')).removeClass('hide');
            $(modalElt.querySelectorAll('.confirm-delete, .choose-folder, .selected-document-list, .select-folder-list')).addClass('hide');
        });
    };

    return documentManager;

});
define('extensions/workingIndicator',[
    "jquery",
    "underscore",
    "classes/Extension",
], function($, _, Extension) {

    var workingIndicator = new Extension("workingIndicator", "Working Indicator");

    var $bodyElt = undefined;
    var $workingIndicatorElt = undefined;
    workingIndicator.onAsyncRunning = function(isRunning) {
        $bodyElt.toggleClass("working", isRunning);
        $workingIndicatorElt.toggleClass("show", isRunning);
    };
    
    workingIndicator.onReady = function() {
        $bodyElt = $(document.body);
        $workingIndicatorElt = $(".working-indicator");
    };

    return workingIndicator;

});
/**
 * jGrowl 1.2.10
 *
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Written by Stan Lemon <stosh1985@gmail.com>
 * Last updated: 2013.02.14
 *
 * jGrowl is a jQuery plugin implementing unobtrusive userland notifications.  These 
 * notifications function similarly to the Growl Framework available for
 * Mac OS X (http://growl.info).
 *
 * To Do:
 * - Move library settings to containers and allow them to be changed per container
 *
 * Changes in 1.2.10
 * - Fix beforeClose to be called in click event
 *
 * Changes in 1.2.9
 * - Fixed BC break in jQuery 2.0 beta
 *
 * Changes in 1.2.8
 * - Fixes for jQuery 1.9 and the MSIE6 check, note that with jQuery 2.0 support
 *   jGrowl intends to drop support for IE6 altogether
 *
 * Changes in 1.2.6
 * - Fixed js error when a notification is opening and closing at the same time
 * 
 * Changes in 1.2.5
 * - Changed wrapper jGrowl's options usage to "o" instead of $.jGrowl.defaults
 * - Added themeState option to control 'highlight' or 'error' for jQuery UI
 * - Ammended some CSS to provide default positioning for nested usage.
 * - Changed some CSS to be prefixed with jGrowl- to prevent namespacing issues
 * - Added two new options - openDuration and closeDuration to allow 
 *   better control of notification open and close speeds, respectively 
 *   Patch contributed by Jesse Vincet.
 * - Added afterOpen callback.  Patch contributed by Russel Branca.
 *
 * Changes in 1.2.4
 * - Fixed IE bug with the close-all button
 * - Fixed IE bug with the filter CSS attribute (special thanks to gotwic)
 * - Update IE opacity CSS
 * - Changed font sizes to use "em", and only set the base style
 *
 * Changes in 1.2.3
 * - The callbacks no longer use the container as context, instead they use the actual notification
 * - The callbacks now receive the container as a parameter after the options parameter
 * - beforeOpen and beforeClose now check the return value, if it's false - the notification does
 *   not continue.  The open callback will also halt execution if it returns false.
 * - Fixed bug where containers would get confused
 * - Expanded the pause functionality to pause an entire container.
 *
 * Changes in 1.2.2
 * - Notification can now be theme rolled for jQuery UI, special thanks to Jeff Chan!
 *
 * Changes in 1.2.1
 * - Fixed instance where the interval would fire the close method multiple times.
 * - Added CSS to hide from print media
 * - Fixed issue with closer button when div { position: relative } is set
 * - Fixed leaking issue with multiple containers.  Special thanks to Matthew Hanlon!
 *
 * Changes in 1.2.0
 * - Added message pooling to limit the number of messages appearing at a given time.
 * - Closing a notification is now bound to the notification object and triggered by the close button.
 *
 * Changes in 1.1.2
 * - Added iPhone styled example
 * - Fixed possible IE7 bug when determining if the ie6 class shoudl be applied.
 * - Added template for the close button, so that it's content could be customized.
 *
 * Changes in 1.1.1
 * - Fixed CSS styling bug for ie6 caused by a mispelling
 * - Changes height restriction on default notifications to min-height
 * - Added skinned examples using a variety of images
 * - Added the ability to customize the content of the [close all] box
 * - Added jTweet, an example of using jGrowl + Twitter
 *
 * Changes in 1.1.0
 * - Multiple container and instances.
 * - Standard $.jGrowl() now wraps $.fn.jGrowl() by first establishing a generic jGrowl container.
 * - Instance methods of a jGrowl container can be called by $.fn.jGrowl(methodName)
 * - Added glue preferenced, which allows notifications to be inserted before or after nodes in the container
 * - Added new log callback which is called before anything is done for the notification
 * - Corner's attribute are now applied on an individual notification basis.
 *
 * Changes in 1.0.4
 * - Various CSS fixes so that jGrowl renders correctly in IE6.
 *
 * Changes in 1.0.3
 * - Fixed bug with options persisting across notifications
 * - Fixed theme application bug
 * - Simplified some selectors and manipulations.
 * - Added beforeOpen and beforeClose callbacks
 * - Reorganized some lines of code to be more readable
 * - Removed unnecessary this.defaults context
 * - If corners plugin is present, it's now customizable.
 * - Customizable open animation.
 * - Customizable close animation.
 * - Customizable animation easing.
 * - Added customizable positioning (top-left, top-right, bottom-left, bottom-right, center)
 *
 * Changes in 1.0.2
 * - All CSS styling is now external.
 * - Added a theme parameter which specifies a secondary class for styling, such
 *   that notifications can be customized in appearance on a per message basis.
 * - Notification life span is now customizable on a per message basis.
 * - Added the ability to disable the global closer, enabled by default.
 * - Added callbacks for when a notification is opened or closed.
 * - Added callback for the global closer.
 * - Customizable animation speed.
 * - jGrowl now set itself up and tears itself down.
 *
 * Changes in 1.0.1:
 * - Removed dependency on metadata plugin in favor of .data()
 * - Namespaced all events
 */
(function($) {
	/** Compatibility holdover for 1.9 to check IE6 **/
	var $ie6 = (function(){
		return false === $.support.boxModel && $.support.objectAll && $support.leadingWhitespace;
	})();

	/** jGrowl Wrapper - Establish a base jGrowl Container for compatibility with older releases. **/
	$.jGrowl = function( m , o ) {
		// To maintain compatibility with older version that only supported one instance we'll create the base container.
		if ( $('#jGrowl').size() == 0 ) 
			$('<div id="jGrowl"></div>').addClass( (o && o.position) ? o.position : $.jGrowl.defaults.position ).appendTo('body');

		// Create a notification on the container.
		$('#jGrowl').jGrowl(m,o);
	};


	/** Raise jGrowl Notification on a jGrowl Container **/
	$.fn.jGrowl = function( m , o ) {
		if ( $.isFunction(this.each) ) {
			var args = arguments;

			return this.each(function() {
				var self = this;

				/** Create a jGrowl Instance on the Container if it does not exist **/
				if ( $(this).data('jGrowl.instance') == undefined ) {
					$(this).data('jGrowl.instance', $.extend( new $.fn.jGrowl(), { notifications: [], element: null, interval: null } ));
					$(this).data('jGrowl.instance').startup( this );
				}

				/** Optionally call jGrowl instance methods, or just raise a normal notification **/
				if ( $.isFunction($(this).data('jGrowl.instance')[m]) ) {
					$(this).data('jGrowl.instance')[m].apply( $(this).data('jGrowl.instance') , $.makeArray(args).slice(1) );
				} else {
					$(this).data('jGrowl.instance').create( m , o );
				}
			});
		};
	};

	$.extend( $.fn.jGrowl.prototype , {

		/** Default JGrowl Settings **/
		defaults: {
			pool: 			0,
			header: 		'',
			group: 			'',
			sticky: 		false,
			position: 		'top-right',
			glue: 			'after',
			theme: 			'default',
			themeState: 	'highlight',
			corners: 		'10px',
			check: 			250,
			life: 			3000,
			closeDuration:  'normal',
			openDuration:   'normal',
			easing: 		'swing',
			closer: 		true,
			closeTemplate: '&times;',
			closerTemplate: '<div>[ close all ]</div>',
			log: 			function(e,m,o) {},
			beforeOpen: 	function(e,m,o) {},
			afterOpen: 		function(e,m,o) {},
			open: 			function(e,m,o) {},
			beforeClose: 	function(e,m,o) {},
			close: 			function(e,m,o) {},
			animateOpen: 	{
				opacity: 	'show'
			},
			animateClose: 	{
				opacity: 	'hide'
			}
		},
		
		notifications: [],
		
		/** jGrowl Container Node **/
		element: 	null,
	
		/** Interval Function **/
		interval:   null,
		
		/** Create a Notification **/
		create: 	function( message , o ) {
			var o = $.extend({}, this.defaults, o);

			/* To keep backward compatibility with 1.24 and earlier, honor 'speed' if the user has set it */
			if (typeof o.speed !== 'undefined') {
				o.openDuration = o.speed;
				o.closeDuration = o.speed;
			}

			this.notifications.push({ message: message , options: o });
			
			o.log.apply( this.element , [this.element,message,o] );
		},
		
		render: 		function( notification ) {
			var self = this;
			var message = notification.message;
			var o = notification.options;

			// Support for jQuery theme-states, if this is not used it displays a widget header
			o.themeState = (o.themeState == '') ? '' : 'ui-state-' + o.themeState;

			var notification = $(
				'<div class="jGrowl-notification ' + o.themeState + ' ui-corner-all' + 
				((o.group != undefined && o.group != '') ? ' ' + o.group : '') + '">' +
				'<div class="jGrowl-close">' + o.closeTemplate + '</div>' +
				'<div class="jGrowl-header">' + o.header + '</div>' +
				'<div class="jGrowl-message">' + message + '</div></div>'
			).data("jGrowl", o).addClass(o.theme).children('div.jGrowl-close').bind("click.jGrowl", function() {
				$(this).parent().trigger('jGrowl.beforeClose');
			}).parent();


			/** Notification Actions **/
			$(notification).bind("mouseover.jGrowl", function() {
				$('div.jGrowl-notification', self.element).data("jGrowl.pause", true);
			}).bind("mouseout.jGrowl", function() {
				$('div.jGrowl-notification', self.element).data("jGrowl.pause", false);
			}).bind('jGrowl.beforeOpen', function() {
				if ( o.beforeOpen.apply( notification , [notification,message,o,self.element] ) != false ) {
					$(this).trigger('jGrowl.open');
				}
			}).bind('jGrowl.open', function() {
				if ( o.open.apply( notification , [notification,message,o,self.element] ) != false ) {
					if ( o.glue == 'after' ) {
						$('div.jGrowl-notification:last', self.element).after(notification);
					} else {
						$('div.jGrowl-notification:first', self.element).before(notification);
					}
					
					$(this).animate(o.animateOpen, o.openDuration, o.easing, function() {
						// Fixes some anti-aliasing issues with IE filters.
						if ($.support.opacity === false) 
							this.style.removeAttribute('filter');

						if ( $(this).data("jGrowl") != null ) // Happens when a notification is closing before it's open.
							$(this).data("jGrowl").created = new Date();
						
						$(this).trigger('jGrowl.afterOpen');
					});
				}
			}).bind('jGrowl.afterOpen', function() {
				o.afterOpen.apply( notification , [notification,message,o,self.element] );
			}).bind('jGrowl.beforeClose', function() {
				if ( o.beforeClose.apply( notification , [notification,message,o,self.element] ) != false )
					$(this).trigger('jGrowl.close');
			}).bind('jGrowl.close', function() {
				// Pause the notification, lest during the course of animation another close event gets called.
				$(this).data('jGrowl.pause', true);
				$(this).animate(o.animateClose, o.closeDuration, o.easing, function() {
					if ( $.isFunction(o.close) ) {
						if ( o.close.apply( notification , [notification,message,o,self.element] ) !== false )
							$(this).remove();
					} else {
						$(this).remove();
					}
				});
			}).trigger('jGrowl.beforeOpen');
		
			/** Optional Corners Plugin **/
			if ( o.corners != '' && $.fn.corner != undefined ) $(notification).corner( o.corners );

			/** Add a Global Closer if more than one notification exists **/
			if ( $('div.jGrowl-notification:parent', self.element).size() > 1 && 
				 $('div.jGrowl-closer', self.element).size() == 0 && this.defaults.closer != false ) {
				$(this.defaults.closerTemplate).addClass('jGrowl-closer ' + this.defaults.themeState + ' ui-corner-all').addClass(this.defaults.theme)
					.appendTo(self.element).animate(this.defaults.animateOpen, this.defaults.speed, this.defaults.easing)
					.bind("click.jGrowl", function() {
						$(this).siblings().trigger("jGrowl.beforeClose");

						if ( $.isFunction( self.defaults.closer ) ) {
							self.defaults.closer.apply( $(this).parent()[0] , [$(this).parent()[0]] );
						}
					});
			};
		},

		/** Update the jGrowl Container, removing old jGrowl notifications **/
		update:	 function() {
			$(this.element).find('div.jGrowl-notification:parent').each( function() {
				if ( $(this).data("jGrowl") != undefined && $(this).data("jGrowl").created != undefined && 
					 ($(this).data("jGrowl").created.getTime() + parseInt($(this).data("jGrowl").life))  < (new Date()).getTime() && 
					 $(this).data("jGrowl").sticky != true && 
					 ($(this).data("jGrowl.pause") == undefined || $(this).data("jGrowl.pause") != true) ) {

					// Pause the notification, lest during the course of animation another close event gets called.
					$(this).trigger('jGrowl.beforeClose');
				}
			});

			if ( this.notifications.length > 0 && 
				 (this.defaults.pool == 0 || $(this.element).find('div.jGrowl-notification:parent').size() < this.defaults.pool) )
				this.render( this.notifications.shift() );

			if ( $(this.element).find('div.jGrowl-notification:parent').size() < 2 ) {
				$(this.element).find('div.jGrowl-closer').animate(this.defaults.animateClose, this.defaults.speed, this.defaults.easing, function() {
					$(this).remove();
				});
			}
		},

		/** Setup the jGrowl Notification Container **/
		startup:	function(e) {
			this.element = $(e).addClass('jGrowl').append('<div class="jGrowl-notification"></div>');
			this.interval = setInterval( function() { 
				$(e).data('jGrowl.instance').update(); 
			}, parseInt(this.defaults.check));
			
			if ($ie6) {
				$(this.element).addClass('ie6');
			}
		},

		/** Shutdown jGrowl, removing it and clearing the interval **/
		shutdown:   function() {
			$(this.element).removeClass('jGrowl').find('div.jGrowl-notification').remove();
			clearInterval( this.interval );
		},
		
		close: 	function() {
			$(this.element).find('div.jGrowl-notification').each(function(){
				$(this).trigger('jGrowl.beforeClose');
			});
		}
	});
	
	/** Reference the Defaults Object for compatibility with older versions of jGrowl **/
	$.jGrowl.defaults = $.fn.jGrowl.prototype.defaults;

})(jQuery);

define("jgrowl", ["jquery"], (function (global) {
    return function () {
        var ret, fn;
        return ret || global.jQuery.jGrowl;
    };
}(this)));

define('text!html/notificationsSettingsBlock.html',[],function () { return '<p>Shows notification messages in the bottom-right corner of the\n\tscreen.</p>\n<div class="form-horizontal">\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label" for="input-notifications-timeout">Timeout</label>\n\t\t<div class="col-lg-7 form-inline">\n\t\t\t<input type="text" id="input-notifications-timeout"\n\t\t\t\tclass="col-lg-5 form-control"> <span class="help-inline">ms</span>\n\t\t</div>\n\t</div>\n</div>';});

define('extensions/notifications',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "jgrowl",
    "text!html/notificationsSettingsBlock.html",
], function($, _, utils, Extension, jGrowl, notificationsSettingsBlockHTML) {

    var notifications = new Extension("notifications", "Notifications");
    notifications.settingsBlock = notificationsSettingsBlockHTML;
    notifications.defaultConfig = {
        timeout: 8000
    };

    notifications.onLoadSettings = function() {
        utils.setInputValue("#input-notifications-timeout", notifications.config.timeout);
    };

    notifications.onSaveSettings = function(newConfig, event) {
        newConfig.timeout = utils.getInputIntValue("#input-notifications-timeout", event, 1, 60000);
    };

    var isInit = false;
    function init() {
        if(isInit === false) {
            // jGrowl configuration
            jGrowl.defaults.life = notifications.config.timeout;
            jGrowl.defaults.closer = false;
            jGrowl.defaults.closeTemplate = '';
            jGrowl.defaults.position = 'bottom-right';
            isInit = true;
        }
    }

    function showMessage(message, iconClass, options) {
        logger.info(message);
        init();
        if(!message) {
            return;
        }
        var endOfMsg = message.indexOf("|");
        if(endOfMsg !== -1) {
            message = message.substring(0, endOfMsg);
            if(!message) {
                return;
            }
        }
        options = options || {};
        iconClass = iconClass || "icon-info-circled";
        jGrowl("<i class='icon-white " + iconClass + "'></i> " + _.escape(message).replace(/\n/g, '<br/>'), options);
    }

    notifications.onMessage = function(message) {
        showMessage(message);
    };

    notifications.onError = function(error) {
        logger.error(error);
        if(_.isString(error)) {
            showMessage(error, "icon-attention");
        }
        else if(_.isObject(error)) {
            showMessage(error.message, "icon-attention");
        }
    };

    notifications.onOfflineChanged = function(isOffline) {
        if(isOffline === true) {
            showMessage("You are offline.", "icon-attention-circled msg-offline", {
                sticky: true,
                close: function() {
                    showMessage("You are back online!", "icon-signal");
                }
            });
        }
        else {
            $(".msg-offline").parents(".jGrowl-notification").trigger('jGrowl.beforeClose');
        }
    };

    notifications.onSyncImportSuccess = function(fileDescList, provider) {
        var titles = _.map(fileDescList, function(fileDesc) {
            return fileDesc.title;
        }).join(", ");
        showMessage(titles + ' imported successfully from ' + provider.providerName + '.');
    };

    notifications.onSyncExportSuccess = function(fileDesc, syncAttributes) {
        showMessage('"' + fileDesc.title + '" will now be synchronized on ' + syncAttributes.provider.providerName + '.');
    };

    notifications.onSyncRemoved = function(fileDesc, syncAttributes) {
        showMessage(syncAttributes.provider.providerName + " synchronized location has been removed.");
    };

    notifications.onPublishSuccess = function(fileDesc) {
        showMessage('"' + fileDesc.title + '" successfully published.');
    };

    notifications.onNewPublishSuccess = function(fileDesc, publishAttributes) {
        showMessage('"' + fileDesc.title + '" is now published on ' + publishAttributes.provider.providerName + '.');
    };

    notifications.onPublishRemoved = function(fileDesc, publishAttributes) {
        showMessage(publishAttributes.provider.providerName + " publish location has been removed.");
    };

    return notifications;
});
define('text!html/markdownExtraSettingsBlock.html',[],function () { return '<p>Adds extra features to the original Markdown syntax.</p>\n<div class="form-horizontal">\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label"\n\t\t\tfor="input-markdownextra-fencedcodegfm">GFM fenced code\n\t\t\tblocks</label>\n\t\t<div class="col-lg-7">\n\t\t\t<div class="checkbox">\n\t\t\t\t<input type="checkbox" id="input-markdownextra-fencedcodegfm">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label" for="input-markdownextra-tables">Tables</label>\n\t\t<div class="col-lg-7">\n\t\t\t<div class="checkbox">\n\t\t\t\t<input type="checkbox" id="input-markdownextra-tables">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label"\n\t\t\tfor="input-markdownextra-deflist">Definition lists</label>\n\t\t<div class="col-lg-7">\n\t\t\t<div class="checkbox">\n\t\t\t\t<input type="checkbox" id="input-markdownextra-deflist">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label"\n\t\t\tfor="input-markdownextra-attrlist">Special attributes</label>\n\t\t<div class="col-lg-7">\n\t\t\t<div class="checkbox">\n\t\t\t\t<input type="checkbox" id="input-markdownextra-attrlist">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label"\n\t\t\tfor="input-markdownextra-footnotes">Footnotes</label>\n\t\t<div class="col-lg-7">\n\t\t\t<div class="checkbox">\n\t\t\t\t<input type="checkbox" id="input-markdownextra-footnotes">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label"\n\t\t\tfor="input-markdownextra-smartypants">SmartyPants</label>\n\t\t<div class="col-lg-7">\n\t\t\t<div class="checkbox">\n\t\t\t\t<input type="checkbox" id="input-markdownextra-smartypants">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label"\n\t\t\tfor="input-markdownextra-highlighter">Syntax highlighter</label>\n\t\t<div class="col-lg-7">\n\t\t\t<select id="input-markdownextra-highlighter" class="form-control"><option>None</option>\n\t\t\t\t<option value="prettify">Prettify</option>\n\t\t\t\t<option value="highlight">Highlight.js</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n</div>\n<span class="help-block pull-right"><a target="_blank"\n\thref="https://github.com/jmcmanus/pagedown-extra">More info</a></span>';});

var Markdown;

if (typeof exports === "object" && typeof require === "function") // we're in a CommonJS (e.g. Node.js) module
    Markdown = exports;
else
    Markdown = {};
    
// The following text is included for historical reasons, but should
// be taken with a pinch of salt; it's not all true anymore.

//
// Wherever possible, Showdown is a straight, line-by-line port
// of the Perl version of Markdown.
//
// This is not a normal parser design; it's basically just a
// series of string substitutions.  It's hard to read and
// maintain this way,  but keeping Showdown close to the original
// design makes it easier to port new features.
//
// More importantly, Showdown behaves like markdown.pl in most
// edge cases.  So web applications can do client-side preview
// in Javascript, and then build identical HTML on the server.
//
// This port needs the new RegExp functionality of ECMA 262,
// 3rd Edition (i.e. Javascript 1.5).  Most modern web browsers
// should do fine.  Even with the new regular expression features,
// We do a lot of work to emulate Perl's regex functionality.
// The tricky changes in this file mostly have the "attacklab:"
// label.  Major or self-explanatory changes don't.
//
// Smart diff tools like Araxis Merge will be able to match up
// this file with markdown.pl in a useful way.  A little tweaking
// helps: in a copy of markdown.pl, replace "#" with "//" and
// replace "$text" with "text".  Be sure to ignore whitespace
// and line endings.
//


//
// Usage:
//
//   var text = "Markdown *rocks*.";
//
//   var converter = new Markdown.Converter();
//   var html = converter.makeHtml(text);
//
//   alert(html);
//
// Note: move the sample code to the bottom of this
// file before uncommenting it.
//

(function () {

    function identity(x) { return x; }
    function returnFalse(x) { return false; }

    function HookCollection() { }

    HookCollection.prototype = {

        chain: function (hookname, func) {
            var original = this[hookname];
            if (!original)
                throw new Error("unknown hook " + hookname);

            if (original === identity)
                this[hookname] = func;
            else
                this[hookname] = function (text) {
                    var args = Array.prototype.slice.call(arguments, 0);
                    args[0] = original.apply(null, args);
                    return func.apply(null, args);
                };
        },
        set: function (hookname, func) {
            if (!this[hookname])
                throw new Error("unknown hook " + hookname);
            this[hookname] = func;
        },
        addNoop: function (hookname) {
            this[hookname] = identity;
        },
        addFalse: function (hookname) {
            this[hookname] = returnFalse;
        }
    };

    Markdown.HookCollection = HookCollection;

    // g_urls and g_titles allow arbitrary user-entered strings as keys. This
    // caused an exception (and hence stopped the rendering) when the user entered
    // e.g. [push] or [__proto__]. Adding a prefix to the actual key prevents this
    // (since no builtin property starts with "s_"). See
    // http://meta.stackoverflow.com/questions/64655/strange-wmd-bug
    // (granted, switching from Array() to Object() alone would have left only __proto__
    // to be a problem)
    function SaveHash() { }
    SaveHash.prototype = {
        set: function (key, value) {
            this["s_" + key] = value;
        },
        get: function (key) {
            return this["s_" + key];
        }
    };

    Markdown.Converter = function () {
        var pluginHooks = this.hooks = new HookCollection();
        
        // given a URL that was encountered by itself (without markup), should return the link text that's to be given to this link
        pluginHooks.addNoop("plainLinkText");
        
        // called with the orignal text as given to makeHtml. The result of this plugin hook is the actual markdown source that will be cooked
        pluginHooks.addNoop("preConversion");
        
        // called with the text once all normalizations have been completed (tabs to spaces, line endings, etc.), but before any conversions have
        pluginHooks.addNoop("postNormalization");
        
        // Called with the text before / after creating block elements like code blocks and lists. Note that this is called recursively
        // with inner content, e.g. it's called with the full text, and then only with the content of a blockquote. The inner
        // call will receive outdented text.
        pluginHooks.addNoop("preBlockGamut");
        pluginHooks.addNoop("postBlockGamut");
        
        // called with the text of a single block element before / after the span-level conversions (bold, code spans, etc.) have been made
        pluginHooks.addNoop("preSpanGamut");
        pluginHooks.addNoop("postSpanGamut");
        
        // called with the final cooked HTML code. The result of this plugin hook is the actual output of makeHtml
        pluginHooks.addNoop("postConversion");

        //
        // Private state of the converter instance:
        //

        // Global hashes, used by various utility routines
        var g_urls;
        var g_titles;
        var g_html_blocks;

        // Used to track when we're inside an ordered or unordered list
        // (see _ProcessListItems() for details):
        var g_list_level;

        this.makeHtml = function (text) {

            //
            // Main function. The order in which other subs are called here is
            // essential. Link and image substitutions need to happen before
            // _EscapeSpecialCharsWithinTagAttributes(), so that any *'s or _'s in the <a>
            // and <img> tags get encoded.
            //

            // This will only happen if makeHtml on the same converter instance is called from a plugin hook.
            // Don't do that.
            if (g_urls)
                throw new Error("Recursive call to converter.makeHtml");
        
            // Create the private state objects.
            g_urls = new SaveHash();
            g_titles = new SaveHash();
            g_html_blocks = [];
            g_list_level = 0;

            text = pluginHooks.preConversion(text);

            // attacklab: Replace ~ with ~T
            // This lets us use tilde as an escape char to avoid md5 hashes
            // The choice of character is arbitray; anything that isn't
            // magic in Markdown will work.
            text = text.replace(/~/g, "~T");

            // attacklab: Replace $ with ~D
            // RegExp interprets $ as a special character
            // when it's in a replacement string
            text = text.replace(/\$/g, "~D");

            // Standardize line endings
            text = text.replace(/\r\n/g, "\n"); // DOS to Unix
            text = text.replace(/\r/g, "\n"); // Mac to Unix

            // Make sure text begins and ends with a couple of newlines:
            text = "\n\n" + text + "\n\n";

            // Convert all tabs to spaces.
            text = _Detab(text);

            // Strip any lines consisting only of spaces and tabs.
            // This makes subsequent regexen easier to write, because we can
            // match consecutive blank lines with /\n+/ instead of something
            // contorted like /[ \t]*\n+/ .
            text = text.replace(/^[ \t]+$/mg, "");
            
            text = pluginHooks.postNormalization(text);

            // Turn block-level HTML blocks into hash entries
            text = _HashHTMLBlocks(text);

            // Strip link definitions, store in hashes.
            text = _StripLinkDefinitions(text);

            text = _RunBlockGamut(text);

            text = _UnescapeSpecialChars(text);

            // attacklab: Restore dollar signs
            text = text.replace(/~D/g, "$$");

            // attacklab: Restore tildes
            text = text.replace(/~T/g, "~");

            text = pluginHooks.postConversion(text);

            g_html_blocks = g_titles = g_urls = null;

            return text;
        };

        function _StripLinkDefinitions(text) {
            //
            // Strips link definitions from text, stores the URLs and titles in
            // hash references.
            //

            // Link defs are in the form: ^[id]: url "optional title"

            /*
            text = text.replace(/
                ^[ ]{0,3}\[(.+)\]:  // id = $1  attacklab: g_tab_width - 1
                [ \t]*
                \n?                 // maybe *one* newline
                [ \t]*
                <?(\S+?)>?          // url = $2
                (?=\s|$)            // lookahead for whitespace instead of the lookbehind removed below
                [ \t]*
                \n?                 // maybe one newline
                [ \t]*
                (                   // (potential) title = $3
                    (\n*)           // any lines skipped = $4 attacklab: lookbehind removed
                    [ \t]+
                    ["(]
                    (.+?)           // title = $5
                    [")]
                    [ \t]*
                )?                  // title is optional
                (?:\n+|$)
            /gm, function(){...});
            */

            text = text.replace(/^[ ]{0,3}\[(.+)\]:[ \t]*\n?[ \t]*<?(\S+?)>?(?=\s|$)[ \t]*\n?[ \t]*((\n*)["(](.+?)[")][ \t]*)?(?:\n+)/gm,
                function (wholeMatch, m1, m2, m3, m4, m5) {
                    m1 = m1.toLowerCase();
                    g_urls.set(m1, _EncodeAmpsAndAngles(m2));  // Link IDs are case-insensitive
                    if (m4) {
                        // Oops, found blank lines, so it's not a title.
                        // Put back the parenthetical statement we stole.
                        return m3;
                    } else if (m5) {
                        g_titles.set(m1, m5.replace(/"/g, "&quot;"));
                    }

                    // Completely remove the definition from the text
                    return "";
                }
            );

            return text;
        }

        function _HashHTMLBlocks(text) {

            // Hashify HTML blocks:
            // We only want to do this for block-level HTML tags, such as headers,
            // lists, and tables. That's because we still want to wrap <p>s around
            // "paragraphs" that are wrapped in non-block-level tags, such as anchors,
            // phrase emphasis, and spans. The list of tags we're looking for is
            // hard-coded:
            var block_tags_a = "p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del"
            var block_tags_b = "p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math"

            // First, look for nested blocks, e.g.:
            //   <div>
            //     <div>
            //     tags for inner block must be indented.
            //     </div>
            //   </div>
            //
            // The outermost tags must start at the left margin for this to match, and
            // the inner nested divs must be indented.
            // We need to do this before the next, more liberal match, because the next
            // match will start at the first `<div>` and stop at the first `</div>`.

            // attacklab: This regex can be expensive when it fails.

            /*
            text = text.replace(/
                (                       // save in $1
                    ^                   // start of line  (with /m)
                    <($block_tags_a)    // start tag = $2
                    \b                  // word break
                                        // attacklab: hack around khtml/pcre bug...
                    [^\r]*?\n           // any number of lines, minimally matching
                    </\2>               // the matching end tag
                    [ \t]*              // trailing spaces/tabs
                    (?=\n+)             // followed by a newline
                )                       // attacklab: there are sentinel newlines at end of document
            /gm,function(){...}};
            */
            text = text.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del)\b[^\r]*?\n<\/\2>[ \t]*(?=\n+))/gm, hashElement);

            //
            // Now match more liberally, simply from `\n<tag>` to `</tag>\n`
            //

            /*
            text = text.replace(/
                (                       // save in $1
                    ^                   // start of line  (with /m)
                    <($block_tags_b)    // start tag = $2
                    \b                  // word break
                                        // attacklab: hack around khtml/pcre bug...
                    [^\r]*?             // any number of lines, minimally matching
                    .*</\2>             // the matching end tag
                    [ \t]*              // trailing spaces/tabs
                    (?=\n+)             // followed by a newline
                )                       // attacklab: there are sentinel newlines at end of document
            /gm,function(){...}};
            */
            text = text.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math)\b[^\r]*?.*<\/\2>[ \t]*(?=\n+)\n)/gm, hashElement);

            // Special case just for <hr />. It was easier to make a special case than
            // to make the other regex more complicated.  

            /*
            text = text.replace(/
                \n                  // Starting after a blank line
                [ ]{0,3}
                (                   // save in $1
                    (<(hr)          // start tag = $2
                        \b          // word break
                        ([^<>])*?
                    \/?>)           // the matching end tag
                    [ \t]*
                    (?=\n{2,})      // followed by a blank line
                )
            /g,hashElement);
            */
            text = text.replace(/\n[ ]{0,3}((<(hr)\b([^<>])*?\/?>)[ \t]*(?=\n{2,}))/g, hashElement);

            // Special case for standalone HTML comments:

            /*
            text = text.replace(/
                \n\n                                            // Starting after a blank line
                [ ]{0,3}                                        // attacklab: g_tab_width - 1
                (                                               // save in $1
                    <!
                    (--(?:|(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)   // see http://www.w3.org/TR/html-markup/syntax.html#comments and http://meta.stackoverflow.com/q/95256
                    >
                    [ \t]*
                    (?=\n{2,})                                  // followed by a blank line
                )
            /g,hashElement);
            */
            text = text.replace(/\n\n[ ]{0,3}(<!(--(?:|(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>[ \t]*(?=\n{2,}))/g, hashElement);

            // PHP and ASP-style processor instructions (<?...?> and <%...%>)

            /*
            text = text.replace(/
                (?:
                    \n\n            // Starting after a blank line
                )
                (                   // save in $1
                    [ ]{0,3}        // attacklab: g_tab_width - 1
                    (?:
                        <([?%])     // $2
                        [^\r]*?
                        \2>
                    )
                    [ \t]*
                    (?=\n{2,})      // followed by a blank line
                )
            /g,hashElement);
            */
            text = text.replace(/(?:\n\n)([ ]{0,3}(?:<([?%])[^\r]*?\2>)[ \t]*(?=\n{2,}))/g, hashElement);

            return text;
        }

        function hashElement(wholeMatch, m1) {
            var blockText = m1;

            // Undo double lines
            blockText = blockText.replace(/^\n+/, "");

            // strip trailing blank lines
            blockText = blockText.replace(/\n+$/g, "");

            // Replace the element text with a marker ("~KxK" where x is its key)
            blockText = "\n\n~K" + (g_html_blocks.push(blockText) - 1) + "K\n\n";

            return blockText;
        }
        
        var blockGamutHookCallback = function (t) { return _RunBlockGamut(t); }

        function _RunBlockGamut(text, doNotUnhash) {
            //
            // These are all the transformations that form block-level
            // tags like paragraphs, headers, and list items.
            //
            
            text = pluginHooks.preBlockGamut(text, blockGamutHookCallback);
            
            text = _DoHeaders(text);

            // Do Horizontal Rules:
            var replacement = "<hr />\n";
            text = text.replace(/^[ ]{0,2}([ ]?\*[ ]?){3,}[ \t]*$/gm, replacement);
            text = text.replace(/^[ ]{0,2}([ ]?-[ ]?){3,}[ \t]*$/gm, replacement);
            text = text.replace(/^[ ]{0,2}([ ]?_[ ]?){3,}[ \t]*$/gm, replacement);

            text = _DoLists(text);
            text = _DoCodeBlocks(text);
            text = _DoBlockQuotes(text);
            
            text = pluginHooks.postBlockGamut(text, blockGamutHookCallback);

            // We already ran _HashHTMLBlocks() before, in Markdown(), but that
            // was to escape raw HTML in the original Markdown source. This time,
            // we're escaping the markup we've just created, so that we don't wrap
            // <p> tags around block-level tags.
            text = _HashHTMLBlocks(text);
            text = _FormParagraphs(text, doNotUnhash);

            return text;
        }

        function _RunSpanGamut(text) {
            //
            // These are all the transformations that occur *within* block-level
            // tags like paragraphs, headers, and list items.
            //

            text = pluginHooks.preSpanGamut(text);
            
            text = _DoCodeSpans(text);
            text = _EscapeSpecialCharsWithinTagAttributes(text);
            text = _EncodeBackslashEscapes(text);

            // Process anchor and image tags. Images must come first,
            // because ![foo][f] looks like an anchor.
            text = _DoImages(text);
            text = _DoAnchors(text);

            // Make links out of things like `<http://example.com/>`
            // Must come after _DoAnchors(), because you can use < and >
            // delimiters in inline links like [this](<url>).
            text = _DoAutoLinks(text);
            
            text = text.replace(/~P/g, "://"); // put in place to prevent autolinking; reset now
            
            text = _EncodeAmpsAndAngles(text);
            text = _DoItalicsAndBold(text);

            // Do hard breaks:
            text = text.replace(/  +\n/g, " <br>\n");
            
            text = pluginHooks.postSpanGamut(text);

            return text;
        }

        function _EscapeSpecialCharsWithinTagAttributes(text) {
            //
            // Within tags -- meaning between < and > -- encode [\ ` * _] so they
            // don't conflict with their use in Markdown for code, italics and strong.
            //

            // Build a regex to find HTML tags and comments.  See Friedl's 
            // "Mastering Regular Expressions", 2nd Ed., pp. 200-201.

            // SE: changed the comment part of the regex

            var regex = /(<[a-z\/!$]("[^"]*"|'[^']*'|[^'">])*>|<!(--(?:|(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>)/gi;

            text = text.replace(regex, function (wholeMatch) {
                var tag = wholeMatch.replace(/(.)<\/?code>(?=.)/g, "$1`");
                tag = escapeCharacters(tag, wholeMatch.charAt(1) == "!" ? "\\`*_/" : "\\`*_"); // also escape slashes in comments to prevent autolinking there -- http://meta.stackoverflow.com/questions/95987
                return tag;
            });

            return text;
        }

        function _DoAnchors(text) {
            //
            // Turn Markdown link shortcuts into XHTML <a> tags.
            //
            //
            // First, handle reference-style links: [link text] [id]
            //

            /*
            text = text.replace(/
                (                           // wrap whole match in $1
                    \[
                    (
                        (?:
                            \[[^\]]*\]      // allow brackets nested one level
                            |
                            [^\[]           // or anything else
                        )*
                    )
                    \]

                    [ ]?                    // one optional space
                    (?:\n[ ]*)?             // one optional newline followed by spaces

                    \[
                    (.*?)                   // id = $3
                    \]
                )
                ()()()()                    // pad remaining backreferences
            /g, writeAnchorTag);
            */
            text = text.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g, writeAnchorTag);

            //
            // Next, inline-style links: [link text](url "optional title")
            //

            /*
            text = text.replace(/
                (                           // wrap whole match in $1
                    \[
                    (
                        (?:
                            \[[^\]]*\]      // allow brackets nested one level
                            |
                            [^\[\]]         // or anything else
                        )*
                    )
                    \]
                    \(                      // literal paren
                    [ \t]*
                    ()                      // no id, so leave $3 empty
                    <?(                     // href = $4
                        (?:
                            \([^)]*\)       // allow one level of (correctly nested) parens (think MSDN)
                            |
                            [^()\s]
                        )*?
                    )>?                
                    [ \t]*
                    (                       // $5
                        (['"])              // quote char = $6
                        (.*?)               // Title = $7
                        \6                  // matching quote
                        [ \t]*              // ignore any spaces/tabs between closing quote and )
                    )?                      // title is optional
                    \)
                )
            /g, writeAnchorTag);
            */

            text = text.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\]\([ \t]*()<?((?:\([^)]*\)|[^()\s])*?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g, writeAnchorTag);

            //
            // Last, handle reference-style shortcuts: [link text]
            // These must come last in case you've also got [link test][1]
            // or [link test](/foo)
            //

            /*
            text = text.replace(/
                (                   // wrap whole match in $1
                    \[
                    ([^\[\]]+)      // link text = $2; can't contain '[' or ']'
                    \]
                )
                ()()()()()          // pad rest of backreferences
            /g, writeAnchorTag);
            */
            text = text.replace(/(\[([^\[\]]+)\])()()()()()/g, writeAnchorTag);

            return text;
        }

        function writeAnchorTag(wholeMatch, m1, m2, m3, m4, m5, m6, m7) {
            if (m7 == undefined) m7 = "";
            var whole_match = m1;
            var link_text = m2.replace(/:\/\//g, "~P"); // to prevent auto-linking withing the link. will be converted back after the auto-linker runs
            var link_id = m3.toLowerCase();
            var url = m4;
            var title = m7;

            if (url == "") {
                if (link_id == "") {
                    // lower-case and turn embedded newlines into spaces
                    link_id = link_text.toLowerCase().replace(/ ?\n/g, " ");
                }
                url = "#" + link_id;

                if (g_urls.get(link_id) != undefined) {
                    url = g_urls.get(link_id);
                    if (g_titles.get(link_id) != undefined) {
                        title = g_titles.get(link_id);
                    }
                }
                else {
                    if (whole_match.search(/\(\s*\)$/m) > -1) {
                        // Special case for explicit empty url
                        url = "";
                    } else {
                        return whole_match;
                    }
                }
            }
            url = encodeProblemUrlChars(url);
            url = escapeCharacters(url, "*_");
            var result = "<a href=\"" + url + "\"";

            if (title != "") {
                title = attributeEncode(title);
                title = escapeCharacters(title, "*_");
                result += " title=\"" + title + "\"";
            }

            result += ">" + link_text + "</a>";

            return result;
        }

        function _DoImages(text) {
            //
            // Turn Markdown image shortcuts into <img> tags.
            //

            //
            // First, handle reference-style labeled images: ![alt text][id]
            //

            /*
            text = text.replace(/
                (                   // wrap whole match in $1
                    !\[
                    (.*?)           // alt text = $2
                    \]

                    [ ]?            // one optional space
                    (?:\n[ ]*)?     // one optional newline followed by spaces

                    \[
                    (.*?)           // id = $3
                    \]
                )
                ()()()()            // pad rest of backreferences
            /g, writeImageTag);
            */
            text = text.replace(/(!\[(.*?)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g, writeImageTag);

            //
            // Next, handle inline images:  ![alt text](url "optional title")
            // Don't forget: encode * and _

            /*
            text = text.replace(/
                (                   // wrap whole match in $1
                    !\[
                    (.*?)           // alt text = $2
                    \]
                    \s?             // One optional whitespace character
                    \(              // literal paren
                    [ \t]*
                    ()              // no id, so leave $3 empty
                    <?(\S+?)>?      // src url = $4
                    [ \t]*
                    (               // $5
                        (['"])      // quote char = $6
                        (.*?)       // title = $7
                        \6          // matching quote
                        [ \t]*
                    )?              // title is optional
                    \)
                )
            /g, writeImageTag);
            */
            text = text.replace(/(!\[(.*?)\]\s?\([ \t]*()<?(\S+?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g, writeImageTag);

            return text;
        }
        
        function attributeEncode(text) {
            // unconditionally replace angle brackets here -- what ends up in an attribute (e.g. alt or title)
            // never makes sense to have verbatim HTML in it (and the sanitizer would totally break it)
            return text.replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;");
        }

        function writeImageTag(wholeMatch, m1, m2, m3, m4, m5, m6, m7) {
            var whole_match = m1;
            var alt_text = m2;
            var link_id = m3.toLowerCase();
            var url = m4;
            var title = m7;

            if (!title) title = "";

            if (url == "") {
                if (link_id == "") {
                    // lower-case and turn embedded newlines into spaces
                    link_id = alt_text.toLowerCase().replace(/ ?\n/g, " ");
                }
                url = "#" + link_id;

                if (g_urls.get(link_id) != undefined) {
                    url = g_urls.get(link_id);
                    if (g_titles.get(link_id) != undefined) {
                        title = g_titles.get(link_id);
                    }
                }
                else {
                    return whole_match;
                }
            }
            
            alt_text = escapeCharacters(attributeEncode(alt_text), "*_[]()");
            url = escapeCharacters(url, "*_");
            var result = "<img src=\"" + url + "\" alt=\"" + alt_text + "\"";

            // attacklab: Markdown.pl adds empty title attributes to images.
            // Replicate this bug.

            //if (title != "") {
            title = attributeEncode(title);
            title = escapeCharacters(title, "*_");
            result += " title=\"" + title + "\"";
            //}

            result += " />";

            return result;
        }

        function _DoHeaders(text) {

            // Setext-style headers:
            //  Header 1
            //  ========
            //  
            //  Header 2
            //  --------
            //
            text = text.replace(/^(.+)[ \t]*\n=+[ \t]*\n+/gm,
                function (wholeMatch, m1) { return "<h1 class=\"wmd-title\">" + _RunSpanGamut(m1) + "</h1>\n\n"; }
            );

            text = text.replace(/^(.+)[ \t]*\n-+[ \t]*\n+/gm,
                function (matchFound, m1) { return "<h2 class=\"wmd-title\">" + _RunSpanGamut(m1) + "</h2>\n\n"; }
            );

            // atx-style headers:
            //  # Header 1
            //  ## Header 2
            //  ## Header 2 with closing hashes ##
            //  ...
            //  ###### Header 6
            //

            /*
            text = text.replace(/
                ^(\#{1,6})      // $1 = string of #'s
                [ \t]*
                (.+?)           // $2 = Header text
                [ \t]*
                \#*             // optional closing #'s (not counted)
                \n+
            /gm, function() {...});
            */

            text = text.replace(/^(\#{1,6})[ \t]*(.+?)[ \t]*\#*\n+/gm,
                function (wholeMatch, m1, m2) {
                    var h_level = m1.length;
                    return "<h" + h_level + " class=\"wmd-title\">" + _RunSpanGamut(m2) + "</h" + h_level + ">\n\n";
                }
            );

            return text;
        }

        function _DoLists(text, isInsideParagraphlessListItem) {
            //
            // Form HTML ordered (numbered) and unordered (bulleted) lists.
            //

            // attacklab: add sentinel to hack around khtml/safari bug:
            // http://bugs.webkit.org/show_bug.cgi?id=11231
            text += "~0";

            // Re-usable pattern to match any entirel ul or ol list:

            /*
            var whole_list = /
                (                                   // $1 = whole list
                    (                               // $2
                        [ ]{0,3}                    // attacklab: g_tab_width - 1
                        ([*+-]|\d+[.])              // $3 = first list item marker
                        [ \t]+
                    )
                    [^\r]+?
                    (                               // $4
                        ~0                          // sentinel for workaround; should be $
                        |
                        \n{2,}
                        (?=\S)
                        (?!                         // Negative lookahead for another list item marker
                            [ \t]*
                            (?:[*+-]|\d+[.])[ \t]+
                        )
                    )
                )
            /g
            */
            var whole_list = /^(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/gm;

            if (g_list_level) {
                text = text.replace(whole_list, function (wholeMatch, m1, m2) {
                    var list = m1;
                    var list_type = (m2.search(/[*+-]/g) > -1) ? "ul" : "ol";

                    var result = _ProcessListItems(list, list_type, isInsideParagraphlessListItem);

                    // Trim any trailing whitespace, to put the closing `</$list_type>`
                    // up on the preceding line, to get it past the current stupid
                    // HTML block parser. This is a hack to work around the terrible
                    // hack that is the HTML block parser.
                    result = result.replace(/\s+$/, "");
                    result = "<" + list_type + ">" + result + "</" + list_type + ">\n";
                    return result;
                });
            } else {
                whole_list = /(\n\n|^\n?)(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/g;
                text = text.replace(whole_list, function (wholeMatch, m1, m2, m3) {
                    var runup = m1;
                    var list = m2;

                    var list_type = (m3.search(/[*+-]/g) > -1) ? "ul" : "ol";
                    var result = _ProcessListItems(list, list_type);
                    result = runup + "<" + list_type + ">\n" + result + "</" + list_type + ">\n";
                    return result;
                });
            }

            // attacklab: strip sentinel
            text = text.replace(/~0/, "");

            return text;
        }

        var _listItemMarkers = { ol: "\\d+[.]", ul: "[*+-]" };

        function _ProcessListItems(list_str, list_type, isInsideParagraphlessListItem) {
            //
            //  Process the contents of a single ordered or unordered list, splitting it
            //  into individual list items.
            //
            //  list_type is either "ul" or "ol".

            // The $g_list_level global keeps track of when we're inside a list.
            // Each time we enter a list, we increment it; when we leave a list,
            // we decrement. If it's zero, we're not in a list anymore.
            //
            // We do this because when we're not inside a list, we want to treat
            // something like this:
            //
            //    I recommend upgrading to version
            //    8. Oops, now this line is treated
            //    as a sub-list.
            //
            // As a single paragraph, despite the fact that the second line starts
            // with a digit-period-space sequence.
            //
            // Whereas when we're inside a list (or sub-list), that line will be
            // treated as the start of a sub-list. What a kludge, huh? This is
            // an aspect of Markdown's syntax that's hard to parse perfectly
            // without resorting to mind-reading. Perhaps the solution is to
            // change the syntax rules such that sub-lists must start with a
            // starting cardinal number; e.g. "1." or "a.".

            g_list_level++;

            // trim trailing blank lines:
            list_str = list_str.replace(/\n{2,}$/, "\n");

            // attacklab: add sentinel to emulate \z
            list_str += "~0";

            // In the original attacklab showdown, list_type was not given to this function, and anything
            // that matched /[*+-]|\d+[.]/ would just create the next <li>, causing this mismatch:
            //
            //  Markdown          rendered by WMD        rendered by MarkdownSharp
            //  ------------------------------------------------------------------
            //  1. first          1. first               1. first
            //  2. second         2. second              2. second
            //  - third           3. third                   * third
            //
            // We changed this to behave identical to MarkdownSharp. This is the constructed RegEx,
            // with {MARKER} being one of \d+[.] or [*+-], depending on list_type:
        
            /*
            list_str = list_str.replace(/
                (^[ \t]*)                       // leading whitespace = $1
                ({MARKER}) [ \t]+               // list marker = $2
                ([^\r]+?                        // list item text   = $3
                    (\n+)
                )
                (?=
                    (~0 | \2 ({MARKER}) [ \t]+)
                )
            /gm, function(){...});
            */

            var marker = _listItemMarkers[list_type];
            var re = new RegExp("(^[ \\t]*)(" + marker + ")[ \\t]+([^\\r]+?(\\n+))(?=(~0|\\1(" + marker + ")[ \\t]+))", "gm");
            var last_item_had_a_double_newline = false;
            list_str = list_str.replace(re,
                function (wholeMatch, m1, m2, m3) {
                    var item = m3;
                    var leading_space = m1;
                    var ends_with_double_newline = /\n\n$/.test(item);
                    var contains_double_newline = ends_with_double_newline || item.search(/\n{2,}/) > -1;

                    if (contains_double_newline || last_item_had_a_double_newline) {
                        item = _RunBlockGamut(_Outdent(item), /* doNotUnhash = */true);
                    }
                    else {
                        // Recursion for sub-lists:
                        item = _DoLists(_Outdent(item), /* isInsideParagraphlessListItem= */ true);
                        item = item.replace(/\n$/, ""); // chomp(item)
                        if (!isInsideParagraphlessListItem) // only the outer-most item should run this, otherwise it's run multiple times for the inner ones
                            item = _RunSpanGamut(item);
                    }
                    last_item_had_a_double_newline = ends_with_double_newline;
                    return "<li>" + item + "</li>\n";
                }
            );

            // attacklab: strip sentinel
            list_str = list_str.replace(/~0/g, "");

            g_list_level--;
            return list_str;
        }

        function _DoCodeBlocks(text) {
            //
            //  Process Markdown `<pre><code>` blocks.
            //  

            /*
            text = text.replace(/
                (?:\n\n|^)
                (                               // $1 = the code block -- one or more lines, starting with a space/tab
                    (?:
                        (?:[ ]{4}|\t)           // Lines must start with a tab or a tab-width of spaces - attacklab: g_tab_width
                        .*\n+
                    )+
                )
                (\n*[ ]{0,3}[^ \t\n]|(?=~0))    // attacklab: g_tab_width
            /g ,function(){...});
            */

            // attacklab: sentinel workarounds for lack of \A and \Z, safari\khtml bug
            text += "~0";

            text = text.replace(/(?:\n\n|^\n?)((?:(?:[ ]{4}|\t).*\n+)+)(\n*[ ]{0,3}[^ \t\n]|(?=~0))/g,
                function (wholeMatch, m1, m2) {
                    var codeblock = m1;
                    var nextChar = m2;

                    codeblock = _EncodeCode(_Outdent(codeblock));
                    codeblock = _Detab(codeblock);
                    codeblock = codeblock.replace(/^\n+/g, ""); // trim leading newlines
                    codeblock = codeblock.replace(/\n+$/g, ""); // trim trailing whitespace

                    codeblock = "<pre><code>" + codeblock + "\n</code></pre>";

                    return "\n\n" + codeblock + "\n\n" + nextChar;
                }
            );

            // attacklab: strip sentinel
            text = text.replace(/~0/, "");

            return text;
        }

        function hashBlock(text) {
            text = text.replace(/(^\n+|\n+$)/g, "");
            return "\n\n~K" + (g_html_blocks.push(text) - 1) + "K\n\n";
        }

        function _DoCodeSpans(text) {
            //
            // * Backtick quotes are used for <code></code> spans.
            // 
            // * You can use multiple backticks as the delimiters if you want to
            //   include literal backticks in the code span. So, this input:
            //     
            //      Just type ``foo `bar` baz`` at the prompt.
            //     
            //   Will translate to:
            //     
            //      <p>Just type <code>foo `bar` baz</code> at the prompt.</p>
            //     
            //   There's no arbitrary limit to the number of backticks you
            //   can use as delimters. If you need three consecutive backticks
            //   in your code, use four for delimiters, etc.
            //
            // * You can use spaces to get literal backticks at the edges:
            //     
            //      ... type `` `bar` `` ...
            //     
            //   Turns to:
            //     
            //      ... type <code>`bar`</code> ...
            //

            /*
            text = text.replace(/
                (^|[^\\])       // Character before opening ` can't be a backslash
                (`+)            // $2 = Opening run of `
                (               // $3 = The code block
                    [^\r]*?
                    [^`]        // attacklab: work around lack of lookbehind
                )
                \2              // Matching closer
                (?!`)
            /gm, function(){...});
            */

            text = text.replace(/(^|[^\\])(`+)([^\r]*?[^`])\2(?!`)/gm,
                function (wholeMatch, m1, m2, m3, m4) {
                    var c = m3;
                    c = c.replace(/^([ \t]*)/g, ""); // leading whitespace
                    c = c.replace(/[ \t]*$/g, ""); // trailing whitespace
                    c = _EncodeCode(c);
                    c = c.replace(/:\/\//g, "~P"); // to prevent auto-linking. Not necessary in code *blocks*, but in code spans. Will be converted back after the auto-linker runs.
                    return m1 + "<code>" + c + "</code>";
                }
            );

            return text;
        }

        function _EncodeCode(text) {
            //
            // Encode/escape certain characters inside Markdown code runs.
            // The point is that in code, these characters are literals,
            // and lose their special Markdown meanings.
            //
            // Encode all ampersands; HTML entities are not
            // entities within a Markdown code span.
            text = text.replace(/&/g, "&amp;");

            // Do the angle bracket song and dance:
            text = text.replace(/</g, "&lt;");
            text = text.replace(/>/g, "&gt;");

            // Now, escape characters that are magic in Markdown:
            text = escapeCharacters(text, "\*_{}[]\\", false);

            // jj the line above breaks this:
            //---

            //* Item

            //   1. Subitem

            //            special char: *
            //---

            return text;
        }

        function _DoItalicsAndBold(text) {

            // <strong> must go first:
            text = text.replace(/([\W_]|^)(\*\*|__)(?=\S)([^\r]*?\S[\*_]*)\2([\W_]|$)/g,
            "$1<strong>$3</strong>$4");

            text = text.replace(/([\W_]|^)(\*|_)(?=\S)([^\r\*_]*?\S)\2([\W_]|$)/g,
            "$1<em>$3</em>$4");

            return text;
        }

        function _DoBlockQuotes(text) {

            /*
            text = text.replace(/
                (                           // Wrap whole match in $1
                    (
                        ^[ \t]*>[ \t]?      // '>' at the start of a line
                        .+\n                // rest of the first line
                        (.+\n)*             // subsequent consecutive lines
                        \n*                 // blanks
                    )+
                )
            /gm, function(){...});
            */

            text = text.replace(/((^[ \t]*>[ \t]?.+\n(.+\n)*\n*)+)/gm,
                function (wholeMatch, m1) {
                    var bq = m1;

                    // attacklab: hack around Konqueror 3.5.4 bug:
                    // "----------bug".replace(/^-/g,"") == "bug"

                    bq = bq.replace(/^[ \t]*>[ \t]?/gm, "~0"); // trim one level of quoting

                    // attacklab: clean up hack
                    bq = bq.replace(/~0/g, "");

                    bq = bq.replace(/^[ \t]+$/gm, "");     // trim whitespace-only lines
                    bq = _RunBlockGamut(bq);             // recurse

                    bq = bq.replace(/(^|\n)/g, "$1  ");
                    // These leading spaces screw with <pre> content, so we need to fix that:
                    bq = bq.replace(
                            /(\s*<pre>[^\r]+?<\/pre>)/gm,
                        function (wholeMatch, m1) {
                            var pre = m1;
                            // attacklab: hack around Konqueror 3.5.4 bug:
                            pre = pre.replace(/^  /mg, "~0");
                            pre = pre.replace(/~0/g, "");
                            return pre;
                        });

                    return hashBlock("<blockquote>\n" + bq + "\n</blockquote>");
                }
            );
            return text;
        }

        function _FormParagraphs(text, doNotUnhash) {
            //
            //  Params:
            //    $text - string to process with html <p> tags
            //

            // Strip leading and trailing lines:
            text = text.replace(/^\n+/g, "");
            text = text.replace(/\n+$/g, "");

            var grafs = text.split(/\n{2,}/g);
            var grafsOut = [];
            
            var markerRe = /~K(\d+)K/;

            //
            // Wrap <p> tags.
            //
            var end = grafs.length;
            for (var i = 0; i < end; i++) {
                var str = grafs[i];

                // if this is an HTML marker, copy it
                if (markerRe.test(str)) {
                    grafsOut.push(str);
                }
                else if (/\S/.test(str)) {
                    str = _RunSpanGamut(str);
                    str = str.replace(/^([ \t]*)/g, "<p>");
                    str += "</p>"
                    grafsOut.push(str);
                }

            }
            //
            // Unhashify HTML blocks
            //
            if (!doNotUnhash) {
                end = grafsOut.length;
                for (var i = 0; i < end; i++) {
                    var foundAny = true;
                    while (foundAny) { // we may need several runs, since the data may be nested
                        foundAny = false;
                        grafsOut[i] = grafsOut[i].replace(/~K(\d+)K/g, function (wholeMatch, id) {
                            foundAny = true;
                            return g_html_blocks[id];
                        });
                    }
                }
            }
            return grafsOut.join("\n\n");
        }

        function _EncodeAmpsAndAngles(text) {
            // Smart processing for ampersands and angle brackets that need to be encoded.

            // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:
            //   http://bumppo.net/projects/amputator/
            text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\w+);)/g, "&amp;");

            // Encode naked <'s
            text = text.replace(/<(?![a-z\/?!]|~D)/gi, "&lt;");

            return text;
        }

        function _EncodeBackslashEscapes(text) {
            //
            //   Parameter:  String.
            //   Returns:    The string, with after processing the following backslash
            //               escape sequences.
            //

            // attacklab: The polite way to do this is with the new
            // escapeCharacters() function:
            //
            //     text = escapeCharacters(text,"\\",true);
            //     text = escapeCharacters(text,"`*_{}[]()>#+-.!",true);
            //
            // ...but we're sidestepping its use of the (slow) RegExp constructor
            // as an optimization for Firefox.  This function gets called a LOT.

            text = text.replace(/\\(\\)/g, escapeCharacters_callback);
            text = text.replace(/\\([`*_{}\[\]()>#+-.!])/g, escapeCharacters_callback);
            return text;
        }

        var charInsideUrl = "[-A-Z0-9+&@#/%?=~_|[\\]()!:,.;]",
            charEndingUrl = "[-A-Z0-9+&@#/%=~_|[\\])]",
            autoLinkRegex = new RegExp("(=\"|<)?\\b(https?|ftp)(://" + charInsideUrl + "*" + charEndingUrl + ")(?=$|\\W)", "gi"),
            endCharRegex = new RegExp(charEndingUrl, "i");

        function handleTrailingParens(wholeMatch, lookbehind, protocol, link) {
            if (lookbehind)
                return wholeMatch;
            if (link.charAt(link.length - 1) !== ")")
                return "<" + protocol + link + ">";
            var parens = link.match(/[()]/g);
            var level = 0;
            for (var i = 0; i < parens.length; i++) {
                if (parens[i] === "(") {
                    if (level <= 0)
                        level = 1;
                    else
                        level++;
                }
                else {
                    level--;
                }
            }
            var tail = "";
            if (level < 0) {
                var re = new RegExp("\\){1," + (-level) + "}$");
                link = link.replace(re, function (trailingParens) {
                    tail = trailingParens;
                    return "";
                });
            }
            if (tail) {
                var lastChar = link.charAt(link.length - 1);
                if (!endCharRegex.test(lastChar)) {
                    tail = lastChar + tail;
                    link = link.substr(0, link.length - 1);
                }
            }
            return "<" + protocol + link + ">" + tail;
        }
        
        function _DoAutoLinks(text) {

            // note that at this point, all other URL in the text are already hyperlinked as <a href=""></a>
            // *except* for the <http://www.foo.com> case

            // automatically add < and > around unadorned raw hyperlinks
            // must be preceded by a non-word character (and not by =" or <) and followed by non-word/EOF character
            // simulating the lookbehind in a consuming way is okay here, since a URL can neither and with a " nor
            // with a <, so there is no risk of overlapping matches.
            text = text.replace(autoLinkRegex, handleTrailingParens);

            //  autolink anything like <http://example.com>
            
            var replacer = function (wholematch, m1) { return "<a href=\"" + m1 + "\">" + pluginHooks.plainLinkText(m1) + "</a>"; }
            text = text.replace(/<((https?|ftp):[^'">\s]+)>/gi, replacer);

            // Email addresses: <address@domain.foo>
            /*
            text = text.replace(/
                <
                (?:mailto:)?
                (
                    [-.\w]+
                    \@
                    [-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+
                )
                >
            /gi, _DoAutoLinks_callback());
            */

            /* disabling email autolinking, since we don't do that on the server, either
            text = text.replace(/<(?:mailto:)?([-.\w]+\@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)>/gi,
                function(wholeMatch,m1) {
                    return _EncodeEmailAddress( _UnescapeSpecialChars(m1) );
                }
            );
            */
            return text;
        }

        function _UnescapeSpecialChars(text) {
            //
            // Swap back in all the special characters we've hidden.
            //
            text = text.replace(/~E(\d+)E/g,
                function (wholeMatch, m1) {
                    var charCodeToReplace = parseInt(m1);
                    return String.fromCharCode(charCodeToReplace);
                }
            );
            return text;
        }

        function _Outdent(text) {
            //
            // Remove one level of line-leading tabs or spaces
            //

            // attacklab: hack around Konqueror 3.5.4 bug:
            // "----------bug".replace(/^-/g,"") == "bug"

            text = text.replace(/^(\t|[ ]{1,4})/gm, "~0"); // attacklab: g_tab_width

            // attacklab: clean up hack
            text = text.replace(/~0/g, "")

            return text;
        }

        function _Detab(text) {
            if (!/\t/.test(text))
                return text;

            var spaces = ["    ", "   ", "  ", " "],
            skew = 0,
            v;

            return text.replace(/[\n\t]/g, function (match, offset) {
                if (match === "\n") {
                    skew = offset + 1;
                    return match;
                }
                v = (offset - skew) % 4;
                skew = offset + 1;
                return spaces[v];
            });
        }

        //
        //  attacklab: Utility functions
        //

        var _problemUrlChars = /(?:["'*()[\]:]|~D)/g;

        // hex-encodes some unusual "problem" chars in URLs to avoid URL detection problems 
        function encodeProblemUrlChars(url) {
            if (!url)
                return "";

            var len = url.length;

            return url.replace(_problemUrlChars, function (match, offset) {
                if (match == "~D") // escape for dollar
                    return "%24";
                if (match == ":") {
                    //if (offset == len - 1 || /[0-9\/]/.test(url.charAt(offset + 1)))
                        return ":"
                }
                return "%" + match.charCodeAt(0).toString(16);
            });
        }


        function escapeCharacters(text, charsToEscape, afterBackslash) {
            // First we have to escape the escape characters so that
            // we can build a character class out of them
            var regexString = "([" + charsToEscape.replace(/([\[\]\\])/g, "\\$1") + "])";

            if (afterBackslash) {
                regexString = "\\\\" + regexString;
            }

            var regex = new RegExp(regexString, "g");
            text = text.replace(regex, escapeCharacters_callback);

            return text;
        }


        function escapeCharacters_callback(wholeMatch, m1) {
            var charCodeToEscape = m1.charCodeAt(0);
            return "~E" + charCodeToEscape + "E";
        }

    }; // end of the Markdown.Converter constructor

})();

define("bower-libs/pagedown-ace/Markdown.Converter", function(){});

// needs Markdown.Converter.js at the moment

(function () {

    
    var util = {},
        position = {},
        ui = {},
        doc = window.document,
        re = window.RegExp,
        nav = window.navigator,
        SETTINGS = { lineLength: 72 },

    // Used to work around some browser bugs where we can't use feature testing.
        uaSniffed = {
            isIE: /msie/.test(nav.userAgent.toLowerCase()),
            isIE_5or6: /msie 6/.test(nav.userAgent.toLowerCase()) || /msie 5/.test(nav.userAgent.toLowerCase()),
            isOpera: /opera/.test(nav.userAgent.toLowerCase())
        };

    var defaultsStrings = {
        bold: "Strong <strong>",
        boldexample: "strong text",
        
        italic: "Emphasis <em>",
        italicexample: "emphasized text",
        
        link: "Hyperlink <a>",
        linkdescription: "enter link description here",
        linkdialog: "<p><b>Insert Hyperlink</b></p><p>http://example.com/ \"optional title\"</p>",
        
        quote: "Blockquote <blockquote>",
        quoteexample: "Blockquote",
        
        code: "Code Sample <pre><code>",
        codeexample: "enter code here",
        
        image: "Image <img>",
        imagedescription: "enter image description here",
        imagedialog: "<p><b>Insert Image</b></p><p>http://example.com/images/diagram.jpg \"optional title\"<br><br>Need <a href='http://www.google.com/search?q=free+image+hosting' target='_blank'>free image hosting?</a></p>",
        
        olist: "Numbered List <ol>",
        ulist: "Bulleted List <ul>",
        litem: "List item",
        
        heading: "Heading <h1>/<h2>",
        headingexample: "Heading",
        
        hr: "Horizontal Rule <hr>",
        
        undo: "Undo -",
        redo: "Redo -",
        
        help: "Markdown Editing Help"
    };
    
    var keyStrokes = {
        bold: "B",
        italic: "I",
        link: "L",
        quote: "Q",
        code: "K",
        image: "G",
        olist: "O",
        ulist: "U",
        heading: "H",
        hr: "R",
        undo: "Z",
        redo: "Y",
    };


    // -------------------------------------------------------------------
    //  YOUR CHANGES GO HERE
    //
    // I've tried to localize the things you are likely to change to
    // this area.
    // -------------------------------------------------------------------

    // The default text that appears in the dialog input box when entering
    // links.
    var imageDefaultText = "http://";
    var linkDefaultText = "http://";

    // -------------------------------------------------------------------
    //  END OF YOUR CHANGES
    // -------------------------------------------------------------------

    // options, if given, can have the following properties:
    //   options.helpButton = { handler: yourEventHandler }
    //   options.strings = { italicexample: "slanted text" }
    // `yourEventHandler` is the click handler for the help button.
    // If `options.helpButton` isn't given, not help button is created.
    // `options.strings` can have any or all of the same properties as
    // `defaultStrings` above, so you can just override some string displayed
    // to the user on a case-by-case basis, or translate all strings to
    // a different language.
    //
    // For backwards compatibility reasons, the `options` argument can also
    // be just the `helpButton` object, and `strings.help` can also be set via
    // `helpButton.title`. This should be considered legacy.
    //
    // The constructed editor object has the methods:
    // - getConverter() returns the markdown converter object that was passed to the constructor
    // - run() actually starts the editor; should be called after all necessary plugins are registered. Calling this more than once is a no-op.
    // - refreshPreview() forces the preview to be updated. This method is only available after run() was called.
    Markdown.Editor = function (markdownConverter, idPostfix, options) {
        
        options = options || {};

        if (typeof options.handler === "function") { //backwards compatible behavior
            options = { helpButton: options };
        }
        options.strings = options.strings || {};
        if (options.helpButton) {
            options.strings.help = options.strings.help || options.helpButton.title;
        }
        var getString = function (identifier) { return options.strings[identifier] || defaultsStrings[identifier]; }
        var getKey = function (identifier) { return (/win/.test(nav.platform.toLowerCase()) ? 'Ctrl+' : 'Command+') + keyStrokes[identifier]; };

        idPostfix = idPostfix || "";

        var hooks = this.hooks = new Markdown.HookCollection();
        hooks.addNoop("onPreviewRefresh");       // called with no arguments after the preview has been refreshed
        hooks.addNoop("postBlockquoteCreation"); // called with the user's selection *after* the blockquote was created; should return the actual to-be-inserted text
        hooks.addFalse("insertImageDialog");     /* called with one parameter: a callback to be called with the URL of the image. If the application creates
                                                  * its own image insertion dialog, this hook should return true, and the callback should be called with the chosen
                                                  * image url (or null if the user cancelled). If this hook returns false, the default dialog will be used.
                                                  */
        hooks.addFalse("insertLinkDialog");

        this.getConverter = function () { return markdownConverter; }

        var that = this,
            panels;

        var undoManager;
        this.run = function (aceEditor, previewWrapper) {
            if (panels)
                return; // already initialized

            panels = new PanelCollection(idPostfix, aceEditor);
            var commandManager = new CommandManager(hooks, getString);
            var previewManager = new PreviewManager(markdownConverter, panels, function () { hooks.onPreviewRefresh(); }, previewWrapper);
            var uiManager;

            /*benweet
            if (!/\?noundo/.test(doc.location.href)) {
                undoManager = new UndoManager(function () {
                    previewManager.refresh();
                    if (uiManager) // not available on the first call
                        uiManager.setUndoRedoButtonStates();
                }, panels);
                this.textOperation = function (f) {
                    undoManager.setCommandMode();
                    f();
                    that.refreshPreview();
                }
            }
            */

            uiManager = new UIManager(idPostfix, panels, undoManager, previewManager, commandManager, options.helpButton, getString, getKey);
            uiManager.setUndoRedoButtonStates();

            var forceRefresh = that.refreshPreview = function () { previewManager.refresh(true); };

            forceRefresh();
            that.uiManager = uiManager;
        };

    }

    // before: contains all the text in the input box BEFORE the selection.
    // after: contains all the text in the input box AFTER the selection.
    function Chunks() { }

    // startRegex: a regular expression to find the start tag
    // endRegex: a regular expresssion to find the end tag
    Chunks.prototype.findTags = function (startRegex, endRegex) {

        var chunkObj = this;
        var regex;

        if (startRegex) {

            regex = util.extendRegExp(startRegex, "", "$");

            this.before = this.before.replace(regex,
                function (match) {
                    chunkObj.startTag = chunkObj.startTag + match;
                    return "";
                });

            regex = util.extendRegExp(startRegex, "^", "");

            this.selection = this.selection.replace(regex,
                function (match) {
                    chunkObj.startTag = chunkObj.startTag + match;
                    return "";
                });
        }

        if (endRegex) {

            regex = util.extendRegExp(endRegex, "", "$");

            this.selection = this.selection.replace(regex,
                function (match) {
                    chunkObj.endTag = match + chunkObj.endTag;
                    return "";
                });

            regex = util.extendRegExp(endRegex, "^", "");

            this.after = this.after.replace(regex,
                function (match) {
                    chunkObj.endTag = match + chunkObj.endTag;
                    return "";
                });
        }
    };

    // If remove is false, the whitespace is transferred
    // to the before/after regions.
    //
    // If remove is true, the whitespace disappears.
    Chunks.prototype.trimWhitespace = function (remove) {
        var beforeReplacer, afterReplacer, that = this;
        if (remove) {
            beforeReplacer = afterReplacer = "";
        } else {
            beforeReplacer = function (s) { that.before += s; return ""; }
            afterReplacer = function (s) { that.after = s + that.after; return ""; }
        }

        this.selection = this.selection.replace(/^(\s*)/, beforeReplacer).replace(/(\s*)$/, afterReplacer);
    };


    Chunks.prototype.skipLines = function (nLinesBefore, nLinesAfter, findExtraNewlines) {

        if (nLinesBefore === undefined) {
            nLinesBefore = 1;
        }

        if (nLinesAfter === undefined) {
            nLinesAfter = 1;
        }

        nLinesBefore++;
        nLinesAfter++;

        var regexText;
        var replacementText;

        // chrome bug ... documented at: http://meta.stackoverflow.com/questions/63307/blockquote-glitch-in-editor-in-chrome-6-and-7/65985#65985
        if (navigator.userAgent.match(/Chrome/)) {
            "X".match(/()./);
        }

        this.selection = this.selection.replace(/(^\n*)/, "");

        this.startTag = this.startTag + re.$1;

        this.selection = this.selection.replace(/(\n*$)/, "");
        this.endTag = this.endTag + re.$1;
        this.startTag = this.startTag.replace(/(^\n*)/, "");
        this.before = this.before + re.$1;
        this.endTag = this.endTag.replace(/(\n*$)/, "");
        this.after = this.after + re.$1;

        if (this.before) {

            regexText = replacementText = "";

            while (nLinesBefore--) {
                regexText += "\\n?";
                replacementText += "\n";
            }

            if (findExtraNewlines) {
                regexText = "\\n*";
            }
            this.before = this.before.replace(new re(regexText + "$", ""), replacementText);
        }

        if (this.after) {

            regexText = replacementText = "";

            while (nLinesAfter--) {
                regexText += "\\n?";
                replacementText += "\n";
            }
            if (findExtraNewlines) {
                regexText = "\\n*";
            }

            this.after = this.after.replace(new re(regexText, ""), replacementText);
        }
    };

    // end of Chunks

    // A collection of the important regions on the page.
    // Cached so we don't have to keep traversing the DOM.
    // Also holds ieCachedRange and ieCachedScrollTop, where necessary; working around
    // this issue:
    // Internet explorer has problems with CSS sprite buttons that use HTML
    // lists.  When you click on the background image "button", IE will
    // select the non-existent link text and discard the selection in the
    // textarea.  The solution to this is to cache the textarea selection
    // on the button's mousedown event and set a flag.  In the part of the
    // code where we need to grab the selection, we check for the flag
    // and, if it's set, use the cached area instead of querying the
    // textarea.
    //
    // This ONLY affects Internet Explorer (tested on versions 6, 7
    // and 8) and ONLY on button clicks.  Keyboard shortcuts work
    // normally since the focus never leaves the textarea.
    function PanelCollection(postfix, aceEditor) {
        this.buttonBar = doc.getElementById("wmd-button-bar" + postfix);
        this.preview = doc.getElementById("wmd-preview" + postfix);
        this.input = aceEditor;
    };

    // Returns true if the DOM element is visible, false if it's hidden.
    // Checks if display is anything other than none.
    util.isVisible = function (elem) {

        if (window.getComputedStyle) {
            // Most browsers
            return window.getComputedStyle(elem, null).getPropertyValue("display") !== "none";
        }
        else if (elem.currentStyle) {
            // IE
            return elem.currentStyle["display"] !== "none";
        }
    };


    // Adds a listener callback to a DOM element which is fired on a specified
    // event.
    util.addEvent = function (elem, event, listener) {
        if (elem.attachEvent) {
            // IE only.  The "on" is mandatory.
            elem.attachEvent("on" + event, listener);
        }
        else {
            // Other browsers.
            elem.addEventListener(event, listener, false);
        }
    };


    // Removes a listener callback from a DOM element which is fired on a specified
    // event.
    util.removeEvent = function (elem, event, listener) {
        if (elem.detachEvent) {
            // IE only.  The "on" is mandatory.
            elem.detachEvent("on" + event, listener);
        }
        else {
            // Other browsers.
            elem.removeEventListener(event, listener, false);
        }
    };

    // Converts \r\n and \r to \n.
    util.fixEolChars = function (text) {
        text = text.replace(/\r\n/g, "\n");
        text = text.replace(/\r/g, "\n");
        return text;
    };

    // Extends a regular expression.  Returns a new RegExp
    // using pre + regex + post as the expression.
    // Used in a few functions where we have a base
    // expression and we want to pre- or append some
    // conditions to it (e.g. adding "$" to the end).
    // The flags are unchanged.
    //
    // regex is a RegExp, pre and post are strings.
    util.extendRegExp = function (regex, pre, post) {

        if (pre === null || pre === undefined) {
            pre = "";
        }
        if (post === null || post === undefined) {
            post = "";
        }

        var pattern = regex.toString();
        var flags;

        // Replace the flags with empty space and store them.
        pattern = pattern.replace(/\/([gim]*)$/, function (wholeMatch, flagsPart) {
            flags = flagsPart;
            return "";
        });

        // Remove the slash delimiters on the regular expression.
        pattern = pattern.replace(/(^\/|\/$)/g, "");
        pattern = pre + pattern + post;

        return new re(pattern, flags);
    }

    // UNFINISHED
    // The assignment in the while loop makes jslint cranky.
    // I'll change it to a better loop later.
    position.getTop = function (elem, isInner) {
        var result = elem.offsetTop;
        if (!isInner) {
            while (elem = elem.offsetParent) {
                result += elem.offsetTop;
            }
        }
        return result;
    };

    position.getHeight = function (elem) {
        return elem.offsetHeight || elem.scrollHeight;
    };

    position.getWidth = function (elem) {
        return elem.offsetWidth || elem.scrollWidth;
    };

    position.getPageSize = function () {

        var scrollWidth, scrollHeight;
        var innerWidth, innerHeight;

        // It's not very clear which blocks work with which browsers.
        if (self.innerHeight && self.scrollMaxY) {
            scrollWidth = doc.body.scrollWidth;
            scrollHeight = self.innerHeight + self.scrollMaxY;
        }
        else if (doc.body.scrollHeight > doc.body.offsetHeight) {
            scrollWidth = doc.body.scrollWidth;
            scrollHeight = doc.body.scrollHeight;
        }
        else {
            scrollWidth = doc.body.offsetWidth;
            scrollHeight = doc.body.offsetHeight;
        }

        if (self.innerHeight) {
            // Non-IE browser
            innerWidth = self.innerWidth;
            innerHeight = self.innerHeight;
        }
        else if (doc.documentElement && doc.documentElement.clientHeight) {
            // Some versions of IE (IE 6 w/ a DOCTYPE declaration)
            innerWidth = doc.documentElement.clientWidth;
            innerHeight = doc.documentElement.clientHeight;
        }
        else if (doc.body) {
            // Other versions of IE
            innerWidth = doc.body.clientWidth;
            innerHeight = doc.body.clientHeight;
        }

        var maxWidth = Math.max(scrollWidth, innerWidth);
        var maxHeight = Math.max(scrollHeight, innerHeight);
        return [maxWidth, maxHeight, innerWidth, innerHeight];
    };

    /*benweet
    // Handles pushing and popping TextareaStates for undo/redo commands.
    // I should rename the stack variables to list.
    function UndoManager(callback, panels) {

        var undoObj = this;
        var undoStack = []; // A stack of undo states
        var stackPtr = 0; // The index of the current state
        var mode = "none";
        var lastState; // The last state
        var timer; // The setTimeout handle for cancelling the timer
        var inputStateObj;

        // Set the mode for later logic steps.
        var setMode = function (newMode, noSave) {
            if (mode != newMode) {
                mode = newMode;
                if (!noSave) {
                    saveState();
                }
            }

            if (!uaSniffed.isIE || mode != "moving") {
                timer = setTimeout(refreshState, 1);
            }
            else {
                inputStateObj = null;
            }
        };

        var refreshState = function (isInitialState) {
            inputStateObj = new TextareaState(panels, isInitialState);
            timer = undefined;
        };

        this.setCommandMode = function () {
            mode = "command";
            saveState();
            timer = setTimeout(refreshState, 0);
        };

        this.canUndo = function () {
            return stackPtr > 1;
        };

        this.canRedo = function () {
            if (undoStack[stackPtr + 1]) {
                return true;
            }
            return false;
        };

        // Removes the last state and restores it.
        this.undo = function () {

            if (undoObj.canUndo()) {
                if (lastState) {
                    // What about setting state -1 to null or checking for undefined?
                    lastState.restore();
                    lastState = null;
                }
                else {
                    undoStack[stackPtr] = new TextareaState(panels);
                    undoStack[--stackPtr].restore();

                    if (callback) {
                        callback();
                    }
                }
            }

            mode = "none";
            panels.input.focus();
            refreshState();
        };

        // Redo an action.
        this.redo = function () {

            if (undoObj.canRedo()) {

                undoStack[++stackPtr].restore();

                if (callback) {
                    callback();
                }
            }

            mode = "none";
            panels.input.focus();
            refreshState();
        };

        // Push the input area state to the stack.
        var saveState = function () {
            var currState = inputStateObj || new TextareaState(panels);

            if (!currState) {
                return false;
            }
            if (mode == "moving") {
                if (!lastState) {
                    lastState = currState;
                }
                return;
            }
            if (lastState) {
                if (undoStack[stackPtr - 1].text != lastState.text) {
                    undoStack[stackPtr++] = lastState;
                }
                lastState = null;
            }
            undoStack[stackPtr++] = currState;
            undoStack[stackPtr + 1] = null;
            if (callback) {
                callback();
            }
        };

        var handleCtrlYZ = function (event) {

            var handled = false;

            if ((event.ctrlKey || event.metaKey) && !event.altKey) {

                // IE and Opera do not support charCode.
                var keyCode = event.charCode || event.keyCode;
                var keyCodeChar = String.fromCharCode(keyCode);

                switch (keyCodeChar.toLowerCase()) {

                    case "y":
                        undoObj.redo();
                        handled = true;
                        break;

                    case "z":
                        if (!event.shiftKey) {
                            undoObj.undo();
                        }
                        else {
                            undoObj.redo();
                        }
                        handled = true;
                        break;
                }
            }

            if (handled) {
                if (event.preventDefault) {
                    event.preventDefault();
                }
                if (window.event) {
                    window.event.returnValue = false;
                }
                return;
            }
        };

        // Set the mode depending on what is going on in the input area.
        var handleModeChange = function (event) {

            if (!event.ctrlKey && !event.metaKey) {

                var keyCode = event.keyCode;

                if ((keyCode >= 33 && keyCode <= 40) || (keyCode >= 63232 && keyCode <= 63235)) {
                    // 33 - 40: page up/dn and arrow keys
                    // 63232 - 63235: page up/dn and arrow keys on safari
                    setMode("moving");
                }
                else if (keyCode == 8 || keyCode == 46 || keyCode == 127) {
                    // 8: backspace
                    // 46: delete
                    // 127: delete
                    setMode("deleting");
                }
                else if (keyCode == 13) {
                    // 13: Enter
                    setMode("newlines");
                }
                else if (keyCode == 27) {
                    // 27: escape
                    setMode("escape");
                }
                else if ((keyCode < 16 || keyCode > 20) && keyCode != 91) {
                    // 16-20 are shift, etc.
                    // 91: left window key
                    // I think this might be a little messed up since there are
                    // a lot of nonprinting keys above 20.
                    setMode("typing");
                }
            }
        };

        var setEventHandlers = function () {
            util.addEvent(panels.input, "keypress", function (event) {
                // keyCode 89: y
                // keyCode 90: z
                if ((event.ctrlKey || event.metaKey) && !event.altKey && (event.keyCode == 89 || event.keyCode == 90)) {
                    event.preventDefault();
                }
            });

            var handlePaste = function () {
                if (uaSniffed.isIE || (inputStateObj && inputStateObj.text != panels.input.value)) {
                    if (timer == undefined) {
                        mode = "paste";
                        saveState();
                        refreshState();
                    }
                }
            };

            //util.addEvent(panels.input, "keydown", handleCtrlYZ);
            util.addEvent(panels.input, "keydown", handleModeChange);
            util.addEvent(panels.input, "mousedown", function () {
                setMode("moving");
            });

            panels.input.onpaste = handlePaste;
            panels.input.ondrop = handlePaste;
        };

        var init = function () {
            setEventHandlers();
            refreshState(true);
            //Not necessary
            //saveState();
        };
        
        this.reinit = function(content, start, end, scrollTop) {
            undoStack = [];
            stackPtr = 0;
            mode = "none";
            lastState = undefined;
            timer = undefined;
            refreshState();
            inputStateObj.text = content;
            inputStateObj.start = start;
            inputStateObj.end = end;
            inputStateObj.scrollTop = scrollTop;
            inputStateObj.setInputAreaSelection();
            saveState();
        };
        this.setMode = setMode;

        init();
    }

    // end of UndoManager
    */

    // The input textarea state/contents.
    // This is used to implement undo/redo by the undo manager.
    function TextareaState(panels, isInitialState) {

        // Aliases
        var stateObj = this;
        var inputArea = panels.input;
        this.init = function () {
            /*benweet
            if (!util.isVisible(inputArea)) {
                return;
            }
            if (!isInitialState && doc.activeElement && doc.activeElement !== inputArea) { // this happens when tabbing out of the input box
                return;
            }
            */

            var Range = typeof require !== 'undefined' ? require('ace/range').Range : ace.require('ace/range').Range;
            (function(range) {
                stateObj.before = inputArea.session.getTextRange(new Range(0,0,range.start.row, range.start.column));
                stateObj.selection = inputArea.session.getTextRange();
                stateObj.after = inputArea.session.getTextRange(new Range(range.end.row, range.end.column, Number.MAX_VALUE, Number.MAX_VALUE));
            })(inputArea.selection.getRange());
            this.text = [this.before, this.selection, this.after].join('');
            this.length = this.text.length;
            this.setInputAreaSelectionStartEnd();
            this.scrollTop = inputArea.renderer.getScrollTop();
            /*benweet
            if (!this.text && inputArea.selectionStart || inputArea.selectionStart === 0) {
                this.text = inputArea.value;
            }
            */
        }

        // Sets the selected text in the input box after we've performed an
        // operation.
        this.setInputAreaSelection = function () {

            var Range = typeof require !== 'undefined' ? require('ace/range').Range : ace.require('ace/range').Range;
            inputArea.selection.setSelectionRange((function(posStart, posEnd) {
                return new Range(posStart.row, posStart.column, posEnd.row, posEnd.column);
            })(inputArea.session.doc.indexToPosition(stateObj.start), inputArea.session.doc.indexToPosition(stateObj.end)));
            inputArea.renderer.scrollToY(stateObj.scrollTop);
            inputArea.focus();
            
            /*benweet
            if (!util.isVisible(inputArea)) {
                return;
            }

            if (inputArea.selectionStart !== undefined && !uaSniffed.isOpera) {

                inputArea.focus();
                inputArea.selectionStart = stateObj.start;
                inputArea.selectionEnd = stateObj.end;
                inputArea.scrollTop = stateObj.scrollTop;
            }
            else if (doc.selection) {

                if (doc.activeElement && doc.activeElement !== inputArea) {
                    return;
                }

                inputArea.focus();
                var range = inputArea.createTextRange();
                range.moveStart("character", -inputArea.value.length);
                range.moveEnd("character", -inputArea.value.length);
                range.moveEnd("character", stateObj.end);
                range.moveStart("character", stateObj.start);
                range.select();
            }
            */
        };

        this.setInputAreaSelectionStartEnd = function () {
            
            stateObj.start = stateObj.before.length;
            stateObj.end = stateObj.after.length;
            
            /*benweet
            if (!panels.ieCachedRange && (inputArea.selectionStart || inputArea.selectionStart === 0)) {

                stateObj.start = inputArea.selectionStart;
                stateObj.end = inputArea.selectionEnd;
            }
            else if (doc.selection) {

                stateObj.text = util.fixEolChars(inputArea.value);

                // IE loses the selection in the textarea when buttons are
                // clicked.  On IE we cache the selection. Here, if something is cached,
                // we take it.
                var range = panels.ieCachedRange || doc.selection.createRange();

                var fixedRange = util.fixEolChars(range.text);
                var marker = "\x07";
                var markedRange = marker + fixedRange + marker;
                range.text = markedRange;
                var inputText = util.fixEolChars(inputArea.value);

                range.moveStart("character", -markedRange.length);
                range.text = fixedRange;

                stateObj.start = inputText.indexOf(marker);
                stateObj.end = inputText.lastIndexOf(marker) - marker.length;

                var len = stateObj.text.length - util.fixEolChars(inputArea.value).length;

                if (len) {
                    range.moveStart("character", -fixedRange.length);
                    while (len--) {
                        fixedRange += "\n";
                        stateObj.end += 1;
                    }
                    range.text = fixedRange;
                }

                if (panels.ieCachedRange)
                    stateObj.scrollTop = panels.ieCachedScrollTop; // this is set alongside with ieCachedRange

                panels.ieCachedRange = null;

                this.setInputAreaSelection();
            }
            */
        };

        // Restore this state into the input area.
        this.restore = function () {
            // Here we could do editor.setValue but we want to update the less we can for undo management
            
            // Find the first modified char
            var startIndex = 0;
            var startIndexMax = stateObj.before.length; 
            while(startIndex < startIndexMax) {
                if(stateObj.before.charCodeAt(startIndex) !== stateObj.text.charCodeAt(startIndex))
                    break;
                startIndex++;
            }
            // Find the last modified char
            var endIndex = 0;
            var endIndexMax = stateObj.after.length;
            var beforeMaxOffset = stateObj.after.length - 1;
            var afterMaxOffset = stateObj.text.length - 1;
            while(endIndex < endIndexMax) {
                if(stateObj.after.charCodeAt(beforeMaxOffset - endIndex) !== stateObj.text.charCodeAt(afterMaxOffset - endIndex))
                    break;
                endIndex++;
            }
            
            var Range = typeof require !== 'undefined' ? require('ace/range').Range : ace.require('ace/range').Range;
            var range = (function(posStart, posEnd) {
                return new Range(posStart.row, posStart.column, posEnd.row, posEnd.column);
            })(inputArea.session.doc.indexToPosition(startIndex), inputArea.session.doc.indexToPosition(stateObj.length - endIndex));
            inputArea.session.replace(range, stateObj.text.substring(startIndex, afterMaxOffset - endIndex + 1));
            this.setInputAreaSelection();

            /*benweet
            if (stateObj.text != undefined && stateObj.text != inputArea.value) {
                inputArea.value = stateObj.text;
            }
            inputArea.scrollTop = stateObj.scrollTop;
            */
        };

        // Gets a collection of HTML chunks from the inptut textarea.
        this.getChunks = function () {

            var chunk = new Chunks();
            chunk.before = stateObj.before;
            chunk.startTag = "";
            chunk.selection = stateObj.selection;
            chunk.endTag = "";
            chunk.after = stateObj.after;
            chunk.scrollTop = stateObj.scrollTop;

            return chunk;
        };

        // Sets the TextareaState properties given a chunk of markdown.
        this.setChunks = function (chunk) {

            chunk.before = chunk.before + chunk.startTag;
            chunk.after = chunk.endTag + chunk.after;

            this.start = chunk.before.length;
            this.end = chunk.before.length + chunk.selection.length;
            this.text = chunk.before + chunk.selection + chunk.after;
            this.scrollTop = chunk.scrollTop;
        };
        this.init();
    };

    function PreviewManager(converter, panels, previewRefreshCallback, previewWrapper) {

        var managerObj = this;
        var timeout;
        var elapsedTime;
        var oldInputText;
        var maxDelay = 3000;
        var startType = "delayed"; // The other legal value is "manual"

        // Adds event listeners to elements
        /*benweet
        var setupEvents = function (inputElem, listener) {

            util.addEvent(inputElem, "input", listener);
            inputElem.onpaste = listener;
            inputElem.ondrop = listener;

            util.addEvent(inputElem, "keypress", listener);
            util.addEvent(inputElem, "keydown", listener);
        };
        */

        var getDocScrollTop = function () {

            var result = 0;

            if (window.innerHeight) {
                result = window.pageYOffset;
            }
            else
                if (doc.documentElement && doc.documentElement.scrollTop) {
                    result = doc.documentElement.scrollTop;
                }
                else
                    if (doc.body) {
                        result = doc.body.scrollTop;
                    }

            return result;
        };

        var makePreviewHtml = function () {

            // If there is no registered preview panel
            // there is nothing to do.
            if (!panels.preview)
                return;


            var text = panels.input.getValue();
            if (text && text == oldInputText) {
                return; // Input text hasn't changed.
            }
            else {
                oldInputText = text;
            }

            var prevTime = new Date().getTime();

            text = converter.makeHtml(text);

            // Calculate the processing time of the HTML creation.
            // It's used as the delay time in the event listener.
            var currTime = new Date().getTime();
            elapsedTime = currTime - prevTime;

            pushPreviewHtml(text);
        };
        if(previewWrapper !== undefined) {
            makePreviewHtml = previewWrapper(makePreviewHtml);
        }

        // setTimeout is already used.  Used as an event listener.
        var applyTimeout = function () {

            if (timeout) {
                clearTimeout(timeout);
                timeout = undefined;
            }

            if (startType !== "manual") {

                var delay = 0;

                if (startType === "delayed") {
                    delay = elapsedTime;
                }

                if (delay > maxDelay) {
                    delay = maxDelay;
                }
                timeout = setTimeout(makePreviewHtml, delay);
            }
        };

        var getScaleFactor = function (panel) {
            if (panel.scrollHeight <= panel.clientHeight) {
                return 1;
            }
            return panel.scrollTop / (panel.scrollHeight - panel.clientHeight);
        };

        var setPanelScrollTops = function () {
            if (panels.preview) {
                panels.preview.scrollTop = (panels.preview.scrollHeight - panels.preview.clientHeight) * getScaleFactor(panels.preview);
            }
        };

        this.refresh = function (requiresRefresh) {

            if (requiresRefresh) {
                oldInputText = "";
                makePreviewHtml();
            }
            else {
                applyTimeout();
            }
        };

        this.processingTime = function () {
            return elapsedTime;
        };

        var isFirstTimeFilled = true;

        // IE doesn't let you use innerHTML if the element is contained somewhere in a table
        // (which is the case for inline editing) -- in that case, detach the element, set the
        // value, and reattach. Yes, that *is* ridiculous.
        var ieSafePreviewSet = function (text) {
            var preview = panels.preview;
            var parent = preview.parentNode;
            var sibling = preview.nextSibling;
            parent.removeChild(preview);
            preview.innerHTML = text;
            if (!sibling)
                parent.appendChild(preview);
            else
                parent.insertBefore(preview, sibling);
        }

        var nonSuckyBrowserPreviewSet = function (text) {
            panels.preview.innerHTML = text;
        }

        var previewSetter;

        var previewSet = function (text) {
            if (previewSetter)
                return previewSetter(text);

            try {
                nonSuckyBrowserPreviewSet(text);
                previewSetter = nonSuckyBrowserPreviewSet;
            } catch (e) {
                previewSetter = ieSafePreviewSet;
                previewSetter(text);
            }
        };

        var pushPreviewHtml = function (text) {

            var emptyTop = position.getTop(panels.input) - getDocScrollTop();

            if (panels.preview) {
                previewSet(text);
                previewRefreshCallback();
            }

            setPanelScrollTops();

            if (isFirstTimeFilled) {
                isFirstTimeFilled = false;
                return;
            }

            var fullTop = position.getTop(panels.input) - getDocScrollTop();

            if (uaSniffed.isIE) {
                setTimeout(function () {
                    window.scrollBy(0, fullTop - emptyTop);
                }, 0);
            }
            else {
                window.scrollBy(0, fullTop - emptyTop);
            }
        };

        var init = function () {

            /*benweet
            setupEvents(panels.input, applyTimeout);
            */
            panels.input.session.on('change', applyTimeout);
            //Not necessary
            //makePreviewHtml();

            if (panels.preview) {
                panels.preview.scrollTop = 0;
            }
        };

        init();
    };

    // Creates the background behind the hyperlink text entry box.
    // And download dialog
    // Most of this has been moved to CSS but the div creation and
    // browser-specific hacks remain here.
    ui.createBackground = function () {

        var background = doc.createElement("div"),
            style = background.style;
        
        background.className = "wmd-prompt-background";
        
        style.position = "absolute";
        style.top = "0";

        style.zIndex = "1000";

        if (uaSniffed.isIE) {
            style.filter = "alpha(opacity=50)";
        }
        else {
            style.opacity = "0.5";
        }

        var pageSize = position.getPageSize();
        style.height = pageSize[1] + "px";

        if (uaSniffed.isIE) {
            style.left = doc.documentElement.scrollLeft;
            style.width = doc.documentElement.clientWidth;
        }
        else {
            style.left = "0";
            style.width = "100%";
        }

        doc.body.appendChild(background);
        return background;
    };

    // This simulates a modal dialog box and asks for the URL when you
    // click the hyperlink or image buttons.
    //
    // text: The html for the input box.
    // defaultInputText: The default value that appears in the input box.
    // callback: The function which is executed when the prompt is dismissed, either via OK or Cancel.
    //      It receives a single argument; either the entered text (if OK was chosen) or null (if Cancel
    //      was chosen).
    ui.prompt = function (text, defaultInputText, callback) {

        // These variables need to be declared at this level since they are used
        // in multiple functions.
        var dialog;         // The dialog box.
        var input;         // The text box where you enter the hyperlink.


        if (defaultInputText === undefined) {
            defaultInputText = "";
        }

        // Used as a keydown event handler. Esc dismisses the prompt.
        // Key code 27 is ESC.
        var checkEscape = function (key) {
            var code = (key.charCode || key.keyCode);
            if (code === 27) {
                close(true);
            }
        };

        // Dismisses the hyperlink input box.
        // isCancel is true if we don't care about the input text.
        // isCancel is false if we are going to keep the text.
        var close = function (isCancel) {
            util.removeEvent(doc.body, "keydown", checkEscape);
            var text = input.value;

            if (isCancel) {
                text = null;
            }
            else {
                // Fixes common pasting errors.
                text = text.replace(/^http:\/\/(https?|ftp):\/\//, '$1://');
                if (!/^(?:https?|ftp):\/\//.test(text))
                    text = 'http://' + text;
            }

            dialog.parentNode.removeChild(dialog);

            callback(text);
            return false;
        };



        // Create the text input box form/window.
        var createDialog = function () {

            // The main dialog box.
            dialog = doc.createElement("div");
            dialog.className = "wmd-prompt-dialog";
            dialog.style.padding = "10px;";
            dialog.style.position = "fixed";
            dialog.style.width = "400px";
            dialog.style.zIndex = "1001";

            // The dialog text.
            var question = doc.createElement("div");
            question.innerHTML = text;
            question.style.padding = "5px";
            dialog.appendChild(question);

            // The web form container for the text box and buttons.
            var form = doc.createElement("form"),
                style = form.style;
            form.onsubmit = function () { return close(false); };
            style.padding = "0";
            style.margin = "0";
            style.cssFloat = "left";
            style.width = "100%";
            style.textAlign = "center";
            style.position = "relative";
            dialog.appendChild(form);

            // The input text box
            input = doc.createElement("input");
            input.type = "text";
            input.value = defaultInputText;
            style = input.style;
            style.display = "block";
            style.width = "80%";
            style.marginLeft = style.marginRight = "auto";
            form.appendChild(input);

            // The ok button
            var okButton = doc.createElement("input");
            okButton.type = "button";
            okButton.onclick = function () { return close(false); };
            okButton.value = "OK";
            style = okButton.style;
            style.margin = "10px";
            style.display = "inline";
            style.width = "7em";


            // The cancel button
            var cancelButton = doc.createElement("input");
            cancelButton.type = "button";
            cancelButton.onclick = function () { return close(true); };
            cancelButton.value = "Cancel";
            style = cancelButton.style;
            style.margin = "10px";
            style.display = "inline";
            style.width = "7em";

            form.appendChild(okButton);
            form.appendChild(cancelButton);

            util.addEvent(doc.body, "keydown", checkEscape);
            dialog.style.top = "50%";
            dialog.style.left = "50%";
            dialog.style.display = "block";
            if (uaSniffed.isIE_5or6) {
                dialog.style.position = "absolute";
                dialog.style.top = doc.documentElement.scrollTop + 200 + "px";
                dialog.style.left = "50%";
            }
            doc.body.appendChild(dialog);

            // This has to be done AFTER adding the dialog to the form if you
            // want it to be centered.
            dialog.style.marginTop = -(position.getHeight(dialog) / 2) + "px";
            dialog.style.marginLeft = -(position.getWidth(dialog) / 2) + "px";

        };

        // Why is this in a zero-length timeout?
        // Is it working around a browser bug?
        setTimeout(function () {

            createDialog();

            var defTextLen = defaultInputText.length;
            if (input.selectionStart !== undefined) {
                input.selectionStart = 0;
                input.selectionEnd = defTextLen;
            }
            else if (input.createTextRange) {
                var range = input.createTextRange();
                range.collapse(false);
                range.moveStart("character", -defTextLen);
                range.moveEnd("character", defTextLen);
                range.select();
            }

            input.focus();
        }, 0);
    };

    function UIManager(postfix, panels, undoManager, previewManager, commandManager, helpOptions, getString, getKey) {
        var getStringAndKey = function (identifier) { return getString(identifier) + ' ' + getKey(identifier); };

        var inputBox = panels.input,
            buttons = {}; // buttons.undo, buttons.link, etc. The actual DOM elements.

        this.setUndoRedoButtonStates = function() {
            setTimeout(function() {
                setupButton(buttons.undo, inputBox.session.getUndoManager().hasUndo());
                setupButton(buttons.redo, inputBox.session.getUndoManager().hasRedo());
            }, 50);
        };

        var that = this;
        makeSpritedButtonRow();

        var keyEvent = "keydown";
        if (uaSniffed.isOpera) {
            keyEvent = "keypress";
        }

        function addKeyCmd(identifierList) {
            if(identifierList.length === 0) {
                return;
            }
            var identifier = identifierList.pop();
            inputBox.commands.addCommand({
                name: getString(identifier),
                bindKey: {win: 'Ctrl-' + keyStrokes[identifier],  mac: 'Command-' + keyStrokes[identifier]},
                exec: function(editor) {
                    doClick(buttons[identifier]);
                },
            });
            addKeyCmd(identifierList);
        }
        addKeyCmd(['bold', 'italic', 'link', 'quote', 'code', 'image', 'olist', 'ulist', 'heading', 'hr']);
        
        /*benweet
        util.addEvent(inputBox, keyEvent, function (key) {

            // Check to see if we have a button key and, if so execute the callback.
            if ((key.ctrlKey || key.metaKey) && !key.altKey) {

                var keyCode = key.charCode || key.keyCode;
                var keyCodeStr = String.fromCharCode(keyCode).toLowerCase();

                switch (keyCodeStr) {
                    case "b":
                        doClick(buttons.bold);
                        break;
                    case "i":
                        doClick(buttons.italic);
                        break;
                    case "l":
                        doClick(buttons.link);
                        break;
                    case "q":
                        doClick(buttons.quote);
                        break;
                    case "k":
                        doClick(buttons.code);
                        break;
                    case "g":
                        doClick(buttons.image);
                        break;
                    case "o":
                        doClick(buttons.olist);
                        break;
                    case "u":
                        doClick(buttons.ulist);
                        break;
                    case "h":
                        doClick(buttons.heading);
                        break;
                    case "r":
                        doClick(buttons.hr);
                        break;
                    case "y":
                        doClick(buttons.redo);
                        break;
                    case "z":
                        if (key.shiftKey) {
                            doClick(buttons.redo);
                        }
                        else {
                            doClick(buttons.undo);
                        }
                        break;
                    case "v":
                        undoManager.setMode("typing");
                        return;
                    case "x":
                        undoManager.setMode("deleting");
                        return;
                    default:
                        return;
                }


                if (key.preventDefault) {
                    key.preventDefault();
                }

                if (window.event) {
                    window.event.returnValue = false;
                }
            }
        });

        // Auto-indent on shift-enter
        util.addEvent(inputBox, "keyup", function (key) {
            if (key.shiftKey && !key.ctrlKey && !key.metaKey) {
                var keyCode = key.charCode || key.keyCode;
                // Character 13 is Enter
                if (keyCode === 13) {
                    var fakeButton = {};
                    fakeButton.textOp = bindCommand("doAutoindent");
                    doClick(fakeButton);
                }
            }
        });

        // special handler because IE clears the context of the textbox on ESC
        if (uaSniffed.isIE) {
            util.addEvent(inputBox, "keydown", function (key) {
                var code = key.keyCode;
                if (code === 27) {
                    return false;
                }
            });
        }
        */


        // Perform the button's action.
        function doClick(button) {

            inputBox.focus();
            var linkOrImage = button.id == "wmd-link-button" || button.id == "wmd-image-button";

            if (button.textOp) {

                if (undoManager && !linkOrImage) {
                    undoManager.setCommandMode();
                }

                var state = new TextareaState(panels);

                if (!state) {
                    return;
                }

                var chunks = state.getChunks();

                // Some commands launch a "modal" prompt dialog.  Javascript
                // can't really make a modal dialog box and the WMD code
                // will continue to execute while the dialog is displayed.
                // This prevents the dialog pattern I'm used to and means
                // I can't do something like this:
                //
                // var link = CreateLinkDialog();
                // makeMarkdownLink(link);
                //
                // Instead of this straightforward method of handling a
                // dialog I have to pass any code which would execute
                // after the dialog is dismissed (e.g. link creation)
                // in a function parameter.
                //
                // Yes this is awkward and I think it sucks, but there's
                // no real workaround.  Only the image and link code
                // create dialogs and require the function pointers.
                var fixupInputArea = function () {

                    inputBox.focus();

                    if (chunks) {
                        state.setChunks(chunks);
                    }

                    state.restore();
                    previewManager.refresh();
                };

                var noCleanup = button.textOp(chunks, fixupInputArea);

                if (!noCleanup) {
                    fixupInputArea();
                    /*benweet
                    if(!linkOrImage) {
                        inputBox.dispatchEvent(new Event('input'));
                    }
                    */
                }

            }

            if (button.execute) {
                button.execute(undoManager);
            }
        };

        function setupButton(button, isEnabled) {

            var normalYShift = "0px";
            var disabledYShift = "-20px";
            var highlightYShift = "-40px";
            var image = button.getElementsByTagName("span")[0];
            if (isEnabled) {
                image.style.backgroundPosition = button.XShift + " " + normalYShift;
                button.onmouseover = function () {
                    image.style.backgroundPosition = this.XShift + " " + highlightYShift;
                };

                button.onmouseout = function () {
                    image.style.backgroundPosition = this.XShift + " " + normalYShift;
                };

                // IE tries to select the background image "button" text (it's
                // implemented in a list item) so we have to cache the selection
                // on mousedown.
                if (uaSniffed.isIE) {
                    button.onmousedown = function () {
                        if (doc.activeElement && doc.activeElement !== panels.input) { // we're not even in the input box, so there's no selection
                            return;
                        }
                        panels.ieCachedRange = document.selection.createRange();
                        panels.ieCachedScrollTop = panels.input.renderer.getScrollTop();
                    };
                }

                if (!button.isHelp) {
                    button.onclick = function () {
                        if (this.onmouseout) {
                            this.onmouseout();
                        }
                        doClick(this);
                        return false;
                    }
                }
                button.className = button.className.replace(/ disabled/g, "");
            }
            else {
                image.style.backgroundPosition = button.XShift + " " + disabledYShift;
                button.onmouseover = button.onmouseout = button.onclick = function () { };
                button.className += " disabled";
            }
        }

        function bindCommand(method) {
            if (typeof method === "string")
                method = commandManager[method];
            return function () { method.apply(commandManager, arguments); }
        }

        function makeSpritedButtonRow() {

            var buttonBar = panels.buttonBar;

            var normalYShift = "0px";
            var disabledYShift = "-20px";
            var highlightYShift = "-40px";

            var buttonRow = document.createElement("ul");
            buttonRow.id = "wmd-button-row" + postfix;
            buttonRow.className = 'wmd-button-row';
            buttonRow = buttonBar.appendChild(buttonRow);
            var xPosition = 0;
            var makeButton = function (id, title, XShift, textOp) {
                var button = document.createElement("li");
                button.className = "wmd-button";
                button.style.left = xPosition + "px";
                xPosition += 25;
                var buttonImage = document.createElement("span");
                button.id = id + postfix;
                button.appendChild(buttonImage);
                button.title = title;
                button.XShift = XShift;
                if (textOp)
                    button.textOp = textOp;
                setupButton(button, true);
                buttonRow.appendChild(button);
                return button;
            };
            var makeSpacer = function (num) {
                var spacer = document.createElement("li");
                spacer.className = "wmd-spacer wmd-spacer" + num;
                spacer.id = "wmd-spacer" + num + postfix;
                buttonRow.appendChild(spacer);
                xPosition += 25;
            }

            buttons.bold = makeButton("wmd-bold-button", getStringAndKey("bold"), "0px", bindCommand("doBold"));
            buttons.italic = makeButton("wmd-italic-button", getStringAndKey("italic"), "-20px", bindCommand("doItalic"));
            makeSpacer(1);
            buttons.link = makeButton("wmd-link-button", getStringAndKey("link"), "-40px", bindCommand(function (chunk, postProcessing) {
                return this.doLinkOrImage(chunk, postProcessing, false);
            }));
            buttons.quote = makeButton("wmd-quote-button", getStringAndKey("quote"), "-60px", bindCommand("doBlockquote"));
            buttons.code = makeButton("wmd-code-button", getStringAndKey("code"), "-80px", bindCommand("doCode"));
            buttons.image = makeButton("wmd-image-button", getStringAndKey("image"), "-100px", bindCommand(function (chunk, postProcessing) {
                return this.doLinkOrImage(chunk, postProcessing, true);
            }));
            makeSpacer(2);
            buttons.olist = makeButton("wmd-olist-button", getStringAndKey("olist"), "-120px", bindCommand(function (chunk, postProcessing) {
                this.doList(chunk, postProcessing, true);
            }));
            buttons.ulist = makeButton("wmd-ulist-button", getStringAndKey("ulist"), "-140px", bindCommand(function (chunk, postProcessing) {
                this.doList(chunk, postProcessing, false);
            }));
            buttons.heading = makeButton("wmd-heading-button", getStringAndKey("heading"), "-160px", bindCommand("doHeading"));
            buttons.hr = makeButton("wmd-hr-button", getStringAndKey("hr"), "-180px", bindCommand("doHorizontalRule"));
            makeSpacer(3);
            buttons.undo = makeButton("wmd-undo-button", getStringAndKey("undo"), "-200px", null);
            buttons.undo.execute = function (manager) { inputBox.session.getUndoManager().undo(); };

            buttons.redo = makeButton("wmd-redo-button", getStringAndKey("redo"), "-220px", null);
            buttons.redo.execute = function (manager) { inputBox.session.getUndoManager().redo(); };

            if (helpOptions) {
                var helpButton = document.createElement("li");
                var helpButtonImage = document.createElement("span");
                helpButton.appendChild(helpButtonImage);
                helpButton.className = "wmd-button wmd-help-button";
                helpButton.id = "wmd-help-button" + postfix;
                helpButton.XShift = "-240px";
                helpButton.isHelp = true;
                helpButton.style.right = "0px";
                helpButton.title = getString("help");
                helpButton.onclick = helpOptions.handler;

                setupButton(helpButton, true);
                buttonRow.appendChild(helpButton);
                buttons.help = helpButton;
            }

            that.setUndoRedoButtonStates();
            inputBox.session.on('change', function() {
                that.setUndoRedoButtonStates();
            });
        }

        this.buttons = buttons;
        this.setButtonState = setupButton;

    }

    function CommandManager(pluginHooks, getString) {
        this.hooks = pluginHooks;
        this.getString = getString;
    }

    var commandProto = CommandManager.prototype;

    // The markdown symbols - 4 spaces = code, > = blockquote, etc.
    commandProto.prefixes = "(?:\\s{4,}|\\s*>|\\s*-\\s+|\\s*\\d+\\.|=|\\+|-|_|\\*|#|\\s*\\[[^\n]]+\\]:)";

    // Remove markdown symbols from the chunk selection.
    commandProto.unwrap = function (chunk) {
        var txt = new re("([^\\n])\\n(?!(\\n|" + this.prefixes + "))", "g");
        chunk.selection = chunk.selection.replace(txt, "$1 $2");
    };

    commandProto.wrap = function (chunk, len) {
        this.unwrap(chunk);
        var regex = new re("(.{1," + len + "})( +|$\\n?)", "gm"),
            that = this;

        chunk.selection = chunk.selection.replace(regex, function (line, marked) {
            if (new re("^" + that.prefixes, "").test(line)) {
                return line;
            }
            return marked + "\n";
        });

        chunk.selection = chunk.selection.replace(/\s+$/, "");
    };

    commandProto.doBold = function (chunk, postProcessing) {
        return this.doBorI(chunk, postProcessing, 2, this.getString("boldexample"));
    };

    commandProto.doItalic = function (chunk, postProcessing) {
        return this.doBorI(chunk, postProcessing, 1, this.getString("italicexample"));
    };

    // chunk: The selected region that will be enclosed with */**
    // nStars: 1 for italics, 2 for bold
    // insertText: If you just click the button without highlighting text, this gets inserted
    commandProto.doBorI = function (chunk, postProcessing, nStars, insertText) {

        // Get rid of whitespace and fixup newlines.
        chunk.trimWhitespace();
        chunk.selection = chunk.selection.replace(/\n{2,}/g, "\n");

        // Look for stars before and after.  Is the chunk already marked up?
        // note that these regex matches cannot fail
        var starsBefore = /(\**$)/.exec(chunk.before)[0];
        var starsAfter = /(^\**)/.exec(chunk.after)[0];

        var prevStars = Math.min(starsBefore.length, starsAfter.length);

        // Remove stars if we have to since the button acts as a toggle.
        if ((prevStars >= nStars) && (prevStars != 2 || nStars != 1)) {
            chunk.before = chunk.before.replace(re("[*]{" + nStars + "}$", ""), "");
            chunk.after = chunk.after.replace(re("^[*]{" + nStars + "}", ""), "");
        }
        else if (!chunk.selection && starsAfter) {
            // It's not really clear why this code is necessary.  It just moves
            // some arbitrary stuff around.
            chunk.after = chunk.after.replace(/^([*_]*)/, "");
            chunk.before = chunk.before.replace(/(\s?)$/, "");
            var whitespace = re.$1;
            chunk.before = chunk.before + starsAfter + whitespace;
        }
        else {

            // In most cases, if you don't have any selected text and click the button
            // you'll get a selected, marked up region with the default text inserted.
            if (!chunk.selection && !starsAfter) {
                chunk.selection = insertText;
            }

            // Add the true markup.
            var markup = nStars <= 1 ? "*" : "**"; // shouldn't the test be = ?
            chunk.before = chunk.before + markup;
            chunk.after = markup + chunk.after;
        }

        return;
    };

    commandProto.stripLinkDefs = function (text, defsToAdd) {

        text = text.replace(/^[ ]{0,3}\[(\d+)\]:[ \t]*\n?[ \t]*<?(\S+?)>?[ \t]*\n?[ \t]*(?:(\n*)["(](.+?)[")][ \t]*)?(?:\n+|$)/gm,
            function (totalMatch, id, link, newlines, title) {
                defsToAdd[id] = totalMatch.replace(/\s*$/, "");
                if (newlines) {
                    // Strip the title and return that separately.
                    defsToAdd[id] = totalMatch.replace(/["(](.+?)[")]$/, "");
                    return newlines + title;
                }
                return "";
            });

        return text;
    };

    commandProto.addLinkDef = function (chunk, linkDef) {

        var refNumber = 0; // The current reference number
        var defsToAdd = {}; //
        // Start with a clean slate by removing all previous link definitions.
        chunk.before = this.stripLinkDefs(chunk.before, defsToAdd);
        chunk.selection = this.stripLinkDefs(chunk.selection, defsToAdd);
        chunk.after = this.stripLinkDefs(chunk.after, defsToAdd);

        var defs = "";
        var regex = /(\[)((?:\[[^\]]*\]|[^\[\]])*)(\][ ]?(?:\n[ ]*)?\[)(\d+)(\])/g;

        var addDefNumber = function (def) {
            refNumber++;
            def = def.replace(/^[ ]{0,3}\[(\d+)\]:/, "  [" + refNumber + "]:");
            defs += "\n" + def;
        };

        // note that
        // a) the recursive call to getLink cannot go infinite, because by definition
        //    of regex, inner is always a proper substring of wholeMatch, and
        // b) more than one level of nesting is neither supported by the regex
        //    nor making a lot of sense (the only use case for nesting is a linked image)
        var getLink = function (wholeMatch, before, inner, afterInner, id, end) {
            inner = inner.replace(regex, getLink);
            if (defsToAdd[id]) {
                addDefNumber(defsToAdd[id]);
                return before + inner + afterInner + refNumber + end;
            }
            return wholeMatch;
        };

        chunk.before = chunk.before.replace(regex, getLink);

        if (linkDef) {
            addDefNumber(linkDef);
        }
        else {
            chunk.selection = chunk.selection.replace(regex, getLink);
        }

        var refOut = refNumber;

        chunk.after = chunk.after.replace(regex, getLink);

        if (chunk.after) {
            chunk.after = chunk.after.replace(/\n*$/, "");
        }
        if (!chunk.after) {
            chunk.selection = chunk.selection.replace(/\n*$/, "");
        }

        chunk.after += "\n\n" + defs;

        return refOut;
    };

    // takes the line as entered into the add link/as image dialog and makes
    // sure the URL and the optinal title are "nice".
    function properlyEncoded(linkdef) {
        return linkdef.replace(/^\s*(.*?)(?:\s+"(.+)")?\s*$/, function (wholematch, link, title) {
            link = link.replace(/\?.*$/, function (querypart) {
                return querypart.replace(/\+/g, " "); // in the query string, a plus and a space are identical
            });
            link = decodeURIComponent(link); // unencode first, to prevent double encoding
            link = encodeURI(link).replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29');
            link = link.replace(/\?.*$/, function (querypart) {
                return querypart.replace(/\+/g, "%2b"); // since we replaced plus with spaces in the query part, all pluses that now appear where originally encoded
            });
            if (title) {
                title = title.trim ? title.trim() : title.replace(/^\s*/, "").replace(/\s*$/, "");
                title = title.replace(/"/g, "quot;").replace(/\(/g, "&#40;").replace(/\)/g, "&#41;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            }
            return title ? link + ' "' + title + '"' : link;
        });
    }

    commandProto.doLinkOrImage = function (chunk, postProcessing, isImage) {

        chunk.trimWhitespace();
        chunk.findTags(/\s*!?\[/, /\][ ]?(?:\n[ ]*)?(\[.*?\])?/);
        var background;

        if (chunk.endTag.length > 1 && chunk.startTag.length > 0) {

            chunk.startTag = chunk.startTag.replace(/!?\[/, "");
            chunk.endTag = "";
            this.addLinkDef(chunk, null);

        }
        else {
            
            // We're moving start and end tag back into the selection, since (as we're in the else block) we're not
            // *removing* a link, but *adding* one, so whatever findTags() found is now back to being part of the
            // link text. linkEnteredCallback takes care of escaping any brackets.
            chunk.selection = chunk.startTag + chunk.selection + chunk.endTag;
            chunk.startTag = chunk.endTag = "";

            if (/\n\n/.test(chunk.selection)) {
                this.addLinkDef(chunk, null);
                return;
            }
            var that = this;
            // The function to be executed when you enter a link and press OK or Cancel.
            // Marks up the link and adds the ref.
            var linkEnteredCallback = function (link) {

                background.parentNode.removeChild(background);

                if (link !== null) {
                    // (                          $1
                    //     [^\\]                  anything that's not a backslash
                    //     (?:\\\\)*              an even number (this includes zero) of backslashes
                    // )
                    // (?=                        followed by
                    //     [[\]]                  an opening or closing bracket
                    // )
                    //
                    // In other words, a non-escaped bracket. These have to be escaped now to make sure they
                    // don't count as the end of the link or similar.
                    // Note that the actual bracket has to be a lookahead, because (in case of to subsequent brackets),
                    // the bracket in one match may be the "not a backslash" character in the next match, so it
                    // should not be consumed by the first match.
                    // The "prepend a space and finally remove it" steps makes sure there is a "not a backslash" at the
                    // start of the string, so this also works if the selection begins with a bracket. We cannot solve
                    // this by anchoring with ^, because in the case that the selection starts with two brackets, this
                    // would mean a zero-width match at the start. Since zero-width matches advance the string position,
                    // the first bracket could then not act as the "not a backslash" for the second.
                    chunk.selection = (" " + chunk.selection).replace(/([^\\](?:\\\\)*)(?=[[\]])/g, "$1\\").substr(1);
                    
                    var linkDef = " [999]: " + properlyEncoded(link);

                    var num = that.addLinkDef(chunk, linkDef);
                    chunk.startTag = isImage ? "![" : "[";
                    chunk.endTag = "][" + num + "]";

                    if (!chunk.selection) {
                        if (isImage) {
                            chunk.selection = that.getString("imagedescription");
                        }
                        else {
                            chunk.selection = that.getString("linkdescription");
                        }
                    }
                }
                postProcessing();
            };

            background = ui.createBackground();

            if (isImage) {
                if (!this.hooks.insertImageDialog(linkEnteredCallback))
                    ui.prompt(this.getString("imagedialog"), imageDefaultText, linkEnteredCallback);
            }
            else {
                if (!this.hooks.insertLinkDialog(linkEnteredCallback))
                    ui.prompt(this.getString("linkdialog"), linkDefaultText, linkEnteredCallback);
            }
            return true;
        }
    };

    // When making a list, hitting shift-enter will put your cursor on the next line
    // at the current indent level.
    commandProto.doAutoindent = function (chunk, postProcessing) {

        var commandMgr = this,
            fakeSelection = false;

        chunk.before = chunk.before.replace(/(\n|^)[ ]{0,3}([*+-]|\d+[.])[ \t]*\n$/, "\n\n");
        chunk.before = chunk.before.replace(/(\n|^)[ ]{0,3}>[ \t]*\n$/, "\n\n");
        chunk.before = chunk.before.replace(/(\n|^)[ \t]+\n$/, "\n\n");
        
        // There's no selection, end the cursor wasn't at the end of the line:
        // The user wants to split the current list item / code line / blockquote line
        // (for the latter it doesn't really matter) in two. Temporarily select the
        // (rest of the) line to achieve this.
        if (!chunk.selection && !/^[ \t]*(?:\n|$)/.test(chunk.after)) {
            chunk.after = chunk.after.replace(/^[^\n]*/, function (wholeMatch) {
                chunk.selection = wholeMatch;
                return "";
            });
            fakeSelection = true;
        }

        if (/(\n|^)[ ]{0,3}([*+-]|\d+[.])[ \t]+.*\n$/.test(chunk.before)) {
            if (commandMgr.doList) {
                commandMgr.doList(chunk);
            }
        }
        if (/(\n|^)[ ]{0,3}>[ \t]+.*\n$/.test(chunk.before)) {
            if (commandMgr.doBlockquote) {
                commandMgr.doBlockquote(chunk);
            }
        }
        if (/(\n|^)(\t|[ ]{4,}).*\n$/.test(chunk.before)) {
            if (commandMgr.doCode) {
                commandMgr.doCode(chunk);
            }
        }
        
        if (fakeSelection) {
            chunk.after = chunk.selection + chunk.after;
            chunk.selection = "";
        }
    };

    commandProto.doBlockquote = function (chunk, postProcessing) {

        chunk.selection = chunk.selection.replace(/^(\n*)([^\r]+?)(\n*)$/,
            function (totalMatch, newlinesBefore, text, newlinesAfter) {
                chunk.before += newlinesBefore;
                chunk.after = newlinesAfter + chunk.after;
                return text;
            });

        chunk.before = chunk.before.replace(/(>[ \t]*)$/,
            function (totalMatch, blankLine) {
                chunk.selection = blankLine + chunk.selection;
                return "";
            });

        chunk.selection = chunk.selection.replace(/^(\s|>)+$/, "");
        chunk.selection = chunk.selection || this.getString("quoteexample");

        // The original code uses a regular expression to find out how much of the
        // text *directly before* the selection already was a blockquote:

        /*
        if (chunk.before) {
        chunk.before = chunk.before.replace(/\n?$/, "\n");
        }
        chunk.before = chunk.before.replace(/(((\n|^)(\n[ \t]*)*>(.+\n)*.*)+(\n[ \t]*)*$)/,
        function (totalMatch) {
        chunk.startTag = totalMatch;
        return "";
        });
        */

        // This comes down to:
        // Go backwards as many lines a possible, such that each line
        //  a) starts with ">", or
        //  b) is almost empty, except for whitespace, or
        //  c) is preceeded by an unbroken chain of non-empty lines
        //     leading up to a line that starts with ">" and at least one more character
        // and in addition
        //  d) at least one line fulfills a)
        //
        // Since this is essentially a backwards-moving regex, it's susceptible to
        // catstrophic backtracking and can cause the browser to hang;
        // see e.g. http://meta.stackoverflow.com/questions/9807.
        //
        // Hence we replaced this by a simple state machine that just goes through the
        // lines and checks for a), b), and c).

        var match = "",
            leftOver = "",
            line;
        if (chunk.before) {
            var lines = chunk.before.replace(/\n$/, "").split("\n");
            var inChain = false;
            for (var i = 0; i < lines.length; i++) {
                var good = false;
                line = lines[i];
                inChain = inChain && line.length > 0; // c) any non-empty line continues the chain
                if (/^>/.test(line)) {                // a)
                    good = true;
                    if (!inChain && line.length > 1)  // c) any line that starts with ">" and has at least one more character starts the chain
                        inChain = true;
                } else if (/^[ \t]*$/.test(line)) {   // b)
                    good = true;
                } else {
                    good = inChain;                   // c) the line is not empty and does not start with ">", so it matches if and only if we're in the chain
                }
                if (good) {
                    match += line + "\n";
                } else {
                    leftOver += match + line;
                    match = "\n";
                }
            }
            if (!/(^|\n)>/.test(match)) {             // d)
                leftOver += match;
                match = "";
            }
        }

        chunk.startTag = match;
        chunk.before = leftOver;

        // end of change

        if (chunk.after) {
            chunk.after = chunk.after.replace(/^\n?/, "\n");
        }

        chunk.after = chunk.after.replace(/^(((\n|^)(\n[ \t]*)*>(.+\n)*.*)+(\n[ \t]*)*)/,
            function (totalMatch) {
                chunk.endTag = totalMatch;
                return "";
            }
        );

        var replaceBlanksInTags = function (useBracket) {

            var replacement = useBracket ? "> " : "";

            if (chunk.startTag) {
                chunk.startTag = chunk.startTag.replace(/\n((>|\s)*)\n$/,
                    function (totalMatch, markdown) {
                        return "\n" + markdown.replace(/^[ ]{0,3}>?[ \t]*$/gm, replacement) + "\n";
                    });
            }
            if (chunk.endTag) {
                chunk.endTag = chunk.endTag.replace(/^\n((>|\s)*)\n/,
                    function (totalMatch, markdown) {
                        return "\n" + markdown.replace(/^[ ]{0,3}>?[ \t]*$/gm, replacement) + "\n";
                    });
            }
        };

        if (/^(?![ ]{0,3}>)/m.test(chunk.selection)) {
            this.wrap(chunk, SETTINGS.lineLength - 2);
            chunk.selection = chunk.selection.replace(/^/gm, "> ");
            replaceBlanksInTags(true);
            chunk.skipLines();
        } else {
            chunk.selection = chunk.selection.replace(/^[ ]{0,3}> ?/gm, "");
            this.unwrap(chunk);
            replaceBlanksInTags(false);

            if (!/^(\n|^)[ ]{0,3}>/.test(chunk.selection) && chunk.startTag) {
                chunk.startTag = chunk.startTag.replace(/\n{0,2}$/, "\n\n");
            }

            if (!/(\n|^)[ ]{0,3}>.*$/.test(chunk.selection) && chunk.endTag) {
                chunk.endTag = chunk.endTag.replace(/^\n{0,2}/, "\n\n");
            }
        }

        chunk.selection = this.hooks.postBlockquoteCreation(chunk.selection);

        if (!/\n/.test(chunk.selection)) {
            chunk.selection = chunk.selection.replace(/^(> *)/,
            function (wholeMatch, blanks) {
                chunk.startTag += blanks;
                return "";
            });
        }
    };

    commandProto.doCode = function (chunk, postProcessing) {

        var hasTextBefore = /\S[ ]*$/.test(chunk.before);
        var hasTextAfter = /^[ ]*\S/.test(chunk.after);

        // Use 'four space' markdown if the selection is on its own
        // line or is multiline.
        if ((!hasTextAfter && !hasTextBefore) || /\n/.test(chunk.selection)) {

            chunk.before = chunk.before.replace(/[ ]{4}$/,
                function (totalMatch) {
                    chunk.selection = totalMatch + chunk.selection;
                    return "";
                });

            var nLinesBack = 1;
            var nLinesForward = 1;

            if (/(\n|^)(\t|[ ]{4,}).*\n$/.test(chunk.before)) {
                nLinesBack = 0;
            }
            if (/^\n(\t|[ ]{4,})/.test(chunk.after)) {
                nLinesForward = 0;
            }

            chunk.skipLines(nLinesBack, nLinesForward);

            if (!chunk.selection) {
                chunk.startTag = "    ";
                chunk.selection = this.getString("codeexample");
            }
            else {
                if (/^[ ]{0,3}\S/m.test(chunk.selection)) {
                    if (/\n/.test(chunk.selection))
                        chunk.selection = chunk.selection.replace(/^/gm, "    ");
                    else // if it's not multiline, do not select the four added spaces; this is more consistent with the doList behavior
                        chunk.before += "    ";
                }
                else {
                    chunk.selection = chunk.selection.replace(/^(?:[ ]{4}|[ ]{0,3}\t)/gm, "");
                }
            }
        }
        else {
            // Use backticks (`) to delimit the code block.

            chunk.trimWhitespace();
            chunk.findTags(/`/, /`/);

            if (!chunk.startTag && !chunk.endTag) {
                chunk.startTag = chunk.endTag = "`";
                if (!chunk.selection) {
                    chunk.selection = this.getString("codeexample");
                }
            }
            else if (chunk.endTag && !chunk.startTag) {
                chunk.before += chunk.endTag;
                chunk.endTag = "";
            }
            else {
                chunk.startTag = chunk.endTag = "";
            }
        }
    };

    commandProto.doList = function (chunk, postProcessing, isNumberedList) {

        // These are identical except at the very beginning and end.
        // Should probably use the regex extension function to make this clearer.
        var previousItemsRegex = /(\n|^)(([ ]{0,3}([*+-]|\d+[.])[ \t]+.*)(\n.+|\n{2,}([*+-].*|\d+[.])[ \t]+.*|\n{2,}[ \t]+\S.*)*)\n*$/;
        var nextItemsRegex = /^\n*(([ ]{0,3}([*+-]|\d+[.])[ \t]+.*)(\n.+|\n{2,}([*+-].*|\d+[.])[ \t]+.*|\n{2,}[ \t]+\S.*)*)\n*/;

        // The default bullet is a dash but others are possible.
        // This has nothing to do with the particular HTML bullet,
        // it's just a markdown bullet.
        var bullet = "-";

        // The number in a numbered list.
        var num = 1;

        // Get the item prefix - e.g. " 1. " for a numbered list, " - " for a bulleted list.
        var getItemPrefix = function () {
            var prefix;
            if (isNumberedList) {
                prefix = " " + num + ". ";
                num++;
            }
            else {
                prefix = " " + bullet + " ";
            }
            return prefix;
        };

        // Fixes the prefixes of the other list items.
        var getPrefixedItem = function (itemText) {

            // The numbering flag is unset when called by autoindent.
            if (isNumberedList === undefined) {
                isNumberedList = /^\s*\d/.test(itemText);
            }

            // Renumber/bullet the list element.
            itemText = itemText.replace(/^[ ]{0,3}([*+-]|\d+[.])\s/gm,
                function (_) {
                    return getItemPrefix();
                });

            return itemText;
        };

        chunk.findTags(/(\n|^)*[ ]{0,3}([*+-]|\d+[.])\s+/, null);

        if (chunk.before && !/\n$/.test(chunk.before) && !/^\n/.test(chunk.startTag)) {
            chunk.before += chunk.startTag;
            chunk.startTag = "";
        }

        if (chunk.startTag) {

            var hasDigits = /\d+[.]/.test(chunk.startTag);
            chunk.startTag = "";
            chunk.selection = chunk.selection.replace(/\n[ ]{4}/g, "\n");
            this.unwrap(chunk);
            chunk.skipLines();

            if (hasDigits) {
                // Have to renumber the bullet points if this is a numbered list.
                chunk.after = chunk.after.replace(nextItemsRegex, getPrefixedItem);
            }
            if (isNumberedList == hasDigits) {
                return;
            }
        }

        var nLinesUp = 1;

        chunk.before = chunk.before.replace(previousItemsRegex,
            function (itemText) {
                if (/^\s*([*+-])/.test(itemText)) {
                    bullet = re.$1;
                }
                nLinesUp = /[^\n]\n\n[^\n]/.test(itemText) ? 1 : 0;
                return getPrefixedItem(itemText);
            });

        if (!chunk.selection) {
            chunk.selection = this.getString("litem");
        }

        var prefix = getItemPrefix();

        var nLinesDown = 1;

        chunk.after = chunk.after.replace(nextItemsRegex,
            function (itemText) {
                nLinesDown = /[^\n]\n\n[^\n]/.test(itemText) ? 1 : 0;
                return getPrefixedItem(itemText);
            });

        chunk.trimWhitespace(true);
        chunk.skipLines(nLinesUp, nLinesDown, true);
        chunk.startTag = prefix;
        var spaces = prefix.replace(/./g, " ");
        this.wrap(chunk, SETTINGS.lineLength - spaces.length);
        chunk.selection = chunk.selection.replace(/\n/g, "\n" + spaces);

    };

    commandProto.doHeading = function (chunk, postProcessing) {

        // Remove leading/trailing whitespace and reduce internal spaces to single spaces.
        chunk.selection = chunk.selection.replace(/\s+/g, " ");
        chunk.selection = chunk.selection.replace(/(^\s+|\s+$)/g, "");

        // If we clicked the button with no selected text, we just
        // make a level 2 hash header around some default text.
        if (!chunk.selection) {
            chunk.startTag = "## ";
            chunk.selection = this.getString("headingexample");
            chunk.endTag = " ##";
            return;
        }

        var headerLevel = 0;     // The existing header level of the selected text.

        // Remove any existing hash heading markdown and save the header level.
        chunk.findTags(/#+[ ]*/, /[ ]*#+/);
        if (/#+/.test(chunk.startTag)) {
            headerLevel = re.lastMatch.length;
        }
        chunk.startTag = chunk.endTag = "";

        // Try to get the current header level by looking for - and = in the line
        // below the selection.
        chunk.findTags(null, /\s?(-+|=+)/);
        if (/=+/.test(chunk.endTag)) {
            headerLevel = 1;
        }
        if (/-+/.test(chunk.endTag)) {
            headerLevel = 2;
        }

        // Skip to the next line so we can create the header markdown.
        chunk.startTag = chunk.endTag = "";
        chunk.skipLines(1, 1);

        // We make a level 2 header if there is no current header.
        // If there is a header level, we substract one from the header level.
        // If it's already a level 1 header, it's removed.
        var headerLevelToCreate = headerLevel == 0 ? 2 : headerLevel - 1;

        if (headerLevelToCreate > 0) {

            // The button only creates level 1 and 2 underline headers.
            // Why not have it iterate over hash header levels?  Wouldn't that be easier and cleaner?
            var headerChar = headerLevelToCreate >= 2 ? "-" : "=";
            var len = chunk.selection.length;
            if (len > SETTINGS.lineLength) {
                len = SETTINGS.lineLength;
            }
            chunk.endTag = "\n";
            while (len--) {
                chunk.endTag += headerChar;
            }
        }
    };

    commandProto.doHorizontalRule = function (chunk, postProcessing) {
        chunk.startTag = "----------\n";
        chunk.selection = "";
        chunk.skipLines(2, 1, true);
    }


})();
define("pagedown-ace", function(){});

// Copyright (C) 2006 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


/**
 * @fileoverview
 * some functions for browser-side pretty printing of code contained in html.
 *
 * <p>
 * For a fairly comprehensive set of languages see the
 * <a href="http://google-code-prettify.googlecode.com/svn/trunk/README.html#langs">README</a>
 * file that came with this source.  At a minimum, the lexer should work on a
 * number of languages including C and friends, Java, Python, Bash, SQL, HTML,
 * XML, CSS, Javascript, and Makefiles.  It works passably on Ruby, PHP and Awk
 * and a subset of Perl, but, because of commenting conventions, doesn't work on
 * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class.
 * <p>
 * Usage: <ol>
 * <li> include this source file in an html page via
 *   {@code <script type="text/javascript" src="/path/to/prettify.js"></script>}
 * <li> define style rules.  See the example page for examples.
 * <li> mark the {@code <pre>} and {@code <code>} tags in your source with
 *    {@code class=prettyprint.}
 *    You can also use the (html deprecated) {@code <xmp>} tag, but the pretty
 *    printer needs to do more substantial DOM manipulations to support that, so
 *    some css styles may not be preserved.
 * </ol>
 * That's it.  I wanted to keep the API as simple as possible, so there's no
 * need to specify which language the code is in, but if you wish, you can add
 * another class to the {@code <pre>} or {@code <code>} element to specify the
 * language, as in {@code <pre class="prettyprint lang-java">}.  Any class that
 * starts with "lang-" followed by a file extension, specifies the file type.
 * See the "lang-*.js" files in this directory for code that implements
 * per-language file handlers.
 * <p>
 * Change log:<br>
 * cbeust, 2006/08/22
 * <blockquote>
 *   Java annotations (start with "@") are now captured as literals ("lit")
 * </blockquote>
 * @requires console
 */

// JSLint declarations
/*global console, document, navigator, setTimeout, window, define */

/**
 * Split {@code prettyPrint} into multiple timeouts so as not to interfere with
 * UI events.
 * If set to {@code false}, {@code prettyPrint()} is synchronous.
 */
window['PR_SHOULD_USE_CONTINUATION'] = true;

/**
 * Find all the {@code <pre>} and {@code <code>} tags in the DOM with
 * {@code class=prettyprint} and prettify them.
 *
 * @param {Function?} opt_whenDone if specified, called when the last entry
 *     has been finished.
 */
var prettyPrintOne;
/**
 * Pretty print a chunk of code.
 *
 * @param {string} sourceCodeHtml code as html
 * @return {string} code as html, but prettier
 */
var prettyPrint;


(function () {
  var win = window;
  // Keyword lists for various languages.
  // We use things that coerce to strings to make them compact when minified
  // and to defeat aggressive optimizers that fold large string constants.
  var FLOW_CONTROL_KEYWORDS = ["break,continue,do,else,for,if,return,while"];
  var C_KEYWORDS = [FLOW_CONTROL_KEYWORDS,"auto,case,char,const,default," + 
      "double,enum,extern,float,goto,int,long,register,short,signed,sizeof," +
      "static,struct,switch,typedef,union,unsigned,void,volatile"];
  var COMMON_KEYWORDS = [C_KEYWORDS,"catch,class,delete,false,import," +
      "new,operator,private,protected,public,this,throw,true,try,typeof"];
  var CPP_KEYWORDS = [COMMON_KEYWORDS,"alignof,align_union,asm,axiom,bool," +
      "concept,concept_map,const_cast,constexpr,decltype," +
      "dynamic_cast,explicit,export,friend,inline,late_check," +
      "mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast," +
      "template,typeid,typename,using,virtual,where"];
  var JAVA_KEYWORDS = [COMMON_KEYWORDS,
      "abstract,boolean,byte,extends,final,finally,implements,import," +
      "instanceof,null,native,package,strictfp,super,synchronized,throws," +
      "transient"];
  var CSHARP_KEYWORDS = [JAVA_KEYWORDS,
      "as,base,by,checked,decimal,delegate,descending,dynamic,event," +
      "fixed,foreach,from,group,implicit,in,interface,internal,into,is,let," +
      "lock,object,out,override,orderby,params,partial,readonly,ref,sbyte," +
      "sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort," +
      "var,virtual,where"];
  var COFFEE_KEYWORDS = "all,and,by,catch,class,else,extends,false,finally," +
      "for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then," +
      "throw,true,try,unless,until,when,while,yes";
  var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS,
      "debugger,eval,export,function,get,null,set,undefined,var,with," +
      "Infinity,NaN"];
  var PERL_KEYWORDS = "caller,delete,die,do,dump,elsif,eval,exit,foreach,for," +
      "goto,if,import,last,local,my,next,no,our,print,package,redo,require," +
      "sub,undef,unless,until,use,wantarray,while,BEGIN,END";
  var PYTHON_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "and,as,assert,class,def,del," +
      "elif,except,exec,finally,from,global,import,in,is,lambda," +
      "nonlocal,not,or,pass,print,raise,try,with,yield," +
      "False,True,None"];
  var RUBY_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "alias,and,begin,case,class," +
      "def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo," +
      "rescue,retry,self,super,then,true,undef,unless,until,when,yield," +
      "BEGIN,END"];
  var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "case,done,elif,esac,eval,fi," +
      "function,in,local,set,then,until"];
  var ALL_KEYWORDS = [
      CPP_KEYWORDS, CSHARP_KEYWORDS, JSCRIPT_KEYWORDS, PERL_KEYWORDS +
      PYTHON_KEYWORDS, RUBY_KEYWORDS, SH_KEYWORDS];
  var C_TYPES = /^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/;

  // token style names.  correspond to css classes
  /**
   * token style for a string literal
   * @const
   */
  var PR_STRING = 'str';
  /**
   * token style for a keyword
   * @const
   */
  var PR_KEYWORD = 'kwd';
  /**
   * token style for a comment
   * @const
   */
  var PR_COMMENT = 'com';
  /**
   * token style for a type
   * @const
   */
  var PR_TYPE = 'typ';
  /**
   * token style for a literal value.  e.g. 1, null, true.
   * @const
   */
  var PR_LITERAL = 'lit';
  /**
   * token style for a punctuation string.
   * @const
   */
  var PR_PUNCTUATION = 'pun';
  /**
   * token style for plain text.
   * @const
   */
  var PR_PLAIN = 'pln';

  /**
   * token style for an sgml tag.
   * @const
   */
  var PR_TAG = 'tag';
  /**
   * token style for a markup declaration such as a DOCTYPE.
   * @const
   */
  var PR_DECLARATION = 'dec';
  /**
   * token style for embedded source.
   * @const
   */
  var PR_SOURCE = 'src';
  /**
   * token style for an sgml attribute name.
   * @const
   */
  var PR_ATTRIB_NAME = 'atn';
  /**
   * token style for an sgml attribute value.
   * @const
   */
  var PR_ATTRIB_VALUE = 'atv';

  /**
   * A class that indicates a section of markup that is not code, e.g. to allow
   * embedding of line numbers within code listings.
   * @const
   */
  var PR_NOCODE = 'nocode';



/**
 * A set of tokens that can precede a regular expression literal in
 * javascript
 * http://web.archive.org/web/20070717142515/http://www.mozilla.org/js/language/js20/rationale/syntax.html
 * has the full list, but I've removed ones that might be problematic when
 * seen in languages that don't support regular expression literals.
 *
 * <p>Specifically, I've removed any keywords that can't precede a regexp
 * literal in a syntactically legal javascript program, and I've removed the
 * "in" keyword since it's not a keyword in many languages, and might be used
 * as a count of inches.
 *
 * <p>The link above does not accurately describe EcmaScript rules since
 * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works
 * very well in practice.
 *
 * @private
 * @const
 */
var REGEXP_PRECEDER_PATTERN = '(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*';

// CAVEAT: this does not properly handle the case where a regular
// expression immediately follows another since a regular expression may
// have flags for case-sensitivity and the like.  Having regexp tokens
// adjacent is not valid in any language I'm aware of, so I'm punting.
// TODO: maybe style special characters inside a regexp as punctuation.


  /**
   * Given a group of {@link RegExp}s, returns a {@code RegExp} that globally
   * matches the union of the sets of strings matched by the input RegExp.
   * Since it matches globally, if the input strings have a start-of-input
   * anchor (/^.../), it is ignored for the purposes of unioning.
   * @param {Array.<RegExp>} regexs non multiline, non-global regexs.
   * @return {RegExp} a global regex.
   */
  function combinePrefixPatterns(regexs) {
    var capturedGroupIndex = 0;
  
    var needToFoldCase = false;
    var ignoreCase = false;
    for (var i = 0, n = regexs.length; i < n; ++i) {
      var regex = regexs[i];
      if (regex.ignoreCase) {
        ignoreCase = true;
      } else if (/[a-z]/i.test(regex.source.replace(
                     /\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi, ''))) {
        needToFoldCase = true;
        ignoreCase = false;
        break;
      }
    }
  
    var escapeCharToCodeUnit = {
      'b': 8,
      't': 9,
      'n': 0xa,
      'v': 0xb,
      'f': 0xc,
      'r': 0xd
    };
  
    function decodeEscape(charsetPart) {
      var cc0 = charsetPart.charCodeAt(0);
      if (cc0 !== 92 /* \\ */) {
        return cc0;
      }
      var c1 = charsetPart.charAt(1);
      cc0 = escapeCharToCodeUnit[c1];
      if (cc0) {
        return cc0;
      } else if ('0' <= c1 && c1 <= '7') {
        return parseInt(charsetPart.substring(1), 8);
      } else if (c1 === 'u' || c1 === 'x') {
        return parseInt(charsetPart.substring(2), 16);
      } else {
        return charsetPart.charCodeAt(1);
      }
    }
  
    function encodeEscape(charCode) {
      if (charCode < 0x20) {
        return (charCode < 0x10 ? '\\x0' : '\\x') + charCode.toString(16);
      }
      var ch = String.fromCharCode(charCode);
      return (ch === '\\' || ch === '-' || ch === ']' || ch === '^')
          ? "\\" + ch : ch;
    }
  
    function caseFoldCharset(charSet) {
      var charsetParts = charSet.substring(1, charSet.length - 1).match(
          new RegExp(
              '\\\\u[0-9A-Fa-f]{4}'
              + '|\\\\x[0-9A-Fa-f]{2}'
              + '|\\\\[0-3][0-7]{0,2}'
              + '|\\\\[0-7]{1,2}'
              + '|\\\\[\\s\\S]'
              + '|-'
              + '|[^-\\\\]',
              'g'));
      var ranges = [];
      var inverse = charsetParts[0] === '^';
  
      var out = ['['];
      if (inverse) { out.push('^'); }
  
      for (var i = inverse ? 1 : 0, n = charsetParts.length; i < n; ++i) {
        var p = charsetParts[i];
        if (/\\[bdsw]/i.test(p)) {  // Don't muck with named groups.
          out.push(p);
        } else {
          var start = decodeEscape(p);
          var end;
          if (i + 2 < n && '-' === charsetParts[i + 1]) {
            end = decodeEscape(charsetParts[i + 2]);
            i += 2;
          } else {
            end = start;
          }
          ranges.push([start, end]);
          // If the range might intersect letters, then expand it.
          // This case handling is too simplistic.
          // It does not deal with non-latin case folding.
          // It works for latin source code identifiers though.
          if (!(end < 65 || start > 122)) {
            if (!(end < 65 || start > 90)) {
              ranges.push([Math.max(65, start) | 32, Math.min(end, 90) | 32]);
            }
            if (!(end < 97 || start > 122)) {
              ranges.push([Math.max(97, start) & ~32, Math.min(end, 122) & ~32]);
            }
          }
        }
      }
  
      // [[1, 10], [3, 4], [8, 12], [14, 14], [16, 16], [17, 17]]
      // -> [[1, 12], [14, 14], [16, 17]]
      ranges.sort(function (a, b) { return (a[0] - b[0]) || (b[1]  - a[1]); });
      var consolidatedRanges = [];
      var lastRange = [];
      for (var i = 0; i < ranges.length; ++i) {
        var range = ranges[i];
        if (range[0] <= lastRange[1] + 1) {
          lastRange[1] = Math.max(lastRange[1], range[1]);
        } else {
          consolidatedRanges.push(lastRange = range);
        }
      }
  
      for (var i = 0; i < consolidatedRanges.length; ++i) {
        var range = consolidatedRanges[i];
        out.push(encodeEscape(range[0]));
        if (range[1] > range[0]) {
          if (range[1] + 1 > range[0]) { out.push('-'); }
          out.push(encodeEscape(range[1]));
        }
      }
      out.push(']');
      return out.join('');
    }
  
    function allowAnywhereFoldCaseAndRenumberGroups(regex) {
      // Split into character sets, escape sequences, punctuation strings
      // like ('(', '(?:', ')', '^'), and runs of characters that do not
      // include any of the above.
      var parts = regex.source.match(
          new RegExp(
              '(?:'
              + '\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]'  // a character set
              + '|\\\\u[A-Fa-f0-9]{4}'  // a unicode escape
              + '|\\\\x[A-Fa-f0-9]{2}'  // a hex escape
              + '|\\\\[0-9]+'  // a back-reference or octal escape
              + '|\\\\[^ux0-9]'  // other escape sequence
              + '|\\(\\?[:!=]'  // start of a non-capturing group
              + '|[\\(\\)\\^]'  // start/end of a group, or line start
              + '|[^\\x5B\\x5C\\(\\)\\^]+'  // run of other characters
              + ')',
              'g'));
      var n = parts.length;
  
      // Maps captured group numbers to the number they will occupy in
      // the output or to -1 if that has not been determined, or to
      // undefined if they need not be capturing in the output.
      var capturedGroups = [];
  
      // Walk over and identify back references to build the capturedGroups
      // mapping.
      for (var i = 0, groupIndex = 0; i < n; ++i) {
        var p = parts[i];
        if (p === '(') {
          // groups are 1-indexed, so max group index is count of '('
          ++groupIndex;
        } else if ('\\' === p.charAt(0)) {
          var decimalValue = +p.substring(1);
          if (decimalValue) {
            if (decimalValue <= groupIndex) {
              capturedGroups[decimalValue] = -1;
            } else {
              // Replace with an unambiguous escape sequence so that
              // an octal escape sequence does not turn into a backreference
              // to a capturing group from an earlier regex.
              parts[i] = encodeEscape(decimalValue);
            }
          }
        }
      }
  
      // Renumber groups and reduce capturing groups to non-capturing groups
      // where possible.
      for (var i = 1; i < capturedGroups.length; ++i) {
        if (-1 === capturedGroups[i]) {
          capturedGroups[i] = ++capturedGroupIndex;
        }
      }
      for (var i = 0, groupIndex = 0; i < n; ++i) {
        var p = parts[i];
        if (p === '(') {
          ++groupIndex;
          if (!capturedGroups[groupIndex]) {
            parts[i] = '(?:';
          }
        } else if ('\\' === p.charAt(0)) {
          var decimalValue = +p.substring(1);
          if (decimalValue && decimalValue <= groupIndex) {
            parts[i] = '\\' + capturedGroups[decimalValue];
          }
        }
      }
  
      // Remove any prefix anchors so that the output will match anywhere.
      // ^^ really does mean an anchored match though.
      for (var i = 0; i < n; ++i) {
        if ('^' === parts[i] && '^' !== parts[i + 1]) { parts[i] = ''; }
      }
  
      // Expand letters to groups to handle mixing of case-sensitive and
      // case-insensitive patterns if necessary.
      if (regex.ignoreCase && needToFoldCase) {
        for (var i = 0; i < n; ++i) {
          var p = parts[i];
          var ch0 = p.charAt(0);
          if (p.length >= 2 && ch0 === '[') {
            parts[i] = caseFoldCharset(p);
          } else if (ch0 !== '\\') {
            // TODO: handle letters in numeric escapes.
            parts[i] = p.replace(
                /[a-zA-Z]/g,
                function (ch) {
                  var cc = ch.charCodeAt(0);
                  return '[' + String.fromCharCode(cc & ~32, cc | 32) + ']';
                });
          }
        }
      }
  
      return parts.join('');
    }
  
    var rewritten = [];
    for (var i = 0, n = regexs.length; i < n; ++i) {
      var regex = regexs[i];
      if (regex.global || regex.multiline) { throw new Error('' + regex); }
      rewritten.push(
          '(?:' + allowAnywhereFoldCaseAndRenumberGroups(regex) + ')');
    }
  
    return new RegExp(rewritten.join('|'), ignoreCase ? 'gi' : 'g');
  }


  /**
   * Split markup into a string of source code and an array mapping ranges in
   * that string to the text nodes in which they appear.
   *
   * <p>
   * The HTML DOM structure:</p>
   * <pre>
   * (Element   "p"
   *   (Element "b"
   *     (Text  "print "))       ; #1
   *   (Text    "'Hello '")      ; #2
   *   (Element "br")            ; #3
   *   (Text    "  + 'World';")) ; #4
   * </pre>
   * <p>
   * corresponds to the HTML
   * {@code <p><b>print </b>'Hello '<br>  + 'World';</p>}.</p>
   *
   * <p>
   * It will produce the output:</p>
   * <pre>
   * {
   *   sourceCode: "print 'Hello '\n  + 'World';",
   *   //                     1          2
   *   //           012345678901234 5678901234567
   *   spans: [0, #1, 6, #2, 14, #3, 15, #4]
   * }
   * </pre>
   * <p>
   * where #1 is a reference to the {@code "print "} text node above, and so
   * on for the other text nodes.
   * </p>
   *
   * <p>
   * The {@code} spans array is an array of pairs.  Even elements are the start
   * indices of substrings, and odd elements are the text nodes (or BR elements)
   * that contain the text for those substrings.
   * Substrings continue until the next index or the end of the source.
   * </p>
   *
   * @param {Node} node an HTML DOM subtree containing source-code.
   * @param {boolean} isPreformatted true if white-space in text nodes should
   *    be considered significant.
   * @return {Object} source code and the text nodes in which they occur.
   */
  function extractSourceSpans(node, isPreformatted) {
    var nocode = /(?:^|\s)nocode(?:\s|$)/;
  
    var chunks = [];
    var length = 0;
    var spans = [];
    var k = 0;
  
    function walk(node) {
      switch (node.nodeType) {
        case 1:  // Element
          if (nocode.test(node.className)) { return; }
          for (var child = node.firstChild; child; child = child.nextSibling) {
            walk(child);
          }
          var nodeName = node.nodeName.toLowerCase();
          if ('br' === nodeName || 'li' === nodeName) {
            chunks[k] = '\n';
            spans[k << 1] = length++;
            spans[(k++ << 1) | 1] = node;
          }
          break;
        case 3: case 4:  // Text
          var text = node.nodeValue;
          if (text.length) {
            if (!isPreformatted) {
              text = text.replace(/[ \t\r\n]+/g, ' ');
            } else {
              text = text.replace(/\r\n?/g, '\n');  // Normalize newlines.
            }
            // TODO: handle tabs here?
            chunks[k] = text;
            spans[k << 1] = length;
            length += text.length;
            spans[(k++ << 1) | 1] = node;
          }
          break;
      }
    }
  
    walk(node);
  
    return {
      sourceCode: chunks.join('').replace(/\n$/, ''),
      spans: spans
    };
  }


  /**
   * Apply the given language handler to sourceCode and add the resulting
   * decorations to out.
   * @param {number} basePos the index of sourceCode within the chunk of source
   *    whose decorations are already present on out.
   */
  function appendDecorations(basePos, sourceCode, langHandler, out) {
    if (!sourceCode) { return; }
    var job = {
      sourceCode: sourceCode,
      basePos: basePos
    };
    langHandler(job);
    out.push.apply(out, job.decorations);
  }

  var notWs = /\S/;

  /**
   * Given an element, if it contains only one child element and any text nodes
   * it contains contain only space characters, return the sole child element.
   * Otherwise returns undefined.
   * <p>
   * This is meant to return the CODE element in {@code <pre><code ...>} when
   * there is a single child element that contains all the non-space textual
   * content, but not to return anything where there are multiple child elements
   * as in {@code <pre><code>...</code><code>...</code></pre>} or when there
   * is textual content.
   */
  function childContentWrapper(element) {
    var wrapper = undefined;
    for (var c = element.firstChild; c; c = c.nextSibling) {
      var type = c.nodeType;
      wrapper = (type === 1)  // Element Node
          ? (wrapper ? element : c)
          : (type === 3)  // Text Node
          ? (notWs.test(c.nodeValue) ? element : wrapper)
          : wrapper;
    }
    return wrapper === element ? undefined : wrapper;
  }

  /** Given triples of [style, pattern, context] returns a lexing function,
    * The lexing function interprets the patterns to find token boundaries and
    * returns a decoration list of the form
    * [index_0, style_0, index_1, style_1, ..., index_n, style_n]
    * where index_n is an index into the sourceCode, and style_n is a style
    * constant like PR_PLAIN.  index_n-1 <= index_n, and style_n-1 applies to
    * all characters in sourceCode[index_n-1:index_n].
    *
    * The stylePatterns is a list whose elements have the form
    * [style : string, pattern : RegExp, DEPRECATED, shortcut : string].
    *
    * Style is a style constant like PR_PLAIN, or can be a string of the
    * form 'lang-FOO', where FOO is a language extension describing the
    * language of the portion of the token in $1 after pattern executes.
    * E.g., if style is 'lang-lisp', and group 1 contains the text
    * '(hello (world))', then that portion of the token will be passed to the
    * registered lisp handler for formatting.
    * The text before and after group 1 will be restyled using this decorator
    * so decorators should take care that this doesn't result in infinite
    * recursion.  For example, the HTML lexer rule for SCRIPT elements looks
    * something like ['lang-js', /<[s]cript>(.+?)<\/script>/].  This may match
    * '<script>foo()<\/script>', which would cause the current decorator to
    * be called with '<script>' which would not match the same rule since
    * group 1 must not be empty, so it would be instead styled as PR_TAG by
    * the generic tag rule.  The handler registered for the 'js' extension would
    * then be called with 'foo()', and finally, the current decorator would
    * be called with '<\/script>' which would not match the original rule and
    * so the generic tag rule would identify it as a tag.
    *
    * Pattern must only match prefixes, and if it matches a prefix, then that
    * match is considered a token with the same style.
    *
    * Context is applied to the last non-whitespace, non-comment token
    * recognized.
    *
    * Shortcut is an optional string of characters, any of which, if the first
    * character, gurantee that this pattern and only this pattern matches.
    *
    * @param {Array} shortcutStylePatterns patterns that always start with
    *   a known character.  Must have a shortcut string.
    * @param {Array} fallthroughStylePatterns patterns that will be tried in
    *   order if the shortcut ones fail.  May have shortcuts.
    *
    * @return {function (Object)} a
    *   function that takes source code and returns a list of decorations.
    */
  function createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns) {
    var shortcuts = {};
    var tokenizer;
    (function () {
      var allPatterns = shortcutStylePatterns.concat(fallthroughStylePatterns);
      var allRegexs = [];
      var regexKeys = {};
      for (var i = 0, n = allPatterns.length; i < n; ++i) {
        var patternParts = allPatterns[i];
        var shortcutChars = patternParts[3];
        if (shortcutChars) {
          for (var c = shortcutChars.length; --c >= 0;) {
            shortcuts[shortcutChars.charAt(c)] = patternParts;
          }
        }
        var regex = patternParts[1];
        var k = '' + regex;
        if (!regexKeys.hasOwnProperty(k)) {
          allRegexs.push(regex);
          regexKeys[k] = null;
        }
      }
      allRegexs.push(/[\0-\uffff]/);
      tokenizer = combinePrefixPatterns(allRegexs);
    })();

    var nPatterns = fallthroughStylePatterns.length;

    /**
     * Lexes job.sourceCode and produces an output array job.decorations of
     * style classes preceded by the position at which they start in
     * job.sourceCode in order.
     *
     * @param {Object} job an object like <pre>{
     *    sourceCode: {string} sourceText plain text,
     *    basePos: {int} position of job.sourceCode in the larger chunk of
     *        sourceCode.
     * }</pre>
     */
    var decorate = function (job) {
      var sourceCode = job.sourceCode, basePos = job.basePos;
      /** Even entries are positions in source in ascending order.  Odd enties
        * are style markers (e.g., PR_COMMENT) that run from that position until
        * the end.
        * @type {Array.<number|string>}
        */
      var decorations = [basePos, PR_PLAIN];
      var pos = 0;  // index into sourceCode
      var tokens = sourceCode.match(tokenizer) || [];
      var styleCache = {};

      for (var ti = 0, nTokens = tokens.length; ti < nTokens; ++ti) {
        var token = tokens[ti];
        var style = styleCache[token];
        var match = void 0;

        var isEmbedded;
        if (typeof style === 'string') {
          isEmbedded = false;
        } else {
          var patternParts = shortcuts[token.charAt(0)];
          if (patternParts) {
            match = token.match(patternParts[1]);
            style = patternParts[0];
          } else {
            for (var i = 0; i < nPatterns; ++i) {
              patternParts = fallthroughStylePatterns[i];
              match = token.match(patternParts[1]);
              if (match) {
                style = patternParts[0];
                break;
              }
            }

            if (!match) {  // make sure that we make progress
              style = PR_PLAIN;
            }
          }

          isEmbedded = style.length >= 5 && 'lang-' === style.substring(0, 5);
          if (isEmbedded && !(match && typeof match[1] === 'string')) {
            isEmbedded = false;
            style = PR_SOURCE;
          }

          if (!isEmbedded) { styleCache[token] = style; }
        }

        var tokenStart = pos;
        pos += token.length;

        if (!isEmbedded) {
          decorations.push(basePos + tokenStart, style);
        } else {  // Treat group 1 as an embedded block of source code.
          var embeddedSource = match[1];
          var embeddedSourceStart = token.indexOf(embeddedSource);
          var embeddedSourceEnd = embeddedSourceStart + embeddedSource.length;
          if (match[2]) {
            // If embeddedSource can be blank, then it would match at the
            // beginning which would cause us to infinitely recurse on the
            // entire token, so we catch the right context in match[2].
            embeddedSourceEnd = token.length - match[2].length;
            embeddedSourceStart = embeddedSourceEnd - embeddedSource.length;
          }
          var lang = style.substring(5);
          // Decorate the left of the embedded source
          appendDecorations(
              basePos + tokenStart,
              token.substring(0, embeddedSourceStart),
              decorate, decorations);
          // Decorate the embedded source
          appendDecorations(
              basePos + tokenStart + embeddedSourceStart,
              embeddedSource,
              langHandlerForExtension(lang, embeddedSource),
              decorations);
          // Decorate the right of the embedded section
          appendDecorations(
              basePos + tokenStart + embeddedSourceEnd,
              token.substring(embeddedSourceEnd),
              decorate, decorations);
        }
      }
      job.decorations = decorations;
    };
    return decorate;
  }

  /** returns a function that produces a list of decorations from source text.
    *
    * This code treats ", ', and ` as string delimiters, and \ as a string
    * escape.  It does not recognize perl's qq() style strings.
    * It has no special handling for double delimiter escapes as in basic, or
    * the tripled delimiters used in python, but should work on those regardless
    * although in those cases a single string literal may be broken up into
    * multiple adjacent string literals.
    *
    * It recognizes C, C++, and shell style comments.
    *
    * @param {Object} options a set of optional parameters.
    * @return {function (Object)} a function that examines the source code
    *     in the input job and builds the decoration list.
    */
  function sourceDecorator(options) {
    var shortcutStylePatterns = [], fallthroughStylePatterns = [];
    if (options['tripleQuotedStrings']) {
      // '''multi-line-string''', 'single-line-string', and double-quoted
      shortcutStylePatterns.push(
          [PR_STRING,  /^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,
           null, '\'"']);
    } else if (options['multiLineStrings']) {
      // 'multi-line-string', "multi-line-string"
      shortcutStylePatterns.push(
          [PR_STRING,  /^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,
           null, '\'"`']);
    } else {
      // 'single-line-string', "single-line-string"
      shortcutStylePatterns.push(
          [PR_STRING,
           /^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,
           null, '"\'']);
    }
    if (options['verbatimStrings']) {
      // verbatim-string-literal production from the C# grammar.  See issue 93.
      fallthroughStylePatterns.push(
          [PR_STRING, /^@\"(?:[^\"]|\"\")*(?:\"|$)/, null]);
    }
    var hc = options['hashComments'];
    if (hc) {
      if (options['cStyleComments']) {
        if (hc > 1) {  // multiline hash comments
          shortcutStylePatterns.push(
              [PR_COMMENT, /^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/, null, '#']);
        } else {
          // Stop C preprocessor declarations at an unclosed open comment
          shortcutStylePatterns.push(
              [PR_COMMENT, /^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\r\n]*)/,
               null, '#']);
        }
        // #include <stdio.h>
        fallthroughStylePatterns.push(
            [PR_STRING,
             /^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,
             null]);
      } else {
        shortcutStylePatterns.push([PR_COMMENT, /^#[^\r\n]*/, null, '#']);
      }
    }
    if (options['cStyleComments']) {
      fallthroughStylePatterns.push([PR_COMMENT, /^\/\/[^\r\n]*/, null]);
      fallthroughStylePatterns.push(
          [PR_COMMENT, /^\/\*[\s\S]*?(?:\*\/|$)/, null]);
    }
    if (options['regexLiterals']) {
      /**
       * @const
       */
      var REGEX_LITERAL = (
          // A regular expression literal starts with a slash that is
          // not followed by * or / so that it is not confused with
          // comments.
          '/(?=[^/*])'
          // and then contains any number of raw characters,
          + '(?:[^/\\x5B\\x5C]'
          // escape sequences (\x5C),
          +    '|\\x5C[\\s\\S]'
          // or non-nesting character sets (\x5B\x5D);
          +    '|\\x5B(?:[^\\x5C\\x5D]|\\x5C[\\s\\S])*(?:\\x5D|$))+'
          // finally closed by a /.
          + '/');
      fallthroughStylePatterns.push(
          ['lang-regex',
           new RegExp('^' + REGEXP_PRECEDER_PATTERN + '(' + REGEX_LITERAL + ')')
           ]);
    }

    var types = options['types'];
    if (types) {
      fallthroughStylePatterns.push([PR_TYPE, types]);
    }

    var keywords = ("" + options['keywords']).replace(/^ | $/g, '');
    if (keywords.length) {
      fallthroughStylePatterns.push(
          [PR_KEYWORD,
           new RegExp('^(?:' + keywords.replace(/[\s,]+/g, '|') + ')\\b'),
           null]);
    }

    shortcutStylePatterns.push([PR_PLAIN,       /^\s+/, null, ' \r\n\t\xA0']);

    var punctuation =
      // The Bash man page says

      // A word is a sequence of characters considered as a single
      // unit by GRUB. Words are separated by metacharacters,
      // which are the following plus space, tab, and newline: { }
      // | & $ ; < >
      // ...
      
      // A word beginning with # causes that word and all remaining
      // characters on that line to be ignored.

      // which means that only a '#' after /(?:^|[{}|&$;<>\s])/ starts a
      // comment but empirically
      // $ echo {#}
      // {#}
      // $ echo \$#
      // $#
      // $ echo }#
      // }#

      // so /(?:^|[|&;<>\s])/ is more appropriate.

      // http://gcc.gnu.org/onlinedocs/gcc-2.95.3/cpp_1.html#SEC3
      // suggests that this definition is compatible with a
      // default mode that tries to use a single token definition
      // to recognize both bash/python style comments and C
      // preprocessor directives.

      // This definition of punctuation does not include # in the list of
      // follow-on exclusions, so # will not be broken before if preceeded
      // by a punctuation character.  We could try to exclude # after
      // [|&;<>] but that doesn't seem to cause many major problems.
      // If that does turn out to be a problem, we should change the below
      // when hc is truthy to include # in the run of punctuation characters
      // only when not followint [|&;<>].
      /^.[^\s\w\.$@\'\"\`\/\\]*/;

    fallthroughStylePatterns.push(
        // TODO(mikesamuel): recognize non-latin letters and numerals in idents
        [PR_LITERAL,     /^@[a-z_$][a-z_$@0-9]*/i, null],
        [PR_TYPE,        /^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/, null],
        [PR_PLAIN,       /^[a-z_$][a-z_$@0-9]*/i, null],
        [PR_LITERAL,
         new RegExp(
             '^(?:'
             // A hex number
             + '0x[a-f0-9]+'
             // or an octal or decimal number,
             + '|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)'
             // possibly in scientific notation
             + '(?:e[+\\-]?\\d+)?'
             + ')'
             // with an optional modifier like UL for unsigned long
             + '[a-z]*', 'i'),
         null, '0123456789'],
        // Don't treat escaped quotes in bash as starting strings.  See issue 144.
        [PR_PLAIN,       /^\\[\s\S]?/, null],
        [PR_PUNCTUATION, punctuation, null]);

    return createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns);
  }

  var decorateSource = sourceDecorator({
        'keywords': ALL_KEYWORDS,
        'hashComments': true,
        'cStyleComments': true,
        'multiLineStrings': true,
        'regexLiterals': true
      });

  /**
   * Given a DOM subtree, wraps it in a list, and puts each line into its own
   * list item.
   *
   * @param {Node} node modified in place.  Its content is pulled into an
   *     HTMLOListElement, and each line is moved into a separate list item.
   *     This requires cloning elements, so the input might not have unique
   *     IDs after numbering.
   * @param {boolean} isPreformatted true iff white-space in text nodes should
   *     be treated as significant.
   */
  function numberLines(node, opt_startLineNum, isPreformatted) {
    var nocode = /(?:^|\s)nocode(?:\s|$)/;
    var lineBreak = /\r\n?|\n/;
  
    var document = node.ownerDocument;
  
    var li = document.createElement('li');
    while (node.firstChild) {
      li.appendChild(node.firstChild);
    }
    // An array of lines.  We split below, so this is initialized to one
    // un-split line.
    var listItems = [li];
  
    function walk(node) {
      switch (node.nodeType) {
        case 1:  // Element
          if (nocode.test(node.className)) { break; }
          if ('br' === node.nodeName) {
            breakAfter(node);
            // Discard the <BR> since it is now flush against a </LI>.
            if (node.parentNode) {
              node.parentNode.removeChild(node);
            }
          } else {
            for (var child = node.firstChild; child; child = child.nextSibling) {
              walk(child);
            }
          }
          break;
        case 3: case 4:  // Text
          if (isPreformatted) {
            var text = node.nodeValue;
            var match = text.match(lineBreak);
            if (match) {
              var firstLine = text.substring(0, match.index);
              node.nodeValue = firstLine;
              var tail = text.substring(match.index + match[0].length);
              if (tail) {
                var parent = node.parentNode;
                parent.insertBefore(
                    document.createTextNode(tail), node.nextSibling);
              }
              breakAfter(node);
              if (!firstLine) {
                // Don't leave blank text nodes in the DOM.
                node.parentNode.removeChild(node);
              }
            }
          }
          break;
      }
    }
  
    // Split a line after the given node.
    function breakAfter(lineEndNode) {
      // If there's nothing to the right, then we can skip ending the line
      // here, and move root-wards since splitting just before an end-tag
      // would require us to create a bunch of empty copies.
      while (!lineEndNode.nextSibling) {
        lineEndNode = lineEndNode.parentNode;
        if (!lineEndNode) { return; }
      }
  
      function breakLeftOf(limit, copy) {
        // Clone shallowly if this node needs to be on both sides of the break.
        var rightSide = copy ? limit.cloneNode(false) : limit;
        var parent = limit.parentNode;
        if (parent) {
          // We clone the parent chain.
          // This helps us resurrect important styling elements that cross lines.
          // E.g. in <i>Foo<br>Bar</i>
          // should be rewritten to <li><i>Foo</i></li><li><i>Bar</i></li>.
          var parentClone = breakLeftOf(parent, 1);
          // Move the clone and everything to the right of the original
          // onto the cloned parent.
          var next = limit.nextSibling;
          parentClone.appendChild(rightSide);
          for (var sibling = next; sibling; sibling = next) {
            next = sibling.nextSibling;
            parentClone.appendChild(sibling);
          }
        }
        return rightSide;
      }
  
      var copiedListItem = breakLeftOf(lineEndNode.nextSibling, 0);
  
      // Walk the parent chain until we reach an unattached LI.
      for (var parent;
           // Check nodeType since IE invents document fragments.
           (parent = copiedListItem.parentNode) && parent.nodeType === 1;) {
        copiedListItem = parent;
      }
      // Put it on the list of lines for later processing.
      listItems.push(copiedListItem);
    }
  
    // Split lines while there are lines left to split.
    for (var i = 0;  // Number of lines that have been split so far.
         i < listItems.length;  // length updated by breakAfter calls.
         ++i) {
      walk(listItems[i]);
    }
  
    // Make sure numeric indices show correctly.
    if (opt_startLineNum === (opt_startLineNum|0)) {
      listItems[0].setAttribute('value', opt_startLineNum);
    }
  
    var ol = document.createElement('ol');
    ol.className = 'linenums';
    var offset = Math.max(0, ((opt_startLineNum - 1 /* zero index */)) | 0) || 0;
    for (var i = 0, n = listItems.length; i < n; ++i) {
      li = listItems[i];
      // Stick a class on the LIs so that stylesheets can
      // color odd/even rows, or any other row pattern that
      // is co-prime with 10.
      li.className = 'L' + ((i + offset) % 10);
      if (!li.firstChild) {
        li.appendChild(document.createTextNode('\xA0'));
      }
      ol.appendChild(li);
    }
  
    node.appendChild(ol);
  }

  /**
   * Breaks {@code job.sourceCode} around style boundaries in
   * {@code job.decorations} and modifies {@code job.sourceNode} in place.
   * @param {Object} job like <pre>{
   *    sourceCode: {string} source as plain text,
   *    spans: {Array.<number|Node>} alternating span start indices into source
   *       and the text node or element (e.g. {@code <BR>}) corresponding to that
   *       span.
   *    decorations: {Array.<number|string} an array of style classes preceded
   *       by the position at which they start in job.sourceCode in order
   * }</pre>
   * @private
   */
  function recombineTagsAndDecorations(job) {
    var isIE8OrEarlier = /\bMSIE\s(\d+)/.exec(navigator.userAgent);
    isIE8OrEarlier = isIE8OrEarlier && +isIE8OrEarlier[1] <= 8;
    var newlineRe = /\n/g;
  
    var source = job.sourceCode;
    var sourceLength = source.length;
    // Index into source after the last code-unit recombined.
    var sourceIndex = 0;
  
    var spans = job.spans;
    var nSpans = spans.length;
    // Index into spans after the last span which ends at or before sourceIndex.
    var spanIndex = 0;
  
    var decorations = job.decorations;
    var nDecorations = decorations.length;
    // Index into decorations after the last decoration which ends at or before
    // sourceIndex.
    var decorationIndex = 0;
  
    // Remove all zero-length decorations.
    decorations[nDecorations] = sourceLength;
    var decPos, i;
    for (i = decPos = 0; i < nDecorations;) {
      if (decorations[i] !== decorations[i + 2]) {
        decorations[decPos++] = decorations[i++];
        decorations[decPos++] = decorations[i++];
      } else {
        i += 2;
      }
    }
    nDecorations = decPos;
  
    // Simplify decorations.
    for (i = decPos = 0; i < nDecorations;) {
      var startPos = decorations[i];
      // Conflate all adjacent decorations that use the same style.
      var startDec = decorations[i + 1];
      var end = i + 2;
      while (end + 2 <= nDecorations && decorations[end + 1] === startDec) {
        end += 2;
      }
      decorations[decPos++] = startPos;
      decorations[decPos++] = startDec;
      i = end;
    }
  
    nDecorations = decorations.length = decPos;
  
    var sourceNode = job.sourceNode;
    var oldDisplay;
    if (sourceNode) {
      oldDisplay = sourceNode.style.display;
      sourceNode.style.display = 'none';
    }
    try {
      var decoration = null;
      while (spanIndex < nSpans) {
        var spanStart = spans[spanIndex];
        var spanEnd = spans[spanIndex + 2] || sourceLength;
  
        var decEnd = decorations[decorationIndex + 2] || sourceLength;
  
        var end = Math.min(spanEnd, decEnd);
  
        var textNode = spans[spanIndex + 1];
        var styledText;
        if (textNode.nodeType !== 1  // Don't muck with <BR>s or <LI>s
            // Don't introduce spans around empty text nodes.
            && (styledText = source.substring(sourceIndex, end))) {
          // This may seem bizarre, and it is.  Emitting LF on IE causes the
          // code to display with spaces instead of line breaks.
          // Emitting Windows standard issue linebreaks (CRLF) causes a blank
          // space to appear at the beginning of every line but the first.
          // Emitting an old Mac OS 9 line separator makes everything spiffy.
          if (isIE8OrEarlier) {
            styledText = styledText.replace(newlineRe, '\r');
          }
          textNode.nodeValue = styledText;
          var document = textNode.ownerDocument;
          var span = document.createElement('span');
          span.className = decorations[decorationIndex + 1];
          var parentNode = textNode.parentNode;
          parentNode.replaceChild(span, textNode);
          span.appendChild(textNode);
          if (sourceIndex < spanEnd) {  // Split off a text node.
            spans[spanIndex + 1] = textNode
                // TODO: Possibly optimize by using '' if there's no flicker.
                = document.createTextNode(source.substring(end, spanEnd));
            parentNode.insertBefore(textNode, span.nextSibling);
          }
        }
  
        sourceIndex = end;
  
        if (sourceIndex >= spanEnd) {
          spanIndex += 2;
        }
        if (sourceIndex >= decEnd) {
          decorationIndex += 2;
        }
      }
    } finally {
      if (sourceNode) {
        sourceNode.style.display = oldDisplay;
      }
    }
  }


  /** Maps language-specific file extensions to handlers. */
  var langHandlerRegistry = {};
  /** Register a language handler for the given file extensions.
    * @param {function (Object)} handler a function from source code to a list
    *      of decorations.  Takes a single argument job which describes the
    *      state of the computation.   The single parameter has the form
    *      {@code {
    *        sourceCode: {string} as plain text.
    *        decorations: {Array.<number|string>} an array of style classes
    *                     preceded by the position at which they start in
    *                     job.sourceCode in order.
    *                     The language handler should assigned this field.
    *        basePos: {int} the position of source in the larger source chunk.
    *                 All positions in the output decorations array are relative
    *                 to the larger source chunk.
    *      } }
    * @param {Array.<string>} fileExtensions
    */
  function registerLangHandler(handler, fileExtensions) {
    for (var i = fileExtensions.length; --i >= 0;) {
      var ext = fileExtensions[i];
      if (!langHandlerRegistry.hasOwnProperty(ext)) {
        langHandlerRegistry[ext] = handler;
      } else if (win['console']) {
        console['warn']('cannot override language handler %s', ext);
      }
    }
  }
  function langHandlerForExtension(extension, source) {
    if (!(extension && langHandlerRegistry.hasOwnProperty(extension))) {
      // Treat it as markup if the first non whitespace character is a < and
      // the last non-whitespace character is a >.
      extension = /^\s*</.test(source)
          ? 'default-markup'
          : 'default-code';
    }
    return langHandlerRegistry[extension];
  }
  registerLangHandler(decorateSource, ['default-code']);
  registerLangHandler(
      createSimpleLexer(
          [],
          [
           [PR_PLAIN,       /^[^<?]+/],
           [PR_DECLARATION, /^<!\w[^>]*(?:>|$)/],
           [PR_COMMENT,     /^<\!--[\s\S]*?(?:-\->|$)/],
           // Unescaped content in an unknown language
           ['lang-',        /^<\?([\s\S]+?)(?:\?>|$)/],
           ['lang-',        /^<%([\s\S]+?)(?:%>|$)/],
           [PR_PUNCTUATION, /^(?:<[%?]|[%?]>)/],
           ['lang-',        /^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],
           // Unescaped content in javascript.  (Or possibly vbscript).
           ['lang-js',      /^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],
           // Contains unescaped stylesheet content
           ['lang-css',     /^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],
           ['lang-in.tag',  /^(<\/?[a-z][^<>]*>)/i]
          ]),
      ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']);
  registerLangHandler(
      createSimpleLexer(
          [
           [PR_PLAIN,        /^[\s]+/, null, ' \t\r\n'],
           [PR_ATTRIB_VALUE, /^(?:\"[^\"]*\"?|\'[^\']*\'?)/, null, '\"\'']
           ],
          [
           [PR_TAG,          /^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],
           [PR_ATTRIB_NAME,  /^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],
           ['lang-uq.val',   /^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],
           [PR_PUNCTUATION,  /^[=<>\/]+/],
           ['lang-js',       /^on\w+\s*=\s*\"([^\"]+)\"/i],
           ['lang-js',       /^on\w+\s*=\s*\'([^\']+)\'/i],
           ['lang-js',       /^on\w+\s*=\s*([^\"\'>\s]+)/i],
           ['lang-css',      /^style\s*=\s*\"([^\"]+)\"/i],
           ['lang-css',      /^style\s*=\s*\'([^\']+)\'/i],
           ['lang-css',      /^style\s*=\s*([^\"\'>\s]+)/i]
           ]),
      ['in.tag']);
  registerLangHandler(
      createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\s\S]+/]]), ['uq.val']);
  registerLangHandler(sourceDecorator({
          'keywords': CPP_KEYWORDS,
          'hashComments': true,
          'cStyleComments': true,
          'types': C_TYPES
        }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']);
  registerLangHandler(sourceDecorator({
          'keywords': 'null,true,false'
        }), ['json']);
  registerLangHandler(sourceDecorator({
          'keywords': CSHARP_KEYWORDS,
          'hashComments': true,
          'cStyleComments': true,
          'verbatimStrings': true,
          'types': C_TYPES
        }), ['cs']);
  registerLangHandler(sourceDecorator({
          'keywords': JAVA_KEYWORDS,
          'cStyleComments': true
        }), ['java']);
  registerLangHandler(sourceDecorator({
          'keywords': SH_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true
        }), ['bsh', 'csh', 'sh']);
  registerLangHandler(sourceDecorator({
          'keywords': PYTHON_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true,
          'tripleQuotedStrings': true
        }), ['cv', 'py']);
  registerLangHandler(sourceDecorator({
          'keywords': PERL_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true,
          'regexLiterals': true
        }), ['perl', 'pl', 'pm']);
  registerLangHandler(sourceDecorator({
          'keywords': RUBY_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true,
          'regexLiterals': true
        }), ['rb']);
  registerLangHandler(sourceDecorator({
          'keywords': JSCRIPT_KEYWORDS,
          'cStyleComments': true,
          'regexLiterals': true
        }), ['js']);
  registerLangHandler(sourceDecorator({
          'keywords': COFFEE_KEYWORDS,
          'hashComments': 3,  // ### style block comments
          'cStyleComments': true,
          'multilineStrings': true,
          'tripleQuotedStrings': true,
          'regexLiterals': true
        }), ['coffee']);
  registerLangHandler(
      createSimpleLexer([], [[PR_STRING, /^[\s\S]+/]]), ['regex']);

  function applyDecorator(job) {
    var opt_langExtension = job.langExtension;

    try {
      // Extract tags, and convert the source code to plain text.
      var sourceAndSpans = extractSourceSpans(job.sourceNode, job.pre);
      /** Plain text. @type {string} */
      var source = sourceAndSpans.sourceCode;
      job.sourceCode = source;
      job.spans = sourceAndSpans.spans;
      job.basePos = 0;

      // Apply the appropriate language handler
      langHandlerForExtension(opt_langExtension, source)(job);

      // Integrate the decorations and tags back into the source code,
      // modifying the sourceNode in place.
      recombineTagsAndDecorations(job);
    } catch (e) {
      if (win['console']) {
        console['log'](e && e['stack'] ? e['stack'] : e);
      }
    }
  }

  /**
   * @param sourceCodeHtml {string} The HTML to pretty print.
   * @param opt_langExtension {string} The language name to use.
   *     Typically, a filename extension like 'cpp' or 'java'.
   * @param opt_numberLines {number|boolean} True to number lines,
   *     or the 1-indexed number of the first line in sourceCodeHtml.
   */
  function prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) {
    var container = document.createElement('pre');
    // This could cause images to load and onload listeners to fire.
    // E.g. <img onerror="alert(1337)" src="nosuchimage.png">.
    // We assume that the inner HTML is from a trusted source.
    container.innerHTML = sourceCodeHtml;
    if (opt_numberLines) {
      numberLines(container, opt_numberLines, true);
    }

    var job = {
      langExtension: opt_langExtension,
      numberLines: opt_numberLines,
      sourceNode: container,
      pre: 1
    };
    applyDecorator(job);
    return container.innerHTML;
  }

  function prettyPrint(opt_whenDone) {
    function byTagName(tn) { return document.getElementsByTagName(tn); }
    // fetch a list of nodes to rewrite
    var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')];
    var elements = [];
    for (var i = 0; i < codeSegments.length; ++i) {
      for (var j = 0, n = codeSegments[i].length; j < n; ++j) {
        elements.push(codeSegments[i][j]);
      }
    }
    codeSegments = null;

    var clock = Date;
    if (!clock['now']) {
      clock = { 'now': function () { return +(new Date); } };
    }

    // The loop is broken into a series of continuations to make sure that we
    // don't make the browser unresponsive when rewriting a large page.
    var k = 0;
    var prettyPrintingJob;

    var langExtensionRe = /\blang(?:uage)?-([\w.]+)(?!\S)/;
    var prettyPrintRe = /\bprettyprint\b/;
    var prettyPrintedRe = /\bprettyprinted\b/;
    var preformattedTagNameRe = /pre|xmp/i;
    var codeRe = /^code$/i;
    var preCodeXmpRe = /^(?:pre|code|xmp)$/i;

    function doWork() {
      var endTime = (win['PR_SHOULD_USE_CONTINUATION'] ?
                     clock['now']() + 250 /* ms */ :
                     Infinity);
      for (; k < elements.length && clock['now']() < endTime; k++) {
        var cs = elements[k];
        var className = cs.className;
        if (prettyPrintRe.test(className)
            // Don't redo this if we've already done it.
            // This allows recalling pretty print to just prettyprint elements
            // that have been added to the page since last call.
            && !prettyPrintedRe.test(className)) {

          // make sure this is not nested in an already prettified element
          var nested = false;
          for (var p = cs.parentNode; p; p = p.parentNode) {
            var tn = p.tagName;
            if (preCodeXmpRe.test(tn)
                && p.className && prettyPrintRe.test(p.className)) {
              nested = true;
              break;
            }
          }
          if (!nested) {
            // Mark done.  If we fail to prettyprint for whatever reason,
            // we shouldn't try again.
            cs.className += ' prettyprinted';

            // If the classes includes a language extensions, use it.
            // Language extensions can be specified like
            //     <pre class="prettyprint lang-cpp">
            // the language extension "cpp" is used to find a language handler
            // as passed to PR.registerLangHandler.
            // HTML5 recommends that a language be specified using "language-"
            // as the prefix instead.  Google Code Prettify supports both.
            // http://dev.w3.org/html5/spec-author-view/the-code-element.html
            var langExtension = className.match(langExtensionRe);
            // Support <pre class="prettyprint"><code class="language-c">
            var wrapper;
            if (!langExtension && (wrapper = childContentWrapper(cs))
                && codeRe.test(wrapper.tagName)) {
              langExtension = wrapper.className.match(langExtensionRe);
            }

            if (langExtension) { langExtension = langExtension[1]; }

            var preformatted;
            if (preformattedTagNameRe.test(cs.tagName)) {
              preformatted = 1;
            } else {
              var currentStyle = cs['currentStyle'];
              var whitespace = (
                  currentStyle
                  ? currentStyle['whiteSpace']
                  : (document.defaultView
                     && document.defaultView.getComputedStyle)
                  ? document.defaultView.getComputedStyle(cs, null)
                  .getPropertyValue('white-space')
                  : 0);
              preformatted = whitespace
                  && 'pre' === whitespace.substring(0, 3);
            }

            // Look for a class like linenums or linenums:<n> where <n> is the
            // 1-indexed number of the first line.
            var lineNums = cs.className.match(/\blinenums\b(?::(\d+))?/);
            lineNums = lineNums
                ? lineNums[1] && lineNums[1].length ? +lineNums[1] : true
                : false;
            if (lineNums) { numberLines(cs, lineNums, preformatted); }

            // do the pretty printing
            prettyPrintingJob = {
              langExtension: langExtension,
              sourceNode: cs,
              numberLines: lineNums,
              pre: preformatted
            };
            applyDecorator(prettyPrintingJob);
          }
        }
      }
      if (k < elements.length) {
        // finish up in a continuation
        setTimeout(doWork, 250);
      } else if (opt_whenDone) {
        opt_whenDone();
      }
    }

    doWork();
  }

  /**
   * Contains functions for creating and registering new language handlers.
   * @type {Object}
   */
  var PR = win['PR'] = {
        'createSimpleLexer': createSimpleLexer,
        'registerLangHandler': registerLangHandler,
        'sourceDecorator': sourceDecorator,
        'PR_ATTRIB_NAME': PR_ATTRIB_NAME,
        'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE,
        'PR_COMMENT': PR_COMMENT,
        'PR_DECLARATION': PR_DECLARATION,
        'PR_KEYWORD': PR_KEYWORD,
        'PR_LITERAL': PR_LITERAL,
        'PR_NOCODE': PR_NOCODE,
        'PR_PLAIN': PR_PLAIN,
        'PR_PUNCTUATION': PR_PUNCTUATION,
        'PR_SOURCE': PR_SOURCE,
        'PR_STRING': PR_STRING,
        'PR_TAG': PR_TAG,
        'PR_TYPE': PR_TYPE,
        'prettyPrintOne': win['prettyPrintOne'] = prettyPrintOne,
        'prettyPrint': win['prettyPrint'] = prettyPrint
      };

  // Make PR available via the Asynchronous Module Definition (AMD) API.
  // Per https://github.com/amdjs/amdjs-api/wiki/AMD:
  // The Asynchronous Module Definition (AMD) API specifies a
  // mechanism for defining modules such that the module and its
  // dependencies can be asynchronously loaded.
  // ...
  // To allow a clear indicator that a global define function (as
  // needed for script src browser loading) conforms to the AMD API,
  // any global define function SHOULD have a property called "amd"
  // whose value is an object. This helps avoid conflict with any
  // other existing JavaScript code that could have defined a define()
  // function that does not conform to the AMD API.
  if (typeof define === "function" && define['amd']) {
    define('google-code-prettify',[],function () {
      return PR; 
    });
  }
})();

var hljs=new function(){function l(o){return o.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;")}function b(p){for(var o=p.firstChild;o;o=o.nextSibling){if(o.nodeName=="CODE"){return o}if(!(o.nodeType==3&&o.nodeValue.match(/\s+/))){break}}}function h(p,o){return Array.prototype.map.call(p.childNodes,function(q){if(q.nodeType==3){return o?q.nodeValue.replace(/\n/g,""):q.nodeValue}if(q.nodeName=="BR"){return"\n"}return h(q,o)}).join("")}function a(q){var p=(q.className+" "+q.parentNode.className).split(/\s+/);p=p.map(function(r){return r.replace(/^language-/,"")});for(var o=0;o<p.length;o++){if(e[p[o]]||p[o]=="no-highlight"){return p[o]}}}function c(q){var o=[];(function p(r,s){for(var t=r.firstChild;t;t=t.nextSibling){if(t.nodeType==3){s+=t.nodeValue.length}else{if(t.nodeName=="BR"){s+=1}else{if(t.nodeType==1){o.push({event:"start",offset:s,node:t});s=p(t,s);o.push({event:"stop",offset:s,node:t})}}}}return s})(q,0);return o}function j(x,v,w){var p=0;var y="";var r=[];function t(){if(x.length&&v.length){if(x[0].offset!=v[0].offset){return(x[0].offset<v[0].offset)?x:v}else{return v[0].event=="start"?x:v}}else{return x.length?x:v}}function s(A){function z(B){return" "+B.nodeName+'="'+l(B.value)+'"'}return"<"+A.nodeName+Array.prototype.map.call(A.attributes,z).join("")+">"}while(x.length||v.length){var u=t().splice(0,1)[0];y+=l(w.substr(p,u.offset-p));p=u.offset;if(u.event=="start"){y+=s(u.node);r.push(u.node)}else{if(u.event=="stop"){var o,q=r.length;do{q--;o=r[q];y+=("</"+o.nodeName.toLowerCase()+">")}while(o!=u.node);r.splice(q,1);while(q<r.length){y+=s(r[q]);q++}}}}return y+l(w.substr(p))}function f(q){function o(s,r){return RegExp(s,"m"+(q.cI?"i":"")+(r?"g":""))}function p(y,w){if(y.compiled){return}y.compiled=true;var s=[];if(y.k){var r={};function z(A,t){t.split(" ").forEach(function(B){var C=B.split("|");r[C[0]]=[A,C[1]?Number(C[1]):1];s.push(C[0])})}y.lR=o(y.l||hljs.IR,true);if(typeof y.k=="string"){z("keyword",y.k)}else{for(var x in y.k){if(!y.k.hasOwnProperty(x)){continue}z(x,y.k[x])}}y.k=r}if(w){if(y.bWK){y.b="\\b("+s.join("|")+")\\s"}y.bR=o(y.b?y.b:"\\B|\\b");if(!y.e&&!y.eW){y.e="\\B|\\b"}if(y.e){y.eR=o(y.e)}y.tE=y.e||"";if(y.eW&&w.tE){y.tE+=(y.e?"|":"")+w.tE}}if(y.i){y.iR=o(y.i)}if(y.r===undefined){y.r=1}if(!y.c){y.c=[]}for(var v=0;v<y.c.length;v++){if(y.c[v]=="self"){y.c[v]=y}p(y.c[v],y)}if(y.starts){p(y.starts,w)}var u=[];for(var v=0;v<y.c.length;v++){u.push(y.c[v].b)}if(y.tE){u.push(y.tE)}if(y.i){u.push(y.i)}y.t=u.length?o(u.join("|"),true):{exec:function(t){return null}}}p(q)}function d(D,E){function o(r,M){for(var L=0;L<M.c.length;L++){var K=M.c[L].bR.exec(r);if(K&&K.index==0){return M.c[L]}}}function s(K,r){if(K.e&&K.eR.test(r)){return K}if(K.eW){return s(K.parent,r)}}function t(r,K){return K.i&&K.iR.test(r)}function y(L,r){var K=F.cI?r[0].toLowerCase():r[0];return L.k.hasOwnProperty(K)&&L.k[K]}function G(){var K=l(w);if(!A.k){return K}var r="";var N=0;A.lR.lastIndex=0;var L=A.lR.exec(K);while(L){r+=K.substr(N,L.index-N);var M=y(A,L);if(M){v+=M[1];r+='<span class="'+M[0]+'">'+L[0]+"</span>"}else{r+=L[0]}N=A.lR.lastIndex;L=A.lR.exec(K)}return r+K.substr(N)}function z(){if(A.sL&&!e[A.sL]){return l(w)}var r=A.sL?d(A.sL,w):g(w);if(A.r>0){v+=r.keyword_count;B+=r.r}return'<span class="'+r.language+'">'+r.value+"</span>"}function J(){return A.sL!==undefined?z():G()}function I(L,r){var K=L.cN?'<span class="'+L.cN+'">':"";if(L.rB){x+=K;w=""}else{if(L.eB){x+=l(r)+K;w=""}else{x+=K;w=r}}A=Object.create(L,{parent:{value:A}});B+=L.r}function C(K,r){w+=K;if(r===undefined){x+=J();return 0}var L=o(r,A);if(L){x+=J();I(L,r);return L.rB?0:r.length}var M=s(A,r);if(M){if(!(M.rE||M.eE)){w+=r}x+=J();do{if(A.cN){x+="</span>"}A=A.parent}while(A!=M.parent);if(M.eE){x+=l(r)}w="";if(M.starts){I(M.starts,"")}return M.rE?0:r.length}if(t(r,A)){throw"Illegal"}w+=r;return r.length||1}var F=e[D];f(F);var A=F;var w="";var B=0;var v=0;var x="";try{var u,q,p=0;while(true){A.t.lastIndex=p;u=A.t.exec(E);if(!u){break}q=C(E.substr(p,u.index-p),u[0]);p=u.index+q}C(E.substr(p));return{r:B,keyword_count:v,value:x,language:D}}catch(H){if(H=="Illegal"){return{r:0,keyword_count:0,value:l(E)}}else{throw H}}}function g(s){var o={keyword_count:0,r:0,value:l(s)};var q=o;for(var p in e){if(!e.hasOwnProperty(p)){continue}var r=d(p,s);r.language=p;if(r.keyword_count+r.r>q.keyword_count+q.r){q=r}if(r.keyword_count+r.r>o.keyword_count+o.r){q=o;o=r}}if(q.language){o.second_best=q}return o}function i(q,p,o){if(p){q=q.replace(/^((<[^>]+>|\t)+)/gm,function(r,v,u,t){return v.replace(/\t/g,p)})}if(o){q=q.replace(/\n/g,"<br>")}return q}function m(r,u,p){var v=h(r,p);var t=a(r);if(t=="no-highlight"){return}var w=t?d(t,v):g(v);t=w.language;var o=c(r);if(o.length){var q=document.createElement("pre");q.innerHTML=w.value;w.value=j(o,c(q),v)}w.value=i(w.value,u,p);var s=r.className;if(!s.match("(\\s|^)(language-)?"+t+"(\\s|$)")){s=s?(s+" "+t):t}r.innerHTML=w.value;r.className=s;r.result={language:t,kw:w.keyword_count,re:w.r};if(w.second_best){r.second_best={language:w.second_best.language,kw:w.second_best.keyword_count,re:w.second_best.r}}}function n(){if(n.called){return}n.called=true;Array.prototype.map.call(document.getElementsByTagName("pre"),b).filter(Boolean).forEach(function(o){m(o,hljs.tabReplace)})}function k(){window.addEventListener("DOMContentLoaded",n,false);window.addEventListener("load",n,false)}var e={};this.LANGUAGES=e;this.highlight=d;this.highlightAuto=g;this.fixMarkup=i;this.highlightBlock=m;this.initHighlighting=n;this.initHighlightingOnLoad=k;this.IR="[a-zA-Z][a-zA-Z0-9_]*";this.UIR="[a-zA-Z_][a-zA-Z0-9_]*";this.NR="\\b\\d+(\\.\\d+)?";this.CNR="(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)";this.BNR="\\b(0b[01]+)";this.RSR="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|\\.|-|-=|/|/=|:|;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";this.BE={b:"\\\\[\\s\\S]",r:0};this.ASM={cN:"string",b:"'",e:"'",i:"\\n",c:[this.BE],r:0};this.QSM={cN:"string",b:'"',e:'"',i:"\\n",c:[this.BE],r:0};this.CLCM={cN:"comment",b:"//",e:"$"};this.CBLCLM={cN:"comment",b:"/\\*",e:"\\*/"};this.HCM={cN:"comment",b:"#",e:"$"};this.NM={cN:"number",b:this.NR,r:0};this.CNM={cN:"number",b:this.CNR,r:0};this.BNM={cN:"number",b:this.BNR,r:0};this.inherit=function(q,r){var o={};for(var p in q){o[p]=q[p]}if(r){for(var p in r){o[p]=r[p]}}return o}}();hljs.LANGUAGES.glsl=function(a){return{k:{keyword:"atomic_uint attribute bool break bvec2 bvec3 bvec4 case centroid coherent const continue default discard dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 dmat3x4 dmat4 dmat4x2 dmat4x3 dmat4x4 do double dvec2 dvec3 dvec4 else flat float for highp if iimage1D iimage1DArray iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer iimageCube iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray image2DRect image3D imageBuffer imageCube imageCubeArray in inout int invariant isampler1D isampler1DArray isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D isamplerBuffer isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 layout lowp mat2 mat2x2 mat2x3 mat2x4 mat3 mat3x2 mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 mediump noperspective out patch precision readonly restrict return sample sampler1D sampler1DArray sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray sampler2DArrayShadow sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow sampler3D samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow smooth struct subroutine switch uimage1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray uimage2DRect uimage3D uimageBuffer uimageCube uimageCubeArray uint uniform usampler1D usampler1DArray usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D usamplerBuffer usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 varying vec2 vec3 vec4 void volatile while writeonly",built_in:"gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial gl_FrontSecondaryColor gl_InstanceID gl_InvocationID gl_Layer gl_LightModel gl_LightSource gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize gl_MaxClipDistances gl_MaxClipPlanes gl_MaxCombinedAtomicCounterBuffers gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms gl_MaxCombinedImageUnitsAndFragmentOutputs gl_MaxCombinedTextureImageUnits gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers gl_MaxFragmentAtomicCounters gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs gl_MaxVertexImageUniforms gl_MaxVertexOutputComponents gl_MaxVertexTextureImageUnits gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffsetgl_ModelViewMatrix gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose gl_ModelViewMatrixTranspose gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse gl_ModelViewProjectionMatrixInverseTranspose gl_ModelViewProjectionMatrixTranspose gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 gl_Normal gl_NormalMatrix gl_NormalScale gl_ObjectPlaneQ gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn gl_PerVertex gl_Point gl_PointCoord gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn gl_ProjectionMatrix gl_ProjectionMatrixInverse gl_ProjectionMatrixInverseTranspose gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask gl_SampleMaskIn gl_SamplePosition gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter gl_TexCoord gl_TextureEnvColor gl_TextureMatrixInverseTranspose gl_TextureMatrixTranspose gl_Vertex gl_VertexID gl_ViewportIndex gl_in gl_out EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive abs acos acosh all any asin asinh atan atanh atomicCounter atomicCounterDecrement atomicCounterIncrement barrier bitCount bitfieldExtract bitfieldInsert bitfieldReverse ceil clamp cos cosh cross dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward findLSB findMSB floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan greaterThanEqual imageAtomicAdd imageAtomicAnd imageAtomicCompSwap imageAtomicExchange imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad imageStore imulExtended intBitsToFloat interpolateAtCentroid interpolateAtOffset interpolateAtSample inverse inversesqrt isinf isnan ldexp length lessThan lessThanEqual log log2 matrixCompMult max memoryBarrier min mix mod modf noise1 noise2 noise3 noise4 normalize not notEqual outerProduct packDouble2x32 packHalf2x16 packSnorm2x16 packSnorm4x8 packUnorm2x16 packUnorm4x8 pow radians reflect refract round roundEven shadow1D shadow1DLod shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj shadow2DProjLod sign sin sinh smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture texture1D texture1DLod texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj texture2DProjLod texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset textureLod textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset textureProjLod textureProjLodOffset textureProjOffset textureQueryLod textureSize transpose trunc uaddCarry uintBitsToFloat umulExtended unpackDouble2x32 unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 unpackUnorm2x16 unpackUnorm4x8 usubBorrow gl_TextureMatrix gl_TextureMatrixInverse",literal:"true false"},i:'"',c:[a.CLCM,a.CBLCLM,a.CNM,{cN:"preprocessor",b:"#",e:"$"}]}}(hljs);hljs.LANGUAGES.cs=function(a){return{k:"abstract as base bool break byte case catch char checked class const continue decimal default delegate do double else enum event explicit extern false finally fixed float for foreach goto if implicit in int interface internal is lock long namespace new null object operator out override params private protected public readonly ref return sbyte sealed short sizeof stackalloc static string struct switch this throw true try typeof uint ulong unchecked unsafe ushort using virtual volatile void while ascending descending from get group into join let orderby partial select set value var where yield",c:[{cN:"comment",b:"///",e:"$",rB:true,c:[{cN:"xmlDocTag",b:"///|<!--|-->"},{cN:"xmlDocTag",b:"</?",e:">"}]},a.CLCM,a.CBLCLM,{cN:"preprocessor",b:"#",e:"$",k:"if else elif endif define undef warning error line region endregion pragma checksum"},{cN:"string",b:'@"',e:'"',c:[{b:'""'}]},a.ASM,a.QSM,a.CNM]}}(hljs);hljs.LANGUAGES.rsl=function(a){return{k:{keyword:"float color point normal vector matrix while for if do return else break extern continue",built_in:"abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp faceforward filterstep floor format fresnel incident length lightsource log match max min mod noise normalize ntransform opposite option phong pnoise pow printf ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan texture textureinfo trace transform vtransform xcomp ycomp zcomp"},i:"</",c:[a.CLCM,a.CBLCLM,a.QSM,a.ASM,a.CNM,{cN:"preprocessor",b:"#",e:"$"},{cN:"shader",bWK:true,e:"\\(",k:"surface displacement light volume imager"},{cN:"shading",bWK:true,e:"\\(",k:"illuminate illuminance gather"}]}}(hljs);hljs.LANGUAGES["erlang-repl"]=function(a){return{k:{special_functions:"spawn spawn_link self",reserved:"after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if let not of or orelse|10 query receive rem try when xor"},c:[{cN:"prompt",b:"^[0-9]+> ",r:10},{cN:"comment",b:"%",e:"$"},{cN:"number",b:"\\b(\\d+#[a-fA-F0-9]+|\\d+(\\.\\d+)?([eE][-+]?\\d+)?)",r:0},a.ASM,a.QSM,{cN:"constant",b:"\\?(::)?([A-Z]\\w*(::)?)+"},{cN:"arrow",b:"->"},{cN:"ok",b:"ok"},{cN:"exclamation_mark",b:"!"},{cN:"function_or_atom",b:"(\\b[a-z'][a-zA-Z0-9_']*:[a-z'][a-zA-Z0-9_']*)|(\\b[a-z'][a-zA-Z0-9_']*)",r:0},{cN:"variable",b:"[A-Z][a-zA-Z0-9_']*",r:0}]}}(hljs);hljs.LANGUAGES["1c"]=function(b){var f="[a-zA-Zа-яА-Я][a-zA-Z0-9_а-яА-Я]*";var c="возврат дата для если и или иначе иначеесли исключение конецесли конецпопытки конецпроцедуры конецфункции конеццикла константа не перейти перем перечисление по пока попытка прервать продолжить процедура строка тогда фс функция цикл число экспорт";var e="ansitooem oemtoansi ввестивидсубконто ввестидату ввестизначение ввестиперечисление ввестипериод ввестиплансчетов ввестистроку ввестичисло вопрос восстановитьзначение врег выбранныйплансчетов вызватьисключение датагод датамесяц датачисло добавитьмесяц завершитьработусистемы заголовоксистемы записьжурналарегистрации запуститьприложение зафиксироватьтранзакцию значениевстроку значениевстрокувнутр значениевфайл значениеизстроки значениеизстрокивнутр значениеизфайла имякомпьютера имяпользователя каталогвременныхфайлов каталогиб каталогпользователя каталогпрограммы кодсимв командасистемы конгода конецпериодаби конецрассчитанногопериодаби конецстандартногоинтервала конквартала конмесяца коннедели лев лог лог10 макс максимальноеколичествосубконто мин монопольныйрежим названиеинтерфейса названиенабораправ назначитьвид назначитьсчет найти найтипомеченныенаудаление найтиссылки началопериодаби началостандартногоинтервала начатьтранзакцию начгода начквартала начмесяца начнедели номерднягода номерднянедели номернеделигода нрег обработкаожидания окр описаниеошибки основнойжурналрасчетов основнойплансчетов основнойязык открытьформу открытьформумодально отменитьтранзакцию очиститьокносообщений периодстр полноеимяпользователя получитьвремята получитьдатута получитьдокументта получитьзначенияотбора получитьпозициюта получитьпустоезначение получитьта прав праводоступа предупреждение префиксавтонумерации пустаястрока пустоезначение рабочаядаттьпустоезначение рабочаядата разделительстраниц разделительстрок разм разобратьпозициюдокумента рассчитатьрегистрына рассчитатьрегистрыпо сигнал симв символтабуляции создатьобъект сокрл сокрлп сокрп сообщить состояние сохранитьзначение сред статусвозврата стрдлина стрзаменить стрколичествострок стрполучитьстроку  стрчисловхождений сформироватьпозициюдокумента счетпокоду текущаядата текущеевремя типзначения типзначениястр удалитьобъекты установитьтана установитьтапо фиксшаблон формат цел шаблон";var a={cN:"dquote",b:'""'};var d={cN:"string",b:'"',e:'"|$',c:[a],r:0};var g={cN:"string",b:"\\|",e:'"|$',c:[a]};return{cI:true,l:f,k:{keyword:c,built_in:e},c:[b.CLCM,b.NM,d,g,{cN:"function",b:"(процедура|функция)",e:"$",l:f,k:"процедура функция",c:[{cN:"title",b:f},{cN:"tail",eW:true,c:[{cN:"params",b:"\\(",e:"\\)",l:f,k:"знач",c:[d,g]},{cN:"export",b:"экспорт",eW:true,l:f,k:"экспорт",c:[b.CLCM]}]},b.CLCM]},{cN:"preprocessor",b:"#",e:"$"},{cN:"date",b:"'\\d{2}\\.\\d{2}\\.(\\d{2}|\\d{4})'"}]}}(hljs);hljs.LANGUAGES.objectivec=function(a){var b={keyword:"int float while private char catch export sizeof typedef const struct for union unsigned long volatile static protected bool mutable if public do return goto void enum else break extern class asm case short default double throw register explicit signed typename try this switch continue wchar_t inline readonly assign property protocol self synchronized end synthesize id optional required implementation nonatomic interface super unichar finally dynamic IBOutlet IBAction selector strong weak readonly",literal:"false true FALSE TRUE nil YES NO NULL",built_in:"NSString NSDictionary CGRect CGPoint UIButton UILabel UITextView UIWebView MKMapView UISegmentedControl NSObject UITableViewDelegate UITableViewDataSource NSThread UIActivityIndicator UITabbar UIToolBar UIBarButtonItem UIImageView NSAutoreleasePool UITableView BOOL NSInteger CGFloat NSException NSLog NSMutableString NSMutableArray NSMutableDictionary NSURL NSIndexPath CGSize UITableViewCell UIView UIViewController UINavigationBar UINavigationController UITabBarController UIPopoverController UIPopoverControllerDelegate UIImage NSNumber UISearchBar NSFetchedResultsController NSFetchedResultsChangeType UIScrollView UIScrollViewDelegate UIEdgeInsets UIColor UIFont UIApplication NSNotFound NSNotificationCenter NSNotification UILocalNotification NSBundle NSFileManager NSTimeInterval NSDate NSCalendar NSUserDefaults UIWindow NSRange NSArray NSError NSURLRequest NSURLConnection class UIInterfaceOrientation MPMoviePlayerController dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once"};return{k:b,i:"</",c:[a.CLCM,a.CBLCLM,a.CNM,a.QSM,{cN:"string",b:"'",e:"[^\\\\]'",i:"[^\\\\][^']"},{cN:"preprocessor",b:"#import",e:"$",c:[{cN:"title",b:'"',e:'"'},{cN:"title",b:"<",e:">"}]},{cN:"preprocessor",b:"#",e:"$"},{cN:"class",bWK:true,e:"({|$)",k:"interface class protocol implementation",c:[{cN:"id",b:a.UIR}]},{cN:"variable",b:"\\."+a.UIR}]}}(hljs);hljs.LANGUAGES.scala=function(a){var c={cN:"annotation",b:"@[A-Za-z]+"};var b={cN:"string",b:'u?r?"""',e:'"""',r:10};return{k:"type yield lazy override def with val var false true sealed abstract private trait object null if for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws",c:[{cN:"javadoc",b:"/\\*\\*",e:"\\*/",c:[{cN:"javadoctag",b:"@[A-Za-z]+"}],r:10},a.CLCM,a.CBLCLM,a.ASM,a.QSM,b,{cN:"class",b:"((case )?class |object |trait )",e:"({|$)",i:":",k:"case class trait object",c:[{bWK:true,k:"extends with",r:10},{cN:"title",b:a.UIR},{cN:"params",b:"\\(",e:"\\)",c:[a.ASM,a.QSM,b,c]}]},a.CNM,c]}}(hljs);hljs.LANGUAGES.clojure=function(l){var e={built_in:"def cond apply if-not if-let if not not= = &lt; < > &lt;= <= >= == + / * - rem quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last drop-while while intern condp case reduced cycle split-at split-with repeat replicate iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter monitor-exit defmacro defn defn- macroexpand macroexpand-1 for doseq dosync dotimes and or when when-not when-let comp juxt partial sequence memoize constantly complement identity assert peek pop doto proxy defstruct first rest cons defprotocol cast coll deftype defrecord last butlast sigs reify second ffirst fnext nfirst nnext defmulti defmethod meta with-meta ns in-ns create-ns import intern refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! assoc! dissoc! pop! disj! import use class type num float double short byte boolean bigint biginteger bigdec print-method print-dup throw-if throw printf format load compile get-in update-in pr pr-on newline flush read slurp read-line subvec with-open memfn time ns assert re-find re-groups rand-int rand mod locking assert-valid-fdecl alias namespace resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! new next conj set! memfn to-array future future-call into-array aset gen-class reduce merge map filter find empty hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize"};var f="[a-zA-Z_0-9\\!\\.\\?\\-\\+\\*\\/\\<\\=\\>\\&\\#\\$';]+";var a="[\\s:\\(\\{]+\\d+(\\.\\d+)?";var d={cN:"number",b:a,r:0};var j={cN:"string",b:'"',e:'"',c:[l.BE],r:0};var o={cN:"comment",b:";",e:"$",r:0};var n={cN:"collection",b:"[\\[\\{]",e:"[\\]\\}]"};var c={cN:"comment",b:"\\^"+f};var b={cN:"comment",b:"\\^\\{",e:"\\}"};var h={cN:"attribute",b:"[:]"+f};var m={cN:"list",b:"\\(",e:"\\)",r:0};var g={eW:true,eE:true,k:{literal:"true false nil"},r:0};var i={k:e,l:f,cN:"title",b:f,starts:g};m.c=[{cN:"comment",b:"comment"},i];g.c=[m,j,c,b,o,h,n,d];n.c=[m,j,c,o,h,n,d];return{i:"\\S",c:[o,m]}}(hljs);hljs.LANGUAGES.perl=function(e){var a="getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qqfileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent shutdown dump chomp connect getsockname die socketpair close flock exists index shmgetsub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedirioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when";var d={cN:"subst",b:"[$@]\\{",e:"\\}",k:a,r:10};var b={cN:"variable",b:"\\$\\d"};var i={cN:"variable",b:"[\\$\\%\\@\\*](\\^\\w\\b|#\\w+(\\:\\:\\w+)*|[^\\s\\w{]|{\\w+}|\\w+(\\:\\:\\w*)*)"};var f=[e.BE,d,b,i];var h={b:"->",c:[{b:e.IR},{b:"{",e:"}"}]};var g={cN:"comment",b:"^(__END__|__DATA__)",e:"\\n$",r:5};var c=[b,i,e.HCM,g,{cN:"comment",b:"^\\=\\w",e:"\\=cut",eW:true},h,{cN:"string",b:"q[qwxr]?\\s*\\(",e:"\\)",c:f,r:5},{cN:"string",b:"q[qwxr]?\\s*\\[",e:"\\]",c:f,r:5},{cN:"string",b:"q[qwxr]?\\s*\\{",e:"\\}",c:f,r:5},{cN:"string",b:"q[qwxr]?\\s*\\|",e:"\\|",c:f,r:5},{cN:"string",b:"q[qwxr]?\\s*\\<",e:"\\>",c:f,r:5},{cN:"string",b:"qw\\s+q",e:"q",c:f,r:5},{cN:"string",b:"'",e:"'",c:[e.BE],r:0},{cN:"string",b:'"',e:'"',c:f,r:0},{cN:"string",b:"`",e:"`",c:[e.BE]},{cN:"string",b:"{\\w+}",r:0},{cN:"string",b:"-?\\w+\\s*\\=\\>",r:0},{cN:"number",b:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",r:0},{b:"("+e.RSR+"|\\b(split|return|print|reverse|grep)\\b)\\s*",k:"split return print reverse grep",r:0,c:[e.HCM,g,{cN:"regexp",b:"(s|tr|y)/(\\\\.|[^/])*/(\\\\.|[^/])*/[a-z]*",r:10},{cN:"regexp",b:"(m|qr)?/",e:"/[a-z]*",c:[e.BE],r:0}]},{cN:"sub",bWK:true,e:"(\\s*\\(.*?\\))?[;{]",k:"sub",r:5},{cN:"operator",b:"-\\w\\b",r:0}];d.c=c;h.c[1].c=c;return{k:a,c:c}}(hljs);hljs.LANGUAGES.applescript=function(a){var b=a.inherit(a.QSM,{i:""});var e={cN:"title",b:a.UIR};var d={cN:"params",b:"\\(",e:"\\)",c:["self",a.CNM,b]};var c=[{cN:"comment",b:"--",e:"$",},{cN:"comment",b:"\\(\\*",e:"\\*\\)",c:["self",{b:"--",e:"$"}]},a.HCM];return{k:{keyword:"about above after against and around as at back before beginning behind below beneath beside between but by considering contain contains continue copy div does eighth else end equal equals error every exit fifth first for fourth from front get given global if ignoring in into is it its last local me middle mod my ninth not of on onto or over prop property put ref reference repeat returning script second set seventh since sixth some tell tenth that the then third through thru timeout times to transaction try until where while whose with without",constant:"AppleScript false linefeed return pi quote result space tab true",type:"alias application boolean class constant date file integer list number real record string text",command:"activate beep count delay launch log offset read round run say summarize write",property:"character characters contents day frontmost id item length month name paragraph paragraphs rest reverse running time version weekday word words year"},c:[b,a.CNM,{cN:"type",b:"\\bPOSIX file\\b"},{cN:"command",b:"\\b(clipboard info|the clipboard|info for|list (disks|folder)|mount volume|path to|(close|open for) access|(get|set) eof|current date|do shell script|get volume settings|random number|set volume|system attribute|system info|time to GMT|(load|run|store) script|scripting components|ASCII (character|number)|localized string|choose (application|color|file|file name|folder|from list|remote application|URL)|display (alert|dialog))\\b|^\\s*return\\b"},{cN:"constant",b:"\\b(text item delimiters|current application|missing value)\\b"},{cN:"keyword",b:"\\b(apart from|aside from|instead of|out of|greater than|isn't|(doesn't|does not) (equal|come before|come after|contain)|(greater|less) than( or equal)?|(starts?|ends|begins?) with|contained by|comes (before|after)|a (ref|reference))\\b"},{cN:"property",b:"\\b(POSIX path|(date|time) string|quoted form)\\b"},{cN:"function_start",bWK:true,k:"on",i:"[${=;\\n]",c:[e,d]}].concat(c)}}(hljs);hljs.LANGUAGES.java=function(a){return{k:"false synchronized int abstract float private char boolean static null if const for true while long throw strictfp finally protected import native final return void enum else break transient new catch instanceof byte super volatile case assert short package default double public try this switch continue throws",c:[{cN:"javadoc",b:"/\\*\\*",e:"\\*/",c:[{cN:"javadoctag",b:"@[A-Za-z]+"}],r:10},a.CLCM,a.CBLCLM,a.ASM,a.QSM,{cN:"class",bWK:true,e:"{",k:"class interface",i:":",c:[{bWK:true,k:"extends implements",r:10},{cN:"title",b:a.UIR}]},a.CNM,{cN:"annotation",b:"@[A-Za-z]+"}]}}(hljs);hljs.LANGUAGES.vhdl=function(a){return{cI:true,k:{keyword:"abs access after alias all and architecture array assert attribute begin block body buffer bus case component configuration constant context cover disconnect downto default else elsif end entity exit fairness file for force function generate generic group guarded if impure in inertial inout is label library linkage literal loop map mod nand new next nor not null of on open or others out package port postponed procedure process property protected pure range record register reject release rem report restrict restrict_guarantee return rol ror select sequence severity shared signal sla sll sra srl strong subtype then to transport type unaffected units until use variable vmode vprop vunit wait when while with xnor xor",typename:"boolean bit character severity_level integer time delay_length natural positive string bit_vector file_open_kind file_open_status std_ulogic std_ulogic_vector std_logic std_logic_vector unsigned signed boolean_vector integer_vector real_vector time_vector"},i:"{",c:[a.CBLCLM,{cN:"comment",b:"--",e:"$"},a.QSM,a.CNM,{cN:"literal",b:"'(U|X|0|1|Z|W|L|H|-)'",c:[a.BE]},{cN:"attribute",b:"'[A-Za-z](_?[A-Za-z0-9])*",c:[a.BE]}]}}(hljs);hljs.LANGUAGES.brainfuck=function(a){return{c:[{cN:"comment",b:"[^\\[\\]\\.,\\+\\-<> \r\n]",eE:true,e:"[\\[\\]\\.,\\+\\-<> \r\n]",r:0},{cN:"title",b:"[\\[\\]]",r:0},{cN:"string",b:"[\\.,]"},{cN:"literal",b:"[\\+\\-]"}]}}(hljs);hljs.LANGUAGES.go=function(a){var b={keyword:"break default func interface select case map struct chan else goto package switch const fallthrough if range type continue for import return var go defer",constant:"true false iota nil",typename:"bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 uint16 uint32 uint64 int uint uintptr rune",built_in:"append cap close complex copy imag len make new panic print println real recover delete"};return{k:b,i:"</",c:[a.CLCM,a.CBLCLM,a.QSM,{cN:"string",b:"'",e:"[^\\\\]'",r:0},{cN:"string",b:"`",e:"`"},{cN:"number",b:"[^a-zA-Z_0-9](\\-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s)(\\+|\\-)?\\d+)?",r:0},a.CNM]}}(hljs);hljs.LANGUAGES.delphi=function(b){var f="and safecall cdecl then string exports library not pascal set virtual file in array label packed end. index while const raise for to implementation with except overload destructor downto finally program exit unit inherited override if type until function do begin repeat goto nil far initialization object else var uses external resourcestring interface end finalization class asm mod case on shr shl of register xorwrite threadvar try record near stored constructor stdcall inline div out or procedure";var e="safecall stdcall pascal stored const implementation finalization except to finally program inherited override then exports string read not mod shr try div shl set library message packed index for near overload label downto exit public goto interface asm on of constructor or private array unit raise destructor var type until function else external with case default record while protected property procedure published and cdecl do threadvar file in if end virtual write far out begin repeat nil initialization object uses resourcestring class register xorwrite inline static";var a={cN:"comment",b:"{",e:"}",r:0};var g={cN:"comment",b:"\\(\\*",e:"\\*\\)",r:10};var c={cN:"string",b:"'",e:"'",c:[{b:"''"}],r:0};var d={cN:"string",b:"(#\\d+)+"};var h={cN:"function",bWK:true,e:"[:;]",k:"function constructor|10 destructor|10 procedure|10",c:[{cN:"title",b:b.IR},{cN:"params",b:"\\(",e:"\\)",k:f,c:[c,d]},a,g]};return{cI:true,k:f,i:'("|\\$[G-Zg-z]|\\/\\*|</)',c:[a,g,b.CLCM,c,d,b.NM,h,{cN:"class",b:"=\\bclass\\b",e:"end;",k:e,c:[c,d,a,g,b.CLCM,h]}]}}(hljs);hljs.LANGUAGES.vala=function(a){return{k:{keyword:"char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 uint16 uint32 uint64 float double bool struct enum string void weak unowned owned async signal static abstract interface override while do for foreach else switch case break default return try catch public private protected internal using new this get set const stdout stdin stderr var",built_in:"DBus GLib CCode Gee Object",literal:"false true null"},c:[{cN:"class",bWK:true,e:"{",k:"class interface delegate namespace",c:[{bWK:true,k:"extends implements"},{cN:"title",b:a.UIR}]},a.CLCM,a.CBLCLM,{cN:"string",b:'"""',e:'"""',r:5},a.ASM,a.QSM,a.CNM,{cN:"preprocessor",b:"^#",e:"$",r:2},{cN:"constant",b:" [A-Z_]+ ",r:0}]}}(hljs);hljs.LANGUAGES.rib=function(a){return{k:"ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry Hider Hyperboloid Identity Illuminate Imager Interior LightSource MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd TransformPoints Translate TrimCurve WorldBegin WorldEnd",i:"</",c:[a.HCM,a.CNM,a.ASM,a.QSM]}}(hljs);hljs.LANGUAGES.ruby=function(e){var a="[a-zA-Z_][a-zA-Z0-9_]*(\\!|\\?)?";var j="[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?";var g={keyword:"and false then defined module in return redo if BEGIN retry end for true self when next until do begin unless END rescue nil else break undef not super class case require yield alias while ensure elsif or include"};var c={cN:"yardoctag",b:"@[A-Za-z]+"};var k=[{cN:"comment",b:"#",e:"$",c:[c]},{cN:"comment",b:"^\\=begin",e:"^\\=end",c:[c],r:10},{cN:"comment",b:"^__END__",e:"\\n$"}];var d={cN:"subst",b:"#\\{",e:"}",l:a,k:g};var i=[e.BE,d];var b=[{cN:"string",b:"'",e:"'",c:i,r:0},{cN:"string",b:'"',e:'"',c:i,r:0},{cN:"string",b:"%[qw]?\\(",e:"\\)",c:i},{cN:"string",b:"%[qw]?\\[",e:"\\]",c:i},{cN:"string",b:"%[qw]?{",e:"}",c:i},{cN:"string",b:"%[qw]?<",e:">",c:i,r:10},{cN:"string",b:"%[qw]?/",e:"/",c:i,r:10},{cN:"string",b:"%[qw]?%",e:"%",c:i,r:10},{cN:"string",b:"%[qw]?-",e:"-",c:i,r:10},{cN:"string",b:"%[qw]?\\|",e:"\\|",c:i,r:10}];var h={cN:"function",bWK:true,e:" |$|;",k:"def",c:[{cN:"title",b:j,l:a,k:g},{cN:"params",b:"\\(",e:"\\)",l:a,k:g}].concat(k)};var f=k.concat(b.concat([{cN:"class",bWK:true,e:"$|;",k:"class module",c:[{cN:"title",b:"[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?",r:0},{cN:"inheritance",b:"<\\s*",c:[{cN:"parent",b:"("+e.IR+"::)?"+e.IR}]}].concat(k)},h,{cN:"constant",b:"(::)?(\\b[A-Z]\\w*(::)?)+",r:0},{cN:"symbol",b:":",c:b.concat([{b:j}]),r:0},{cN:"symbol",b:a+":",r:0},{cN:"number",b:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",r:0},{cN:"number",b:"\\?\\w"},{cN:"variable",b:"(\\$\\W)|((\\$|\\@\\@?)(\\w+))"},{b:"("+e.RSR+")\\s*",c:k.concat([{cN:"regexp",b:"/",e:"/[a-z]*",i:"\\n",c:[e.BE,d]}]),r:0}]));d.c=f;h.c[1].c=f;return{l:a,k:g,c:f}}(hljs);hljs.LANGUAGES.dos=function(a){return{cI:true,k:{flow:"if else goto for in do call exit not exist errorlevel defined equ neq lss leq gtr geq",keyword:"shift cd dir echo setlocal endlocal set pause copy",stream:"prn nul lpt3 lpt2 lpt1 con com4 com3 com2 com1 aux",winutils:"ping net ipconfig taskkill xcopy ren del"},c:[{cN:"envvar",b:"%%[^ ]"},{cN:"envvar",b:"%[^ ]+?%"},{cN:"envvar",b:"![^ ]+?!"},{cN:"number",b:"\\b\\d+",r:0},{cN:"comment",b:"@?rem",e:"$"}]}}(hljs);hljs.LANGUAGES.lisp=function(i){var k="[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#]*";var l="(\\-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s)(\\+|\\-)?\\d+)?";var a={cN:"literal",b:"\\b(t{1}|nil)\\b"};var d=[{cN:"number",b:l},{cN:"number",b:"#b[0-1]+(/[0-1]+)?"},{cN:"number",b:"#o[0-7]+(/[0-7]+)?"},{cN:"number",b:"#x[0-9a-f]+(/[0-9a-f]+)?"},{cN:"number",b:"#c\\("+l+" +"+l,e:"\\)"}];var h={cN:"string",b:'"',e:'"',c:[i.BE],r:0};var m={cN:"comment",b:";",e:"$"};var g={cN:"variable",b:"\\*",e:"\\*"};var n={cN:"keyword",b:"[:&]"+k};var b={b:"\\(",e:"\\)",c:["self",a,h].concat(d)};var e={cN:"quoted",b:"['`]\\(",e:"\\)",c:d.concat([h,g,n,b])};var c={cN:"quoted",b:"\\(quote ",e:"\\)",k:{title:"quote"},c:d.concat([h,g,n,b])};var j={cN:"list",b:"\\(",e:"\\)"};var f={cN:"body",eW:true,eE:true};j.c=[{cN:"title",b:k},f];f.c=[e,c,j,a].concat(d).concat([h,m,g,n]);return{i:"[^\\s]",c:d.concat([a,h,m,e,c,j])}}(hljs);hljs.LANGUAGES.apache=function(a){var b={cN:"number",b:"[\\$%]\\d+"};return{cI:true,k:{keyword:"acceptfilter acceptmutex acceptpathinfo accessfilename action addalt addaltbyencoding addaltbytype addcharset adddefaultcharset adddescription addencoding addhandler addicon addiconbyencoding addiconbytype addinputfilter addlanguage addmoduleinfo addoutputfilter addoutputfilterbytype addtype alias aliasmatch allow allowconnect allowencodedslashes allowoverride anonymous anonymous_logemail anonymous_mustgiveemail anonymous_nouserid anonymous_verifyemail authbasicauthoritative authbasicprovider authdbduserpwquery authdbduserrealmquery authdbmgroupfile authdbmtype authdbmuserfile authdefaultauthoritative authdigestalgorithm authdigestdomain authdigestnccheck authdigestnonceformat authdigestnoncelifetime authdigestprovider authdigestqop authdigestshmemsize authgroupfile authldapbinddn authldapbindpassword authldapcharsetconfig authldapcomparednonserver authldapdereferencealiases authldapgroupattribute authldapgroupattributeisdn authldapremoteuserattribute authldapremoteuserisdn authldapurl authname authnprovideralias authtype authuserfile authzdbmauthoritative authzdbmtype authzdefaultauthoritative authzgroupfileauthoritative authzldapauthoritative authzownerauthoritative authzuserauthoritative balancermember browsermatch browsermatchnocase bufferedlogs cachedefaultexpire cachedirlength cachedirlevels cachedisable cacheenable cachefile cacheignorecachecontrol cacheignoreheaders cacheignorenolastmod cacheignorequerystring cachelastmodifiedfactor cachemaxexpire cachemaxfilesize cacheminfilesize cachenegotiateddocs cacheroot cachestorenostore cachestoreprivate cgimapextension charsetdefault charsetoptions charsetsourceenc checkcaseonly checkspelling chrootdir contentdigest cookiedomain cookieexpires cookielog cookiename cookiestyle cookietracking coredumpdirectory customlog dav davdepthinfinity davgenericlockdb davlockdb davmintimeout dbdexptime dbdkeep dbdmax dbdmin dbdparams dbdpersist dbdpreparesql dbdriver defaulticon defaultlanguage defaulttype deflatebuffersize deflatecompressionlevel deflatefilternote deflatememlevel deflatewindowsize deny directoryindex directorymatch directoryslash documentroot dumpioinput dumpiologlevel dumpiooutput enableexceptionhook enablemmap enablesendfile errordocument errorlog example expiresactive expiresbytype expiresdefault extendedstatus extfilterdefine extfilteroptions fileetag filterchain filterdeclare filterprotocol filterprovider filtertrace forcelanguagepriority forcetype forensiclog gracefulshutdowntimeout group header headername hostnamelookups identitycheck identitychecktimeout imapbase imapdefault imapmenu include indexheadinsert indexignore indexoptions indexorderdefault indexstylesheet isapiappendlogtoerrors isapiappendlogtoquery isapicachefile isapifakeasync isapilognotsupported isapireadaheadbuffer keepalive keepalivetimeout languagepriority ldapcacheentries ldapcachettl ldapconnectiontimeout ldapopcacheentries ldapopcachettl ldapsharedcachefile ldapsharedcachesize ldaptrustedclientcert ldaptrustedglobalcert ldaptrustedmode ldapverifyservercert limitinternalrecursion limitrequestbody limitrequestfields limitrequestfieldsize limitrequestline limitxmlrequestbody listen listenbacklog loadfile loadmodule lockfile logformat loglevel maxclients maxkeepaliverequests maxmemfree maxrequestsperchild maxrequestsperthread maxspareservers maxsparethreads maxthreads mcachemaxobjectcount mcachemaxobjectsize mcachemaxstreamingbuffer mcacheminobjectsize mcacheremovalalgorithm mcachesize metadir metafiles metasuffix mimemagicfile minspareservers minsparethreads mmapfile mod_gzip_on mod_gzip_add_header_count mod_gzip_keep_workfiles mod_gzip_dechunk mod_gzip_min_http mod_gzip_minimum_file_size mod_gzip_maximum_file_size mod_gzip_maximum_inmem_size mod_gzip_temp_dir mod_gzip_item_include mod_gzip_item_exclude mod_gzip_command_version mod_gzip_can_negotiate mod_gzip_handle_methods mod_gzip_static_suffix mod_gzip_send_vary mod_gzip_update_static modmimeusepathinfo multiviewsmatch namevirtualhost noproxy nwssltrustedcerts nwsslupgradeable options order passenv pidfile protocolecho proxybadheader proxyblock proxydomain proxyerroroverride proxyftpdircharset proxyiobuffersize proxymaxforwards proxypass proxypassinterpolateenv proxypassmatch proxypassreverse proxypassreversecookiedomain proxypassreversecookiepath proxypreservehost proxyreceivebuffersize proxyremote proxyremotematch proxyrequests proxyset proxystatus proxytimeout proxyvia readmename receivebuffersize redirect redirectmatch redirectpermanent redirecttemp removecharset removeencoding removehandler removeinputfilter removelanguage removeoutputfilter removetype requestheader require rewritebase rewritecond rewriteengine rewritelock rewritelog rewriteloglevel rewritemap rewriteoptions rewriterule rlimitcpu rlimitmem rlimitnproc satisfy scoreboardfile script scriptalias scriptaliasmatch scriptinterpretersource scriptlog scriptlogbuffer scriptloglength scriptsock securelisten seerequesttail sendbuffersize serveradmin serveralias serverlimit servername serverpath serverroot serversignature servertokens setenv setenvif setenvifnocase sethandler setinputfilter setoutputfilter ssienableaccess ssiendtag ssierrormsg ssistarttag ssitimeformat ssiundefinedecho sslcacertificatefile sslcacertificatepath sslcadnrequestfile sslcadnrequestpath sslcarevocationfile sslcarevocationpath sslcertificatechainfile sslcertificatefile sslcertificatekeyfile sslciphersuite sslcryptodevice sslengine sslhonorciperorder sslmutex ssloptions sslpassphrasedialog sslprotocol sslproxycacertificatefile sslproxycacertificatepath sslproxycarevocationfile sslproxycarevocationpath sslproxyciphersuite sslproxyengine sslproxymachinecertificatefile sslproxymachinecertificatepath sslproxyprotocol sslproxyverify sslproxyverifydepth sslrandomseed sslrequire sslrequiressl sslsessioncache sslsessioncachetimeout sslusername sslverifyclient sslverifydepth startservers startthreads substitute suexecusergroup threadlimit threadsperchild threadstacksize timeout traceenable transferlog typesconfig unsetenv usecanonicalname usecanonicalphysicalport user userdir virtualdocumentroot virtualdocumentrootip virtualscriptalias virtualscriptaliasip win32disableacceptex xbithack",literal:"on off"},c:[a.HCM,{cN:"sqbracket",b:"\\s\\[",e:"\\]$"},{cN:"cbracket",b:"[\\$%]\\{",e:"\\}",c:["self",b]},b,{cN:"tag",b:"</?",e:">"},a.QSM]}}(hljs);hljs.LANGUAGES.actionscript=function(a){var d="[a-zA-Z_$][a-zA-Z0-9_$]*";var c="([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)";var e={cN:"rest_arg",b:"[.]{3}",e:d,r:10};var b={cN:"title",b:d};return{k:{keyword:"as break case catch class const continue default delete do dynamic each else extends final finally for function get if implements import in include instanceof interface internal is namespace native new override package private protected public return set static super switch this throw try typeof use var void while with",literal:"true false null undefined"},c:[a.ASM,a.QSM,a.CLCM,a.CBLCLM,a.CNM,{cN:"package",bWK:true,e:"{",k:"package",c:[b]},{cN:"class",bWK:true,e:"{",k:"class interface",c:[{bWK:true,k:"extends implements"},b]},{cN:"preprocessor",bWK:true,e:";",k:"import include"},{cN:"function",bWK:true,e:"[{;]",k:"function",i:"\\S",c:[b,{cN:"params",b:"\\(",e:"\\)",c:[a.ASM,a.QSM,a.CLCM,a.CBLCLM,e]},{cN:"type",b:":",e:c,r:10}]}]}}(hljs);hljs.LANGUAGES.erlang=function(i){var c="[a-z'][a-zA-Z0-9_']*";var o="("+c+":"+c+"|"+c+")";var f={keyword:"after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun let not of orelse|10 query receive rem try when xor",literal:"false true"};var l={cN:"comment",b:"%",e:"$",r:0};var e={cN:"number",b:"\\b(\\d+#[a-fA-F0-9]+|\\d+(\\.\\d+)?([eE][-+]?\\d+)?)",r:0};var g={b:"fun\\s+"+c+"/\\d+"};var n={b:o+"\\(",e:"\\)",rB:true,r:0,c:[{cN:"function_name",b:o,r:0},{b:"\\(",e:"\\)",eW:true,rE:true,r:0}]};var h={cN:"tuple",b:"{",e:"}",r:0};var a={cN:"variable",b:"\\b_([A-Z][A-Za-z0-9_]*)?",r:0};var m={cN:"variable",b:"[A-Z][a-zA-Z0-9_]*",r:0};var b={b:"#",e:"}",i:".",r:0,rB:true,c:[{cN:"record_name",b:"#"+i.UIR,r:0},{b:"{",eW:true,r:0}]};var k={k:f,b:"(fun|receive|if|try|case)",e:"end"};k.c=[l,g,i.inherit(i.ASM,{cN:""}),k,n,i.QSM,e,h,a,m,b];var j=[l,g,k,n,i.QSM,e,h,a,m,b];n.c[1].c=j;h.c=j;b.c[1].c=j;var d={cN:"params",b:"\\(",e:"\\)",c:j};return{k:f,i:"(</|\\*=|\\+=|-=|/=|/\\*|\\*/|\\(\\*|\\*\\))",c:[{cN:"function",b:"^"+c+"\\s*\\(",e:"->",rB:true,i:"\\(|#|//|/\\*|\\\\|:",c:[d,{cN:"title",b:c}],starts:{e:";|\\.",k:f,c:j}},l,{cN:"pp",b:"^-",e:"\\.",r:0,eE:true,rB:true,l:"-"+i.IR,k:"-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn -import -include -include_lib -compile -define -else -endif -file -behaviour -behavior",c:[d]},e,i.QSM,b,a,m,h]}}(hljs);hljs.LANGUAGES.rust=function(b){var d={cN:"title",b:b.UIR};var c={cN:"number",b:"\\b(0[xb][A-Za-z0-9_]+|[0-9_]+(\\.[0-9_]+)?([uif](8|16|32|64)?)?)",r:0};var a="alt any as assert be bind block bool break char check claim const cont dir do else enum export f32 f64 fail false float fn for i16 i32 i64 i8 if iface impl import in int let log mod mutable native note of prove pure resource ret self str syntax true type u16 u32 u64 u8 uint unchecked unsafe use vec while";return{k:a,i:"</",c:[b.CLCM,b.CBLCLM,b.inherit(b.QSM,{i:null}),b.ASM,c,{cN:"function",bWK:true,e:"(\\(|<)",k:"fn",c:[d]},{cN:"preprocessor",b:"#\\[",e:"\\]"},{bWK:true,e:"(=|<)",k:"type",c:[d],i:"\\S"},{bWK:true,e:"({|<)",k:"iface enum",c:[d],i:"\\S"}]}}(hljs);hljs.LANGUAGES.avrasm=function(a){return{cI:true,k:{keyword:"adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub subi swap tst wdr",built_in:"r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf"},c:[a.CBLCLM,{cN:"comment",b:";",e:"$"},a.CNM,a.BNM,{cN:"number",b:"\\b(\\$[a-zA-Z0-9]+|0o[0-7]+)"},a.QSM,{cN:"string",b:"'",e:"[^\\\\]'",i:"[^\\\\][^']"},{cN:"label",b:"^[A-Za-z0-9_.$]+:"},{cN:"preprocessor",b:"#",e:"$"},{cN:"preprocessor",b:"\\.[a-zA-Z]+"},{cN:"localvars",b:"@[0-9]+"}]}}(hljs);hljs.LANGUAGES.tex=function(a){var d={cN:"command",b:"\\\\[a-zA-Zа-яА-я]+[\\*]?"};var c={cN:"command",b:"\\\\[^a-zA-Zа-яА-я0-9]"};var b={cN:"special",b:"[{}\\[\\]\\&#~]",r:0};return{c:[{b:"\\\\[a-zA-Zа-яА-я]+[\\*]? *= *-?\\d*\\.?\\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?",rB:true,c:[d,c,{cN:"number",b:" *=",e:"-?\\d*\\.?\\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?",eB:true}],r:10},d,c,b,{cN:"formula",b:"\\$\\$",e:"\\$\\$",c:[d,c,b],r:0},{cN:"formula",b:"\\$",e:"\\$",c:[d,c,b],r:0},{cN:"comment",b:"%",e:"$",r:0}]}}(hljs);hljs.LANGUAGES.sql=function(a){return{cI:true,c:[{cN:"operator",b:"(begin|start|commit|rollback|savepoint|lock|alter|create|drop|rename|call|delete|do|handler|insert|load|replace|select|truncate|update|set|show|pragma|grant)\\b(?!:)",e:";",eW:true,k:{keyword:"all partial global month current_timestamp using go revoke smallint indicator end-exec disconnect zone with character assertion to add current_user usage input local alter match collate real then rollback get read timestamp session_user not integer bit unique day minute desc insert execute like ilike|2 level decimal drop continue isolation found where constraints domain right national some module transaction relative second connect escape close system_user for deferred section cast current sqlstate allocate intersect deallocate numeric public preserve full goto initially asc no key output collation group by union session both last language constraint column of space foreign deferrable prior connection unknown action commit view or first into float year primary cascaded except restrict set references names table outer open select size are rows from prepare distinct leading create only next inner authorization schema corresponding option declare precision immediate else timezone_minute external varying translation true case exception join hour default double scroll value cursor descriptor values dec fetch procedure delete and false int is describe char as at in varchar null trailing any absolute current_time end grant privileges when cross check write current_date pad begin temporary exec time update catalog user sql date on identity timezone_hour natural whenever interval work order cascade diagnostics nchar having left call do handler load replace truncate start lock show pragma exists number",aggregate:"count sum min max avg"},c:[{cN:"string",b:"'",e:"'",c:[a.BE,{b:"''"}],r:0},{cN:"string",b:'"',e:'"',c:[a.BE,{b:'""'}],r:0},{cN:"string",b:"`",e:"`",c:[a.BE]},a.CNM]},a.CBLCLM,{cN:"comment",b:"--",e:"$"}]}}(hljs);hljs.LANGUAGES.nginx=function(b){var c=[{cN:"variable",b:"\\$\\d+"},{cN:"variable",b:"\\${",e:"}"},{cN:"variable",b:"[\\$\\@]"+b.UIR}];var a={eW:true,l:"[a-z/_]+",k:{built_in:"on off yes no true false none blocked debug info notice warn error crit select break last permanent redirect kqueue rtsig epoll poll /dev/poll"},r:0,i:"=>",c:[b.HCM,{cN:"string",b:'"',e:'"',c:[b.BE].concat(c),r:0},{cN:"string",b:"'",e:"'",c:[b.BE].concat(c),r:0},{cN:"url",b:"([a-z]+):/",e:"\\s",eW:true,eE:true},{cN:"regexp",b:"\\s\\^",e:"\\s|{|;",rE:true,c:[b.BE].concat(c)},{cN:"regexp",b:"~\\*?\\s+",e:"\\s|{|;",rE:true,c:[b.BE].concat(c)},{cN:"regexp",b:"\\*(\\.[a-z\\-]+)+",c:[b.BE].concat(c)},{cN:"regexp",b:"([a-z\\-]+\\.)+\\*",c:[b.BE].concat(c)},{cN:"number",b:"\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b"},{cN:"number",b:"\\b\\d+[kKmMgGdshdwy]*\\b",r:0}].concat(c)};return{c:[b.HCM,{b:b.UIR+"\\s",e:";|{",rB:true,c:[{cN:"title",b:b.UIR,starts:a}]}],i:"[^\\s\\}]"}}(hljs);hljs.LANGUAGES.php=function(a){var e={cN:"variable",b:"\\$+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*"};var b=[a.inherit(a.ASM,{i:null}),a.inherit(a.QSM,{i:null}),{cN:"string",b:'b"',e:'"',c:[a.BE]},{cN:"string",b:"b'",e:"'",c:[a.BE]}];var c=[a.BNM,a.CNM];var d={cN:"title",b:a.UIR};return{cI:true,k:"and include_once list abstract global private echo interface as static endswitch array null if endwhile or const for endforeach self var while isset public protected exit foreach throw elseif include __FILE__ empty require_once do xor return implements parent clone use __CLASS__ __LINE__ else break print eval new catch __METHOD__ case exception php_user_filter default die require __FUNCTION__ enddeclare final try this switch continue endfor endif declare unset true false namespace trait goto instanceof insteadof __DIR__ __NAMESPACE__ __halt_compiler",c:[a.CLCM,a.HCM,{cN:"comment",b:"/\\*",e:"\\*/",c:[{cN:"phpdoc",b:"\\s@[A-Za-z]+"}]},{cN:"comment",eB:true,b:"__halt_compiler.+?;",eW:true},{cN:"string",b:"<<<['\"]?\\w+['\"]?$",e:"^\\w+;",c:[a.BE]},{cN:"preprocessor",b:"<\\?php",r:10},{cN:"preprocessor",b:"\\?>"},e,{cN:"function",bWK:true,e:"{",k:"function",i:"\\$|\\[|%",c:[d,{cN:"params",b:"\\(",e:"\\)",c:["self",e,a.CBLCLM].concat(b).concat(c)}]},{cN:"class",bWK:true,e:"{",k:"class",i:"[:\\(\\$]",c:[{bWK:true,eW:true,k:"extends",c:[d]},d]},{b:"=>"}].concat(b).concat(c)}}(hljs);hljs.LANGUAGES.cpp=function(a){var b={keyword:"false int float while private char catch export virtual operator sizeof dynamic_cast|10 typedef const_cast|10 const struct for static_cast|10 union namespace unsigned long throw volatile static protected bool template mutable if public friend do return goto auto void enum else break new extern using true class asm case typeid short reinterpret_cast|10 default double register explicit signed typename try this switch continue wchar_t inline delete alignof char16_t char32_t constexpr decltype noexcept nullptr static_assert thread_local restrict _Bool complex",built_in:"std string cin cout cerr clog stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap array shared_ptr"};return{k:b,i:"</",c:[a.CLCM,a.CBLCLM,a.QSM,{cN:"string",b:"'\\\\?.",e:"'",i:"."},{cN:"number",b:"\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)"},a.CNM,{cN:"preprocessor",b:"#",e:"$"},{cN:"stl_container",b:"\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",e:">",k:b,r:10,c:["self"]}]}}(hljs);hljs.LANGUAGES.xml=function(a){var c="[A-Za-z0-9\\._:-]+";var b={eW:true,c:[{cN:"attribute",b:c,r:0},{b:'="',rB:true,e:'"',c:[{cN:"value",b:'"',eW:true}]},{b:"='",rB:true,e:"'",c:[{cN:"value",b:"'",eW:true}]},{b:"=",c:[{cN:"value",b:"[^\\s/>]+"}]}]};return{cI:true,c:[{cN:"pi",b:"<\\?",e:"\\?>",r:10},{cN:"doctype",b:"<!DOCTYPE",e:">",r:10,c:[{b:"\\[",e:"\\]"}]},{cN:"comment",b:"<!--",e:"-->",r:10},{cN:"cdata",b:"<\\!\\[CDATA\\[",e:"\\]\\]>",r:10},{cN:"tag",b:"<style(?=\\s|>|$)",e:">",k:{title:"style"},c:[b],starts:{e:"</style>",rE:true,sL:"css"}},{cN:"tag",b:"<script(?=\\s|>|$)",e:">",k:{title:"script"},c:[b],starts:{e:"<\/script>",rE:true,sL:"javascript"}},{b:"<%",e:"%>",sL:"vbscript"},{cN:"tag",b:"</?",e:"/?>",c:[{cN:"title",b:"[^ />]+"},b]}]}}(hljs);hljs.LANGUAGES.parser3=function(a){return{sL:"xml",c:[{cN:"comment",b:"^#",e:"$"},{cN:"comment",b:"\\^rem{",e:"}",r:10,c:[{b:"{",e:"}",c:["self"]}]},{cN:"preprocessor",b:"^@(?:BASE|USE|CLASS|OPTIONS)$",r:10},{cN:"title",b:"@[\\w\\-]+\\[[\\w^;\\-]*\\](?:\\[[\\w^;\\-]*\\])?(?:.*)$"},{cN:"variable",b:"\\$\\{?[\\w\\-\\.\\:]+\\}?"},{cN:"keyword",b:"\\^[\\w\\-\\.\\:]+"},{cN:"number",b:"\\^#[0-9a-fA-F]+"},a.CNM]}}(hljs);hljs.LANGUAGES.css=function(a){var b={cN:"function",b:a.IR+"\\(",e:"\\)",c:[a.NM,a.ASM,a.QSM]};return{cI:true,i:"[=/|']",c:[a.CBLCLM,{cN:"id",b:"\\#[A-Za-z0-9_-]+"},{cN:"class",b:"\\.[A-Za-z0-9_-]+",r:0},{cN:"attr_selector",b:"\\[",e:"\\]",i:"$"},{cN:"pseudo",b:":(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\\\"\\']+"},{cN:"at_rule",b:"@(font-face|page)",l:"[a-z-]+",k:"font-face page"},{cN:"at_rule",b:"@",e:"[{;]",eE:true,k:"import page media charset",c:[b,a.ASM,a.QSM,a.NM]},{cN:"tag",b:a.IR,r:0},{cN:"rules",b:"{",e:"}",i:"[^\\s]",r:0,c:[a.CBLCLM,{cN:"rule",b:"[^\\s]",rB:true,e:";",eW:true,c:[{cN:"attribute",b:"[A-Z\\_\\.\\-]+",e:":",eE:true,i:"[^\\s]",starts:{cN:"value",eW:true,eE:true,c:[b,a.NM,a.QSM,a.ASM,a.CBLCLM,{cN:"hexcolor",b:"\\#[0-9A-F]+"},{cN:"important",b:"!important"}]}}]}]}]}}(hljs);hljs.LANGUAGES.axapta=function(a){return{k:"false int abstract private char interface boolean static null if for true while long throw finally protected extends final implements return void enum else break new catch byte super class case short default double public try this switch continue reverse firstfast firstonly forupdate nofetch sum avg minof maxof count order group by asc desc index hint like dispaly edit client server ttsbegin ttscommit str real date container anytype common div mod",c:[a.CLCM,a.CBLCLM,a.ASM,a.QSM,a.CNM,{cN:"preprocessor",b:"#",e:"$"},{cN:"class",bWK:true,e:"{",i:":",k:"class interface",c:[{cN:"inheritance",bWK:true,k:"extends implements",r:10},{cN:"title",b:a.UIR}]}]}}(hljs);hljs.LANGUAGES.ini=function(a){return{cI:true,i:"[^\\s]",c:[{cN:"comment",b:";",e:"$"},{cN:"title",b:"^\\[",e:"\\]"},{cN:"setting",b:"^[a-z0-9\\[\\]_-]+[ \\t]*=[ \\t]*",e:"$",c:[{cN:"value",eW:true,k:"on off true false yes no",c:[a.QSM,a.NM]}]}]}}(hljs);hljs.LANGUAGES.matlab=function(a){var b=[a.CNM,{cN:"string",b:"'",e:"'",c:[a.BE,{b:"''"}],r:0}];return{k:{keyword:"break case catch classdef continue else elseif end enumerated events for function global if methods otherwise parfor persistent properties return spmd switch try while",built_in:"sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i inf nan isnan isinf isfinite j why compan gallery hadamard hankel hilb invhilb magic pascal rosser toeplitz vander wilkinson"},i:'(//|"|#|/\\*|\\s+/\\w+)',c:[{cN:"function",bWK:true,e:"$",k:"function",c:[{cN:"title",b:a.UIR},{cN:"params",b:"\\(",e:"\\)"},{cN:"params",b:"\\[",e:"\\]"}]},{cN:"transposed_variable",b:"[a-zA-Z_][a-zA-Z_0-9]*('+[\\.']*|[\\.']+)",e:""},{cN:"matrix",b:"\\[",e:"\\]'*[\\.']*",c:b},{cN:"cell",b:"\\{",e:"\\}'*[\\.']*",c:b},{cN:"comment",b:"\\%",e:"$"}].concat(b)}}(hljs);hljs.LANGUAGES.d=function(x){var b={keyword:"abstract alias align asm assert auto body break byte case cast catch class const continue debug default delete deprecated do else enum export extern final finally for foreach foreach_reverse|10 goto if immutable import in inout int interface invariant is lazy macro mixin module new nothrow out override package pragma private protected public pure ref return scope shared static struct super switch synchronized template this throw try typedef typeid typeof union unittest version void volatile while with __FILE__ __LINE__ __gshared|10 __thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__",built_in:"bool cdouble cent cfloat char creal dchar delegate double dstring float function idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar wstring",literal:"false null true"};var c="(0|[1-9][\\d_]*)",q="(0|[1-9][\\d_]*|\\d[\\d_]*|[\\d_]+?\\d)",h="0[bB][01_]+",v="([\\da-fA-F][\\da-fA-F_]*|_[\\da-fA-F][\\da-fA-F_]*)",y="0[xX]"+v,p="([eE][+-]?"+q+")",o="("+q+"(\\.\\d*|"+p+")|\\d+\\."+q+q+"|\\."+c+p+"?)",k="(0[xX]("+v+"\\."+v+"|\\.?"+v+")[pP][+-]?"+q+")",l="("+c+"|"+h+"|"+y+")",n="("+k+"|"+o+")";var z="\\\\(['\"\\?\\\\abfnrtv]|u[\\dA-Fa-f]{4}|[0-7]{1,3}|x[\\dA-Fa-f]{2}|U[\\dA-Fa-f]{8})|&[a-zA-Z\\d]{2,};";var m={cN:"number",b:"\\b"+l+"(L|u|U|Lu|LU|uL|UL)?",r:0};var j={cN:"number",b:"\\b("+n+"([fF]|L|i|[fF]i|Li)?|"+l+"(i|[fF]i|Li))",r:0};var s={cN:"string",b:"'("+z+"|.)",e:"'",i:"."};var r={b:z,r:0};var w={cN:"string",b:'"',c:[r],e:'"[cwd]?',r:0};var f={cN:"string",b:'[rq]"',e:'"[cwd]?',r:5};var u={cN:"string",b:"`",e:"`[cwd]?"};var i={cN:"string",b:'x"[\\da-fA-F\\s\\n\\r]*"[cwd]?',r:10};var t={cN:"string",b:'q"\\{',e:'\\}"'};var e={cN:"shebang",b:"^#!",e:"$",r:5};var g={cN:"preprocessor",b:"#(line)",e:"$",r:5};var d={cN:"keyword",b:"@[a-zA-Z_][a-zA-Z_\\d]*"};var a={cN:"comment",b:"\\/\\+",c:["self"],e:"\\+\\/",r:10};return{l:x.UIR,k:b,c:[x.CLCM,x.CBLCLM,a,i,w,f,u,t,j,m,s,e,g,d]}}(hljs);hljs.LANGUAGES.profile=function(a){return{c:[a.CNM,{cN:"builtin",b:"{",e:"}$",eB:true,eE:true,c:[a.ASM,a.QSM],r:0},{cN:"filename",b:"[a-zA-Z_][\\da-zA-Z_]+\\.[\\da-zA-Z_]{1,3}",e:":",eE:true},{cN:"header",b:"(ncalls|tottime|cumtime)",e:"$",k:"ncalls tottime|10 cumtime|10 filename",r:10},{cN:"summary",b:"function calls",e:"$",c:[a.CNM],r:10},a.ASM,a.QSM,{cN:"function",b:"\\(",e:"\\)$",c:[{cN:"title",b:a.UIR,r:0}],r:0}]}}(hljs);hljs.LANGUAGES.javascript=function(a){return{k:{keyword:"in if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const",literal:"true false null undefined NaN Infinity"},c:[a.ASM,a.QSM,a.CLCM,a.CBLCLM,a.CNM,{b:"("+a.RSR+"|\\b(case|return|throw)\\b)\\s*",k:"return throw case",c:[a.CLCM,a.CBLCLM,{cN:"regexp",b:"/",e:"/[gim]*",i:"\\n",c:[{b:"\\\\/"}]},{b:"<",e:">;",sL:"xml"}],r:0},{cN:"function",bWK:true,e:"{",k:"function",c:[{cN:"title",b:"[A-Za-z$_][0-9A-Za-z$_]*"},{cN:"params",b:"\\(",e:"\\)",c:[a.CLCM,a.CBLCLM],i:"[\"'\\(]"}],i:"\\[|%"}]}}(hljs);hljs.LANGUAGES.bash=function(a){var g="true false";var e="if then else elif fi for break continue while in do done echo exit return set declare";var c={cN:"variable",b:"\\$[a-zA-Z0-9_#]+"};var b={cN:"variable",b:"\\${([^}]|\\\\})+}"};var h={cN:"string",b:'"',e:'"',i:"\\n",c:[a.BE,c,b],r:0};var d={cN:"string",b:"'",e:"'",c:[{b:"''"}],r:0};var f={cN:"test_condition",b:"",e:"",c:[h,d,c,b],k:{literal:g},r:0};return{k:{keyword:e,literal:g},c:[{cN:"shebang",b:"(#!\\/bin\\/bash)|(#!\\/bin\\/sh)",r:10},c,b,a.HCM,h,d,a.inherit(f,{b:"\\[ ",e:" \\]",r:0}),a.inherit(f,{b:"\\[\\[ ",e:" \\]\\]"})]}}(hljs);hljs.LANGUAGES.django=function(c){function e(h,g){return(g==undefined||(!h.cN&&g.cN=="tag")||h.cN=="value")}function f(l,k){var g={};for(var j in l){if(j!="contains"){g[j]=l[j]}var m=[];for(var h=0;l.c&&h<l.c.length;h++){m.push(f(l.c[h],l))}if(e(l,k)){m=b.concat(m)}if(m.length){g.c=m}}return g}var d={cN:"filter",b:"\\|[A-Za-z]+\\:?",eE:true,k:"truncatewords removetags linebreaksbr yesno get_digit timesince random striptags filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort dictsortreversed default_if_none pluralize lower join center default truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize localtime utc timezone",c:[{cN:"argument",b:'"',e:'"'}]};var b=[{cN:"template_comment",b:"{%\\s*comment\\s*%}",e:"{%\\s*endcomment\\s*%}"},{cN:"template_comment",b:"{#",e:"#}"},{cN:"template_tag",b:"{%",e:"%}",k:"comment endcomment load templatetag ifchanged endifchanged if endif firstof for endfor in ifnotequal endifnotequal widthratio extends include spaceless endspaceless regroup by as ifequal endifequal ssi now with cycle url filter endfilter debug block endblock else autoescape endautoescape csrf_token empty elif endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix plural get_current_language language get_available_languages get_current_language_bidi get_language_info get_language_info_list localize endlocalize localtime endlocaltime timezone endtimezone get_current_timezone",c:[d]},{cN:"variable",b:"{{",e:"}}",c:[d]}];var a=f(c.LANGUAGES.xml);a.cI=true;return a}(hljs);hljs.LANGUAGES.smalltalk=function(a){var b="[a-z][a-zA-Z0-9_]*";var d={cN:"char",b:"\\$.{1}"};var c={cN:"symbol",b:"#"+a.UIR};return{k:"self super nil true false thisContext",c:[{cN:"comment",b:'"',e:'"',r:0},a.ASM,{cN:"class",b:"\\b[A-Z][A-Za-z0-9_]*",r:0},{cN:"method",b:b+":"},a.CNM,c,d,{cN:"localvars",b:"\\|\\s*(("+b+")\\s*)+\\|"},{cN:"array",b:"\\#\\(",e:"\\)",c:[a.ASM,d,a.CNM,c]}]}}(hljs);hljs.LANGUAGES.markdown=function(a){return{c:[{cN:"header",b:"^#{1,3}",e:"$"},{cN:"header",b:"^.+?\\n[=-]{2,}$"},{b:"<",e:">",sL:"xml",r:0},{cN:"bullet",b:"^([*+-]|(\\d+\\.))\\s+"},{cN:"strong",b:"[*_]{2}.+?[*_]{2}"},{cN:"emphasis",b:"\\*.+?\\*"},{cN:"emphasis",b:"_.+?_",r:0},{cN:"blockquote",b:"^>\\s+",e:"$"},{cN:"code",b:"`.+?`"},{cN:"code",b:"^    ",e:"$",r:0},{cN:"horizontal_rule",b:"^-{3,}",e:"$"},{b:"\\[.+?\\]\\(.+?\\)",rB:true,c:[{cN:"link_label",b:"\\[.+\\]"},{cN:"link_url",b:"\\(",e:"\\)",eB:true,eE:true}]}]}}(hljs);hljs.LANGUAGES.diff=function(a){return{c:[{cN:"chunk",b:"^\\@\\@ +\\-\\d+,\\d+ +\\+\\d+,\\d+ +\\@\\@$",r:10},{cN:"chunk",b:"^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$",r:10},{cN:"chunk",b:"^\\-\\-\\- +\\d+,\\d+ +\\-\\-\\-\\-$",r:10},{cN:"header",b:"Index: ",e:"$"},{cN:"header",b:"=====",e:"=====$"},{cN:"header",b:"^\\-\\-\\-",e:"$"},{cN:"header",b:"^\\*{3} ",e:"$"},{cN:"header",b:"^\\+\\+\\+",e:"$"},{cN:"header",b:"\\*{5}",e:"\\*{5}$"},{cN:"addition",b:"^\\+",e:"$"},{cN:"deletion",b:"^\\-",e:"$"},{cN:"change",b:"^\\!",e:"$"}]}}(hljs);hljs.LANGUAGES.json=function(a){var e={literal:"true false null"};var d=[a.QSM,a.CNM];var c={cN:"value",e:",",eW:true,eE:true,c:d,k:e};var b={b:"{",e:"}",c:[{cN:"attribute",b:'\\s*"',e:'"\\s*:\\s*',eB:true,eE:true,c:[a.BE],i:"\\n",starts:c}],i:"\\S"};var f={b:"\\[",e:"\\]",c:[a.inherit(c,{cN:null})],i:"\\S"};d.splice(d.length,0,b,f);return{c:d,k:e,i:"\\S"}}(hljs);hljs.LANGUAGES.vbscript=function(a){return{cI:true,k:{keyword:"call class const dim do loop erase execute executeglobal exit for each next function if then else on error option explicit new private property let get public randomize redim rem select case set stop sub while wend with end to elseif is or xor and not class_initialize class_terminate default preserve in me byval byref step resume goto",built_in:"lcase month vartype instrrev ubound setlocale getobject rgb getref string weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency conversions csng timevalue second year space abs clng timeserial fixs len asc isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim strcomp int createobject loadpicture tan formatnumber mid scriptenginebuildversion scriptengine split scriptengineminorversion cint sin datepart ltrim sqr scriptenginemajorversion time derived eval date formatpercent exp inputbox left ascw chrw regexp server response request cstr err",literal:"true false null nothing empty"},i:"//",c:[a.inherit(a.QSM,{c:[{b:'""'}]}),{cN:"comment",b:"'",e:"$"},a.CNM]}}(hljs);hljs.LANGUAGES.haskell=function(a){var d={cN:"type",b:"\\b[A-Z][\\w']*",r:0};var c={cN:"container",b:"\\(",e:"\\)",c:[{cN:"type",b:"\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"},{cN:"title",b:"[_a-z][\\w']*"}]};var b={cN:"container",b:"{",e:"}",c:c.c};return{k:"let in if then else case of where do module import hiding qualified type data newtype deriving class instance not as foreign ccall safe unsafe",c:[{cN:"comment",b:"--",e:"$"},{cN:"preprocessor",b:"{-#",e:"#-}"},{cN:"comment",c:["self"],b:"{-",e:"-}"},{cN:"string",b:"\\s+'",e:"'",c:[a.BE],r:0},a.QSM,{cN:"import",b:"\\bimport",e:"$",k:"import qualified as hiding",c:[c],i:"\\W\\.|;"},{cN:"module",b:"\\bmodule",e:"where",k:"module where",c:[c],i:"\\W\\.|;"},{cN:"class",b:"\\b(class|instance)",e:"where",k:"class where instance",c:[d]},{cN:"typedef",b:"\\b(data|(new)?type)",e:"$",k:"data type newtype deriving",c:[d,c,b]},a.CNM,{cN:"shebang",b:"#!\\/usr\\/bin\\/env runhaskell",e:"$"},d,{cN:"title",b:"^[_a-z][\\w']*"}]}}(hljs);hljs.LANGUAGES.coffeescript=function(c){var b={keyword:"in if for while finally new do return else break catch instanceof throw try this switch continue typeof delete debugger super then unless until loop of by when and or is isnt not",literal:"true false null undefined yes no on off ",reserved:"case default function var void with const let enum export import native __hasProp __extends __slice __bind __indexOf"};var a="[A-Za-z$_][0-9A-Za-z$_]*";var e={cN:"title",b:a};var d={cN:"subst",b:"#\\{",e:"}",k:b,c:[c.BNM,c.CNM]};return{k:b,c:[c.BNM,c.CNM,c.ASM,{cN:"string",b:'"""',e:'"""',c:[c.BE,d]},{cN:"string",b:'"',e:'"',c:[c.BE,d],r:0},{cN:"comment",b:"###",e:"###"},c.HCM,{cN:"regexp",b:"///",e:"///",c:[c.HCM]},{cN:"regexp",b:"//[gim]*"},{cN:"regexp",b:"/\\S(\\\\.|[^\\n])*/[gim]*"},{b:"`",e:"`",eB:true,eE:true,sL:"javascript"},{cN:"function",b:a+"\\s*=\\s*(\\(.+\\))?\\s*[-=]>",rB:true,c:[e,{cN:"params",b:"\\(",e:"\\)"}]},{cN:"class",bWK:true,k:"class",e:"$",i:":",c:[{bWK:true,k:"extends",eW:true,i:":",c:[e]},e]},{cN:"property",b:"@"+a}]}}(hljs);hljs.LANGUAGES.python=function(a){var f={cN:"prompt",b:"^(>>>|\\.\\.\\.) "};var c=[{cN:"string",b:"(u|b)?r?'''",e:"'''",c:[f],r:10},{cN:"string",b:'(u|b)?r?"""',e:'"""',c:[f],r:10},{cN:"string",b:"(u|r|ur)'",e:"'",c:[a.BE],r:10},{cN:"string",b:'(u|r|ur)"',e:'"',c:[a.BE],r:10},{cN:"string",b:"(b|br)'",e:"'",c:[a.BE]},{cN:"string",b:'(b|br)"',e:'"',c:[a.BE]}].concat([a.ASM,a.QSM]);var e={cN:"title",b:a.UIR};var d={cN:"params",b:"\\(",e:"\\)",c:["self",a.CNM,f].concat(c)};var b={bWK:true,e:":",i:"[${=;\\n]",c:[e,d],r:10};return{k:{keyword:"and elif is global as in if from raise for except finally print import pass return exec else break not with class assert yield try while continue del or def lambda nonlocal|10",built_in:"None True False Ellipsis NotImplemented"},i:"(</|->|\\?)",c:c.concat([f,a.HCM,a.inherit(b,{cN:"function",k:"def"}),a.inherit(b,{cN:"class",k:"class"}),a.CNM,{cN:"decorator",b:"@",e:"$"},{b:"\\b(print|exec)\\("}])}}(hljs);hljs.LANGUAGES.cmake=function(a){return{cI:true,k:"add_custom_command add_custom_target add_definitions add_dependencies add_executable add_library add_subdirectory add_test aux_source_directory break build_command cmake_minimum_required cmake_policy configure_file create_test_sourcelist define_property else elseif enable_language enable_testing endforeach endfunction endif endmacro endwhile execute_process export find_file find_library find_package find_path find_program fltk_wrap_ui foreach function get_cmake_property get_directory_property get_filename_component get_property get_source_file_property get_target_property get_test_property if include include_directories include_external_msproject include_regular_expression install link_directories load_cache load_command macro mark_as_advanced message option output_required_files project qt_wrap_cpp qt_wrap_ui remove_definitions return separate_arguments set set_directory_properties set_property set_source_files_properties set_target_properties set_tests_properties site_name source_group string target_link_libraries try_compile try_run unset variable_watch while build_name exec_program export_library_dependencies install_files install_programs install_targets link_libraries make_directory remove subdir_depends subdirs use_mangled_mesa utility_source variable_requires write_file",c:[{cN:"envvar",b:"\\${",e:"}"},a.HCM,a.QSM,a.NM]}}(hljs);hljs.LANGUAGES.lua=function(b){var a="\\[=*\\[";var e="\\]=*\\]";var c={b:a,e:e,c:["self"]};var d=[{cN:"comment",b:"--(?!"+a+")",e:"$"},{cN:"comment",b:"--"+a,e:e,c:[c],r:10}];return{l:b.UIR,k:{keyword:"and break do else elseif end false for if in local nil not or repeat return then true until while",built_in:"_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug io math os package string table"},c:d.concat([{cN:"function",bWK:true,e:"\\)",k:"function",c:[{cN:"title",b:"([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"},{cN:"params",b:"\\(",eW:true,c:d}].concat(d)},b.CNM,b.ASM,b.QSM,{cN:"string",b:a,e:e,c:[c],r:10}])}}(hljs);hljs.LANGUAGES.r=function(a){var b="([a-zA-Z]|\\.[a-zA-Z.])[a-zA-Z0-9._]*";return{c:[a.HCM,{b:b,l:b,k:{keyword:"function if in break next repeat else for return switch while try tryCatch|10 stop warning require library attach detach source setMethod setGeneric setGroupGeneric setClass ...|10",literal:"NULL NA TRUE FALSE T F Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10"},r:0},{cN:"number",b:"0[xX][0-9a-fA-F]+[Li]?\\b",r:0},{cN:"number",b:"\\d+(?:[eE][+\\-]?\\d*)?L\\b",r:0},{cN:"number",b:"\\d+\\.(?!\\d)(?:i\\b)?",r:0},{cN:"number",b:"\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d*)?i?\\b",r:0},{cN:"number",b:"\\.\\d+(?:[eE][+\\-]?\\d*)?i?\\b",r:0},{b:"`",e:"`",r:0},{cN:"string",b:'"',e:'"',c:[a.BE],r:0},{cN:"string",b:"'",e:"'",c:[a.BE],r:0}]}}(hljs);hljs.LANGUAGES.http=function(a){return{i:"\\S",c:[{cN:"status",b:"^HTTP/[0-9\\.]+",e:"$",c:[{cN:"number",b:"\\b\\d{3}\\b"}]},{cN:"request",b:"^[A-Z]+ (.*?) HTTP/[0-9\\.]+$",rB:true,e:"$",c:[{cN:"string",b:" ",e:" ",eB:true,eE:true}]},{cN:"attribute",b:"^\\w",e:": ",eE:true,i:"\\n|\\s|=",starts:{cN:"string",e:"$"}},{b:"\\n\\n",starts:{sL:"",eW:true}}]}}(hljs);hljs.LANGUAGES.mel=function(a){return{k:"int float string vector matrix if else switch case default while do for in break continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor animDisplay animView annotate appendStringArray applicationName applyAttrPreset applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem componentEditor compositingInterop computePolysetVolume condition cone confirmDialog connectAttr connectControl connectDynamic connectJoint connectionInfo constrain constrainValue constructionHistory container containsMultibyte contextInfo control convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse currentCtx currentTime currentTimeCtx currentUnit currentUnit curve curveAddPtCtx curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected displayColor displayCull displayLevelOfDetail displayPref displayRGBColor displaySmoothness displayStats displayString displaySurface distanceDimContext distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor editorTemplate effector emit emitter enableDevice encodeString endString endsWith env equivalent equivalentTol erf error eval eval evalDeferred evalEcho event exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo filetest filletCurve filter filterCurve filterExpand filterStudioImport findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss geometryConstraint getApplicationVersionAsFloat getAttr getClassification getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation listNodeTypes listPanelCategories listRelatives listSets listTransforms listUnselected listerEditor loadFluid loadNewShelf loadPlugin loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration panelHistory paramDimContext paramDimension paramLocator parent parentConstraint particle particleExists particleInstancer particleRenderInfo partition pasteKey pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE registerPluginResource rehash reloadImage removeJoint removeMultiInstance removePanelCategory rename renameAttr renameSelectionList renameUI render renderGlobalsNode renderInfo renderLayerButton renderLayerParent renderLayerPostProcess renderLayerUnparent renderManip renderPartition renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor renderWindowSelectContext renderer reorder reorderDeformers requires reroot resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType selectedNodes selectionConnection separator setAttr setAttrEnumResource setAttrMapping setAttrNiceNameResource setConstraintRestPosition setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField shortNameOf showHelp showHidden showManipCtx showSelectionInTitle showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString stringToStringArray strip stripPrefixFromName stroke subdAutoProjection subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList textToShelf textureDisplacePlane textureHairColor texturePlacementContext textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper trace track trackCtx transferAttributes transformCompare transformLimits translator trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform",i:"</",c:[a.CNM,a.ASM,a.QSM,{cN:"string",b:"`",e:"`",c:[a.BE]},{cN:"variable",b:"\\$\\d",r:5},{cN:"variable",b:"[\\$\\%\\@\\*](\\^\\w\\b|#\\w+|[^\\s\\w{]|{\\w+}|\\w+)"},a.CLCM,a.CBLCLM]}}(hljs);
define("highlightjs", function(){});

(function () {
  // A quick way to make sure we're only keeping span-level tags when we need to.
  // This isn't supposed to be foolproof. It's just a quick way to make sure we
  // keep all span-level tags returned by a pagedown converter. It should allow
  // all span-level tags through, with or without attributes.
  var inlineTags = new RegExp(['^(<\\/?(a|abbr|acronym|applet|area|b|basefont|',
                               'bdo|big|button|cite|code|del|dfn|em|figcaption|',
                               'font|i|iframe|img|input|ins|kbd|label|map|',
                               'mark|meter|object|param|progress|q|ruby|rp|rt|s|',
                               'samp|script|select|small|span|strike|strong|',
                               'sub|sup|textarea|time|tt|u|var|wbr)[^>]*>|',
                               '<(br)\\s?\\/?>)$'].join(''), 'i');

  /******************************************************************
   * Utility Functions                                              *
   *****************************************************************/

  // patch for ie7
  if (!Array.indexOf) {
    Array.prototype.indexOf = function(obj) {
      for (var i = 0; i < this.length; i++) {
        if (this[i] == obj) {
          return i;
        }
      }
      return -1;
    };
  }

  function trim(str) {
    return str.replace(/^\s+|\s+$/g, '');
  }

  function rtrim(str) {
    return str.replace(/\s+$/g, '');
  }

  // Remove one level of indentation from text. Indent is 4 spaces.
  function outdent(text) {
    return text.replace(new RegExp('^(\\t|[ ]{1,4})', 'gm'), '');
  }

  function contains(str, substr) {
    return str.indexOf(substr) != -1;
  }

  // Sanitize html, removing tags that aren't in the whitelist
  function sanitizeHtml(html, whitelist) {
    return html.replace(/<[^>]*>?/gi, function(tag) {
      return tag.match(whitelist) ? tag : '';
    });
  }

  // Merge two arrays, keeping only unique elements.
  function union(x, y) {
    var obj = {};
    for (var i = 0; i < x.length; i++)
       obj[x[i]] = x[i];
    for (i = 0; i < y.length; i++)
       obj[y[i]] = y[i];
    var res = [];
    for (var k in obj) {
      if (obj.hasOwnProperty(k))
        res.push(obj[k]);
    }
    return res;
  }

  // JS regexes don't support \A or \Z, so we add sentinels, as Pagedown
  // does. In this case, we add the ascii codes for start of text (STX) and
  // end of text (ETX), an idea borrowed from:
  // https://github.com/tanakahisateru/js-markdown-extra
  function addAnchors(text) {
    if(text.charAt(0) != '\x02')
      text = '\x02' + text;
    if(text.charAt(text.length - 1) != '\x03')
      text = text + '\x03';
    return text;
  }

  // Remove STX and ETX sentinels.
  function removeAnchors(text) {
    if(text.charAt(0) == '\x02')
      text = text.substr(1);
    if(text.charAt(text.length - 1) == '\x03')
      text = text.substr(0, text.length - 1);
    return text;
  }

  // Convert markdown within an element, retaining only span-level tags
  function convertSpans(text, extra) {
    return sanitizeHtml(convertAll(text, extra), inlineTags);
  }

  // Convert internal markdown using the stock pagedown converter
  function convertAll(text, extra) {
    var result = extra.blockGamutHookCallback(text);
    // We need to perform these operations since we skip the steps in the converter
    result = unescapeSpecialChars(result);
    result = result.replace(/~D/g, "$$").replace(/~T/g, "~");
    result = extra.previousPostConversion(result);
    return result;
  }

  // Convert escaped special characters to HTML decimal entity codes.
  function processEscapes(text) {
    // Markdown extra adds two escapable characters, `:` and `|`
    // If escaped, we convert them to html entities so our
    // regexes don't recognize them. Markdown doesn't support escaping
    // the escape character, e.g. `\\`, which make this even simpler.
    return text.replace(/\\\|/g, '&#124;').replace(/\\:/g, '&#58;');
  }

  // Duplicated from PageDown converter
  function unescapeSpecialChars(text) {
    // Swap back in all the special characters we've hidden.
    text = text.replace(/~E(\d+)E/g, function(wholeMatch, m1) {
      var charCodeToReplace = parseInt(m1);
      return String.fromCharCode(charCodeToReplace);
    });
    return text;
  }
  
  function slugify(text) {
    return text.toLowerCase()
    .replace(/\s+/g, '-') // Replace spaces with -
    .replace(/[^\w\-]+/g, '') // Remove all non-word chars
    .replace(/\-\-+/g, '-') // Replace multiple - with single -
    .replace(/^-+/, '') // Trim - from start of text
    .replace(/-+$/, ''); // Trim - from end of text
  }

  /*****************************************************************************
   * Markdown.Extra *
   ****************************************************************************/

  Markdown.Extra = function() {
    // For converting internal markdown (in tables for instance).
    // This is necessary since these methods are meant to be called as
    // preConversion hooks, and the Markdown converter passed to init()
    // won't convert any markdown contained in the html tags we return.
    this.converter = null;

    // Stores html blocks we generate in hooks so that
    // they're not destroyed if the user is using a sanitizing converter
    this.hashBlocks = [];
    
    // Stores footnotes
    this.footnotes = {};
    this.usedFootnotes = [];

    // Special attribute blocks for fenced code blocks and headers enabled.
    this.attributeBlocks = false;

    // Fenced code block options
    this.googleCodePrettify = false;
    this.highlightJs = false;

    // Table options
    this.tableClass = '';

    this.tabWidth = 4;
  };

  Markdown.Extra.init = function(converter, options) {
    // Each call to init creates a new instance of Markdown.Extra so it's
    // safe to have multiple converters, with different options, on a single page
    var extra = new Markdown.Extra();
    var postNormalizationTransformations = [];
    var preBlockGamutTransformations = [];
    var postConversionTransformations = ["unHashExtraBlocks"];

    options = options || {};
    options.extensions = options.extensions || ["all"];
    if (contains(options.extensions, "all")) {
      options.extensions = ["tables", "fenced_code_gfm", "def_list", "attr_list", "footnotes", "smartypants"];
    }
    preBlockGamutTransformations.push("wrapHeaders");
    if (contains(options.extensions, "attr_list")) {
      postNormalizationTransformations.push("hashFcbAttributeBlocks");
      preBlockGamutTransformations.push("hashHeaderAttributeBlocks");
      postConversionTransformations.push("applyAttributeBlocks");
      extra.attributeBlocks = true;
    }
    if (contains(options.extensions, "fenced_code_gfm")) {
      postNormalizationTransformations.push("fencedCodeBlocks");
    }
    if (contains(options.extensions, "tables")) {
      preBlockGamutTransformations.push("tables");
    }
    if (contains(options.extensions, "def_list")) {
      preBlockGamutTransformations.push("definitionLists");
    }
    if (contains(options.extensions, "footnotes")) {
      postNormalizationTransformations.push("stripFootnoteDefinitions");
      preBlockGamutTransformations.push("doFootnotes");
      postConversionTransformations.push("printFootnotes");
    }
    if (contains(options.extensions, "smartypants")) {
      postConversionTransformations.push("runSmartyPants");
    }
    
    converter.hooks.chain("postNormalization", function(text) {
      return extra.doTransform(postNormalizationTransformations, text) + '\n';
    });

    converter.hooks.chain("preBlockGamut", function(text, blockGamutHookCallback) {
      // Keep a reference to the block gamut callback to run recursively
      extra.blockGamutHookCallback = blockGamutHookCallback;
      text = processEscapes(text);
      return extra.doTransform(preBlockGamutTransformations, text) + '\n';
    });

    // Keep a reference to the hook chain running before doPostConversion to apply on hashed extra blocks
    extra.previousPostConversion = converter.hooks.postConversion;
    converter.hooks.chain("postConversion", function(text) {
      text = extra.doTransform(postConversionTransformations, text);
      // Clear state vars that may use unnecessary memory
      extra.hashBlocks = [];
      extra.footnotes = {};
      extra.usedFootnotes = [];
      return text;
    });

    if ("highlighter" in options) {
      extra.googleCodePrettify = options.highlighter === 'prettify';
      extra.highlightJs = options.highlighter === 'highlight';
    }

    if ("table_class" in options) {
      extra.tableClass = options.table_class;
    }

    extra.converter = converter;

    // Caller usually won't need this, but it's handy for testing.
    return extra;
  };

  // Do transformations
  Markdown.Extra.prototype.doTransform = function(transformations, text) {
    for(var i = 0; i < transformations.length; i++)
      text = this[transformations[i]](text);
    return text;
  };

  // Return a placeholder containing a key, which is the block's index in the
  // hashBlocks array. We wrap our output in a <p> tag here so Pagedown won't.
  Markdown.Extra.prototype.hashExtraBlock = function(block) {
    return '\n<p>~X' + (this.hashBlocks.push(block) - 1) + 'X</p>\n';
  };
  Markdown.Extra.prototype.hashExtraInline = function(block) {
    return '~X' + (this.hashBlocks.push(block) - 1) + 'X';
  };
  
  // Replace placeholder blocks in `text` with their corresponding
  // html blocks in the hashBlocks array.
  Markdown.Extra.prototype.unHashExtraBlocks = function(text) {
    var self = this;
    function recursiveUnHash() {
      var hasHash = false;
      text = text.replace(/(?:<p>)?~X(\d+)X(?:<\/p>)?/g, function(wholeMatch, m1) {
        hasHash = true;
        var key = parseInt(m1, 10);
        return self.hashBlocks[key];
      });
      if(hasHash === true) {
        recursiveUnHash();
      }
    }
    recursiveUnHash();
    return text;
  };
  
  // Wrap headers to make sure they won't be in def lists
  Markdown.Extra.prototype.wrapHeaders = function(text) {
    function wrap(text) {
      return '\n' + text + '\n';
    }
    text = text.replace(/^.+[ \t]*\n=+[ \t]*\n+/gm, wrap);
    text = text.replace(/^.+[ \t]*\n-+[ \t]*\n+/gm, wrap);
    text = text.replace(/^\#{1,6}[ \t]*.+?[ \t]*\#*\n+/gm, wrap);
    return text;
  };


  /******************************************************************
   * Attribute Blocks                                               *
   *****************************************************************/

  // Extract headers attribute blocks, move them above the element they will be
  // applied to, and hash them for later.
  Markdown.Extra.prototype.hashHeaderAttributeBlocks = function(text) {
    // TODO: use sentinels. Should we just add/remove them in doConversion?
    // TODO: better matches for id / class attributes
    var attrBlock = "\\{\\s*[.|#][^}]+\\}";
    var hdrAttributesA = new RegExp("^(#{1,6}.*#{0,6})\\s+(" + attrBlock + ")[ \\t]*(\\n|0x03)", "gm");
    var hdrAttributesB = new RegExp("^(.*)\\s+(" + attrBlock + ")[ \\t]*\\n" +
      "(?=[\\-|=]+\\s*(\\n|0x03))", "gm"); // underline lookahead
    
    var self = this;
    function attributeCallback(wholeMatch, pre, attr) {
      return '<p>~XX' + (self.hashBlocks.push(attr) - 1) + 'XX</p>\n' + pre + "\n";
    }

    text = text.replace(hdrAttributesA, attributeCallback);  // ## headers
    text = text.replace(hdrAttributesB, attributeCallback);  // underline headers
    return text;
  };
  
  // Extract FCB attribute blocks, move them above the element they will be
  // applied to, and hash them for later.
  Markdown.Extra.prototype.hashFcbAttributeBlocks = function(text) {
    // TODO: use sentinels. Should we just add/remove them in doConversion?
    // TODO: better matches for id / class attributes
    var attrBlock = "\\{\\s*[.|#][^}]+\\}";
    var fcbAttributes =  new RegExp("^(```[^{\\n]*)\\s+(" + attrBlock + ")[ \\t]*\\n" +
                                    "(?=([\\s\\S]*?)\\n```\\s*(\\n|0x03))", "gm");

    var self = this;
    function attributeCallback(wholeMatch, pre, attr) {
      return '<p>~XX' + (self.hashBlocks.push(attr) - 1) + 'XX</p>\n' + pre + "\n";
    }

    return text.replace(fcbAttributes, attributeCallback);
  };

  Markdown.Extra.prototype.applyAttributeBlocks = function(text) {
    var self = this;
    var blockRe = new RegExp('<p>~XX(\\d+)XX</p>[\\s]*' +
                             '(?:<(h[1-6]|pre)(?: +class="(\\S+)")?(>[\\s\\S]*?</\\2>))', "gm");
    text = text.replace(blockRe, function(wholeMatch, k, tag, cls, rest) {
      if (!tag) // no following header or fenced code block.
        return '';

      // get attributes list from hash
      var key = parseInt(k, 10);
      var attributes = self.hashBlocks[key];

      // get id
      var id = attributes.match(/#[^\s{}]+/g) || [];
      var idStr = id[0] ? ' id="' + id[0].substr(1, id[0].length - 1) + '"' : '';

      // get classes and merge with existing classes
      var classes = attributes.match(/\.[^\s{}]+/g) || [];
      for (var i = 0; i < classes.length; i++) // Remove leading dot
        classes[i] = classes[i].substr(1, classes[i].length - 1);

      var classStr = '';
      if (cls)
        classes = union(classes, [cls]);

      if (classes.length > 0)
        classStr = ' class="' + classes.join(' ') + '"';

      return "<" + tag + idStr + classStr + rest;
    });

    return text;
  };

  /******************************************************************
   * Tables                                                         *
   *****************************************************************/

  // Find and convert Markdown Extra tables into html.
  Markdown.Extra.prototype.tables = function(text) {
    var self = this;

    var leadingPipe = new RegExp(
      ['^'                         ,
       '[ ]{0,3}'                  , // Allowed whitespace
       '[|]'                       , // Initial pipe
       '(.+)\\n'                   , // $1: Header Row

       '[ ]{0,3}'                  , // Allowed whitespace
       '[|]([ ]*[-:]+[-| :]*)\\n'  , // $2: Separator

       '('                         , // $3: Table Body
         '(?:[ ]*[|].*\\n?)*'      , // Table rows
       ')',
       '(?:\\n|$)'                   // Stop at final newline
      ].join(''),
      'gm'
    );

    var noLeadingPipe = new RegExp(
      ['^'                         ,
       '[ ]{0,3}'                  , // Allowed whitespace
       '(\\S.*[|].*)\\n'           , // $1: Header Row

       '[ ]{0,3}'                  , // Allowed whitespace
       '([-:]+[ ]*[|][-| :]*)\\n'  , // $2: Separator

       '('                         , // $3: Table Body
         '(?:.*[|].*\\n?)*'        , // Table rows
       ')'                         ,
       '(?:\\n|$)'                   // Stop at final newline
      ].join(''),
      'gm'
    );

    text = text.replace(leadingPipe, doTable);
    text = text.replace(noLeadingPipe, doTable);

    // $1 = header, $2 = separator, $3 = body
    function doTable(match, header, separator, body, offset, string) {
      // remove any leading pipes and whitespace
      header = header.replace(/^ *[|]/m, '');
      separator = separator.replace(/^ *[|]/m, '');
      body = body.replace(/^ *[|]/gm, '');

      // remove trailing pipes and whitespace
      header = header.replace(/[|] *$/m, '');
      separator = separator.replace(/[|] *$/m, '');
      body = body.replace(/[|] *$/gm, '');

      // determine column alignments
      alignspecs = separator.split(/ *[|] */);
      align = [];
      for (var i = 0; i < alignspecs.length; i++) {
        var spec = alignspecs[i];
        if (spec.match(/^ *-+: *$/m))
          align[i] = ' style="text-align:right;"';
        else if (spec.match(/^ *:-+: *$/m))
          align[i] = ' style="text-align:center;"';
        else if (spec.match(/^ *:-+ *$/m))
          align[i] = ' style="text-align:left;"';
        else align[i] = '';
      }

      // TODO: parse spans in header and rows before splitting, so that pipes
      // inside of tags are not interpreted as separators
      var headers = header.split(/ *[|] */);
      var colCount = headers.length;

      // build html
      var cls = self.tableClass ? ' class="' + self.tableClass + '"' : '';
      var html = ['<table', cls, '>\n', '<thead>\n', '<tr>\n'].join('');

      // build column headers.
      for (i = 0; i < colCount; i++) {
        var headerHtml = convertSpans(trim(headers[i]), self);
        html += ["  <th", align[i], ">", headerHtml, "</th>\n"].join('');
      }
      html += "</tr>\n</thead>\n";

      // build rows
      var rows = body.split('\n');
      for (i = 0; i < rows.length; i++) {
        if (rows[i].match(/^\s*$/)) // can apply to final row
          continue;

        // ensure number of rowCells matches colCount
        var rowCells = rows[i].split(/ *[|] */);
        var lenDiff = colCount - rowCells.length;
        for (var j = 0; j < lenDiff; j++)
          rowCells.push('');

        html += "<tr>\n";
        for (j = 0; j < colCount; j++) {
          var colHtml = convertSpans(trim(rowCells[j]), self);
          html += ["  <td", align[j], ">", colHtml, "</td>\n"].join('');
        }
        html += "</tr>\n";
      }

      html += "</table>\n";

      // replace html with placeholder until postConversion step
      return self.hashExtraBlock(html);
    }

    return text;
  };


  /******************************************************************
   * Footnotes                                                      *
   *****************************************************************/
  
  // Strip footnote, store in hashes.
  Markdown.Extra.prototype.stripFootnoteDefinitions = function(text) {
    var self = this;

    text = text.replace(
      /\n[ ]{0,3}\[\^(.+?)\]\:[ \t]*\n?([\s\S]*?)\n{1,2}((?=\n[ ]{0,3}\S)|$)/g,
      function(wholeMatch, m1, m2) {
        m1 = slugify(m1);
        m2 += "\n";
        m2 = m2.replace(/^[ ]{0,3}/g, "");
        self.footnotes[m1] = m2;
        return "\n";
      });

    return text;
  };
  

  // Find and convert footnotes references.
  Markdown.Extra.prototype.doFootnotes = function(text) {
    var self = this;
    if(self.isConvertingFootnote === true) {
      return text;
    }

    var footnoteCounter = 0;
    text = text.replace(/\[\^(.+?)\]/g, function(wholeMatch, m1) {
      var id = slugify(m1);
      var footnote = self.footnotes[id];
      if (footnote === undefined) {
        return wholeMatch;
      }
      footnoteCounter++;
      self.usedFootnotes.push(id);
      var html = '<a href="#fn:' + id + '" id="fnref:' + id
      + '" title="See footnote" class="footnote">' + footnoteCounter
      + '</a>';
      return self.hashExtraInline(html);
    });

    return text;
  };

  // Print footnotes at the end of the document
  Markdown.Extra.prototype.printFootnotes = function(text) {
    var self = this;

    if (self.usedFootnotes.length === 0) {
      return text;
    }

    text += '\n\n<div class="footnotes">\n<hr>\n<ol>\n\n';
    for(var i=0; i<self.usedFootnotes.length; i++) {
      var id = self.usedFootnotes[i];
      var footnote = self.footnotes[id];
      self.isConvertingFootnote = true;
      var formattedfootnote = convertSpans(footnote, self);
      delete self.isConvertingFootnote;
      text += '<li id="fn:'
        + id
        + '">'
        + formattedfootnote
        + ' <a href="#fnref:'
        + id
        + '" title="Return to article" class="reversefootnote">&#8617;</a></li>\n\n';
    }
    text += '</ol>\n</div>';
    return text;
  };
  
  
  /******************************************************************
  * Fenced Code Blocks  (gfm)                                       *
  ******************************************************************/

  // Find and convert gfm-inspired fenced code blocks into html.
  Markdown.Extra.prototype.fencedCodeBlocks = function(text) {
    function encodeCode(code) {
      code = code.replace(/&/g, "&amp;");
      code = code.replace(/</g, "&lt;");
      code = code.replace(/>/g, "&gt;");
      // These were escaped by PageDown before postNormalization 
      code = code.replace(/~D/g, "$$");
      code = code.replace(/~T/g, "~");
      return code;
    }

    var self = this;
    text = text.replace(/(?:^|\n)```(.*)\n([\s\S]*?)\n```/g, function(match, m1, m2) {
      var language = m1, codeblock = m2;

      // adhere to specified options
      var preclass = self.googleCodePrettify ? ' class="prettyprint"' : '';
      var codeclass = '';
      if (language) {
        if (self.googleCodePrettify || self.highlightJs) {
          // use html5 language- class names. supported by both prettify and highlight.js
          codeclass = ' class="language-' + language + '"';
        } else {
          codeclass = ' class="' + language + '"';
        }
      }

      var html = ['<pre', preclass, '><code', codeclass, '>',
                  encodeCode(codeblock), '</code></pre>'].join('');

      // replace codeblock with placeholder until postConversion step
      return self.hashExtraBlock(html);
    });

    return text;
  };


  /******************************************************************
  * SmartyPants                                                     *
  ******************************************************************/
  
  var educatePants = function(wholeMatch,m1,m2,m3,m4,m5,m6) {
    var blockText = m5;
    var blockOffset = 0;
    var newBlockText = '';
    blockText.replace(/(<)([a-zA-Z1-6]*)([^\n>]?)(>)(.*?)(<\/\2>)/mg, function(wholeMatch,m1,m2,m3,m4,m5,m6,offset) {
      newBlockText += applyPants(blockText.substring(blockOffset, offset)) + educatePants(wholeMatch,m1,m2,m3,m4,m5,m6);
      blockOffset = offset + wholeMatch.length;
    });
    newBlockText += applyPants(blockText.substring(blockOffset));
    return m1 + m2 + m3 + m4 + newBlockText + m6;
  };
    
  function revertPants(wholeMatch, m1) {
    var blockText = m1;
    blockText = blockText.replace(/&\#8220;/g, "\"");
    blockText = blockText.replace(/&\#8221;/g, "\"");
    blockText = blockText.replace(/&\#8216;/g, "'");
    blockText = blockText.replace(/&\#8217;/g, "'");
    blockText = blockText.replace(/&\#8212;/g, "--");
    blockText = blockText.replace(/&\#8211;/g, "---");
    blockText = blockText.replace(/&\#8230;/g, "...");
    return blockText;
  }
  
  function applyPants(text) {
    text = text.replace(/``/g, "&#8220;").replace (/''/g, "&#8221;");
    text = text.replace(/---/g, "&#8212;").replace(/--/g, "&#8211;");
    text = text.replace(/\.\.\./g, "&#8230;").replace(/\.\s\.\s\./g, "&#8230;");
    
    text = text.replace (/^'(?=[!"#\$\%'()*+,\-.\/:;<=>?\@\[\\]\^_`{|}~]\B)/g, "&#8216;");
    text = text.replace (/^"(?=[!"#\$\%'()*+,\-.\/:;<=>?\@\[\\]\^_`{|}~]\B)/g, "&#8220;");
    text = text.replace(/^"(?=\w)/g, "&#8220;");
    text = text.replace(/^'(?=\w)/g, "&#8216;");

    text = text.replace(/"'(?=\w)/g, "&#8220;&#8216;");
    text = text.replace(/'"(?=\w)/g, "&#8216;&#8220;");

    // Special case for decade abbreviations (the '80s):
    text = text.replace(/'(?=\d{2}s)/g, "&#8217;");
    text = text.replace(/(>|\t|\n|\s|&nbsp;|--|&[mn]dash;|&\#8211;|&\#8212;|&\#x201[34];)'(?=\w)/g, "$1&#8216;");
    text = text.replace(/([^<>\\ \t\r\n\[\{\(\-])'(?=\s | s\b)/g, "$1&#8217;");

    // Any remaining single quotes should be opening ones:
    text = text.replace(/`/g, "&#8216;").replace(/'/g, "&#8217;");
    text = text.replace(/(>|\t|\n|\s|&nbsp;|--|&[mn]dash;|&\#8211;|&\#8212;|&\#x201[34];)"(?=\w)/g, "$1&#8220;");
    text = text.replace(/([^<>\\ \t\r\n\[\{\(\-])"(?=\s | s\b)/g, "$1&#8221;");
    
    text = text.replace(/"/ig, "&#8221;");
    return text;
  }

  // Find and convert markdown extra definition lists into html.
  Markdown.Extra.prototype.runSmartyPants = function(text) {
    text = text.replace(/(<)([a-zA-Z1-6]+)([^\n>]*?)(>)(.*?)(<\/\2>)/gm, educatePants);
    //clean everything inside html tags
    text = text.replace(/(<([a-zA-Z1-6]+)\b([^\n>]*?)(\/)?>)/g, revertPants);
    //clean out replacements inside special tags
    text = text.replace(/((<)(code|kbd|pre|script|noscript|iframe|math|ins|del|pre)(.?)(>)(.*?)(<\/)(code|kbd|pre|script|noscript|iframe|math|ins|del|pre)(>))/gm, revertPants);
    return text;
  };
  
  /******************************************************************
  * Definition Lists                                                *
  ******************************************************************/

  // Find and convert markdown extra definition lists into html.
  Markdown.Extra.prototype.definitionLists = function(text) {
    var wholeList = new RegExp(
      ['(\\x02\\n?|\\n\\n)'          ,
       '(?:'                         ,
         '('                         , // $1 = whole list
           '('                       , // $2
             '[ ]{0,3}'              ,
             '((?:[ \\t]*\\S.*\\n)+)', // $3 = defined term
             '\\n?'                  ,
             '[ ]{0,3}:[ ]+'         , // colon starting definition
           ')'                       ,
           '([\\s\\S]+?)'            ,
           '('                       , // $4
               '(?=\\0x03)'          , // \z
             '|'                     ,
               '(?='                 ,
                 '\\n{2,}'           ,
                 '(?=\\S)'           ,
                 '(?!'               , // Negative lookahead for another term
                   '[ ]{0,3}'        ,
                   '(?:\\S.*\\n)+?'  , // defined term
                   '\\n?'            ,
                   '[ ]{0,3}:[ ]+'   , // colon starting definition
                 ')'                 ,
                 '(?!'               , // Negative lookahead for another definition
                   '[ ]{0,3}:[ ]+'   , // colon starting definition
                 ')'                 ,
               ')'                   ,
           ')'                       ,
         ')'                         ,
       ')'
      ].join(''),
      'gm'
    );

    var self = this;
    text = addAnchors(text);

    text = text.replace(wholeList, function(match, pre, list) {
      var result = trim(self.processDefListItems(list));
      result = "<dl>\n" + result + "\n</dl>";
      return pre + self.hashExtraBlock(result) + "\n\n";
    });

    return removeAnchors(text);
  };

  // Process the contents of a single definition list, splitting it
  // into individual term and definition list items.
  Markdown.Extra.prototype.processDefListItems = function(listStr) {
    var self = this;

    var dt = new RegExp(
      ['(\\x02\\n?|\\n\\n+)'    , // leading line
       '('                      , // definition terms = $1
         '[ ]{0,3}'             , // leading whitespace
         '(?![:][ ]|[ ])'       , // negative lookahead for a definition
                                  //   mark (colon) or more whitespace
         '(?:\\S.*\\n)+?'       , // actual term (not whitespace)
       ')'                      ,
       '(?=\\n?[ ]{0,3}:[ ])'     // lookahead for following line feed
      ].join(''),                 //   with a definition mark
      'gm'
    );

    var dd = new RegExp(
      ['\\n(\\n+)?'              , // leading line = $1
       '('                       , // marker space = $2
         '[ ]{0,3}'              , // whitespace before colon
         '[:][ ]+'               , // definition mark (colon)
       ')'                       ,
       '([\\s\\S]+?)'            , // definition text = $3
       '(?=\\n*'                 , // stop at next definition mark,
         '(?:'                   , // next term or end of text
           '\\n[ ]{0,3}[:][ ]|'  ,
           '<dt>|\\x03'          , // \z
         ')'                     ,
       ')'
      ].join(''),
      'gm'
    );

    listStr = addAnchors(listStr);
    // trim trailing blank lines:
    listStr = listStr.replace(/\n{2,}(?=\\x03)/, "\n");

    // Process definition terms.
    listStr = listStr.replace(dt, function(match, pre, termsStr) {
      var terms = trim(termsStr).split("\n");
      var text = '';
      for (var i = 0; i < terms.length; i++) {
        var term = terms[i];
        // process spans inside dt
        term = convertSpans(trim(term), self);
        text += "\n<dt>" + term + "</dt>";
      }
      return text + "\n";
    });

    // Process actual definitions.
    listStr = listStr.replace(dd, function(match, leadingLine, markerSpace, def) {
      if (leadingLine || def.match(/\n{2,}/)) {
        // replace marker with the appropriate whitespace indentation
        def = Array(markerSpace.length + 1).join(' ') + def;
        // process markdown inside definition
        // TODO?: currently doesn't apply extensions
        def = outdent(def) + "\n\n";
        def = "\n" + convertAll(def, self) + "\n";
      } else {
        // convert span-level markdown inside definition
        def = rtrim(def);
        def = convertSpans(outdent(def), self);
      }

      return "\n<dd>" + def + "</dd>\n";
    });

    return removeAnchors(listStr);
  };

})();


define("pagedown-extra", function(){});

define('extensions/markdownExtra',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "text!html/markdownExtraSettingsBlock.html",
    'pagedown-extra',
], function($, _, utils, Extension, markdownExtraSettingsBlockHTML) {

    var markdownExtra = new Extension("markdownExtra", "Markdown Extra", true);
    markdownExtra.settingsBlock = markdownExtraSettingsBlockHTML;
    markdownExtra.defaultConfig = {
        extensions: [
            "fenced_code_gfm",
            "tables",
            "def_list",
            "attr_list",
            "footnotes",
            "smartypants",
        ],
        highlighter: "prettify"
    };

    markdownExtra.onLoadSettings = function() {
        function hasExtension(extensionName) {
            return _.some(markdownExtra.config.extensions, function(extension) {
                return extension == extensionName;
            });
        }
        utils.setInputChecked("#input-markdownextra-fencedcodegfm", hasExtension("fenced_code_gfm"));
        utils.setInputChecked("#input-markdownextra-tables", hasExtension("tables"));
        utils.setInputChecked("#input-markdownextra-deflist", hasExtension("def_list"));
        utils.setInputChecked("#input-markdownextra-attrlist", hasExtension("attr_list"));
        utils.setInputChecked("#input-markdownextra-footnotes", hasExtension("footnotes"));
        utils.setInputChecked("#input-markdownextra-smartypants", hasExtension("smartypants"));
        utils.setInputValue("#input-markdownextra-highlighter", markdownExtra.config.highlighter);
    };

    markdownExtra.onSaveSettings = function(newConfig, event) {
        newConfig.extensions = [];
        utils.getInputChecked("#input-markdownextra-fencedcodegfm") && newConfig.extensions.push("fenced_code_gfm");
        utils.getInputChecked("#input-markdownextra-tables") && newConfig.extensions.push("tables");
        utils.getInputChecked("#input-markdownextra-deflist") && newConfig.extensions.push("def_list");
        utils.getInputChecked("#input-markdownextra-attrlist") && newConfig.extensions.push("attr_list");
        utils.getInputChecked("#input-markdownextra-footnotes") && newConfig.extensions.push("footnotes");
        utils.getInputChecked("#input-markdownextra-smartypants") && newConfig.extensions.push("smartypants");
        newConfig.highlighter = utils.getInputValue("#input-markdownextra-highlighter");
    };

    var eventMgr = undefined;
    markdownExtra.onEventMgrCreated = function(eventMgrParameter) {
        eventMgr = eventMgrParameter;
    };

    markdownExtra.onPagedownConfigure = function(editor) {
        var converter = editor.getConverter();
        var options = {
            extensions: markdownExtra.config.extensions
        };
        if(markdownExtra.config.highlighter == "highlight") {
            options.highlighter = "prettify";
            var previewContentsElt = document.getElementById('preview-contents');
            editor.hooks.chain("onPreviewRefresh", function() {
                _.each(previewContentsElt.querySelectorAll('.prettyprint'), function(elt) {
                    hljs.highlightBlock(elt);
                });
            });
        }
        else if(markdownExtra.config.highlighter == "prettify") {
            options.highlighter = "prettify";
            editor.hooks.chain("onPreviewRefresh", prettyPrint);
        }
        Markdown.Extra.init(converter, options);

        // Send extensions list to other extensions
        eventMgr.onExtraExtensions(markdownExtra.config.extensions);
    };

    return markdownExtra;
});
define('text!html/buttonToc.html',[],function () { return '<button class="btn btn-default dropdown-toggle" title="Table of contents" data-toggle="dropdown">\n    <i class="icon-list"></i>\n</button>\n<div class="dropdown-menu pull-right">\n    <h3>Table of contents</h3>\n    <div class="table-of-contents">\n    </div>\n</div>\n';});

define('text!html/tocSettingsBlock.html',[],function () { return '<p>Generates a table of contents when a [TOC] marker is found.</p>\n<div class="form-horizontal">\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label" for="input-toc-marker">Marker\n\t\t\tRegExp</label>\n\t\t<div class="col-lg-7">\n\t\t\n\t\t\t<input type="text" id="input-toc-marker" class="col-lg-4 form-control">\n\t\t</div>\n\t</div>\n\t<div class="form-group">\n        <label class="col-lg-4 control-label" for="input-toc-button">Button over preview</label>\n        <div class="col-lg-7">\n        <div class="checkbox">\n            <input type="checkbox" id="input-toc-button">\n            </div>\n        </div>\n    </div>\n\t\n</div>';});

define('extensions/toc',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "text!html/buttonToc.html",
    "text!html/tocSettingsBlock.html",
], function($, _, utils, Extension, buttonTocHTML, tocSettingsBlockHTML) {

    var toc = new Extension("toc", "Table of Contents", true);
    toc.settingsBlock = tocSettingsBlockHTML;
    toc.defaultConfig = {
        marker: "\\[(TOC|toc)\\]",
        button: true,
    };

    toc.onLoadSettings = function() {
        utils.setInputValue("#input-toc-marker", toc.config.marker);
        utils.setInputChecked("#input-toc-button", toc.config.button);
    };

    toc.onSaveSettings = function(newConfig, event) {
        newConfig.marker = utils.getInputRegExpValue("#input-toc-marker", event);
        newConfig.button = utils.getInputChecked("#input-toc-button");
    };

    toc.onCreatePreviewButton = function() {
        if(toc.config.button) {
            return buttonTocHTML;
        }
    };

    // TOC element description
    function TocElement(tagName, anchor, text) {
        this.tagName = tagName;
        this.anchor = anchor;
        this.text = text;
        this.children = [];
    }
    TocElement.prototype.childrenToString = function() {
        if(this.children.length === 0) {
            return "";
        }
        var result = "<ul>\n";
        _.each(this.children, function(child) {
            result += child.toString();
        });
        result += "</ul>\n";
        return result;
    };
    TocElement.prototype.toString = function() {
        var result = "<li>";
        if(this.anchor && this.text) {
            result += '<a href="#' + this.anchor + '">' + this.text + '</a>';
        }
        result += this.childrenToString() + "</li>\n";
        return result;
    };

    // Transform flat list of TocElement into a tree
    function groupTags(array, level) {
        level = level || 1;
        var tagName = "H" + level;
        var result = [];

        var currentElement = undefined;
        function pushCurrentElement() {
            if(currentElement !== undefined) {
                if(currentElement.children.length > 0) {
                    currentElement.children = groupTags(currentElement.children, level + 1);
                }
                result.push(currentElement);
            }
        }

        _.each(array, function(element, index) {
            if(element.tagName != tagName) {
                if(currentElement === undefined) {
                    currentElement = new TocElement();
                }
                currentElement.children.push(element);
            }
            else {
                pushCurrentElement();
                currentElement = element;
            }
        });
        pushCurrentElement();
        return result;
    }

    // Build the TOC
    var previewContentsElt = undefined;
    function buildToc() {
        var anchorList = {};
        function createAnchor(element) {
            var id = element.id || utils.slugify(element.textContent) || 'title';
            var anchor = id;
            var index = 0;
            while (_.has(anchorList, anchor)) {
                anchor = id + "-" + (++index);
            }
            anchorList[anchor] = true;
            // Update the id of the element
            element.id = anchor;
            return anchor;
        }

        var elementList = [];
        _.each(previewContentsElt.querySelectorAll('.preview-content > .wmd-title'), function(elt) {
            elementList.push(new TocElement(elt.tagName, createAnchor(elt), elt.textContent));
        });
        elementList = groupTags(elementList);
        return '<div class="toc">\n<ul>\n' + elementList.join("") + '</ul>\n</div>\n';
    }

    toc.onPagedownConfigure = function(editor) {
        previewContentsElt = document.getElementById('preview-contents');
        var tocEltList = document.querySelectorAll('.table-of-contents');
        var tocExp = new RegExp("^" + toc.config.marker + "$", "g");
        // Run TOC generation when conversion is finished directly on HTML
        editor.hooks.chain("onPreviewRefresh", function() {
            var htmlToc = buildToc();
            // Replace toc paragraphs
            _.each(previewContentsElt.getElementsByTagName('p'), function(elt) {
                if(tocExp.test(elt.innerHTML)) {
                    elt.innerHTML = htmlToc;
                }
            });
            // Add toc in the TOC button 
            _.each(tocEltList, function(elt) {
                elt.innerHTML = htmlToc;
            });
        });
    };

    return toc;
});

define('text!html/mathJaxSettingsBlock.html',[],function () { return '<p>Allows StackEdit to interpret LaTeX mathematical expressions.</p>\n<div class="form-horizontal">\n    <div class="form-group">\n        <label class="col-lg-4 control-label"\n            for="input-mathjax-config-tex">TeX configuration</label>\n        <div class="col-lg-7">\n            <input type="text" id="input-mathjax-config-tex" class="form-control">\n        </div>\n    </div>\n    <div class="form-group">\n        <label class="col-lg-4 control-label"\n            for="input-mathjax-config-tex2jax">tex2jax configuration</label>\n        <div class="col-lg-7">\n            <input type="text" id="input-mathjax-config-tex2jax" class="form-control">\n        </div>\n    </div>\n</div>\n<span class="help-block pull-right"><a target="_blank" href="http://docs.mathjax.org/en/latest/options/index.html">More info</a></span>';});

define('text!libs/mathjax_config.js',[],function () { return 'MathJax.Hub.Config({\n    "HTML-CSS": {\n        preferredFont: "TeX",\n        availableFonts: [\n            "STIX",\n            "TeX"\n        ],\n        linebreaks: {\n            automatic: true\n        },\n        EqnChunk: 10,\n        imageFont: null\n    },\n    tex2jax: <%= tex2jax || \'{ inlineMath: [["$","$"],["\\\\\\\\\\\\\\\\(","\\\\\\\\\\\\\\\\)"]], displayMath: [["$$","$$"],["\\\\\\\\[","\\\\\\\\]"]], processEscapes: true }\' %>,\n    TeX: $.extend({\n        noUndefined: {\n            attributes: {\n                mathcolor: "red",\n                mathbackground: "#FFEEEE",\n                mathsize: "90%"\n            }\n        },\n        Safe: {\n            allow: {\n                URLs: "safe",\n                classes: "safe",\n                cssIDs: "safe",\n                styles: "safe",\n                fontsize: "all"\n            }\n        }\n    }, <%= tex %>),\n    messageStyle: "none"\n});\n';});

define('libs/mathjax_init',[
    "settings",
    "text!libs/mathjax_config.js"
], function(settings, mathjaxConfigJS) {
    var script = document.createElement('script');
    script.type = 'text/x-mathjax-config';
    script.innerHTML = _.template(mathjaxConfigJS, {
        tex: settings.extensionSettings.mathJax ? settings.extensionSettings.mathJax.tex : 'undefined',
        tex2jax: settings.extensionSettings.mathJax ? settings.extensionSettings.mathJax.tex2jax : undefined
    });
    document.getElementsByTagName('head')[0].appendChild(script);
});
define('extensions/mathJax',[
    "utils",
    "classes/Extension",
    "text!html/mathJaxSettingsBlock.html",
    "mathjax",
], function(utils, Extension, mathJaxSettingsBlockHTML) {
	
	var mathJax = new Extension("mathJax", "MathJax", true);
	mathJax.settingsBlock = mathJaxSettingsBlockHTML;
    mathJax.defaultConfig = {
        tex: "{}",
        tex2jax: '{ inlineMath: [["$","$"],["\\\\\\\\(","\\\\\\\\)"]], displayMath: [["$$","$$"],["\\\\[","\\\\]"]], processEscapes: true }'
    };

    mathJax.onLoadSettings = function() {
        utils.setInputValue("#input-mathjax-config-tex", mathJax.config.tex);
        utils.setInputValue("#input-mathjax-config-tex2jax", mathJax.config.tex2jax);
    };

    mathJax.onSaveSettings = function(newConfig, event) {
        newConfig.tex = utils.getInputJsValue("#input-mathjax-config-tex", event);
        newConfig.tex2jax = utils.getInputJsValue("#input-mathjax-config-tex2jax", event);
    };
    
    mathJax.onPagedownConfigure = function(editorObject) {
        t = document.getElementById("preview-contents");

        var converter = editorObject.getConverter();
        converter.hooks.chain("preConversion", p);
        converter.hooks.chain("postConversion", d);
    };
    
    var afterRefreshCallback = undefined;
    mathJax.onAsyncPreview = function(callback) {
        afterRefreshCallback = callback;
        j();
    };
    
    // From math.stackexchange.com...

    function b(a, f, b) {
        var c = k.slice(a, f + 1).join("").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        for (h.Browser.isMSIE && (c = c.replace(/(%[^\n]*)\n/g, "$1<br/>\n")); f > a; )
            k[f] = "", f--;
        k[a] = "@@" + m.length + "@@";
        b && (c = b(c));
        m.push(c);
        i = o = l = null
    }
    function p(a) {
        i = o = l = null;
        m = [];
        var f;
        /`/.test(a) ? (a = a.replace(/~/g, "~T").replace(/(^|[^\\])(`+)([^\n]*?[^`\n])\2(?!`)/gm, function(a) {
            return a.replace(/\$/g, "~D")
        }), f = function(a) {
            return a.replace(/~([TD])/g, 
            function(a, c) {
                return {T: "~",D: "$"}[c]
            })
        }) : f = function(a) {
            return a
        };
        k = r(a.replace(/\r\n?/g, "\n"), u);
        for (var a = 1, d = k.length; a < d; a += 2) {
            var c = k[a];
            "@" === c.charAt(0) ? (k[a] = "@@" + m.length + "@@", m.push(c)) : i ? c === o ? n ? l = a : b(i, a, f) : c.match(/\n.*\n/) ? (l && (a = l, b(i, a, f)), i = o = l = null, n = 0) : "{" === c ? n++ : "}" === c && n && n-- : c === s || "$$" === c ? (i = a, o = c, n = 0) : "begin" === c.substr(1, 5) && (i = a, o = "\\end" + c.substr(6), n = 0)
        }
        l && b(i, l, f);
        return f(k.join(""))
    }
    function d(a) {
        a = a.replace(/@@(\d+)@@/g, function(a, b) {
            return m[b]
        });
        m = null;
        return a
    }
    function e() {
        q = !1;
        h.cancelTypeset = !1;
        h.Queue(["Typeset", h, t])
        h.Queue(afterRefreshCallback);
    }
    function j() {
        !q && /*benweet (we need to call our afterRefreshCallback) g &&*/ (q = !0, h.Cancel(), h.Queue(e))
    }
    var g = !1, q = !1, t = null, s = "$", k, i, o, l, n, m, h = MathJax.Hub;
    h.Queue(function() {
        g = !0;
        h.processUpdateTime = 50;
        h.Config({"HTML-CSS": {EqnChunk: 10,EqnChunkFactor: 1},SVG: {EqnChunk: 10,EqnChunkFactor: 1}})
    });
    var u = /(\$\$?|\\(?:begin|end)\{[a-z]*\*?\}|\\[\\{}$]|[{}]|(?:\n\s*)+|@@\d+@@)/i, r;
    r = 3 === "aba".split(/(b)/).length ? function(a, f) {
        return a.split(f)
    } : function(a, f) {
        var b = [], c;
        if (!f.global) {
            c = f.toString();
            var d = "";
            c = c.replace(/^\/(.*)\/([im]*)$/, function(a, c, b) {
                d = b;
                return c
            });
            f = RegExp(c, d + "g")
        }
        for (var e = f.lastIndex = 0; c = f.exec(a); )
            b.push(a.substring(e, c.index)), b.push.apply(b, c.slice(1)), e = c.index + c[0].length;
        b.push(a.substring(e));
        return b
    };
    
    (function() {
        var b = MathJax.Hub;
        if (!b.Cancel) {
            b.cancelTypeset = !1;
            b.Register.StartupHook("HTML-CSS Jax Config", function() {
                var d = MathJax.OutputJax["HTML-CSS"], e = d.Translate;
                d.Augment({Translate: function(j, g) {
                        if (b.cancelTypeset || g.cancelled)
                            throw Error("MathJax Canceled");
                        return e.call(d, j, g)
                    }})
            });
            b.Register.StartupHook("SVG Jax Config", function() {
                var d = MathJax.OutputJax.SVG, e = d.Translate;
                d.Augment({Translate: function(j, g) {
                        if (b.cancelTypeset || g.cancelled)
                            throw Error("MathJax Canceled");
                        return e.call(d, 
                        j, g)
                    }})
            });
            b.Register.StartupHook("TeX Jax Config", function() {
                var d = MathJax.InputJax.TeX, e = d.Translate;
                d.Augment({Translate: function(j, g) {
                        if (b.cancelTypeset || g.cancelled)
                            throw Error("MathJax Canceled");
                        return e.call(d, j, g)
                    }})
            });
            var p = b.processError;
            b.processError = function(d, e, j) {
                if ("MathJax Canceled" !== d.message)
                    return p.call(b, d, e, j);
                MathJax.Message.Clear(0, 0);
                e.jaxIDs = [];
                e.jax = {};
                e.scripts = [];
                e.i = e.j = 0;
                e.cancelled = !0;
                return null
            };
            b.Cancel = function() {
                this.cancelTypeset = !0
            }
        }
    })();


	return mathJax;
});
define('extensions/emailConverter',[
    "classes/Extension",
], function(Extension) {

    var emailConverter = new Extension("emailConverter", "Markdown Email", true);
    emailConverter.settingsBlock = '<p>Converts email adresses in the form &lt;email@example.com&gt; into clickable links.</p>';

    emailConverter.onPagedownConfigure = function(editor) {
        editor.getConverter().hooks.chain("postConversion", function(text) {
            return text.replace(/<(mailto\:)?([^\s>]+@[^\s>]+\.\S+?)>/g, function(match, mailto, email) {
                return '<a href="mailto:' + email + '">' + email + '</a>';
            });
        });
    };

    return emailConverter;
});

define('text!html/scrollLinkSettingsBlock.html',[],function () { return '<p>Binds together editor and preview scrollbars.</p>\n<blockquote>\n\t<b>NOTE:</b> The mapping between Markdown and HTML is based on the\n\tposition of the title elements (h1, h2...) in the page. Therefore if\n\tyour document does not contain any title, the mapping will be linear and\n\tconsequently less accurate.\n</blockquote>';});

define('extensions/scrollLink',[
    "jquery",
    "underscore",
    "classes/Extension",
    "text!html/scrollLinkSettingsBlock.html"
], function($, _, Extension, scrollLinkSettingsBlockHTML) {

    var scrollLink = new Extension("scrollLink", "Scroll Link", true, true, true);
    scrollLink.settingsBlock = scrollLinkSettingsBlockHTML;

    var aceEditor = undefined;
    scrollLink.onAceCreated = function(aceEditorParam) {
        aceEditor = aceEditorParam;
    };

    var sectionList = undefined;
    scrollLink.onSectionsCreated = function(sectionListParam) {
        sectionList = sectionListParam;
    };
    
    var offsetBegin = 0;
    scrollLink.onMarkdownTrim = function(offsetBeginParam) {
        offsetBegin = offsetBeginParam;
    };

    var $previewElt = undefined;
    var mdSectionList = [];
    var htmlSectionList = [];
    function pxToFloat(px) {
        return parseFloat(px.substring(0, px.length - 2));
    }
    var lastEditorScrollTop = undefined;
    var lastPreviewScrollTop = undefined;
    var buildSections = _.debounce(function() {

        mdSectionList = [];
        var mdTextOffset = 0;
        var mdSectionOffset = 0;
        var firstSectionOffset = offsetBegin;
        _.each(sectionList, function(sectionText) {
            mdTextOffset += sectionText.length + firstSectionOffset;
            firstSectionOffset = 0;
            var documentPosition = aceEditor.session.doc.indexToPosition(mdTextOffset);
            var screenPosition = aceEditor.session.documentToScreenPosition(documentPosition.row, documentPosition.column);
            var newSectionOffset = screenPosition.row * aceEditor.renderer.lineHeight;
            var sectionHeight = newSectionOffset - mdSectionOffset;
            mdSectionList.push({
                startOffset: mdSectionOffset,
                endOffset: newSectionOffset,
                height: sectionHeight
            });
            mdSectionOffset = newSectionOffset;
        });

        // Try to find corresponding sections in the preview
        htmlSectionList = [];
        var htmlSectionOffset = 0;
        var previewScrollTop = $previewElt.scrollTop();
        // Each title element is a section separator
        $previewElt.find(".preview-content > .wmd-title").each(function() {
            var $titleElt = $(this);
            // Consider div scroll position and header element top margin
            var newSectionOffset = $titleElt.position().top + previewScrollTop + pxToFloat($titleElt.css('margin-top'));
            htmlSectionList.push({
                startOffset: htmlSectionOffset,
                endOffset: newSectionOffset,
                height: newSectionOffset - htmlSectionOffset
            });
            htmlSectionOffset = newSectionOffset;
        });
        // Last section
        var scrollHeight = $previewElt.prop('scrollHeight');
        htmlSectionList.push({
            startOffset: htmlSectionOffset,
            endOffset: scrollHeight,
            height: scrollHeight - htmlSectionOffset
        });

        // apply Scroll Link (-10 to have a gap > 9px)
        lastEditorScrollTop = -10;
        lastPreviewScrollTop = -10;
        doScrollLink();
    }, 500);

    var isScrollEditor = false;
    var isScrollPreview = false;
    var isEditorMoving = false;
    var isPreviewMoving = false;
    var doScrollLink = _.debounce(function() {
        if(mdSectionList.length === 0 || mdSectionList.length !== htmlSectionList.length) {
            // Delay
            doScrollLink();
            return;
        }
        var editorScrollTop = aceEditor.renderer.getScrollTop();
        var previewScrollTop = $previewElt.scrollTop();
        function getDestScrollTop(srcScrollTop, srcSectionList, destSectionList) {
            // Find the section corresponding to the offset
            var sectionIndex = undefined;
            var srcSection = _.find(srcSectionList, function(section, index) {
                sectionIndex = index;
                return srcScrollTop < section.endOffset;
            });
            if(srcSection === undefined) {
                // Something wrong in the algorithm...
                return;
            }
            var posInSection = (srcScrollTop - srcSection.startOffset) / srcSection.height;
            var destSection = destSectionList[sectionIndex];
            return destSection.startOffset + destSection.height * posInSection;
        }
        // Perform the animation if diff > 9px
        if(isScrollEditor === true && Math.abs(editorScrollTop - lastEditorScrollTop) > 9) {
            isScrollEditor = false;
            // Animate the preview
            lastEditorScrollTop = editorScrollTop;
            var destScrollTop = getDestScrollTop(editorScrollTop, mdSectionList, htmlSectionList);
            destScrollTop = _.min([
                destScrollTop,
                $previewElt.prop('scrollHeight') - $previewElt.outerHeight()
            ]);
            if(Math.abs(destScrollTop - previewScrollTop) <= 9) {
                // Skip the animation if diff is <= 9
                lastPreviewScrollTop = previewScrollTop;
            }
            else {
                isPreviewMoving = true;
                $previewElt.animate({
                    scrollTop: destScrollTop
                }, {
                    easing: 'easeOutSine',
                    complete: function() {
                        lastPreviewScrollTop = destScrollTop;
                    },
                    always: function() {
                        _.defer(function() {
                            isPreviewMoving = false;
                        });
                    }
                });
            }
        }
        else if(isScrollPreview === true && Math.abs(previewScrollTop - lastPreviewScrollTop) > 9) {
            isScrollPreview = false;
            // Animate the editor
            lastPreviewScrollTop = previewScrollTop;
            var destScrollTop = getDestScrollTop(previewScrollTop, htmlSectionList, mdSectionList);
            destScrollTop = _.min([
                destScrollTop,
                aceEditor.session.getScreenLength() * aceEditor.renderer.lineHeight - aceEditor.renderer.$size.scrollerHeight
            ]);
            if(Math.abs(destScrollTop - editorScrollTop) <= 9) {
                // Skip the animation if diff is <= 9
                lastEditorScrollTop = editorScrollTop;
            }
            else {
                isEditorMoving = true;
                $("<div>").animate({
                    value: destScrollTop - editorScrollTop
                }, {
                    easing: 'easeOutSine',
                    step: function(now) {
                        aceEditor.session.setScrollTop(editorScrollTop + now);
                    },
                    complete: function() {
                        lastEditorScrollTop = destScrollTop;
                    },
                    always: function() {
                        _.defer(function() {
                            isEditorMoving = false;
                        });
                    }
                });
            }
        }
    }, 500);

    scrollLink.onLayoutResize = function() {
        isScrollEditor = true;
        buildSections();
    };

    scrollLink.onFileClosed = function() {
        mdSectionList = [];
    };

    var scrollAdjust = false;
    scrollLink.onReady = function() {
        $previewElt = $(".preview-container");

        $previewElt.scroll(function() {
            if(isPreviewMoving === false && scrollAdjust === false) {
                isScrollPreview = true;
                isScrollEditor = false;
                doScrollLink();
            }
            scrollAdjust = false;
        });
        aceEditor.session.on("changeScrollTop", function(e) {
            if(isEditorMoving === false) {
                isScrollEditor = true;
                isScrollPreview = false;
                doScrollLink();
            }
        });
    };

    var $previewContentsElt = undefined;
    scrollLink.onPagedownConfigure = function(editor) {
        $previewContentsElt = $("#preview-contents");
        editor.getConverter().hooks.chain("postConversion", function(text) {
            // To avoid losing scrolling position before elements are fully
            // loaded
            $previewContentsElt.height($previewContentsElt.height());
            return text;
        });
    };

    scrollLink.onPreviewFinished = function() {
        // Now set the correct height
        var previousHeight = $previewContentsElt.height();
        $previewContentsElt.height("auto");
        var newHeight = $previewContentsElt.height();
        isScrollEditor = true;
        if(newHeight < previousHeight) {
            // We expect a scroll adjustment
            scrollAdjust = true;
        }
        buildSections();
    };

    return scrollLink;
});
define('extensions/buttonFocusMode',[
    "jquery",
    "underscore",
    "crel",
    "classes/Extension"
], function($, _, crel, Extension) {

    var buttonFocusMode = new Extension("buttonFocusMode", 'Button "Focus Mode"', true, true, true);
    buttonFocusMode.settingsBlock = "When typing, scrolls automatically the editor to always have the caret centered verticaly.";

    var aceEditor = undefined;
    buttonFocusMode.onAceCreated = function(aceEditorParam) {
        aceEditor = aceEditorParam;
    };

    var isFocusModeOn = false;
    var isMouseActive = false;
    function doFocusMode() {
        if(isFocusModeOn === false || isMouseActive === true) {
            return;
        }
        var positionInDocument = aceEditor.selection.getCursor();
        var positionInScreen = aceEditor.session.documentToScreenPosition(positionInDocument.row, positionInDocument.column);
        aceEditor.session.setScrollTop((positionInScreen.row + 0.5) * aceEditor.renderer.lineHeight - aceEditor.renderer.$size.scrollerHeight / 2);
    }

    var $button = undefined;
    buttonFocusMode.onReady = function() {
        aceEditor.getSession().selection.on('changeCursor', doFocusMode);
        aceEditor.container.addEventListener('keydown', function() {
            isMouseActive = false;
        }, true);
        aceEditor.container.addEventListener('mousedown', function() {
            isMouseActive = true;
        }, true);
        if(localStorage.focusMode == 'on') {
            $button.click();
        }
    };

    buttonFocusMode.onCreateEditorButton = function() {
        $button = $([
            '<button class="btn btn-info" title="Focus Mode" data-toggle="button">',
            '   <i class="icon-target"></i>',
            '</button>'
        ].join(''));
        $button.click(function() {
            _.defer(function() {
                isFocusModeOn = $button.is('.active');
                localStorage.focusMode = isFocusModeOn ? 'on' : 'off';
                isMouseActive = false;
                aceEditor.focus();
                doFocusMode();
            });
        });
        return $button[0];
    };

    return buttonFocusMode;
});
define('text!html/buttonSyncSettingsBlock.html',[],function () { return '<p>Adds a "Synchronize documents" button in the navigation bar.</p>\n<div class="form-horizontal">\n\t<div class="form-group">\n\t\t<label class="col-lg-5 control-label" for="input-sync-period">Sync\n\t\t\tperiod (0: manual)</label>\n\t\t<div class="col-lg-6 form-inline">\n\t\t\t<input type="text" id="input-sync-period"\n\t\t\t\tclass="col-lg-5 form-control" placeholder="180000"> ms\n\t\t</div>\n\t</div>\n</div>';});

define('extensions/buttonSync',[
    "jquery",
    "underscore",
    "crel",
    "utils",
    "classes/Extension",
    "text!html/buttonSyncSettingsBlock.html",
], function($, _, crel, utils, Extension, buttonSyncSettingsBlockHTML) {

    var buttonSync = new Extension("buttonSync", 'Button "Synchronize"');
    buttonSync.settingsBlock = buttonSyncSettingsBlockHTML;
    buttonSync.defaultConfig = {
        syncPeriod: 180000
    };

    buttonSync.onLoadSettings = function() {
        utils.setInputValue("#input-sync-period", buttonSync.config.syncPeriod);
    };

    buttonSync.onSaveSettings = function(newConfig, event) {
        newConfig.syncPeriod = utils.getInputIntValue("#input-sync-period", event, 0);
    };

    var synchronizer = undefined;
    buttonSync.onSynchronizerCreated = function(synchronizerParameter) {
        synchronizer = synchronizerParameter;
    };

    var $button = undefined;
    var syncRunning = false;
    var isOffline = false;
    // Enable/disable the button
    var updateButtonState = function() {
        if($button === undefined) {
            return;
        }
        if(syncRunning === true || synchronizer.hasSync() === false || isOffline) {
            $button.addClass("disabled");
        }
        else {
            $button.removeClass("disabled");
        }
    };

    // Run sync periodically
    var lastSync = 0;
    buttonSync.onPeriodicRun = function() {
        if(viewerMode === true || !buttonSync.config.syncPeriod || lastSync + buttonSync.config.syncPeriod > utils.currentTime) {
            return;
        }
        if(synchronizer.sync() === true) {
            lastSync = utils.currentTime;
        }
    };

    buttonSync.onCreateButton = function() {
        var button = crel('button', {
            class: 'btn btn-success button-synchronize',
            title: 'Synchronize all'
        }, crel('i', {
            class: 'icon-refresh'
        }));
        $button = $(button).click(function() {
            if(!$(this).hasClass("disabled")) {
                synchronizer.sync();
            }
        });
        return button;
    };

    buttonSync.onReady = updateButtonState;
    buttonSync.onFileCreated = updateButtonState;
    buttonSync.onFileDeleted = updateButtonState;
    buttonSync.onSyncImportSuccess = updateButtonState;
    buttonSync.onSyncExportSuccess = updateButtonState;
    buttonSync.onSyncRemoved = updateButtonState;

    buttonSync.onSyncRunning = function(isRunning) {
        syncRunning = isRunning;
        updateButtonState();
    };

    buttonSync.onOfflineChanged = function(isOfflineParameter) {
        isOffline = isOfflineParameter;
        updateButtonState();
    };

    return buttonSync;

});
define('extensions/buttonPublish',[
    "jquery",
    "underscore",
    "crel",
    "classes/Extension",
], function($, _, crel, Extension) {

    var buttonPublish = new Extension("buttonPublish", 'Button "Publish"');
    // buttonPublish.settingsBlock = '<p>Adds a "Publish document" button in the
    // navigation bar.</p>';

    var button = undefined;
    var currentFileDesc = undefined;
    var publishRunning = false;
    var hasPublications = false;
    var isOffline = false;
    // Enable/disable the button
    function updateButtonState() {
        if(button === undefined) {
            return;
        }
        if(publishRunning === true || hasPublications === false || isOffline === true) {
            button.addClass("disabled");
        }
        else {
            button.removeClass("disabled");
        }
    }

    var publisher = undefined;
    buttonPublish.onPublisherCreated = function(publisherParameter) {
        publisher = publisherParameter;
    };

    buttonPublish.onCreateButton = function() {
        var button = crel('button', {
            class: 'btn btn-success button-publish',
            title: 'Publish this document'
        }, crel('i', {
            class: 'icon-share'
        }));
        var $button = $(button);
        $button.click(function() {
            if(!$button.hasClass("disabled")) {
                publisher.publish();
            }
        });
        return button;
    };

    buttonPublish.onPublishRunning = function(isRunning) {
        publishRunning = isRunning;
        updateButtonState();
    };

    buttonPublish.onOfflineChanged = function(isOfflineParameter) {
        isOffline = isOfflineParameter;
        updateButtonState();
    };

    // Check that current file has publications
    var checkPublication = function() {
        if(_.size(currentFileDesc.publishLocations) === 0) {
            hasPublications = false;
        }
        else {
            hasPublications = true;
        }
        updateButtonState();
    };

    buttonPublish.onFileSelected = function(fileDesc) {
        currentFileDesc = fileDesc;
        checkPublication();
    };

    buttonPublish.onPublishRemoved = checkPublication;
    buttonPublish.onNewPublishSuccess = checkPublication;

    return buttonPublish;

});
define('text!html/buttonShare.html',[],function () { return '<button class="btn btn-success dropdown-toggle" data-toggle="dropdown"\n\ttitle="Share this document">\n\t<i class="icon-link"></i>\n</button>\n<div class="dropdown-menu pull-right link-container">\n\t<h3>Sharing</h3>\n\t<div class="link-list"></div>\n\t<p class="no-link">To share this document you need first to <a\n\t\thref="#" class="action-publish-gist">publish it as a Gist</a> in\n\t\tMarkdown format.\n\t</p>\n\t<blockquote>\n\t\t<b>NOTE:</b> You can open any URL within StackEdit using <a\n\t\t\thref="viewer.html?url=https://raw.github.com/benweet/stackedit/master/README.md"\n\t\t\ttitle="Sharing example">viewer.html?url=...</a>\n\t</blockquote>\n</div>\n';});

define('text!html/buttonShareLocation.html',[],function () { return '<div class="input-group">\n\t<a href="<%= link %>" class="input-group-addon" title="Sharing location"><i\n\t\tclass="icon-link"></i></a> <input class="col-lg-5 form-control" type="text"\n\t\tvalue="<%= link %>" readonly />\n</div>\n';});

define('extensions/buttonShare',[
    "jquery",
    "underscore",
    "classes/Extension",
    "text!html/buttonShare.html",
    "text!html/buttonShareLocation.html",
], function($, _, Extension, buttonShareHTML, buttonShareLocationHTML) {

    var buttonShare = new Extension("buttonShare", 'Button "Share"', true, true);
    buttonShare.settingsBlock = '<p>Adds a "Share document" button in the navigation bar.</p>';

    buttonShare.onCreateButton = function() {
        return buttonShareHTML;
    };

    var fileDesc = undefined;
    var linkListElt = undefined;
    var $noLinkElt = undefined;
    var refreshDocumentSharing = function(fileDescParameter) {
        if(fileDescParameter !== undefined && fileDescParameter !== fileDesc) {
            return;
        }

        var linkListHtml = _.reduce(fileDesc.publishLocations, function(result, attributes) {
            if(attributes.sharingLink) {
                result += _.template(buttonShareLocationHTML, {
                    link: attributes.sharingLink
                });
            }
            return result;
        }, '');
        linkListElt.innerHTML = linkListHtml;
        $noLinkElt.toggleClass('hide', linkListHtml.length !== 0);
    };

    buttonShare.onFileSelected = function(fileDescParameter) {
        fileDesc = fileDescParameter;
        refreshDocumentSharing(fileDescParameter);
    };

    buttonShare.onNewPublishSuccess = refreshDocumentSharing;
    buttonShare.onPublishRemoved = refreshDocumentSharing;
    
    buttonShare.onReady = function() {
        var linkContainerElt = document.querySelector('.link-container');
        linkListElt = linkContainerElt.querySelector('.link-list');
        $noLinkElt = $(linkContainerElt.querySelector('.no-link'));
    };

    return buttonShare;

});
define('text!html/buttonStat.html',[],function () { return '<button class="btn btn-default dropdown-toggle" title="Document statistics" data-toggle="dropdown">\n\t<i class="icon-chart-bar"></i>\n</button>\n<div class="dropdown-menu pull-right">\n\t<h3>Statistics</h3>\n\t<div class="stat">\n\t\t<div>\n\t\t\t<%= name1 %>: <span id="span-stat-value1"></span>\n\t\t</div>\n\t\t<div>\n\t\t\t<%= name2 %>: <span id="span-stat-value2"></span>\n\t\t</div>\n\t\t<div>\n\t\t\t<%= name3 %>: <span id="span-stat-value3"></span>\n\t\t</div>\n\t</div>\n</div>\n';});

define('text!html/buttonStatSettingsBlock.html',[],function () { return '<p>Adds a "Document statistics" button over the preview.</p>\n<div class="form-horizontal">\n\t<div class="form-group form-inline">\n\t\t<label class="label-text" for="input-stat-name1">Title</label> <input\n\t\t\tid="input-stat-name1" type="text" class="form-control col-lg-3"> <label\n\t\t\tclass="label-text" for="input-stat-value1">RegExp</label> <input\n\t\t\tid="input-stat-value1" type="text" class="form-control col-lg-4">\n\t</div>\n\t<div class="form-group form-inline">\n\t\t<label class="label-text" for="input-stat-name2">Title</label> <input\n\t\t\tid="input-stat-name2" type="text" class="form-control col-lg-3"> <label\n\t\t\tclass="label-text" for="input-stat-value2">RegExp</label> <input\n\t\t\tid="input-stat-value2" type="text" class="form-control col-lg-4">\n\t</div>\n\t<div class="form-group form-inline">\n\t\t<label class="label-text" for="input-stat-name3">Title</label> <input\n\t\t\tid="input-stat-name3" type="text" class="form-control col-lg-3"> <label\n\t\t\tclass="label-text" for="input-stat-value3">RegExp</label> <input\n\t\t\tid="input-stat-value3" type="text" class="form-control col-lg-4">\n\t</div>\n</div>\n';});

define('extensions/buttonStat',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "text!html/buttonStat.html",
    "text!html/buttonStatSettingsBlock.html",
], function($, _, utils, Extension, buttonStatHTML, buttonStatSettingsBlockHTML) {

    var buttonStat = new Extension("buttonStat", 'Button "Statistics"', true, true);
    buttonStat.settingsBlock = buttonStatSettingsBlockHTML;
    buttonStat.defaultConfig = {
        name1: "Characters",
        value1: "\\S",
        name2: "Words",
        value2: "\\S+",
        name3: "Paragraphs",
        value3: "\\S.*",
    };

    buttonStat.onLoadSettings = function() {
        _.each([
            1,
            2,
            3
        ], function(index) {
            utils.setInputValue("#input-stat-name" + index, buttonStat.config["name" + index]);
            utils.setInputValue("#input-stat-value" + index, buttonStat.config["value" + index]);
        });
    };

    buttonStat.onSaveSettings = function(newConfig, event) {
        _.each([
            1,
            2,
            3
        ], function(index) {
            newConfig["name" + index] = utils.getInputTextValue("#input-stat-name" + index, event);
            newConfig["value" + index] = utils.getInputRegExpValue("#input-stat-value" + index, event);
        });
    };

    buttonStat.onCreatePreviewButton = function() {
        return _.template(buttonStatHTML, buttonStat.config);
    };
    
    var previewContentsElt = undefined;
    var value1Elt = undefined;
    var value2Elt = undefined;
    var value3Elt = undefined;
    buttonStat.onReady = function() {
        previewContentsElt = document.getElementById('preview-contents');
        value1Elt = document.getElementById('span-stat-value1');
        value2Elt = document.getElementById('span-stat-value2');
        value3Elt = document.getElementById('span-stat-value3');
    };

    buttonStat.onPreviewFinished = function() {
        var previewContentsEltClone = previewContentsElt.cloneNode(true);
        var scriptEltList = previewContentsEltClone.getElementsByTagName('script');
        for(var i = scriptEltList.length-1; i >= 0; i--) {
            var scriptElt = scriptEltList[i];
            scriptElt.parentNode.removeChild(scriptElt);
        }
        var text = previewContentsEltClone.textContent;
        value1Elt.textContent = (text.match(new RegExp(buttonStat.config.value1, "g")) || []).length;
        value2Elt.textContent = (text.match(new RegExp(buttonStat.config.value2, "g")) || []).length;
        value3Elt.textContent = (text.match(new RegExp(buttonStat.config.value3, "g")) || []).length;
    };

    return buttonStat;

});
define('text!html/buttonHtmlCode.html',[],function () { return '<button class="btn btn-default dropdown-toggle action-html-code" title="HTML code" data-toggle="dropdown">\n\t<i class="icon-code"></i>\n</button>\n<div class="dropdown-menu pull-right">\n\t<h3>HTML code</h3>\n\t<textarea id="input-html-code" class="form-control"></textarea>\n</div>\n';});

define('text!html/buttonHtmlCodeSettingsBlock.html',[],function () { return '<p>Adds a "HTML code" button over the preview.</p>\n<div class="form-horizontal">\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label" for="textarea-html-code-template">Template\n\t\t\t<a href="#" class="tooltip-template">(?)</a>\n\t\t</label>\n\t\t<div class="col-lg-7">\n\t\t\t<textarea id="textarea-html-code-template" class="form-control"></textarea>\n\t\t</div>\n\t</div>\n</div>';});

define('extensions/buttonHtmlCode',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "text!html/buttonHtmlCode.html",
    "text!html/buttonHtmlCodeSettingsBlock.html",
], function($, _, utils, Extension, buttonHtmlCodeHTML, buttonHtmlCodeSettingsBlockHTML) {

    var buttonHtmlCode = new Extension("buttonHtmlCode", 'Button "HTML code"', true, true);
    buttonHtmlCode.settingsBlock = buttonHtmlCodeSettingsBlockHTML;
    buttonHtmlCode.defaultConfig = {
        template: "<%= documentHTML %>",
    };
    
    buttonHtmlCode.onLoadSettings = function() {
        utils.setInputValue("#textarea-html-code-template", buttonHtmlCode.config.template);
    };

    buttonHtmlCode.onSaveSettings = function(newConfig, event) {
        newConfig.template = utils.getInputValue("#textarea-html-code-template");
    };

    var eventMgr = undefined;
    buttonHtmlCode.onEventMgrCreated = function(eventMgrParameter) {
        eventMgr = eventMgrParameter;
    };

    buttonHtmlCode.onCreatePreviewButton = function() {
        return buttonHtmlCodeHTML;
    };

    var selectedFileDesc = undefined;
    buttonHtmlCode.onFileSelected = function(fileDesc) {
        selectedFileDesc = fileDesc;
    };

    var textareaElt = undefined;
    buttonHtmlCode.onPreviewFinished = function(html) {
        try {
            var htmlCode = _.template(buttonHtmlCode.config.template, {
                documentTitle: selectedFileDesc.title,
                documentMarkdown: selectedFileDesc.content,
                documentHTML: html,
                frontMatter: selectedFileDesc.frontMatter,
                publishAttributes: undefined,
            });
            textareaElt.value = htmlCode;
        }
        catch(e) {
            eventMgr.onError(e);
            return e.message;
        }
    };

    buttonHtmlCode.onReady = function() {
        textareaElt = document.getElementById('input-html-code');
        $(".action-html-code").click(function() {
            _.defer(function() {
                $("#input-html-code").each(function() {
                    if($(this).is(":hidden"))
                        return;
                    this.select();
                });
            });
        });
    };

    return buttonHtmlCode;

});
define('text!html/buttonViewer.html',[],function () { return '<a href="viewer.html" class="btn btn-default dropdown-toggle"\n\ttitle="Open in viewer">\n\t<i class="icon-resize-full"></i>\n</a>\n';});

define('extensions/buttonViewer',[
    "jquery",
    "classes/Extension",
    "text!html/buttonViewer.html",
], function($, Extension, buttonViewerHTML) {

    var buttonViewer = new Extension("buttonViewer", 'Button "Viewer"', true, true);
    buttonViewer.settingsBlock = '<p>Adds a "Viewer" button over the preview.</p>';

    buttonViewer.onCreatePreviewButton = function() {
        return buttonViewerHTML;
    };

    return buttonViewer;

});
/**
* bootstrap.js v3.0.0 by @fat and @mdo
* Copyright 2013 Twitter Inc.
* http://www.apache.org/licenses/LICENSE-2.0
*/
if (!jQuery) { throw new Error("Bootstrap requires jQuery") }

/* ========================================================================
 * Bootstrap: transition.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#transitions
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      'WebkitTransition' : 'webkitTransitionEnd'
    , 'MozTransition'    : 'transitionend'
    , 'OTransition'      : 'oTransitionEnd otransitionend'
    , 'transition'       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false, $el = this
    $(this).one($.support.transition.end, function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: alert.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#alerts
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = $(selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.hasClass('alert') ? $this : $this.parent()
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      $parent.trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one($.support.transition.end, removeElement)
        .emulateTransitionEnd(150) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  var old = $.fn.alert

  $.fn.alert = function (option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(window.jQuery);

/* ========================================================================
 * Bootstrap: button.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#buttons
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element = $(element)
    this.options  = $.extend({}, Button.DEFAULTS, options)
  }

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state = state + 'Text'

    if (!data.resetText) $el.data('resetText', $el[val]())

    $el[val](data[state] || this.options[state])

    // push to event loop to allow forms to submit
    setTimeout(function () {
      state == 'loadingText' ?
        $el.addClass(d).attr(d, d) :
        $el.removeClass(d).removeAttr(d);
    }, 0)
  }

  Button.prototype.toggle = function () {
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
        .prop('checked', !this.$element.hasClass('active'))
        .trigger('change')
      if ($input.prop('type') === 'radio') $parent.find('.active').removeClass('active')
    }

    this.$element.toggleClass('active')
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  var old = $.fn.button

  $.fn.button = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document).on('click.bs.button.data-api', '[data-toggle^=button]', function (e) {
    var $btn = $(e.target)
    if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')
    $btn.button('toggle')
    e.preventDefault()
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: carousel.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#carousel
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      =
    this.sliding     =
    this.interval    =
    this.$active     =
    this.$items      = null

    this.options.pause == 'hover' && this.$element
      .on('mouseenter', $.proxy(this.pause, this))
      .on('mouseleave', $.proxy(this.cycle, this))
  }

  Carousel.DEFAULTS = {
    interval: 5000
  , pause: 'hover'
  , wrap: true
  }

  Carousel.prototype.cycle =  function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getActiveIndex = function () {
    this.$active = this.$element.find('.item.active')
    this.$items  = this.$active.parent().children()

    return this.$items.index(this.$active)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getActiveIndex()

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid', function () { that.to(pos) })
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition.end) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || $active[type]()
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var fallback  = type == 'next' ? 'first' : 'last'
    var that      = this

    if (!$next.length) {
      if (!this.options.wrap) return
      $next = this.$element.find('.item')[fallback]()
    }

    this.sliding = true

    isCycling && this.pause()

    var e = $.Event('slide.bs.carousel', { relatedTarget: $next[0], direction: direction })

    if ($next.hasClass('active')) return

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      this.$element.one('slid', function () {
        var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])
        $nextIndicator && $nextIndicator.addClass('active')
      })
    }

    if ($.support.transition && this.$element.hasClass('slide')) {
      this.$element.trigger(e)
      if (e.isDefaultPrevented()) return
      $next.addClass(type)
      $next[0].offsetWidth // force reflow
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one($.support.transition.end, function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () { that.$element.trigger('slid') }, 0)
        })
        .emulateTransitionEnd(600)
    } else {
      this.$element.trigger(e)
      if (e.isDefaultPrevented()) return
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger('slid')
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  var old = $.fn.carousel

  $.fn.carousel = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  $(document).on('click.bs.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {
    var $this   = $(this), href
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) //strip for ie7
    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    $target.carousel(options)

    if (slideIndex = $this.attr('data-slide-to')) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  })

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      $carousel.carousel($carousel.data())
    })
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: collapse.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#collapse
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.transitioning = null

    if (this.options.parent) this.$parent = $(this.options.parent)
    if (this.options.toggle) this.toggle()
  }

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var actives = this.$parent && this.$parent.find('> .panel > .in')

    if (actives && actives.length) {
      var hasData = actives.data('bs.collapse')
      if (hasData && hasData.transitioning) return
      actives.collapse('hide')
      hasData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')
      [dimension](0)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('in')
        [dimension]('auto')
      this.transitioning = 0
      this.$element.trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one($.support.transition.end, $.proxy(complete, this))
      .emulateTransitionEnd(350)
      [dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element
      [dimension](this.$element[dimension]())
      [0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse')
      .removeClass('in')

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .trigger('hidden.bs.collapse')
        .removeClass('collapsing')
        .addClass('collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one($.support.transition.end, $.proxy(complete, this))
      .emulateTransitionEnd(350)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  var old = $.fn.collapse

  $.fn.collapse = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle=collapse]', function (e) {
    var $this   = $(this), href
    var target  = $this.attr('data-target')
        || e.preventDefault()
        || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') //strip for ie7
    var $target = $(target)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()
    var parent  = $this.attr('data-parent')
    var $parent = parent && $(parent)

    if (!data || !data.transitioning) {
      if ($parent) $parent.find('[data-toggle=collapse][data-parent="' + parent + '"]').not($this).addClass('collapsed')
      $this[$target.hasClass('in') ? 'addClass' : 'removeClass']('collapsed')
    }

    $target.collapse(option)
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: dropdown.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#dropdowns
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle=dropdown]'
  var Dropdown = function (element) {
    var $el = $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we we use a backdrop because click events don't delegate
        $('<div class="dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus)
      }

      $parent.trigger(e = $.Event('show.bs.dropdown'))

      if (e.isDefaultPrevented()) return

      $parent
        .toggleClass('open')
        .trigger('shown.bs.dropdown')

      $this.focus()
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27)/.test(e.keyCode)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive || (isActive && e.keyCode == 27)) {
      if (e.which == 27) $parent.find(toggle).focus()
      return $this.click()
    }

    var $items = $('[role=menu] li:not(.divider):visible a', $parent)

    if (!$items.length) return

    var index = $items.index($items.filter(':focus'))

    if (e.keyCode == 38 && index > 0)                 index--                        // up
    if (e.keyCode == 40 && index < $items.length - 1) index++                        // down
    if (!~index)                                      index=0

    $items.eq(index).focus()
  }

  function clearMenus() {
    $(backdrop).remove()
    $(toggle).each(function (e) {
      var $parent = getParent($(this))
      if (!$parent.hasClass('open')) return
      $parent.trigger(e = $.Event('hide.bs.dropdown'))
      if (e.isDefaultPrevented()) return
      $parent.removeClass('open').trigger('hidden.bs.dropdown')
    })
  }

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  var old = $.fn.dropdown

  $.fn.dropdown = function (option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('dropdown')

      if (!data) $this.data('dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api'  , toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)

}(window.jQuery);

/* ========================================================================
 * Bootstrap: modal.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#modals
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options   = options
    this.$element  = $(element)
    this.$backdrop =
    this.isShown   = null

    if (this.options.remote) this.$element.load(this.options.remote)
  }

  Modal.DEFAULTS = {
      backdrop: true
    , keyboard: true
    , show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this[!this.isShown ? 'show' : 'hide'](_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.escape()

    this.$element.on('click.dismiss.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(document.body) // don't move modals dom position
      }

      that.$element.show()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element
        .addClass('in')
        .attr('aria-hidden', false)

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$element.find('.modal-dialog') // wait for modal to slide in
          .one($.support.transition.end, function () {
            that.$element.focus().trigger(e)
          })
          .emulateTransitionEnd(300) :
        that.$element.focus().trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .attr('aria-hidden', true)
      .off('click.dismiss.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one($.support.transition.end, $.proxy(this.hideModal, this))
        .emulateTransitionEnd(300) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
          this.$element.focus()
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keyup.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keyup.dismiss.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.removeBackdrop()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that    = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />')
        .appendTo(document.body)

      this.$element.on('click.dismiss.modal', $.proxy(function (e) {
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus.call(this.$element[0])
          : this.hide.call(this)
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one($.support.transition.end, callback)
          .emulateTransitionEnd(150) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      $.support.transition && this.$element.hasClass('fade')?
        this.$backdrop
          .one($.support.transition.end, callback)
          .emulateTransitionEnd(150) :
        callback()

    } else if (callback) {
      callback()
    }
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  var old = $.fn.modal

  $.fn.modal = function (option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) //strip for ie7
    var option  = $target.data('modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    e.preventDefault()

    $target
      .modal(option, this)
      .one('hide', function () {
        $this.is(':visible') && $this.focus()
      })
  })

  $(document)
    .on('show.bs.modal',  '.modal', function () { $(document.body).addClass('modal-open') })
    .on('hidden.bs.modal', '.modal', function () { $(document.body).removeClass('modal-open') })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: tooltip.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       =
    this.options    =
    this.enabled    =
    this.timeout    =
    this.hoverState =
    this.$element   = null

    this.init('tooltip', element, options)
  }

  Tooltip.DEFAULTS = {
    animation: true
  , placement: 'top'
  , selector: false
  , template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
  , trigger: 'hover focus'
  , title: ''
  , delay: 0
  , html: false
  , container: false
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled  = true
    this.type     = type
    this.$element = $(element)
    this.options  = this.getOptions(options)

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focus'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay
      , hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.'+ this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      var $tip = this.tip()

      this.setContent()

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var $parent = this.$element.parent()

        var orgPlacement = placement
        var docScroll    = document.documentElement.scrollTop || document.body.scrollTop
        var parentWidth  = this.options.container == 'body' ? window.innerWidth  : $parent.outerWidth()
        var parentHeight = this.options.container == 'body' ? window.innerHeight : $parent.outerHeight()
        var parentLeft   = this.options.container == 'body' ? 0 : $parent.offset().left

        placement = placement == 'bottom' && pos.top   + pos.height  + actualHeight - docScroll > parentHeight  ? 'top'    :
                    placement == 'top'    && pos.top   - docScroll   - actualHeight < 0                         ? 'bottom' :
                    placement == 'right'  && pos.right + actualWidth > parentWidth                              ? 'left'   :
                    placement == 'left'   && pos.left  - actualWidth < parentLeft                               ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)
      this.$element.trigger('shown.bs.' + this.type)
    }
  }

  Tooltip.prototype.applyPlacement = function(offset, placement) {
    var replace
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  = offset.top  + marginTop
    offset.left = offset.left + marginLeft

    $tip
      .offset(offset)
      .addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      replace = true
      offset.top = offset.top + height - actualHeight
    }

    if (/bottom|top/.test(placement)) {
      var delta = 0

      if (offset.left < 0) {
        delta       = offset.left * -2
        offset.left = 0

        $tip.offset(offset)

        actualWidth  = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight
      }

      this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')
    } else {
      this.replaceArrow(actualHeight - height, actualHeight, 'top')
    }

    if (replace) $tip.offset(offset)
  }

  Tooltip.prototype.replaceArrow = function(delta, dimension, position) {
    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + "%") : '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function () {
    var that = this
    var $tip = this.tip()
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && this.$tip.hasClass('fade') ?
      $tip
        .one($.support.transition.end, complete)
        .emulateTransitionEnd(150) :
      complete()

    this.$element.trigger('hidden.bs.' + this.type)

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function () {
    var el = this.$element[0]
    return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {
      width: el.offsetWidth
    , height: el.offsetHeight
    }, this.$element.offset())
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.tip = function () {
    return this.$tip = this.$tip || $(this.options.template)
  }

  Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow')
  }

  Tooltip.prototype.validate = function () {
    if (!this.$element[0].parentNode) {
      this.hide()
      this.$element = null
      this.options  = null
    }
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type) : this
    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
  }

  Tooltip.prototype.destroy = function () {
    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  var old = $.fn.tooltip

  $.fn.tooltip = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(window.jQuery);

/* ========================================================================
 * Bootstrap: popover.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#popovers
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.DEFAULTS = $.extend({} , $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right'
  , trigger: 'click'
  , content: ''
  , template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.popover-content')[this.options.html ? 'html' : 'text'](content)

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.arrow')
  }

  Popover.prototype.tip = function () {
    if (!this.$tip) this.$tip = $(this.options.template)
    return this.$tip
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  var old = $.fn.popover

  $.fn.popover = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(window.jQuery);

/* ========================================================================
 * Bootstrap: scrollspy.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#scrollspy
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    var href
    var process  = $.proxy(this.process, this)

    this.$element       = $(element).is('body') ? $(window) : $(element)
    this.$body          = $('body')
    this.$scrollElement = this.$element.on('scroll.bs.scroll-spy.data-api', process)
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)
    this.selector       = (this.options.target
      || ((href = $(element).attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) //strip for ie7
      || '') + ' .nav li > a'
    this.offsets        = $([])
    this.targets        = $([])
    this.activeTarget   = null

    this.refresh()
    this.process()
  }

  ScrollSpy.DEFAULTS = {
    offset: 10
  }

  ScrollSpy.prototype.refresh = function () {
    var offsetMethod = this.$element[0] == window ? 'offset' : 'position'

    this.offsets = $([])
    this.targets = $([])

    var self     = this
    var $targets = this.$body
      .find(this.selector)
      .map(function () {
        var $el   = $(this)
        var href  = $el.data('target') || $el.attr('href')
        var $href = /^#\w/.test(href) && $(href)

        return ($href
          && $href.length
          && [[ $href[offsetMethod]().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()), href ]]) || null
      })
      .sort(function (a, b) { return a[0] - b[0] })
      .each(function () {
        self.offsets.push(this[0])
        self.targets.push(this[1])
      })
  }

  ScrollSpy.prototype.process = function () {
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset
    var scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight
    var maxScroll    = scrollHeight - this.$scrollElement.height()
    var offsets      = this.offsets
    var targets      = this.targets
    var activeTarget = this.activeTarget
    var i

    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets.last()[0]) && this.activate(i)
    }

    for (i = offsets.length; i--;) {
      activeTarget != targets[i]
        && scrollTop >= offsets[i]
        && (!offsets[i + 1] || scrollTop <= offsets[i + 1])
        && this.activate( targets[i] )
    }
  }

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target

    $(this.selector)
      .parents('.active')
      .removeClass('active')

    var selector = this.selector
      + '[data-target="' + target + '"],'
      + this.selector + '[href="' + target + '"]'

    var active = $(selector)
      .parents('li')
      .addClass('active')

    if (active.parent('.dropdown-menu').length)  {
      active = active
        .closest('li.dropdown')
        .addClass('active')
    }

    active.trigger('activate')
  }


  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  var old = $.fn.scrollspy

  $.fn.scrollspy = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.scrollspy')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.scrollspy.Constructor = ScrollSpy


  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


  // SCROLLSPY DATA-API
  // ==================

  $(window).on('load', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      $spy.scrollspy($spy.data())
    })
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: tab.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#tabs
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    this.element = $(element)
  }

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var previous = $ul.find('.active:last a')[0]
    var e        = $.Event('show.bs.tab', {
      relatedTarget: previous
    })

    $this.trigger(e)

    if (e.isDefaultPrevented()) return

    var $target = $(selector)

    this.activate($this.parent('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $this.trigger({
        type: 'shown.bs.tab'
      , relatedTarget: previous
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && $active.hasClass('fade')

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
        .removeClass('active')

      element.addClass('active')

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu')) {
        element.closest('li.dropdown').addClass('active')
      }

      callback && callback()
    }

    transition ?
      $active
        .one($.support.transition.end, next)
        .emulateTransitionEnd(150) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  var old = $.fn.tab

  $.fn.tab = function ( option ) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  $(document).on('click.bs.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e) {
    e.preventDefault()
    $(this).tab('show')
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: affix.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#affix
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)
    this.$window = $(window)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element = $(element)
    this.affixed  =
    this.unpin    = null

    this.checkPosition()
  }

  Affix.RESET = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var scrollHeight = $(document).height()
    var scrollTop    = this.$window.scrollTop()
    var position     = this.$element.offset()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top()
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom()

    var affix = this.unpin   != null && (scrollTop + this.unpin <= position.top) ? false :
                offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ? 'bottom' :
                offsetTop    != null && (scrollTop <= offsetTop) ? 'top' : false

    if (this.affixed === affix) return
    if (this.unpin) this.$element.css('top', '')

    this.affixed = affix
    this.unpin   = affix == 'bottom' ? position.top - scrollTop : null

    this.$element.removeClass(Affix.RESET).addClass('affix' + (affix ? '-' + affix : ''))

    if (affix == 'bottom') {
      this.$element.offset({ top: document.body.offsetHeight - offsetBottom - this.$element.height() })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  var old = $.fn.affix

  $.fn.affix = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom) data.offset.bottom = data.offsetBottom
      if (data.offsetTop)    data.offset.top    = data.offsetTop

      $spy.affix(data)
    })
  })

}(window.jQuery);

define("bootstrap", function(){});

/* ===========================================================
# bootstrap-tour - v0.6.1
# http://bootstraptour.com
# ==============================================================
# Copyright 2012-2013 Ulrich Sossou
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/
(function() {
  (function($, window) {
    var Tour, document;
    document = window.document;
    Tour = (function() {
      function Tour(options) {
        this._options = $.extend({
          name: "tour",
          container: "body",
          keyboard: true,
          storage: window.localStorage,
          debug: false,
          backdrop: false,
          redirect: true,
          orphan: false,
          basePath: "",
          template: "<div class='popover'>          <div class='arrow'></div>          <h3 class='popover-title'></h3>          <div class='popover-content'></div>          <nav class='popover-navigation'>            <div class='btn-group'>              <button class='btn btn-sm btn-default' data-role='prev'>&laquo; Prev</button>              <button class='btn btn-sm btn-default' data-role='next'>Next &raquo;</button>            </div>            <button class='btn btn-sm btn-default' data-role='end'>End tour</button>          </nav>        </div>",
          afterSetState: function(key, value) {},
          afterGetState: function(key, value) {},
          afterRemoveState: function(key) {},
          onStart: function(tour) {},
          onEnd: function(tour) {},
          onShow: function(tour) {},
          onShown: function(tour) {},
          onHide: function(tour) {},
          onHidden: function(tour) {},
          onNext: function(tour) {},
          onPrev: function(tour) {}
        }, options);
        this._steps = [];
        this.setCurrentStep();
        this.backdrop = {
          overlay: null,
          $element: null,
          $background: null
        };
      }

      Tour.prototype.setState = function(key, value) {
        var keyName;
        if (this._options.storage) {
          keyName = "" + this._options.name + "_" + key;
          this._options.storage.setItem(keyName, value);
          return this._options.afterSetState(keyName, value);
        } else {
          if (this._state == null) {
            this._state = {};
          }
          return this._state[key] = value;
        }
      };

      Tour.prototype.removeState = function(key) {
        var keyName;
        if (this._options.storage) {
          keyName = "" + this._options.name + "_" + key;
          this._options.storage.removeItem(keyName);
          return this._options.afterRemoveState(keyName);
        } else {
          if (this._state != null) {
            return delete this._state[key];
          }
        }
      };

      Tour.prototype.getState = function(key) {
        var keyName, value;
        if (this._options.storage) {
          keyName = "" + this._options.name + "_" + key;
          value = this._options.storage.getItem(keyName);
        } else {
          if (this._state != null) {
            value = this._state[key];
          }
        }
        if (value === void 0 || value === "null") {
          value = null;
        }
        this._options.afterGetState(key, value);
        return value;
      };

      Tour.prototype.addSteps = function(steps) {
        var step, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = steps.length; _i < _len; _i++) {
          step = steps[_i];
          _results.push(this.addStep(step));
        }
        return _results;
      };

      Tour.prototype.addStep = function(step) {
        return this._steps.push(step);
      };

      Tour.prototype.getStep = function(i) {
        if (this._steps[i] != null) {
          return $.extend({
            id: "step-" + i,
            path: "",
            placement: "right",
            title: "",
            content: "<p></p>",
            next: i === this._steps.length - 1 ? -1 : i + 1,
            prev: i - 1,
            animation: true,
            container: this._options.container,
            backdrop: this._options.backdrop,
            redirect: this._options.redirect,
            orphan: this._options.orphan,
            template: this._options.template,
            onShow: this._options.onShow,
            onShown: this._options.onShown,
            onHide: this._options.onHide,
            onHidden: this._options.onHidden,
            onNext: this._options.onNext,
            onPrev: this._options.onPrev
          }, this._steps[i]);
        }
      };

      Tour.prototype.start = function(force) {
        var promise,
          _this = this;
        if (force == null) {
          force = false;
        }
        if (this.ended() && !force) {
          return this._debug("Tour ended, start prevented.");
        }
        $(document).off("click.tour-" + this._options.name, ".popover.tour-" + this._options.name + " *[data-role=next]").on("click.tour-" + this._options.name, ".popover.tour-" + this._options.name + " *[data-role=next]:not(.disabled)", function(e) {
          e.preventDefault();
          return _this.next();
        });
        $(document).off("click.tour-" + this._options.name, ".popover.tour-" + this._options.name + " *[data-role=prev]").on("click.tour-" + this._options.name, ".popover.tour-" + this._options.name + " *[data-role=prev]:not(.disabled)", function(e) {
          e.preventDefault();
          return _this.prev();
        });
        $(document).off("click.tour-" + this._options.name, ".popover.tour-" + this._options.name + " *[data-role=end]").on("click.tour-" + this._options.name, ".popover.tour-" + this._options.name + " *[data-role=end]", function(e) {
          e.preventDefault();
          return _this.end();
        });
        this._onResize(function() {
          return _this.showStep(_this._current);
        });
        this._setupKeyboardNavigation();
        promise = this._makePromise(this._options.onStart != null ? this._options.onStart(this) : void 0);
        return this._callOnPromiseDone(promise, this.showStep, this._current);
      };

      Tour.prototype.next = function() {
        var promise;
        if (this.ended()) {
          return this._debug("Tour ended, next prevented.");
        }
        promise = this.hideStep(this._current);
        return this._callOnPromiseDone(promise, this._showNextStep);
      };

      Tour.prototype.prev = function() {
        var promise;
        if (this.ended()) {
          return this._debug("Tour ended, prev prevented.");
        }
        promise = this.hideStep(this._current);
        return this._callOnPromiseDone(promise, this._showPrevStep);
      };

      Tour.prototype.goto = function(i) {
        var promise;
        if (this.ended()) {
          return this._debug("Tour ended, goto prevented.");
        }
        promise = this.hideStep(this._current);
        return this._callOnPromiseDone(promise, this.showStep, i);
      };

      Tour.prototype.end = function() {
        var endHelper, hidePromise,
          _this = this;
        endHelper = function(e) {
          $(document).off("click.tour-" + _this._options.name);
          $(document).off("keyup.tour-" + _this._options.name);
          $(window).off("resize.tour-" + _this._options.name);
          _this.setState("end", "yes");
          if (_this._options.onEnd != null) {
            return _this._options.onEnd(_this);
          }
        };
        hidePromise = this.hideStep(this._current);
        return this._callOnPromiseDone(hidePromise, endHelper);
      };

      Tour.prototype.ended = function() {
        return !!this.getState("end");
      };

      Tour.prototype.restart = function() {
        this.removeState("current_step");
        this.removeState("end");
        this.setCurrentStep(0);
        return this.start();
      };

      Tour.prototype.hideStep = function(i) {
        var hideStepHelper, promise, step,
          _this = this;
        step = this.getStep(i);
        promise = this._makePromise(step.onHide != null ? step.onHide(this, i) : void 0);
        hideStepHelper = function(e) {
          var $element;
          $element = _this._isOrphan(step) ? $("body") : $(step.element);
          $element.popover("destroy");
          if (step.reflex) {
            $element.css("cursor", "").off("click.tour-" + _this._options.name);
          }
          if (step.backdrop) {
            _this._hideBackdrop();
          }
          if (step.onHidden != null) {
            return step.onHidden(_this);
          }
        };
        this._callOnPromiseDone(promise, hideStepHelper);
        return promise;
      };

      Tour.prototype.showStep = function(i) {
        var promise, showStepHelper, skipToPrevious, step,
          _this = this;
        step = this.getStep(i);
        if (!step) {
          return;
        }
        skipToPrevious = i < this._current;
        promise = this._makePromise(step.onShow != null ? step.onShow(this, i) : void 0);
        showStepHelper = function(e) {
          var current_path, path;
          _this.setCurrentStep(i);
          path = $.isFunction(step.path) ? step.path.call() : _this._options.basePath + step.path;
          current_path = [document.location.pathname, document.location.hash].join("");
          if (_this._isRedirect(path, current_path)) {
            _this._redirect(step, path);
            return;
          }
          if (_this._isOrphan(step)) {
            if (!step.orphan) {
              _this._debug("Skip the orphan step " + (_this._current + 1) + ". Orphan option is false and the element doesn't exist or is hidden.");
              if (skipToPrevious) {
                _this._showPrevStep();
              } else {
                _this._showNextStep();
              }
              return;
            }
            _this._debug("Show the orphan step " + (_this._current + 1) + ". Orphans option is true.");
          }
          if (step.backdrop) {
            _this._showBackdrop(!_this._isOrphan(step) ? step.element : void 0);
          }
          _this._showPopover(step, i);
          if (step.onShown != null) {
            step.onShown(_this);
          }
          return _this._debug("Step " + (_this._current + 1) + " of " + _this._steps.length);
        };
        return this._callOnPromiseDone(promise, showStepHelper);
      };

      Tour.prototype.setCurrentStep = function(value) {
        if (value != null) {
          this._current = value;
          return this.setState("current_step", value);
        } else {
          this._current = this.getState("current_step");
          return this._current = this._current === null ? 0 : parseInt(this._current, 10);
        }
      };

      Tour.prototype._showNextStep = function() {
        var promise, showNextStepHelper, step,
          _this = this;
        step = this.getStep(this._current);
        showNextStepHelper = function(e) {
          return _this.showStep(step.next);
        };
        promise = this._makePromise((step.onNext != null ? step.onNext(this) : void 0));
        return this._callOnPromiseDone(promise, showNextStepHelper);
      };

      Tour.prototype._showPrevStep = function() {
        var promise, showPrevStepHelper, step,
          _this = this;
        step = this.getStep(this._current);
        showPrevStepHelper = function(e) {
          return _this.showStep(step.prev);
        };
        promise = this._makePromise((step.onPrev != null ? step.onPrev(this) : void 0));
        return this._callOnPromiseDone(promise, showPrevStepHelper);
      };

      Tour.prototype._debug = function(text) {
        if (this._options.debug) {
          return window.console.log("Bootstrap Tour '" + this._options.name + "' | " + text);
        }
      };

      Tour.prototype._isRedirect = function(path, currentPath) {
        return (path != null) && path !== "" && path.replace(/\?.*$/, "").replace(/\/?$/, "") !== currentPath.replace(/\/?$/, "");
      };

      Tour.prototype._redirect = function(step, path) {
        if ($.isFunction(step.redirect)) {
          return step.redirect.call(this, path);
        } else if (step.redirect === true) {
          this._debug("Redirect to " + path);
          return document.location.href = path;
        }
      };

      Tour.prototype._isOrphan = function(step) {
        return (step.element == null) || !$(step.element).length || $(step.element).is(":hidden");
      };

      Tour.prototype._showPopover = function(step, i) {
        var $element, $navigation, $template, $tip, isOrphan, options,
          _this = this;
        options = $.extend({}, this._options);
        $template = $.isFunction(step.template) ? $(step.template(i, step)) : $(step.template);
        $navigation = $template.find(".popover-navigation");
        isOrphan = this._isOrphan(step);
        if (isOrphan) {
          step.element = "body";
          step.placement = "top";
          $template = $template.addClass("orphan");
        }
        $element = $(step.element);
        $template.addClass("tour-" + this._options.name);
        if (step.options) {
          $.extend(options, step.options);
        }
        if (step.reflex) {
          $element.css("cursor", "pointer").on("click.tour-" + this._options.name, function(e) {
            if (_this._current < _this._steps.length - 1) {
              return _this.next();
            } else {
              return _this.end();
            }
          });
        }
        if (step.prev < 0) {
          $navigation.find("*[data-role=prev]").addClass("disabled");
        }
        if (step.next < 0) {
          $navigation.find("*[data-role=next]").addClass("disabled");
        }
        step.template = $template.clone().wrap("<div>").parent().html();
        $element.popover({
          placement: step.placement,
          trigger: "manual",
          title: step.title,
          content: step.content,
          html: true,
          animation: step.animation,
          container: step.container,
          template: step.template,
          selector: step.element
        }).popover("show");
        $tip = $element.data("bs.popover") ? $element.data("bs.popover").tip() : $element.data("popover").tip();
        $tip.attr("id", step.id);
        this._scrollIntoView($tip);
        this._reposition($tip, step);
        if (isOrphan) {
          return this._center($tip);
        }
      };

      Tour.prototype._reposition = function($tip, step) {
        var offsetBottom, offsetHeight, offsetRight, offsetWidth, originalLeft, originalTop, tipOffset;
        offsetWidth = $tip[0].offsetWidth;
        offsetHeight = $tip[0].offsetHeight;
        tipOffset = $tip.offset();
        originalLeft = tipOffset.left;
        originalTop = tipOffset.top;
        offsetBottom = $(document).outerHeight() - tipOffset.top - $tip.outerHeight();
        if (offsetBottom < 0) {
          tipOffset.top = tipOffset.top + offsetBottom;
        }
        offsetRight = $("html").outerWidth() - tipOffset.left - $tip.outerWidth();
        if (offsetRight < 0) {
          tipOffset.left = tipOffset.left + offsetRight;
        }
        if (tipOffset.top < 0) {
          tipOffset.top = 0;
        }
        if (tipOffset.left < 0) {
          tipOffset.left = 0;
        }
        $tip.offset(tipOffset);
        if (step.placement === "bottom" || step.placement === "top") {
          if (originalLeft !== tipOffset.left) {
            return this._replaceArrow($tip, (tipOffset.left - originalLeft) * 2, offsetWidth, "left");
          }
        } else {
          if (originalTop !== tipOffset.top) {
            return this._replaceArrow($tip, (tipOffset.top - originalTop) * 2, offsetHeight, "top");
          }
        }
      };

      Tour.prototype._center = function($tip) {
        return $tip.css("top", $(window).outerHeight() / 2 - $tip.outerHeight() / 2);
      };

      Tour.prototype._replaceArrow = function($tip, delta, dimension, position) {
        return $tip.find(".arrow").css(position, delta ? 50 * (1 - delta / dimension) + "%" : "");
      };

      Tour.prototype._scrollIntoView = function(tip) {
        return $("html, body").stop().animate({
          scrollTop: Math.ceil(tip.offset().top - ($(window).height() / 2))
        });
      };

      Tour.prototype._onResize = function(callback, timeout) {
        return $(window).on("resize.tour-" + this._options.name, function() {
          clearTimeout(timeout);
          return timeout = setTimeout(callback, 100);
        });
      };

      Tour.prototype._setupKeyboardNavigation = function() {
        var _this = this;
        if (this._options.keyboard) {
          return $(document).on("keyup.tour-" + this._options.name, function(e) {
            if (!e.which) {
              return;
            }
            switch (e.which) {
              case 39:
                e.preventDefault();
                if (_this._current < _this._steps.length - 1) {
                  return _this.next();
                } else {
                  return _this.end();
                }
                break;
              case 37:
                e.preventDefault();
                if (_this._current > 0) {
                  return _this.prev();
                }
                break;
              case 27:
                e.preventDefault();
                return _this.end();
            }
          });
        }
      };

      Tour.prototype._makePromise = function(result) {
        if (result && $.isFunction(result.then)) {
          return result;
        } else {
          return null;
        }
      };

      Tour.prototype._callOnPromiseDone = function(promise, cb, arg) {
        var _this = this;
        if (promise) {
          return promise.then(function(e) {
            return cb.call(_this, arg);
          });
        } else {
          return cb.call(this, arg);
        }
      };

      Tour.prototype._showBackdrop = function(element) {
        if (this.backdrop.overlay !== null) {
          return;
        }
        this._showOverlay();
        if (element != null) {
          return this._showOverlayElement(element);
        }
      };

      Tour.prototype._hideBackdrop = function() {
        if (this.backdrop.overlay === null) {
          return;
        }
        if (this.backdrop.$element) {
          this._hideOverlayElement();
        }
        return this._hideOverlay();
      };

      Tour.prototype._showOverlay = function() {
        this.backdrop = $("<div/>", {
          "class": "tour-backdrop"
        });
        return $("body").append(this.backdrop);
      };

      Tour.prototype._hideOverlay = function() {
        this.backdrop.remove();
        return this.backdrop.overlay = null;
      };

      Tour.prototype._showOverlayElement = function(element) {
        var $background, $element, offset;
        $element = $(element);
        $background = $("<div/>");
        offset = $element.offset();
        offset.top = offset.top;
        offset.left = offset.left;
        $background.width($element.innerWidth()).height($element.innerHeight()).addClass("tour-step-background").offset(offset);
        $element.addClass("tour-step-backdrop");
        $("body").append($background);
        this.backdrop.$element = $element;
        return this.backdrop.$background = $background;
      };

      Tour.prototype._hideOverlayElement = function() {
        this.backdrop.$element.removeClass("tour-step-backdrop");
        this.backdrop.$background.remove();
        this.backdrop.$element = null;
        return this.backdrop.$background = null;
      };

      return Tour;

    })();
    return window.Tour = Tour;
  })(jQuery, window);

}).call(this);

define("bootstrap-tour", function(){});

define('extensions/welcomeTour',[
    "jquery",
    "classes/Extension",
    "bootstrap-tour"
], function($, Extension) {

    var welcomeTour = new Extension("welcomeTour", "Welcome tour", false, true);

    welcomeTour.onReady = function() {
        var tour = new Tour({
            storage: {
                getItem: function() {
                },
                setItem: function() {
                },
                removeItem: function() {
                }
            },
            onEnd: function(tour) {
                localStorage.welcomeTour = "done";
            },
            template: [
                "<div class='popover tour'>",
                "   <div class='arrow'></div>",
                "   <h3 class='popover-title'></h3>",
                "   <div class='popover-content'></div>",
                "   <nav class='popover-navigation'>",
                "       <button class='btn btn-primary' data-role='next'>Next</button>",
                "       <button class='btn btn-default' data-role='end'>Got it!</button>",
                "   </nav>",
                "</div>"
            ].join('')
        });
        tour.addSteps([
            {
                element: ".navbar-inner",
                title: "Welcome to StackEdit!",
                content: "Please click <code>Next</code> to take a quick tour.",
                placement: "bottom",
            },
            {
                element: ".navbar .action-create-file",
                title: "New document",
                content: "Click the <i class='icon-file'></i> <code>New document</code> button to create a new document.",
                placement: "left",
                reflex: true,
            },
            {
                element: ".document-panel .collapse-button",
                title: "Toggle document",
                content: [
                    "<p>Click the <i class='icon-folder-open'></i> <code>Select document</code> button to switch to another document.</p>",
                    "<b>NOTE: </b>Use <code>Ctrl+[</code> and <code>Ctrl+]</code> shortcuts to toggle quickly."
                ].join(''),
                placement: "left",
                reflex: true,
            },
            {
                element: ".menu-panel .collapse-button",
                title: "Menu",
                content: [
                    "<p>Use the <i class='icon-provider-stackedit'></i> menu to synchronize your document on <i class='icon-provider-gdrive'></i> <code>Google Drive</code> or <i class='icon-provider-dropbox'></i> <code>Dropbox</code>.</p>",
                    "Use also this menu to publish your document on <i class='icon-provider-github'></i> <code>GitHub</code>, <i class='icon-provider-blogger'></i> <code>Blogger</code>, <i class='icon-provider-wordpress'></i> <code>WordPress</code>..."
                ].join(''),
                placement: "right",
                reflex: true,
            },
            {
                element: "#extension-buttons .button-synchronize",
                title: "Synchronize",
                content: "<p>Once imported/exported, use the <i class='icon-refresh'></i> <code>Synchronize</code> button to force the synchronization (this is done automatically every 3 minutes).</p>",
                placement: "bottom",
                reflex: true,
            },
            {
                element: "#extension-buttons .button-publish",
                title: "Update publications",
                content: "Once published, use the <i class='icon-share'></i> <code>Publish</code> button to update your publications.",
                placement: "bottom",
                reflex: true,
            },
        ]);
        if(!_.has(localStorage, 'welcomeTour')) {
            tour.start();
        }
        $('.action-welcome-tour').click(function() {
            tour.restart();
        });
    };

    return welcomeTour;

});


/**
 * Typo is a JavaScript implementation of a spellchecker using hunspell-style 
 * dictionaries.
 */

/**
 * Typo constructor.
 *
 * @param {String} [dictionary] The locale code of the dictionary being used. e.g.,
 *                              "en_US". This is only used to auto-load dictionaries.
 * @param {String} [affData] The data from the dictionary's .aff file. If omitted
 *                           and the first argument is supplied, in "chrome" platform,
 *                           the .aff file will be loaded automatically from
 *                           lib/typo/dictionaries/[dictionary]/[dictionary].aff
 *                           In other platform, it will be loaded from
 *                           [setting.path]/dictionaries/[dictionary]/[dictionary].aff
 * @param {String} [wordsData] The data from the dictionary's .dic file. If omitted,
 *                           and the first argument is supplied, in "chrome" platform,
 *                           the .dic file will be loaded automatically from
 *                           lib/typo/dictionaries/[dictionary]/[dictionary].dic
 *                           In other platform, it will be loaded from
 *                           [setting.path]/dictionaries/[dictionary]/[dictionary].dic
 * @param {Object} [settings] Constructor settings. Available properties are:
 *                            {String} [platform]: "chrome" for Chrome Extension or other
 *                              value for the usual web.
 *                            {String} [path]: path to load dictionary from in non-chrome
 *                              environment.
 *                            {Object} [flags]: flag information.
 *
 *
 * @returns {Typo} A Typo object.
 */

var Typo = function (dictionary, affData, wordsData, settings) {
	settings = settings || {};
	
	/** Determines the method used for auto-loading .aff and .dic files. **/
	this.platform = settings.platform || "chrome"; 
	
	this.dictionary = null;
	
	this.rules = {};
	this.dictionaryTable = {};
	
	this.compoundRules = [];
	this.compoundRuleCodes = {};
	
	this.replacementTable = [];
	
	this.flags = settings.flags || {}; 
	
	if (dictionary) {
		this.dictionary = dictionary;
		
		if (this.platform == "chrome") {
			if (!affData) affData = this._readFile(chrome.extension.getURL("lib/typo/dictionaries/" + dictionary + "/" + dictionary + ".aff"));
			if (!wordsData) wordsData = this._readFile(chrome.extension.getURL("lib/typo/dictionaries/" + dictionary + "/" + dictionary + ".dic"));
		} else {
			var path = settings.dictionaryPath || '';
			
			if (!affData) affData = this._readFile(path + "/" + dictionary + "/" + dictionary + ".aff");
			if (!wordsData) wordsData = this._readFile(path + "/" + dictionary + "/" + dictionary + ".dic");
		}
		
		this.rules = this._parseAFF(affData);
		
		// Save the rule codes that are used in compound rules.
		this.compoundRuleCodes = {};
		
		for (var i = 0, _len = this.compoundRules.length; i < _len; i++) {
			var rule = this.compoundRules[i];
			
			for (var j = 0, _jlen = rule.length; j < _jlen; j++) {
				this.compoundRuleCodes[rule[j]] = [];
			}
		}
		
		// If we add this ONLYINCOMPOUND flag to this.compoundRuleCodes, then _parseDIC
		// will do the work of saving the list of words that are compound-only.
		if ("ONLYINCOMPOUND" in this.flags) {
			this.compoundRuleCodes[this.flags.ONLYINCOMPOUND] = [];
		}
		
		this.dictionaryTable = this._parseDIC(wordsData);
		
		// Get rid of any codes from the compound rule codes that are never used 
		// (or that were special regex characters).  Not especially necessary... 
		for (var i in this.compoundRuleCodes) {
			if (this.compoundRuleCodes[i].length == 0) {
				delete this.compoundRuleCodes[i];
			}
		}
		
		// Build the full regular expressions for each compound rule.
		// I have a feeling (but no confirmation yet) that this method of 
		// testing for compound words is probably slow.
		for (var i = 0, _len = this.compoundRules.length; i < _len; i++) {
			var ruleText = this.compoundRules[i];
			
			var expressionText = "";
			
			for (var j = 0, _jlen = ruleText.length; j < _jlen; j++) {
				var character = ruleText[j];
				
				if (character in this.compoundRuleCodes) {
					expressionText += "(" + this.compoundRuleCodes[character].join("|") + ")";
				}
				else {
					expressionText += character;
				}
			}
			
			this.compoundRules[i] = new RegExp(expressionText, "i");
		}
	}
	
	return this;
};

Typo.prototype = {
	/**
	 * Loads a Typo instance from a hash of all of the Typo properties.
	 *
	 * @param object obj A hash of Typo properties, probably gotten from a JSON.parse(JSON.stringify(typo_instance)).
	 */
	
	load : function (obj) {
		for (var i in obj) {
			this[i] = obj[i];
		}
		
		return this;
	},
	
	/**
	 * Read the contents of a file.
	 * 
	 * @param {String} path The path (relative) to the file.
	 * @param {String} [charset="ISO8859-1"] The expected charset of the file
	 * @returns string The file data.
	 */
	
	_readFile : function (path, charset) {
		if (!charset) charset = "ISO8859-1";
		
		var req = new XMLHttpRequest();
		req.open("GET", path, false);
		
		if (req.overrideMimeType)
			req.overrideMimeType("text/plain; charset=" + charset);
		
		req.send(null);
		
		return req.responseText;
	},
	
	/**
	 * Parse the rules out from a .aff file.
	 *
	 * @param {String} data The contents of the affix file.
	 * @returns object The rules from the file.
	 */
	
	_parseAFF : function (data) {
		var rules = {};
		
		// Remove comment lines
		data = this._removeAffixComments(data);
		
		var lines = data.split("\n");
		
		for (var i = 0, _len = lines.length; i < _len; i++) {
			var line = lines[i];
			
			var definitionParts = line.split(/\s+/);
			
			var ruleType = definitionParts[0];
			
			if (ruleType == "PFX" || ruleType == "SFX") {
				var ruleCode = definitionParts[1];
				var combineable = definitionParts[2];
				var numEntries = parseInt(definitionParts[3], 10);
				
				var entries = [];
				
				for (var j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {
					var line = lines[j];
					
					var lineParts = line.split(/\s+/);
					var charactersToRemove = lineParts[2];
					
					var additionParts = lineParts[3].split("/");
					
					var charactersToAdd = additionParts[0];
					if (charactersToAdd === "0") charactersToAdd = "";
					
					var continuationClasses = this.parseRuleCodes(additionParts[1]);
					
					var regexToMatch = lineParts[4];
					
					var entry = {};
					entry.add = charactersToAdd;
					
					if (continuationClasses.length > 0) entry.continuationClasses = continuationClasses;
					
					if (regexToMatch !== ".") {
						if (ruleType === "SFX") {
							entry.match = new RegExp(regexToMatch + "$");
						}
						else {
							entry.match = new RegExp("^" + regexToMatch);
						}
					}
					
					if (charactersToRemove != "0") {
						if (ruleType === "SFX") {
							entry.remove = new RegExp(charactersToRemove  + "$");
						}
						else {
							entry.remove = charactersToRemove;
						}
					}
					
					entries.push(entry);
				}
				
				rules[ruleCode] = { "type" : ruleType, "combineable" : (combineable == "Y"), "entries" : entries };
				
				i += numEntries;
			}
			else if (ruleType === "COMPOUNDRULE") {
				var numEntries = parseInt(definitionParts[1], 10);
				
				for (var j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {
					var line = lines[j];
					
					var lineParts = line.split(/\s+/);
					this.compoundRules.push(lineParts[1]);
				}
				
				i += numEntries;
			}
			else if (ruleType === "REP") {
				var lineParts = line.split(/\s+/);
				
				if (lineParts.length === 3) {
					this.replacementTable.push([ lineParts[1], lineParts[2] ]);
				}
			}
			else {
				// ONLYINCOMPOUND
				// COMPOUNDMIN
				// FLAG
				// KEEPCASE
				// NEEDAFFIX
				
				this.flags[ruleType] = definitionParts[1];
			}
		}
		
		return rules;
	},
	
	/**
	 * Removes comment lines and then cleans up blank lines and trailing whitespace.
	 *
	 * @param {String} data The data from an affix file.
	 * @return {String} The cleaned-up data.
	 */
	
	_removeAffixComments : function (data) {
		// Remove comments
		data = data.replace(/#.*$/mg, "");
		
		// Trim each line
		data = data.replace(/^\s\s*/m, '').replace(/\s\s*$/m, '');
		
		// Remove blank lines.
		data = data.replace(/\n{2,}/g, "\n");
		
		// Trim the entire string
		data = data.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
		
		return data;
	},
	
	/**
	 * Parses the words out from the .dic file.
	 *
	 * @param {String} data The data from the dictionary file.
	 * @returns object The lookup table containing all of the words and
	 *                 word forms from the dictionary.
	 */
	
	_parseDIC : function (data) {
		data = this._removeDicComments(data);
		
		var lines = data.split("\n");
		var dictionaryTable = {};
		
		function addWord(word, rules) {
			// Some dictionaries will list the same word multiple times with different rule sets.
			if (!(word in dictionaryTable) || typeof dictionaryTable[word] != 'object') {
				dictionaryTable[word] = [];
			}
			
			dictionaryTable[word].push(rules);
		}
		
		// The first line is the number of words in the dictionary.
		for (var i = 1, _len = lines.length; i < _len; i++) {
			var line = lines[i];
			
			var parts = line.split("/", 2);
			
			var word = parts[0];

			// Now for each affix rule, generate that form of the word.
			if (parts.length > 1) {
				var ruleCodesArray = this.parseRuleCodes(parts[1]);
				
				// Save the ruleCodes for compound word situations.
				if (!("NEEDAFFIX" in this.flags) || ruleCodesArray.indexOf(this.flags.NEEDAFFIX) == -1) {
					addWord(word, ruleCodesArray);
				}
				
				for (var j = 0, _jlen = ruleCodesArray.length; j < _jlen; j++) {
					var code = ruleCodesArray[j];
					
					var rule = this.rules[code];
					
					if (rule) {
						var newWords = this._applyRule(word, rule);
						
						for (var ii = 0, _iilen = newWords.length; ii < _iilen; ii++) {
							var newWord = newWords[ii];
							
							addWord(newWord, []);
							
							if (rule.combineable) {
								for (var k = j + 1; k < _jlen; k++) {
									var combineCode = ruleCodesArray[k];
									
									var combineRule = this.rules[combineCode];
									
									if (combineRule) {
										if (combineRule.combineable && (rule.type != combineRule.type)) {
											var otherNewWords = this._applyRule(newWord, combineRule);
											
											for (var iii = 0, _iiilen = otherNewWords.length; iii < _iiilen; iii++) {
												var otherNewWord = otherNewWords[iii];
												addWord(otherNewWord, []);
											}
										}
									}
								}
							}
						}
					}
					
					if (code in this.compoundRuleCodes) {
						this.compoundRuleCodes[code].push(word);
					}
				}
			}
			else {
				addWord(word, []);
			}
		}
		
		return dictionaryTable;
	},
	
	
	/**
	 * Removes comment lines and then cleans up blank lines and trailing whitespace.
	 *
	 * @param {String} data The data from a .dic file.
	 * @return {String} The cleaned-up data.
	 */
	
	_removeDicComments : function (data) {
		// I can't find any official documentation on it, but at least the de_DE
		// dictionary uses tab-indented lines as comments.
		
		// Remove comments
		data = data.replace(/^\t.*$/mg, "");
		
		return data;
		
		// Trim each line
		data = data.replace(/^\s\s*/m, '').replace(/\s\s*$/m, '');
		
		// Remove blank lines.
		data = data.replace(/\n{2,}/g, "\n");
		
		// Trim the entire string
		data = data.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
		
		return data;
	},
	
	parseRuleCodes : function (textCodes) {
		if (!textCodes) {
			return [];
		}
		else if (!("FLAG" in this.flags)) {
			return textCodes.split("");
		}
		else if (this.flags.FLAG === "long") {
			var flags = [];
			
			for (var i = 0, _len = textCodes.length; i < _len; i += 2) {
				flags.push(textCodes.substr(i, 2));
			}
			
			return flags;
		}
		else if (this.flags.FLAG === "num") {
			return textCode.split(",");
		}
	},
	
	/**
	 * Applies an affix rule to a word.
	 *
	 * @param {String} word The base word.
	 * @param {Object} rule The affix rule.
	 * @returns {String[]} The new words generated by the rule.
	 */
	
	_applyRule : function (word, rule) {
		var entries = rule.entries;
		var newWords = [];
		
		for (var i = 0, _len = entries.length; i < _len; i++) {
			var entry = entries[i];
			
			if (!entry.match || word.match(entry.match)) {
				var newWord = word;
				
				if (entry.remove) {
					newWord = newWord.replace(entry.remove, "");
				}
				
				if (rule.type === "SFX") {
					newWord = newWord + entry.add;
				}
				else {
					newWord = entry.add + newWord;
				}
				
				newWords.push(newWord);
				
				if ("continuationClasses" in entry) {
					for (var j = 0, _jlen = entry.continuationClasses.length; j < _jlen; j++) {
						var continuationRule = this.rules[entry.continuationClasses[j]];
						
						if (continuationRule) {
							newWords = newWords.concat(this._applyRule(newWord, continuationRule));
						}
						/*
						else {
							// This shouldn't happen, but it does, at least in the de_DE dictionary.
							// I think the author mistakenly supplied lower-case rule codes instead 
							// of upper-case.
						}
						*/
					}
				}
			}
		}
		
		return newWords;
	},
	
	/**
	 * Checks whether a word or a capitalization variant exists in the current dictionary.
	 * The word is trimmed and several variations of capitalizations are checked.
	 * If you want to check a word without any changes made to it, call checkExact()
	 *
	 * @see http://blog.stevenlevithan.com/archives/faster-trim-javascript re:trimming function
	 *
	 * @param {String} aWord The word to check.
	 * @returns {Boolean}
	 */
	
	check : function (aWord) {
		// Remove leading and trailing whitespace
		var trimmedWord = aWord.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
		
		if (this.checkExact(trimmedWord)) {
			return true;
		}
		
		// The exact word is not in the dictionary.
		if (trimmedWord.toUpperCase() === trimmedWord) {
			// The word was supplied in all uppercase.
			// Check for a capitalized form of the word.
			var capitalizedWord = trimmedWord[0] + trimmedWord.substring(1).toLowerCase();
			
			if (this.hasFlag(capitalizedWord, "KEEPCASE")) {
				// Capitalization variants are not allowed for this word.
				return false;
			}
			
			if (this.checkExact(capitalizedWord)) {
				return true;
			}
		}
		
		var lowercaseWord = trimmedWord.toLowerCase();
		
		if (lowercaseWord !== trimmedWord) {
			if (this.hasFlag(lowercaseWord, "KEEPCASE")) {
				// Capitalization variants are not allowed for this word.
				return false;
			}
			
			// Check for a lowercase form
			if (this.checkExact(lowercaseWord)) {
				return true;
			}
		}
		
		return false;
	},
	
	/**
	 * Checks whether a word exists in the current dictionary.
	 *
	 * @param {String} word The word to check.
	 * @returns {Boolean}
	 */
	
	checkExact : function (word) {
		var ruleCodes = this.dictionaryTable[word];
		
		if (typeof ruleCodes === 'undefined') {
			// Check if this might be a compound word.
			if ("COMPOUNDMIN" in this.flags && word.length >= this.flags.COMPOUNDMIN) {
				for (var i = 0, _len = this.compoundRules.length; i < _len; i++) {
					if (word.match(this.compoundRules[i])) {
						return true;
					}
				}
			}
			
			return false;
		}
		else {
			for (var i = 0, _len = ruleCodes.length; i < _len; i++) {
				if (!this.hasFlag(word, "ONLYINCOMPOUND", ruleCodes[i])) {
					return true;
				}
			}
			
			return false;
		}
	},
	
	/**
	 * Looks up whether a given word is flagged with a given flag.
	 *
	 * @param {String} word The word in question.
	 * @param {String} flag The flag in question.
	 * @return {Boolean}
	 */
	 
	hasFlag : function (word, flag, wordFlags) {
		if (flag in this.flags) {
			if (typeof wordFlags === 'undefined') {
				var wordFlags = Array.prototype.concat.apply([], this.dictionaryTable[word]);
			}
			
			if (wordFlags && wordFlags.indexOf(this.flags[flag]) !== -1) {
				return true;
			}
		}
		
		return false;
	},
	
	/**
	 * Returns a list of suggestions for a misspelled word.
	 *
	 * @see http://www.norvig.com/spell-correct.html for the basis of this suggestor.
	 * This suggestor is primitive, but it works.
	 *
	 * @param {String} word The misspelling.
	 * @param {Number} [limit=5] The maximum number of suggestions to return.
	 * @returns {String[]} The array of suggestions.
	 */
	
	alphabet : "",
	
	suggest : function (word, limit) {
		if (!limit) limit = 5;
		
		if (this.check(word)) return [];
		
		// Check the replacement table.
		for (var i = 0, _len = this.replacementTable.length; i < _len; i++) {
			var replacementEntry = this.replacementTable[i];
			
			if (word.indexOf(replacementEntry[0]) !== -1) {
				var correctedWord = word.replace(replacementEntry[0], replacementEntry[1]);
				
				if (this.check(correctedWord)) {
					return [ correctedWord ];
				}
			}
		}
		
		var self = this;
		self.alphabet = "abcdefghijklmnopqrstuvwxyz";
		
		/*
		if (!self.alphabet) {
			// Use the alphabet as implicitly defined by the words in the dictionary.
			var alphaHash = {};
			
			for (var i in self.dictionaryTable) {
				for (var j = 0, _len = i.length; j < _len; j++) {
					alphaHash[i[j]] = true;
				}
			}
			
			for (var i in alphaHash) {
				self.alphabet += i;
			}
			
			var alphaArray = self.alphabet.split("");
			alphaArray.sort();
			self.alphabet = alphaArray.join("");
		}
		*/
		
		function edits1(words) {
			var rv = [];
			
			for (var ii = 0, _iilen = words.length; ii < _iilen; ii++) {
				var word = words[ii];
				
				var splits = [];
			
				for (var i = 0, _len = word.length + 1; i < _len; i++) {
					splits.push([ word.substring(0, i), word.substring(i, word.length) ]);
				}
			
				var deletes = [];
			
				for (var i = 0, _len = splits.length; i < _len; i++) {
					var s = splits[i];
				
					if (s[1]) {
						deletes.push(s[0] + s[1].substring(1));
					}
				}
			
				var transposes = [];
			
				for (var i = 0, _len = splits.length; i < _len; i++) {
					var s = splits[i];
				
					if (s[1].length > 1) {
						transposes.push(s[0] + s[1][1] + s[1][0] + s[1].substring(2));
					}
				}
			
				var replaces = [];
			
				for (var i = 0, _len = splits.length; i < _len; i++) {
					var s = splits[i];
				
					if (s[1]) {
						for (var j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {
							replaces.push(s[0] + self.alphabet[j] + s[1].substring(1));
						}
					}
				}
			
				var inserts = [];
			
				for (var i = 0, _len = splits.length; i < _len; i++) {
					var s = splits[i];
				
					if (s[1]) {
						for (var j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {
							replaces.push(s[0] + self.alphabet[j] + s[1]);
						}
					}
				}
			
				rv = rv.concat(deletes);
				rv = rv.concat(transposes);
				rv = rv.concat(replaces);
				rv = rv.concat(inserts);
			}
			
			return rv;
		}
		
		function known(words) {
			var rv = [];
			
			for (var i = 0; i < words.length; i++) {
				if (self.check(words[i])) {
					rv.push(words[i]);
				}
			}
			
			return rv;
		}
		
		function correct(word) {
			// Get the edit-distance-1 and edit-distance-2 forms of this word.
			var ed1 = edits1([word]);
			var ed2 = edits1(ed1);
			
			var corrections = known(ed1).concat(known(ed2));
			
			// Sort the edits based on how many different ways they were created.
			var weighted_corrections = {};
			
			for (var i = 0, _len = corrections.length; i < _len; i++) {
				if (!(corrections[i] in weighted_corrections)) {
					weighted_corrections[corrections[i]] = 1;
				}
				else {
					weighted_corrections[corrections[i]] += 1;
				}
			}
			
			var sorted_corrections = [];
			
			for (var i in weighted_corrections) {
				sorted_corrections.push([ i, weighted_corrections[i] ]);
			}
			
			function sorter(a, b) {
				if (a[1] < b[1]) {
					return -1;
				}
				
				return 1;
			}
			
			sorted_corrections.sort(sorter).reverse();
			
			var rv = [];
			
			for (var i = 0, _len = Math.min(limit, sorted_corrections.length); i < _len; i++) {
				if (!self.hasFlag(sorted_corrections[i][0], "NOSUGGEST")) {
					rv.push(sorted_corrections[i][0]);
				}
			}
			
			return rv;
		}
		
		return correct(word);
	}
};

define("typo-js", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.Typo;
    };
}(this)));

define('text!bower-libs/Typo.js/typo/typo.js',[],function () { return '\'use strict\';\n\n/**\n * Typo is a JavaScript implementation of a spellchecker using hunspell-style \n * dictionaries.\n */\n\n/**\n * Typo constructor.\n *\n * @param {String} [dictionary] The locale code of the dictionary being used. e.g.,\n *                              "en_US". This is only used to auto-load dictionaries.\n * @param {String} [affData] The data from the dictionary\'s .aff file. If omitted\n *                           and the first argument is supplied, in "chrome" platform,\n *                           the .aff file will be loaded automatically from\n *                           lib/typo/dictionaries/[dictionary]/[dictionary].aff\n *                           In other platform, it will be loaded from\n *                           [setting.path]/dictionaries/[dictionary]/[dictionary].aff\n * @param {String} [wordsData] The data from the dictionary\'s .dic file. If omitted,\n *                           and the first argument is supplied, in "chrome" platform,\n *                           the .dic file will be loaded automatically from\n *                           lib/typo/dictionaries/[dictionary]/[dictionary].dic\n *                           In other platform, it will be loaded from\n *                           [setting.path]/dictionaries/[dictionary]/[dictionary].dic\n * @param {Object} [settings] Constructor settings. Available properties are:\n *                            {String} [platform]: "chrome" for Chrome Extension or other\n *                              value for the usual web.\n *                            {String} [path]: path to load dictionary from in non-chrome\n *                              environment.\n *                            {Object} [flags]: flag information.\n *\n *\n * @returns {Typo} A Typo object.\n */\n\nvar Typo = function (dictionary, affData, wordsData, settings) {\n\tsettings = settings || {};\n\t\n\t/** Determines the method used for auto-loading .aff and .dic files. **/\n\tthis.platform = settings.platform || "chrome"; \n\t\n\tthis.dictionary = null;\n\t\n\tthis.rules = {};\n\tthis.dictionaryTable = {};\n\t\n\tthis.compoundRules = [];\n\tthis.compoundRuleCodes = {};\n\t\n\tthis.replacementTable = [];\n\t\n\tthis.flags = settings.flags || {}; \n\t\n\tif (dictionary) {\n\t\tthis.dictionary = dictionary;\n\t\t\n\t\tif (this.platform == "chrome") {\n\t\t\tif (!affData) affData = this._readFile(chrome.extension.getURL("lib/typo/dictionaries/" + dictionary + "/" + dictionary + ".aff"));\n\t\t\tif (!wordsData) wordsData = this._readFile(chrome.extension.getURL("lib/typo/dictionaries/" + dictionary + "/" + dictionary + ".dic"));\n\t\t} else {\n\t\t\tvar path = settings.dictionaryPath || \'\';\n\t\t\t\n\t\t\tif (!affData) affData = this._readFile(path + "/" + dictionary + "/" + dictionary + ".aff");\n\t\t\tif (!wordsData) wordsData = this._readFile(path + "/" + dictionary + "/" + dictionary + ".dic");\n\t\t}\n\t\t\n\t\tthis.rules = this._parseAFF(affData);\n\t\t\n\t\t// Save the rule codes that are used in compound rules.\n\t\tthis.compoundRuleCodes = {};\n\t\t\n\t\tfor (var i = 0, _len = this.compoundRules.length; i < _len; i++) {\n\t\t\tvar rule = this.compoundRules[i];\n\t\t\t\n\t\t\tfor (var j = 0, _jlen = rule.length; j < _jlen; j++) {\n\t\t\t\tthis.compoundRuleCodes[rule[j]] = [];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If we add this ONLYINCOMPOUND flag to this.compoundRuleCodes, then _parseDIC\n\t\t// will do the work of saving the list of words that are compound-only.\n\t\tif ("ONLYINCOMPOUND" in this.flags) {\n\t\t\tthis.compoundRuleCodes[this.flags.ONLYINCOMPOUND] = [];\n\t\t}\n\t\t\n\t\tthis.dictionaryTable = this._parseDIC(wordsData);\n\t\t\n\t\t// Get rid of any codes from the compound rule codes that are never used \n\t\t// (or that were special regex characters).  Not especially necessary... \n\t\tfor (var i in this.compoundRuleCodes) {\n\t\t\tif (this.compoundRuleCodes[i].length == 0) {\n\t\t\t\tdelete this.compoundRuleCodes[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Build the full regular expressions for each compound rule.\n\t\t// I have a feeling (but no confirmation yet) that this method of \n\t\t// testing for compound words is probably slow.\n\t\tfor (var i = 0, _len = this.compoundRules.length; i < _len; i++) {\n\t\t\tvar ruleText = this.compoundRules[i];\n\t\t\t\n\t\t\tvar expressionText = "";\n\t\t\t\n\t\t\tfor (var j = 0, _jlen = ruleText.length; j < _jlen; j++) {\n\t\t\t\tvar character = ruleText[j];\n\t\t\t\t\n\t\t\t\tif (character in this.compoundRuleCodes) {\n\t\t\t\t\texpressionText += "(" + this.compoundRuleCodes[character].join("|") + ")";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texpressionText += character;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.compoundRules[i] = new RegExp(expressionText, "i");\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\nTypo.prototype = {\n\t/**\n\t * Loads a Typo instance from a hash of all of the Typo properties.\n\t *\n\t * @param object obj A hash of Typo properties, probably gotten from a JSON.parse(JSON.stringify(typo_instance)).\n\t */\n\t\n\tload : function (obj) {\n\t\tfor (var i in obj) {\n\t\t\tthis[i] = obj[i];\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Read the contents of a file.\n\t * \n\t * @param {String} path The path (relative) to the file.\n\t * @param {String} [charset="ISO8859-1"] The expected charset of the file\n\t * @returns string The file data.\n\t */\n\t\n\t_readFile : function (path, charset) {\n\t\tif (!charset) charset = "ISO8859-1";\n\t\t\n\t\tvar req = new XMLHttpRequest();\n\t\treq.open("GET", path, false);\n\t\t\n\t\tif (req.overrideMimeType)\n\t\t\treq.overrideMimeType("text/plain; charset=" + charset);\n\t\t\n\t\treq.send(null);\n\t\t\n\t\treturn req.responseText;\n\t},\n\t\n\t/**\n\t * Parse the rules out from a .aff file.\n\t *\n\t * @param {String} data The contents of the affix file.\n\t * @returns object The rules from the file.\n\t */\n\t\n\t_parseAFF : function (data) {\n\t\tvar rules = {};\n\t\t\n\t\t// Remove comment lines\n\t\tdata = this._removeAffixComments(data);\n\t\t\n\t\tvar lines = data.split("\\n");\n\t\t\n\t\tfor (var i = 0, _len = lines.length; i < _len; i++) {\n\t\t\tvar line = lines[i];\n\t\t\t\n\t\t\tvar definitionParts = line.split(/\\s+/);\n\t\t\t\n\t\t\tvar ruleType = definitionParts[0];\n\t\t\t\n\t\t\tif (ruleType == "PFX" || ruleType == "SFX") {\n\t\t\t\tvar ruleCode = definitionParts[1];\n\t\t\t\tvar combineable = definitionParts[2];\n\t\t\t\tvar numEntries = parseInt(definitionParts[3], 10);\n\t\t\t\t\n\t\t\t\tvar entries = [];\n\t\t\t\t\n\t\t\t\tfor (var j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tvar line = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tvar lineParts = line.split(/\\s+/);\n\t\t\t\t\tvar charactersToRemove = lineParts[2];\n\t\t\t\t\t\n\t\t\t\t\tvar additionParts = lineParts[3].split("/");\n\t\t\t\t\t\n\t\t\t\t\tvar charactersToAdd = additionParts[0];\n\t\t\t\t\tif (charactersToAdd === "0") charactersToAdd = "";\n\t\t\t\t\t\n\t\t\t\t\tvar continuationClasses = this.parseRuleCodes(additionParts[1]);\n\t\t\t\t\t\n\t\t\t\t\tvar regexToMatch = lineParts[4];\n\t\t\t\t\t\n\t\t\t\t\tvar entry = {};\n\t\t\t\t\tentry.add = charactersToAdd;\n\t\t\t\t\t\n\t\t\t\t\tif (continuationClasses.length > 0) entry.continuationClasses = continuationClasses;\n\t\t\t\t\t\n\t\t\t\t\tif (regexToMatch !== ".") {\n\t\t\t\t\t\tif (ruleType === "SFX") {\n\t\t\t\t\t\t\tentry.match = new RegExp(regexToMatch + "$");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.match = new RegExp("^" + regexToMatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (charactersToRemove != "0") {\n\t\t\t\t\t\tif (ruleType === "SFX") {\n\t\t\t\t\t\t\tentry.remove = new RegExp(charactersToRemove  + "$");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.remove = charactersToRemove;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tentries.push(entry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trules[ruleCode] = { "type" : ruleType, "combineable" : (combineable == "Y"), "entries" : entries };\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === "COMPOUNDRULE") {\n\t\t\t\tvar numEntries = parseInt(definitionParts[1], 10);\n\t\t\t\t\n\t\t\t\tfor (var j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tvar line = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tvar lineParts = line.split(/\\s+/);\n\t\t\t\t\tthis.compoundRules.push(lineParts[1]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === "REP") {\n\t\t\t\tvar lineParts = line.split(/\\s+/);\n\t\t\t\t\n\t\t\t\tif (lineParts.length === 3) {\n\t\t\t\t\tthis.replacementTable.push([ lineParts[1], lineParts[2] ]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// ONLYINCOMPOUND\n\t\t\t\t// COMPOUNDMIN\n\t\t\t\t// FLAG\n\t\t\t\t// KEEPCASE\n\t\t\t\t// NEEDAFFIX\n\t\t\t\t\n\t\t\t\tthis.flags[ruleType] = definitionParts[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn rules;\n\t},\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from an affix file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeAffixComments : function (data) {\n\t\t// Remove comments\n\t\tdata = data.replace(/#.*$/mg, "");\n\t\t\n\t\t// Trim each line\n\t\tdata = data.replace(/^\\s\\s*/m, \'\').replace(/\\s\\s*$/m, \'\');\n\t\t\n\t\t// Remove blank lines.\n\t\tdata = data.replace(/\\n{2,}/g, "\\n");\n\t\t\n\t\t// Trim the entire string\n\t\tdata = data.replace(/^\\s\\s*/, \'\').replace(/\\s\\s*$/, \'\');\n\t\t\n\t\treturn data;\n\t},\n\t\n\t/**\n\t * Parses the words out from the .dic file.\n\t *\n\t * @param {String} data The data from the dictionary file.\n\t * @returns object The lookup table containing all of the words and\n\t *                 word forms from the dictionary.\n\t */\n\t\n\t_parseDIC : function (data) {\n\t\tdata = this._removeDicComments(data);\n\t\t\n\t\tvar lines = data.split("\\n");\n\t\tvar dictionaryTable = {};\n\t\t\n\t\tfunction addWord(word, rules) {\n\t\t\t// Some dictionaries will list the same word multiple times with different rule sets.\n\t\t\tif (!(word in dictionaryTable) || typeof dictionaryTable[word] != \'object\') {\n\t\t\t\tdictionaryTable[word] = [];\n\t\t\t}\n\t\t\t\n\t\t\tdictionaryTable[word].push(rules);\n\t\t}\n\t\t\n\t\t// The first line is the number of words in the dictionary.\n\t\tfor (var i = 1, _len = lines.length; i < _len; i++) {\n\t\t\tvar line = lines[i];\n\t\t\t\n\t\t\tvar parts = line.split("/", 2);\n\t\t\t\n\t\t\tvar word = parts[0];\n\n\t\t\t// Now for each affix rule, generate that form of the word.\n\t\t\tif (parts.length > 1) {\n\t\t\t\tvar ruleCodesArray = this.parseRuleCodes(parts[1]);\n\t\t\t\t\n\t\t\t\t// Save the ruleCodes for compound word situations.\n\t\t\t\tif (!("NEEDAFFIX" in this.flags) || ruleCodesArray.indexOf(this.flags.NEEDAFFIX) == -1) {\n\t\t\t\t\taddWord(word, ruleCodesArray);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var j = 0, _jlen = ruleCodesArray.length; j < _jlen; j++) {\n\t\t\t\t\tvar code = ruleCodesArray[j];\n\t\t\t\t\t\n\t\t\t\t\tvar rule = this.rules[code];\n\t\t\t\t\t\n\t\t\t\t\tif (rule) {\n\t\t\t\t\t\tvar newWords = this._applyRule(word, rule);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var ii = 0, _iilen = newWords.length; ii < _iilen; ii++) {\n\t\t\t\t\t\t\tvar newWord = newWords[ii];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\taddWord(newWord, []);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (rule.combineable) {\n\t\t\t\t\t\t\t\tfor (var k = j + 1; k < _jlen; k++) {\n\t\t\t\t\t\t\t\t\tvar combineCode = ruleCodesArray[k];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar combineRule = this.rules[combineCode];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (combineRule) {\n\t\t\t\t\t\t\t\t\t\tif (combineRule.combineable && (rule.type != combineRule.type)) {\n\t\t\t\t\t\t\t\t\t\t\tvar otherNewWords = this._applyRule(newWord, combineRule);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tfor (var iii = 0, _iiilen = otherNewWords.length; iii < _iiilen; iii++) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar otherNewWord = otherNewWords[iii];\n\t\t\t\t\t\t\t\t\t\t\t\taddWord(otherNewWord, []);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (code in this.compoundRuleCodes) {\n\t\t\t\t\t\tthis.compoundRuleCodes[code].push(word);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taddWord(word, []);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dictionaryTable;\n\t},\n\t\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from a .dic file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeDicComments : function (data) {\n\t\t// I can\'t find any official documentation on it, but at least the de_DE\n\t\t// dictionary uses tab-indented lines as comments.\n\t\t\n\t\t// Remove comments\n\t\tdata = data.replace(/^\\t.*$/mg, "");\n\t\t\n\t\treturn data;\n\t\t\n\t\t// Trim each line\n\t\tdata = data.replace(/^\\s\\s*/m, \'\').replace(/\\s\\s*$/m, \'\');\n\t\t\n\t\t// Remove blank lines.\n\t\tdata = data.replace(/\\n{2,}/g, "\\n");\n\t\t\n\t\t// Trim the entire string\n\t\tdata = data.replace(/^\\s\\s*/, \'\').replace(/\\s\\s*$/, \'\');\n\t\t\n\t\treturn data;\n\t},\n\t\n\tparseRuleCodes : function (textCodes) {\n\t\tif (!textCodes) {\n\t\t\treturn [];\n\t\t}\n\t\telse if (!("FLAG" in this.flags)) {\n\t\t\treturn textCodes.split("");\n\t\t}\n\t\telse if (this.flags.FLAG === "long") {\n\t\t\tvar flags = [];\n\t\t\t\n\t\t\tfor (var i = 0, _len = textCodes.length; i < _len; i += 2) {\n\t\t\t\tflags.push(textCodes.substr(i, 2));\n\t\t\t}\n\t\t\t\n\t\t\treturn flags;\n\t\t}\n\t\telse if (this.flags.FLAG === "num") {\n\t\t\treturn textCode.split(",");\n\t\t}\n\t},\n\t\n\t/**\n\t * Applies an affix rule to a word.\n\t *\n\t * @param {String} word The base word.\n\t * @param {Object} rule The affix rule.\n\t * @returns {String[]} The new words generated by the rule.\n\t */\n\t\n\t_applyRule : function (word, rule) {\n\t\tvar entries = rule.entries;\n\t\tvar newWords = [];\n\t\t\n\t\tfor (var i = 0, _len = entries.length; i < _len; i++) {\n\t\t\tvar entry = entries[i];\n\t\t\t\n\t\t\tif (!entry.match || word.match(entry.match)) {\n\t\t\t\tvar newWord = word;\n\t\t\t\t\n\t\t\t\tif (entry.remove) {\n\t\t\t\t\tnewWord = newWord.replace(entry.remove, "");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rule.type === "SFX") {\n\t\t\t\t\tnewWord = newWord + entry.add;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewWord = entry.add + newWord;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnewWords.push(newWord);\n\t\t\t\t\n\t\t\t\tif ("continuationClasses" in entry) {\n\t\t\t\t\tfor (var j = 0, _jlen = entry.continuationClasses.length; j < _jlen; j++) {\n\t\t\t\t\t\tvar continuationRule = this.rules[entry.continuationClasses[j]];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (continuationRule) {\n\t\t\t\t\t\t\tnewWords = newWords.concat(this._applyRule(newWord, continuationRule));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// This shouldn\'t happen, but it does, at least in the de_DE dictionary.\n\t\t\t\t\t\t\t// I think the author mistakenly supplied lower-case rule codes instead \n\t\t\t\t\t\t\t// of upper-case.\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn newWords;\n\t},\n\t\n\t/**\n\t * Checks whether a word or a capitalization variant exists in the current dictionary.\n\t * The word is trimmed and several variations of capitalizations are checked.\n\t * If you want to check a word without any changes made to it, call checkExact()\n\t *\n\t * @see http://blog.stevenlevithan.com/archives/faster-trim-javascript re:trimming function\n\t *\n\t * @param {String} aWord The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheck : function (aWord) {\n\t\t// Remove leading and trailing whitespace\n\t\tvar trimmedWord = aWord.replace(/^\\s\\s*/, \'\').replace(/\\s\\s*$/, \'\');\n\t\t\n\t\tif (this.checkExact(trimmedWord)) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// The exact word is not in the dictionary.\n\t\tif (trimmedWord.toUpperCase() === trimmedWord) {\n\t\t\t// The word was supplied in all uppercase.\n\t\t\t// Check for a capitalized form of the word.\n\t\t\tvar capitalizedWord = trimmedWord[0] + trimmedWord.substring(1).toLowerCase();\n\t\t\t\n\t\t\tif (this.hasFlag(capitalizedWord, "KEEPCASE")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.checkExact(capitalizedWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar lowercaseWord = trimmedWord.toLowerCase();\n\t\t\n\t\tif (lowercaseWord !== trimmedWord) {\n\t\t\tif (this.hasFlag(lowercaseWord, "KEEPCASE")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for a lowercase form\n\t\t\tif (this.checkExact(lowercaseWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Checks whether a word exists in the current dictionary.\n\t *\n\t * @param {String} word The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheckExact : function (word) {\n\t\tvar ruleCodes = this.dictionaryTable[word];\n\t\t\n\t\tif (typeof ruleCodes === \'undefined\') {\n\t\t\t// Check if this might be a compound word.\n\t\t\tif ("COMPOUNDMIN" in this.flags && word.length >= this.flags.COMPOUNDMIN) {\n\t\t\t\tfor (var i = 0, _len = this.compoundRules.length; i < _len; i++) {\n\t\t\t\t\tif (word.match(this.compoundRules[i])) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0, _len = ruleCodes.length; i < _len; i++) {\n\t\t\t\tif (!this.hasFlag(word, "ONLYINCOMPOUND", ruleCodes[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t}\n\t},\n\t\n\t/**\n\t * Looks up whether a given word is flagged with a given flag.\n\t *\n\t * @param {String} word The word in question.\n\t * @param {String} flag The flag in question.\n\t * @return {Boolean}\n\t */\n\t \n\thasFlag : function (word, flag, wordFlags) {\n\t\tif (flag in this.flags) {\n\t\t\tif (typeof wordFlags === \'undefined\') {\n\t\t\t\tvar wordFlags = Array.prototype.concat.apply([], this.dictionaryTable[word]);\n\t\t\t}\n\t\t\t\n\t\t\tif (wordFlags && wordFlags.indexOf(this.flags[flag]) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Returns a list of suggestions for a misspelled word.\n\t *\n\t * @see http://www.norvig.com/spell-correct.html for the basis of this suggestor.\n\t * This suggestor is primitive, but it works.\n\t *\n\t * @param {String} word The misspelling.\n\t * @param {Number} [limit=5] The maximum number of suggestions to return.\n\t * @returns {String[]} The array of suggestions.\n\t */\n\t\n\talphabet : "",\n\t\n\tsuggest : function (word, limit) {\n\t\tif (!limit) limit = 5;\n\t\t\n\t\tif (this.check(word)) return [];\n\t\t\n\t\t// Check the replacement table.\n\t\tfor (var i = 0, _len = this.replacementTable.length; i < _len; i++) {\n\t\t\tvar replacementEntry = this.replacementTable[i];\n\t\t\t\n\t\t\tif (word.indexOf(replacementEntry[0]) !== -1) {\n\t\t\t\tvar correctedWord = word.replace(replacementEntry[0], replacementEntry[1]);\n\t\t\t\t\n\t\t\t\tif (this.check(correctedWord)) {\n\t\t\t\t\treturn [ correctedWord ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar self = this;\n\t\tself.alphabet = "abcdefghijklmnopqrstuvwxyz";\n\t\t\n\t\t/*\n\t\tif (!self.alphabet) {\n\t\t\t// Use the alphabet as implicitly defined by the words in the dictionary.\n\t\t\tvar alphaHash = {};\n\t\t\t\n\t\t\tfor (var i in self.dictionaryTable) {\n\t\t\t\tfor (var j = 0, _len = i.length; j < _len; j++) {\n\t\t\t\t\talphaHash[i[j]] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i in alphaHash) {\n\t\t\t\tself.alphabet += i;\n\t\t\t}\n\t\t\t\n\t\t\tvar alphaArray = self.alphabet.split("");\n\t\t\talphaArray.sort();\n\t\t\tself.alphabet = alphaArray.join("");\n\t\t}\n\t\t*/\n\t\t\n\t\tfunction edits1(words) {\n\t\t\tvar rv = [];\n\t\t\t\n\t\t\tfor (var ii = 0, _iilen = words.length; ii < _iilen; ii++) {\n\t\t\t\tvar word = words[ii];\n\t\t\t\t\n\t\t\t\tvar splits = [];\n\t\t\t\n\t\t\t\tfor (var i = 0, _len = word.length + 1; i < _len; i++) {\n\t\t\t\t\tsplits.push([ word.substring(0, i), word.substring(i, word.length) ]);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar deletes = [];\n\t\t\t\n\t\t\t\tfor (var i = 0, _len = splits.length; i < _len; i++) {\n\t\t\t\t\tvar s = splits[i];\n\t\t\t\t\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tdeletes.push(s[0] + s[1].substring(1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar transposes = [];\n\t\t\t\n\t\t\t\tfor (var i = 0, _len = splits.length; i < _len; i++) {\n\t\t\t\t\tvar s = splits[i];\n\t\t\t\t\n\t\t\t\t\tif (s[1].length > 1) {\n\t\t\t\t\t\ttransposes.push(s[0] + s[1][1] + s[1][0] + s[1].substring(2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar replaces = [];\n\t\t\t\n\t\t\t\tfor (var i = 0, _len = splits.length; i < _len; i++) {\n\t\t\t\t\tvar s = splits[i];\n\t\t\t\t\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (var j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\treplaces.push(s[0] + self.alphabet[j] + s[1].substring(1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar inserts = [];\n\t\t\t\n\t\t\t\tfor (var i = 0, _len = splits.length; i < _len; i++) {\n\t\t\t\t\tvar s = splits[i];\n\t\t\t\t\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (var j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\treplaces.push(s[0] + self.alphabet[j] + s[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\trv = rv.concat(deletes);\n\t\t\t\trv = rv.concat(transposes);\n\t\t\t\trv = rv.concat(replaces);\n\t\t\t\trv = rv.concat(inserts);\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tfunction known(words) {\n\t\t\tvar rv = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tif (self.check(words[i])) {\n\t\t\t\t\trv.push(words[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tfunction correct(word) {\n\t\t\t// Get the edit-distance-1 and edit-distance-2 forms of this word.\n\t\t\tvar ed1 = edits1([word]);\n\t\t\tvar ed2 = edits1(ed1);\n\t\t\t\n\t\t\tvar corrections = known(ed1).concat(known(ed2));\n\t\t\t\n\t\t\t// Sort the edits based on how many different ways they were created.\n\t\t\tvar weighted_corrections = {};\n\t\t\t\n\t\t\tfor (var i = 0, _len = corrections.length; i < _len; i++) {\n\t\t\t\tif (!(corrections[i] in weighted_corrections)) {\n\t\t\t\t\tweighted_corrections[corrections[i]] = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tweighted_corrections[corrections[i]] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sorted_corrections = [];\n\t\t\t\n\t\t\tfor (var i in weighted_corrections) {\n\t\t\t\tsorted_corrections.push([ i, weighted_corrections[i] ]);\n\t\t\t}\n\t\t\t\n\t\t\tfunction sorter(a, b) {\n\t\t\t\tif (a[1] < b[1]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t\n\t\t\tsorted_corrections.sort(sorter).reverse();\n\t\t\t\n\t\t\tvar rv = [];\n\t\t\t\n\t\t\tfor (var i = 0, _len = Math.min(limit, sorted_corrections.length); i < _len; i++) {\n\t\t\t\tif (!self.hasFlag(sorted_corrections[i][0], "NOSUGGEST")) {\n\t\t\t\t\trv.push(sorted_corrections[i][0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\treturn correct(word);\n\t}\n};\n';});

define('text!workers/spellCheckWorker.js',[],function () { return 'var dictionary = undefined;\n\nself.init = function(typoJS, lang, aff, dic) {\n    eval([\n        typoJS,\n        \'dictionary = new Typo(lang, aff, dic);\'\n        ].join(\'\\n\'));\n};\n\nvar timeoutId = undefined;\nself.check = function(words) {\n    // Check function has priority over Suggest function\n    // This prevents Suggest to run if called just before Check\n    timeoutId && clearTimeout(timeoutId);\n    for (var i = 0; i < words.length; i++) {\n        var word = words[i];\n        word.check = dictionary.check(word.value);\n    }\n    postMessage(JSON.stringify([\'check\', words]));\n};\n\nvar word = undefined;\n\nfunction delayedSuggest() {\n    timeoutId = undefined;\n    var suggestions = dictionary.suggest(word);\n    postMessage(JSON.stringify([\'suggest\', suggestions]));\n}\n\nself.suggest = function(wordParam) {\n    word = wordParam;\n    timeoutId = setTimeout(delayedSuggest, 50);\n};\n';});

define('text!dictionaries/en_US.dic',[],function () { return '62118\n0/nm\n1/n1\n2/nm\n3/nm\n4/nm\n5/nm\n6/nm\n7/nm\n8/nm\n9/nm\n0th/pt\n1st/p\n1th/tc\n2nd/p\n2th/tc\n3rd/p\n3th/tc\n4th/pt\n5th/pt\n6th/pt\n7th/pt\n8th/pt\n9th/pt\na\nA\nAA\nAAA\nAachen/M\naardvark/SM\nAaren/M\nAarhus/M\nAarika/M\nAaron/M\nAB\naback\nabacus/SM\nabaft\nAbagael/M\nAbagail/M\nabalone/SM\nabandoner/M\nabandon/LGDRS\nabandonment/SM\nabase/LGDSR\nabasement/S\nabaser/M\nabashed/UY\nabashment/MS\nabash/SDLG\nabate/DSRLG\nabated/U\nabatement/MS\nabater/M\nabattoir/SM\nAbba/M\nAbbe/M\nabb�/S\nabbess/SM\nAbbey/M\nabbey/MS\nAbbie/M\nAbbi/M\nAbbot/M\nabbot/MS\nAbbott/M\nabbr\nabbrev\nabbreviated/UA\nabbreviates/A\nabbreviate/XDSNG\nabbreviating/A\nabbreviation/M\nAbbye/M\nAbby/M\nABC/M\nAbdel/M\nabdicate/NGDSX\nabdication/M\nabdomen/SM\nabdominal/YS\nabduct/DGS\nabduction/SM\nabductor/SM\nAbdul/M\nab/DY\nabeam\nAbelard/M\nAbel/M\nAbelson/M\nAbe/M\nAberdeen/M\nAbernathy/M\naberrant/YS\naberrational\naberration/SM\nabet/S\nabetted\nabetting\nabettor/SM\nAbeu/M\nabeyance/MS\nabeyant\nAbey/M\nabhorred\nabhorrence/MS\nabhorrent/Y\nabhorrer/M\nabhorring\nabhor/S\nabidance/MS\nabide/JGSR\nabider/M\nabiding/Y\nAbidjan/M\nAbie/M\nAbigael/M\nAbigail/M\nAbigale/M\nAbilene/M\nability/IMES\nabjection/MS\nabjectness/SM\nabject/SGPDY\nabjuration/SM\nabjuratory\nabjurer/M\nabjure/ZGSRD\nablate/VGNSDX\nablation/M\nablative/SY\nablaze\nabler/E\nables/E\nablest\nable/U\nabloom\nablution/MS\nAb/M\nABM/S\nabnegate/NGSDX\nabnegation/M\nAbner/M\nabnormality/SM\nabnormal/SY\naboard\nabode/GMDS\nabolisher/M\nabolish/LZRSDG\nabolishment/MS\nabolitionism/SM\nabolitionist/SM\nabolition/SM\nabominable\nabominably\nabominate/XSDGN\nabomination/M\naboriginal/YS\naborigine/SM\nAborigine/SM\naborning\nabortionist/MS\nabortion/MS\nabortiveness/M\nabortive/PY\nabort/SRDVG\nAbo/SM!\nabound/GDS\nabout/S\naboveboard\naboveground\nabove/S\nabracadabra/S\nabrader/M\nabrade/SRDG\nAbraham/M\nAbrahan/M\nAbra/M\nAbramo/M\nAbram/SM\nAbramson/M\nAbran/M\nabrasion/MS\nabrasiveness/S\nabrasive/SYMP\nabreaction/MS\nabreast\nabridge/DSRG\nabridged/U\nabridger/M\nabridgment/SM\nabroad\nabrogate/XDSNG\nabrogation/M\nabrogator/SM\nabruptness/SM\nabrupt/TRYP\nABS\nabscess/GDSM\nabscissa/SM\nabscission/SM\nabsconder/M\nabscond/SDRZG\nabseil/SGDR\nabsence/SM\nabsenteeism/SM\nabsentee/MS\nabsentia/M\nabsentmindedness/S\nabsentminded/PY\nabsent/SGDRY\nabsinthe/SM\nabs/M\nabsoluteness/SM\nabsolute/NPRSYTX\nabsolution/M\nabsolutism/MS\nabsolutist/SM\nabsolve/GDSR\nabsolver/M\nabsorb/ASGD\nabsorbed/U\nabsorbency/MS\nabsorbent/MS\nabsorber/SM\nabsorbing/Y\nabsorption/MS\nabsorptive\nabsorptivity/M\nabstainer/M\nabstain/GSDRZ\nabstemiousness/MS\nabstemious/YP\nabstention/SM\nabstinence/MS\nabstinent/Y\nabstractedness/SM\nabstracted/YP\nabstracter/M\nabstractionism/M\nabstractionist/SM\nabstraction/SM\nabstractness/SM\nabstractor/MS\nabstract/PTVGRDYS\nabstruseness/SM\nabstruse/PRYT\nabsurdity/SM\nabsurdness/SM\nabsurd/PRYST\nAbuja\nabundance/SM\nabundant/Y\nabused/E\nabuse/GVZDSRB\nabuser/M\nabuses/E\nabusing/E\nabusiveness/SM\nabusive/YP\nabut/LS\nabutment/SM\nabutted\nabutter/MS\nabutting\nabuzz\nabysmal/Y\nabyssal\nAbyssinia/M\nAbyssinian\nabyss/SM\nAC\nacacia/SM\nacademe/MS\nacademia/SM\nacademical/Y\nacademicianship\nacademician/SM\nacademic/S\nacademy/SM\nAcadia/M\nacanthus/MS\nAcapulco/M\naccede/SDG\naccelerated/U\naccelerate/NGSDXV\naccelerating/Y\nacceleration/M\naccelerator/SM\naccelerometer/SM\naccented/U\naccent/SGMD\naccentual/Y\naccentuate/XNGSD\naccentuation/M\nacceptability/SM\nacceptability\'s/U\nacceptableness/SM\nacceptable/P\nacceptably/U\nacceptance/SM\nacceptant\nacceptation/SM\naccepted/Y\naccepter/M\naccepting/PY\nacceptor/MS\naccept/RDBSZVG\naccessed/A\naccessibility/IMS\naccessible/IU\naccessibly/I\naccession/SMDG\naccessors\naccessory/SM\naccess/SDMG\naccidence/M\naccidentalness/M\naccidental/SPY\naccident/MS\nacclaimer/M\nacclaim/SDRG\nacclamation/MS\nacclimate/XSDGN\nacclimation/M\nacclimatisation\nacclimatise/DG\nacclimatization/AMS\nacclimatized/U\nacclimatize/RSDGZ\nacclimatizes/A\nacclivity/SM\naccolade/GDSM\naccommodated/U\naccommodate/XVNGSD\naccommodating/Y\naccommodation/M\naccommodativeness/M\naccommodative/P\naccompanied/U\naccompanier/M\naccompaniment/MS\naccompanist/SM\naccompany/DRSG\naccomplice/MS\naccomplished/U\naccomplisher/M\naccomplishment/SM\naccomplish/SRDLZG\naccordance/SM\naccordant/Y\naccorder/M\naccording/Y\naccordionist/SM\naccordion/MS\naccord/SZGMRD\naccost/SGD\naccountability/MS\naccountability\'s/U\naccountableness/M\naccountable/U\naccountably/U\naccountancy/SM\naccountant/MS\naccount/BMDSGJ\naccounted/U\naccounting/M\naccouter/GSD\naccouterments\naccouterment\'s\naccoutrement/M\nAccra/M\naccreditation/SM\naccredited/U\naccredit/SGD\naccretion/SM\naccrual/MS\naccrue/SDG\nacct\nacculturate/XSDVNG\nacculturation/M\naccumulate/VNGSDX\naccumulation/M\naccumulativeness/M\naccumulative/YP\naccumulator/MS\naccuracy/IMS\naccurate/IY\naccurateness/SM\naccursedness/SM\naccursed/YP\naccusal/M\naccusation/SM\naccusative/S\naccusatory\naccused/M\naccuser/M\naccuse/SRDZG\naccusing/Y\naccustomedness/M\naccustomed/P\naccustom/SGD\nac/DRG\naced/M\nacerbate/DSG\nacerbic\nacerbically\nacerbity/MS\nace/SM\nacetaminophen/S\nacetate/MS\nacetic\nacetone/SM\nacetonic\nacetylene/MS\nAcevedo/M\nAchaean/M\nAchebe/M\nached/A\nache/DSG\nachene/SM\nAchernar/M\naches/A\nAcheson/M\nachievable/U\nachieved/UA\nachieve/LZGRSDB\nachievement/SM\nachiever/M\nAchilles\naching/Y\nachoo\nachromatic\nachy/TR\nacidic\nacidification/M\nacidify/NSDG\nacidity/SM\nacidness/M\nacidoses\nacidosis/M\nacid/SMYP\nacidulous\nacing/M\nAckerman/M\nacknowledgeable\nacknowledgedly\nacknowledged/U\nacknowledge/GZDRS\nacknowledger/M\nacknowledgment/SAM\nACLU\nAc/M\nACM\nacme/SM\nacne/MDS\nacolyte/MS\nAconcagua/M\naconite/MS\nacorn/SM\nAcosta/M\nacoustical/Y\nacoustician/M\nacoustic/S\nacoustics/M\nacquaintance/MS\nacquaintanceship/S\nacquainted/U\nacquaint/GASD\nacquiesce/GSD\nacquiescence/SM\nacquiescent/Y\nacquirable\nacquire/ASDG\nacquirement/SM\nacquisition\'s/A\nacquisition/SM\nacquisitiveness/MS\nacquisitive/PY\nacquit/S\nacquittal/MS\nacquittance/M\nacquitted\nacquitter/M\nacquitting\nacreage/MS\nacre/MS\nacridity/MS\nacridness/SM\nacrid/TPRY\nacrimoniousness/MS\nacrimonious/YP\nacrimony/MS\nacrobatically\nacrobatic/S\nacrobatics/M\nacrobat/SM\nacronym/SM\nacrophobia/SM\nAcropolis/M\nacropolis/SM\nacross\nacrostic/SM\nAcrux/M\nacrylate/M\nacrylic/S\nACT\nActaeon/M\nActa/M\nACTH\nacting/S\nactinic\nactinide/SM\nactinium/MS\nactinometer/MS\naction/DMSGB\nactions/AI\naction\'s/IA\nactivate/AXCDSNGI\nactivated/U\nactivation/AMCI\nactivator/SM\nactive/APY\nactively/I\nactiveness/MS\nactives\nactivism/MS\nactivist/MS\nactivities/A\nactivity/MSI\nActon/M\nactor/MAS\nactress/SM\nact\'s\nActs\nact/SADVG\nactuality/SM\nactualization/MAS\nactualize/GSD\nactualizes/A\nactual/SY\nactuarial/Y\nactuary/MS\nactuate/GNXSD\nactuation/M\nactuator/SM\nacuity/MS\nacumen/SM\nacupressure/S\nacupuncture/SM\nacupuncturist/S\nacuteness/MS\nacute/YTSRP\nacyclic\nacyclically\nacyclovir/S\nAD\nadage/MS\nadagio/S\nAdah/M\nAdair/M\nAdaline/M\nAda/M\nadamant/SY\nAdamo/M\nAdam/SM\nAdamson/M\nAdana/M\nAdan/M\nadaptability/MS\nadaptable/U\nadaptation/MS\nadaptedness/M\nadapted/P\nadapter/M\nadapting/A\nadaption\nadaptively\nadaptiveness/M\nadaptive/U\nadaptivity\nadapt/SRDBZVG\nAdara/M\nad/AS\nADC\nAdda/M\nAddams\naddenda\naddend/SM\naddendum/M\nadder/M\nAddia/M\naddiction/MS\naddictive/P\naddict/SGVD\nAddie/M\nAddi/M\nAddison/M\nadditional/Y\naddition/MS\nadditive/YMS\nadditivity\naddle/GDS\naddressability\naddressable/U\naddressed/A\naddressee/SM\naddresser/M\naddresses/A\naddress/MDRSZGB\nAddressograph/M\nadduce/GRSD\nadducer/M\nadduct/DGVS\nadduction/M\nadductor/M\nAddy/M\nadd/ZGBSDR\nAdelaida/M\nAdelaide/M\nAdela/M\nAdelbert/M\nAdele/M\nAdelheid/M\nAdelice/M\nAdelina/M\nAdelind/M\nAdeline/M\nAdella/M\nAdelle/M\nAdel/M\nAde/M\nAdena/M\nAdenauer/M\nadenine/SM\nAden/M\nadenoidal\nadenoid/S\nadeptness/MS\nadept/RYPTS\nadequacy/IMS\nadequate/IPY\nadequateness\'s/I\nadequateness/SM\nAdey/M\nAdham/M\nAdhara/M\nadherence/SM\nadherent/YMS\nadherer/M\nadhere/ZGRSD\nadhesion/MS\nadhesiveness/MS\nadhesive/PYMS\nadiabatic\nadiabatically\nAdiana/M\nAdidas/M\nadieu/S\nAdi/M\nAdina/M\nadi�s\nadipose/S\nAdirondack/SM\nadj\nadjacency/MS\nadjacent/Y\nadjectival/Y\nadjective/MYS\nadjoin/SDG\nadjoint/M\nadjourn/DGLS\nadjournment/SM\nadjudge/DSG\nadjudicate/VNGXSD\nadjudication/M\nadjudicator/SM\nadjudicatory\nadjunct/VSYM\nadjuration/SM\nadjure/GSD\nadjustable/U\nadjustably\nadjust/DRALGSB\nadjusted/U\nadjuster\'s/A\nadjuster/SM\nadjustive\nadjustment/MAS\nadjustor\'s\nadjutant/SM\nAdkins/M\nAdlai/M\nAdler/M\nadman/M\nadmen\nadminister/GDJS\nadministrable\nadministrate/XSDVNG\nadministration/M\nadministrative/Y\nadministrator/MS\nadministratrix/M\nadmirableness/M\nadmirable/P\nadmirably\nadmiral/SM\nadmiralty/MS\nAdmiralty/S\nadmiration/MS\nadmirer/M\nadmire/RSDZBG\nadmiring/Y\nadmissibility/ISM\nadmissible/I\nadmissibly\nadmission/AMS\nadmit/AS\nadmittance/MS\nadmitted/A\nadmittedly\nadmitting/A\nadmix/SDG\nadmixture/SM\nAdm/M\nAd/MN\nadmonisher/M\nadmonish/GLSRD\nadmonishing/Y\nadmonishment/SM\nadmonition/MS\nadmonitory\nadobe/MS\nadolescence/MS\nadolescent/SYM\nAdolf/M\nAdolfo/M\nAdolphe/M\nAdolph/M\nAdolpho/M\nAdolphus/M\nAdo/M\nado/MS\nAdonis/SM\nadopted/AU\nadopter/M\nadoption/MS\nadoptive/Y\nadopt/RDSBZVG\nadopts/A\nadorableness/SM\nadorable/P\nadorably\nAdora/M\nadoration/SM\nadore/DSRGZB\nAdoree/M\nAdore/M\nadorer/M\nadoring/Y\nadorned/U\nAdorne/M\nadornment/SM\nadorn/SGLD\nADP\nAdrea/M\nadrenalin\nadrenaline/MS\nAdrenalin/MS\nadrenal/YS\nAdria/MX\nAdriana/M\nAdriane/M\nAdrian/M\nAdrianna/M\nAdrianne/M\nAdriano/M\nAdriatic\nAdriena/M\nAdrien/M\nAdrienne/M\nadrift\nadroitness/MS\nadroit/RTYP\nads\nad\'s\nadsorbate/M\nadsorbent/S\nadsorb/GSD\nadsorption/MS\nadsorptive/Y\nadulate/GNDSX\nadulation/M\nadulator/SM\nadulatory\nadulterant/SM\nadulterated/U\nadulterate/NGSDX\nadulteration/M\nadulterer/SM\nadulteress/MS\nadulterous/Y\nadultery/SM\nadulthood/MS\nadult/MYPS\nadultness/M\nadumbrate/XSDVGN\nadumbration/M\nadumbrative/Y\nadv\nadvance/DSRLZG\nadvancement/MS\nadvancer/M\nadvantage/GMEDS\nadvantageous/EY\nadvantageousness/M\nAdventist/M\nadventist/S\nadventitiousness/M\nadventitious/PY\nadventive/Y\nAdvent/SM\nadvent/SVM\nadventurer/M\nadventuresome\nadventure/SRDGMZ\nadventuress/SM\nadventurousness/SM\nadventurous/YP\nadverbial/MYS\nadverb/SM\nadversarial\nadversary/SM\nadverse/DSRPYTG\nadverseness/MS\nadversity/SM\nadvert/GSD\nadvertised/U\nadvertise/JGZSRDL\nadvertisement/SM\nadvertiser/M\nadvertising/M\nadvertorial/S\nadvice/SM\nAdvil/M\nadvisability/SIM\nadvisable/I\nadvisableness/M\nadvisably\nadvisedly/I\nadvised/YU\nadvisee/MS\nadvisement/MS\nadviser/M\nadvise/ZRSDGLB\nadvisor/S\nadvisor\'s\nadvisory/S\nadvocacy/SM\nadvocate/NGVDS\nadvocation/M\nadvt\nadze\'s\nadz/MDSG\nAegean\naegis/SM\nAelfric/M\nAeneas\nAeneid/M\naeolian\nAeolus/M\naeon\'s\naerate/XNGSD\naeration/M\naerator/MS\naerialist/MS\naerial/SMY\nAeriela/M\nAeriell/M\nAeriel/M\naerie/SRMT\naeroacoustic\naerobatic/S\naerobically\naerobic/S\naerodrome/SM\naerodynamically\naerodynamic/S\naerodynamics/M\naeronautical/Y\naeronautic/S\naeronautics/M\naerosolize/D\naerosol/MS\naerospace/SM\nAeschylus/M\nAesculapius/M\nAesop/M\naesthete/S\naesthetically\naestheticism/MS\naesthetics/M\naesthetic/U\naether/M\naetiology/M\nAF\nAFAIK\nafar/S\nAFB\nAFC\nAFDC\naffability/MS\naffable/TR\naffably\naffair/SM\naffectation/MS\naffectedness/EM\naffected/UEYP\naffect/EGSD\naffecter/M\naffecting/Y\naffectionate/UY\naffectioned\naffection/EMS\naffectioning\naffective/MY\nafferent/YS\naffiance/GDS\naffidavit/SM\naffiliated/U\naffiliate/EXSDNG\naffiliation/EM\naffine\naffinity/SM\naffirm/ASDG\naffirmation/SAM\naffirmative/SY\naffix/SDG\nafflatus/MS\nafflict/GVDS\naffliction/SM\nafflictive/Y\naffluence/SM\naffluent/YS\nafford/DSBG\nafforest/A\nafforestation/SM\nafforested\nafforesting\nafforests\naffray/MDSG\naffricate/VNMS\naffrication/M\naffricative/M\naffright\naffront/GSDM\nAfghani/SM\nAfghanistan/M\nafghan/MS\nAfghan/SM\naficionado/MS\nafield\nafire\naflame\nafloat\naflutter\nafoot\nafore\naforementioned\naforesaid\naforethought/S\nafoul\nAfr\nafraid/U\nafresh\nAfrica/M\nAfrican/MS\nAfrikaans/M\nAfrikaner/SM\nafro\nAfrocentric\nAfrocentrism/S\nAfro/MS\nafterbirth/M\nafterbirths\nafterburner/MS\naftercare/SM\naftereffect/MS\nafterglow/MS\nafterimage/MS\nafterlife/M\nafterlives\naftermath/M\naftermaths\naftermost\nafternoon/SM\naftershave/S\naftershock/SM\nafters/M\naftertaste/SM\nafterthought/MS\nafterward/S\nafterworld/MS\nAfton/M\naft/ZR\nAgace/M\nagain\nagainst\nAgamemnon/M\nagapae\nagape/S\nagar/MS\nAgassiz/M\nAgata/M\nagate/SM\nAgatha/M\nAgathe/M\nagave/SM\nagedness/M\naged/PY\nage/GJDRSMZ\nageism/S\nageist/S\nagelessness/MS\nageless/YP\nagency/SM\nagenda/MS\nagent/AMS\nagented\nagenting\nagentive\nageratum/M\nAggie/M\nAggi/M\nagglomerate/XNGVDS\nagglomeration/M\nagglutinate/VNGXSD\nagglutination/M\nagglutinin/MS\naggrandize/LDSG\naggrandizement/SM\naggravate/SDNGX\naggravating/Y\naggravation/M\naggregated/U\naggregate/EGNVD\naggregately\naggregateness/M\naggregates\naggregation/SM\naggregative/Y\naggression/SM\naggressively\naggressiveness/S\naggressive/U\naggressor/MS\naggrieved/Y\naggrieve/GDS\nAggy/SM\naghast\nagile/YTR\nagility/MS\nagitated/Y\nagitate/XVNGSD\nagitation/M\nagitator/SM\nagitprop/MS\nAglaia/M\nagleam\naglitter\naglow\nAg/M\nAgna/M\nAgnella/M\nAgnese/M\nAgnes/M\nAgnesse/M\nAgneta/M\nAgnew/M\nAgni/M\nAgnola/M\nagnosticism/MS\nagnostic/SM\nago\nagog\nagonizedly/S\nagonized/Y\nagonize/ZGRSD\nagonizing/Y\nagony/SM\nagoraphobia/MS\nagoraphobic/S\nAgosto/M\nAgra/M\nagrarianism/MS\nagrarian/S\nagreeable/EP\nagreeableness/SME\nagreeably/E\nagreeing/E\nagree/LEBDS\nagreement/ESM\nagreer/S\nAgretha/M\nagribusiness/SM\nAgricola/M\nagriculturalist/S\nagricultural/Y\nagriculture/MS\nagriculturist/SM\nAgrippa/M\nAgrippina/M\nagrochemicals\nagronomic/S\nagronomist/SM\nagronomy/MS\naground\nAguascalientes/M\nague/MS\nAguie/M\nAguilar/M\nAguinaldo/M\nAguirre/M\nAguistin/M\nAguste/M\nAgustin/M\nah\nAhab/M\nAharon/M\naha/S\nahead\nahem/S\nAhmadabad\nAhmad/M\nAhmed/M\nahoy/S\nAhriman/M\nAI\nAida/M\nAidan/M\naided/U\naide/MS\naider/M\nAIDS\naid/ZGDRS\nAigneis/M\naigrette/SM\nAiken/M\nAila/M\nAilbert/M\nAilee/M\nAileen/M\nAile/M\nAilene/M\naileron/MS\nAiley/M\nAilina/M\nAili/SM\nail/LSDG\nailment/SM\nAilsun/M\nAilyn/M\nAimee/M\nAime/M\naimer/M\nAimil/M\naimlessness/MS\naimless/YP\naim/ZSGDR\nAindrea/M\nAinslee/M\nAinsley/M\nAinslie/M\nain\'t\nAinu/M\nairbag/MS\nairbase/S\nairborne\nairbrush/SDMG\nAirbus/M\nairbus/SM\naircraft/MS\naircrew/M\nairdrop/MS\nairdropped\nairdropping\nAiredale/SM\nAires\nairfare/S\nairfield/MS\nairflow/SM\nairfoil/MS\nairframe/MS\nairfreight/SGD\nairhead/MS\nairily\nairiness/MS\nairing/M\nairlessness/S\nairless/P\nairlift/MDSG\nairliner/M\nairline/SRMZ\nairlock/MS\nairmail/DSG\nairman/M\nairmass\nair/MDRTZGJS\nairmen\nairpark\nairplane/SM\nairplay/S\nairport/MS\nairship/MS\nairsickness/SM\nairsick/P\nairspace/SM\nairspeed/SM\nairstrip/MS\nairtightness/M\nairtight/P\nairtime\nairwaves\nairway/SM\nairworthiness/SM\nairworthy/PTR\nairy/PRT\nAisha/M\naisle/DSGM\naitch/MS\najar\nAjax/M\nAjay/M\nAK\naka\nAkbar/M\nAkihito/M\nakimbo\nAkim/M\nakin\nAkita/M\nAkkad/M\nAkron/M\nAksel/M\nAL\nAlabama/M\nAlabaman/S\nAlabamian/MS\nalabaster/MS\nalack/S\nalacrity/SM\nAladdin/M\nAlaine/M\nAlain/M\nAlair/M\nAlameda/M\nAlamogordo/M\nAlamo/SM\nala/MS\nAla/MS\nAlanah/M\nAlana/M\nAland/M\nAlane/M\nalanine/M\nAlan/M\nAlanna/M\nAlano/M\nAlanson/M\nAlard/M\nAlaric/M\nAlar/M\nalarming/Y\nalarmist/MS\nalarm/SDG\nAlasdair/M\nAlaska/M\nAlaskan/S\nalas/S\nAlastair/M\nAlasteir/M\nAlaster/M\nAlayne/M\nalbacore/SM\nalba/M\nAlba/M\nAlbania/M\nAlbanian/SM\nAlbany/M\nalbatross/SM\nalbedo/M\nAlbee/M\nalbeit\nAlberich/M\nAlberik/M\nAlberio/M\nAlberta/M\nAlbertan/S\nAlbertina/M\nAlbertine/M\nAlbert/M\nAlberto/M\nAlbie/M\nAlbigensian\nAlbina/M\nalbinism/SM\nalbino/MS\nAlbion/M\nAlbireo/M\nalb/MS\nAlbrecht/M\nalbumen/M\nalbumin/MS\nalbuminous\nalbum/MNXS\nAlbuquerque/M\nAlcatraz/M\nAlcestis/M\nalchemical\nalchemist/SM\nalchemy/MS\nAlcibiades/M\nAlcmena/M\nAlcoa/M\nalcoholically\nalcoholic/MS\nalcoholism/SM\nalcohol/MS\nAlcott/M\nalcove/MSD\nAlcuin/M\nAlcyone/M\nAldan/M\nAldebaran/M\naldehyde/M\nAlden/M\nAlderamin/M\nalderman/M\naldermen\nalder/SM\nalderwoman\nalderwomen\nAldin/M\nAldis/M\nAldo/M\nAldon/M\nAldous/M\nAldrich/M\nAldric/M\nAldridge/M\nAldrin/M\nAldus/M\nAldwin/M\naleatory\nAlecia/M\nAleck/M\nAlec/M\nAleda/M\nalee\nAleece/M\nAleen/M\nalehouse/MS\nAleichem/M\nAlejandra/M\nAlejandrina/M\nAlejandro/M\nAlejoa/M\nAleksandr/M\nAlembert/M\nalembic/SM\nale/MVS\nAlena/M\nAlene/M\naleph/M\nAleppo/M\nAler/M\nalerted/Y\nalertness/MS\nalert/STZGPRDY\nAlessandra/M\nAlessandro/M\nAleta/M\nAlethea/M\nAleutian/S\nAleut/SM\nalewife/M\nalewives\nAlexa/M\nAlexander/SM\nAlexandra/M\nAlexandre/M\nAlexandria/M\nAlexandrian/S\nAlexandrina/M\nAlexandr/M\nAlexandro/MS\nAlexei/M\nAlexia/M\nAlexina/M\nAlexine/M\nAlexio/M\nAlexi/SM\nAlex/M\nalfalfa/MS\nAlfa/M\nAlfie/M\nAlfi/M\nAlf/M\nAlfonse/M\nAlfons/M\nAlfonso/M\nAlfonzo/M\nAlford/M\nAlfreda/M\nAlfred/M\nAlfredo/M\nalfresco\nAlfy/M\nalgae\nalgaecide\nalgal\nalga/M\nalgebraic\nalgebraical/Y\nalgebraist/M\nalgebra/MS\nAlgenib/M\nAlgeria/M\nAlgerian/MS\nAlger/M\nAlgernon/M\nAlgieba/M\nAlgiers/M\nalginate/SM\nALGOL\nAlgol/M\nAlgonquian/SM\nAlgonquin/SM\nalgorithmic\nalgorithmically\nalgorithm/MS\nAlhambra/M\nAlhena/M\nAlia/M\nalias/GSD\nalibi/MDSG\nAlica/M\nAlicea/M\nAlice/M\nAlicia/M\nAlick/M\nAlic/M\nAlida/M\nAlidia/M\nAlie/M\nalienable/IU\nalienate/SDNGX\nalienation/M\nalienist/MS\nalien/RDGMBS\nAlighieri/M\nalight/DSG\naligned/U\naligner/SM\nalign/LASDG\nalignment/SAM\nAlika/M\nAlikee/M\nalikeness/M\nalike/U\nalimentary\naliment/SDMG\nalimony/MS\nAli/MS\nAlina/M\nAline/M\nalinement\'s\nAlioth/M\naliquot/S\nAlisa/M\nAlisander/M\nAlisha/M\nAlison/M\nAlissa/M\nAlistair/M\nAlister/M\nAlisun/M\naliveness/MS\nalive/P\nAlix/M\naliyah/M\naliyahs\nAliza/M\nAlkaid/M\nalkalies\nalkali/M\nalkaline\nalkalinity/MS\nalkalize/SDG\nalkaloid/MS\nalkyd/S\nalkyl/M\nAllahabad/M\nAllah/M\nAlla/M\nAllan/M\nAllard/M\nallay/GDS\nAllayne/M\nAlleen/M\nallegation/SM\nalleged/Y\nallege/SDG\nAllegheny/MS\nallegiance/SM\nallegiant\nallegoric\nallegoricalness/M\nallegorical/YP\nallegorist/MS\nallegory/SM\nAllegra/M\nallegretto/MS\nallegri\nallegro/MS\nallele/SM\nalleluia/S\nallemande/M\nAllendale/M\nAllende/M\nAllene/M\nAllen/M\nAllentown/M\nallergenic\nallergen/MS\nallergic\nallergically\nallergist/MS\nallergy/MS\nalleviate/SDVGNX\nalleviation/M\nalleviator/MS\nAlley/M\nalley/MS\nAlleyn/M\nalleyway/MS\nAllhallows\nalliance/MS\nAllianora/M\nAllie/M\nallier\nallies/M\nalligator/DMGS\nAlli/MS\nAllina/M\nAllin/M\nAllison/M\nAllissa/M\nAllister/M\nAllistir/M\nalliterate/XVNGSD\nalliteration/M\nalliterative/Y\nAllix/M\nallocable/U\nallocatable\nallocate/ACSDNGX\nallocated/U\nallocation/AMC\nallocative\nallocator/AMS\nallophone/MS\nallophonic\nallotment/MS\nallotments/A\nallotrope/M\nallotropic\nallots/A\nallot/SDL\nallotted/A\nallotter/M\nallotting/A\nallover/S\nallowableness/M\nallowable/P\nallowably\nallowance/GSDM\nallowed/Y\nallowing/E\nallow/SBGD\nallows/E\nalloyed/U\nalloy/SGMD\nall/S\nallspice/MS\nAllstate/M\nAllsun/M\nallude/GSD\nallure/GLSD\nallurement/SM\nalluring/Y\nallusion/MS\nallusiveness/MS\nallusive/PY\nalluvial/S\nalluvions\nalluvium/MS\nAllx/M\nally/ASDG\nAllyce/M\nAlly/MS\nAllyn/M\nAllys\nAllyson/M\nalma\nAlmach/M\nAlmaden/M\nalmagest\nAlma/M\nalmanac/MS\nAlmaty/M\nAlmeda/M\nAlmeria/M\nAlmeta/M\nalmightiness/M\nAlmighty/M\nalmighty/P\nAlmira/M\nAlmire/M\nalmond/SM\nalmoner/MS\nalmost\nAl/MRY\nalms/A\nalmshouse/SM\nalmsman/M\nalnico\nAlnilam/M\nAlnitak/M\naloe/MS\naloft\naloha/SM\nAloin/M\nAloise/M\nAloisia/M\naloneness/M\nalone/P\nalong\nalongshore\nalongside\nAlon/M\nAlonso/M\nAlonzo/M\naloofness/MS\naloof/YP\naloud\nAloysia/M\nAloysius/M\nalpaca/SM\nAlpert/M\nalphabetical/Y\nalphabetic/S\nalphabetization/SM\nalphabetizer/M\nalphabetize/SRDGZ\nalphabet/SGDM\nalpha/MS\nalphanumerical/Y\nalphanumeric/S\nAlphard/M\nAlphecca/M\nAlpheratz/M\nAlphonse/M\nAlphonso/M\nAlpine\nalpine/S\nalp/MS\nAlps\nalready\nAlric/M\nalright\nAlsace/M\nAlsatian/MS\nalso\nAlsop/M\nAlston/M\nAltaic/M\nAltai/M\nAltair/M\nAlta/M\naltar/MS\naltarpiece/SM\nalterable/UI\nalteration/MS\naltercate/NX\naltercation/M\naltered/U\nalternate/SDVGNYX\nalternation/M\nalternativeness/M\nalternative/YMSP\nalternator/MS\nalter/RDZBG\nAlthea/M\nalthough\naltimeter/SM\nAltiplano/M\naltitude/SM\naltogether/S\nAlton/M\nalto/SM\nAltos/M\naltruism/SM\naltruistic\naltruistically\naltruist/SM\nalt/RZS\nALU\nAludra/M\nAluin/M\nAluino/M\nalumina/SM\naluminum/MS\nalumnae\nalumna/M\nalumni\nalumnus/MS\nalum/SM\nalundum\nAlva/M\nAlvan/M\nAlvarado/M\nAlvarez/M\nAlvaro/M\nalveolar/Y\nalveoli\nalveolus/M\nAlvera/M\nAlverta/M\nAlvie/M\nAlvina/M\nAlvinia/M\nAlvin/M\nAlvira/M\nAlvis/M\nAlvy/M\nalway/S\nAlwin/M\nAlwyn/M\nAlyce/M\nAlyda/M\nAlyosha/M\nAlysa/M\nAlyse/M\nAlysia/M\nAlys/M\nAlyson/M\nAlyss\nAlyssa/M\nAlzheimer/M\nAM\nAMA\nAmabelle/M\nAmabel/M\nAmadeus/M\nAmado/M\namain\nAmalea/M\nAmalee/M\nAmaleta/M\namalgamate/VNGXSD\namalgamation/M\namalgam/MS\nAmalia/M\nAmalie/M\nAmalita/M\nAmalle/M\nAmanda/M\nAmandie/M\nAmandi/M\nAmandy/M\namanuenses\namanuensis/M\nAmara/M\namaranth/M\namaranths\namaretto/S\nAmargo/M\nAmarillo/M\namaryllis/MS\nam/AS\namasser/M\namass/GRSD\nAmata/M\namateurishness/MS\namateurish/YP\namateurism/MS\namateur/SM\nAmati/M\namatory\namazed/Y\namaze/LDSRGZ\namazement/MS\namazing/Y\namazonian\nAmazonian\namazon/MS\nAmazon/SM\nambassadorial\nambassador/MS\nambassadorship/MS\nambassadress/SM\nambergris/SM\nAmberly/M\namber/MS\nAmber/YM\nambiance/MS\nambidexterity/MS\nambidextrous/Y\nambience\'s\nambient/S\nambiguity/MS\nambiguously/U\nambiguousness/M\nambiguous/YP\nambition/GMDS\nambitiousness/MS\nambitious/PY\nambit/M\nambivalence/SM\nambivalent/Y\namble/GZDSR\nAmble/M\nambler/M\nambrose\nAmbrose/M\nambrosial/Y\nambrosia/SM\nAmbrosi/M\nAmbrosio/M\nAmbrosius/M\nAmbros/M\nambulance/MS\nambulant/S\nambulate/DSNGX\nambulation/M\nambulatory/S\nAmbur/M\nambuscade/MGSRD\nambuscader/M\nambusher/M\nambush/MZRSDG\nAmby/M\nAmdahl/M\nameba\'s\nAmelia/M\nAmelie/M\nAmelina/M\nAmeline/M\nameliorate/XVGNSD\namelioration/M\nAmelita/M\namenability/SM\namenably\namended/U\namender/M\namendment/SM\namen/DRGTSB\namend/SBRDGL\namends/M\nAmenhotep/M\namenity/MS\namenorrhea/M\nAmerada/M\nAmerasian/S\namercement/MS\namerce/SDLG\nAmericana/M\nAmericanism/SM\nAmericanization/SM\namericanized\nAmericanize/SDG\nAmerican/MS\nAmerica/SM\namericium/MS\nAmerigo/M\nAmerindian/MS\nAmerind/MS\nAmer/M\nAmery/M\nAmeslan/M\nAme/SM\namethystine\namethyst/MS\nAmharic/M\nAmherst/M\namiability/MS\namiableness/M\namiable/RPT\namiably\namicability/SM\namicableness/M\namicable/P\namicably\namide/SM\namid/S\namidships\namidst\nAmie/M\nAmiga/M\namigo/MS\nAmii/M\nAmil/M\nAmi/M\namines\naminobenzoic\namino/M\namir\'s\nAmish\namiss\nAmitie/M\nAmity/M\namity/SM\nAmmamaria/M\nAmman/M\nAmmerman/M\nammeter/MS\nammo/MS\nammoniac\nammonia/MS\nammonium/M\nAm/MR\nammunition/MS\namnesiac/MS\namnesia/SM\namnesic/S\namnesty/GMSD\namniocenteses\namniocentesis/M\namnion/SM\namniotic\nAmoco/M\namoeba/SM\namoebic\namoeboid\namok/MS\namong\namongst\nAmontillado/M\namontillado/MS\namorality/MS\namoral/Y\namorousness/SM\namorous/PY\namorphousness/MS\namorphous/PY\namortization/SUM\namortized/U\namortize/SDG\nAmory/M\nAmos\namount/SMRDZG\namour/MS\nAmparo/M\namperage/SM\nAmpere/M\nampere/MS\nampersand/MS\nAmpex/M\namphetamine/MS\namphibian/SM\namphibiousness/M\namphibious/PY\namphibology/M\namphitheater/SM\namphorae\namphora/M\nampleness/M\nample/PTR\namplification/M\namplifier/M\namplify/DRSXGNZ\namplitude/MS\nampoule\'s\namp/SGMDY\nampule/SM\namputate/DSNGX\namputation/M\namputee/SM\nAmritsar/M\nams\nAmsterdam/M\namt\nAmtrak/M\namuck\'s\namulet/SM\nAmundsen/M\nAmur/M\namused/Y\namuse/LDSRGVZ\namusement/SM\namuser/M\namusingness/M\namusing/YP\nAmway/M\nAmye/M\namylase/MS\namyl/M\nAmy/M\nAnabal/M\nAnabaptist/SM\nAnabella/M\nAnabelle/M\nAnabel/M\nanabolic\nanabolism/MS\nanachronism/SM\nanachronistic\nanachronistically\nAnacin/M\nanaconda/MS\nAnacreon/M\nanaerobe/SM\nanaerobic\nanaerobically\nanaglyph/M\nanagrammatic\nanagrammatically\nanagrammed\nanagramming\nanagram/MS\nAnaheim/M\nAnalects/M\nanalgesia/MS\nanalgesic/S\nAnaliese/M\nAnalise/M\nAnallese/M\nAnallise/M\nanalogical/Y\nanalogize/SDG\nanalogousness/MS\nanalogous/YP\nanalog/SM\nanalogue/SM\nanalogy/MS\nanal/Y\nanalysand/MS\nanalyses\nanalysis/AM\nanalyst/SM\nanalytical/Y\nanalyticity/S\nanalytic/S\nanalytics/M\nanalyzable/U\nanalyze/DRSZGA\nanalyzed/U\nanalyzer/M\nAna/M\nanamorphic\nAnanias/M\nanapaest\'s\nanapestic/S\nanapest/SM\nanaphora/M\nanaphoric\nanaphorically\nanaplasmosis/M\nanarchic\nanarchical/Y\nanarchism/MS\nanarchistic\nanarchist/MS\nanarchy/MS\nAnastasia/M\nAnastasie/M\nAnastassia/M\nanastigmatic\nanastomoses\nanastomosis/M\nanastomotic\nanathema/MS\nanathematize/GSD\nAnatola/M\nAnatole/M\nAnatolia/M\nAnatolian\nAnatollo/M\nAnatol/M\nanatomic\nanatomical/YS\nanatomist/MS\nanatomize/GSD\nanatomy/MS\nAnaxagoras/M\nAncell/M\nancestor/SMDG\nancestral/Y\nancestress/SM\nancestry/SM\nAnchorage/M\nanchorage/SM\nanchored/U\nanchorite/MS\nanchoritism/M\nanchorman/M\nanchormen\nanchorpeople\nanchorperson/S\nanchor/SGDM\nanchorwoman\nanchorwomen\nanchovy/MS\nancientness/MS\nancient/SRYTP\nancillary/S\nan/CS\nAndalusia/M\nAndalusian\nAndaman\nandante/S\nand/DZGS\nAndean/M\nAndeee/M\nAndee/M\nAnderea/M\nAndersen/M\nAnders/N\nAnderson/M\nAndes\nAndie/M\nAndi/M\nandiron/MS\nAndonis/M\nAndorra/M\nAndover/M\nAndra/SM\nAndrea/MS\nAndreana/M\nAndree/M\nAndrei/M\nAndrej/M\nAndre/SM\nAndrew/MS\nAndrey/M\nAndria/M\nAndriana/M\nAndriette/M\nAndris\nandrogenic\nandrogen/SM\nandrogynous\nandrogyny/SM\nandroid/MS\nAndromache/M\nAndromeda/M\nAndropov/M\nAndros/M\nAndrus/M\nAndy/M\nanecdotal/Y\nanecdote/SM\nanechoic\nanemia/SM\nanemically\nanemic/S\nanemometer/MS\nanemometry/M\nanemone/SM\nanent\naneroid\nAnestassia/M\nanesthesia/MS\nanesthesiologist/MS\nanesthesiology/SM\nanesthetically\nanesthetic/SM\nanesthetist/MS\nanesthetization/SM\nanesthetizer/M\nanesthetize/ZSRDG\nAnet/M\nAnetta/M\nAnette/M\nAnett/M\naneurysm/MS\nanew\nAngara/M\nAngela/M\nAngeleno/SM\nAngele/SM\nangelfish/SM\nAngelia/M\nangelic\nangelical/Y\nAngelica/M\nangelica/MS\nAngelico/M\nAngelika/M\nAngeli/M\nAngelina/M\nAngeline/M\nAngelique/M\nAngelita/M\nAngelle/M\nAngel/M\nangel/MDSG\nAngelo/M\nAngelou/M\nAnge/M\nanger/GDMS\nAngevin/M\nAngie/M\nAngil/M\nangina/MS\nangiography\nangioplasty/S\nangiosperm/MS\nAngkor/M\nangle/GMZDSRJ\nangler/M\nAngles\nangleworm/MS\nAnglia/M\nAnglicanism/MS\nAnglican/MS\nAnglicism/SM\nAnglicization/MS\nanglicize/SDG\nAnglicize/SDG\nangling/M\nAnglo/MS\nAnglophile/SM\nAnglophilia/M\nAnglophobe/MS\nAnglophobia/M\nAngola/M\nAngolan/S\nangora/MS\nAngora/MS\nangrily\nangriness/M\nangry/RTP\nangst/MS\n�ngstr�m/M\nangstrom/MS\nAnguilla/M\nanguish/DSMG\nangularity/MS\nangular/Y\nAngus/M\nAngy/M\nAnheuser/M\nanhydride/M\nanhydrite/M\nanhydrous/Y\nAniakchak/M\nAnia/M\nAnibal/M\nAnica/M\naniline/SM\nanimadversion/SM\nanimadvert/DSG\nanimalcule/MS\nanimal/MYPS\nanimated/A\nanimatedly\nanimately/I\nanimateness/MI\nanimates/A\nanimate/YNGXDSP\nanimating/A\nanimation/AMS\nanimator/SM\nanimism/SM\nanimistic\nanimist/S\nanimized\nanimosity/MS\nanimus/SM\nanionic/S\nanion/MS\naniseed/MS\naniseikonic\nanise/MS\nanisette/SM\nanisotropic\nanisotropy/MS\nAnissa/M\nAnita/M\nAnitra/M\nAnjanette/M\nAnjela/M\nAnkara/M\nankh/M\nankhs\nanklebone/SM\nankle/GMDS\nanklet/MS\nAnnabal/M\nAnnabela/M\nAnnabella/M\nAnnabelle/M\nAnnabell/M\nAnnabel/M\nAnnadiana/M\nAnnadiane/M\nAnnalee/M\nAnnaliese/M\nAnnalise/M\nannalist/MS\nannal/MNS\nAnna/M\nAnnamaria/M\nAnnamarie/M\nAnnapolis/M\nAnnapurna/M\nanneal/DRSZG\nannealer/M\nAnnecorinne/M\nannelid/MS\nAnneliese/M\nAnnelise/M\nAnne/M\nAnnemarie/M\nAnnetta/M\nAnnette/M\nannexation/SM\nannexe/M\nannex/GSD\nAnnice/M\nAnnie/M\nannihilate/XSDVGN\nannihilation/M\nannihilator/MS\nAnni/MS\nAnnissa/M\nanniversary/MS\nAnn/M\nAnnmaria/M\nAnnmarie/M\nAnnnora/M\nAnnora/M\nannotated/U\nannotate/VNGXSD\nannotation/M\nannotator/MS\nannounced/U\nannouncement/SM\nannouncer/M\nannounce/ZGLRSD\nannoyance/MS\nannoyer/M\nannoying/Y\nannoy/ZGSRD\nannualized\nannual/YS\nannuitant/MS\nannuity/MS\nannular/YS\nannuli\nannulled\nannulling\nannulment/MS\nannul/SL\nannulus/M\nannum\nannunciate/XNGSD\nannunciation/M\nAnnunciation/S\nannunciator/SM\nAnny/M\nanode/SM\nanodic\nanodize/GDS\nanodyne/SM\nanoint/DRLGS\nanointer/M\nanointment/SM\nanomalousness/M\nanomalous/YP\nanomaly/MS\nanomic\nanomie/M\nanon/S\nanonymity/MS\nanonymousness/M\nanonymous/YP\nanopheles/M\nanorak/SM\nanorectic/S\nanorexia/SM\nanorexic/S\nanother/M\nAnouilh/M\nAnsell/M\nAnsel/M\nAnselma/M\nAnselm/M\nAnselmo/M\nAnshan/M\nANSI/M\nAnsley/M\nans/M\nAnson/M\nAnstice/M\nanswerable/U\nanswered/U\nanswerer/M\nanswer/MZGBSDR\nantacid/MS\nAntaeus/M\nantagonism/MS\nantagonistic\nantagonistically\nantagonist/MS\nantagonized/U\nantagonize/GZRSD\nantagonizing/U\nAntananarivo/M\nantarctic\nAntarctica/M\nAntarctic/M\nAntares\nanteater/MS\nantebellum\nantecedence/MS\nantecedent/SMY\nantechamber/SM\nantedate/GDS\nantediluvian/S\nanteing\nantelope/MS\nante/MS\nantenatal\nantennae\nantenna/MS\nanterior/SY\nanteroom/SM\nant/GSMD\nAnthea/M\nAnthe/M\nanthem/MGDS\nanther/MS\nAnthia/M\nAnthiathia/M\nanthill/S\nanthologist/MS\nanthologize/GDS\nanthology/SM\nAnthony/M\nanthraces\nanthracite/MS\nanthrax/M\nanthropic\nanthropocentric\nanthropogenic\nanthropoid/S\nanthropological/Y\nanthropologist/MS\nanthropology/SM\nanthropometric/S\nanthropometry/M\nanthropomorphic\nanthropomorphically\nanthropomorphism/SM\nanthropomorphizing\nanthropomorphous\nantiabortion\nantiabortionist/S\nantiaircraft\nantibacterial/S\nantibiotic/SM\nantibody/MS\nanticancer\nAntichrist/MS\nanticipated/U\nanticipate/XVGNSD\nanticipation/M\nanticipative/Y\nanticipatory\nanticked\nanticking\nanticlerical/S\nanticlimactic\nanticlimactically\nanticlimax/SM\nanticline/SM\nanticlockwise\nantic/MS\nanticoagulant/S\nanticoagulation/M\nanticommunism/SM\nanticommunist/SM\nanticompetitive\nanticyclone/MS\nanticyclonic\nantidemocratic\nantidepressant/SM\nantidisestablishmentarianism/M\nantidote/DSMG\nAntietam/M\nantifascist/SM\nantiformant\nantifreeze/SM\nantifundamentalist/M\nantigenic\nantigenicity/SM\nantigen/MS\nantigone\nAntigone/M\nAntigua/M\nantiheroes\nantihero/M\nantihistamine/MS\nantihistorical\nantiknock/MS\nantilabor\nAntillean\nAntilles\nantilogarithm/SM\nantilogs\nantimacassar/SM\nantimalarial/S\nantimatter/SM\nantimicrobial/S\nantimissile/S\nantimony/SM\nanting/M\nAntin/M\nantinomian\nantinomy/M\nantinuclear\nAntioch/M\nantioxidant/MS\nantiparticle/SM\nAntipas/M\nantipasti\nantipasto/MS\nantipathetic\nantipathy/SM\nantipersonnel\nantiperspirant/MS\nantiphonal/SY\nantiphon/SM\nantipodal/S\nantipodean/S\nantipode/MS\nAntipodes\nantipollution/S\nantipoverty\nantiquarianism/MS\nantiquarian/MS\nantiquary/SM\nantiquate/NGSD\nantiquation/M\nantique/MGDS\nantiquity/SM\nantiredeposition\nantiresonance/M\nantiresonator\nanti/S\nantisemitic\nantisemitism/M\nantisepses\nantisepsis/M\nantiseptically\nantiseptic/S\nantiserum/SM\nantislavery/S\nantisocial/Y\nantispasmodic/S\nantisubmarine\nantisymmetric\nantisymmetry\nantitank\nantitheses\nantithesis/M\nantithetic\nantithetical/Y\nantithyroid\nantitoxin/MS\nantitrust/MR\nantivenin/MS\nantiviral/S\nantivivisectionist/S\nantiwar\nantler/SDM\nAntofagasta/M\nAntoine/M\nAntoinette/M\nAntonella/M\nAntone/M\nAntonetta/M\nAntonia/M\nAntonie/M\nAntonietta/M\nAntoni/M\nAntonina/M\nAntonin/M\nAntonino/M\nAntoninus/M\nAntonio/M\nAntonius/M\nAnton/MS\nAntonovics/M\nAntony/M\nantonymous\nantonym/SM\nantral\nantsy/RT\nAntwan/M\nAntwerp/M\nAnubis/M\nanus/SM\nanvil/MDSG\nanxiety/MS\nanxiousness/SM\nanxious/PY\nany\nAnya/M\nanybody/S\nanyhow\nAny/M\nanymore\nanyone/MS\nanyplace\nanything/S\nanytime\nanyway/S\nanywhere/S\nanywise\nAOL/M\naorta/MS\naortic\nAP\napace\napache/MS\nApache/MS\nApalachicola/M\napartheid/SM\napart/LP\napartment/MS\napartness/M\napathetic\napathetically\napathy/SM\napatite/MS\nAPB\naped/A\napelike\nape/MDRSG\nApennines\naper/A\naperiodic\naperiodically\naperiodicity/M\naperitif/S\naperture/MDS\napex/MS\naphasia/SM\naphasic/S\naphelia\naphelion/SM\naphid/MS\naphonic\naphorism/MS\naphoristic\naphoristically\naphrodisiac/SM\nAphrodite/M\nApia/M\napiarist/SM\napiary/SM\napical/YS\napices\'s\napiece\napishness/M\napish/YP\naplenty\naplomb/SM\nAPO\nApocalypse/M\napocalypse/MS\napocalyptic\napocryphalness/M\napocryphal/YP\napocrypha/M\nApocrypha/M\napogee/MS\napolar\napolitical/Y\nApollinaire/M\nApollonian\nApollo/SM\napologetically/U\napologetic/S\napologetics/M\napologia/SM\napologist/MS\napologize/GZSRD\napologizer/M\napologizes/A\napologizing/U\napology/MS\napoplectic\napoplexy/SM\napostasy/SM\napostate/SM\napostatize/DSG\napostleship/SM\napostle/SM\napostolic\napostrophe/SM\napostrophized\napothecary/MS\napothegm/MS\napotheoses\napotheosis/M\napotheosized\napotheosizes\napotheosizing\nAppalachia/M\nAppalachian/MS\nappalling/Y\nappall/SDG\nAppaloosa/MS\nappaloosa/S\nappanage/M\napparatus/SM\napparel/SGMD\napparency\napparently/I\napparentness/M\napparent/U\napparition/SM\nappealer/M\nappealing/UY\nappeal/SGMDRZ\nappear/AEGDS\nappearance/AMES\nappearer/S\nappease/DSRGZL\nappeased/U\nappeasement/MS\nappeaser/M\nappellant/MS\nappellate/VNX\nappellation/M\nappellative/MY\nappendage/MS\nappendectomy/SM\nappendices\nappendicitis/SM\nappendix/SM\nappend/SGZDR\nappertain/DSG\nappetite/MVS\nappetizer/SM\nappetizing/YU\nAppia/M\nAppian/M\napplauder/M\napplaud/ZGSDR\napplause/MS\napplecart/M\napplejack/MS\nApple/M\napple/MS\napplesauce/SM\nAppleseed/M\nAppleton/M\napplet/S\nappliance/SM\napplicabilities\napplicability/IM\napplicable/I\napplicably\napplicant/MS\napplicate/V\napplication/MA\napplicative/Y\napplicator/MS\napplier/SM\nappliqu�d\nappliqu�/MSG\napply/AGSDXN\nappointee/SM\nappoint/ELSADG\nappointer/MS\nappointive\nappointment/ASEM\nAppolonia/M\nAppomattox/M\napportion/GADLS\napportionment/SAM\nappose/SDG\nappositeness/MS\napposite/XYNVP\napposition/M\nappositive/SY\nappraisal/SAM\nappraised/A\nappraisees\nappraiser/M\nappraises/A\nappraise/ZGDRS\nappraising/Y\nappreciable/I\nappreciably/I\nappreciated/U\nappreciate/XDSNGV\nappreciation/M\nappreciativeness/MI\nappreciative/PIY\nappreciator/MS\nappreciatory\napprehend/DRSG\napprehender/M\napprehensible\napprehension/SM\napprehensiveness/SM\napprehensive/YP\napprentice/DSGM\napprenticeship/SM\napprise/DSG\napprizer/SM\napprizingly\napprizings\napproachability/UM\napproachable/UI\napproach/BRSDZG\napproacher/M\napprobate/NX\napprobation/EMS\nappropriable\nappropriated/U\nappropriately/I\nappropriateness/SMI\nappropriate/XDSGNVYTP\nappropriation/M\nappropriator/SM\napproval/ESM\napprove/DSREG\napproved/U\napprover\'s/E\napprover/SM\napproving/YE\napprox\napproximate/XGNVYDS\napproximation/M\napproximative/Y\nappurtenance/MS\nappurtenant/S\nAPR\napricot/MS\nAprilette/M\nApril/MS\nApr/M\napron/SDMG\napropos\napse/MS\napsis/M\napter\naptest\naptitude/SM\naptness/SMI\naptness\'s/U\napt/UPYI\nApuleius/M\naquaculture/MS\naqualung/SM\naquamarine/SM\naquanaut/SM\naquaplane/GSDM\naquarium/MS\nAquarius/MS\naqua/SM\naquatically\naquatic/S\naquavit/SM\naqueduct/MS\naqueous/Y\naquiculture\'s\naquifer/SM\nAquila/M\naquiline\nAquinas/M\nAquino/M\nAquitaine/M\nAR\nArabela/M\nArabele/M\nArabella/M\nArabelle/M\nArabel/M\narabesque/SM\nArabia/M\nArabian/MS\nArabic/M\narability/MS\nArabist/MS\narable/S\nArab/MS\nAraby/M\nAraceli/M\narachnid/MS\narachnoid/M\narachnophobia\nArafat/M\nAraguaya/M\nAraldo/M\nAral/M\nAra/M\nAramaic/M\nAramco/M\nArapahoes\nArapahoe\'s\nArapaho/MS\nArarat/M\nAraucanian/M\nArawakan/M\nArawak/M\narbiter/MS\narbitrage/GMZRSD\narbitrager/M\narbitrageur/S\narbitrament/MS\narbitrarily\narbitrariness/MS\narbitrary/P\narbitrate/SDXVNG\narbitration/M\narbitrator/SM\narbor/DMS\narboreal/Y\narbores\narboretum/MS\narborvitae/MS\narbutus/SM\nARC\narcade/SDMG\nArcadia/M\nArcadian\narcana/M\narcane/P\narc/DSGM\narchaeological/Y\narchaeologist/SM\narchaically\narchaic/P\nArchaimbaud/M\narchaism/SM\narchaist/MS\narchaize/GDRSZ\narchaizer/M\nArchambault/M\narchangel/SM\narchbishopric/SM\narchbishop/SM\narchdeacon/MS\narchdiocesan\narchdiocese/SM\narchduchess/MS\narchduke/MS\nArchean\narchenemy/SM\narcheologist\'s\narcheology/MS\narcher/M\nArcher/M\narchery/MS\narchetypal\narchetype/SM\narchfiend/SM\narchfool\nArchibald/M\nArchibaldo/M\nArchibold/M\nArchie/M\narchiepiscopal\nArchimedes/M\narching/M\narchipelago/SM\narchitect/MS\narchitectonic/S\narchitectonics/M\narchitectural/Y\narchitecture/SM\narchitrave/MS\narchival\narchive/DRSGMZ\narchived/U\narchivist/MS\nArch/MR\narchness/MS\narch/PGVZTMYDSR\narchway/SM\nArchy/M\narclike\nARCO/M\narcsine\narctangent\nArctic/M\narctic/S\nArcturus/M\nArdabil\nArda/MH\nArdath/M\nArdeen/M\nArdelia/M\nArdelis/M\nArdella/M\nArdelle/M\nardency/M\nArdene/M\nArdenia/M\nArden/M\nardent/Y\nArdine/M\nArdisj/M\nArdis/M\nArdith/M\nardor/SM\nArdra/M\narduousness/SM\narduous/YP\nArdyce/M\nArdys\nArdyth/M\nareal\narea/SM\nareawide\nare/BS\nArel/M\narenaceous\narena/SM\naren\'t\nArequipa/M\nAres\nAretha/M\nArgentina/M\nArgentinean/S\nArgentine/SM\nArgentinian/S\nargent/MS\narginine/MS\nArgonaut/MS\nargonaut/S\nargon/MS\nArgonne/M\nArgo/SM\nargosy/SM\nargot/SM\narguable/IU\narguably/IU\nargue/DSRGZ\narguer/M\nargumentation/SM\nargumentativeness/MS\nargumentative/YP\nargument/SM\nArgus/M\nargyle/S\nAriadne/M\nAriana/M\nArianism/M\nArianist/SM\naria/SM\nAridatha/M\naridity/SM\naridness/M\narid/TYRP\nAriela/M\nAriella/M\nArielle/M\nAriel/M\nArie/SM\nAries/S\naright\nAri/M\nArin/M\nArio/M\nAriosto/M\narise/GJSR\narisen\nAristarchus/M\nAristides\naristocracy/SM\naristocratic\naristocratically\naristocrat/MS\nAristophanes/M\nAristotelean\nAristotelian/M\nAristotle/M\narithmetical/Y\narithmetician/SM\narithmetic/MS\narithmetize/SD\nArius/M\nAriz/M\nArizona/M\nArizonan/S\nArizonian/S\nArjuna/M\nArkansan/MS\nArkansas/M\nArkhangelsk/M\nArk/M\nark/MS\nArkwright/M\nArlana/M\nArlan/M\nArlee/M\nArleen/M\nArlena/M\nArlene/M\nArlen/M\nArleta/M\nArlette/M\nArley/M\nArleyne/M\nArlie/M\nArliene/M\nArlina/M\nArlinda/M\nArline/M\nArlington/M\nArlin/M\nArluene/M\nArly/M\nArlyne/M\nArlyn/M\nArmada/M\narmada/SM\narmadillo/MS\nArmageddon/SM\nArmagnac/M\narmament/EAS\narmament\'s/E\nArmand/M\nArmando/M\nArman/M\narm/ASEDG\nArmata/M\narmature/MGSD\narmband/SM\narmchair/MS\nArmco/M\narmed/U\nArmenia/M\nArmenian/MS\narmer/MES\narmful/SM\narmhole/MS\narming/M\nArminius/M\nArmin/M\narmistice/MS\narmless\narmlet/SM\narmload/M\nArmonk/M\narmored/U\narmorer/M\narmorial/S\narmory/DSM\narmor/ZRDMGS\nArmour/M\narmpit/MS\narmrest/MS\narm\'s\nArmstrong/M\nAr/MY\narmy/SM\nArnaldo/M\nArneb/M\nArne/M\nArney/M\nArnhem/M\nArnie/M\nArni/M\nArnold/M\nArnoldo/M\nArno/M\nArnuad/M\nArnulfo/M\nArny/M\naroma/SM\naromatherapist/S\naromatherapy/S\naromatically\naromaticity/M\naromaticness/M\naromatic/SP\nAron/M\narose\naround\narousal/MS\naroused/U\narouse/GSD\nARPA/M\nArpanet/M\nARPANET/M\narpeggio/SM\narrack/M\nArragon/M\narraignment/MS\narraign/SDGL\narrangeable/A\narranged/EA\narrangement/AMSE\narranger/M\narranges/EA\narrange/ZDSRLG\narranging/EA\narrant/Y\narras/SM\narrayer\narray/ESGMD\narrear/SM\narrest/ADSG\narrestee/MS\narrester/MS\narresting/Y\narrestor/MS\nArrhenius/M\narrhythmia/SM\narrhythmic\narrhythmical\nArri/M\narrival/MS\narriver/M\narrive/SRDG\narrogance/MS\narrogant/Y\narrogate/XNGDS\narrogation/M\nArron/M\narrowhead/SM\narrowroot/MS\narrow/SDMG\narroyo/MS\narr/TV\narsenal/MS\narsenate/M\narsenic/MS\narsenide/M\narsine/MS\narsonist/MS\narson/SM\nArtair/M\nArtaxerxes/M\nartefact\'s\nArte/M\nArtemas\nArtemis/M\nArtemus/M\narterial/SY\narteriolar\narteriole/SM\narterioscleroses\narteriosclerosis/M\nartery/SM\nartesian\nartfulness/SM\nartful/YP\nArther/M\narthritic/S\narthritides\narthritis/M\narthrogram/MS\narthropod/SM\narthroscope/S\narthroscopic\nArthurian\nArthur/M\nartichoke/SM\narticle/GMDS\narticulable/I\narticular\narticulated/EU\narticulately/I\narticulateness/IMS\narticulates/I\narticulate/VGNYXPSD\narticulation/M\narticulator/SM\narticulatory\nArtie/M\nartifact/MS\nartificer/M\nartifice/ZRSM\nartificiality/MS\nartificialness/M\nartificial/PY\nartillerist\nartilleryman/M\nartillerymen\nartillery/SM\nartiness/MS\nartisan/SM\nartiste/SM\nartistically/I\nartistic/I\nartist/MS\nartistry/SM\nartlessness/MS\nartless/YP\nArt/M\nart/SM\nartsy/RT\nArtur/M\nArturo/M\nArtus/M\nartwork/MS\nArty/M\narty/TPR\nAruba/M\narum/MS\nArvie/M\nArvin/M\nArv/M\nArvy/M\nAryan/MS\nAryn/M\nas\nAs\nA\'s\nAsa/M\nAsama/M\nasap\nASAP\nasbestos/MS\nAscella/M\nascend/ADGS\nascendancy/MS\nascendant/SY\nascender/SM\nAscension/M\nascension/SM\nascent/SM\nascertain/DSBLG\nascertainment/MS\nascetically\nasceticism/MS\nascetic/SM\nASCII\nascot/MS\nascribe/GSDB\nascription/MS\nascriptive\nAse/M\naseptically\naseptic/S\nasexuality/MS\nasexual/Y\nAsgard/M\nashame/D\nashamed/UY\nAshanti/M\nAshbey/M\nAshby/M\nashcan/SM\nAshely/M\nAsher/M\nAsheville/M\nAshia/M\nAshien/M\nAshil/M\nAshkenazim\nAshkhabad/M\nAshla/M\nAshland/M\nAshlan/M\nashlar/GSDM\nAshlee/M\nAshleigh/M\nAshlen/M\nAshley/M\nAshlie/M\nAshli/M\nAshlin/M\nAshly/M\nashman/M\nash/MNDRSG\nAshmolean/M\nAsh/MRY\nashore\nashram/SM\nAshton/M\nashtray/MS\nAshurbanipal/M\nashy/RT\nAsia/M\nAsian/MS\nAsiatic/SM\naside/S\nAsilomar/M\nAsimov\nasinine/Y\nasininity/MS\naskance\nask/DRZGS\nasked/U\nasker/M\naskew/P\nASL\naslant\nasleep\nAsmara/M\nasocial/S\nAsoka/M\nasparagus/MS\naspartame/S\nASPCA\naspect/SM\nAspell/M\naspen/M\nAspen/M\nasperity/SM\nasper/M\naspersion/SM\nasphalt/MDRSG\nasphodel/MS\nasphyxia/MS\nasphyxiate/GNXSD\nasphyxiation/M\naspic/MS\nAspidiske/M\naspidistra/MS\naspirant/MS\naspirate/NGDSX\naspirational\naspiration/M\naspirator/SM\naspire/GSRD\naspirer/M\naspirin/SM\nasplenium\nasp/MNRXS\nAsquith/M\nAssad/M\nassailable/U\nassailant/SM\nassail/BGDS\nAssamese/M\nAssam/M\nassassinate/DSGNX\nassassination/M\nassassin/MS\nassaulter/M\nassaultive/YP\nassault/SGVMDR\nassayer/M\nassay/SZGRD\nassemblage/MS\nassemble/ADSREG\nassembled/U\nassembler/EMS\nassemblies/A\nassembly/EAM\nassemblyman/M\nassemblymen\nAssembly/MS\nassemblywoman\nassemblywomen\nassent/SGMRD\nassert/ADGS\nasserter/MS\nassertional\nassertion/AMS\nassertiveness/SM\nassertive/PY\nassess/BLSDG\nassessed/A\nassesses/A\nassessment/SAM\nassessor/MS\nasset/SM\nasseverate/XSDNG\nasseveration/M\nasshole/MS!\nassiduity/SM\nassiduousness/SM\nassiduous/PY\nassign/ALBSGD\nassignation/MS\nassigned/U\nassignee/MS\nassigner/MS\nassignment/MAS\nassignor/MS\nassigns/CU\nassimilate/VNGXSD\nassimilationist/M\nassimilation/M\nAssisi/M\nassistance/SM\nassistantship/SM\nassistant/SM\nassisted/U\nassister/M\nassist/RDGS\nassize/MGSD\nass/MNS\nassn\nassoc\nassociable\nassociated/U\nassociate/SDEXNG\nassociateship\nassociational\nassociation/ME\nassociative/Y\nassociativity/S\nassociator/MS\nassonance/SM\nassonant/S\nassorter/M\nassort/LRDSG\nassortment/SM\nasst\nassuaged/U\nassuage/SDG\nassumability\nassumer/M\nassume/SRDBJG\nassuming/UA\nassumption/SM\nassumptive\nassurance/AMS\nassure/AGSD\nassuredness/M\nassured/PYS\nassurer/SM\nassuring/YA\nAssyria/M\nAssyrian/SM\nAssyriology/M\nAstaire/SM\nAstarte/M\nastatine/MS\naster/ESM\nasteria\nasterisked/U\nasterisk/SGMD\nastern\nasteroidal\nasteroid/SM\nasthma/MS\nasthmatic/S\nastigmatic/S\nastigmatism/SM\nastir\nastonish/GSDL\nastonishing/Y\nastonishment/SM\nAston/M\nAstoria/M\nAstor/M\nastounding/Y\nastound/SDG\nastraddle\nAstrakhan/M\nastrakhan/SM\nastral/SY\nAstra/M\nastray\nastride\nAstrid/M\nastringency/SM\nastringent/YS\nAstrix/M\nastrolabe/MS\nastrologer/MS\nastrological/Y\nastrologist/M\nastrology/SM\nastronautical\nastronautic/S\nastronautics/M\nastronaut/SM\nastronomer/MS\nastronomic\nastronomical/Y\nastronomy/SM\nastrophysical\nastrophysicist/SM\nastrophysics/M\nAstroturf/M\nAstroTurf/S\nAsturias/M\nastuteness/MS\nastute/RTYP\nAsunci�n/M\nasunder\nAswan/M\nasylum/MS\nasymmetric\nasymmetrical/Y\nasymmetry/MS\nasymptomatic\nasymptomatically\nasymptote/MS\nasymptotically\nasymptotic/Y\nasynchronism/M\nasynchronous/Y\nasynchrony\nat\nAtacama/M\nAtahualpa/M\nAtalanta/M\nAtari/M\nAtat�rk/M\natavism/MS\natavistic\natavist/MS\nataxia/MS\nataxic/S\natelier/SM\natemporal\nate/S\nAthabasca/M\nAthabascan\'s\nAthabaskan/MS\nAthabaska\'s\natheism/SM\natheistic\natheist/SM\nAthena/M\nAthene/M\nAthenian/SM\nAthens/M\natheroscleroses\natherosclerosis/M\nathirst\nathlete/MS\nathletically\nathleticism/M\nathletic/S\nathletics/M\nathwart\natilt\nAtkins/M\nAtkinson/M\nAtlanta/M\nAtlante/MS\natlantes\nAtlantic/M\nAtlantis/M\natlas/SM\nAtlas/SM\nAt/M\nAtman\nATM/M\natmosphere/DSM\natmospherically\natmospheric/S\natoll/MS\natomically\natomicity/M\natomic/S\natomics/M\natomistic\natomization/SM\natomize/GZDRS\natomizer/M\natom/SM\natonality/MS\natonal/Y\natone/LDSG\natonement/SM\natop\nATP\nAtreus/M\natria\natrial\nAtria/M\natrium/M\natrociousness/SM\natrocious/YP\natrocity/SM\natrophic\natrophy/DSGM\natropine/SM\nAtropos/M\nAts\nattach/BLGZMDRS\nattached/UA\nattacher/M\nattach�/S\nattachment/ASM\nattacker/M\nattack/GBZSDR\nattainabilities\nattainability/UM\nattainableness/M\nattainable/U\nattainably/U\nattain/AGSD\nattainder/MS\nattained/U\nattainer/MS\nattainment/MS\nattar/MS\nattempt/ADSG\nattempter/MS\nattendance/MS\nattendant/SM\nattended/U\nattendee/SM\nattender/M\nattend/SGZDR\nattentional\nattentionality\nattention/IMS\nattentiveness/IMS\nattentive/YIP\nattenuated/U\nattenuate/SDXGN\nattenuation/M\nattenuator/MS\nattestation/SM\nattested/U\nattester/M\nattest/GSDR\nAttic\nAttica/M\nattic/MS\nAttila/M\nattire/SDG\nattitude/MS\nattitudinal/Y\nattitudinize/SDG\nAttlee/M\nattn\nAttn\nattorney/SM\nattractant/SM\nattract/BSDGV\nattraction/MS\nattractivenesses\nattractiveness/UM\nattractive/UYP\nattractor/MS\nattributable/U\nattribute/BVNGRSDX\nattributed/U\nattributer/M\nattributional\nattribution/M\nattributive/SY\nattrition/MS\nAttucks\nattune/SDG\natty\nATV/S\natwitter\nAtwood/M\natypical/Y\nAube/M\nAuberge/M\naubergine/MS\nAuberon/M\nAuberta/M\nAubert/M\nAubine/M\nAubree/M\nAubrette/M\nAubrey/M\nAubrie/M\nAubry/M\nauburn/SM\nAuckland/M\nauctioneer/SDMG\nauction/MDSG\naudaciousness/SM\naudacious/PY\naudacity/MS\nAuden/M\naudibility/MSI\naudible/I\naudibles\naudibly/I\nAudie/M\naudience/MS\nAudi/M\naudiogram/SM\naudiological\naudiologist/MS\naudiology/SM\naudiometer/MS\naudiometric\naudiometry/M\naudiophile/SM\naudio/SM\naudiotape/S\naudiovisual/S\naudited/U\naudition/MDSG\nauditorium/MS\nauditor/MS\nauditory/S\naudit/SMDVG\nAudra/M\nAudre/M\nAudrey/M\nAudrie/M\nAudrye/M\nAudry/M\nAudubon/M\nAudy/M\nAuerbach/M\nAugean\nauger/SM\naught/S\nAugie/M\nAug/M\naugmentation/SM\naugmentative/S\naugment/DRZGS\naugmenter/M\naugur/GDMS\naugury/SM\nAugusta/M\nAugustan/S\nAuguste/M\nAugustina/M\nAugustine/M\nAugustinian/S\nAugustin/M\naugustness/SM\nAugusto/M\nAugust/SM\naugust/STPYR\nAugustus/M\nAugy/M\nauk/MS\nAu/M\nAundrea/M\nauntie/MS\naunt/MYS\naunty\'s\naural/Y\nAura/M\naura/SM\nAurea/M\nAurelea/M\nAurelia/M\nAurelie/M\nAurelio/M\nAurelius/M\nAurel/M\naureole/GMSD\naureomycin\nAureomycin/M\nAuria/M\nauric\nauricle/SM\nauricular\nAurie/M\nAuriga/M\nAurilia/M\nAurlie/M\nAuroora/M\nauroral\nAurora/M\naurora/SM\nAurore/M\nAurthur/M\nAuschwitz/M\nauscultate/XDSNG\nauscultation/M\nauspice/SM\nauspicious/IPY\nauspiciousnesses\nauspiciousness/IM\nAussie/MS\nAusten/M\naustereness/M\naustere/TYRP\nausterity/SM\nAustina/M\nAustine/M\nAustin/SM\naustral\nAustralasia/M\nAustralasian/S\naustrales\nAustralia/M\nAustralian/MS\nAustralis/M\naustralites\nAustraloid\nAustralopithecus/M\nAustria/M\nAustrian/SM\nAustronesian\nauthentically\nauthenticated/U\nauthenticate/GNDSX\nauthentication/M\nauthenticator/MS\nauthenticity/MS\nauthentic/UI\nauthor/DMGS\nauthoress/S\nauthorial\nauthoritarianism/MS\nauthoritarian/S\nauthoritativeness/SM\nauthoritative/PY\nauthority/SM\nauthorization/MAS\nauthorize/AGDS\nauthorized/U\nauthorizer/SM\nauthorizes/U\nauthorship/MS\nautism/MS\nautistic/S\nautobahn/MS\nautobiographer/MS\nautobiographic\nautobiographical/Y\nautobiography/MS\nautoclave/SDGM\nautocollimator/M\nautocorrelate/GNSDX\nautocorrelation/M\nautocracy/SM\nautocratic\nautocratically\nautocrat/SM\nautodial/R\nautodidact/MS\nautofluorescence\nautograph/MDG\nautographs\nautoignition/M\nautoimmune\nautoimmunity/S\nautoloader\nautomaker/S\nautomata\'s\nautomate/NGDSX\nautomatically\nautomatic/S\nautomation/M\nautomatism/SM\nautomatize/DSG\nautomaton/SM\nautomobile/GDSM\nautomorphism/SM\nautomotive\nautonavigator/SM\nautonomic/S\nautonomous/Y\nautonomy/MS\nautopilot/SM\nautopsy/MDSG\nautoregressive\nautorepeat/GS\nauto/SDMG\nautostart\nautosuggestibility/M\nautotransformer/M\nautoworker/S\nautumnal/Y\nAutumn/M\nautumn/MS\naux\nauxiliary/S\nauxin/MS\nAV\navailability/USM\navailableness/M\navailable/U\navailably\navail/BSZGRD\navailing/U\navalanche/MGSD\nAvalon/M\nAva/M\navant\navarice/SM\navariciousness/M\navaricious/PY\navast/S\navatar/MS\navaunt/S\navdp\nAveline/M\nAve/MS\navenged/U\navenger/M\navenge/ZGSRD\nAventine/M\nAventino/M\navenue/MS\naverage/DSPGYM\nAverell/M\nAverill/M\nAveril/M\nAvernus/M\naverred\naverrer\naverring\nAverroes/M\naverseness/M\naverse/YNXP\naversion/M\navers/V\navert/GSD\nAveryl/M\nAvery/M\nave/S\naves/C\nAvesta/M\navg\navian/S\naviary/SM\naviate/NX\naviation/M\naviator/SM\naviatrices\naviatrix/SM\nAvicenna/M\nAvictor/M\navidity/MS\navid/TPYR\nAvie/M\nAvigdor/M\nAvignon/M\nAvila/M\navionic/S\navionics/M\nAvior/M\nAvis\navitaminoses\navitaminosis/M\nAvivah/M\nAviva/M\nAviv/M\navocado/MS\navocational\navocation/SM\nAvogadro/M\navoidable/U\navoidably/U\navoidance/SM\navoider/M\navoid/ZRDBGS\navoirdupois/MS\nAvon/M\navouch/GDS\navowal/EMS\navowed/Y\navower/M\navow/GEDS\nAvram/M\nAvril/M\nAvrit/M\nAvrom/M\navuncular\nav/ZR\nAWACS\nawait/SDG\nawake/GS\nawakened/U\nawakener/M\nawakening/S\nawaken/SADG\nawarder/M\naward/RDSZG\nawareness/MSU\naware/TRP\nawash\naway/PS\naweigh\nawe/SM\nawesomeness/SM\nawesome/PY\nawestruck\nawfuller\nawfullest\nawfulness/SM\nawful/YP\naw/GD\nawhile/S\nawkwardness/MS\nawkward/PRYT\nawl/MS\nawning/DM\nawn/MDJGS\nawoke\nawoken\nAWOL\nawry/RT\nax/DRSZGM\naxehead/S\nAxel/M\nAxe/M\naxeman\naxial/Y\naxillary\naxiological/Y\naxiology/M\naxiomatically\naxiomatic/S\naxiomatization/MS\naxiomatize/GDS\naxiom/SM\naxion/SM\naxis/SM\naxle/MS\naxletree/MS\nAx/M\naxolotl/SM\naxon/SM\nayah/M\nayahs\nAyala/M\nayatollah\nayatollahs\naye/MZRS\nAyers\nAylmar/M\nAylmer/M\nAymara/M\nAymer/M\nAyn/M\nAZ\nazalea/SM\nAzania/M\nAzazel/M\nAzerbaijan/M\nazimuthal/Y\nazimuth/M\nazimuths\nAzores\nAzov/M\nAZT\nAztecan\nAztec/MS\nazure/MS\nBA\nBaal/SM\nbaa/SDG\nBabara/M\nBabar\'s\nBabbage/M\nBabbette/M\nBabbie/M\nbabbitt/GDS\nBabbitt/M\nbabbler/M\nbabble/RSDGZ\nBabb/M\nBabcock/M\nBabel/MS\nbabel/S\nbabe/SM\nBabette/M\nBabita/M\nBabka/M\nbaboon/MS\nBab/SM\nbabushka/MS\nbabyhood/MS\nbabyish\nBabylonia/M\nBabylonian/SM\nBabylon/MS\nbabysat\nbabysit/S\nbabysitter/S\nbabysitting\nbaby/TDSRMG\nBacall/M\nBacardi/M\nbaccalaureate/MS\nbaccarat/SM\nbacchanalia\nBacchanalia/M\nbacchanalian/S\nbacchanal/SM\nBacchic\nBacchus/M\nbachelorhood/SM\nbachelor/SM\nBach/M\nbacillary\nbacilli\nbacillus/MS\nbackache/SM\nbackarrow\nbackbencher/M\nbackbench/ZR\nbackbiter/M\nbackbite/S\nbackbitten\nbackbit/ZGJR\nbackboard/SM\nbackbone/SM\nbackbreaking\nbackchaining\nbackcloth/M\nbackdate/GDS\nbackdrop/MS\nbackdropped\nbackdropping\nbacked/U\nbacker/M\nbackfield/SM\nbackfill/SDG\nbackfire/GDS\nbackgammon/MS\nbackground/SDRMZG\nback/GZDRMSJ\nbackhanded/Y\nbackhander/M\nbackhand/RDMSZG\nbackhoe/S\nbacking/M\nbacklash/GRSDM\nbackless\nbacklogged\nbacklogging\nbacklog/MS\nbackorder\nbackpacker/M\nbackpack/ZGSMRD\nbackpedal/DGS\nbackplane/MS\nbackplate/SM\nbackrest/MS\nbackscatter/SMDG\nbackseat/S\nbackside/SM\nbackslapper/MS\nbackslapping/M\nbackslash/DSG\nbackslider/M\nbackslide/S\nbackslid/RZG\nbackspace/GSD\nbackspin/SM\nbackstabber/M\nbackstabbing\nbackstage\nbackstair/S\nbackstitch/GDSM\nbackstop/MS\nbackstopped\nbackstopping\nbackstreet/M\nbackstretch/SM\nbackstroke/GMDS\nbacktalk/S\nbacktrack/SDRGZ\nbackup/SM\nBackus/M\nbackwardness/MS\nbackward/YSP\nbackwash/SDMG\nbackwater/SM\nbackwood/S\nbackwoodsman/M\nbackwoodsmen\nbackyard/MS\nbaconer/M\nBacon/M\nbacon/SRM\nbacterial/Y\nbacteria/MS\nbactericidal\nbactericide/SM\nbacteriologic\nbacteriological\nbacteriologist/MS\nbacteriology/SM\nbacterium/M\nBactria/M\nbadder\nbaddest\nbaddie/MS\nbade\nBaden/M\nbadge/DSRGMZ\nbadger/DMG\nbadinage/DSMG\nbadland/S\nBadlands/M\nbadman/M\nbadmen\nbadminton/MS\nbadmouth/DG\nbadmouths\nbadness/SM\nbad/PSNY\nBaedeker/SM\nBaez/M\nBaffin/M\nbafflement/MS\nbaffler/M\nbaffle/RSDGZL\nbaffling/Y\nbagatelle/MS\nbagel/SM\nbagful/MS\nbaggageman\nbaggagemen\nbaggage/SM\nbagged/M\nbagger/SM\nbaggily\nbagginess/MS\nbagging/M\nbaggy/PRST\nBaghdad/M\nbagpiper/M\nbagpipe/RSMZ\nBagrodia/MS\nbag/SM\nbaguette/SM\nBaguio/M\nbah\nBaha\'i\nBahama/MS\nBahamanian/S\nBahamian/MS\nBaha\'ullah\nBahia/M\nBahrain/M\nbahs\nBaikal/M\nBailey/SM\nbail/GSMYDRB\nBailie/M\nbailiff/SM\nbailiwick/MS\nBaillie/M\nBail/M\nbailout/MS\nbailsman/M\nbailsmen\nBaily/M\nBaird/M\nbairn/SM\nbaiter/M\nbait/GSMDR\nbaize/GMDS\nBaja/M\nbaked/U\nbakehouse/M\nBakelite/M\nbaker/M\nBaker/M\nBakersfield/M\nbakery/SM\nbakeshop/S\nbake/ZGJDRS\nbaking/M\nbaklava/M\nbaksheesh/SM\nBaku/M\nBakunin/M\nbalaclava/MS\nbalalaika/MS\nbalanced/A\nbalancedness\nbalancer/MS\nbalance\'s\nbalance/USDG\nBalanchine/M\nBalboa/M\nbalboa/SM\nbalcony/MSD\nbalderdash/MS\nBalder/M\nbaldfaced\nBald/MR\nbaldness/MS\nbald/PYDRGST\nbaldric/SM\nBalduin/M\nBaldwin/M\nbaldy\nBalearic/M\nbaleen/MS\nbalefuller\nbalefullest\nbalefulness/MS\nbaleful/YP\nBale/M\nbale/MZGDRS\nbaler/M\nBalfour/M\nBali/M\nBalinese\nbalkanization\nbalkanize/DG\nBalkan/SM\nbalker/M\nbalk/GDRS\nBalkhash/M\nbalkiness/M\nbalky/PRT\nballadeer/MS\nballade/MS\nballadry/MS\nballad/SM\nBallard/SM\nballast/SGMD\nballcock/S\nballerina/MS\nballer/M\nballetic\nballet/MS\nballfields\nballgame/S\nball/GZMSDR\nballistic/S\nballistics/M\nBall/M\nballoonist/S\nballoon/RDMZGS\nballoter/M\nballot/MRDGS\nballpark/SM\nballplayer/SM\nballpoint/SM\nballroom/SM\nballsy/TR\nballyhoo/SGMD\nbalminess/SM\nbalm/MS\nbalmy/PRT\nbaloney/SM\nbalsam/GMDS\nbalsamic\nbalsa/MS\nBalthazar/M\nBaltic/M\nBaltimore/M\nBaluchistan/M\nbaluster/MS\nbalustrade/SM\nBalzac/M\nBa/M\nBamako/M\nBamberger/M\nBambie/M\nBambi/M\nbamboo/SM\nbamboozle/GSD\nBamby/M\nBanach/M\nbanality/MS\nbanal/TYR\nbanana/SM\nBancroft/M\nbandager/M\nbandage/RSDMG\nbandanna/SM\nbandbox/MS\nbandeau/M\nbandeaux\nband/EDGS\nbander/M\nbanding/M\nbandit/MS\nbanditry/MS\nbandmaster/MS\nbandoleer/SM\nbandpass\nband\'s\nbandsman/M\nbandsmen\nbandstand/SM\nbandstop\nBandung/M\nbandwagon/MS\nbandwidth/M\nbandwidths\nbandy/TGRSD\nbanefuller\nbanefullest\nbaneful/Y\nbane/MS\nBangalore/M\nbanger/M\nbang/GDRZMS\nbangkok\nBangkok/M\nBangladeshi/S\nBangladesh/M\nbangle/MS\nBangor/M\nBangui/M\nbani\nbanisher/M\nbanishment/MS\nbanish/RSDGL\nbanister/MS\nBanjarmasin/M\nbanjoist/SM\nbanjo/MS\nBanjul/M\nbankbook/SM\nbankcard/S\nbanker/M\nbank/GZJDRMBS\nbanking/M\nBank/MS\nbanknote/S\nbankroll/DMSG\nbankruptcy/MS\nbankrupt/DMGS\nBanky/M\nBan/M\nbanned/U\nBanneker/M\nbanner/SDMG\nbanning/U\nBannister/M\nbannister\'s\nbannock/SM\nbanns\nbanqueter/M\nbanquet/SZGJMRD\nbanquette/MS\nban/SGMD\nbanshee/MS\nbans/U\nbantam/MS\nbantamweight/MS\nbanterer/M\nbantering/Y\nbanter/RDSG\nBanting/M\nBantu/SM\nbanyan/MS\nbanzai/S\nbaobab/SM\nBaotou/M\nbaptismal/Y\nbaptism/SM\nBaptiste/M\nbaptistery/MS\nbaptist/MS\nBaptist/MS\nbaptistry\'s\nbaptized/U\nbaptizer/M\nbaptize/SRDZG\nbaptizes/U\nBarabbas/M\nBarbabas/M\nBarbabra/M\nBarbadian/S\nBarbados/M\nBarbaraanne/M\nBarbara/M\nBarbarella/M\nbarbarianism/MS\nbarbarian/MS\nbarbaric\nbarbarically\nbarbarism/MS\nbarbarity/SM\nbarbarize/SDG\nBarbarossa/M\nbarbarousness/M\nbarbarous/PY\nBarbary/M\nbarb/DRMSGZ\nbarbecue/DRSMG\nbarbed/P\nBarbee/M\nbarbell/SM\nbarbel/MS\nBarbe/M\nbarbeque\'s\nbarber/DMG\nbarbered/U\nBarber/M\nbarberry/MS\nbarbershop/MS\nBarbette/M\nBarbey/M\nBarbie/M\nBarbi/M\nbarbital/M\nbarbiturate/MS\nBarbour/M\nBarbra/M\nBarb/RM\nBarbuda/M\nbarbwire/SM\nBarby/M\nbarcarole/SM\nBarcelona/M\nBarclay/M\nBardeen/M\nBarde/M\nbardic\nBard/M\nbard/MDSG\nbareback/D\nbarefacedness/M\nbarefaced/YP\nbarefoot/D\nbarehanded\nbareheaded\nbarelegged\nbareness/MS\nBarents/M\nbare/YSP\nbarfly/SM\nbarf/YDSG\nbargainer/M\nbargain/ZGSDRM\nbarge/DSGM\nbargeman/M\nbargemen\nbargepole/M\nbarhopped\nbarhopping\nbarhop/S\nBari/M\nbaritone/MS\nbarium/MS\nbarked/C\nbarkeeper/M\nbarkeep/SRZ\nbarker/M\nBarker/M\nbark/GZDRMS\nBarkley/M\nbarks/C\nbarleycorn/MS\nbarley/MS\nBarlow/M\nbarmaid/SM\nbarman/M\nbarmen\nBar/MH\nBarnabas\nBarnabe/M\nBarnaby/M\nbarnacle/MDS\nBarnard/M\nBarnaul/M\nBarnebas/M\nBarnes\nBarnett/M\nBarney/M\nbarnful\nbarn/GDSM\nBarnhard/M\nBarnie/M\nBarn/M\nbarnsful\nbarnstorm/DRGZS\nbarnstormer/M\nBarnum/M\nbarnyard/MS\nBarny/M\nBaroda/M\nbarometer/MS\nbarometric\nbarometrically\nbaronage/MS\nbaroness/MS\nbaronetcy/SM\nbaronet/MS\nbaronial\nBaron/M\nbaron/SM\nbarony/SM\nbaroque/SPMY\nbarque\'s\nBarquisimeto/M\nbarracker/M\nbarrack/SDRG\nbarracuda/MS\nbarrage/MGSD\nBarranquilla/M\nbarred/ECU\nbarre/GMDSJ\nbarrel/SGMD\nbarrenness/SM\nbarren/SPRT\nBarrera/M\nBarret/M\nbarrette/SM\nBarrett/M\nbarricade/SDMG\nBarrie/M\nbarrier/MS\nbarring/R\nbarrio/SM\nBarri/SM\nbarrister/MS\nBarr/M\nBarron/M\nbarroom/SM\nbarrow/MS\nBarry/M\nBarrymore/MS\nbars/ECU\nbarstool/SM\nBarstow/M\nBartel/M\nbartender/M\nbartend/ZR\nbarterer/M\nbarter/SRDZG\nbar/TGMDRS\nBarthel/M\nBarth/M\nBartholdi/M\nBartholemy/M\nBartholomeo/M\nBartholomeus/M\nBartholomew/M\nBartie/M\nBartlet/M\nBartlett/M\nBart/M\nBart�k/M\nBartolemo/M\nBartolomeo/M\nBarton/M\nBartram/M\nBarty/M\nbarycenter\nbarycentre\'s\nbarycentric\nBary/M\nbaryon/SM\nBaryram/M\nBaryshnikov/M\nbasaltic\nbasalt/SM\nbasal/Y\nBascom/M\nbas/DRSTG\nbaseball/MS\nbaseband\nbaseboard/MS\nbase/CGRSDL\nbaseless\nbaseline/SM\nBasel/M\nbasely\nBase/M\nbaseman/M\nbasemen\nbasement/CSM\nbaseness/MS\nbaseplate/M\nbase\'s\nbasetting\nbashfulness/MS\nbashful/PY\nbash/JGDSR\nBasho/M\nBasia/M\nBASIC\nbasically\nbasic/S\nBasie/M\nbasilar\nBasile/M\nbasilica/SM\nBasilio/M\nbasilisk/SM\nBasilius/M\nBasil/M\nbasil/MS\nbasin/DMS\nbasinful/S\nbasis/M\nbasketball/MS\nbasketry/MS\nbasket/SM\nbasketwork/SM\nbask/GSD\nbasophilic\nBasque/SM\nBasra/M\nBasseterre/M\nbasset/GMDS\nBassett/M\nbassinet/SM\nbassist/MS\nBass/M\nbasso/MS\nbassoonist/MS\nbassoon/MS\nbass/SM\nbasswood/SM\nbastardization/MS\nbastardized/U\nbastardize/SDG\nbastard/MYS\nbastardy/MS\nbaste/NXS\nbaster/M\nBastian/M\nBastien/M\nBastille/M\nbasting/M\nbastion/DM\nbast/SGZMDR\nBasutoland/M\nBataan/M\nBatavia/M\nbatch/MRSDG\nbated/U\nbate/KGSADC\nbater/AC\nBates\nbathe\nbather/M\nbathetic\nbathhouse/SM\nbath/JMDSRGZ\nbathmat/S\nBatholomew/M\nbathos/SM\nbathrobe/MS\nbathroom/SDM\nbaths\nBathsheba/M\nbathtub/MS\nbathwater\nbathyscaphe\'s\nbathysphere/MS\nbatik/DMSG\nBatista/M\nbatiste/SM\nBat/M\nbatman/M\nBatman/M\nbatmen\nbaton/SM\nBatsheva/M\nbatsman/M\nbat/SMDRG\nbatsmen\nbattalion/MS\nbatted\nbatten/SDMG\nbatter/SRDZG\nbattery/MS\nbatting/MS\nbattledore/MS\nbattledress\nbattlefield/SM\nbattlefront/SM\nbattle/GMZRSDL\nbattleground/SM\nBattle/M\nbattlement/SMD\nbattler/M\nbattleship/MS\nbatty/RT\nBatu/M\nbatwings\nbauble/SM\nBaudelaire/M\nbaud/M\nBaudoin/M\nBaudouin/M\nBauer/M\nBauhaus/M\nbaulk/GSDM\nBausch/M\nbauxite/SM\nBavaria/M\nBavarian/S\nbawdily\nbawdiness/MS\nbawd/SM\nbawdy/PRST\nbawler/M\nbawl/SGDR\nBaxie/M\nBax/M\nBaxter/M\nBaxy/M\nBayamon\nBayard/M\nbayberry/MS\nBayda/M\nBayer/M\nBayes\nBayesian\nbay/GSMDY\nBaylor/M\nBay/MR\nbayonet/SGMD\nBayonne/M\nbayou/MS\nBayreuth/M\nbazaar/MS\nbazillion/S\nbazooka/MS\nBB\nBBB\nBBC\nbbl\nBBQ\nBBS\nBC\nBCD\nbdrm\nbeachcomber/SM\nbeachhead/SM\nBeach/M\nbeach/MSDG\nbeachwear/M\nbeacon/DMSG\nbeading/M\nBeadle/M\nbeadle/SM\nbead/SJGMD\nbeadsman/M\nbeadworker\nbeady/TR\nbeagle/SDGM\nbeaker/M\nbeak/ZSDRM\nBeale/M\nBealle/M\nBea/M\nbeam/MDRSGZ\nbeanbag/SM\nbean/DRMGZS\nbeanie/SM\nBean/M\nbeanpole/MS\nbeanstalk/SM\nbearable/U\nbearably/U\nbeard/DSGM\nbearded/P\nbeardless\nBeard/M\nBeardmore/M\nBeardsley/M\nbearer/M\nbearing/M\nbearishness/SM\nbearish/PY\nbearlike\nBear/M\nBearnaise/M\nBearnard/M\nbearskin/MS\nbear/ZBRSJG\nBeasley/M\nbeasties\nbeastings/M\nbeastliness/MS\nbeastly/PTR\nbeast/SJMY\nbeatable/U\nbeatably/U\nbeaten/U\nbeater/M\nbeatific\nbeatifically\nbeatification/M\nbeatify/GNXDS\nbeating/M\nbeatitude/MS\nBeatlemania/M\nBeatles/M\nbeatnik/SM\nbeat/NRGSBZJ\nBeatrice/M\nBeatrisa/M\nBeatrix/M\nBeatriz/M\nBeauchamps\nBeaufort/M\nBeaujolais/M\nBeau/M\nBeaumarchais/M\nBeaumont/M\nbeau/MS\nBeauregard/M\nbeauteousness/M\nbeauteous/YP\nbeautician/MS\nbeautification/M\nbeautifier/M\nbeautifully/U\nbeautifulness/M\nbeautiful/PTYR\nbeautify/SRDNGXZ\nbeaut/SM\nbeauty/SM\nBeauvoir/M\nbeaux\'s\nbeaver/DMSG\nBeaverton/M\nBebe/M\nbebop/MS\nbecalm/GDS\nbecame\nbecause\nBecca/M\nBechtel/M\nBecka/M\nBecker/M\nBecket/M\nBeckett/M\nbeck/GSDM\nBeckie/M\nBecki/M\nbeckon/SDG\nBeck/RM\nBecky/M\nbecloud/SGD\nbecome/GJS\nbecoming/UY\nBecquerel/M\nbedaub/GDS\nbedazzle/GLDS\nbedazzlement/SM\nbedbug/SM\nbedchamber/M\nbedclothes\nbedded\nbedder/MS\nbedding/MS\nbedeck/DGS\nBede/M\nbedevil/DGLS\nbedevilment/SM\nbedfast\nbedfellow/MS\nBedford/M\nbedimmed\nbedimming\nbedim/S\nbedizen/DGS\nbedlam/MS\nbedlinen\nbedmaker/SM\nbedmate/MS\nbed/MS\nBedouin/SM\nbedpan/SM\nbedpost/SM\nbedraggle/GSD\nbedridden\nbedrock/SM\nbedroll/SM\nbedroom/DMS\nbedsheets\nbedside/MS\nbedsit\nbedsitter/M\nbedsore/MS\nbedspread/SM\nbedspring/SM\nbedstead/SM\nbedstraw/M\nbedtime/SM\nBeebe/M\nbeebread/MS\nBeecher/M\nbeech/MRSN\nbeechnut/MS\nbeechwood\nbeefburger/SM\nbeefcake/MS\nbeef/GZSDRM\nbeefiness/MS\nbeefsteak/MS\nbeefy/TRP\nbeehive/MS\nbeekeeper/MS\nbeekeeping/SM\nbeeline/MGSD\nBeelzebub/M\nBee/M\nbee/MZGJRS\nbeen/S\nbeeper/M\nbeep/GZSMDR\nBeerbohm/M\nbeer/M\nbeermat/S\nbeery/TR\nbeeswax/DSMG\nBeethoven/M\nbeetle/GMRSD\nBeeton/M\nbeetroot/M\nbeet/SM\nbeeves/M\nbefall/SGN\nbefell\nbefit/SM\nbefitted\nbefitting/Y\nbefogged\nbefogging\nbefog/S\nbefore\nbeforehand\nbefoul/GSD\nbefriend/DGS\nbefuddle/GLDS\nbefuddlement/SM\nbegan\nbeget/S\nbegetting\nbeggar/DYMSG\nbeggarliness/M\nbeggarly/P\nbeggary/MS\nbegged\nbegging\nBegin/M\nbeginner/MS\nbeginning/MS\nbegin/S\nbegone/S\nbegonia/SM\nbegot\nbegotten\nbegrime/SDG\nbegrudge/GDRS\nbegrudging/Y\nbeg/S\nbeguilement/SM\nbeguiler/M\nbeguile/RSDLZG\nbeguiling/Y\nbeguine/SM\nbegum/MS\nbegun\nbehalf/M\nbehalves\nBehan/M\nbehave/GRSD\nbehavioral/Y\nbehaviorism/MS\nbehavioristic/S\nbehaviorist/S\nbehavior/SMD\nbehead/GSD\nbeheld\nbehemoth/M\nbehemoths\nbehest/SM\nbehindhand\nbehind/S\nbeholder/M\nbehold/ZGRNS\nbehoofs\nbehoove/SDJMG\nbehooving/YM\nBehring/M\nBeiderbecke/M\nbeige/MS\nBeijing\nBeilul/M\nbeing/M\nBeirut/M\nBeitris/M\nbejewel/SDG\nBekesy/M\nBekki/M\nbe/KS\nbelabor/MDSG\nBela/M\nBelarus\nbelate/D\nbelatedness/M\nbelated/PY\nBelau/M\nbelay/GSD\nbelch/GSD\nbeleaguer/GDS\nBelem/M\nBelfast/M\nbelfry/SM\nBelgian/MS\nBelgium/M\nBelg/M\nBelgrade/M\nBelia/M\nBelicia/M\nbelie\nbelief/ESUM\nbelier/M\nbelievability\'s\nbelievability/U\nbelievable/U\nbelievably/U\nbelieved/U\nbelieve/EZGDRS\nbeliever/MUSE\nbelieving/U\nBelinda/M\nBelita/M\nbelittlement/MS\nbelittler/M\nbelittle/RSDGL\nBelize/M\nbelladonna/MS\nBella/M\nBellamy/M\nBellanca/M\nBellatrix/M\nbellboy/MS\nbelled/A\nBelle/M\nbelle/MS\nbelletristic\nbelletrist/SM\nBelleville/M\nbellflower/M\nbell/GSMD\nbellhop/MS\nbellicoseness/M\nbellicose/YP\nbellicosity/MS\nbelligerence/SM\nbelligerency/MS\nbelligerent/SMY\nBellina/M\nbelling/A\nBellini/M\nBell/M\nbellman/M\nbellmen\nBellovin/M\nbellow/DGS\nBellow/M\nbellows/M\nbells/A\nbellwether/MS\nBellwood/M\nbellyacher/M\nbellyache/SRDGM\nbellybutton/MS\nbellyfull\nbellyful/MS\nbelly/SDGM\nBel/M\nBelmont/M\nBelmopan/M\nBeloit/M\nbelong/DGJS\nbelonging/MP\nBelorussian/S\nBelorussia\'s\nbelove/D\nbeloved/S\nbelow/S\nBelshazzar/M\nbelted/U\nbelt/GSMD\nbelting/M\nBelton/M\nBeltran/M\nBeltsville/M\nbeltway/SM\nbeluga/SM\nBelushi/M\nBelva/M\nbelvedere/M\nBelvia/M\nbely/DSRG\nbeman\nBe/MH\nbemire/SDG\nbemoan/GDS\nbemused/Y\nbemuse/GSDL\nbemusement/SM\nBenacerraf/M\nBenares\'s\nbencher/M\nbenchmark/GDMS\nbench/MRSDG\nbend/BUSG\nbended\nBender/M\nbender/MS\nBendick/M\nBendicty/M\nBendite/M\nBendix/M\nbeneath\nBenedetta/M\nBenedetto/M\nBenedick/M\nBenedicta/M\nBenedictine/MS\nbenediction/MS\nBenedict/M\nBenedicto/M\nbenedictory\nBenedikta/M\nBenedikt/M\nbenefaction/MS\nbenefactor/MS\nbenefactress/S\nbenefice/MGSD\nbeneficence/SM\nbeneficent/Y\nbeneficialness/M\nbeneficial/PY\nbeneficiary/MS\nbenefiter/M\nbenefit/SRDMZG\nBenelux/M\nBenet/M\nBenetta/M\nBenetton/M\nbenevolence/SM\nbenevolentness/M\nbenevolent/YP\nBengali/M\nBengal/SM\nBenghazi/M\nBengt/M\nBeniamino/M\nbenightedness/M\nbenighted/YP\nbenignant\nbenignity/MS\nbenign/Y\nBeninese\nBenin/M\nBenita/M\nBenito/M\nBenjamen/M\nBenjamin/M\nBenjie/M\nBenji/M\nBenjy/M\nBen/M\nBennett/M\nBennie/M\nBenni/M\nBennington/M\nBenn/M\nBenny/M\nBenoite/M\nBenoit/M\nBenson/M\nBentham/M\nBentlee/M\nBentley/MS\nBent/M\nBenton/M\nbents\nbent/U\nbentwood/SM\nbenumb/SGD\nBenyamin/M\nBenzedrine/M\nbenzene/MS\nbenzine/SM\nBenz/M\nBeograd\'s\nBeowulf/M\nbequeath/GSD\nbequeaths\nbequest/MS\nberate/GSD\nBerber/MS\nbereave/GLSD\nbereavement/MS\nbereft\nBerenice/M\nBeret/M\nberet/SM\nBergen/M\nBergerac/M\nBerger/M\nBerget/M\nBerglund/M\nBergman/M\nBerg/NRM\nberg/NRSM\nBergson/M\nBergsten/M\nBergstrom/M\nberibbon/D\nberiberi/SM\nBeringer/M\nBering/RM\nBerkeley/M\nberkelium/SM\nBerke/M\nBerkie/M\nBerkley/M\nBerkly/M\nBerkowitz/M\nBerkshire/SM\nBerky/M\nBerk/YM\nBerle/M\nBerliner/M\nBerlin/SZRM\nBerlioz/M\nBerlitz/M\nBerman/M\nBer/MG\nberm/SM\nBermuda/MS\nBermudan/S\nBermudian/S\nBernadene/M\nBernadette/M\nBernadina/M\nBernadine/M\nBerna/M\nBernardina/M\nBernardine/M\nBernardino/M\nBernard/M\nBernardo/M\nBernarr/M\nBernays/M\nBernbach/M\nBernelle/M\nBerne\'s\nBernese\nBernete/M\nBernetta/M\nBernette/M\nBernhard/M\nBernhardt/M\nBernice/M\nBerniece/M\nBernie/M\nBerni/M\nBernini/M\nBernita/M\nBern/M\nBernoulli/M\nBernstein/M\nBerny/M\nBerra/M\nBerrie/M\nBerri/M\nberrylike\nBerry/M\nberry/SDMG\nberserker/M\nberserk/SR\nBerta/M\nBerte/M\nBertha/M\nBerthe/M\nberth/MDGJ\nberths\nBertie/M\nBertillon/M\nBerti/M\nBertina/M\nBertine/M\nBert/M\nBerton/M\nBertram/M\nBertrand/M\nBertrando/M\nBerty/M\nBeryle/M\nberyllium/MS\nBeryl/M\nberyl/SM\nBerzelius/M\nbes\nbeseecher/M\nbeseeching/Y\nbeseech/RSJZG\nbeseem/GDS\nbeset/S\nbesetting\nbeside/S\nbesieger/M\nbesiege/SRDZG\nbesmear/GSD\nbesmirch/GSD\nbesom/GMDS\nbesot/S\nbesotted\nbesotting\nbesought\nbespangle/GSD\nbespatter/SGD\nbespeak/SG\nbespectacled\nbespoke\nbespoken\nBess\nBessel/M\nBessemer/M\nBessie/M\nBessy/M\nbest/DRSG\nbestiality/MS\nbestial/Y\nbestiary/MS\nbestirred\nbestirring\nbestir/S\nBest/M\nbestowal/SM\nbestow/SGD\nbestrew/DGS\nbestrewn\nbestridden\nbestride/SG\nbestrode\nbestseller/MS\nbestselling\nbestubble/D\nbetaken\nbetake/SG\nbeta/SM\nbetatron/M\nbetcha\nBetelgeuse/M\nbetel/MS\nBethanne/M\nBethany/M\nbethel/M\nBethe/M\nBethena/M\nBethesda/M\nBethina/M\nbethink/GS\nBethlehem/M\nbeth/M\nBeth/M\nbethought\nBethune\nbetide/GSD\nbetimes\nbet/MS\nbetoken/GSD\nbetook\nbetrayal/SM\nbetrayer/M\nbetray/SRDZG\nbetrothal/SM\nbetrothed/U\nbetroth/GD\nbetroths\nBetsey/M\nBetsy/M\nBetta/M\nBetteanne/M\nBetteann/M\nBette/M\nbetterment/MS\nbetter/SDLG\nBettie/M\nBetti/M\nBettina/M\nBettine/M\nbetting\nbettor/SM\nBettye/M\nBetty/SM\nbetweenness/M\nbetween/SP\nbetwixt\nBeulah/M\nBevan/M\nbevel/SJGMRD\nbeverage/MS\nBeverie/M\nBeverlee/M\nBeverley/M\nBeverlie/M\nBeverly/M\nBevin/M\nBevon/M\nBev\'s\nBevvy/M\nbevy/SM\nbewail/GDS\nbeware/GSD\nbewhisker/D\nbewigged\nbewildered/PY\nbewildering/Y\nbewilder/LDSG\nbewilderment/SM\nbewitching/Y\nbewitch/LGDS\nbewitchment/SM\nbey/MS\nbeyond/S\nbezel/MS\nbf\nB/GT\nBhopal/M\nBhutanese\nBhutan/M\nBhutto/M\nBialystok/M\nBianca/M\nBianco/M\nBianka/M\nbiannual/Y\nbias/DSMPG\nbiased/U\nbiathlon/MS\nbiaxial/Y\nbibbed\nBibbie/M\nbibbing\nBibbye/M\nBibby/M\nBibi/M\nbible/MS\nBible/MS\nbiblical/Y\nbiblicists\nbibliographer/MS\nbibliographical/Y\nbibliographic/S\nbibliography/MS\nbibliophile/MS\nBib/M\nbib/MS\nbibulous\nbicameral\nbicameralism/MS\nbicarb/MS\nbicarbonate/MS\nbicentenary/S\nbicentennial/S\nbicep/S\nbiceps/M\nbichromate/DM\nbickerer/M\nbickering/M\nbicker/SRDZG\nbiconcave\nbiconnected\nbiconvex\nbicuspid/S\nbicycler/M\nbicycle/RSDMZG\nbicyclist/SM\nbiddable\nbidden/U\nbidder/MS\nBiddie/M\nbidding/MS\nBiddle/M\nBiddy/M\nbiddy/SM\nbider/M\nbide/S\nbidet/SM\nBidget/M\nbid/GMRS\nbidiagonal\nbidirectional/Y\nbids/A\nbiennial/SY\nbiennium/SM\nBienville/M\nBierce/M\nbier/M\nbifocal/S\nbifurcate/SDXGNY\nbifurcation/M\nbigamist/SM\nbigamous\nbigamy/SM\nBigelow/M\nBigfoot\nbigged\nbigger\nbiggest\nbiggie/SM\nbigging\nbiggish\nbighead/MS\nbigheartedness/S\nbighearted/P\nbighorn/MS\nbight/SMDG\nbigmouth/M\nbigmouths\nbigness/SM\nbigoted/Y\nbigot/MDSG\nbigotry/MS\nbig/PYS\nbigwig/MS\nbiharmonic\nbijection/MS\nbijective/Y\nbijou/M\nbijoux\nbike/MZGDRS\nbiker/M\nbikini/SMD\nBiko/M\nbilabial/S\nbilateralness/M\nbilateral/PY\nbilayer/S\nBilbao/M\nbilberry/MS\nBilbo/M\nbile/SM\nbilge/GMDS\nbiliary\nBili/M\nbilinear\nbilingualism/SM\nbilingual/SY\nbiliousness/SM\nbilious/P\nbilker/M\nbilk/GZSDR\nbillboard/MDGS\nbiller/M\nbillet/MDGS\nbillfold/MS\nbilliard/SM\nBillie/M\nBilli/M\nbilling/M\nbillingsgate/SM\nBillings/M\nbillionaire/MS\nbillion/SHM\nbillionths\nbill/JGZSBMDR\nBill/JM\nbillow/DMGS\nbillowy/RT\nbillposters\nBillye/M\nBilly/M\nbilly/SM\nBil/MY\nbi/M\nBi/M\nbimbo/MS\nbimetallic/S\nbimetallism/MS\nBimini/M\nbimodal\nbimolecular/Y\nbimonthly/S\nbinary/S\nbinaural/Y\nbinder/M\nbindery/MS\nbinding/MPY\nbindingness/M\nbind/JDRGZS\nbindle/M\nbinds/AU\nbindweed/MS\nbinge/MS\nbing/GNDM\nBingham/M\nBinghamton/M\nBing/M\nbingo/MS\nBini/M\nBink/M\nBinky/M\nbinnacle/MS\nbinned\nBinnie/M\nBinni/M\nbinning\nBinny/M\nbinocular/SY\nbinodal\nbinomial/SYM\nbin/SM\nbinuclear\nbiochemical/SY\nbiochemist/MS\nbiochemistry/MS\nbiodegradability/S\nbiodegradable\nbiodiversity/S\nbioengineering/M\nbioethics\nbiofeedback/SM\nbiographer/M\nbiographic\nbiographical/Y\nbiograph/RZ\nbiography/MS\nbiog/S\nBioko/M\nbiol\nbiological/SY\nbiologic/S\nbiologist/SM\nbiology/MS\nbiomass/SM\nbiomedical\nbiomedicine/M\nbiometric/S\nbiometrics/M\nbiometry/M\nbiomolecule/S\nbiomorph\nbionically\nbionic/S\nbionics/M\nbiophysical/Y\nbiophysicist/SM\nbiophysic/S\nbiophysics/M\nbiopic/S\nbiopsy/SDGM\nbiorhythm/S\nBIOS\nbioscience/S\nbiosphere/MS\nbiostatistic/S\nbiosynthesized\nbiotechnological\nbiotechnologist\nbiotechnology/SM\nbiotic\nbiotin/SM\nbipartisan\nbipartisanship/MS\nbipartite/YN\nbipartition/M\nbipedal\nbiped/MS\nbiplane/MS\nbipolar\nbipolarity/MS\nbiracial\nBirch/M\nbirch/MRSDNG\nbirdbath/M\nbirdbaths\nbirdbrain/SDM\nbirdcage/SM\nbirder/M\nbirdhouse/MS\nbirdieing\nBirdie/M\nbirdie/MSD\nbirdlike\nbirdlime/MGDS\nBird/M\nbirdseed/MS\nBirdseye/M\nbird/SMDRGZ\nbirdsong\nbirdtables\nbirdwatch/GZR\nbirefringence/M\nbirefringent\nbiretta/SM\nBirgit/M\nBirgitta/M\nBirkenstock/M\nBirk/M\nBirmingham/M\nBiro/M\nBiron/M\nbirthday/SM\nbirthmark/MS\nbirth/MDG\nbirthplace/SM\nbirthrate/MS\nbirthright/MS\nbirth\'s/A\nbirths/A\nbirthstone/SM\nbis\nBiscay/M\nBiscayne/M\nbiscuit/MS\nbisect/DSG\nbisection/MS\nbisector/MS\nbiserial\nbisexuality/MS\nbisexual/YMS\nBishkek\nbishop/DGSM\nBishop/M\nbishopric/SM\nBismarck/M\nBismark/M\nbismuth/M\nbismuths\nbison/M\nbisque/SM\nBissau/M\nbistable\nbistate\nbistro/SM\nbisyllabic\nbitblt/S\nbitchily\nbitchiness/MS\nbitch/MSDG\nbitchy/PTR\nbiter/M\nbite/S\nbiting/Y\nbitmap/SM\nbit/MRJSZG\nBITNET/M\nbit\'s/C\nbits/C\nbitser/M\nbitted\nbitten\nbitterness/SM\nbittern/SM\nbitternut/M\nbitter/PSRDYTG\nbitterroot/M\nbittersweet/YMSP\nbitting\nbitty/PRT\nbitumen/MS\nbituminous\nbitwise\nbivalent/S\nbivalve/MSD\nbivariate\nbivouacked\nbivouacking\nbivouac/MS\nbiweekly/S\nbiyearly\nbizarreness/M\nbizarre/YSP\nBizet/M\nbiz/M\nbizzes\nBjorn/M\nbk\nb/KGD\nBk/M\nblabbed\nblabber/GMDS\nblabbermouth/M\nblabbermouths\nblabbing\nblab/S\nblackamoor/SM\nblackball/SDMG\nblackberry/GMS\nblackbirder/M\nblackbird/SGDRM\nblackboard/SM\nblackbody/S\nBlackburn/M\nblackcurrant/M\nblackener/M\nblacken/GDR\nBlackfeet\nBlackfoot/M\nblackguard/MDSG\nblackhead/SM\nblacking/M\nblackish\nblackjack/SGMD\nblackleg/M\nblacklist/DRMSG\nblackmail/DRMGZS\nblackmailer/M\nBlackman/M\nBlackmer/M\nblackness/MS\nblackout/SM\nBlackpool/M\nBlack\'s\nblack/SJTXPYRDNG\nblacksmith/MG\nblacksmiths\nblacksnake/MS\nblackspot\nBlackstone/M\nblackthorn/MS\nblacktop/MS\nblacktopped\nblacktopping\nBlackwell/MS\nbladder/MS\nbladdernut/M\nbladderwort/M\nblade/DSGM\nblah/MDG\nblahs\nBlaine/M\nBlaire/M\nBlair/M\nBlakelee/M\nBlakeley/M\nBlake/M\nBlakey/M\nblame/DSRBGMZ\nblamelessness/SM\nblameless/YP\nblamer/M\nblameworthiness/SM\nblameworthy/P\nBlanca/M\nBlancha/M\nBlanchard/M\nblanch/DRSG\nBlanche/M\nblancher/M\nBlanch/M\nblanc/M\nblancmange/SM\nblandishment/MS\nblandish/SDGL\nblandness/MS\nbland/PYRT\nBlane/M\nBlankenship/M\nblanketing/M\nblanket/SDRMZG\nblankness/MS\nblank/SPGTYRD\nBlanton/M\nBlantyre/M\nblare/DSG\nblarney/DMGS\nblas�\nblasphemer/M\nblaspheme/RSDZG\nblasphemousness/M\nblasphemous/PY\nblasphemy/SM\nblaster/M\nblasting/M\nblastoff/SM\nblast/SMRDGZ\nblatancy/SM\nblatant/YP\nblather/DRGS\nblatting\nBlatz/M\nBlavatsky/M\nBlayne/M\nblaze/DSRGMZ\nblazer/M\nblazing/Y\nblazoner/M\nblazon/SGDR\nbl/D\nbldg\nbleach/DRSZG\nbleached/U\nbleacher/M\nbleakness/MS\nbleak/TPYRS\nblear/GDS\nblearily\nbleariness/SM\nbleary/PRT\nbleater/M\nbleat/RDGS\nbleeder/M\nbleed/ZRJSG\nBleeker/M\nbleep/GMRDZS\nblemish/DSMG\nblemished/U\nblench/DSG\nblender/M\nblend/GZRDS\nBlenheim/M\nblessedness/MS\nblessed/PRYT\nblessing/M\nbless/JGSD\nBlevins/M\nblew\nBligh/M\nblighter/M\nblight/GSMDR\nblimey/S\nblimp/MS\nblinded/U\nblinder/M\nblindfold/SDG\nblinding/MY\nblind/JGTZPYRDS\nblindness/MS\nblindside/SDG\nblinker/MDG\nblinking/U\nblink/RDGSZ\nblinks/M\nBlinnie/M\nBlinni/M\nBlinny/M\nblintze/M\nblintz/SM\nblip/MS\nblipped\nblipping\nBlisse/M\nblissfulness/MS\nblissful/PY\nBliss/M\nbliss/SDMG\nblistering/Y\nblister/SMDG\nblistery\nBlithe/M\nblitheness/SM\nblither/G\nblithesome\nblithe/TYPR\nblitz/GSDM\nblitzkrieg/SM\nblizzard/MS\nbloater/M\nbloat/SRDGZ\nblobbed\nblobbing\nblob/MS\nBloch/M\nblockader/M\nblockade/ZMGRSD\nblockage/MS\nblockbuster/SM\nblockbusting/MS\nblocker/MS\nblockhead/MS\nblockhouse/SM\nblock\'s\nblock/USDG\nblocky/R\nbloc/MS\nBloemfontein/M\nbloke/SM\nBlomberg/M\nBlomquist/M\nBlondelle/M\nBlondell/M\nblonde\'s\nBlondie/M\nblondish\nblondness/MS\nblond/SPMRT\nBlondy/M\nbloodbath\nbloodbaths\nbloodcurdling\nbloodhound/SM\nbloodied/U\nbloodiness/MS\nbloodlessness/SM\nbloodless/PY\nbloodletting/MS\nbloodline/SM\nbloodmobile/MS\nbloodroot/M\nbloodshed/SM\nbloodshot\nblood/SMDG\nbloodsport/S\nbloodstain/MDS\nbloodstock/SM\nbloodstone/M\nbloodstream/SM\nbloodsucker/SM\nbloodsucking/S\nbloodthirstily\nbloodthirstiness/MS\nbloodthirsty/RTP\nbloodworm/M\nbloodymindedness\nbloody/TPGDRS\nbloomer/M\nBloomer/M\nBloomfield/M\nBloomington/M\nBloom/MR\nbloom/SMRDGZ\nblooper/M\nbloop/GSZRD\nblossom/DMGS\nblossomy\nblotch/GMDS\nblotchy/RT\nblot/MS\nblotted\nblotter/MS\nblotting\nblotto\nblouse/GMSD\nblower/M\nblowfish/M\nblowfly/MS\nblowgun/SM\nblow/GZRS\nblowing/M\nblown/U\nblowout/MS\nblowpipe/SM\nblowtorch/SM\nblowup/MS\nblowy/RST\nblowzy/RT\nBLT\nblubber/GSDR\nblubbery\nBlucher/M\nbludgeon/GSMD\nblueback\nBluebeard/M\nbluebell/MS\nblueberry/SM\nbluebill/M\nbluebird/MS\nbluebonnet/SM\nbluebook/M\nbluebottle/MS\nbluebush\nbluefish/SM\nbluegill/SM\nbluegrass/MS\nblueing\'s\nblueish\nbluejacket/MS\nbluejeans\nblue/JMYTGDRSP\nblueness/MS\nbluenose/MS\nbluepoint/SM\nblueprint/GDMS\nbluer/M\nbluest/M\nbluestocking/SM\nbluesy/TR\nbluet/MS\nbluffer/M\nbluffness/MS\nbluff/SPGTZYRD\nbluing/M\nbluishness/M\nbluish/P\nBlumenthal/M\nBlum/M\nblunderbuss/MS\nblunderer/M\nblunder/GSMDRJZ\nblundering/Y\nbluntness/MS\nblunt/PSGTYRD\nblurb/GSDM\nblur/MS\nblurred/Y\nblurriness/S\nblurring/Y\nblurry/RPT\nblurt/GSRD\nblusher/M\nblushing/UY\nblush/RSDGZ\nblusterer/M\nblustering/Y\nblusterous\nbluster/SDRZG\nblustery\nblvd\nBlvd\nBlythe/M\nBM\nBMW/M\nBO\nboarded\nboarder/SM\nboardgames\nboardinghouse/SM\nboarding/SM\nboard/IS\nboardroom/MS\nboard\'s\nboardwalk/SM\nboar/MS\nboa/SM\nboaster/M\nboastfulness/MS\nboastful/YP\nboast/SJRDGZ\nboatclubs\nboater/M\nboathouse/SM\nboating/M\nboatload/SM\nboatman/M\nboat/MDRGZJS\nboatmen\nboatswain/SM\nboatyard/SM\nbobbed\nBobbee/M\nBobbe/M\nBobbette/M\nBobbie/M\nBobbi/M\nbobbing/M\nbobbin/MS\nBobbitt/M\nbobble/SDGM\nBobbsey/M\nBobbye/M\nBobby/M\nbobby/SM\nbobbysoxer\'s\nbobcat/MS\nBobette/M\nBobina/M\nBobine/M\nBobinette/M\nBob/M\nbobolink/SM\nBobrow/M\nbobsledded\nbobsledder/MS\nbobsledding/M\nbobsled/MS\nbobsleigh/M\nbobsleighs\nbobs/M\nbob/SM\nbobtail/SGDM\nbobwhite/SM\nBoca/M\nBoccaccio/M\nboccie/SM\nbock/GDS\nbockwurst\nbodega/MS\nBodenheim/M\nbode/S\nBodhidharma/M\nbodhisattva\nBodhisattva/M\nbodice/SM\nbodied/M\nbodiless\nbodily\nboding/M\nbodkin/SM\nbod/SGMD\nbodybuilder/SM\nbodybuilding/S\nbody/DSMG\nbodyguard/MS\nbodying/M\nbodysuit/S\nbodyweight\nbodywork/SM\nBoeing/M\nBoeotia/M\nBoeotian\nBoer/M\nBogartian/M\nBogart/M\nBogey/M\nbogeyman/M\nbogeymen\nbogey/SGMD\nbogged\nbogging\nboggle/SDG\nboggling/Y\nboggy/RT\nbogie\'s\nbog/MS\nBogot�/M\nbogus\nbogyman\nbogymen\nbogy\'s\nBoheme/M\nbohemianism/S\nbohemian/S\nBohemian/SM\nBohemia/SM\nBohr/M\nBoigie/M\nboiled/AU\nboiler/M\nboilermaker/MS\nboilerplate/SM\nboil/JSGZDR\nboils/A\nBoise/M\nBois/M\nboisterousness/MS\nboisterous/YP\nbola/SM\nboldface/SDMG\nboldness/MS\nbold/YRPST\nbole/MS\nbolero/MS\nBoleyn/M\nbolivares\nBolivar/M\nbolivar/MS\nBolivia/M\nBolivian/S\nbollard/SM\nbollix/GSD\nboll/MDSG\nBologna/M\nbologna/MS\nbolometer/MS\nbolo/MS\nboloney\'s\nBolshevik/MS\nBolshevism/MS\nBolshevistic/M\nBolshevist/MS\nBolshoi/M\nbolsterer/M\nbolster/SRDG\nbolted/U\nbolter/M\nbolt/MDRGS\nBolton/M\nbolts/U\nBoltzmann/M\nbolus/SM\nbombardier/MS\nbombard/LDSG\nbombardment/SM\nbombastic\nbombastically\nbombast/RMS\nBombay/M\nbomber/M\nbombproof\nbomb/SGZDRJ\nbombshell/SM\nBo/MRZ\nbona\nbonanza/MS\nBonaparte/M\nBonaventure/M\nbonbon/SM\nbondage/SM\nbonder/M\nbondholder/SM\nBondie/M\nbond/JMDRSGZ\nBond/M\nbondman/M\nbondmen\nBondon/M\nbonds/A\nbondsman/M\nbondsmen\nbondwoman/M\nbondwomen\nBondy/M\nboned/U\nbonehead/SDM\nboneless\nBone/M\nbone/MZDRSG\nboner/M\nbonfire/MS\nbong/GDMS\nbongo/MS\nBonham/M\nbonhomie/MS\nBoniface/M\nboniness/MS\nBonita/M\nbonito/MS\nbonjour\nbonkers\nBonnee/M\nBonner/M\nbonneted/U\nbonnet/SGMD\nBonneville/M\nBonnibelle/M\nbonnie\nBonnie/M\nBonni/M\nBonn/RM\nBonny/M\nbonny/RT\nbonsai/SM\nBontempo/M\nbonus/SM\nbony/RTP\nbonzes\nboob/DMSG\nbooby/SM\nboodle/GMSD\nboogeyman\'s\nboogieing\nboogie/SD\nboo/GSDH\nboohoo/GDS\nbookbinder/M\nbookbindery/SM\nbookbinding/M\nbookbind/JRGZ\nbookcase/MS\nbooked/U\nbookend/SGD\nBooker/M\nbook/GZDRMJSB\nbookie/SM\nbooking/M\nbookishness/M\nbookish/PY\nbookkeeper/M\nbookkeep/GZJR\nbookkeeping/M\nbooklet/MS\nbookmaker/MS\nbookmaking/MS\nbookmark/MDGS\nbookmobile/MS\nbookplate/SM\nbookseller/SM\nbookshelf/M\nbookshelves\nbookshop/MS\nbookstall/MS\nbookstore/SM\nbookwork/M\nbookworm/MS\nBoolean\nboolean/S\nBoole/M\nboom/DRGJS\nboomerang/MDSG\nboomer/M\nboomtown/S\nboondocks\nboondoggle/DRSGZ\nboondoggler/M\nBoone/M\nBoonie/M\nboonies\nboon/MS\nBoony/M\nboorishness/SM\nboorish/PY\nboor/MS\nboosterism\nbooster/M\nboost/SGZMRD\nboot/AGDS\nbootblack/MS\nbootee/MS\nBoote/M\nBo�tes\nBoothe/M\nbooth/M\nBooth/M\nbooths\nbootie\'s\nbootlaces\nbootlegged/M\nbootlegger/SM\nbootlegging/M\nbootleg/S\nBootle/M\nbootless\nBoot/M\nbootprints\nboot\'s\nbootstrapped\nbootstrapping\nbootstrap/SM\nbooty/SM\nbooze/DSRGMZ\nboozer/M\nboozy/TR\nbopped\nbopping\nbop/S\nborate/MSD\nborax/MS\nBordeaux/M\nbordello/MS\nBorden/M\nborderer/M\nborder/JRDMGS\nborderland/SM\nborderline/MS\nBordie/M\nBord/MN\nBordon/M\nBordy/M\nBorealis/M\nBoreas/M\nboredom/MS\nboreholes\nborer/M\nbore/ZGJDRS\nBorges\nBorgia/M\nBorg/M\nboric\nboring/YMP\nBoris\nBork/M\nborn/AIU\nBorneo/M\nborne/U\nBorn/M\nBorodin/M\nboron/SM\nborosilicate/M\nborough/M\nboroughs\nBorroughs/M\nborrower/M\nborrowing/M\nborrow/JZRDGBS\nborscht/SM\nborstal/MS\nBoru/M\nborzoi/MS\nBosch/M\nBose/M\nbosh/MS\nBosnia/M\nBosnian/S\nbosom\'s\nbosom/SGUD\nbosomy/RT\nboson/SM\nBosporus/M\nboss/DSRMG\nbossily\nbossiness/MS\nbossism/MS\nbossy/PTSR\nBostitch/M\nBostonian/SM\nBoston/MS\nbosun\'s\nBoswell/MS\nbotanical/SY\nbotanic/S\nbotanist/SM\nbotany/SM\nbotcher/M\nbotch/SRDGZ\nbotfly/M\nbother/DG\nbothersome\nbothy/M\nboth/ZR\nbot/S\nBotswana/M\nBotticelli/M\nbottle/GMZSRD\nbottleneck/GSDM\nbottler/M\nbottomlessness/M\nbottomless/YP\nbottommost\nbottom/SMRDG\nbotulin/M\nbotulinus/M\nbotulism/SM\nBoucher/M\nboudoir/MS\nbouffant/S\nbougainvillea/SM\nbough/MD\nboughs\nbought/N\nbouillabaisse/MS\nbouillon/MS\nboulder/GMDS\nBoulder/M\nboulevard/MS\nbouncer/M\nbounce/SRDGZ\nbouncily\nbouncing/Y\nbouncy/TRP\nboundary/MS\nbound/AUDI\nboundedness/MU\nbounded/UP\nbounden\nbounder/AM\nbounders\nbounding\nboundlessness/SM\nboundless/YP\nbounds/IA\nbounteousness/MS\nbounteous/PY\nbountifulness/SM\nbountiful/PY\nbounty/SDM\nbouquet/SM\nBourbaki/M\nbourbon/SM\nBourbon/SM\nbourgeoisie/SM\nbourgeois/M\nBourke/M\nBourne/M\nBournemouth/M\nboutique/MS\nbout/MS\nboutonni�re/MS\nBouvier\nBovary/M\nbovine/YS\nBowditch/M\nbowdlerization/MS\nbowdlerize/GRSD\nbowed/U\nbowel/GMDS\nBowell/M\nBowen/M\nbower/DMG\nBowers\nBowery/M\nBowes\nbowie\nBowie/M\nbowing/M\nbowlder\'s\nbowlegged\nbowleg/SM\nbowler/M\nbowlful/S\nbowl/GZSMDR\nbowline/MS\nbowling/M\nbowman/M\nBowman/M\nbowmen\nbowser/M\nbowsprit/SM\nbows/R\nbowstring/GSMD\nbow/SZGNDR\nbowwow/DMGS\nboxcar/SM\nbox/DRSJZGM\nboxer/M\nboxful/M\nboxing/M\nboxlike\nboxtops\nboxwood/SM\nboxy/TPR\nBoyce/M\nBoycey/M\nBoycie/M\nboycotter/M\nboycott/RDGS\nBoyd/M\nBoyer/M\nboyfriend/MS\nboyhood/SM\nboyishness/MS\nboyish/PY\nBoyle/M\nBoy/MR\nboy/MRS\nboyscout\nboysenberry/SM\nbozo/SM\nbpi\nbps\nBR\nbrace/DSRJGM\nbraced/U\nbracelet/MS\nbracer/M\nbrachia\nbrachium/M\nbracken/SM\nbracketed/U\nbracketing/M\nbracket/SGMD\nbrackishness/SM\nbrackish/P\nbract/SM\nBradan/M\nbradawl/M\nBradbury/M\nBradburys\nbradded\nbradding\nBraddock/M\nBrade/M\nBraden/M\nBradford/M\nBradley/M\nBradly/M\nBrad/MYN\nBradney/M\nBradshaw/M\nbrad/SM\nBradstreet/M\nBrady/M\nbrae/SM\nbraggadocio/SM\nbraggart/SM\nbragged\nbragger/MS\nbraggest\nbragging\nBragg/M\nbrag/S\nBrahe/M\nBrahma/MS\nBrahmanism/MS\nBrahman/SM\nBrahmaputra/M\nBrahmin\'s\nBrahms\nbraider/M\nbraiding/M\nbraid/RDSJG\nbraille/DSG\nBraille/GDSM\nBrainard/SM\nbraincell/S\nbrainchild/M\nbrainchildren\nbrain/GSDM\nbraininess/MS\nbrainlessness/M\nbrainless/YP\nBrain/M\nbrainpower/M\nbrainstorm/DRMGJS\nbrainstorming/M\nbrainteaser/S\nbrainteasing\nbrainwasher/M\nbrainwashing/M\nbrainwash/JGRSD\nbrainwave/S\nbrainy/RPT\nbraise/SDG\nbrake/DSGM\nbrakeman/M\nbrakemen/M\nbramble/DSGM\nbrambling/M\nbrambly/RT\nBram/M\nBrampton/M\nbra/MS\nBrana/M\nbranched/U\nbranching/M\nbranchlike\nBranch/M\nbranch/MDSJG\nBranchville/M\nBrandais/M\nBrandea/M\nbranded/U\nBrandeis/M\nBrandel/M\nBrande/M\nBrandenburg/M\nBranden/M\nbrander/GDM\nBrander/M\nBrandice/M\nBrandie/M\nBrandi/M\nBrandise/M\nbrandish/GSD\nBrand/MRN\nBrando/M\nBrandon/M\nbrand/SMRDGZ\nBrandt/M\nBrandtr/M\nbrandy/GDSM\nBrandy/M\nBrandyn/M\nbrandywine\nBraniff/M\nBran/M\nbranned\nbranning\nBrannon/M\nbran/SM\nBrantley/M\nBrant/M\nBraque/M\nbrashness/MS\nbrash/PYSRT\nBrasilia\nbrasserie/SM\nbrass/GSDM\nbrassiere/MS\nbrassily\nbrassiness/SM\nbrassy/RSPT\nBratislava/M\nbrat/SM\nBrattain/M\nbratty/RT\nbratwurst/MS\nBraun/M\nbravadoes\nbravado/M\nbrave/DSRGYTP\nbraveness/MS\nbravery/MS\nbravest/M\nbravo/SDG\nbravura/SM\nbrawler/M\nbrawl/MRDSGZ\nbrawniness/SM\nbrawn/MS\nbrawny/TRP\nbrayer/M\nBray/M\nbray/SDRG\nbraze/GZDSR\nbrazenness/MS\nbrazen/PYDSG\nbrazer/M\nbrazier/SM\nBrazilian/MS\nBrazil/M\nBrazos/M\nBrazzaville/M\nbreacher/M\nbreach/MDRSGZ\nbreadbasket/SM\nbreadboard/SMDG\nbreadbox/S\nbreadcrumb/S\nbreadfruit/MS\nbreadline/MS\nbread/SMDHG\nbreadth/M\nbreadths\nbreadwinner/MS\nbreakables\nbreakable/U\nbreakage/MS\nbreakaway/MS\nbreakdown/MS\nbreaker/M\nbreakfaster/M\nbreakfast/RDMGZS\nbreakfront/S\nbreaking/M\nbreakneck\nbreakout/MS\nbreakpoint/SMDG\nbreak/SZRBG\nbreakthroughs\nbreakthrough/SM\nbreakup/SM\nbreakwater/SM\nbream/SDG\nBreanne/M\nBrear/M\nbreastbone/MS\nbreastfed\nbreastfeed/G\nbreasting/M\nbreast/MDSG\nbreastplate/SM\nbreaststroke/SM\nbreastwork/MS\nbreathable/U\nbreathalyser/S\nBreathalyzer/SM\nbreathe\nbreather/M\nbreathing/M\nbreathlessness/SM\nbreathless/PY\nbreaths\nbreathtaking/Y\nbreathy/TR\nbreath/ZBJMDRSG\nBrecht/M\nBreckenridge/M\nbred/DG\nbredes\nbreeching/M\nbreech/MDSG\nbreeder/I\nbreeder\'s\nbreeding/IM\nbreeds/I\nbreed/SZJRG\nBree/M\nBreena/M\nbreeze/GMSD\nbreezeway/SM\nbreezily\nbreeziness/SM\nbreezy/RPT\nBremen/M\nbremsstrahlung/M\nBrena/M\nBrenda/M\nBrendan/M\nBrenden/M\nBrendin/M\nBrendis/M\nBrendon/M\nBren/M\nBrenna/M\nBrennan/M\nBrennen/M\nBrenner/M\nBrenn/RNM\nBrent/M\nBrenton/M\nBresenham/M\nBrest/M\nbrethren\nBret/M\nBreton\nBrett/M\nbreve/SM\nbrevet/MS\nbrevetted\nbrevetting\nbreviary/SM\nbrevity/MS\nbrew/DRGZS\nbrewer/M\nBrewer/M\nbrewery/MS\nbrewing/M\nbrewpub/S\nBrew/RM\nBrewster/M\nBrezhnev/M\nBria/M\nBriana/M\nBrian/M\nBrianna/M\nBrianne/M\nBriano/M\nBriant/M\nbriar\'s\nbribe/GZDSR\nbriber/M\nbribery/MS\nBrice/M\nbrickbat/SM\nbrick/GRDSM\nbricklayer/MS\nbricklaying/SM\nbrickmason/S\nbrickwork/SM\nbrickyard/M\nbridal/S\nBridalveil/M\nbridegroom/MS\nBride/M\nbride/MS\nbridesmaid/MS\nBridewell/M\nbridgeable/U\nbridged/U\nbridgehead/MS\nBridgeport/M\nBridger/M\nBridges\nbridge/SDGM\nBridget/M\nBridgetown/M\nBridgette/M\nBridgett/M\nBridgewater/M\nbridgework/MS\nbridging/M\nBridgman/M\nBridie/M\nbridled/U\nbridle/SDGM\nbridleway/S\nbriefcase/SM\nbriefed/C\nbriefing/M\nbriefness/MS\nbriefs/C\nbrief/YRDJPGTS\nBrien/M\nBrier/M\nbrier/MS\nBrie/RSM\nBrietta/M\nbrigade/GDSM\nbrigadier/MS\nBrigadoon\nbrigandage/MS\nbrigand/MS\nbrigantine/MS\nBrigg/MS\nBrigham/M\nbrightener/M\nbrighten/RDZG\nbright/GXTPSYNR\nBright/M\nbrightness/SM\nBrighton/M\nBrigida/M\nBrigid/M\nBrigit/M\nBrigitta/M\nBrigitte/M\nBrig/M\nbrig/SM\nbrilliance/MS\nbrilliancy/MS\nbrilliantine/MS\nbrilliantness/M\nbrilliant/PSY\nBrillo\nBrillouin/M\nbrimful\nbrimless\nbrimmed\nbrimming\nbrim/SM\nbrimstone/MS\nBrina/M\nBrindisi/M\nbrindle/DSM\nbrine/GMDSR\nbriner/M\nBriney/M\nbringer/M\nbring/RGZS\nbrininess/MS\nBrinkley/M\nbrinkmanship/SM\nbrink/MS\nBrinna/M\nBrinn/M\nBriny/M\nbriny/PTSR\nbrioche/SM\nBrion/M\nbriquet\'s\nbriquette/MGSD\nBrisbane/M\nbrisket/SM\nbriskness/MS\nbrisk/YRDPGTS\nbristle/DSGM\nbristly/TR\nBristol/M\nbristol/S\nBritain/M\nBrita/M\nBritannia/M\nBritannic\nBritannica/M\nbritches\nBriticism/MS\nBritisher/M\nBritishly/M\nBritish/RYZ\nBrit/MS\nBritney/M\nBritni/M\nBriton/MS\nBritta/M\nBrittaney/M\nBrittani/M\nBrittan/M\nBrittany/MS\nBritte/M\nBritten/M\nBritteny/M\nbrittleness/MS\nbrittle/YTPDRSG\nBritt/MN\nBrittne/M\nBrittney/M\nBrittni/M\nBrnaba/M\nBrnaby/M\nBrno/M\nbroach/DRSG\nbroacher/M\nbroadband\nbroadcaster/M\nbroadcast/RSGZJ\nbroadcasts/A\nbroadcloth/M\nbroadcloths\nbroaden/JGRDZ\nbroadleaved\nbroadloom/SM\nbroadminded/P\nbroadness/S\nbroadsheet/MS\nbroadside/SDGM\nbroadsword/MS\nbroad/TXSYRNP\nBroadway/SM\nBrobdingnagian\nBrobdingnag/M\nbrocade/DSGM\nbroccoli/MS\nbrochette/SM\nbrochure/SM\nBrockie/M\nBrock/M\nBrocky/M\nBroddie/M\nBroddy/M\nBroderick/M\nBroderic/M\nBrodie/M\nBrod/M\nBrody/M\nbrogan/MS\nBroglie/M\nbrogue/MS\nbroiler/M\nbroil/RDSGZ\nbrokenhearted/Y\nbrokenness/MS\nbroken/YP\nbrokerage/MS\nbroker/DMG\nbroke/RGZ\nBrok/M\nbromide/MS\nbromidic\nbromine/MS\nbronchial\nbronchi/M\nbronchiolar\nbronchiole/MS\nbronchiolitis\nbronchitic/S\nbronchitis/MS\nbroncho\'s\nbronchus/M\nbroncobuster/SM\nbronco/SM\nbronc/S\nBron/M\nBronnie/M\nBronny/M\nBronson/M\nBronte\nbrontosaur/SM\nbrontosaurus/SM\nBronx/M\nbronzed/M\nbronze/SRDGM\nbronzing/M\nbrooch/MS\nbrooder/M\nbroodiness/M\nbrooding/Y\nbroodmare/SM\nbrood/SMRDGZ\nbroody/PTR\nBrookdale/M\nBrooke/M\nBrookfield/M\nBrookhaven/M\nbrooklet/MS\nBrooklyn/M\nBrookmont/M\nbrook/SGDM\nbrookside\nBrook/SM\nbroom/SMDG\nbroomstick/MS\nBros\nBrose/M\nbro/SH\nbros/S\nbrothel/MS\nbrother/DYMG\nbrotherhood/SM\nbrotherliness/MS\nbrotherly/P\nbroths\nbroth/ZMR\nbrougham/MS\nbrought\nbrouhaha/MS\nbrowbeat/NSG\nbrow/MS\nBrownell/M\nBrowne/M\nBrownian/M\nBrownie/MS\nbrownie/MTRS\nbrowning/M\nBrowning/M\nbrownish\nBrown/MG\nbrownness/MS\nbrownout/MS\nbrownstone/MS\nBrownsville/M\nbrown/YRDMSJGTP\nbrowse\nbrowser/M\nbrows/SRDGZ\nbrr\nBr/TMN\nBrubeck/M\nbrucellosis/M\nBruce/M\nBrucie/M\nBruckner/M\nBruegel/M\nBrueghel\'s\nbruin/MS\nbruised/U\nbruise/JGSRDZ\nbruiser/M\nBruis/M\nbruit/DSG\nBrumidi/M\nBrummel/M\nbrunch/MDSG\nBrunei/M\nBrunelleschi/M\nbrunet/S\nbrunette/SM\nBrunhilda/M\nBrunhilde/M\nBruno/M\nBrunswick/M\nbrunt/GSMD\nbrusher/M\nbrushfire/MS\nbrushlike\nbrush/MSRDG\nbrushoff/S\nbrushwood/SM\nbrushwork/MS\nbrushy/R\nbrusqueness/MS\nbrusque/PYTR\nBrussels\nbrutality/SM\nbrutalization/SM\nbrutalized/U\nbrutalizes/AU\nbrutalize/SDG\nbrutal/Y\nbrute/DSRGM\nbrutishness/SM\nbrutish/YP\nBrutus/M\nBruxelles/M\nBryana/M\nBryan/M\nBryant/M\nBryanty/M\nBryce/M\nBryna/M\nBryn/M\nBrynna/M\nBrynne/M\nBrynner/M\nBrynn/RM\nBryon/M\nBrzezinski/M\nB\'s\nBS\nBSA\nBSD\nBtu\nBTU\nBTW\nbu\nbubblegum/S\nbubbler/M\nbubble/RSDGM\nbubbly/TRS\nBuber/M\nbub/MS\nbuboes\nbubo/M\nbubonic\nbuccaneer/GMDS\nBuchanan/M\nBucharest/M\nBuchenwald/M\nBuchwald/M\nbuckaroo/SM\nbuckboard/SM\nbucker/M\nbucketful/MS\nbucket/SGMD\nbuckeye/SM\nbuck/GSDRM\nbuckhorn/M\nBuckie/M\nBuckingham/M\nbuckled/U\nbuckler/MDG\nbuckle/RSDGMZ\nbuckles/U\nBuckley/M\nbuckling\'s\nbuckling/U\nBuck/M\nBuckner/M\nbuckram/GSDM\nbucksaw/SM\nbuckshot/MS\nbuckskin/SM\nbuckteeth\nbucktooth/DM\nbuckwheat/SM\nBucky/M\nbucolically\nbucolic/S\nBudapest/M\nbudded\nBuddha/MS\nBuddhism/SM\nBuddhist/SM\nBuddie/M\nbudding/S\nBudd/M\nbuddy/GSDM\nBuddy/M\nbudge/GDS\nbudgerigar/MS\nbudgetary\nbudgeter/M\nbudget/GMRDZS\nbudgie/MS\nbudging/U\nBud/M\nbud/MS\nBudweiser/MS\nBuehring/M\nBuena/M\nbuffaloes\nBuffalo/M\nbuffalo/MDG\nbuff/ASGD\nbuffered/U\nbufferer/M\nbuffer/RDMSGZ\nbuffet/GMDJS\nbufflehead/M\nbuffoonery/MS\nbuffoonish\nbuffoon/SM\nbuff\'s\nBuffy/M\nBuford/M\nbugaboo/SM\nBugatti/M\nbugbear/SM\nbug/CS\nbugeyed\nbugged/C\nbuggered\nbuggering\nbugger/SCM!\nbuggery/M\nbugging/C\nbuggy/RSMT\nbugle/GMDSRZ\nbugler/M\nbug\'s\nBuick/M\nbuilder/SM\nbuilding/SM\nbuild/SAG\nbuildup/MS\nbuilt/AUI\nBuiron/M\nBujumbura/M\nBukhara/M\nBukharin/M\nBulawayo/M\nBulba/M\nbulb/DMGS\nbulblet\nbulbous\nBulfinch/M\nBulganin/M\nBulgaria/M\nBulgarian/S\nbulge/DSGM\nbulgy/RT\nbulimarexia/S\nbulimia/MS\nbulimic/S\nbulk/GDRMS\nbulkhead/SDM\nbulkiness/SM\nbulky/RPT\nbulldogged\nbulldogger\nbulldogging\nbulldog/SM\nbulldoze/GRSDZ\nbulldozer/M\nbullet/GMDS\nbulletin/SGMD\nbulletproof/SGD\nbullfighter/M\nbullfighting/M\nbullfight/SJGZMR\nbullfinch/MS\nbullfrog/SM\nbullhead/DMS\nbullheadedness/SM\nbullheaded/YP\nbullhide\nbullhorn/SM\nbullied/M\nbullion/SM\nbullishness/SM\nbullish/PY\nbull/MDGS\nBullock/M\nbullock/MS\nbullpen/MS\nbullring/SM\nbullseye\nbullshit/MS!\nbullshitted/!\nbullshitter/S!\nbullshitting/!\nbullwhackers\nBullwinkle/M\nbullyboy/MS\nbullying/M\nbully/TRSDGM\nbulrush/SM\nBultmann/M\nbulwark/GMDS\nbumblebee/MS\nbumble/JGZRSD\nbumbler/M\nbumbling/Y\nBumbry/M\nbummed/M\nbummer/MS\nbummest\nbumming/M\nbumper/DMG\nbump/GZDRS\nbumpiness/MS\nbumpkin/MS\nBumppo/M\nbumptiousness/SM\nbumptious/PY\nbumpy/PRT\nbum/SM\nBunche/M\nbunch/MSDG\nbunchy/RT\nbuncombe\'s\nbunco\'s\nBundestag/M\nbundled/U\nbundle/GMRSD\nbundler/M\nBundy/M\nbungalow/MS\nbungee/SM\nbung/GDMS\nbunghole/MS\nbungle/GZRSD\nbungler/M\nbungling/Y\nBunin/M\nbunion/SM\nbunk/CSGDR\nBunker/M\nbunker\'s/C\nbunker/SDMG\nbunkhouse/SM\nbunkmate/MS\nbunko\'s\nbunk\'s\nbunkum/SM\nBunnie/M\nBunni/M\nBunny/M\nbunny/SM\nBunsen/SM\nbun/SM\nbunt/GJZDRS\nbunting/M\nBu�uel/M\nBunyan/M\nbuoyancy/MS\nbuoyant/Y\nbuoy/SMDG\nBurbank/M\nburbler/M\nburble/RSDG\nburbs\nBurch/M\nburden\'s\nburdensomeness/M\nburdensome/PY\nburden/UGDS\nburdock/SM\nbureaucracy/MS\nbureaucratically\nbureaucratic/U\nbureaucratization/MS\nbureaucratize/SDG\nbureaucrat/MS\nbureau/MS\nburgeon/GDS\nburger/M\nBurger/M\nBurgess/M\nburgess/MS\nburgher/M\nburgh/MRZ\nburghs\nburglarize/GDS\nburglarproof/DGS\nburglar/SM\nburglary/MS\nburgle/SDG\nburgomaster/SM\nBurgoyne/M\nBurg/RM\nburg/SZRM\nBurgundian/S\nBurgundy/MS\nburgundy/S\nburial/ASM\nburied/U\nburier/M\nBurke/M\nBurk/SM\nburlap/MS\nburler/M\nburlesquer/M\nburlesque/SRDMYG\nburley/M\nBurlie/M\nburliness/SM\nBurlingame/M\nBurlington/M\nBurl/M\nburl/SMDRG\nburly/PRT\nBurma/M\nBurmese\nbur/MYS\nburnable/S\nBurnaby/M\nBurnard/M\nburned/U\nBurne/MS\nburner/M\nBurnett/M\nburn/GZSDRBJ\nburning/Y\nburnisher/M\nburnish/GDRSZ\nburnoose/MS\nburnout/MS\nBurns\nBurnside/MS\nburnt/YP\nburp/SGMD\nburr/GSDRM\nBurris/M\nburrito/S\nBurr/M\nburro/SM\nBurroughs/M\nburrower/M\nburrow/GRDMZS\nbursae\nbursa/M\nBursa/M\nbursar/MS\nbursary/MS\nbursitis/MS\nburster/M\nburst/SRG\nBurtie/M\nBurt/M\nBurton/M\nBurty/M\nBurundian/S\nBurundi/M\nbury/ASDG\nbusboy/MS\nbusby/SM\nBusch/M\nbuses/A\nbusgirl/S\nbus/GMDSJ\nbushel/MDJSG\nBushido/M\nbushiness/MS\nbushing/M\nbush/JMDSRG\nbushland\nBush/M\nbushman/M\nbushmaster/SM\nbushmen\nBushnell/M\nbushwhacker/M\nbushwhacking/M\nbushwhack/RDGSZ\nbushy/PTR\nbusily\nbusinesslike\nbusinessman/M\nbusinessmen\nbusiness/MS\nbusinesspeople\nbusinessperson/S\nbusinesswoman/M\nbusinesswomen\nbusker/M\nbusk/GRM\nbuskin/SM\nbus\'s/A\nbuss/D\nbustard/MS\nbuster/M\nbustle/GSD\nbustling/Y\nbust/MSDRGZ\nbusty/RT\nbusybody/MS\nbusy/DSRPTG\nbusyness/MS\nbusywork/SM\nbut/ACS\nbutane/MS\nbutcherer/M\nbutcher/MDRYG\nbutchery/MS\nButch/M\nbutch/RSZ\nbutene/M\nButler/M\nbutler/SDMG\nbutted/A\nbutte/MS\nbutterball/MS\nbuttercup/SM\nbuttered/U\nbutterfat/MS\nButterfield/M\nbutterfingered\nbutterfingers/M\nbutterfly/MGSD\nbuttermilk/MS\nbutternut/MS\nbutter/RDMGZ\nbutterscotch/SM\nbuttery/TRS\nbutting/M\nbuttock/SGMD\nbuttoner/M\nbuttonhole/GMRSD\nbuttonholer/M\nbutton\'s\nbutton/SUDG\nbuttonweed\nbuttonwood/SM\nbuttress/MSDG\nbutt/SGZMDR\nbutyl/M\nbutyrate/M\nbuxomness/M\nbuxom/TPYR\nBuxtehude/M\nbuyback/S\nbuyer/M\nbuyout/S\nbuy/ZGRS\nbuzzard/MS\nbuzz/DSRMGZ\nbuzzer/M\nbuzzword/SM\nbuzzy\nbx\nbxs\nbyelaw\'s\nByelorussia\'s\nbye/MZS\nByers/M\nbygone/S\nbylaw/SM\nbyliner/M\nbyline/RSDGM\nBYOB\nbypass/GSDM\nbypath/M\nbypaths\nbyplay/S\nbyproduct/SM\nByram/M\nByran/M\nByrann/M\nByrd/M\nbyre/SM\nByrle/M\nByrne/M\nbyroad/MS\nByrom/M\nByronic\nByronism/M\nByron/M\nbystander/SM\nbyte/SM\nbyway/SM\nbyword/SM\nbyzantine\nByzantine/S\nByzantium/M\nby/ZR\nC\nca\nCA\ncabala/MS\ncaballed\ncaballero/SM\ncaballing\ncabal/SM\ncabana/MS\ncabaret/SM\ncabbage/MGSD\ncabbed\ncabbing\ncabby\'s\ncabdriver/SM\ncaber/M\nCabernet/M\ncabinetmaker/SM\ncabinetmaking/MS\ncabinet/MS\ncabinetry/SM\ncabinetwork/MS\ncabin/GDMS\ncablecast/SG\ncable/GMDS\ncablegram/SM\ncabochon/MS\ncaboodle/SM\ncaboose/MS\nCabot/M\nCabrera/M\nCabrini/M\ncabriolet/MS\ncab/SMR\ncabstand/MS\ncacao/SM\ncacciatore\ncache/DSRGM\ncachepot/MS\ncachet/MDGS\nCacilia/M\nCacilie/M\ncackler/M\ncackle/RSDGZ\ncackly\nCACM\ncacophonist\ncacophonous\ncacophony/SM\ncacti\ncactus/M\nCAD\ncadaverous/Y\ncadaver/SM\ncaddishness/SM\ncaddish/PY\nCaddric/M\ncaddy/GSDM\ncadence/CSM\ncadenced\ncadencing\ncadent/C\ncadenza/MS\ncadet/SM\nCadette/S\ncadge/DSRGZ\ncadger/M\nCadillac/MS\nCadiz/M\nCad/M\ncadmium/MS\ncadre/SM\ncad/SM\ncaducei\ncaduceus/M\nCaedmon/M\nCaesar/MS\ncaesura/SM\ncaf�/MS\ncafeteria/SM\ncaffeine/SM\ncaftan/SM\ncaged/U\nCage/M\ncage/MZGDRS\ncager/M\ncagey/P\ncagier\ncagiest\ncagily\ncaginess/MS\nCagney/M\nCahokia/M\ncahoot/MS\nCahra/M\nCAI\nCaiaphas/M\ncaiman\'s\nCaine/M\nCain/MS\nCairistiona/M\ncairn/SDM\nCairo/M\ncaisson/SM\ncaitiff/MS\nCaitlin/M\nCaitrin/M\ncajole/LGZRSD\ncajolement/MS\ncajoler/M\ncajolery/SM\nCajun/MS\ncake/MGDS\ncakewalk/SMDG\ncalabash/SM\ncalaboose/MS\nCalais/M\ncalamari/S\ncalamine/GSDM\ncalamitousness/M\ncalamitous/YP\ncalamity/MS\ncal/C\ncalcareousness/M\ncalcareous/PY\ncalciferous\ncalcification/M\ncalcify/XGNSD\ncalcimine/GMSD\ncalcine/SDG\ncalcite/SM\ncalcium/SM\nCalcomp/M\nCalComp/M\nCALCOMP/M\ncalculability/IM\ncalculable/IP\ncalculate/AXNGDS\ncalculated/PY\ncalculatingly\ncalculating/U\ncalculation/AM\ncalculative\ncalculator/SM\ncalculi\ncalculus/M\nCalcutta/M\ncaldera/SM\nCalder/M\nCalderon/M\ncaldron\'s\nCaldwell/M\nCaleb/M\nCaledonia/M\nCale/M\ncalendar/MDGS\ncalender/MDGS\ncalf/M\ncalfskin/SM\nCalgary/M\nCalhoun/M\nCaliban/M\ncaliber/SM\ncalibrated/U\ncalibrater\'s\ncalibrate/XNGSD\ncalibrating/A\ncalibration/M\ncalibrator/MS\ncalicoes\ncalico/M\nCalida/M\nCalif/M\nCalifornia/M\nCalifornian/MS\ncalifornium/SM\ncalif\'s\nCaligula/M\nCali/M\ncaliper/SDMG\ncaliphate/SM\ncaliph/M\ncaliphs\ncalisthenic/S\ncalisthenics/M\nCallaghan/M\ncall/AGRDBS\nCallahan/M\ncalla/MS\nCalla/MS\nCallao/M\ncallback/S\nCallean/M\ncalled/U\ncallee/M\ncaller/MS\nCalley/M\nCallida/M\nCallie/M\ncalligrapher/M\ncalligraphic\ncalligraphist/MS\ncalligraph/RZ\ncalligraphy/MS\nCalli/M\ncalling/SM\nCalliope/M\ncalliope/SM\ncallisthenics\'s\nCallisto/M\ncallosity/MS\ncallousness/SM\ncallous/PGSDY\ncallowness/MS\ncallow/RTSP\ncallus/SDMG\nCally/M\ncalming/Y\ncalmness/MS\ncalm/PGTYDRS\nCal/MY\nCaloocan/M\ncaloric/S\ncalorie/SM\ncalorific\ncalorimeter/MS\ncalorimetric\ncalorimetry/M\nCaltech/M\nCalumet/M\ncalumet/MS\ncalumniate/NGSDX\ncalumniation/M\ncalumniator/SM\ncalumnious\ncalumny/MS\ncalvary/M\nCalvary/M\ncalve/GDS\nCalvert/M\ncalves/M\nCalvinism/MS\nCalvinistic\nCalvinist/MS\nCalvin/M\nCalv/M\ncalyces\'s\nCalypso/M\ncalypso/SM\ncalyx/MS\nCa/M\nCAM\nCamacho/M\nCamala/M\ncamaraderie/SM\ncamber/DMSG\ncambial\ncambium/SM\nCambodia/M\nCambodian/S\nCambrian/S\ncambric/MS\nCambridge/M\ncamcorder/S\nCamden/M\ncamelhair\'s\nCamella/M\nCamellia/M\ncamellia/MS\nCamel/M\nCamelopardalis/M\nCamelot/M\ncamel/SM\nCamembert/MS\ncameo/GSDM\ncamerae\ncameraman/M\ncameramen\ncamera/MS\ncamerawoman\ncamerawomen\nCameron/M\nCameroonian/S\nCameroon/SM\ncame/N\nCamey/M\nCamila/M\nCamile/M\nCamilla/M\nCamille/M\nCami/M\nCamino/M\ncamion/M\ncamisole/MS\nCam/M\ncammed\nCammie/M\nCammi/M\ncam/MS\nCammy/M\nCamoens/M\ncamomile\'s\ncamouflage/DRSGZM\ncamouflager/M\ncampaigner/M\ncampaign/ZMRDSG\ncampanile/SM\ncampanological\ncampanologist/SM\ncampanology/MS\nCampbell/M\nCampbellsport/M\ncamper/SM\ncampesinos\ncampest\ncampfire/SM\ncampground/MS\ncamphor/MS\nCampinas/M\ncamping/S\nCampos\ncamp\'s\ncamp/SCGD\ncampsite/MS\ncampus/GSDM\ncampy/RT\nCamry/M\ncamshaft/SM\nCamus/M\nCanaanite/SM\nCanaan/M\nCanada/M\nCanadianism/SM\nCanadian/S\nCanad/M\nCanaletto/M\ncanalization/MS\ncanalize/GSD\ncanal/SGMD\ncanap�/S\ncanard/MS\nCanaries\ncanary/SM\ncanasta/SM\nCanaveral/M\nCanberra/M\ncancan/SM\ncancelate/D\ncanceled/U\ncanceler/M\ncancellation/MS\ncancel/RDZGS\ncancer/MS\nCancer/MS\ncancerous/Y\nCancun/M\nCandace/M\ncandelabra/S\ncandelabrum/M\nCandice/M\ncandidacy/MS\nCandida/M\ncandidate/SM\ncandidature/S\nCandide/M\ncandidly/U\ncandidness/SM\ncandid/TRYPS\nCandie/M\nCandi/SM\ncandle/GMZRSD\ncandlelight/SMR\ncandlelit\ncandlepower/SM\ncandler/M\ncandlestick/SM\nCandlewick/M\ncandlewick/MS\ncandor/MS\nCandra/M\ncandy/GSDM\nCandy/M\ncanebrake/SM\ncaner/M\ncane/SM\ncanine/S\ncaning/M\nCanis/M\ncanister/SGMD\ncankerous\ncanker/SDMG\nCan/M\ncan/MDRSZGJ\ncannabis/MS\ncanned\ncannelloni\ncanner/SM\ncannery/MS\nCannes\ncannibalism/MS\ncannibalistic\ncannibalization/SM\ncannibalize/GSD\ncannibal/SM\ncannily/U\ncanninesses\ncanniness/UM\ncanning/M\ncannister/SM\ncannonade/SDGM\ncannonball/SGDM\nCannon/M\ncannon/SDMG\ncannot\ncanny/RPUT\ncanoe/DSGM\ncanoeist/SM\nCanoga/M\ncanonic\ncanonicalization\ncanonicalize/GSD\ncanonical/SY\ncanonist/M\ncanonization/MS\ncanonized/U\ncanonize/SDG\ncanon/SM\nCanopus/M\ncanopy/GSDM\ncanst\ncan\'t\ncantabile/S\nCantabrigian\ncantaloupe/MS\ncantankerousness/SM\ncantankerous/PY\ncantata/SM\ncant/CZGSRD\ncanted/IA\ncanteen/MS\nCanterbury/M\ncanter/CM\ncantered\ncantering\ncanticle/SM\ncantilever/SDMG\ncanto/MS\ncantonal\nCantonese/M\nCanton/M\ncantonment/SM\ncanton/MGSLD\nCantor/M\ncantor/MS\nCantrell/M\ncant\'s\ncants/A\nCantu/M\nCanute/M\ncanvasback/MS\ncanvas/RSDMG\ncanvasser/M\ncanvass/RSDZG\ncanyon/MS\nCAP\ncapability/ISM\ncapableness/IM\ncapable/PI\ncapabler\ncapablest\ncapably/I\ncapaciousness/MS\ncapacious/PY\ncapacitance/SM\ncapacitate/V\ncapacitive/Y\ncapacitor/MS\ncapacity/IMS\ncaparison/SDMG\nCapek/M\nCapella/M\ncaper/GDM\ncapeskin/SM\ncape/SM\nCapet/M\nCapetown/M\nCaph/M\ncapillarity/MS\ncapillary/S\nCapistrano/M\ncapitalism/SM\ncapitalistic\ncapitalistically\ncapitalist/SM\ncapitalization/SMA\ncapitalized/AU\ncapitalizer/M\ncapitalize/RSDGZ\ncapitalizes/A\ncapital/SMY\ncapita/M\nCapitan/M\ncapitation/CSM\nCapitoline/M\nCapitol/MS\ncapitol/SM\ncapitulate/AXNGSD\ncapitulation/MA\ncaplet/S\ncap/MDRSZB\nCapone/M\ncapon/SM\ncapo/SM\nCapote/M\ncapped/UA\ncapping/M\ncappuccino/MS\nCappy/M\nCapra/M\nCaprice/M\ncaprice/MS\ncapriciousness/MS\ncapricious/PY\nCapricorn/MS\nCapri/M\ncaps/AU\ncapsicum/MS\ncapsize/SDG\ncapstan/MS\ncapstone/MS\ncapsular\ncapsule/MGSD\ncapsulize/GSD\ncaptaincy/MS\ncaptain/SGDM\ncaption/GSDRM\ncaptiousness/SM\ncaptious/PY\ncaptivate/XGNSD\ncaptivation/M\ncaptivator/SM\ncaptive/MS\ncaptivity/SM\nCapt/M\ncaptor/SM\ncapture/AGSD\ncapturer/MS\ncapt/V\nCapulet/M\nCaputo/M\nCaracalla/M\nCaracas/M\ncaracul\'s\ncarafe/SM\nCaralie/M\nCara/M\ncaramelize/SDG\ncaramel/MS\ncarapace/SM\ncarapaxes\ncarat/SM\nCaravaggio/M\ncaravan/DRMGS\ncaravaner/M\ncaravansary/MS\ncaravanserai\'s\ncaravel/MS\ncaraway/MS\ncarbide/MS\ncarbine/MS\ncarbohydrate/MS\ncarbolic\nCarboloy/M\ncarbonaceous\ncarbonate/SDXMNG\ncarbonation/M\nCarbondale/M\nCarbone/MS\ncarbonic\ncarboniferous\nCarboniferous\ncarbonization/SAM\ncarbonizer/AS\ncarbonizer\'s\ncarbonizes/A\ncarbonize/ZGRSD\ncarbon/MS\ncarbonyl/M\ncarborundum\nCarborundum/MS\ncarboy/MS\ncarbuncle/SDM\ncarbuncular\ncarburetor/MS\ncarburetter/S\ncarburettor/SM\ncarcase/MS\ncarcass/SM\nCarce/M\ncarcinogenic\ncarcinogenicity/MS\ncarcinogen/SM\ncarcinoma/SM\ncardamom/MS\ncardboard/MS\ncard/EDRSG\nCardenas/M\ncarder/MS\ncarder\'s/E\ncardholders\ncardiac/S\nCardiff/M\ncardigan/SM\ncardinality/SM\ncardinal/SYM\ncarding/M\nCardin/M\nCardiod/M\ncardiogram/MS\ncardiograph/M\ncardiographs\ncardioid/M\ncardiologist/SM\ncardiology/MS\ncardiomegaly/M\ncardiopulmonary\ncardiovascular\ncard\'s\ncardsharp/ZSMR\nCARE\ncared/U\ncareen/DSG\ncareerism/M\ncareerist/MS\ncareer/SGRDM\ncarefree\ncarefuller\ncarefullest\ncarefulness/MS\ncareful/PY\ncaregiver/S\ncarelessness/MS\ncareless/YP\nCare/M\nCarena/M\nCaren/M\ncarer/M\ncare/S\nCaresa/M\nCaressa/M\nCaresse/M\ncaresser/M\ncaressing/Y\ncaressive/Y\ncaress/SRDMVG\ncaretaker/SM\ncaret/SM\ncareworn\nCarey/M\ncarfare/MS\ncargoes\ncargo/M\ncarhopped\ncarhopping\ncarhop/SM\nCaria/M\nCaribbean/S\nCarib/M\ncaribou/MS\ncaricature/GMSD\ncaricaturisation\ncaricaturist/MS\ncaricaturization\nCarie/M\ncaries/M\ncarillonned\ncarillonning\ncarillon/SM\nCaril/M\nCarilyn/M\nCari/M\nCarina/M\nCarine/M\ncaring/U\nCarin/M\nCariotta/M\ncarious\nCarissa/M\nCarita/M\nCaritta/M\ncarjack/GSJDRZ\nCarla/M\nCarlee/M\nCarleen/M\nCarlene/M\nCarlen/M\nCarletonian/M\nCarleton/M\nCarley/M\nCarlie/M\nCarlina/M\nCarline/M\nCarling/M\nCarlin/M\nCarlita/M\nCarl/MNG\ncarload/MSG\nCarlo/SM\nCarlota/M\nCarlotta/M\nCarlsbad/M\nCarlson/M\nCarlton/M\nCarlye/M\nCarlyle/M\nCarly/M\nCarlyn/M\nCarlynne/M\nCarlynn/M\nCarma/M\nCarmela/M\nCarmelia/M\nCarmelina/M\nCarmelita/M\nCarmella/M\nCarmelle/M\nCarmel/M\nCarmelo/M\nCarmencita/M\nCarmen/M\nCarmichael/M\nCarmina/M\nCarmine/M\ncarmine/MS\nCarmita/M\nCar/MNY\nCarmon/M\ncarnage/MS\ncarnality/SM\ncarnal/Y\nCarnap/M\ncarnation/IMS\nCarnegie/M\ncarnelian/SM\nCarney/M\ncarney\'s\ncarnival/MS\ncarnivore/SM\ncarnivorousness/MS\ncarnivorous/YP\nCarnot/M\nCarny/M\ncarny/SDG\ncarob/SM\nCarola/M\nCarolan/M\nCarolann/M\nCarolee/M\nCarole/M\ncaroler/M\nCarolina/MS\nCaroline/M\nCarolingian\nCarolinian/S\nCarolin/M\nCaroljean/M\nCarol/M\ncarol/SGZMRD\nCarolus/M\nCarolyne/M\nCarolyn/M\nCarolynn/M\nCaro/M\ncarom/GSMD\nCaron/M\ncarotene/MS\ncarotid/MS\ncarousal/MS\ncarousel/MS\ncarouser/M\ncarouse/SRDZG\ncarpal/SM\nCarpathian/MS\ncarpel/SM\ncarpenter/DSMG\ncarpentering/M\nCarpenter/M\ncarpentry/MS\ncarper/M\ncarpetbagged\ncarpetbagger/MS\ncarpetbagging\ncarpetbag/MS\ncarpeting/M\ncarpet/MDJGS\ncarpi/M\ncarping/Y\ncarp/MDRSGZ\ncarpool/DGS\ncarport/MS\ncarpus/M\ncarrageen/M\nCarree/M\ncarrel/SM\ncarriage/SM\ncarriageway/SM\nCarrie/M\ncarrier/M\nCarrier/M\nCarrillo/M\nCarri/M\ncarrion/SM\nCarrissa/M\nCarr/M\nCarroll/M\nCarrol/M\ncarrot/MS\ncarroty/RT\ncarrousel\'s\ncarryall/MS\nCarry/MR\ncarryout/S\ncarryover/S\ncarry/RSDZG\ncarsickness/SM\ncarsick/P\nCarson/M\ncartage/MS\ncartel/SM\ncarte/M\ncarter/M\nCarter/M\nCartesian\nCarthage/M\nCarthaginian/S\ncarthorse/MS\nCartier/M\ncartilage/MS\ncartilaginous\ncartload/MS\ncart/MDRGSZ\nCart/MR\ncartographer/MS\ncartographic\ncartography/MS\ncarton/GSDM\ncartoon/GSDM\ncartoonist/MS\ncartridge/SM\ncartwheel/MRDGS\nCartwright/M\nCarty/RM\nCaruso/M\ncarve/DSRJGZ\ncarven\ncarver/M\nCarver/M\ncarving/M\ncaryatid/MS\nCaryl/M\nCary/M\nCaryn/M\ncar/ZGSMDR\ncasaba/SM\nCasablanca/M\nCasals/M\nCasandra/M\nCasanova/SM\nCasar/M\ncasbah/M\ncascade/MSDG\nCascades/M\ncascara/MS\ncasebook/SM\ncase/DSJMGL\ncased/U\ncaseharden/SGD\ncasein/SM\ncaseload/MS\nCase/M\ncasement/SM\ncaseworker/M\ncasework/ZMRS\nCasey/M\ncashbook/SM\ncashew/MS\ncash/GZMDSR\ncashier/SDMG\ncashless\nCash/M\ncashmere/MS\nCasie/M\nCasi/M\ncasing/M\ncasino/MS\ncasket/SGMD\ncask/GSDM\nCaspar/M\nCasper/M\nCaspian\nCass\nCassandra/SM\nCassandre/M\nCassandry/M\nCassatt/M\nCassaundra/M\ncassava/MS\ncasserole/MGSD\ncassette/SM\nCassey/M\ncassia/MS\nCassie/M\nCassi/M\ncassino\'s\nCassiopeia/M\nCassite/M\nCassius/M\ncassock/SDM\nCassondra/M\ncassowary/SM\nCassy/M\nCastaneda/M\ncastanet/SM\ncastaway/SM\ncastellated\ncaste/MHS\ncaster/M\ncast/GZSJMDR\ncastigate/XGNSD\ncastigation/M\ncastigator/SM\nCastile\'s\nCastillo/M\ncasting/M\ncastle/GMSD\ncastoff/S\nCastor/M\ncastor\'s\ncastrate/DSNGX\ncastration/M\nCastries/M\nCastro/M\ncasts/A\ncasualness/SM\ncasual/SYP\ncasualty/SM\ncasuistic\ncasuist/MS\ncasuistry/SM\ncataclysmal\ncataclysmic\ncataclysm/MS\ncatacomb/MS\ncatafalque/SM\nCatalan/MS\ncatalepsy/MS\ncataleptic/S\nCatalina/M\ncataloger/M\ncatalog/SDRMZG\nCatalonia/M\ncatalpa/SM\ncatalysis/M\ncatalyst/SM\ncatalytic\ncatalytically\ncatalyze/DSG\ncatamaran/MS\ncatapult/MGSD\ncataract/MS\nCatarina/M\ncatarrh/M\ncatarrhs\ncatastrophe/SM\ncatastrophic\ncatastrophically\ncatatonia/MS\ncatatonic/S\nCatawba/M\ncatbird/MS\ncatboat/SM\ncatcall/SMDG\ncatchable/U\ncatchall/MS\ncatch/BRSJLGZ\ncatcher/M\ncatchment/SM\ncatchpenny/S\ncatchphrase/S\ncatchup/MS\ncatchword/MS\ncatchy/TR\ncatechism/MS\ncatechist/SM\ncatechize/SDG\ncatecholamine/MS\ncategoric\ncategorical/Y\ncategorization/MS\ncategorized/AU\ncategorize/RSDGZ\ncategory/MS\nCate/M\ncatenate/NF\ncatenation/MF\ncatercorner\ncaterer/M\ncater/GRDZ\nCaterina/M\ncatering/M\nCaterpillar\ncaterpillar/SM\ncaterwaul/DSG\ncatfish/MS\ncatgut/SM\nCatha/M\nCatharina/M\nCatharine/M\ncatharses\ncatharsis/M\ncathartic/S\nCathay/M\ncathedral/SM\nCathee/M\nCatherina/M\nCatherine/M\nCatherin/M\nCather/M\nCathe/RM\ncatheterize/GSD\ncatheter/SM\nCathie/M\nCathi/M\nCathleen/M\nCathlene/M\ncathode/MS\ncathodic\ncatholicism\nCatholicism/SM\ncatholicity/MS\ncatholic/MS\nCatholic/S\nCathrine/M\nCathrin/M\nCathryn/M\nCathyleen/M\nCathy/M\nCatie/M\nCatiline/M\nCati/M\nCatina/M\ncationic\ncation/MS\ncatkin/SM\nCatlaina/M\nCatlee/M\ncatlike\nCatlin/M\ncatnapped\ncatnapping\ncatnap/SM\ncatnip/MS\nCato/M\nCatrina/M\nCatriona/M\nCatskill/SM\ncat/SMRZ\ncatsup\'s\ncattail/SM\ncatted\ncattery/M\ncattily\ncattiness/SM\ncatting\ncattle/M\ncattleman/M\ncattlemen\nCatt/M\ncatty/PRST\nCatullus/M\nCATV\ncatwalk/MS\nCaty/M\nCaucasian/S\nCaucasoid/S\nCaucasus/M\nCauchy/M\ncaucus/SDMG\ncaudal/Y\ncaught/U\ncauldron/MS\ncauliflower/MS\ncaulker/M\ncaulk/JSGZRD\ncausality/SM\ncausal/YS\ncausate/XVN\ncausation/M\ncausative/SY\ncause/DSRGMZ\ncaused/U\ncauseless\ncauserie/MS\ncauser/M\ncauseway/SGDM\ncaustically\ncausticity/MS\ncaustic/YS\ncauterization/SM\ncauterized/U\ncauterize/GSD\ncautionary\ncautioner/M\ncaution/GJDRMSZ\ncautiousness\'s/I\ncautiousness/SM\ncautious/PIY\ncavalcade/MS\ncavalierness/M\ncavalier/SGYDP\ncavalryman/M\ncavalrymen\ncavalry/MS\ncaveat/SM\ncaveatted\ncaveatting\ncave/GFRSD\ncaveman/M\ncavemen\nCavendish/M\ncaver/M\ncavern/GSDM\ncavernous/Y\ncave\'s\ncaviar/MS\ncaviler/M\ncavil/SJRDGZ\ncaving/MS\ncavity/MFS\ncavort/SDG\nCavour/M\ncaw/SMDG\nCaxton/M\nCaye/M\nCayenne/M\ncayenne/SM\nCayla/M\nCayman/M\ncayman/SM\ncay\'s\ncay/SC\nCayuga/M\ncayuse/SM\nCaz/M\nCazzie/M\nc/B\nCB\nCBC\nCb/M\nCBS\ncc\nCchaddie/M\nCCTV\nCCU\nCD\nCDC/M\nCd/M\nCDT\nCe\ncease/DSCG\nceasefire/S\nceaselessness/SM\nceaseless/YP\nceasing/U\nCeausescu/M\nCebuano/M\nCebu/M\nceca\ncecal\nCecelia/M\nCece/M\nCecile/M\nCeciley/M\nCecilia/M\nCecilio/M\nCecilius/M\nCecilla/M\nCecil/M\nCecily/M\ncecum/M\ncedar/SM\nceded/A\ncede/FRSDG\nceder\'s/F\nceder/SM\ncedes/A\ncedilla/SM\nceding/A\nCed/M\nCedric/M\nceilidh/M\nceiling/MDS\nCeil/M\ncelandine/MS\nCelanese/M\nCelebes\'s\ncelebrant/MS\ncelebratedness/M\ncelebrated/P\ncelebrate/XSDGN\ncelebration/M\ncelebrator/MS\ncelebratory\ncelebrity/MS\nCele/M\nCelene/M\ncelerity/SM\ncelery/SM\nCelesta/M\ncelesta/SM\nCeleste/M\ncelestial/YS\nCelestia/M\nCelestina/M\nCelestine/M\nCelestyna/M\nCelestyn/M\nCelia/M\ncelibacy/MS\ncelibate/SM\nCelie/M\nCelina/M\nCelinda/M\nCeline/M\nCelinka/M\nCelisse/M\nCelka/M\ncellarer/M\ncellar/RDMGS\nCelle/M\ncell/GMDS\nCellini/M\ncellist/SM\nCello/M\ncello/MS\ncellophane/SM\ncellphone/S\ncellular/SY\ncellulite/S\ncelluloid/SM\ncellulose/SM\nCelsius/S\nCeltic/SM\nCelt/MS\ncementa\ncementer/M\ncementum/SM\ncement/ZGMRDS\ncemetery/MS\ncenobite/MS\ncenobitic\ncenotaph/M\ncenotaphs\nCenozoic\ncenser/MS\ncensored/U\ncensor/GDMS\ncensorial\ncensoriousness/MS\ncensorious/YP\ncensorship/MS\ncensure/BRSDZMG\ncensurer/M\ncensus/SDMG\ncentaur/SM\nCentaurus/M\ncentavo/SM\ncentenarian/MS\ncentenary/S\ncentennial/YS\ncenter/AC\ncenterboard/SM\ncentered\ncenterer/S\ncenterfold/S\ncentering/SM\ncenterline/SM\ncenterpiece/SM\ncenter\'s\nCentigrade\ncentigrade/S\ncentigram/SM\ncentiliter/MS\ncentime/SM\ncentimeter/SM\ncentipede/MS\nCentralia/M\ncentralism/M\ncentralist/M\ncentrality/MS\ncentralization/CAMS\ncentralize/CGSD\ncentralizer/SM\ncentralizes/A\ncentral/STRY\ncentrefold\'s\nCentrex\nCENTREX/M\ncentric/F\ncentrifugal/SY\ncentrifugate/NM\ncentrifugation/M\ncentrifuge/GMSD\ncentripetal/Y\ncentrist/MS\ncentroid/MS\ncent/SZMR\ncenturion/MS\ncentury/MS\nCEO\ncephalic/S\nCepheid\nCepheus/M\nceramicist/S\nceramic/MS\nceramist/MS\ncerate/MD\nCerberus/M\ncereal/MS\ncerebellar\ncerebellum/MS\ncerebra\ncerebral/SY\ncerebrate/XSDGN\ncerebration/M\ncerebrum/MS\ncerement/SM\nceremonial/YSP\nceremoniousness/MS\nceremoniousness\'s/U\nceremonious/YUP\nceremony/MS\nCerenkov/M\nCeres/M\nCerf/M\ncerise/SM\ncerium/MS\ncermet/SM\nCERN/M\ncertainer\ncertainest\ncertainty/UMS\ncertain/UY\ncert/FS\ncertifiable\ncertifiably\ncertificate/SDGM\ncertification/AMC\ncertified/U\ncertifier/M\ncertify/DRSZGNX\ncertiorari/M\ncertitude/ISM\ncerulean/MS\nCervantes/M\ncervical\ncervices/M\ncervix/M\nCesarean\ncesarean/S\nCesare/M\nCesar/M\nCesaro/M\ncesium/MS\ncessation/SM\ncession/FAMSK\nCessna/M\ncesspit/M\ncesspool/SM\nCesya/M\ncetacean/S\ncetera/S\nCetus/M\nCeylonese\nCeylon/M\nCezanne/S\ncf\nCF\nCFC\nCf/M\nCFO\ncg\nChablis/SM\nChaddie/M\nChadd/M\nChaddy/M\nChadian/S\nChad/M\nChadwick/M\nchafe/GDSR\nchafer/M\nchaffer/DRG\nchafferer/M\nChaffey/M\nchaff/GRDMS\nchaffinch/SM\nChagall/M\nchagrin/DGMS\nChaim/M\nchainlike\nchain\'s\nchainsaw/SGD\nchain/SGUD\nchairlady/M\nchairlift/MS\nchairman/MDGS\nchairmanship/MS\nchairmen\nchairperson/MS\nchair/SGDM\nchairwoman/M\nchairwomen\nchaise/SM\nchalcedony/MS\nChaldea/M\nChaldean/M\nchalet/SM\nchalice/DSM\nchalkboard/SM\nchalk/DSMG\nchalkiness/S\nchalkline\nchalky/RPT\nchallenged/U\nchallenger/M\nchallenge/ZGSRD\nchallenging/Y\nchallis/SM\nChalmers\nchamberer/M\nChamberlain/M\nchamberlain/MS\nchambermaid/MS\nchamberpot/S\nChambers/M\nchamber/SZGDRM\nchambray/MS\nchameleon/SM\nchamfer/DMGS\nchammy\'s\nchamois/DSMG\nchamomile/MS\nchampagne/MS\nchampaign/M\nchamp/DGSZ\nchampion/MDGS\nchampionship/MS\nChamplain/M\nchanced/M\nchance/GMRSD\nchancellery/SM\nchancellorship/SM\nchancellor/SM\nChancellorsville/M\nchancel/SM\nChance/M\nchancery/SM\nChancey/M\nchanciness/S\nchancing/M\nchancre/SM\nchancy/RPT\nChandal/M\nChanda/M\nchandelier/SM\nChandigarh/M\nChandler/M\nchandler/MS\nChandragupta/M\nChandra/M\nChandrasekhar/M\nChandy/M\nChanel/M\nChane/M\nChaney/M\nChangchun/M\nchangeabilities\nchangeability/UM\nchangeableness/SM\nchangeable/U\nchangeably/U\nchanged/U\nchange/GZRSD\nchangeless\nchangeling/M\nchangeover/SM\nchanger/M\nchanging/U\nChang/M\nChangsha/M\nChan/M\nChanna/M\nchanneler/M\nchanneling/M\nchannelization/SM\nchannelize/GDS\nchannellings\nchannel/MDRZSG\nChanning/M\nchanson/SM\nChantalle/M\nChantal/M\nchanter/M\nchanteuse/MS\nchantey/SM\nchanticleer/SM\nChantilly/M\nchantry/MS\nchant/SJGZMRD\nchanty\'s\nChanukah\'s\nChao/M\nchaos/SM\nchaotic\nchaotically\nchaparral/MS\nchapbook/SM\nchapeau/MS\nchapel/MS\nchaperonage/MS\nchaperoned/U\nchaperone\'s\nchaperon/GMDS\nchaplaincy/MS\nchaplain/MS\nchaplet/SM\nChaplin/M\nChapman/M\nchap/MS\nChappaquiddick/M\nchapped\nchapping\nchapter/SGDM\nChara\ncharabanc/MS\ncharacterful\ncharacteristically/U\ncharacteristic/SM\ncharacterizable/MS\ncharacterization/MS\ncharacterize/DRSBZG\ncharacterized/U\ncharacterizer/M\ncharacterless\ncharacter/MDSG\ncharade/SM\ncharbroil/SDG\ncharcoal/MGSD\nChardonnay\nchardonnay/S\nchard/SM\nchargeableness/M\nchargeable/P\ncharged/U\ncharge/EGRSDA\ncharger/AME\nchargers\nchar/GS\nCharil/M\ncharily\nchariness/MS\nCharin/M\ncharioteer/GSDM\nChariot/M\nchariot/SMDG\nCharis\ncharisma/M\ncharismata\ncharismatically\ncharismatic/S\nCharissa/M\nCharisse/M\ncharitablenesses\ncharitableness/UM\ncharitable/UP\ncharitably/U\nCharita/M\nCharity/M\ncharity/MS\ncharlady/M\nCharla/M\ncharlatanism/MS\ncharlatanry/SM\ncharlatan/SM\nCharlean/M\nCharleen/M\nCharlemagne/M\nCharlena/M\nCharlene/M\nCharles/M\nCharleston/SM\nCharley/M\nCharlie/M\nCharline/M\nCharlot/M\nCharlotta/M\nCharlotte/M\nCharlottesville/M\nCharlottetown/M\nCharlton/M\nCharmaine/M\nCharmain/M\nCharmane/M\ncharmer/M\nCharmian/M\nCharmine/M\ncharming/RYT\nCharmin/M\nCharmion/M\ncharmless\ncharm/SGMZRD\nCharolais\nCharo/M\nCharon/M\ncharred\ncharring\ncharted/U\ncharter/AGDS\nchartered/U\ncharterer/SM\ncharter\'s\nchartist/SM\nChartres/M\nchartreuse/MS\nchartroom/S\nchart/SJMRDGBZ\ncharwoman/M\ncharwomen\nCharybdis/M\nCharyl/M\nchary/PTR\nChas\nchase/DSRGZ\nChase/M\nchaser/M\nchasing/M\nChasity/M\nchasm/SM\nchassis/M\nchastely\nchasteness/SM\nchasten/GSD\nchaste/UTR\nchastisement/SM\nchastiser/M\nchastise/ZGLDRS\nChastity/M\nchastity/SM\nchastity\'s/U\nchasuble/SM\nChateaubriand\nch�teau/M\nchateaus\nch�teaux\nch�telaine/SM\nchat/MS\nChattahoochee/M\nChattanooga/M\nchatted\nchattel/MS\nchatterbox/MS\nchatterer/M\nChatterley/M\nchatter/SZGDRY\nChatterton/M\nchattily\nchattiness/SM\nchatting\nchatty/RTP\nChaucer/M\nchauffeur/GSMD\nChaunce/M\nChauncey/M\nChautauqua/M\nchauvinism/MS\nchauvinistic\nchauvinistically\nchauvinist/MS\nChavez/M\nchaw\nChayefsky/M\ncheapen/DG\ncheapish\ncheapness/MS\ncheapskate/MS\ncheap/YRNTXSP\ncheater/M\ncheat/RDSGZ\nChechen/M\nChechnya/M\ncheckable/U\ncheckbook/MS\nchecked/UA\ncheckerboard/MS\nchecker/DMG\ncheck/GZBSRDM\nchecklist/S\ncheckmate/MSDG\ncheckoff/SM\ncheckout/S\ncheckpoint/MS\ncheckroom/MS\ncheck\'s/A\nchecks/A\nchecksummed\nchecksumming\nchecksum/SM\ncheckup/MS\nCheddar/MS\ncheddar/S\ncheekbone/SM\ncheek/DMGS\ncheekily\ncheekiness/SM\ncheeky/PRT\ncheep/GMDS\ncheerer/M\ncheerfuller\ncheerfullest\ncheerfulness/MS\ncheerful/YP\ncheerily\ncheeriness/SM\ncheerio/S\nCheerios/M\ncheerleader/SM\ncheerlessness/SM\ncheerless/PY\ncheers/S\ncheery/PTR\ncheer/YRDGZS\ncheeseburger/SM\ncheesecake/SM\ncheesecloth/M\ncheesecloths\ncheeseparing/S\ncheese/SDGM\ncheesiness/SM\ncheesy/PRT\ncheetah/M\ncheetahs\nCheeto/M\nCheever/M\ncheffed\ncheffing\nchef/SM\nChekhov/M\nchelate/XDMNG\nchelation/M\nChelsae/M\nChelsea/M\nChelsey/M\nChelsie/M\nChelsy/M\nChelyabinsk/M\nchem\nChe/M\nchemic\nchemical/SYM\nchemiluminescence/M\nchemiluminescent\nchemise/SM\nchemistry/SM\nchemist/SM\nchemotherapeutic/S\nchemotherapy/SM\nchemurgy/SM\nChengdu\nCheng/M\nchenille/SM\nChen/M\nCheops/M\nChere/M\nCherey/M\nCherianne/M\nCherice/M\nCherida/M\nCherie/M\nCherilyn/M\nCherilynn/M\nCheri/M\nCherin/M\nCherise/M\ncherisher/M\ncherish/GDRS\nCherish/M\nCheriton/M\nCherlyn/M\nCher/M\nChernenko/M\nChernobyl/M\nCherokee/MS\ncheroot/MS\nCherri/M\nCherrita/M\nCherry/M\ncherry/SM\nchert/MS\ncherubic\ncherubim/S\ncherub/SM\nchervil/MS\nCherye/M\nCheryl/M\nChery/M\nChesapeake/M\nCheshire/M\nCheslie/M\nchessboard/SM\nchessman/M\nchessmen\nchess/SM\nChesterfield/M\nchesterfield/MS\nChester/M\nChesterton/M\nchestful/S\nchest/MRDS\nchestnut/SM\nCheston/M\nchesty/TR\nChet/M\nChevalier/M\nchevalier/SM\nCheviot/M\ncheviot/S\nChev/M\nChevrolet/M\nchevron/DMS\nChevy/M\nchewer/M\nchew/GZSDR\nchewiness/S\nchewy/RTP\nCheyenne/SM\nchg\nchge\nChiang/M\nchianti/M\nChianti/S\nchiaroscuro/SM\nChiarra/M\nChiba/M\nChicagoan/SM\nChicago/M\nChicana/MS\nchicane/MGDS\nchicanery/MS\nChicano/MS\nchichi/RTS\nchickadee/SM\nChickasaw/SM\nchickenfeed\nchicken/GDM\nchickenhearted\nchickenpox/MS\nChickie/M\nChick/M\nchickpea/MS\nchickweed/MS\nchick/XSNM\nChicky/M\nchicle/MS\nChic/M\nchicness/S\nChico/M\nchicory/MS\nchic/SYRPT\nchide/GDS\nchiding/Y\nchiefdom/MS\nchieftain/SM\nchief/YRMST\nchiffonier/MS\nchiffon/MS\nchigger/MS\nchignon/MS\nChihuahua/MS\nchihuahua/S\nchilblain/MS\nchildbearing/MS\nchildbirth/M\nchildbirths\nchildcare/S\nchildes\nchild/GMYD\nchildhood/MS\nchildishness/SM\nchildish/YP\nchildlessness/SM\nchildless/P\nchildlikeness/M\nchildlike/P\nchildminders\nchildproof/GSD\nchildrearing\nchildren/M\nChilean/S\nChile/MS\nchile\'s\nchilies\nchili/M\nchiller/M\nchilliness/MS\nchilling/Y\nchilli\'s\nchill/MRDJGTZPS\nchillness/MS\nchilly/TPRS\nChilton/M\nChi/M\nchimaera\'s\nchimaerical\nChimborazo/M\nchime/DSRGMZ\nChimera/S\nchimera/SM\nchimeric\nchimerical\nchimer/M\nChimiques\nchimney/SMD\nchimpanzee/SM\nchimp/MS\nchi/MS\nChimu/M\nCh\'in\nChina/M\nChinaman/M\nChinamen\nchina/MS\nChinatown/SM\nchinchilla/SM\nchine/MS\nChinese/M\nChing/M\nchink/DMSG\nchinless\nChin/M\nchinned\nchinner/S\nchinning\nchino/MS\nChinook/MS\nchin/SGDM\nchinstrap/S\nchintz/SM\nchintzy/TR\nchipboard/M\nChipewyan/M\nChip/M\nchipmunk/SM\nchipped\nChippendale/M\nchipper/DGS\nChippewa/MS\nchipping/MS\nchip/SM\nChiquia/M\nChiquita/M\nchiral\nChirico/M\nchirography/SM\nchiropodist/SM\nchiropody/MS\nchiropractic/MS\nchiropractor/SM\nchirp/GDS\nchirpy/RT\nchirrup/DGS\nchiseler/M\nchisel/ZGSJMDR\nChisholm/M\nChisinau/M\nchitchat/SM\nchitchatted\nchitchatting\nchitinous\nchitin/SM\nchit/SM\nChittagong/M\nchitterlings\nchivalric\nchivalrously/U\nchivalrousness/MS\nchivalrous/YP\nchivalry/SM\nchive/GMDS\nchivvy/D\nchivying\nchlamydiae\nchlamydia/S\nChloe/M\nChloette/M\nChlo/M\nchloral/MS\nchlorate/M\nchlordane/MS\nchloride/MS\nchlorinated/C\nchlorinates/C\nchlorinate/XDSGN\nchlorination/M\nchlorine/MS\nChloris\nchlorofluorocarbon/S\nchloroform/DMSG\nchlorophyll/SM\nchloroplast/MS\nchloroquine/M\nchm\nCh/MGNRS\nchockablock\nchock/SGRDM\nchocoholic/S\nchocolate/MS\nchocolaty\nChoctaw/MS\nchoiceness/M\nchoice/RSMTYP\nchoirboy/MS\nchoirmaster/SM\nchoir/SDMG\nchokeberry/M\nchokecherry/SM\nchoke/DSRGZ\nchoker/M\nchokes/M\nchoking/Y\ncholera/SM\ncholeric\ncholer/SM\ncholesterol/SM\ncholine/M\ncholinesterase/M\nchomp/DSG\nChomsky/M\nChongqing\nchoose/GZRS\nchooser/M\nchoosiness/S\nchoosy/RPT\nchophouse/SM\nChopin/M\nchopped\nchopper/SDMG\nchoppily\nchoppiness/MS\nchopping\nchoppy/RPT\nchop/S\nchopstick/SM\nchorale/MS\nchoral/SY\nchordal\nchordata\nchordate/MS\nchording/M\nchord/SGMD\nchorea/MS\nchore/DSGNM\nchoreographer/M\nchoreographic\nchoreographically\nchoreographs\nchoreography/MS\nchoreograph/ZGDR\nchorines\nchorion/M\nchorister/SM\nchoroid/S\nchortler/M\nchortle/ZGDRS\nchorus/GDSM\nchosen/U\nchose/S\nChou/M\nchowder/SGDM\nchow/DGMS\nChretien/M\nChris/M\nchrism/SM\nchrissake\nChrisse/M\nChrissie/M\nChrissy/M\nChristabella/M\nChristabel/M\nChristalle/M\nChristal/M\nChrista/M\nChristan/M\nChristchurch/M\nChristean/M\nChristel/M\nChristendom/MS\nchristened/U\nchristening/SM\nChristen/M\nchristen/SAGD\nChristensen/M\nChristenson/M\nChristiana/M\nChristiane/M\nChristianity/SM\nChristianize/GSD\nChristian/MS\nChristiano/M\nChristiansen/M\nChristians/N\nChristie/SM\nChristi/M\nChristina/M\nChristine/M\nChristin/M\nChristlike\nChristmas/SM\nChristmastide/SM\nChristmastime/S\nChristoffel/M\nChristoffer/M\nChristoforo/M\nChristoper/M\nChristophe/M\nChristopher/M\nChristoph/MR\nChristophorus/M\nChristos/M\nChrist/SMN\nChristye/M\nChristyna/M\nChristy\'s\nChrisy/M\nchroma/M\nchromate/M\nchromatically\nchromaticism/M\nchromaticness/M\nchromatic/PS\nchromatics/M\nchromatin/MS\nchromatogram/MS\nchromatograph\nchromatographic\nchromatography/M\nchrome/GMSD\nchromic\nchromite/M\nchromium/SM\nchromosomal\nchromosome/MS\nchromosphere/M\nchronically\nchronicled/U\nchronicler/M\nchronicle/SRDMZG\nchronic/S\nchronograph/M\nchronographs\nchronography\nchronological/Y\nchronologist/MS\nchronology/MS\nchronometer/MS\nchronometric\nChrotoem/M\nchrysalids\nchrysalis/SM\nChrysa/M\nchrysanthemum/MS\nChrysler/M\nChrysostom/M\nChrystal/M\nChrystel/M\nChryste/M\nchubbiness/SM\nchubby/RTP\nchub/MS\nChucho/M\nchuck/GSDM\nchuckhole/SM\nchuckle/DSG\nchuckling/Y\nChuck/M\nchuff/DM\nchugged\nchugging\nchug/MS\nChukchi/M\nchukka/S\nChumash/M\nchummed\nchummily\nchumminess/MS\nchumming\nchum/MS\nchummy/SRTP\nchumping/M\nchump/MDGS\nChungking\'s\nChung/M\nchunkiness/MS\nchunk/SGDM\nchunky/RPT\nchuntering\nchurchgoer/SM\nchurchgoing/SM\nChurchillian\nChurchill/M\nchurchliness/M\nchurchly/P\nchurchman/M\nchurch/MDSYG\nchurchmen\nChurch/MS\nchurchwarden/SM\nchurchwoman/M\nchurchwomen\nchurchyard/SM\nchurlishness/SM\nchurlish/YP\nchurl/SM\nchurner/M\nchurning/M\nchurn/SGZRDM\nchute/DSGM\nchutney/MS\nchutzpah/M\nchutzpahs\nchutzpa/SM\nChuvash/M\nch/VT\nchyme/SM\nCi\nCIA\nciao/S\ncicada/MS\ncicatrice/S\ncicatrix\'s\nCicely/M\nCicero/M\ncicerone/MS\nciceroni\nCiceronian\nCicily/M\nCID\ncider\'s/C\ncider/SM\nCid/M\nCiel/M\ncigarette/MS\ncigarillo/MS\ncigar/SM\ncilantro/S\ncilia/M\nciliate/FDS\nciliately\ncilium/M\nCilka/M\ncinch/MSDG\ncinchona/SM\nCincinnati/M\ncincture/MGSD\nCinda/M\nCindee/M\nCindelyn/M\ncinder/DMGS\nCinderella/MS\nCindie/M\nCindi/M\nCindra/M\nCindy/M\ncine/M\ncinema/SM\ncinematic\ncinematographer/MS\ncinematographic\ncinematography/MS\nCinerama/M\ncinnabar/MS\nCinnamon/M\ncinnamon/MS\nciphered/C\ncipher/MSGD\nciphers/C\ncir\ncirca\ncircadian\nCirce/M\ncircler/M\ncircle/RSDGM\ncirclet/MS\ncircuital\ncircuit/GSMD\ncircuitousness/MS\ncircuitous/YP\ncircuitry/SM\ncircuity/MS\ncirculant\ncircularity/SM\ncircularize/GSD\ncircularness/M\ncircular/PSMY\ncirculate/ASDNG\ncirculation/MA\ncirculations\ncirculative\ncirculatory\ncircumcise/DRSXNG\ncircumcised/U\ncircumciser/M\ncircumcision/M\ncircumference/SM\ncircumferential/Y\ncircumflex/MSDG\ncircumlocution/MS\ncircumlocutory\ncircumnavigate/DSNGX\ncircumnavigational\ncircumnavigation/M\ncircumpolar\ncircumscribe/GSD\ncircumscription/SM\ncircumspection/SM\ncircumspect/Y\ncircumsphere\ncircumstance/SDMG\ncircumstantial/YS\ncircumvention/MS\ncircumvent/SBGD\ncircus/SM\nCirillo/M\nCirilo/M\nCiro/M\ncirque/SM\ncirrhoses\ncirrhosis/M\ncirrhotic/S\ncirri/M\ncirrus/M\nCissiee/M\nCissy/M\ncistern/SM\ncitadel/SM\ncitations/I\ncitation/SMA\ncit/DSG\ncite/ISDAG\nCitibank/M\ncitified\ncitizenry/SM\ncitizenship/MS\ncitizen/SYM\ncitrate/DM\ncitric\nCitroen/M\ncitronella/MS\ncitron/MS\ncitrus/SM\ncity/DSM\ncityscape/MS\ncitywide\ncivet/SM\ncivic/S\ncivics/M\ncivilian/SM\ncivility/IMS\ncivilizational/MS\ncivilization/AMS\ncivilizedness/M\ncivilized/PU\ncivilize/DRSZG\ncivilizer/M\ncivilizes/AU\ncivil/UY\ncivvies\nck/C\nclack/SDG\ncladding/SM\nclads\nclad/U\nClaiborne/M\nClaiborn/M\nclaimable\nclaimant/MS\nclaim/CDRSKAEGZ\nclaimed/U\nclaimer/KMACE\nClaire/M\nClair/M\nClairol/M\nclairvoyance/MS\nclairvoyant/YS\nclambake/MS\nclamberer/M\nclamber/SDRZG\nclammed\nclammily\nclamminess/MS\nclamming\nclam/MS\nclammy/TPR\nclamorer/M\nclamor/GDRMSZ\nclamorousness/UM\nclamorous/PUY\nclampdown/SM\nclamper/M\nclamp/MRDGS\nclamshell/MS\nClancy/M\nclandestineness/M\nclandestine/YP\nclanger/M\nclangor/MDSG\nclangorous/Y\nclang/SGZRD\nclanking/Y\nclank/SGDM\nclan/MS\nclannishness/SM\nclannish/PY\nclansman/M\nclansmen\nclapboard/SDGM\nClapeyron/M\nclapped\nclapper/GMDS\nclapping\nclap/S\nClapton/M\nclaptrap/SM\nclaque/MS\nClarabelle/M\nClara/M\nClarance/M\nClare/M\nClaremont/M\nClarence/M\nClarendon/M\nClaresta/M\nClareta/M\nclaret/MDGS\nClaretta/M\nClarette/M\nClarey/M\nClaribel/M\nClarice/M\nClarie/M\nclarification/M\nclarifier/M\nclarify/NGXDRS\nClari/M\nClarinda/M\nClarine/M\nclarinetist/SM\nclarinet/SM\nclarinettist\'s\nclarion/GSMD\nClarissa/M\nClarisse/M\nClarita/M\nclarities\nclarity/UM\nClarke/M\nClark/M\nClarridge/M\nClary/M\nclasher/M\nclash/RSDG\nclasped/M\nclasper/M\nclasp\'s\nclasp/UGSD\nclasser/M\nclass/GRSDM\nclassical/Y\nclassicism/SM\nclassicist/SM\nclassic/S\nclassics/M\nclassifiable/U\nclassification/AMC\nclassificatory\nclassified/S\nclassifier/SM\nclassify/CNXASDG\nclassiness/SM\nclassless/P\nclassmate/MS\nclassroom/MS\nclasswork/M\nclassy/PRT\nclatterer/M\nclattering/Y\nclatter/SGDR\nclattery\nClaudelle/M\nClaudell/M\nClaude/M\nClaudetta/M\nClaudette/M\nClaudia/M\nClaudian/M\nClaudianus/M\nClaudie/M\nClaudina/M\nClaudine/M\nClaudio/M\nClaudius/M\nclausal\nclause/MS\nClausen/M\nClausewitz/M\nClausius/M\nClaus/NM\nclaustrophobia/SM\nclaustrophobic\nclave/RM\nclave\'s/F\nclavichord/SM\nclavicle/MS\nclavier/MS\nclawer/M\nclaw/GDRMS\nClayborne/M\nClayborn/M\nClaybourne/M\nclayey\nclayier\nclayiest\nClay/M\nclay/MDGS\nclaymore/MS\nClayson/M\nClayton/M\nClea/M\ncleanable\ncleaner/MS\ncleaning/SM\ncleanliness/UMS\ncleanly/PRTU\ncleanness/MSU\ncleanse\ncleanser/M\ncleans/GDRSZ\ncleanup/MS\nclean/UYRDPT\nclearance/MS\nclearcut\nclearer/M\nclearheadedness/M\nclearheaded/PY\nclearinghouse/S\nclearing/MS\nclearly\nclearness/MS\nclears\nclear/UTRD\nClearwater/M\nclearway/M\ncleat/MDSG\ncleavage/MS\ncleaver/M\ncleave/RSDGZ\nCleavland/M\nclef/SM\ncleft/MDGS\nclematis/MS\nclemence\nClemenceau/M\nClemence/M\nclemency/ISM\nClemente/M\nClementia/M\nClementina/M\nClementine/M\nClementius/M\nclement/IY\nClement/MS\nclements\nClemmie/M\nClemmy/M\nClemons\nClemson/M\nClem/XM\nclenches\nclenching\nclench/UD\nCleo/M\nCleon/M\nCleopatra/M\nClerc/M\nclerestory/MS\nclergyman/M\nclergymen\nclergy/MS\nclergywoman\nclergywomen\nclericalism/SM\nclerical/YS\ncleric/SM\nClerissa/M\nclerk/SGYDM\nclerkship/MS\nCletis\nCletus/M\nCleveland/M\nCleve/M\ncleverness/SM\nclever/RYPT\nClevey/M\nClevie/M\nclevis/SM\nclew/DMGS\ncl/GJ\nCliburn/M\nclich�d\nclich�/SM\nclicker/M\nclick/GZSRDM\nclient�le/SM\nclient/SM\ncliffhanger/MS\ncliffhanging\nCliff/M\nClifford/M\ncliff/SM\nClifton/M\nclimacteric/SM\nclimactic\nclimate/MS\nclimatic\nclimatically\nclimatological/Y\nclimatologist/SM\nclimatology/MS\nclimax/MDSG\nclimbable/U\nclimb/BGZSJRD\nclimbdown\nclimbed/U\nclimber/M\nclime/SM\nClim/M\nclinch/DRSZG\nclincher/M\nclinching/Y\nCline/M\nclinger/MS\nclinging\ncling/U\nclingy/TR\nclinical/Y\nclinician/MS\nclinic/MS\nclinker/GMD\nclink/RDGSZ\nclinometer/MIS\nClint/M\nClinton/M\nClio/M\ncliometrician/S\ncliometric/S\nclipboard/SM\nclipped/U\nclipper/MS\nclipping/SM\nclip/SM\nclique/SDGM\ncliquey\ncliquier\ncliquiest\ncliquishness/SM\ncliquish/YP\nclitoral\nclitorides\nclitoris/MS\nClive/M\ncloacae\ncloaca/M\ncloakroom/MS\ncloak\'s\ncloak/USDG\nclobber/DGS\ncloche/MS\nclocker/M\nclockmaker/M\nclock/SGZRDMJ\nclockwatcher\nclockwise\nclockwork/MS\nclodded\nclodding\ncloddishness/M\ncloddish/P\nclodhopper/SM\nclod/MS\nCloe/M\nclogged/U\nclogging/U\nclog\'s\nclog/US\ncloisonn�\ncloisonnes\ncloister/MDGS\ncloistral\nClo/M\nclomp/MDSG\nclonal\nclone/DSRGMZ\nclonk/SGD\nclopped\nclopping\nclop/S\nCloris/M\nclosed/U\nclose/EDSRG\nclosefisted\nclosely\nclosemouthed\ncloseness/MS\ncloseout/MS\ncloser/EM\nclosers\nclosest\ncloset/MDSG\ncloseup/S\nclosing/S\nclosured\nclosure/EMS\nclosure\'s/I\nclosuring\nclothbound\nclothesbrush\nclotheshorse/MS\nclothesline/SDGM\nclothesman\nclothesmen\nclothespin/MS\nclothe/UDSG\ncloth/GJMSD\nclothier/MS\nclothing/M\nClotho/M\ncloths\nClotilda/M\nclot/MS\nclotted\nclotting\ncloture/MDSG\ncloudburst/MS\nclouded/U\ncloudiness/SM\ncloudlessness/M\ncloudless/YP\ncloudscape/SM\ncloud/SGMD\ncloudy/TPR\nclout/GSMD\ncloven\ncloverleaf/MS\nclover/M\nclove/SRMZ\nClovis/M\nclown/DMSG\nclownishness/SM\nclownish/PY\ncloy/DSG\ncloying/Y\nclubbed/M\nclubbing/M\nclubfeet\nclubfoot/DM\nclubhouse/SM\nclub/MS\nclubroom/SM\ncluck/GSDM\nclueless\nclue/MGDS\nCluj/M\nclump/MDGS\nclumpy/RT\nclumsily\nclumsiness/MS\nclumsy/PRT\nclung\nclunk/SGZRDM\nclunky/PRYT\nclustered/AU\nclusters/A\ncluster/SGJMD\nclutch/DSG\ncluttered/U\nclutter/GSD\nCl/VM\nClyde/M\nClydesdale/M\nCly/M\nClytemnestra/M\nClyve/M\nClywd/M\ncm\nCm/M\nCMOS\ncnidarian/MS\nCNN\nCNS\nCO\ncoacher/M\ncoachman/M\ncoachmen\ncoach/MSRDG\ncoachwork/M\ncoadjutor/MS\ncoagulable\ncoagulant/SM\ncoagulate/GNXSD\ncoagulation/M\ncoagulator/S\ncoaler/M\ncoalesce/GDS\ncoalescence/SM\ncoalescent\ncoalface/SM\ncoalfield/MS\ncoalitionist/SM\ncoalition/MS\ncoal/MDRGS\ncoalminers\ncoarseness/SM\ncoarsen/SGD\ncoarse/TYRP\ncoastal\ncoaster/M\ncoastguard/MS\ncoastline/SM\ncoast/SMRDGZ\ncoated/U\nCoates/M\ncoating/M\ncoat/MDRGZJS\ncoattail/S\ncoattest\ncoauthor/MDGS\ncoaxer/M\ncoax/GZDSR\ncoaxial/Y\ncoaxing/Y\nCobain/M\ncobalt/MS\ncobbed\nCobbie/M\ncobbing\ncobbler/M\ncobble/SRDGMZ\ncobblestone/MSD\nCobb/M\nCobby/M\ncoble/M\nCob/M\nCOBOL\nCobol/M\ncobra/MS\ncob/SM\ncobwebbed\ncobwebbing\ncobwebby/RT\ncobweb/SM\ncocaine/MS\ncoca/MS\ncocci/MS\ncoccus/M\ncoccyges\ncoccyx/M\nCochabamba/M\ncochineal/SM\nCochin/M\nCochise/M\ncochleae\ncochlear\ncochlea/SM\nCochran/M\ncockade/SM\ncockamamie\ncockatoo/SM\ncockatrice/MS\ncockcrow/MS\ncockerel/MS\ncocker/M\ncockeye/DM\ncockeyed/PY\ncockfighting/M\ncockfight/MJSG\ncock/GDRMS\ncockily\ncockiness/MS\ncocklebur/M\ncockle/SDGM\ncockleshell/SM\nCockney\ncockney/MS\ncockpit/MS\ncockroach/SM\ncockscomb/SM\ncockshies\ncocksucker/S!\ncocksure\ncocktail/GDMS\ncocky/RPT\ncocoa/SM\ncoco/MS\ncoconut/SM\ncocoon/GDMS\nCocteau/M\nCOD\ncoda/SM\ncodded\ncodding\ncoddle/GSRD\ncoddler/M\ncodebook/S\ncodebreak/R\ncoded/UA\nCodee/M\ncodeine/MS\ncodename/D\ncodependency/S\ncodependent/S\ncoder/CM\ncode\'s\nco/DES\ncodes/A\ncode/SCZGJRD\ncodetermine/S\ncodeword/SM\ncodex/M\ncodfish/SM\ncodger/MS\ncodices/M\ncodicil/SM\nCodie/M\ncodification/M\ncodifier/M\ncodify/NZXGRSD\nCodi/M\ncoding/M\ncodling/M\nCod/M\ncod/MDRSZGJ\ncodpiece/MS\nCody/M\ncoedited\ncoediting\ncoeditor/MS\ncoedits\ncoed/SM\ncoeducational\ncoeducation/SM\ncoefficient/SYM\ncoelenterate/MS\ncoequal/SY\ncoercer/M\ncoerce/SRDXVGNZ\ncoercible/I\ncoercion/M\ncoerciveness/M\ncoercive/PY\ncoeval/YS\ncoexistence/MS\ncoexistent\ncoexist/GDS\ncoextensive/Y\ncofactor/MS\ncoffeecake/SM\ncoffeecup\ncoffeehouse/SM\ncoffeemaker/S\ncoffeepot/MS\ncoffee/SM\ncofferdam/SM\ncoffer/DMSG\nCoffey/M\ncoffin/DMGS\nCoffman/M\ncogency/MS\ncogent/Y\ncogged\ncogging\ncogitate/DSXNGV\ncogitation/M\ncogitator/MS\ncog/MS\nCognac/M\ncognac/SM\ncognate/SXYN\ncognation/M\ncognitional\ncognition/SAM\ncognitive/SY\ncognizable\ncognizance/MAI\ncognizances/A\ncognizant/I\ncognomen/SM\ncognoscente\ncognoscenti\ncogwheel/SM\ncohabitant/MS\ncohabitational\ncohabitation/SM\ncohabit/SDG\nCohan/M\ncoheir/MS\nCohen/M\ncohere/GSRD\ncoherence/SIM\ncoherencies\ncoherency/I\ncoherent/IY\ncoherer/M\ncohesion/MS\ncohesiveness/SM\ncohesive/PY\nCohn/M\ncohoes\ncoho/MS\ncohort/SM\ncoiffed\ncoiffing\ncoiffure/MGSD\ncoif/SM\ncoil/UGSAD\nCoimbatore/M\ncoinage\'s/A\ncoinage/SM\ncoincide/GSD\ncoincidence/MS\ncoincidental/Y\ncoincident/Y\ncoined/U\ncoiner/M\ncoin/GZSDRM\ncoinsurance/SM\nCointon/M\ncointreau\ncoital/Y\ncoitus/SM\ncoke/MGDS\nCoke/MS\nCOL\nCOLA\ncolander/SM\nColan/M\nColas\ncola/SM\ncolatitude/MS\nColbert/M\nColby/M\ncoldblooded\ncoldish\ncoldness/MS\ncold/YRPST\nColeen/M\nCole/M\nColeman/M\nColene/M\nColeridge/M\ncoleslaw/SM\nColet/M\nColetta/M\nColette/M\ncoleus/SM\nColfax/M\nColgate/M\ncolicky\ncolic/SM\ncoliform\nColin/M\ncoliseum/SM\ncolitis/MS\ncollaborate/VGNXSD\ncollaboration/M\ncollaborative/SY\ncollaborator/SM\ncollage/MGSD\ncollagen/M\ncollapse/SDG\ncollapsibility/M\ncollapsible\ncollarbone/MS\ncollar/DMGS\ncollard/SM\ncollarless\ncollated/U\ncollateral/SYM\ncollate/SDVNGX\ncollation/M\ncollator/MS\ncolleague/SDGM\ncollectedness/M\ncollected/PY\ncollectible/S\ncollection/AMS\ncollective/SY\ncollectivism/SM\ncollectivist/MS\ncollectivity/MS\ncollectivization/MS\ncollectivize/DSG\ncollector/MS\ncollect/SAGD\nColleen/M\ncolleen/SM\ncollege/SM\ncollegiality/S\ncollegian/SM\ncollegiate/Y\nCollen/M\nCollete/M\nCollette/M\ncoll/G\ncollide/SDG\nCollie/M\ncollie/MZSRD\ncollier/M\nCollier/M\ncolliery/MS\ncollimate/C\ncollimated/U\ncollimates\ncollimating\ncollimation/M\ncollimator/M\ncollinear\ncollinearity/M\nColline/M\nCollin/MS\ncollisional\ncollision/SM\ncollocate/XSDGN\ncollocation/M\ncolloidal/Y\ncolloid/MS\ncolloq\ncolloquialism/MS\ncolloquial/SY\ncolloquies\ncolloquium/SM\ncolloquy/M\ncollude/SDG\ncollusion/SM\ncollusive\ncollying\nColly/RM\nColman/M\nCol/MY\nCologne/M\ncologne/MSD\nColo/M\nColombia/M\nColombian/S\nColombo/M\ncolonelcy/MS\ncolonel/MS\ncolonialism/MS\ncolonialist/MS\ncolonial/SPY\ncolonist/SM\ncolonization/ACSM\ncolonize/ACSDG\ncolonized/U\ncolonizer/MS\ncolonizes/U\nColon/M\ncolonnade/MSD\ncolon/SM\ncolony/SM\ncolophon/SM\nColoradan/S\nColoradoan/S\nColorado/M\ncolorant/SM\ncoloration/EMS\ncoloratura/SM\ncolorblindness/S\ncolorblind/P\ncolored/USE\ncolorer/M\ncolorfastness/SM\ncolorfast/P\ncolorfulness/MS\ncolorful/PY\ncolorimeter/SM\ncolorimetry\ncoloring/M\ncolorization/S\ncolorize/GSD\ncolorizing/C\ncolorlessness/SM\ncolorless/PY\ncolors/EA\ncolor/SRDMGZJ\ncolossal/Y\nColosseum/M\ncolossi\ncolossus/M\ncolostomy/SM\ncolostrum/SM\ncol/SD\ncolter/M\ncoltishness/M\ncoltish/PY\nColt/M\ncolt/MRS\nColtrane/M\nColumbia/M\nColumbian\nColumbine/M\ncolumbine/SM\nColumbus/M\ncolumnar\ncolumnist/MS\ncolumnize/GSD\ncolumn/SDM\nColver/M\nCo/M\ncomae\ncomaker/SM\nComanche/MS\ncoma/SM\ncomatose\ncombatant/SM\ncombativeness/MS\ncombative/PY\ncombat/SVGMD\ncombed/U\ncomber/M\ncombinational/A\ncombination/ASM\ncombinatorial/Y\ncombinatoric/S\ncombinator/SM\ncombined/AU\ncombiner/M\ncombines/A\ncombine/ZGBRSD\ncombining/A\ncombo/MS\ncomb/SGZDRMJ\nCombs/M\ncombusted\ncombustibility/SM\ncombustible/SI\ncombustion/MS\ncombustive\nComdex/M\nComdr/M\ncomeback/SM\ncomedian/SM\ncomedic\ncomedienne/SM\ncomedown/MS\ncomedy/SM\ncome/IZSRGJ\ncomeliness/SM\ncomely/TPR\ncomer/IM\ncomes/M\ncomestible/MS\ncometary\ncometh\ncomet/SM\ncomeuppance/SM\ncomfit\'s\ncomfit/SE\ncomfortability/S\ncomfortableness/MS\ncomfortable/U\ncomfortably/U\ncomforted/U\ncomforter/MS\ncomfort/ESMDG\ncomforting/YE\ncomfy/RT\ncomicality/MS\ncomical/Y\ncomic/MS\nCominform/M\ncomity/SM\ncom/LJRTZG\ncomm\nCom/M\ncomma/MS\ncommandant/MS\ncommandeer/SDG\ncommander/M\ncommanding/Y\ncommandment/SM\ncommando/SM\ncommand/SZRDMGL\ncommemorate/SDVNGX\ncommemoration/M\ncommemorative/YS\ncommemorator/S\ncommence/ALDSG\ncommencement/AMS\ncommencer/M\ncommendably\ncommendation/ASM\ncommendatory/A\ncommender/AM\ncommend/GSADRB\ncommensurable/I\ncommensurate/IY\ncommensurates\ncommensuration/SM\ncommentary/MS\ncommentate/GSD\ncommentator/SM\ncommenter/M\ncomment\'s\ncomment/SUGD\ncommerce/MGSD\ncommercialism/MS\ncommercialization/SM\ncommercialize/GSD\ncommercial/PYS\nCommie\ncommie/SM\ncommingle/GSD\ncommiserate/VGNXSD\ncommiseration/M\ncommissariat/MS\ncommissar/MS\ncommissary/MS\ncommission/ASCGD\ncommissioner/SM\ncommission\'s/A\ncommitment/SM\ncommit/SA\ncommittable\ncommittal/MA\ncommittals\ncommitted/UA\ncommitteeman/M\ncommitteemen\ncommittee/MS\ncommitteewoman/M\ncommitteewomen\ncommitting/A\ncommode/MS\ncommodes/IE\ncommodiousness/MI\ncommodious/YIP\ncommodity/MS\ncommodore/SM\ncommonality/MS\ncommonalty/MS\ncommoner/MS\ncommonness/MSU\ncommonplaceness/M\ncommonplace/SP\ncommon/RYUPT\ncommonsense\ncommons/M\nCommons/M\ncommonweal/SHM\ncommonwealth/M\nCommonwealth/M\ncommonwealths\nCommonwealths\ncommotion/MS\ncommunality/M\ncommunal/Y\ncommune/XSDNG\ncommunicability/MS\ncommunicable/IU\ncommunicably\ncommunicant/MS\ncommunicate/VNGXSD\ncommunicational\ncommunication/M\ncommunicativeness/M\ncommunicative/PY\ncommunicator/SM\ncommunion/M\nCommunion/SM\ncommunique/S\ncommunism/MS\nCommunism/S\ncommunistic\ncommunist/MS\nCommunist/S\ncommunitarian/M\ncommunity/MS\ncommunize/SDG\ncommutable/I\ncommutate/XVGNSD\ncommutation/M\ncommutative/Y\ncommutativity\ncommutator/MS\ncommute/BZGRSD\ncommuter/M\nComoros\ncompaction/M\ncompactness/MS\ncompactor/MS\ncompact/TZGSPRDY\ncompanionableness/M\ncompanionable/P\ncompanionably\ncompanion/GBSMD\ncompanionship/MS\ncompanionway/MS\ncompany/MSDG\nCompaq/M\ncomparabilities\ncomparability/IM\ncomparableness/M\ncomparable/P\ncomparably/I\ncomparativeness/M\ncomparative/PYS\ncomparator/SM\ncompare/GRSDB\ncomparer/M\ncomparison/MS\ncompartmental\ncompartmentalization/SM\ncompartmentalize/DSG\ncompartment/SDMG\ncompassionateness/M\ncompassionate/PSDGY\ncompassion/MS\ncompass/MSDG\ncompatibility/IMS\ncompatibleness/M\ncompatible/SI\ncompatibly/I\ncompatriot/SM\ncompeer/DSGM\ncompellable\ncompelled\ncompelling/YM\ncompel/S\ncompendious\ncompendium/MS\ncompensable\ncompensated/U\ncompensate/XVNGSD\ncompensation/M\ncompensator/M\ncompensatory\ncompete/GSD\ncompetence/ISM\ncompetency/IS\ncompetency\'s\ncompetent/IY\ncompetition/SM\ncompetitiveness/SM\ncompetitive/YP\ncompetitor/MS\ncomp/GSYD\ncompilable/U\ncompilation/SAM\ncompile/ASDCG\ncompiler/CS\ncompiler\'s\ncomplacence/S\ncomplacency/SM\ncomplacent/Y\ncomplainant/MS\ncomplainer/M\ncomplain/GZRDS\ncomplaining/YU\ncomplaint/MS\ncomplaisance/SM\ncomplaisant/Y\ncomplected\ncomplementariness/M\ncomplementarity\ncomplementary/SP\ncomplementation/M\ncomplementer/M\ncomplement/ZSMRDG\ncomplete/BTYVNGPRSDX\ncompleted/U\ncompletely/I\ncompleteness/ISM\ncompleter/M\ncompletion/MI\ncomplexional\ncomplexion/DMS\ncomplexity/MS\ncomplexness/M\ncomplex/TGPRSDY\ncompliance/SM\ncompliant/Y\ncomplicatedness/M\ncomplicated/YP\ncomplicate/SDG\ncomplication/M\ncomplicator/SM\ncomplicit\ncomplicity/MS\ncomplier/M\ncomplimentary/U\ncomplimenter/M\ncompliment/ZSMRDG\ncomply/ZXRSDNG\ncomponent/SM\ncomport/GLSD\ncomportment/SM\ncompose/CGASDE\ncomposedness/M\ncomposed/PY\ncomposer/CM\ncomposers\ncomposite/YSDXNG\ncompositional/Y\ncomposition/CMA\ncompositions/C\ncompositor/MS\ncompost/DMGS\ncomposure/ESM\ncompote/MS\ncompounded/U\ncompounder/M\ncompound/RDMBGS\ncomprehend/DGS\ncomprehending/U\ncomprehensibility/SIM\ncomprehensibleness/IM\ncomprehensible/PI\ncomprehensibly/I\ncomprehension/IMS\ncomprehensiveness/SM\ncomprehensive/YPS\ncompressed/Y\ncompressibility/IM\ncompressible/I\ncompressional\ncompression/CSM\ncompressive/Y\ncompressor/MS\ncompress/SDUGC\ncomprise/GSD\ncompromiser/M\ncompromise/SRDGMZ\ncompromising/UY\nCompton/M\ncomptroller/SM\ncompulsion/SM\ncompulsiveness/MS\ncompulsive/PYS\ncompulsivity\ncompulsorily\ncompulsory/S\ncompunction/MS\nCompuserve/M\nCompuServe/M\ncomputability/M\ncomputable/UI\ncomputably\ncomputational/Y\ncomputation/SM\ncomputed/A\ncomputerese\ncomputerization/MS\ncomputerize/SDG\ncomputer/M\ncompute/RSDZBG\ncomputes/A\ncomputing/A\ncomradely/P\ncomradeship/MS\ncomrade/YMS\nComte/M\nConakry/M\nConan/M\nConant/M\nconcatenate/XSDG\nconcaveness/MS\nconcave/YP\nconceal/BSZGRDL\nconcealed/U\nconcealer/M\nconcealing/Y\nconcealment/MS\nconceded/Y\nconceitedness/SM\nconceited/YP\nconceit/SGDM\nconceivable/IU\nconceivably/I\nconceive/BGRSD\nconceiver/M\nconcentrate/VNGSDX\nconcentration/M\nconcentrator/MS\nconcentrically\nConcepci�n/M\nconceptional\nconception/MS\nconcept/SVM\nconceptuality/M\nconceptualization/A\nconceptualizations\nconceptualization\'s\nconceptualize/DRSG\nconceptualizing/A\nconceptual/Y\nconcerned/YU\nconcern/USGD\nconcerted/PY\nconcert/EDSG\nconcertina/MDGS\nconcertize/GDS\nconcertmaster/MS\nconcerto/SM\nconcert\'s\nconcessionaire/SM\nconcessional\nconcessionary\nconcession/R\nConcetta/M\nConcettina/M\nConchita/M\nconch/MDG\nconchs\nconcierge/SM\nconciliar\nconciliate/GNVX\nconciliation/ASM\nconciliator/MS\nconciliatory/A\nconciseness/SM\nconcise/TYRNPX\nconcision/M\nconclave/S\nconcluder/M\nconclude/RSDG\nconclusion/SM\nconclusive/IPY\nconclusiveness/ISM\nconcocter/M\nconcoction/SM\nconcoct/RDVGS\nconcomitant/YS\nconcordance/MS\nconcordant/Y\nconcordat/SM\nConcorde/M\nConcordia/M\nConcord/MS\nconcourse\nconcreteness/MS\nconcrete/NGXRSDPYM\nconcretion/M\nconcubinage/SM\nconcubine/SM\nconcupiscence/SM\nconcupiscent\nconcurrence/MS\nconcur/S\nconcussion/MS\nconcuss/VD\ncondemnate/XN\ncondemnation/M\ncondemnatory\ncondemner/M\ncondemn/ZSGRDB\ncondensate/NMXS\ncondensation/M\ncondenser/M\ncondense/ZGSD\ncondensible\ncondescend\ncondescending/Y\ncondescension/MS\ncondign\ncondiment/SM\ncondition/AGSJD\nconditionals\nconditional/UY\nconditioned/U\nconditioner/MS\nconditioning/M\ncondition\'s\ncondole\ncondolence/MS\ncondominium/MS\ncondom/SM\ncondone/GRSD\ncondoner/M\nCondorcet/M\ncondor/MS\ncondo/SM\nconduce/VGSD\nconduciveness/M\nconducive/P\nconductance/SM\nconductibility/SM\nconductible\nconduction/MS\nconductive/Y\nconductivity/MS\nconductor/MS\nconductress/MS\nconduct/V\nconduit/MS\nconeflower/M\nConestoga\nconey\'s\nconfabbed\nconfabbing\nconfab/MS\nconfabulate/XSDGN\nconfabulation/M\nconfectioner/M\nconfectionery/SM\nconfectionist\nconfection/RDMGZS\nconfect/S\nConfederacy/M\nconfederacy/MS\nconfederate/M\nConfederate/S\nconferee/MS\nconference/DSGM\nconferrable\nconferral/SM\nconferred\nconferrer/SM\nconferring\nconfer/SB\nconfessed/Y\nconfessional/SY\nconfession/MS\nconfessor/SM\nconfetti/M\nconfidante/SM\nconfidant/SM\nconfidence/SM\nconfidentiality/MS\nconfidentialness/M\nconfidential/PY\nconfident/Y\nconfider/M\nconfide/ZGRSD\nconfiding/PY\nconfiguration/ASM\nconfigure/AGSDB\nconfined/U\nconfine/L\nconfinement/MS\nconfiner/M\nconfirm/AGDS\nconfirmation/ASM\nconfirmatory\nconfirmedness/M\nconfirmed/YP\nconfiscate/DSGNX\nconfiscation/M\nconfiscator/MS\nconfiscatory\nconflagration/MS\nconflate/NGSDX\nconflation/M\nconflicting/Y\nconflict/SVGDM\nconfluence/MS\nconformable/U\nconformal\nconformance/SM\nconformational/Y\nconform/B\nconformer/M\nconformism/SM\nconformist/SM\nconformities\nconformity/MUI\nconfounded/Y\nconfound/R\nconfr�re/MS\nconfrontational\nconfrontation/SM\nconfronter/M\nconfront/Z\nConfucianism/SM\nConfucian/S\nConfucius/M\nconfusedness/M\nconfused/PY\nconfuse/RBZ\nconfusing/Y\nconfutation/MS\nconfute/GRSD\nconfuter/M\nconga/MDG\ncongeal/GSDL\ncongealment/MS\ncongeniality/UM\ncongenial/U\ncongeries/M\nconger/SM\ncongestion/MS\ncongest/VGSD\nconglomerate/XDSNGVM\nconglomeration/M\nCong/M\nCongolese\nCongo/M\ncongrats\ncongratulate/NGXSD\ncongratulation/M\ncongratulatory\ncongregate/DSXGN\ncongregational\nCongregational\ncongregationalism/MS\ncongregationalist/MS\nCongregationalist/S\ncongregation/M\ncongressional/Y\ncongressman/M\ncongressmen\nCongress/MS\ncongress/MSDG\ncongresspeople\ncongressperson/S\ncongresswoman/M\ncongresswomen\nCongreve/M\ncongruence/IM\ncongruences\ncongruency/M\ncongruential\ncongruent/YI\ncongruity/MSI\ncongruousness/IM\ncongruous/YIP\nconicalness/M\nconical/PSY\nconic/S\nconics/M\nconifer/MS\nconiferous\nconjectural/Y\nconjecture/GMDRS\nconjecturer/M\nconjoint\nconjugacy\nconjugal/Y\nconjugate/XVNGYSDP\nconjugation/M\nconjunct/DSV\nconjunctiva/MS\nconjunctive/YS\nconjunctivitis/SM\nconjuration/MS\nconjurer/M\nconjure/RSDZG\nconjuring/M\nconker/M\nconk/ZDR\nConley/M\nCon/M\nconman\nconnect/ADGES\nconnectedly/E\nconnectedness/ME\nconnected/U\nconnectible\nConnecticut/M\nconnection/AME\nconnectionless\nconnections/E\nconnective/SYM\nconnectivity/MS\nconnector/MS\nConnelly/M\nConner/M\nConnery/M\nconnexion/MS\nConney/M\nconn/GVDR\nConnie/M\nConni/M\nconniption/MS\nconnivance/MS\nconniver/M\nconnive/ZGRSD\nconnoisseur/MS\nConnor/SM\nconnotative/Y\nConn/RM\nconnubial/Y\nConny/M\nconquerable/U\nconquered/AU\nconqueror/MS\nconquer/RDSBZG\nconquers/A\nconquest/ASM\nconquistador/MS\nConrade/M\nConrad/M\nConrado/M\nConrail/M\nConroy/M\nConsalve/M\nconsanguineous/Y\nconsanguinity/SM\nconscienceless\nconscientiousness/MS\nconscientious/YP\nconscionable/U\nconsciousness/MUS\nconscious/UYSP\nconscription/SM\nconsecrated/AU\nconsecrates/A\nconsecrate/XDSNGV\nconsecrating/A\nconsecration/AMS\nconsecutiveness/M\nconsecutive/YP\nconsensus/SM\nconsenter/M\nconsenting/Y\nconsent/SZGRD\nconsequence\nconsequentiality/S\nconsequential/IY\nconsequentialness/M\nconsequently/I\nconsequent/PSY\nconservancy/SM\nconservationism\nconservationist/SM\nconservation/SM\nconservatism/SM\nconservativeness/M\nConservative/S\nconservative/SYP\nconservator/MS\nconservatory/MS\ncon/SGM\nconsiderable/I\nconsiderables\nconsiderably/I\nconsiderateness/MSI\nconsiderate/XIPNY\nconsideration/ASMI\nconsidered/U\nconsiderer/M\nconsider/GASD\nconsidering/S\nconsign/ASGD\nconsignee/SM\nconsignment/SM\nconsist/DSG\nconsistence/S\nconsistency/IMS\nconsistent/IY\nconsistory/MS\nconsolable/I\nConsolata/M\nconsolation/MS\nconsolation\'s/E\nconsolatory\nconsoled/U\nconsoler/M\nconsole/ZBG\nconsolidated/AU\nconsolidate/NGDSX\nconsolidates/A\nconsolidation/M\nconsolidator/SM\nconsoling/Y\nconsomm�/S\nconsonance/IM\nconsonances\nconsonantal\nconsonant/MYS\nconsortia\nconsortium/M\nconspectus/MS\nconspicuousness/IMS\nconspicuous/YIP\nconspiracy/MS\nconspiratorial/Y\nconspirator/SM\nconstable\nConstable/M\nconstabulary/MS\nconstance\nConstance/M\nConstancia/M\nconstancy/IMS\nConstancy/M\nConstanta/M\nConstantia/M\nConstantina/M\nConstantine/M\nConstantin/M\nConstantino/M\nConstantinople/M\nconstant/IY\nconstants\nconstellation/SM\nconsternate/XNGSD\nconsternation/M\nconstipate/XDSNG\nconstipation/M\nconstituency/MS\nconstituent/SYM\nconstituted/A\nconstitute/NGVXDS\nconstitutes/A\nconstituting/A\nConstitution\nconstitutionality\'s\nconstitutionality/US\nconstitutionally/U\nconstitutional/SY\nconstitution/AMS\nconstitutive/Y\nconstrain\nconstrainedly\nconstrained/U\nconstraint/MS\nconstriction/MS\nconstrictor/MS\nconstrict/SDGV\nconstruable\nconstruct/ASDGV\nconstructibility\nconstructible/A\nconstructional/Y\nconstructionist/MS\nconstruction/MAS\nconstructions/C\nconstructiveness/SM\nconstructive/YP\nconstructor/MS\nconstrue/GSD\nConsuela/M\nConsuelo/M\nconsular/S\nconsulate/MS\nconsul/KMS\nconsulship/MS\nconsultancy/S\nconsultant/MS\nconsultation/SM\nconsultative\nconsulted/A\nconsulter/M\nconsult/RDVGS\nconsumable/S\nconsumed/Y\nconsume/JZGSDB\nconsumerism/MS\nconsumerist/S\nconsumer/M\nconsuming/Y\nconsummate/DSGVY\nconsummated/U\nconsumption/SM\nconsumptive/YS\ncont\ncontact/BGD\ncontacted/A\ncontact\'s/A\ncontacts/A\ncontagion/SM\ncontagiousness/MS\ncontagious/YP\ncontainerization/SM\ncontainerize/GSD\ncontainer/M\ncontainment/SM\ncontain/SLZGBRD\ncontaminant/SM\ncontaminated/AU\ncontaminates/A\ncontaminate/SDCXNG\ncontaminating/A\ncontamination/CM\ncontaminative\ncontaminator/MS\ncontd\ncont\'d\ncontemn/SGD\ncontemplate/DVNGX\ncontemplation/M\ncontemplativeness/M\ncontemplative/PSY\ncontemporaneity/MS\ncontemporaneousness/M\ncontemporaneous/PY\ncontemptibleness/M\ncontemptible/P\ncontemptibly\ncontempt/M\ncontemptuousness/SM\ncontemptuous/PY\ncontentedly/E\ncontentedness/SM\ncontented/YP\ncontent/EMDLSG\ncontention/MS\ncontentiousness/SM\ncontentious/PY\ncontently\ncontentment/ES\ncontentment\'s\nconterminous/Y\ncontestable/I\ncontestant/SM\ncontested/U\ncontextualize/GDS\ncontiguity/MS\ncontiguousness/M\ncontiguous/YP\ncontinence/ISM\nContinental/S\ncontinental/SY\ncontinent/IY\nContinent/M\ncontinents\ncontinent\'s\ncontingency/SM\ncontingent/SMY\ncontinua\ncontinuable\ncontinual/Y\ncontinuance/ESM\ncontinuant/M\ncontinuation/ESM\ncontinue/ESDG\ncontinuer/M\ncontinuity/SEM\ncontinuousness/M\ncontinuous/YE\ncontinuum/M\ncontortionist/SM\ncontortion/MS\ncontort/VGD\ncontour\ncontraband/SM\ncontrabass/M\ncontraception/SM\ncontraceptive/S\ncontract/DG\ncontractible\ncontractile\ncontractual/Y\ncontradict/GDS\ncontradiction/MS\ncontradictorily\ncontradictoriness/M\ncontradictory/PS\ncontradistinction/MS\ncontraflow/S\ncontrail/M\ncontraindicate/SDVNGX\ncontraindication/M\ncontralto/SM\ncontrapositive/S\ncontraption/MS\ncontrapuntal/Y\ncontrariety/MS\ncontrarily\ncontrariness/MS\ncontrariwise\ncontrary/PS\ncontra/S\ncontrasting/Y\ncontrastive/Y\ncontrast/SRDVGZ\ncontravene/GSRD\ncontravener/M\ncontravention/MS\nContreras/M\ncontretemps/M\ncontribute/XVNZRD\ncontribution/M\ncontributive/Y\ncontributorily\ncontributor/SM\ncontributory/S\ncontriteness/M\ncontrite/NXP\ncontrition/M\ncontrivance/SM\ncontriver/M\ncontrive/ZGRSD\ncontrol/CS\ncontrollability/M\ncontrollable/IU\ncontrollably/U\ncontrolled/CU\ncontroller/SM\ncontrolling/C\ncontrol\'s\ncontroversialists\ncontroversial/UY\ncontroversy/MS\ncontrovert/DGS\ncontrovertible/I\ncontumacious/Y\ncontumacy/MS\ncontumelious\ncontumely/MS\ncontuse/NGXSD\ncontusion/M\nconundrum/SM\nconurbation/MS\nconvalesce/GDS\nconvalescence/SM\nconvalescent/S\nconvect/DSVG\nconvectional\nconvection/MS\nconvector\nconvene/ASDG\nconvener/MS\nconvenience/ISM\nconvenient/IY\nconventicle/SM\nconventionalism/M\nconventionalist/M\nconventionality/SUM\nconventionalize/GDS\nconventional/UY\nconvention/MA\nconventions\nconvergence/MS\nconvergent\nconversant/Y\nconversationalist/SM\nconversational/Y\nconversation/SM\nconversazione/M\nconverse/Y\nconversion/AM\nconversioning\nconverted/U\nconverter/MS\nconvert/GADS\nconvertibility\'s/I\nconvertibility/SM\nconvertibleness/M\nconvertible/PS\nconvexity/MS\nconvex/Y\nconveyance/DRSGMZ\nconveyancer/M\nconveyancing/M\nconvey/BDGS\nconveyor/MS\nconviction/MS\nconvict/SVGD\nconvinced/U\nconvincer/M\nconvince/RSDZG\nconvincingness/M\nconvincing/PUY\nconviviality/MS\nconvivial/Y\nconvoke/GSD\nconvolute/XDNY\nconvolution/M\nconvolve/C\nconvolved\nconvolves\nconvolving\nconvoy/GMDS\nconvulse/SDXVNG\nconvulsion/M\nconvulsiveness/M\nconvulsive/YP\nConway/M\ncony/SM\ncoo/GSD\ncookbook/SM\ncooked/AU\nCooke/M\ncooker/M\ncookery/MS\ncook/GZDRMJS\nCookie/M\ncookie/SM\ncooking/M\nCook/M\ncookout/SM\ncooks/A\ncookware/SM\ncooky\'s\ncoolant/SM\ncooled/U\ncooler/M\nCooley/M\ncoolheaded\nCoolidge/M\ncoolie/MS\ncoolness/MS\ncool/YDRPJGZTS\ncoon/MS!\ncoonskin/MS\ncooperage/MS\ncooperate/VNGXSD\ncooperation/M\ncooperativeness/SM\ncooperative/PSY\ncooperator/MS\ncooper/GDM\nCooper/M\ncoop/MDRGZS\nCoop/MR\ncoordinated/U\ncoordinateness/M\ncoordinate/XNGVYPDS\ncoordination/M\ncoordinator/MS\nCoors/M\ncootie/SM\ncoot/MS\ncopay/S\nCopeland/M\nCopenhagen/M\ncoper/M\nCopernican\nCopernicus/M\ncope/S\ncopied/A\ncopier/M\ncopies/A\ncopilot/SM\ncoping/M\ncopiousness/SM\ncopious/YP\ncoplanar\nCopland/M\nCopley/M\ncopolymer/MS\ncopora\ncopped\nCopperfield/M\ncopperhead/MS\ncopper/MSGD\ncopperplate/MS\ncoppersmith/M\ncoppersmiths\ncoppery\ncoppice\'s\ncopping\nCoppola/M\ncopra/MS\ncoprolite/M\ncoprophagous\ncopse/M\ncops/GDS\ncop/SJMDRG\ncopter/SM\nCoptic/M\ncopula/MS\ncopulate/XDSNGV\ncopulation/M\ncopulative/S\ncopybook/MS\ncopycat/SM\ncopycatted\ncopycatting\ncopyist/SM\ncopy/MZBDSRG\ncopyrighter/M\ncopyright/MSRDGZ\ncopywriter/MS\ncoquetry/MS\ncoquette/DSMG\ncoquettish/Y\nCorabella/M\nCorabelle/M\nCorabel/M\ncoracle/SM\nCoralie/M\nCoraline/M\ncoralline\nCoral/M\ncoral/SM\nCoralyn/M\nCora/M\ncorbel/GMDJS\nCorbet/M\nCorbett/M\nCorbie/M\nCorbin/M\nCorby/M\ncordage/MS\ncorded/AE\nCordelia/M\nCordelie/M\nCordell/M\ncorder/AM\nCordey/M\ncord/FSAEM\ncordiality/MS\ncordialness/M\ncordial/PYS\nCordie/M\ncordillera/MS\nCordilleras\nCordi/M\ncording/MA\ncordite/MS\ncordless\nCord/M\nCordoba\ncordon/DMSG\ncordovan/SM\nCordula/M\ncorduroy/GDMS\nCordy/M\ncored/A\nCoreen/M\nCorella/M\ncore/MZGDRS\nCorenda/M\nCorene/M\ncorer/M\ncorespondent/MS\nCoretta/M\nCorette/M\nCorey/M\nCorfu/M\ncorgi/MS\ncoriander/SM\nCorie/M\nCorilla/M\nCori/M\nCorina/M\nCorine/M\ncoring/M\nCorinna/M\nCorinne/M\nCorinthian/S\nCorinthians/M\nCorinth/M\nCoriolanus/M\nCoriolis/M\nCorissa/M\nCoriss/M\ncorked/U\ncorker/M\ncork/GZDRMS\nCork/M\ncorkscrew/DMGS\ncorks/U\nCorliss/M\nCorly/M\nCormack/M\ncorm/MS\ncormorant/MS\nCornall/M\ncornball/SM\ncornbread/S\ncorncob/SM\ncorncrake/M\ncorneal\ncornea/SM\nCorneille/M\nCornela/M\nCornelia/M\nCornelius/M\nCornelle/M\nCornell/M\ncorner/GDM\ncornerstone/MS\ncornet/SM\nCorney/M\ncornfield/SM\ncornflake/S\ncornflour/M\ncornflower/SM\ncorn/GZDRMS\ncornice/GSDM\nCornie/M\ncornily\ncorniness/S\nCornish/S\ncornmeal/S\ncornrow/GDS\ncornstalk/MS\ncornstarch/SM\ncornucopia/MS\nCornwallis/M\nCornwall/M\nCorny/M\ncorny/RPT\ncorolla/MS\ncorollary/SM\nCoronado/M\ncoronal/MS\ncoronary/S\ncorona/SM\ncoronate/NX\ncoronation/M\ncoroner/MS\ncoronet/DMS\nCorot/M\ncoroutine/SM\nCorp\ncorporal/SYM\ncorpora/MS\ncorporate/INVXS\ncorporately\ncorporation/MI\ncorporatism/M\ncorporatist\ncorporeality/MS\ncorporeal/IY\ncorporealness/M\ncorp/S\ncorpse/M\ncorpsman/M\ncorpsmen\ncorps/SM\ncorpulence/MS\ncorpulentness/S\ncorpulent/YP\ncorpuscle/SM\ncorpuscular\ncorpus/M\ncorr\ncorralled\ncorralling\ncorral/MS\ncorrectable/U\ncorrect/BPSDRYTGV\ncorrected/U\ncorrectional\ncorrection/MS\ncorrective/YPS\ncorrectly/I\ncorrectness/MSI\ncorrector/MS\nCorreggio/M\ncorrelated/U\ncorrelate/SDXVNG\ncorrelation/M\ncorrelative/YS\nCorrena/M\ncorrespond/DSG\ncorrespondence/MS\ncorrespondent/SM\ncorresponding/Y\nCorrey/M\nCorrianne/M\ncorridor/SM\nCorrie/M\ncorrigenda\ncorrigendum/M\ncorrigible/I\nCorri/M\nCorrina/M\nCorrine/M\nCorrinne/M\ncorroborated/U\ncorroborate/GNVXDS\ncorroboration/M\ncorroborative/Y\ncorroborator/MS\ncorroboratory\ncorrode/SDG\ncorrodible\ncorrosion/SM\ncorrosiveness/M\ncorrosive/YPS\ncorrugate/NGXSD\ncorrugation/M\ncorrupt/DRYPTSGV\ncorrupted/U\ncorrupter/M\ncorruptibility/SMI\ncorruptible/I\ncorruption/IM\ncorruptions\ncorruptive/Y\ncorruptness/MS\nCorry/M\ncorsage/MS\ncorsair/SM\ncorset/GMDS\nCorsica/M\nCorsican/S\ncort�ge/MS\nCortes/S\ncortex/M\nCortez\'s\ncortical/Y\ncortices\ncorticosteroid/SM\nCortie/M\ncortisone/SM\nCortland/M\nCort/M\nCortney/M\nCorty/M\ncorundum/MS\ncoruscate/XSDGN\ncoruscation/M\nCorvallis/M\ncorvette/MS\nCorvus/M\nCory/M\nCos\nCosby/M\nCosetta/M\nCosette/M\ncos/GDS\ncosignatory/MS\ncosign/SRDZG\ncosily\nCosimo/M\ncosine/MS\ncosiness/MS\nCosme/M\ncosmetically\ncosmetician/MS\ncosmetic/SM\ncosmetologist/MS\ncosmetology/MS\ncosmic\ncosmical/Y\ncosmogonist/MS\ncosmogony/SM\ncosmological/Y\ncosmologist/MS\ncosmology/SM\nCosmo/M\ncosmonaut/MS\ncosmopolitanism/MS\ncosmopolitan/SM\ncosmos/SM\ncosponsor/DSG\ncossack/S\nCossack/SM\ncosset/GDS\nCosta/M\nCostanza/M\ncostarred\ncostarring\ncostar/S\nCostello/M\ncostiveness/M\ncostive/PY\ncostless\ncostliness/SM\ncostly/RTP\ncost/MYGVJS\nCostner/M\ncostumer/M\ncostume/ZMGSRD\ncotangent/SM\nCote/M\ncote/MS\ncoterie/MS\ncoterminous/Y\ncotillion/SM\nCotonou/M\nCotopaxi/M\ncot/SGMD\ncottager/M\ncottage/ZMGSRD\ncottar\'s\ncotted\ncotter/SDM\ncotton/GSDM\nCotton/M\ncottonmouth/M\ncottonmouths\ncottonseed/MS\ncottontail/SM\ncottonwood/SM\ncottony\ncotyledon/MS\ncouching/M\ncouch/MSDG\ncougar/MS\ncougher/M\ncough/RDG\ncoughs\ncouldn\'t\ncould/T\ncould\'ve\ncoul�e/MS\nCoulomb/M\ncoulomb/SM\ncouncilman/M\ncouncilmen\ncouncilor/MS\ncouncilperson/S\ncouncil/SM\ncouncilwoman/M\ncouncilwomen\ncounsel/GSDM\ncounsellings\ncounselor/MS\ncountability/E\ncountable/U\ncountably/U\ncountdown/SM\ncounted/U\ncount/EGARDS\ncountenance/EGDS\ncountenancer/M\ncountenance\'s\ncounteract/DSVG\ncounteraction/SM\ncounterargument/SM\ncounterattack/DRMGS\ncounterbalance/MSDG\ncounterclaim/GSDM\ncounterclockwise\ncounterculture/MS\ncountercyclical\ncounterespionage/MS\ncounterexample/S\ncounterfeiter/M\ncounterfeit/ZSGRD\ncounterflow\ncounterfoil/MS\ncounterforce/M\ncounter/GSMD\ncounterinsurgency/MS\ncounterintelligence/MS\ncounterintuitive\ncountermand/DSG\ncounterman/M\ncountermeasure/SM\ncountermen\ncounteroffensive/SM\ncounteroffer/SM\ncounterpane/SM\ncounterpart/SM\ncounterpoint/GSDM\ncounterpoise/GMSD\ncounterproductive\ncounterproposal/M\ncounterrevolutionary/MS\ncounterrevolution/MS\ncounter\'s/E\ncounters/E\ncountersignature/MS\ncountersign/SDG\ncountersink/SG\ncounterspy/MS\ncounterstrike\ncountersunk\ncountertenor/SM\ncountervail/DSG\ncounterweight/GMDS\ncountess/MS\ncountless/Y\ncountrify/D\ncountryman/M\ncountrymen\ncountry/MS\ncountryside/MS\ncountrywide\ncountrywoman/M\ncountrywomen\ncounty/SM\ncoup/ASDG\ncoupe/MS\nCouperin/M\ncouple/ACU\ncoupled/CU\ncoupler/C\ncouplers\ncoupler\'s\ncouple\'s\ncouples/CU\ncouplet/SM\ncoupling\'s/C\ncoupling/SM\ncoupon/SM\ncoup\'s\ncourage/MS\ncourageously\ncourageousness/MS\ncourageous/U\ncourages/E\nCourbet/M\ncourgette/MS\ncourier/GMDS\ncourse/EGSRDM\ncourser\'s/E\ncourser/SM\ncourse\'s/AF\ncourses/FA\ncoursework\ncoursing/M\nCourtenay/M\ncourteousness/EM\ncourteousnesses\ncourteous/PEY\ncourtesan/MS\ncourtesied\ncourtesy/ESM\ncourtesying\ncourt/GZMYRDS\ncourthouse/MS\ncourtier/SM\ncourtliness/MS\ncourtly/RTP\nCourt/M\nCourtnay/M\nCourtney/M\ncourtroom/MS\ncourtship/SM\ncourtyard/SM\ncouscous/MS\ncousinly/U\ncousin/YMS\nCousteau/M\ncouture/SM\ncouturier/SM\ncovalent/Y\ncovariance/SM\ncovariant/S\ncovariate/SN\ncovary\ncove/DRSMZG\ncovenanted/U\ncovenanter/M\ncovenant/SGRDM\ncoven/SM\nCovent/M\nCoventry/MS\ncoverable/E\ncover/AEGUDS\ncoverage/MS\ncoverall/DMS\ncoverer/AME\ncovering/MS\ncoverlet/MS\ncoversheet\ncovers/M\ncovertness/SM\ncovert/YPS\ncoveter/M\ncoveting/Y\ncovetousness/SM\ncovetous/PY\ncovet/SGRD\ncovey/SM\ncovington\ncowardice/MS\ncowardliness/MS\ncowardly/P\nCoward/M\ncoward/MYS\ncowbell/MS\ncowbird/MS\ncowboy/MS\ncowcatcher/SM\ncowed/Y\ncowering/Y\ncower/RDGZ\ncowgirl/MS\ncowhand/S\ncowherd/SM\ncowhide/MGSD\nCowley/M\ncowlick/MS\ncowling/M\ncowl/SGMD\ncowman/M\ncow/MDRSZG\ncowmen\ncoworker/MS\nCowper/M\ncowpoke/MS\ncowpony\ncowpox/MS\ncowpuncher/M\ncowpunch/RZ\ncowrie/SM\ncowshed/SM\ncowslip/MS\ncoxcomb/MS\nCox/M\ncox/MDSG\ncoxswain/GSMD\ncoy/CDSG\ncoyer\ncoyest\ncoyly\nCoy/M\ncoyness/MS\ncoyote/SM\ncoypu/SM\ncozenage/MS\ncozen/SGD\ncozily\ncoziness/MS\nCozmo/M\nCozumel/M\ncozy/DSRTPG\nCPA\ncpd\nCPI\ncpl\nCpl\nCPO\nCPR\ncps\nCPU/SM\ncrabapple\ncrabbedness/M\ncrabbed/YP\nCrabbe/M\ncrabber/MS\ncrabbily\ncrabbiness/S\ncrabbing/M\ncrabby/PRT\ncrabgrass/S\ncrablike\ncrab/MS\ncrackable/U\ncrackdown/MS\ncrackerjack/S\ncracker/M\ncrackle/GJDS\ncrackling/M\ncrackly/RT\ncrackpot/SM\ncrackup/S\ncrack/ZSBYRDG\ncradler/M\ncradle/SRDGM\ncradling/M\ncraftily\ncraftiness/SM\nCraft/M\ncraft/MRDSG\ncraftsman/M\ncraftsmanship/SM\ncraftsmen\ncraftspeople\ncraftspersons\ncraftswoman\ncraftswomen\ncrafty/TRP\nCraggie/M\ncragginess/SM\nCraggy/M\ncraggy/RTP\ncrag/SM\nCraig/M\nCramer/M\ncrammed\ncrammer/M\ncramming\ncramper/M\ncramp/MRDGS\ncrampon/SM\ncram/S\nCranach/M\ncranberry/SM\nCrandall/M\ncrane/DSGM\ncranelike\nCrane/M\nCranford/M\ncranial\ncranium/MS\ncrankcase/MS\ncrankily\ncrankiness/MS\ncrank/SGTRDM\ncrankshaft/MS\ncranky/TRP\nCranmer/M\ncranny/DSGM\nCranston/M\ncrape/SM\ncrapped\ncrappie/M\ncrapping\ncrappy/RST\ncrapshooter/SM\ncrap/SMDG!\ncrasher/M\ncrashing/Y\ncrash/SRDGZ\ncrassness/MS\ncrass/TYRP\ncrate/DSRGMZ\ncrater/DMG\nCrater/M\ncravat/SM\ncravatted\ncravatting\ncrave/DSRGJ\ncravenness/SM\ncraven/SPYDG\ncraver/M\ncraving/M\ncrawdad/S\ncrawfish\'s\nCrawford/M\ncrawler/M\ncrawl/RDSGZ\ncrawlspace/S\ncrawlway\ncrawly/TRS\ncraw/SYM\ncrayfish/GSDM\nCrayola/M\ncrayon/GSDM\nCray/SM\ncraze/GMDS\ncrazily\ncraziness/MS\ncrazy/SRTP\ncreakily\ncreakiness/SM\ncreak/SDG\ncreaky/PTR\ncreamer/M\ncreamery/MS\ncreamily\ncreaminess/SM\ncream/SMRDGZ\ncreamy/TRP\ncreased/CU\ncrease/IDRSG\ncrease\'s\ncreases/C\ncreasing/C\ncreated/U\ncreate/XKVNGADS\ncreationism/MS\ncreationist/MS\nCreation/M\ncreation/MAK\ncreativeness/SM\ncreative/YP\ncreativities\ncreativity/K\ncreativity\'s\nCreator/M\ncreator/MS\ncreatureliness/M\ncreaturely/P\ncreature/YMS\ncr�che/SM\ncredence/MS\ncredent\ncredential/SGMD\ncredenza/SM\ncredibility/IMS\ncredible/I\ncredibly/I\ncreditability/M\ncreditableness/M\ncreditable/P\ncreditably/E\ncredited/U\ncredit/EGBSD\ncreditor/MS\ncredit\'s\ncreditworthiness\ncredo/SM\ncredulity/ISM\ncredulous/IY\ncredulousness/SM\ncreedal\ncreed/C\ncreeds\ncreed\'s\ncreekside\ncreek/SM\nCreek/SM\ncreel/SMDG\nCree/MDS\ncreeper/M\ncreepily\ncreepiness/SM\ncreep/SGZR\ncreepy/PRST\nCreigh/M\nCreight/M\nCreighton/M\ncremate/XDSNG\ncremation/M\ncrematoria\ncrematorium/MS\ncrematory/S\ncreme/S\ncrenelate/XGNSD\ncrenelation/M\nCreole/MS\ncreole/SM\nCreon/M\ncreosote/MGDS\ncrepe/DSGM\ncrept\ncrescendoed\ncrescendoing\ncrescendo/SCM\ncrescent/MS\ncress/S\ncrestfallenness/M\ncrestfallen/PY\ncresting/M\ncrestless\ncrest/SGMD\nCrestview/M\ncretaceous\nCretaceously/M\nCretaceous/Y\nCretan/S\nCrete/M\ncretinism/MS\ncretin/MS\ncretinous\ncretonne/SM\ncrevasse/DSMG\ncrevice/SM\ncrew/DMGS\ncrewel/SM\ncrewelwork/SM\ncrewman/M\ncrewmen\ncribbage/SM\ncribbed\ncribber/SM\ncribbing/M\ncrib/SM\nCrichton/M\ncricketer/M\ncricket/SMZRDG\ncrick/GDSM\nCrick/M\ncried/C\ncrier/CM\ncries/C\nCrimea/M\nCrimean\ncrime/GMDS\ncriminality/MS\ncriminalization/C\ncriminalize/GC\ncriminal/SYM\ncriminologist/SM\ncriminology/MS\ncrimper/M\ncrimp/RDGS\ncrimson/DMSG\ncringer/M\ncringe/SRDG\ncrinkle/DSG\ncrinkly/TRS\nCrin/M\ncrinoline/SM\ncripple/GMZDRS\ncrippler/M\ncrippling/Y\nCrisco/M\ncrises\ncrisis/M\nCris/M\ncrisper/M\ncrispiness/SM\ncrispness/MS\ncrisp/PGTYRDS\ncrispy/RPT\ncriss\ncrisscross/GDS\nCrissie/M\nCrissy/M\nCristabel/M\nCristal/M\nCrista/M\nCristen/M\nCristian/M\nCristiano/M\nCristie/M\nCristi/M\nCristina/M\nCristine/M\nCristin/M\nCristionna/M\nCristobal/M\nCristy/M\ncriteria\ncriterion/M\ncriticality\ncritically/U\ncriticalness/M\ncritical/YP\ncriticism/MS\ncriticized/U\ncriticize/GSRDZ\ncriticizer/M\ncriticizes/A\ncriticizingly/S\ncriticizing/UY\ncritic/MS\ncritique/MGSD\ncritter/SM\nCr/M\ncroaker/M\ncroak/SRDGZ\ncroaky/RT\nCroatia/M\nCroatian/S\nCroat/SM\nCroce/M\ncrocheter/M\ncrochet/RDSZJG\ncrockery/SM\nCrockett/M\nCrockpot/M\ncrock/SGRDM\ncrocodile/MS\ncrocus/SM\nCroesus/SM\ncrofter/M\ncroft/MRGZS\ncroissant/MS\nCroix/M\nCromwellian\nCromwell/M\ncrone/SM\nCronin/M\nCronkite/M\nCronus/M\ncrony/SM\ncrookedness/SM\ncrooked/TPRY\nCrookes/M\ncrookneck/MS\ncrook/SGDM\ncrooner/M\ncroon/SRDGZ\ncropland/MS\ncrop/MS\ncropped\ncropper/SM\ncropping\ncroquet/MDSG\ncroquette/SM\nCrosby/M\ncrosier/SM\ncrossarm\ncrossbarred\ncrossbarring\ncrossbar/SM\ncrossbeam/MS\ncrossbones\ncrossbowman/M\ncrossbowmen\ncrossbow/SM\ncrossbred/S\ncrossbreed/SG\ncrosscheck/SGD\ncrosscurrent/SM\ncrosscut/SM\ncrosscutting\ncrossed/UA\ncrosses/UA\ncrossfire/SM\ncrosshatch/GDS\ncrossing/M\nCross/M\ncrossness/MS\ncrossover/MS\ncrosspatch/MS\ncrosspiece/SM\ncrosspoint\ncrossproduct/S\ncrossroad/GSM\ncrossroads/M\ncrosstalk/M\ncrosstown\ncrosswalk/MS\ncrossway/M\ncrosswind/SM\ncrosswise\ncrossword/MS\ncross/ZTYSRDMPBJG\ncrotchetiness/M\ncrotchet/MS\ncrotchety/P\ncrotchless\ncrotch/MDS\ncrouch/DSG\ncroupier/M\ncroup/SMDG\ncroupy/TZR\ncro�ton/MS\ncrowbait\ncrowbarred\ncrowbarring\ncrowbar/SM\ncrowdedness/M\ncrowded/P\ncrowd/MRDSG\ncrowfeet\ncrowfoot/M\ncrow/GDMS\nCrowley/M\ncrowned/U\ncrowner/M\ncrown/RDMSJG\ncrozier\'s\nCRT/S\ncrucial/Y\ncrucible/MS\ncrucifiable\ncrucifixion/MS\nCrucifixion/MS\ncrucifix/SM\ncruciform/S\ncrucify/NGDS\ncrudded\ncrudding\ncruddy/TR\ncrudeness/MS\ncrude/YSP\ncrudit�s\ncrudity/MS\ncrud/STMR\ncruelness/MS\ncruelty/SM\ncruel/YRTSP\ncruet/MS\ncruft\ncrufty\nCruikshank/M\ncruise/GZSRD\ncruiser/M\ncruller/SM\ncrumb/GSYDM\ncrumble/DSJG\ncrumbliness/MS\ncrumbly/PTRS\ncrumby/RT\ncrumminess/S\ncrummy/SRTP\ncrump\ncrumpet/SM\ncrumple/DSG\ncrunch/DSRGZ\ncrunchiness/MS\ncrunchy/TRP\ncrupper/MS\ncrusade/GDSRMZ\ncrusader/M\ncruse/MS\ncrushable/U\ncrusher/M\ncrushing/Y\ncrushproof\ncrush/SRDBGZ\nCrusoe/M\ncrustacean/MS\ncrustal\ncrust/GMDS\ncrustily\ncrustiness/SM\ncrusty/SRTP\ncrutch/MDSG\nCrux/M\ncrux/MS\nCruz/M\ncrybaby/MS\ncry/JGDRSZ\ncryogenic/S\ncryogenics/M\ncryostat/M\ncryosurgery/SM\ncryptanalysis/M\ncryptanalyst/M\ncryptanalytic\ncrypt/CS\ncryptic\ncryptically\ncryptogram/MS\ncryptographer/MS\ncryptographic\ncryptographically\ncryptography/MS\ncryptologic\ncryptological\ncryptologist/M\ncryptology/M\nCryptozoic/M\ncrypt\'s\ncrystalline/S\ncrystallite/SM\ncrystallization/AMS\ncrystallized/UA\ncrystallizes/A\ncrystallize/SRDZG\ncrystallizing/A\ncrystallographer/MS\ncrystallographic\ncrystallography/M\nCrystal/M\ncrystal/SM\nCrysta/M\nCrystie/M\nCs\nC\'s\ncs/EA\ncs\'s\nCST\nct\nCT\nCthrine/M\nCt/M\nctn\nctr\nCuba/M\nCuban/S\ncubbed\ncubbing\ncubbyhole/MS\ncuber/M\ncube/SM\ncubical/Y\ncubicle/SM\ncubic/YS\ncubism/SM\ncubist/MS\ncubit/MS\ncub/MDRSZG\ncuboid\nCuchulain/M\ncuckold/GSDM\ncuckoldry/MS\ncuckoo/SGDM\ncucumber/MS\ncuddle/GSD\ncuddly/TRP\ncu/DG\ncudgel/GSJMD\ncud/MS\ncue/MS\ncuff/GSDM\nCuisinart/M\ncuisine/MS\nCulbertson/M\nculinary\nCullan/M\ncull/DRGS\ncullender\'s\nCullen/M\nculler/M\nCulley/M\nCullie/M\nCullin/M\nCull/MN\nCully/M\nculminate/XSDGN\nculmination/M\nculotte/S\nculpability/MS\nculpable/I\nculpableness/M\nculpably\nculpa/SM\nculprit/SM\ncultism/SM\ncultist/SM\ncultivable\ncultivated/U\ncultivate/XBSDGN\ncultivation/M\ncultivator/SM\ncult/MS\ncultural/Y\ncultured/U\nculture/SDGM\nCulver/MS\nculvert/SM\nCu/M\ncumber/DSG\nCumberland/M\ncumbersomeness/MS\ncumbersome/YP\ncumbrous\ncumin/MS\ncummerbund/MS\nCummings\ncumquat\'s\ncum/S\ncumulate/XVNGSD\ncumulation/M\ncumulative/Y\ncumuli\ncumulonimbi\ncumulonimbus/M\ncumulus/M\nCunard/M\ncuneiform/S\ncunnilingus/SM\nCunningham/M\ncunningness/M\ncunning/RYSPT\ncunt/SM!\ncupboard/SM\ncupcake/SM\nCupertino/M\ncupful/SM\ncupidinously\ncupidity/MS\nCupid/M\ncupid/S\ncup/MS\ncupola/MDGS\ncupped\ncupping/M\ncupric\ncuprous\ncurability/MS\ncurable/IP\ncurableness/MI\ncurably/I\nCuracao/M\ncuracy/SM\ncurare/MS\ncurate/VGMSD\ncurative/YS\ncuratorial\ncurator/KMS\ncurbing/M\ncurbside\ncurb/SJDMG\ncurbstone/MS\nCurcio/M\ncurdle/SDG\ncurd/SMDG\ncured/U\ncure/KBDRSGZ\ncurer/MK\ncurettage/SM\ncurfew/SM\ncurfs\ncuriae\ncuria/M\ncur/IBS\nCurie/M\ncurie/SM\ncuriosity/SM\ncurio/SM\ncuriousness/SM\ncurious/TPRY\nCuritiba/M\ncurium/MS\ncurler/SM\ncurlew/MS\ncurlicue/MGDS\ncurliness/SM\ncurling/M\ncurl/UDSG\ncurlycue\'s\ncurly/PRT\ncurmudgeon/MYS\nCurran/M\ncurrant/SM\ncurred/AFI\ncurrency\'s\ncurrency/SF\ncurrent/FSY\ncurrently/A\ncurrentness/M\nCurrey/M\ncurricle/M\ncurricula\ncurricular\ncurriculum/M\nCurrie/M\ncurrier/M\nCurrier/M\ncurring/FAI\nCurr/M\ncurrycomb/DMGS\nCurry/MR\ncurry/RSDMG\ncur\'s\ncurs/ASDVG\ncurse/A\ncursedness/M\ncursed/YRPT\ncurse\'s\ncursive/EPYA\ncursiveness/EM\ncursives\ncursor/DMSG\ncursorily\ncursoriness/SM\ncursory/P\ncurtailer/M\ncurtail/LSGDR\ncurtailment/SM\ncurtain/GSMD\nCurtice/M\nCurtis/M\nCurt/M\ncurtness/MS\ncurtsey\'s\ncurtsy/SDMG\ncurt/TYRP\ncurvaceousness/S\ncurvaceous/YP\ncurvature/MS\ncurved/A\ncurved\'s\ncurve/DSGM\ncurvilinearity/M\ncurvilinear/Y\ncurving/M\ncurvy/RT\ncushion/SMDG\nCushman/M\ncushy/TR\ncuspid/MS\ncuspidor/MS\ncusp/MS\ncussedness/M\ncussed/YP\ncuss/EGDSR\ncusses/F\ncussing/F\ncuss\'s\ncustard/MS\nCuster/M\ncustodial\ncustodianship/MS\ncustodian/SM\ncustody/MS\ncustomarily\ncustomariness/M\ncustomary/PS\ncustomer/M\ncustomhouse/S\ncustomization/SM\ncustomize/ZGBSRD\ncustom/SMRZ\ncutaneous/Y\ncutaway/SM\ncutback/SM\ncuteness/MS\ncute/SPY\ncutesy/RT\ncuticle/SM\ncutlass/MS\ncutler/SM\ncutlery/MS\ncutlet/SM\ncut/MRST\ncutoff/MS\ncutout/SM\ncutter/SM\ncutthroat/SM\ncutting/MYS\ncuttlebone/SM\ncuttlefish/MS\ncuttle/M\ncutup/MS\ncutworm/MS\nCuvier/M\nCuzco/M\nCV\ncw\ncwt\nCyanamid/M\ncyanate/M\ncyanic\ncyanide/GMSD\ncyan/MS\ncyanogen/M\nCybele/M\ncybernetic/S\ncybernetics/M\ncyberpunk/S\ncyberspace/S\nCybill/M\nCybil/M\nCyb/M\ncyborg/S\nCyclades\ncyclamen/MS\ncycle/ASDG\ncycler\ncycle\'s\ncycleway/S\ncyclic\ncyclical/SY\ncycling/M\ncyclist/MS\ncyclohexanol\ncycloidal\ncycloid/SM\ncyclometer/MS\ncyclone/SM\ncyclonic\ncyclopean\ncyclopedia/MS\ncyclopes\nCyclopes\ncyclops\nCyclops/M\ncyclotron/MS\ncyder/SM\ncygnet/MS\nCygnus/M\ncylinder/GMDS\ncylindric\ncylindrical/Y\nCy/M\ncymbalist/MS\ncymbal/SM\nCymbre/M\nCynde/M\nCyndia/M\nCyndie/M\nCyndi/M\nCyndy/M\ncynical/UY\ncynicism/MS\ncynic/MS\ncynosure/SM\nCynthea/M\nCynthia/M\nCynthie/M\nCynthy/M\ncypher/MGSD\ncypreses\ncypress/SM\nCyprian\nCypriot/SM\nCyprus/M\nCyrano/M\nCyrille/M\nCyrillic\nCyrill/M\nCyrillus/M\nCyril/M\nCyrus/M\ncystic\ncyst/MS\ncytochemistry/M\ncytochrome/M\ncytologist/MS\ncytology/MS\ncytolysis/M\ncytoplasmic\ncytoplasm/SM\ncytosine/MS\ncytotoxic\nCZ\nczarevitch/M\nczarina/SM\nczarism/M\nczarist/S\nczarship\nczar/SM\nCzech\nCzechoslovakia/M\nCzechoslovakian/S\nCzechoslovak/S\nCzechs\nCzerniak/M\nCzerny/M\nD\nDA\ndabbed\ndabber/MS\ndabbing\ndabbler/M\ndabble/RSDZG\ndab/S\nDacca\'s\ndace/MS\nDacey/M\ndacha/SM\nDachau/M\ndachshund/SM\nDacia/M\nDacie/M\nDacron/MS\ndactylic/S\ndactyl/MS\nDacy/M\nDadaism/M\ndadaism/S\nDadaist/M\ndadaist/S\nDada/M\ndaddy/SM\nDade/M\ndado/DMG\ndadoes\ndad/SM\nDaedalus/M\nDael/M\ndaemonic\ndaemon/SM\nDaffie/M\nDaffi/M\ndaffiness/S\ndaffodil/MS\nDaffy/M\ndaffy/PTR\ndaftness/MS\ndaft/TYRP\nDAG\ndagger/DMSG\nDag/M\nDagmar/M\nDagny/M\nDaguerre/M\ndaguerreotype/MGDS\nDagwood/M\nDahlia/M\ndahlia/MS\nDahl/M\nDahomey/M\nDaile/M\ndailiness/MS\ndaily/PS\nDaimler/M\ndaintily\ndaintiness/MS\ndainty/TPRS\ndaiquiri/SM\ndairying/M\ndairyland\ndairymaid/SM\ndairyman/M\ndairymen\ndairy/MJGS\ndairywoman/M\ndairywomen\nDaisey/M\nDaisie/M\nDaisi/M\ndais/SM\nDaisy/M\ndaisy/SM\nDakar/M\nDakotan\nDakota/SM\nDale/M\nDalenna/M\ndale/SMH\ndaleth/M\nDaley/M\nDalhousie/M\nDalia/M\nDalian/M\nDalila/M\nDali/SM\nDallas/M\ndalliance/SM\ndallier/M\nDalli/MS\nDall/M\nDallon/M\ndally/ZRSDG\nDal/M\nDalmatia/M\ndalmatian/S\nDalmatian/SM\nDaloris/M\nDalston/M\nDalt/M\nDalton/M\nDaly/M\ndamageable\ndamaged/U\ndamage/MZGRSD\ndamager/M\ndamaging/Y\nDamara/M\nDamaris/M\nDamascus/M\ndamask/DMGS\ndame/SM\nDame/SMN\nDamian/M\nDamiano/M\nDamien/M\nDamion/M\nDamita/M\ndam/MDS\ndammed\ndamming\ndammit/S\ndamnably\ndamnation/MS\ndamnedest/MS\ndamned/TR\ndamn/GSBRD\ndamning/Y\nDamocles/M\nDamon/M\ndamped/U\ndampener/M\ndampen/RDZG\ndamper/M\ndampness/MS\ndamp/SGZTXYRDNP\ndamselfly/MS\ndamsel/MS\ndamson/MS\nDana�\nDana/M\nDanbury/M\ndancelike\ndancer/M\ndance/SRDJGZ\ndandelion/MS\ndander/DMGS\ndandify/SDG\ndandily\ndandle/GSD\ndandruff/MS\ndandy/TRSM\nDanelaw/M\nDanella/M\nDanell/M\nDane/SM\nDanette/M\ndanger/DMG\nDangerfield/M\ndangerousness/M\ndangerous/YP\ndangler/M\ndangle/ZGRSD\ndangling/Y\ndang/SGZRD\nDanial/M\nDania/M\nDanica/M\nDanice/M\nDaniela/M\nDaniele/M\nDaniella/M\nDanielle/M\nDaniel/SM\nDanielson/M\nDanie/M\nDanika/M\nDanila/M\nDani/M\nDanish\ndanish/S\nDanita/M\nDanit/M\ndankness/MS\ndank/TPYR\nDanna/M\nDannel/M\nDannie/M\nDanni/M\nDannye/M\nDanny/M\ndanseuse/SM\nDan/SM\nDante/M\nDanton/M\nDanube/M\nDanubian\nDanville/M\nDanya/M\nDanyelle/M\nDanyette/M\nDanzig/M\nDaphene/M\nDaphna/M\nDaphne/M\ndapperness/M\ndapper/PSTRY\ndapple/SDG\nDara/M\nDarbee/M\nDarbie/M\nDarb/M\nDarby/M\nDarcee/M\nDarcey/M\nDarcie/M\nDarci/M\nD\'Arcy\nDarcy/M\nDarda/M\nDardanelles\ndaredevil/MS\ndaredevilry/S\nDareen/M\nDarelle/M\nDarell/M\nDare/M\nDaren/M\ndarer/M\ndaresay\ndare/ZGDRSJ\nd\'Arezzo\nDaria/M\nDarice/M\nDarill/M\nDari/M\ndaringness/M\ndaring/PY\nDarin/M\nDario/M\nDarius/M\nDarjeeling/M\ndarkener/M\ndarken/RDZG\ndark/GTXYRDNSP\ndarkish\ndarkly/TR\ndarkness/MS\ndarkroom/SM\nDarla/M\nDarleen/M\nDarlene/M\nDarline/M\nDarling/M\ndarlingness/M\nDarlington/M\ndarling/YMSP\nDarlleen/M\nDar/MNH\nDarnall/M\ndarned/TR\nDarnell/M\ndarner/M\ndarn/GRDZS\ndarning/M\nDarn/M\nDaron/M\nDARPA/M\nDarrelle/M\nDarrell/M\nDarrel/M\nDarren/M\nDarrick/M\nDarrin/M\nDarrow/M\nDarryl/M\nDarsey/M\nDarsie/M\nd\'art\ndartboard/SM\ndarter/M\nDarth/M\nDartmouth/M\ndart/MRDGZS\nDarvon/M\nDarwinian/S\nDarwinism/MS\nDarwinist/MS\nDarwin/M\nDarya/M\nDaryle/M\nDaryl/M\nDaryn/M\nDasha/M\ndashboard/SM\ndasher/M\ndash/GZSRD\ndashiki/SM\ndashing/Y\nDasie/M\nDasi/M\ndastardliness/SM\ndastardly/P\ndastard/MYS\nDasya/M\nDAT\ndatabase/DSMG\ndatafile\ndatagram/MS\ndata/M\nDatamation/M\nDatamedia/M\ndataset/S\ndatedly\ndatedness\ndate/DRSMZGV\ndated/U\ndateless\ndateline/DSMG\ndater/M\nDatha/M\ndative/S\nDatsun/M\ndatum/MS\ndauber/M\ndaub/RDSGZ\nDaugherty/M\ndaughter/MYS\nDaumier/M\nDaune/M\ndaunt/DSG\ndaunted/U\ndaunting/Y\ndauntlessness/SM\ndauntless/PY\ndauphin/SM\nDavao/M\nDaveen/M\nDave/M\nDaven/M\nDavenport/M\ndavenport/MS\nDaveta/M\nDavey/M\nDavida/M\nDavidde/M\nDavide/M\nDavid/SM\nDavidson/M\nDavie/M\nDavina/M\nDavine/M\nDavinich/M\nDavin/M\nDavis/M\nDavita/M\ndavit/SM\nDav/MN\nDavon/M\nDavy/SM\ndawdler/M\ndawdle/ZGRSD\nDawes/M\nDawna/M\ndawn/GSDM\nDawn/M\nDawson/M\ndaybed/S\ndaybreak/SM\ndaycare/S\ndaydreamer/M\ndaydream/RDMSZG\nDayle/M\ndaylight/GSDM\nDay/M\nDayna/M\ndaysack\nday/SM\ndaytime/SM\nDayton/M\ndazed/PY\ndaze/DSG\ndazzler/M\ndazzle/ZGJRSD\ndazzling/Y\ndb\nDB\ndbl\ndB/M\nDBMS\nDC\nDD\nDdene/M\nDDS\nDDT\nDE\ndeacon/DSMG\ndeaconess/MS\ndeadbeat/SM\ndeadbolt/S\ndeadener/M\ndeadening/MY\ndeaden/RDG\ndeadhead/MS\ndeadline/MGDS\ndeadliness/SM\ndeadlock/MGDS\ndeadly/RPT\ndeadness/M\ndeadpanned\ndeadpanner\ndeadpanning\ndeadpan/S\ndead/PTXYRN\ndeadwood/SM\ndeafening/MY\ndeafen/JGD\ndeafness/MS\ndeaf/TXPYRN\ndealer/M\ndealership/MS\ndealing/M\ndeallocator\ndeal/RSGZJ\ndealt\nDeana/M\ndean/DMG\nDeandre/M\nDeane/M\ndeanery/MS\nDean/M\nDeanna/M\nDeanne/M\nDeann/M\ndeanship/SM\nDearborn/M\ndearness/MS\ndearth/M\ndearths\ndear/TYRHPS\ndeary/MS\ndeassign\ndeathbed/MS\ndeathblow/SM\ndeathless/Y\ndeathlike\ndeathly/TR\ndeath/MY\ndeaths\ndeathtrap/SM\ndeathward\ndeathwatch/MS\ndebacle/SM\ndebarkation/SM\ndebark/G\ndebar/L\ndebarment/SM\ndebarring\ndebaser/M\ndebatable/U\ndebate/BMZ\ndebater/M\ndebauchedness/M\ndebauched/PY\ndebauchee/SM\ndebaucher/M\ndebauchery/SM\ndebauch/GDRS\nDebbie/M\nDebbi/M\nDebby/M\nDebee/M\ndebenture/MS\nDebera/M\ndebilitate/NGXSD\ndebilitation/M\ndebility/MS\nDebi/M\ndebit/DG\ndeb/MS\nDeb/MS\ndebonairness/SM\ndebonair/PY\nDeborah/M\nDebora/M\nDebor/M\ndebouch/DSG\nDebra/M\ndebrief/GJ\ndebris/M\ndebtor/SM\ndebt/SM\nDebussy/M\nd�butante/SM\ndebut/MDG\ndecade/MS\ndecadency/S\ndecadent/YS\ndecaffeinate/DSG\ndecaf/S\ndecagon/MS\nDecalogue/M\ndecal/SM\ndecamp/L\ndecampment/MS\ndecapitate/GSD\ndecapitator/SM\ndecathlon/SM\nDecatur/M\ndecay/GRD\nDecca/M\nDeccan/M\ndecease/M\ndecedent/MS\ndeceitfulness/SM\ndeceitful/PY\ndeceit/SM\ndeceived/U\ndeceiver/M\ndeceives/U\ndeceive/ZGRSD\ndeceivingly\ndeceiving/U\ndecelerate/XNGSD\ndeceleration/M\ndecelerator/SM\nDecember/SM\ndecency/ISM\ndecennial/SY\ndecent/TIYR\ndeception/SM\ndeceptiveness/SM\ndeceptive/YP\ndecertify/N\ndechlorinate/N\ndecibel/MS\ndecidability/U\ndecidable/U\ndecidedness/M\ndecided/PY\ndecide/GRSDB\ndeciduousness/M\ndeciduous/YP\ndecile/SM\ndeciliter/SM\ndecimal/SYM\ndecimate/XNGDS\ndecimation/M\ndecimeter/MS\ndecipherable/IU\ndecipher/BRZG\ndecipherer/M\ndecisional\ndecisioned\ndecisioning\ndecision/ISM\ndecisive/IPY\ndecisiveness/MSI\ndeckchair\ndecker/M\nDecker/M\ndeck/GRDMSJ\ndeckhand/S\ndecking/M\nDeck/RM\ndeclamation/SM\ndeclamatory\ndeclarable\ndeclaration/MS\ndeclaration\'s/A\ndeclarative/SY\ndeclarator/MS\ndeclaratory\ndeclare/AGSD\ndeclared/U\ndeclarer/MS\ndeclension/SM\ndeclination/MS\ndecliner/M\ndecline/ZGRSD\ndeclivity/SM\nDec/M\nDEC/M\nDECNET\nDECnet/M\ndeco\nd�colletage/S\nd�collet�\ndecolletes\ndecolorising\ndecomposability/M\ndecomposable/IU\ndecompose/B\ndecompress/R\ndecongestant/S\ndeconstruction\ndeconvolution\ndecorated/AU\ndecorate/NGVDSX\ndecorates/A\ndecorating/A\ndecoration/ASM\ndecorativeness/M\ndecorative/YP\ndecorator/SM\ndecorousness/MS\ndecorousness\'s/I\ndecorous/PIY\ndecor/S\ndecorticate/GNDS\ndecortication/M\ndecorum/MS\ndecoupage/MGSD\ndecouple/G\ndecoy/M\ndecrease\ndecreasing/Y\ndecreeing\ndecree/RSM\ndecremental\ndecrement/DMGS\ndecrepit\ndecrepitude/SM\ndecriminalization/S\ndecriminalize/DS\ndecry/G\ndecrypt/GD\ndecryption\nDECstation/M\nDECsystem/M\nDECtape/M\ndecustomised\nDedekind/M\nDede/M\ndedicate/AGDS\ndedicated/Y\ndedication/MS\ndedicative\ndedicator/MS\ndedicatory\nDedie/M\nDedra/M\ndeduce/RSDG\ndeducible\ndeductibility/M\ndeductible/S\ndeduction/SM\ndeductive/Y\ndeduct/VG\nDeeanne/M\nDeeann/M\ndeeded\nDeedee/M\ndeeding\ndeed/IS\ndeed\'s\ndeejay/MDSG\nDee/M\ndeem/ADGS\ndeemphasis\nDeena/M\ndeepen/DG\ndeepish\ndeepness/MS\ndeep/PTXSYRN\nDeerdre/M\nDeere/M\ndeerskin/MS\ndeer/SM\ndeerstalker/SM\ndeerstalking/M\nDeeyn/M\ndeface/LZ\ndefacement/SM\ndefaecate\ndefalcate/NGXSD\ndefalcation/M\ndefamation/SM\ndefamatory\ndefamer/M\ndefame/ZR\ndefaulter/M\ndefault/ZR\ndefeated/U\ndefeater/M\ndefeatism/SM\ndefeatist/SM\ndefeat/ZGD\ndefecate/DSNGX\ndefecation/M\ndefection/SM\ndefectiveness/MS\ndefective/PYS\ndefect/MDSVG\ndefector/MS\ndefendant/SM\ndefended/U\ndefenestrate/GSD\ndefenselessness/MS\ndefenseless/PY\ndefenses/U\ndefense/VGSDM\ndefensibility/M\ndefensible/I\ndefensibly/I\ndefensiveness/MS\ndefensive/PSY\ndeference/MS\ndeferential/Y\ndeferent/S\ndeferrable\ndeferral/SM\ndeferred\ndeferrer/MS\ndeferring\ndeffer\ndefiance/MS\ndefiant/Y\ndefibrillator/M\ndeficiency/MS\ndeficient/SY\ndeficit/MS\ndefier/M\ndefile/L\ndefilement/MS\ndefinable/UI\ndefinably/I\ndefine/AGDRS\ndefined/U\ndefiner/SM\ndefinite/IPY\ndefiniteness/IMS\ndefinitional\ndefinition/ASM\ndefinitiveness/M\ndefinitive/SYP\ndefis\ndeflate/XNGRSDB\ndeflationary\ndeflation/M\ndeflect/DSGV\ndeflected/U\ndeflection/MS\ndeflector/MS\ndefocus\ndefocussing\nDefoe/M\ndefog\ndefogger/S\ndefoliant/SM\ndefoliator/SM\ndeformational\ndeform/B\ndeformed/U\ndeformity/SM\ndefrauder/M\ndefraud/ZGDR\ndefrayal/SM\ndefroster/M\ndefrost/RZ\ndeftness/MS\ndeft/TYRP\ndefunct/S\ndefying/Y\ndefy/RDG\ndef/Z\ndeg\nDegas/M\ndegassing\ndegauss/GD\ndegeneracy/MS\ndegenerateness/M\ndegenerate/PY\ndegrade/B\ndegradedness/M\ndegraded/YP\ndegrading/Y\ndegrease\ndegree/SM\ndegum\nDehlia/M\ndehumanize\ndehydrator/MS\ndeicer/M\ndeice/ZR\ndeictic\nDeidre/M\ndeification/M\ndeify/SDXGN\ndeign/DGS\nDeimos/M\nDeina/M\nDeirdre/MS\ndeistic\ndeist/SM\nDeity/M\ndeity/SM\ndeja\ndeject/DSG\ndejectedness/M\ndejected/PY\ndejection/SM\nDejesus/M\nDeKalb/M\nDeKastere/M\nDelacroix/M\nDelacruz/M\nDelainey/M\nDela/M\nDelaney/M\nDelano/M\nDelawarean/SM\nDelaware/MS\ndelay/D\ndelayer/G\nDelbert/M\nDelcina/M\nDelcine/M\ndelectableness/M\ndelectable/SP\ndelectably\ndelectation/MS\ndelegable\nDeleon/M\ndeleted/U\ndeleteriousness/M\ndeleterious/PY\ndelete/XBRSDNG\ndeletion/M\ndelfs\nDelft/M\ndelft/MS\ndelftware/S\nDelgado/M\nDelhi/M\nDelia/M\ndeliberateness/SM\ndeliberate/PVY\ndeliberativeness/M\ndeliberative/PY\nDelibes/M\ndelicacy/IMS\ndelicate/IYP\ndelicatenesses\ndelicateness/IM\ndelicates\ndelicatessen/MS\ndeliciousness/MS\ndelicious/YSP\ndelicti\ndelightedness/M\ndelighted/YP\ndelightfulness/M\ndelightful/YP\nDelilah/M\nDelilahs\nDelila/M\nDelinda/M\ndelineate/SDXVNG\ndelineation/M\ndelinquency/MS\ndelinquent/SYM\ndeliquesce/GSD\ndeliquescent\ndeliriousness/MS\ndelirious/PY\ndelirium/SM\ndeli/SM\nDelius/M\ndeliverables\ndeliverable/U\ndeliver/AGSD\ndeliverance/SM\ndelivered/U\ndeliverer/SM\ndelivery/AM\ndeliverymen/M\nDella/M\nDell/M\ndell/SM\nDellwood/M\nDelly/M\nDelmar/M\nDelmarva/M\nDelmer/M\nDelmonico\nDelmore/M\nDelmor/M\nDel/MY\nDelora/M\nDelores/M\nDeloria/M\nDeloris/M\nDelphic\nDelphi/M\nDelphine/M\nDelphinia/M\ndelphinium/SM\nDelphinus/M\nDelta/M\ndelta/MS\ndeltoid/SM\ndeluder/M\ndelude/RSDG\ndeluding/Y\ndeluge/SDG\ndelusional\ndelusion/SM\ndelusiveness/M\ndelusive/PY\ndeluxe\ndelve/GZSRD\ndelver/M\ndemagnify/N\ndemagogic\ndemagogue/GSDM\ndemagoguery/SM\ndemagogy/MS\ndemander/M\ndemand/GSRD\ndemandingly\ndemanding/U\ndemarcate/SDNGX\ndemarcation/M\nDemavend/M\ndemean/GDS\ndemeanor/SM\ndementedness/M\ndemented/YP\ndementia/MS\nDemerol/M\ndemesne/SM\nDemeter/M\nDemetra/M\nDemetre/M\nDemetria/M\nDemetri/MS\nDemetrius/M\ndemigod/MS\ndemijohn/MS\ndemimondaine/SM\ndemimonde/SM\ndemineralization/SM\nDeming/M\ndemise/DMG\ndemit\ndemitasse/MS\ndemitted\ndemitting\nDem/MG\ndemocracy/MS\nDemocratic\ndemocratically/U\ndemocratic/U\ndemocratization/MS\ndemocratize/DRSG\ndemocratizes/U\nDemocrat/MS\ndemocrat/SM\nDemocritus/M\nd�mod�\ndemo/DMPG\ndemographer/MS\ndemographical/Y\ndemographic/S\ndemography/MS\ndemolisher/M\ndemolish/GSRD\ndemolition/MS\ndemonetization/S\ndemoniacal/Y\ndemoniac/S\ndemonic\ndemonology/M\ndemon/SM\ndemonstrable/I\ndemonstrableness/M\ndemonstrably/I\ndemonstrate/XDSNGV\ndemonstration/M\ndemonstrativenesses\ndemonstrativeness/UM\ndemonstratives\ndemonstrative/YUP\ndemonstrator/MS\ndemoralization/M\ndemoralizer/M\ndemoralizing/Y\nDeMorgan/M\nDemosthenes/M\ndemote/DGX\ndemotic/S\nDemott/M\ndemount/B\nDempsey/M\ndemulcent/S\ndemultiplex\ndemureness/SM\ndemure/YP\ndemurral/MS\ndemurred\ndemurrer/MS\ndemurring\ndemur/RTS\ndemythologization/M\ndemythologize/R\nden\nDena/M\ndendrite/MS\nDeneb/M\nDenebola/M\nDeneen/M\nDene/M\nDeng/M\ndengue/MS\ndeniable/U\ndenial/SM\nDenice/M\ndenier/M\ndenigrate/VNGXSD\ndenigration/M\ndenim/SM\nDenise/M\nDeni/SM\ndenizen/SMDG\nDen/M\nDe/NM\nDenmark/M\nDenna/M\ndenned\nDennet/M\nDenney/M\nDennie/M\nDenni/MS\ndenning\nDennison/M\nDenny/M\ndenominate/V\ndenominational/Y\ndenote/B\ndenouement/MS\ndenounce/LZRSDG\ndenouncement/SM\ndenouncer/M\ndense/FR\ndensely\ndenseness/SM\ndensitometer/MS\ndensitometric\ndensitometry/M\ndensity/MS\ndens/RT\ndental/YS\ndentifrice/SM\ndentine\'s\ndentin/SM\ndent/ISGD\ndentistry/MS\ndentist/SM\ndentition/MS\ndent\'s\ndenture/IMS\ndenuclearize/GSD\ndenudation/SM\ndenude/DG\ndenuder/M\ndenunciate/VNGSDX\ndenunciation/M\nDenver/M\ndenying/Y\nDeny/M\nDenys\nDenyse/M\ndeny/SRDZG\ndeodorant/SM\ndeodorization/SM\ndeodorize/GZSRD\ndeodorizer/M\nDeon/M\nDeonne/M\ndeoxyribonucleic\ndepart/L\ndepartmentalization/SM\ndepartmentalize/DSG\ndepartmental/Y\ndepartment/MS\ndeparture/MS\ndependability/MS\ndependableness/M\ndependable/P\ndependably\nDependant/MS\ndepend/B\ndependence/ISM\ndependency/MS\ndependent/IYS\ndependent\'s\ndepicted/U\ndepicter/M\ndepiction/SM\ndepict/RDSG\ndepilatory/S\ndeplete/VGNSDX\ndepletion/M\ndeplorableness/M\ndeplorable/P\ndeplorably\ndeplorer/M\ndeplore/SRDBG\ndeploring/Y\ndeployable\ndeploy/AGDLS\ndeployment/SAM\ndepolarize\ndeponent/S\ndeportation/MS\ndeportee/SM\ndeport/LG\ndeportment/MS\ndepose\ndeposit/ADGS\ndepositary/M\ndeposition/A\ndepositor/SAM\ndepository/MS\ndepravedness/M\ndepraved/PY\ndeprave/GSRD\ndepraver/M\ndepravity/SM\ndeprecate/XSDNG\ndeprecating/Y\ndeprecation/M\ndeprecatory\ndepreciable\ndepreciate/XDSNGV\ndepreciating/Y\ndepreciation/M\ndepreciative/Y\ndepressant/S\ndepressible\ndepression/MS\ndepressive/YS\ndepressor/MS\ndepress/V\ndeprive/GSD\ndepth/M\ndepths\nDept/M\ndeputation/SM\ndepute/SDG\ndeputize/DSG\ndeputy/MS\ndequeue\nderail/L\nd�railleur/MS\nderailment/MS\nderange/L\nderangement/MS\nDerbyshire/M\nderby/SM\nDerby/SM\ndereference/Z\nDerek/M\ndereliction/SM\nderelict/S\nDerick/M\nderide/D\nderiding/Y\nderision/SM\nderisiveness/MS\nderisive/PY\nderisory\nderivable/U\nderivate/XNV\nderivation/M\nderivativeness/M\nderivative/SPYM\nderive/B\nderived/U\nDerk/M\nDer/M\ndermal\ndermatitides\ndermatitis/MS\ndermatological\ndermatologist/MS\ndermatology/MS\ndermis/SM\nDermot/M\nderogate/XDSNGV\nderogation/M\nderogatorily\nderogatory\nDerrek/M\nDerrick/M\nderrick/SMDG\nDerrida/M\nderri�re/S\nDerrik/M\nDerril/M\nderringer/SM\nDerron/M\nDerry/M\ndervish/SM\nDerward/M\nDerwin/M\nDes\ndesalinate/NGSDX\ndesalination/M\ndesalinization/MS\ndesalinize/GSD\ndesalt/G\ndescant/M\nDescartes/M\ndescendant/SM\ndescended/FU\ndescendent\'s\ndescender/M\ndescending/F\ndescends/F\ndescend/ZGSDR\ndescent\ndescribable/I\ndescribe/ZB\ndescription/MS\ndescriptiveness/MS\ndescriptive/SYP\ndescriptor/SM\ndescry/SDG\nDesdemona/M\ndesecrater/M\ndesecrate/SRDGNX\ndesecration/M\ndeserter/M\ndesertification\ndesertion/MS\ndesert/ZGMRDS\ndeservedness/M\ndeserved/YU\ndeserve/J\ndeserving/Y\nd�shabill�\'s\ndesiccant/S\ndesiccate/XNGSD\ndesiccation/M\ndesiccator/SM\ndesiderata\ndesideratum/M\ndesignable\ndesign/ADGS\ndesignate/VNGSDX\ndesignational\ndesignation/M\ndesignator/SM\ndesigned/Y\ndesigner/M\ndesigning/U\nDesi/M\ndesirabilia\ndesirability\'s\ndesirability/US\ndesirableness/SM\ndesirableness\'s/U\ndesirable/UPS\ndesirably/U\nDesirae/M\ndesire/BR\ndesired/U\nDesiree/M\ndesirer/M\nDesiri/M\ndesirousness/M\ndesirous/PY\ndesist/DSG\ndesk/SM\ndesktop/S\nDesmond/M\nDesmund/M\ndesolateness/SM\ndesolate/PXDRSYNG\ndesolater/M\ndesolating/Y\ndesolation/M\ndesorption/M\ndespairer/M\ndespairing/Y\ndespair/SGDR\ndesperadoes\ndesperado/M\ndesperateness/SM\ndesperate/YNXP\ndesperation/M\ndespicable\ndespicably\ndespiser/M\ndespise/SRDG\ndespoil/L\ndespoilment/MS\ndespond\ndespondence/S\ndespondency/MS\ndespondent/Y\ndespotic\ndespotically\ndespotism/SM\ndessert/SM\ndessicate/DN\nd\'Estaing\ndestinate/NX\ndestination/M\ndestine/GSD\ndestiny/MS\ndestituteness/M\ndestitute/NXP\ndestitution/M\ndestroy/BZGDRS\ndestroyer/M\ndestructibility/SMI\ndestructible/I\ndestruction/SM\ndestructiveness/MS\ndestructive/YP\ndestructor/M\ndestruct/VGSD\ndesuetude/MS\ndesultorily\ndesultoriness/M\ndesultory/P\ndetachedness/M\ndetached/YP\ndetacher/M\ndetach/LSRDBG\ndetachment/SM\ndetailedness/M\ndetailed/YP\ndetainee/S\ndetainer/M\ndetain/LGRDS\ndetainment/MS\nd\'etat\ndetectability/U\ndetectable/U\ndetectably/U\ndetect/DBSVG\ndetected/U\ndetection/SM\ndetective/MS\ndetector/MS\nd�tente\ndetentes\ndetention/SM\ndetergency/M\ndetergent/SM\ndeteriorate/XDSNGV\ndeterioration/M\ndeterment/SM\ndeterminability/M\ndeterminable/IP\ndeterminableness/IM\ndeterminacy/I\ndeterminant/MS\ndeterminateness/IM\ndeterminate/PYIN\ndetermination/IM\ndeterminativeness/M\ndeterminative/P\ndeterminedly\ndeterminedness/M\ndetermined/U\ndetermine/GASD\ndeterminer/SM\ndeterminism/MS\ndeterminism\'s/I\ndeterministically\ndeterministic/I\ndeterred/U\ndeterrence/SM\ndeterrent/SMY\ndeterring\ndetersive/S\ndeter/SL\ndeters/V\ndetestableness/M\ndetestable/P\ndetestably\ndetestation/SM\ndethrone/L\ndethronement/SM\ndetonable\ndetonated/U\ndetonate/XDSNGV\ndetonation/M\ndetonator/MS\ndetour/G\ndetoxification/M\ndetoxify/NXGSD\ndetox/SDG\ndetract/GVD\ndetractive/Y\nd\'etre\ndetribalize/GSD\ndetrimental/SY\ndetriment/SM\ndetritus/M\nDetroit/M\ndeuced/Y\ndeuce/SDGM\ndeus\ndeuterium/MS\ndeuteron/M\nDeuteronomy/M\nDeutsch/M\nDeva/M\nDevanagari/M\nDevan/M\ndevastate/XVNGSD\ndevastating/Y\ndevastation/M\ndevastator/SM\ndevelop/ALZSGDR\ndeveloped/U\ndeveloper/MA\ndevelopmental/Y\ndevelopment/ASM\ndeviance/MS\ndeviancy/S\ndeviant/YMS\ndeviated/U\ndeviate/XSDGN\ndeviating/U\ndeviation/M\ndevilishness/MS\ndevilish/PY\ndevilment/SM\ndevilry/MS\ndevil/SLMDG\ndeviltry/MS\nDevi/M\nDevina/M\nDevin/M\nDevinne/M\ndeviousness/SM\ndevious/YP\ndevise/JR\ndeviser/M\nDevland/M\nDevlen/M\nDevlin/M\nDev/M\ndevoice\ndevolution/MS\ndevolve/GSD\nDevondra/M\nDevonian\nDevon/M\nDevonna/M\nDevonne/M\nDevonshire/M\nDevora/M\ndevoted/Y\ndevotee/MS\ndevote/XN\ndevotional/YS\ndevotion/M\ndevourer/M\ndevour/SRDZG\ndevoutness/MS\ndevout/PRYT\nDevy/M\nDewain/M\ndewar\nDewar/M\nDewayne/M\ndewberry/MS\ndewclaw/SM\ndewdrop/MS\nDewey/M\nDewie/M\ndewiness/MS\nDewitt/M\ndewlap/MS\nDew/M\ndew/MDGS\ndewy/TPR\nDexedrine/M\ndexes/I\nDex/M\ndexter\ndexterity/MS\nDexter/M\ndexterousness/MS\ndexterous/PY\ndextrose/SM\nDH\nDhaka\nDhaulagiri/M\ndhoti/SM\ndhow/MS\nDI\ndiabase/M\ndiabetes/M\ndiabetic/S\ndiabolic\ndiabolicalness/M\ndiabolical/YP\ndiabolism/M\ndiachronic/P\ndiacritical/YS\ndiacritic/MS\ndiadem/GMDS\ndiaereses\ndiaeresis/M\nDiaghilev/M\ndiagnometer/SM\ndiagnosable/U\ndiagnose/BGDS\ndiagnosed/U\ndiagnosis/M\ndiagnostically\ndiagnostician/SM\ndiagnostic/MS\ndiagnostics/M\ndiagonalize/GDSB\ndiagonal/YS\ndiagrammable\ndiagrammatic\ndiagrammaticality\ndiagrammatically\ndiagrammed\ndiagrammer/SM\ndiagramming\ndiagram/MS\nDiahann/M\ndialectal/Y\ndialectical/Y\ndialectic/MS\ndialect/MS\ndialed/A\ndialer/M\ndialing/M\ndial/MRDSGZJ\ndialogged\ndialogging\ndialog/MS\ndials/A\ndialysis/M\ndialyzed/U\ndialyzes\ndiam\ndiamagnetic\ndiameter/MS\ndiametric\ndiametrical/Y\ndiamondback/SM\ndiamond/GSMD\nDiana/M\nDiandra/M\nDiane/M\nDianemarie/M\nDian/M\nDianna/M\nDianne/M\nDiann/M\nDiannne/M\ndiapason/MS\ndiaper/SGDM\ndiaphanousness/M\ndiaphanous/YP\ndiaphragmatic\ndiaphragm/SM\ndiarist/SM\nDiarmid/M\ndiarrheal\ndiarrhea/MS\ndiary/MS\ndiaspora\nDiaspora/SM\ndiastase/SM\ndiastole/MS\ndiastolic\ndiathermy/SM\ndiathesis/M\ndiatomic\ndiatom/SM\ndiatonic\ndiatribe/MS\nDiaz\'s\ndibble/SDMG\ndibs\nDiCaprio/M\ndice/GDRS\ndicer/M\ndicey\ndichloride/M\ndichotomization/M\ndichotomize/DSG\ndichotomous/PY\ndichotomy/SM\ndicier\ndiciest\ndicing/M\nDickensian/S\ndickens/M\nDickens/M\ndicker/DG\nDickerson/M\ndickey/SM\ndick/GZXRDMS!\nDickie/M\ndickier\ndickiest\nDickinson/M\nDickson/M\nDick/XM\nDicky/M\ndicky\'s\ndicotyledonous\ndicotyledon/SM\ndicta/M\nDictaphone/SM\ndictate/SDNGX\ndictation/M\ndictatorialness/M\ndictatorial/YP\ndictator/MS\ndictatorship/SM\ndictionary/SM\ndiction/MS\ndictum/M\ndidactically\ndidactic/S\ndidactics/M\ndid/AU\ndiddler/M\ndiddle/ZGRSD\nDiderot/M\nDidi/M\ndidn\'t\ndidoes\ndido/M\nDido/M\ndidst\ndie/DS\nDiefenbaker/M\nDiego/M\ndieing\ndielectric/MS\ndiem\nDiem/M\nDiena/M\nDierdre/M\ndiereses\ndieresis/M\ndiesel/GMDS\nDiesel\'s\ndies\'s\ndies/U\ndietary/S\ndieter/M\nDieter/M\ndietetic/S\ndietetics/M\ndiethylaminoethyl\ndiethylstilbestrol/M\ndietitian/MS\ndiet/RDGZSM\nDietrich/M\nDietz/M\ndifference/DSGM\ndifference\'s/I\ndifferences/I\ndifferentiability\ndifferentiable\ndifferential/SMY\ndifferentiated/U\ndifferentiate/XSDNG\ndifferentiation/M\ndifferentiator/SM\ndifferentness\ndifferent/YI\ndiffer/SZGRD\ndifficile\ndifficult/Y\ndifficulty/SM\ndiffidence/MS\ndiffident/Y\ndiffract/GSD\ndiffraction/SM\ndiffractometer/SM\ndiffuseness/MS\ndiffuse/PRSDZYVXNG\ndiffuser/M\ndiffusible\ndiffusional\ndiffusion/M\ndiffusiveness/M\ndiffusive/YP\ndiffusivity/M\ndigerati\ndigested/IU\ndigester/M\ndigestibility/MS\ndigestible/I\ndigestifs\ndigestion/ISM\ndigestive/YSP\ndigest/RDVGS\ndigger/MS\ndigging/S\ndigitalis/M\ndigitalization/MS\ndigitalized\ndigitalizes\ndigitalizing\ndigital/SY\ndigitization/M\ndigitizer/M\ndigitize/ZGDRS\ndigit/SM\ndignified/U\ndignify/DSG\ndignitary/SM\ndignity/ISM\ndigram\ndigraph/M\ndigraphs\ndigress/GVDS\ndigression/SM\ndigressiveness/M\ndigressive/PY\ndig/TS\ndihedral\nDijkstra/M\nDijon/M\ndike/DRSMG\ndiker/M\ndiktat/SM\nDilan/M\ndilapidate/XGNSD\ndilapidation/M\ndilatation/SM\ndilated/YP\ndilate/XVNGSD\ndilation/M\ndilatoriness/M\ndilator/SM\ndilatory/P\nDilbert/M\ndilemma/MS\ndilettante/MS\ndilettantish\ndilettantism/MS\ndiligence/SM\ndiligentness/M\ndiligent/YP\ndilithium\nDillard/M\nDillie/M\nDillinger/M\ndilling/R\ndillis\nDill/M\nDillon/M\ndill/SGMD\ndillydally/GSD\nDilly/M\ndilly/SM\ndilogarithm\ndiluent\ndiluted/U\ndiluteness/M\ndilute/RSDPXYVNG\ndilution/M\nDi/M\nDiMaggio/M\ndimensionality/M\ndimensional/Y\ndimensionless\ndimension/MDGS\ndimer/M\ndime/SM\ndimethylglyoxime\ndimethyl/M\ndiminished/U\ndiminish/SDGBJ\ndiminuendo/SM\ndiminution/SM\ndiminutiveness/M\ndiminutive/SYP\nDimitri/M\nDimitry/M\ndimity/MS\ndimmed/U\ndimmer/MS\ndimmest\ndimming\ndimness/SM\ndimorphism/M\ndimple/MGSD\ndimply/RT\ndim/RYPZS\ndimwit/MS\ndimwitted\nDinah/M\nDina/M\ndinar/SM\ndiner/M\ndine/S\ndinette/MS\ndingbat/MS\nding/GD\ndinghy/SM\ndingily\ndinginess/SM\ndingle/MS\ndingoes\ndingo/MS\ndingus/SM\ndingy/PRST\ndinky/RST\ndin/MDRZGS\ndinned\ndinner/SM\ndinnertime/S\ndinnerware/MS\nDinnie/M\ndinning\nDinny/M\nDino/M\ndinosaur/MS\ndint/SGMD\ndiocesan/S\ndiocese/SM\nDiocletian/M\ndiode/SM\nDiogenes/M\nDione/M\nDionisio/M\nDionis/M\nDion/M\nDionne/M\nDionysian\nDionysus/M\nDiophantine/M\ndiopter/MS\ndiorama/SM\nDior/M\ndioxalate\ndioxide/MS\ndioxin/S\ndiphtheria/SM\ndiphthong/SM\ndiplexers\ndiploid/S\ndiplomacy/SM\ndiploma/SMDG\ndiplomata\ndiplomatically\ndiplomatic/S\ndiplomatics/M\ndiplomatist/SM\ndiplomat/MS\ndipodic\ndipody/M\ndipole/MS\ndipped\nDipper/M\ndipper/SM\ndipping/S\ndippy/TR\ndip/S\ndipsomaniac/MS\ndipsomania/SM\ndipstick/MS\ndipterous\ndiptych/M\ndiptychs\nDir\nDirac/M\ndirected/IUA\ndirectionality\ndirectional/SY\ndirection/MIS\ndirections/A\ndirective/SM\ndirectivity/M\ndirectly/I\ndirectness/ISM\ndirector/AMS\ndirectorate/SM\ndirectorial\ndirectorship/SM\ndirectory/SM\ndirect/RDYPTSVG\ndirectrix/MS\ndirects/IA\ndireful/Y\ndireness/M\ndire/YTRP\ndirge/GSDM\nDirichlet/M\ndirigible/S\ndirk/GDMS\nDirk/M\ndirndl/MS\ndirtily\ndirtiness/SM\ndirt/MS\ndirty/GPRSDT\nDis\ndisable/LZGD\ndisablement/MS\ndisabler/M\ndisabuse\ndisadvantaged/P\ndisagreeable/S\ndisallow/D\ndisambiguate/DSGNX\ndisappointed/Y\ndisappointing/Y\ndisarming/Y\ndisarrange/L\ndisastrous/Y\ndisband/L\ndisbandment/SM\ndisbar/L\ndisbarment/MS\ndisbarring\ndisbelieving/Y\ndisbursal/S\ndisburse/GDRSL\ndisbursement/MS\ndisburser/M\ndiscerner/M\ndiscernibility\ndiscernible/I\ndiscernibly\ndiscerning/Y\ndiscernment/MS\ndiscern/SDRGL\ndisc/GDM\ndischarged/U\ndisciple/DSMG\ndiscipleship/SM\ndisciplinarian/SM\ndisciplinary\ndisciplined/U\ndiscipline/IDM\ndiscipliner/M\ndisciplines\ndisciplining\ndisclosed/U\ndiscography/MS\ndiscolored/MP\ndiscoloreds/U\ndiscolor/G\ndiscombobulate/SDGNX\ndiscomfit/DG\ndiscomfiture/MS\ndisco/MG\ndiscommode/DG\ndisconcerting/Y\ndisconnectedness/S\ndisconnected/P\ndisconnecter/M\ndisconnect/R\ndisconsolate/YN\ndiscordance/SM\ndiscordant/Y\ndiscord/G\ndiscorporate/D\ndiscotheque/MS\ndiscount/B\ndiscourage/LGDR\ndiscouragement/MS\ndiscouraging/Y\ndiscoverable/I\ndiscover/ADGS\ndiscovered/U\ndiscoverer/S\ndiscovery/SAM\ndiscreetly/I\ndiscreetness\'s/I\ndiscreetness/SM\ndiscreet/TRYP\ndiscrepancy/SM\ndiscrepant/Y\ndiscreteness/SM\ndiscrete/YPNX\ndiscretionary\ndiscretion/IMS\ndiscretization\ndiscretized\ndiscriminable\ndiscriminant/MS\ndiscriminated/U\ndiscriminate/SDVNGX\ndiscriminating/YI\ndiscrimination/MI\ndiscriminator/MS\ndiscriminatory\ndiscursiveness/S\ndiscussant/MS\ndiscussed/UA\ndiscusser/M\ndiscussion/SM\ndiscus/SM\ndisdainfulness/M\ndisdainful/YP\ndisdain/MGSD\ndisease/G\ndisembowelment/SM\ndisembowel/SLGD\ndisengage/L\ndisfigure/L\ndisfigurement/MS\ndisfranchise/L\ndisfranchisement/MS\ndisgorge\ndisgrace/R\ndisgracer/M\ndisgruntle/DSLG\ndisgruntlement/MS\ndisguised/UY\ndisguise/R\ndisguiser/M\ndisgust\ndisgusted/Y\ndisgustful/Y\ndisgusting/Y\ndishabille/SM\ndisharmonious\ndishcloth/M\ndishcloths\ndishevel/LDGS\ndishevelment/MS\ndish/GD\ndishonest\ndishonored/U\ndishpan/MS\ndishrag/SM\ndishtowel/SM\ndishwasher/MS\ndishwater/SM\ndisillusion/LGD\ndisillusionment/SM\ndisinfectant/MS\ndisinherit\ndisinterestedness/SM\ndisinterested/P\ndisinvest/L\ndisjoin\ndisjointedness/S\ndisjunctive/YS\ndisjunct/VS\ndisk/D\ndiskette/S\ndislike/G\ndislodge/LG\ndislodgement/M\ndismalness/M\ndismal/PSTRY\ndismantle/L\ndismantlement/SM\ndismay/D\ndismayed/U\ndismaying/Y\ndis/MB\ndismember/LG\ndismemberment/MS\ndismissive/Y\ndismiss/RZ\nDisneyland/M\nDisney/M\ndisoblige/G\ndisorderedness/M\ndisordered/YP\ndisorderliness/M\ndisorderly/P\ndisorder/Y\ndisorganize\ndisorganized/U\ndisparagement/MS\ndisparager/M\ndisparage/RSDLG\ndisparaging/Y\ndisparateness/M\ndisparate/PSY\ndispatch/Z\ndispelled\ndispelling\ndispel/S\ndispensable/I\ndispensary/MS\ndispensate/NX\ndispensation/M\ndispenser/M\ndispense/ZGDRSB\ndispersal/MS\ndispersant/M\ndispersed/Y\ndisperser/M\ndisperse/XDRSZLNGV\ndispersible\ndispersion/M\ndispersiveness/M\ndispersive/PY\ndispirit/DSG\ndisplace/L\ndisplay/AGDS\ndisplayed/U\ndispleased/Y\ndisplease/G\ndispleasure\ndisport\ndisposable/S\ndisposal/SM\ndispose/IGSD\ndispositional\ndisposition/ISM\ndisproportional\ndisproportionate/N\ndisproportionation/M\ndisprove/B\ndisputable/I\ndisputably/I\ndisputant/SM\ndisputation/SM\ndisputatious/Y\ndisputed/U\ndisputer/M\ndispute/ZBGSRD\ndisquieting/Y\ndisquiet/M\ndisquisition/SM\nDisraeli/M\ndisregardful\ndisrepair/M\ndisreputableness/M\ndisreputable/P\ndisrepute/M\ndisrespect\ndisrupted/U\ndisrupter/M\ndisrupt/GVDRS\ndisruption/MS\ndisruptive/YP\ndisruptor/M\ndissatisfy\ndissect/DG\ndissed\ndissembler/M\ndissemble/ZGRSD\ndisseminate/XGNSD\ndissemination/M\ndissension/SM\ndissenter/M\ndissent/ZGSDR\ndissertation/SM\ndisservice\ndisses\ndissever\ndissidence/SM\ndissident/MS\ndissimilar/S\ndissing\ndissipatedly\ndissipatedness/M\ndissipated/U\ndissipater/M\ndissipate/XRSDVNG\ndissipation/M\ndissociable/I\ndissociate/DSXNGV\ndissociated/U\ndissociation/M\ndissociative/Y\ndissoluble/I\ndissoluteness/SM\ndissolute/PY\ndissolve/ASDG\ndissolved/U\ndissonance/SM\ndissonant/Y\ndissuade/GDRS\ndissuader/M\ndissuasive\ndist\ndistaff/SM\ndistal/Y\ndistance/DSMG\ndistantness/M\ndistant/YP\ndistaste\ndistemper\ndistend\ndistension\ndistention/SM\ndistillate/XNMS\ndistillation/M\ndistillery/MS\ndistincter\ndistinctest\ndistinction/MS\ndistinctiveness/MS\ndistinctive/YP\ndistinct/IYVP\ndistinctness/MSI\ndistinguishable/I\ndistinguishably/I\ndistinguish/BDRSG\ndistinguished/U\ndistinguisher/M\ndistort/BGDR\ndistorted/U\ndistorter/M\ndistortion/MS\ndistract/DG\ndistractedness/M\ndistracted/YP\ndistracting/Y\ndistrait\ndistraught/Y\ndistress\ndistressful\ndistressing/Y\ndistribute/ADXSVNGB\ndistributed/U\ndistributer\ndistributional\ndistribution/AM\ndistributiveness/M\ndistributive/SPY\ndistributivity\ndistributorship/M\ndistributor/SM\ndistrict/GSAD\ndistrict\'s\ndistrust/G\ndisturbance/SM\ndisturbed/U\ndisturber/M\ndisturbing/Y\ndisturb/ZGDRS\ndisulfide/M\ndisuse/M\ndisyllable/M\nDita/M\nditcher/M\nditch/MRSDG\ndither/RDZSG\nditsy/TR\nditto/DMGS\nditty/SDGM\nDitzel/M\nditz/S\ndiuresis/M\ndiuretic/S\ndiurnal/SY\ndivalent/S\ndiva/MS\ndivan/SM\ndived/M\ndivergence/SM\ndivergent/Y\ndiverge/SDG\ndiver/M\ndiverseness/MS\ndiverse/XYNP\ndiversification/M\ndiversifier/M\ndiversify/GSRDNX\ndiversionary\ndiversion/M\ndiversity/SM\ndivert/GSD\ndiverticulitis/SM\ndivertimento/M\ndive/S\ndivestiture/MS\ndivest/LDGS\ndivestment/S\ndividable\ndivide/AGDS\ndivided/U\ndividend/MS\ndivider/MS\ndivination/SM\ndiviner/M\ndivine/RSDTZYG\ndivinity/MS\ndivisibility/IMS\ndivisible/I\ndivisional\ndivision/SM\ndivisiveness/MS\ndivisive/PY\ndivisor/SM\ndivorc�e/MS\ndivorce/GSDLM\ndivorcement/MS\ndivot/MS\ndiv/TZGJDRS\ndivulge/GSD\ndivvy/GSDM\nDixiecrat/MS\ndixieland\nDixieland/MS\nDixie/M\nDix/M\nDixon/M\ndizzily\ndizziness/SM\ndizzying/Y\ndizzy/PGRSDT\nDJ\nDjakarta\'s\ndjellabah\'s\ndjellaba/S\nd/JGVX\nDjibouti/M\nDMD\nDmitri/M\nDMZ\nDNA\nDnepropetrovsk/M\nDnepr\'s\nDnieper\'s\nDniester/M\nDniren/M\nDOA\ndoable\nDOB\nDobbin/M\ndobbin/MS\nDoberman\nDobro/M\ndocent/SM\ndocile/Y\ndocility/MS\ndocker/M\ndocket/GSMD\ndock/GZSRDM\ndockland/MS\ndockside/M\ndockworker/S\ndockyard/SM\ndoc/MS\nDoctor\ndoctoral\ndoctorate/SM\ndoctor/GSDM\nDoctorow/M\ndoctrinaire/S\ndoctrinal/Y\ndoctrine/SM\ndocudrama/S\ndocumentary/MS\ndocumentation/MS\ndocumented/U\ndocument/RDMZGS\nDOD\ndodder/DGS\ndodecahedra\ndodecahedral\ndodecahedron/M\nDode/M\ndodge/GZSRD\nDodge/M\ndodgem/S\ndodger/M\nDodgson/M\nDodie/M\nDodi/M\nDodington/M\nDodoma/M\ndodo/SM\nDodson/M\nDody/M\nDOE\nDoe/M\ndoe/MS\ndoer/MU\ndoes/AU\ndoeskin/MS\ndoesn\'t\nd\'oeuvre\ndoff/SGD\ndogcart/SM\ndogcatcher/MS\ndogeared\nDoge/M\ndoge/SM\ndogfight/GMS\ndogfish/SM\ndogfought\ndoggedness/SM\ndogged/PY\ndoggerel/SM\ndogging\ndoggone/RSDTG\ndoggy/SRMT\ndoghouse/SM\ndogie/SM\ndoglegged\ndoglegging\ndogleg/SM\ndogma/MS\ndogmatically/U\ndogmatic/S\ndogmatics/M\ndogmatism/SM\ndogmatist/SM\ndogsbody/M\ndog/SM\ndogtooth/M\nDogtown/M\ndogtrot/MS\ndogtrotted\ndogtrotting\ndogwood/SM\ndogy\'s\nDoha/M\ndoh\'s\ndoily/SM\ndoing/MU\nDolby/SM\ndoldrum/S\ndoldrums/M\ndoled/F\ndolefuller\ndolefullest\ndolefulness/MS\ndoleful/PY\nDole/M\ndole/MGDS\ndoles/F\nDolf/M\ndoling/F\ndollar/SM\nDolley/M\nDollie/M\nDolli/M\nDoll/M\ndoll/MDGS\ndollop/GSMD\nDolly/M\ndolly/SDMG\ndolmen/MS\ndolomite/SM\ndolomitic\nDolores/M\nDolorita/SM\ndolorous/Y\ndolor/SM\ndolphin/SM\nDolph/M\ndoltishness/SM\ndoltish/YP\ndolt/MS\ndomain/MS\ndome/DSMG\nDomenic/M\nDomenico/M\nDomeniga/M\nDomesday/M\ndomestically\ndomesticate/DSXGN\ndomesticated/U\ndomestication/M\ndomesticity/MS\ndomestic/S\ndomicile/SDMG\ndomiciliary\ndominance/MS\ndominant/YS\ndominate/VNGXSD\ndomination/M\ndominator/M\ndominatrices\ndominatrix\ndomineer/DSG\ndomineeringness/M\ndomineering/YP\nDominga/M\nDomingo/M\nDominguez/M\nDominica/M\nDominican/MS\nDominick/M\nDominic/M\nDominik/M\nDomini/M\ndominion/MS\nDominique/M\ndominoes\ndomino/M\nDomitian/M\nDom/M\nDonahue/M\nDonald/M\nDonaldson/M\nDonall/M\nDonal/M\nDonalt/M\nDona/M\ndona/MS\nDonatello/M\ndonate/XVGNSD\ndonation/M\ndonative/M\nDonaugh/M\nDonavon/M\ndone/AUF\nDonella/M\nDonelle/M\nDonetsk/M\nDonetta/M\ndong/GDMS\ndongle/S\nDonia/M\nDonica/M\nDonielle/M\nDonizetti/M\ndonkey/MS\nDonna/M\nDonnamarie/M\ndonned\nDonnell/M\nDonnelly/M\nDonne/M\nDonner/M\nDonnie/M\nDonni/M\ndonning\ndonnishness/M\ndonnish/YP\nDonn/RM\ndonnybrook/MS\nDonny/M\ndonor/MS\nDonovan/M\ndon/S\nDon/SM\ndon\'t\ndonut/MS\ndonutted\ndonutting\ndoodad/MS\ndoodlebug/MS\ndoodler/M\ndoodle/SRDZG\ndoohickey/MS\nDooley/M\nDoolittle/M\ndoom/MDGS\ndoomsday/SM\nDoonesbury/M\ndoorbell/SM\ndoor/GDMS\ndoorhandles\ndoorkeeper/M\ndoorkeep/RZ\ndoorknob/SM\ndoorman/M\ndoormat/SM\ndoormen\ndoornail/M\ndoorplate/SM\ndoors/I\ndoorstep/MS\ndoorstepped\ndoorstepping\ndoorstop/MS\ndoorway/MS\ndooryard/SM\ndopamine\ndopant/M\ndopa/SM\ndope/DRSMZG\ndoper/M\ndopey\ndopier\ndopiest\ndopiness/S\nDoppler/M\nDorado/M\nDoralia/M\nDoralin/M\nDoralyn/M\nDoralynne/M\nDoralynn/M\nDora/M\nDorcas\nDorchester/M\nDoreen/M\nDorelia/M\nDorella/M\nDorelle/M\nDor�/M\nDorena/M\nDorene/M\nDoretta/M\nDorette/M\nDorey/M\nDoria/M\nDorian/M\nDoric\nDorice/M\nDorie/M\nDori/MS\nDorine/M\nDorisa/M\nDorise/M\nDorita/M\ndork/S\ndorky/RT\ndormancy/MS\ndormant/S\ndormer/M\ndormice\ndormitory/SM\ndorm/MRZS\ndormouse/M\nDorolice/M\nDorolisa/M\nDoro/M\nDorotea/M\nDoroteya/M\nDorothea/M\nDorothee/M\nDorothy/M\nDorree/M\nDorrie/M\nDorri/SM\nDorry/M\ndorsal/YS\nDorsey/M\nDorthea/M\nDorthy/M\nDortmund/M\nDory/M\ndory/SM\nDOS\ndosage/SM\ndose/M\ndos/GDS\nDosi/M\ndosimeter/MS\ndosimetry/M\ndossier/MS\ndost\nDostoevsky/M\nDOT\ndotage/SM\ndotard/MS\ndoter/M\ndote/S\nDoti/M\ndoting/Y\nDot/M\ndot/MDRSJZG\nDotson/M\ndotted\nDottie/M\nDotti/M\ndottiness/M\ndotting\nDotty/M\ndotty/PRT\ndo/TZRHGJ\nDouala/M\nDouay/M\nDoubleday/M\ndoubled/UA\ndouble/GPSRDZ\ndoubleheader/MS\ndoubleness/M\ndoubler/M\ndoubles/M\ndoublespeak/S\ndoublethink/M\ndoublet/MS\ndoubleton/M\ndoubling/A\ndoubloon/MS\ndoubly\ndoubt/AGSDMB\ndoubted/U\ndoubter/SM\ndoubtfulness/SM\ndoubtful/YP\ndoubting/Y\ndoubtlessness/M\ndoubtless/YP\ndouche/GSDM\nDougherty/M\ndough/M\ndoughs\ndoughty/RT\ndoughy/RT\nDougie/M\nDouglas/M\nDouglass\nDoug/M\nDougy/M\ndourness/MS\nDouro/M\ndour/TYRP\ndouser/M\ndouse/SRDG\ndovecote/MS\nDover/M\ndove/RSM\ndovetail/GSDM\ndovish\nDov/MR\ndowager/SM\ndowdily\ndowdiness/MS\ndowdy/TPSR\ndowel/GMDS\ndower/GDMS\nDow/M\ndownbeat/SM\ndowncast/S\ndowndraft/M\ndowner/M\nDowney/M\ndownfall/NMS\ndowngrade/GSD\ndown/GZSRD\ndownheartedness/MS\ndownhearted/PY\ndownhill/RS\ndownland\ndownload/DGS\ndownpipes\ndownplay/GDS\ndownpour/MS\ndownrange\ndownrightness/M\ndownright/YP\ndownriver\nDowns\ndownscale/GSD\ndownside/S\ndownsize/DSG\ndownslope\ndownspout/SM\ndownstage/S\ndownstairs\ndownstate/SR\ndownstream\ndownswing/MS\ndowntime/SM\ndowntowner/M\ndowntown/MRS\ndowntrend/M\ndowntrodden\ndownturn/MS\ndownwardness/M\ndownward/YPS\ndownwind\ndowny/RT\ndowry/SM\ndowse/GZSRD\ndowser/M\ndoxology/MS\ndoyenne/SM\ndoyen/SM\nDoyle/M\nDoy/M\ndoze\ndozen/GHD\ndozenths\ndozer/M\ndoz/XGNDRS\ndozy\nDP\nDPs\ndpt\nDPT\ndrabbed\ndrabber\ndrabbest\ndrabbing\ndrabness/MS\ndrab/YSP\ndrachma/MS\nDraco/M\ndraconian\nDraconian\nDracula/M\ndraft/AMDGS\ndraftee/SM\ndrafter/MS\ndraftily\ndraftiness/SM\ndrafting/S\ndraftsman/M\ndraftsmanship/SM\ndraftsmen\ndraftsperson\ndraftswoman\ndraftswomen\ndrafty/PTR\ndragged\ndragger/M\ndragging/Y\ndraggy/RT\ndrag/MS\ndragnet/MS\ndragonfly/SM\ndragonhead/M\ndragon/SM\ndragoon/DMGS\ndrainage/MS\ndrainboard/SM\ndrained/U\ndrainer/M\ndrainpipe/MS\ndrain/SZGRDM\nDrake/M\ndrake/SM\nDramamine/MS\ndrama/SM\ndramatically/U\ndramatical/Y\ndramatic/S\ndramatics/M\ndramatist/MS\ndramatization/MS\ndramatized/U\ndramatizer/M\ndramatize/SRDZG\ndramaturgy/M\nDrambuie/M\ndrammed\ndramming\ndram/MS\ndrank\nDrano/M\ndraper/M\ndrapery/MS\ndrape/SRDGZ\ndrastic\ndrastically\ndrat/S\ndratted\ndratting\nDravidian/M\ndrawable\ndraw/ASG\ndrawback/MS\ndrawbridge/SM\ndrawer/SM\ndrawing/SM\ndrawler/M\ndrawling/Y\ndrawl/RDSG\ndrawly\ndrawn/AI\ndrawnly\ndrawnness\ndrawstring/MS\ndray/SMDG\ndreadfulness/SM\ndreadful/YPS\ndreadlocks\ndreadnought/SM\ndread/SRDG\ndreamboat/SM\ndreamed/U\ndreamer/M\ndreamily\ndreaminess/SM\ndreaming/Y\ndreamland/SM\ndreamlessness/M\ndreamless/PY\ndreamlike\ndream/SMRDZG\ndreamworld/S\ndreamy/PTR\ndrearily\ndreariness/SM\ndrear/S\ndreary/TRSP\nDreddy/M\ndredge/MZGSRD\ndredger/M\nDredi/M\ndreg/MS\nDreiser/M\nDre/M\ndrencher/M\ndrench/GDRS\nDresden/M\ndress/ADRSG\ndressage/MS\ndressed/U\ndresser/MS\ndresser\'s/A\ndresses/U\ndressiness/SM\ndressing/MS\ndressmaker/MS\ndressmaking/SM\ndressy/PTR\ndrew/A\nDrew/M\nDrexel/M\nDreyfus/M\nDreyfuss\ndribble/DRSGZ\ndribbler/M\ndriblet/SM\ndrib/SM\ndried/U\ndrier/M\ndrifter/M\ndrifting/Y\ndrift/RDZSG\ndriftwood/SM\ndriller/M\ndrilling/M\ndrillmaster/SM\ndrill/MRDZGS\ndrinkable/S\ndrink/BRSZG\ndrinker/M\ndripped\ndripping/MS\ndrippy/RT\ndrip/SM\ndriveler/M\ndrivel/GZDRS\ndriven/P\ndriver/M\ndrive/SRBGZJ\ndriveway/MS\ndrizzle/DSGM\ndrizzling/Y\ndrizzly/TR\nDr/M\ndrogue/MS\ndrollery/SM\ndrollness/MS\ndroll/RDSPTG\ndrolly\ndromedary/MS\nDrona/M\ndrone/SRDGM\ndroning/Y\ndrool/GSRD\ndroopiness/MS\ndrooping/Y\ndroop/SGD\ndroopy/PRT\ndrophead\ndropkick/S\ndroplet/SM\ndropout/MS\ndropped\ndropper/SM\ndropping/MS\ndropsical\ndrop/SM\ndropsy/MS\ndrosophila/M\ndross/SM\ndrought/SM\ndrover/M\ndrove/SRDGZ\ndrowner/M\ndrown/RDSJG\ndrowse/SDG\ndrowsily\ndrowsiness/SM\ndrowsy/PTR\ndrubbed\ndrubber/MS\ndrubbing/SM\ndrub/S\nDrucie/M\nDrucill/M\nDruci/M\nDrucy/M\ndrudge/MGSRD\ndrudger/M\ndrudgery/SM\ndrudging/Y\nDrud/M\ndrugged\ndruggie/SRT\ndrugging\ndruggist/SM\nDrugi/M\ndrugless\ndrug/SM\ndrugstore/SM\ndruidism/MS\ndruid/MS\nDruid\'s\nDru/M\ndrumbeat/SGM\ndrumhead/M\ndrumlin/MS\ndrummed\ndrummer/SM\ndrumming\nDrummond/M\ndrum/SM\ndrumstick/SM\ndrunkard/SM\ndrunkenness/SM\ndrunken/YP\ndrunk/SRNYMT\ndrupe/SM\nDrury/M\nDrusie/M\nDrusilla/M\nDrusi/M\nDrusy/M\ndruthers\ndryad/MS\nDryden/M\ndryer/MS\ndry/GYDRSTZ\ndryish\ndryness/SM\ndrys\ndrystone\ndrywall/GSD\nD\'s\nd\'s/A\nDshubba/M\nDST\nDTP\ndualism/MS\ndualistic\ndualist/M\nduality/MS\ndual/YS\nDuane/M\nDubai/M\ndubbed\ndubber/S\ndubbing/M\ndubbin/MS\nDubcek/M\nDubhe/M\ndubiety/MS\ndubiousness/SM\ndubious/YP\nDublin/M\nDubrovnik/M\ndub/S\nDubuque/M\nducal\nducat/SM\nduce/CAIKF\nduce\'s\nDuchamp/M\nduchess/MS\nduchy/SM\nduckbill/SM\nducker/M\nduck/GSRDM\nduckling/SM\nduckpins\nduckpond\nduckweed/MS\nducky/RSMT\nducted/CFI\nductile/I\nductility/SM\nducting/F\nduct/KMSF\nductless\nduct\'s/A\nducts/CI\nductwork/M\ndudder\ndude/MS\ndudgeon/SM\ndud/GMDS\nDudley/M\nDud/M\nduelist/MS\nduel/MRDGZSJ\ndueness/M\nduenna/MS\ndue/PMS\nduet/MS\nduetted\nduetting\nduffel/M\nduffer/M\nduff/GZSRDM\nDuffie/M\nDuff/M\nDuffy/M\nDugald/M\ndugout/SM\ndug/S\nduh\nDUI\nDuisburg/M\ndukedom/SM\nduke/DSMG\nDuke/M\nDukey/M\nDukie/M\nDuky/M\nDulcea/M\nDulce/M\ndulcet/SY\nDulcia/M\nDulciana/M\nDulcie/M\ndulcify\nDulci/M\ndulcimer/MS\nDulcinea/M\nDulcine/M\nDulcy/M\ndullard/MS\nDulles/M\ndullness/MS\ndull/SRDPGT\ndully\ndulness\'s\nDulsea/M\nDuluth/M\nduly/U\nDu/M\nDumas\ndumbbell/MS\ndumbfound/GSDR\ndumbness/MS\nDumbo/M\ndumb/PSGTYRD\ndumbstruck\ndumbwaiter/SM\ndumdum/MS\ndummy/SDMG\nDumont/M\ndumper/UM\ndumpiness/MS\ndumpling/MS\ndump/SGZRD\ndumpster/S\nDumpster/S\nDumpty/M\ndumpy/PRST\nDunant/M\nDunbar/M\nDuncan/M\ndunce/MS\nDunc/M\nDundee/M\ndunderhead/MS\nDunedin/M\ndune/SM\ndungaree/SM\ndungeon/GSMD\ndunghill/MS\ndung/SGDM\nDunham/M\ndunker/M\ndunk/GSRD\nDunkirk/M\nDunlap/M\nDun/M\ndunned\nDunne/M\ndunner\ndunnest\ndunning\nDunn/M\ndunno/M\ndun/S\nDunstan/M\nduodecimal/S\nduodena\nduodenal\nduodenum/M\nduologue/M\nduo/MS\nduopolist\nduopoly/M\ndupe/NGDRSMZ\nduper/M\ndupion/M\nduple\nduplexer/M\nduplex/MSRDG\nduplicability/M\nduplicable\nduplicate/ADSGNX\nduplication/AM\nduplicative\nduplicator/MS\nduplicitous\nduplicity/SM\nDupont/MS\nDuPont/MS\ndurability/MS\ndurableness/M\ndurable/PS\ndurably\nDuracell/M\ndurance/SM\nDurand/M\nDuran/M\nDurante/M\nDurant/M\ndurational\nduration/MS\nDurban/M\nD�rer/M\nduress/SM\nDurex/M\nDurham/MS\nduring\nDurkee/M\nDurkheim/M\nDur/M\nDurocher/M\ndurst\ndurum/MS\nDurward/M\nDuse/M\nDusenberg/M\nDusenbury/M\nDushanbe/M\ndusk/GDMS\nduskiness/MS\ndusky/RPT\nD�sseldorf\ndustbin/MS\ndustcart/M\ndustcover\nduster/M\ndustily\ndustiness/MS\ndusting/M\nDustin/M\ndustless\ndustman/M\ndustmen\ndust/MRDGZS\ndustpan/SM\nDusty/M\ndusty/RPT\nDutch/M\nDutchman/M\nDutchmen\ndutch/MS\nDutchwoman\nDutchwomen\nduteous/Y\ndutiable\ndutifulness/S\ndutiful/UPY\nduty/SM\nDuvalier/M\nduvet/SM\nduxes\nDvina/M\nDvor�k/M\nDwain/M\ndwarfish\ndwarfism/MS\ndwarf/MTGSPRD\nDwayne/M\ndweeb/S\ndweller/SM\ndwell/IGS\ndwelling/MS\ndwelt/I\nDWI\nDwight/M\ndwindle/GSD\ndyadic\ndyad/MS\nDyana/M\nDyane/M\nDyan/M\nDyanna/M\nDyanne/M\nDyann/M\ndybbukim\ndybbuk/SM\ndyed/A\ndyeing/M\ndye/JDRSMZG\ndyer/M\nDyer/M\ndyes/A\ndyestuff/SM\ndying/UA\nDyke/M\ndyke\'s\nDylan/M\nDy/M\nDynah/M\nDyna/M\ndynamical/Y\ndynamic/S\ndynamics/M\ndynamism/SM\ndynamiter/M\ndynamite/RSDZMG\ndynamized\ndynamo/MS\ndynastic\ndynasty/MS\ndyne/M\ndysentery/SM\ndysfunctional\ndysfunction/MS\ndyslectic/S\ndyslexia/MS\ndyslexically\ndyslexic/S\ndyspepsia/MS\ndyspeptic/S\ndysprosium/MS\ndystopia/M\ndystrophy/M\ndz\nDzerzhinsky/M\nE\nea\neach\nEachelle/M\nEada/M\nEadie/M\nEadith/M\nEadmund/M\neagerness/MS\neager/TSPRYM\neagle/SDGM\neaglet/SM\nEakins/M\nEalasaid/M\nEal/M\nEamon/M\nearache/SM\neardrum/SM\nearful/MS\near/GSMDYH\nEarhart/M\nearing/M\nearldom/MS\nEarle/M\nEarlene/M\nEarlie/M\nEarline/M\nearliness/SM\nEarl/M\nearl/MS\nearlobe/S\nEarly/M\nearly/PRST\nearmark/DGSJ\nearmuff/SM\nearned/U\nearner/M\nEarnestine/M\nEarnest/M\nearnestness/MS\nearnest/PYS\nearn/GRDZTSJ\nearning/M\nearphone/MS\nearpieces\nearplug/MS\nEarp/M\nearring/MS\nearshot/MS\nearsplitting\nEartha/M\nearthbound\nearthed/U\nearthenware/MS\nearthiness/SM\nearthliness/M\nearthling/MS\nearthly/TPR\nearth/MDNYG\nearthmen\nearthmover/M\nearthmoving\nearthquake/SDGM\nearthshaking\nearths/U\nearthward/S\nearthwork/MS\nearthworm/MS\nearthy/PTR\nEarvin/M\nearwax/MS\nearwigged\nearwigging\nearwig/MS\neased/E\nease/LDRSMG\neasel/MS\neasement/MS\neaser/M\nease\'s/EU\neases/UE\neasies\neasily/U\neasiness/MSU\neasing/M\neastbound\neasterly/S\nEaster/M\neasterner/M\nEasterner/M\neasternmost\nEastern/RZ\neastern/ZR\neaster/Y\neast/GSMR\nEasthampton/M\neasting/M\nEastland/M\nEastman/M\neastward/S\nEastwick/M\nEastwood/M\nEast/ZSMR\neasygoingness/M\neasygoing/P\neasy/PUTR\neatables\neatable/U\neaten/U\neater/M\neatery/MS\neating/M\nEaton/M\neat/SJZGNRB\neavesdropped\neavesdropper/MS\neavesdropping\neavesdrop/S\neave/SM\nEba/M\nEbba/M\nebb/DSG\nEBCDIC\nEbeneezer/M\nEbeneser/M\nEbenezer/M\nEben/M\nEberhard/M\nEberto/M\nEb/MN\nEbola\nEbonee/M\nEbonics\nEbony/M\nebony/SM\nEbro/M\nebullience/SM\nebullient/Y\nebullition/SM\nEC\neccentrically\neccentricity/SM\neccentric/MS\neccl\nEccles\nEcclesiastes/M\necclesiastical/Y\necclesiastic/MS\nECG\nechelon/SGDM\nechinoderm/SM\necho/DMG\nechoed/A\nechoes/A\nechoic\necholocation/SM\n�clair/MS\n�clat/MS\neclectically\neclecticism/MS\neclectic/S\neclipse/MGSD\necliptic/MS\neclogue/MS\necocide/SM\necol\nEcole/M\necologic\necological/Y\necologist/MS\necology/MS\nEco/M\necon\nEconometrica/M\neconometricians\neconometric/S\neconometrics/M\neconomical/YU\neconomic/S\neconomics/M\neconomist/MS\neconomization\neconomize/GZSRD\neconomizer/M\neconomizing/U\neconomy/MS\necosystem/MS\necru/SM\necstasy/MS\nEcstasy/S\necstatically\necstatic/S\nectoplasm/M\nEcuadoran/S\nEcuadorean/S\nEcuadorian/S\nEcuador/M\necumenical/Y\necumenicism/SM\necumenicist/MS\necumenic/MS\necumenics/M\necumenism/SM\necumenist/MS\neczema/MS\nEda/M\nEdam/SM\nEdan/M\ned/ASC\nEdda/M\nEddie/M\nEddi/M\nEdd/M\nEddy/M\neddy/SDMG\nEdee/M\nEdeline/M\nedelweiss/MS\nEde/M\nedema/SM\nedematous\neden\nEden/M\nEdgard/M\nEdgardo/M\nEdgar/M\nedge/DRSMZGJ\nedgeless\nedger/M\nEdgerton/M\nEdgewater/M\nedgewise\nEdgewood/M\nedgily\nedginess/MS\nedging/M\nedgy/TRP\nedibility/MS\nedibleness/SM\nedible/SP\nedict/SM\nEdie/M\nedification/M\nedifice/SM\nedifier/M\nedifying/U\nedify/ZNXGRSD\nEdik/M\nEdi/MH\nEdinburgh/M\nEdin/M\nEdison/M\neditable\nEdita/M\nedited/IU\nEditha/M\nEdithe/M\nEdith/M\nedition/SM\neditorialist/M\neditorialize/DRSG\neditorializer/M\neditorial/YS\neditor/MS\neditorship/MS\nedit/SADG\nEdiva/M\nEdlin/M\nEdmond/M\nEdmon/M\nEdmonton/M\nEdmund/M\nEdna/M\nEdouard/M\nEDP\neds\nEdsel/M\nEdsger/M\nEDT\nEduard/M\nEduardo/M\neducability/SM\neducable/S\neducated/YP\neducate/XASDGN\neducationalists\neducational/Y\neducation/AM\neducationists\neducative\neducator/MS\neduc/DBG\neduce/S\neduction/M\nEduino/M\nedutainment/S\nEdvard/M\nEdwardian\nEdwardo/M\nEdward/SM\nEdwina/M\nEdwin/M\nEd/XMN\nEdy/M\nEdythe/M\nEdyth/M\nEEC\nEEG\neek/S\neelgrass/M\neel/MS\ne\'en\nEEO\nEEOC\ne\'er\neerie/RT\neerily\neeriness/MS\nEeyore/M\neffaceable/I\neffacement/MS\neffacer/M\nefface/SRDLG\neffectiveness/ISM\neffectives\neffective/YIP\neffector/MS\neffect/SMDGV\neffectual/IYP\neffectualness/MI\neffectuate/SDGN\neffectuation/M\neffeminacy/MS\neffeminate/SY\neffendi/MS\nefferent/SY\neffervesce/GSD\neffervescence/SM\neffervescent/Y\neffeteness/SM\neffete/YP\nefficacious/IPY\nefficaciousness/MI\nefficacy/IMS\nefficiency/MIS\nefficient/ISY\nEffie/M\neffigy/SM\neffloresce\nefflorescence/SM\nefflorescent\neffluence/SM\neffluent/MS\neffluvia\neffluvium/M\neffluxion\nefflux/M\neffortlessness/SM\neffortless/PY\neffort/MS\neffrontery/MS\neffulgence/SM\neffulgent\neffuse/XSDVGN\neffusion/M\neffusiveness/MS\neffusive/YP\nEFL\ne/FMDS\nEfrain/M\nEfrem/M\nEfren/M\nEFT\negad\negalitarian/I\negalitarianism/MS\negalitarians\nEGA/M\nEgan/M\nEgbert/M\nEgerton/M\neggbeater/SM\neggcup/MS\negger/M\negg/GMDRS\neggheaded/P\negghead/SDM\neggnog/SM\neggplant/MS\neggshell/SM\negis\'s\neglantine/MS\negocentrically\negocentricity/SM\negocentric/S\negoism/SM\negoistic\negoistical/Y\negoist/SM\negomaniac/MS\negomania/MS\nEgon/M\nEgor/M\nego/SM\negotism/SM\negotistic\negotistical/Y\negotist/MS\negregiousness/MS\negregious/PY\negress/SDMG\negret/SM\nEgyptian/S\nEgypt/M\nEgyptology/M\neh\nEhrlich/M\nEichmann/M\neiderdown/SM\neider/SM\neidetic\nEiffel/M\neigenfunction/MS\neigenstate/S\neigenvalue/SM\neigenvector/MS\neighteen/MHS\neighteenths\neightfold\neighth/MS\neighths\neightieths\neightpence\neight/SM\neighty/SHM\nEileen/M\nEilis/M\nEimile/M\nEinsteinian\neinsteinium/MS\nEinstein/SM\nEire/M\nEirena/M\nEisenhower/M\nEisenstein/M\nEisner/M\neisteddfod/M\neither\nejaculate/SDXNG\nejaculation/M\nejaculatory\nejecta\nejection/SM\nejector/SM\neject/VGSD\nEkaterina/M\nEkberg/M\neked/A\neke/DSG\nEKG\nEkstrom/M\nEktachrome/M\nelaborateness/SM\nelaborate/SDYPVNGX\nelaboration/M\nelaborators\nElaina/M\nElaine/M\nElana/M\neland/SM\nElane/M\n�lan/M\nElanor/M\nelans\nelapse/SDG\nel/AS\nelastically/I\nelasticated\nelasticity/SM\nelasticize/GDS\nelastic/S\nelastodynamics\nelastomer/M\nelatedness/M\nelated/PY\nelater/M\nelate/SRDXGN\nelation/M\nElayne/M\nElba/MS\nElbe/M\nElberta/M\nElbertina/M\nElbertine/M\nElbert/M\nelbow/GDMS\nelbowroom/SM\nElbrus/M\nElden/M\nelderberry/MS\nelderflower\nelderliness/M\nelderly/PS\nelder/SY\neldest\nEldin/M\nEldon/M\nEldorado\'s\nEldredge/M\nEldridge/M\nEleanora/M\nEleanore/M\nEleanor/M\nEleazar/M\nelectable/U\nelect/ASGD\nelected/U\nelectioneer/GSD\nelection/SAM\nelectiveness/M\nelective/SPY\nelectoral/Y\nelectorate/SM\nelector/SM\nElectra/M\nelectress/M\nelectricalness/M\nelectrical/PY\nelectrician/SM\nelectricity/SM\nelectric/S\nelectrification/M\nelectrifier/M\nelectrify/ZXGNDRS\nelectrocardiogram/MS\nelectrocardiograph/M\nelectrocardiographs\nelectrocardiography/MS\nelectrochemical/Y\nelectrocute/GNXSD\nelectrocution/M\nelectrode/SM\nelectrodynamics/M\nelectrodynamic/YS\nelectroencephalogram/SM\nelectroencephalographic\nelectroencephalograph/M\nelectroencephalographs\nelectroencephalography/MS\nelectrologist/MS\nelectroluminescent\nelectrolysis/M\nelectrolyte/SM\nelectrolytic\nelectrolytically\nelectrolyze/SDG\nelectro/M\nelectromagnetic\nelectromagnetically\nelectromagnetism/SM\nelectromagnet/SM\nelectromechanical\nelectromechanics\nelectromotive\nelectromyograph\nelectromyographic\nelectromyographically\nelectromyography/M\nelectronegative\nelectronically\nelectronic/S\nelectronics/M\nelectron/MS\nelectrophoresis/M\nelectrophorus/M\nelectroplate/DSG\nelectroscope/MS\nelectroscopic\nelectroshock/GDMS\nelectrostatic/S\nelectrostatics/M\nelectrotherapist/M\nelectrotype/GSDZM\nelectroweak\neleemosynary\nEleen/M\nelegance/ISM\nelegant/YI\nelegiacal\nelegiac/S\nelegy/SM\nelem\nelemental/YS\nelementarily\nelementariness/M\nelementary/P\nelement/MS\nElena/M\nElene/M\nEleni/M\nElenore/M\nEleonora/M\nEleonore/M\nelephantiases\nelephantiasis/M\nelephantine\nelephant/SM\nelevated/S\nelevate/XDSNG\nelevation/M\nelevator/SM\neleven/HM\nelevens/S\nelevenths\nelev/NX\nElfie/M\nelfin/S\nelfish\nelf/M\nElfreda/M\nElfrida/M\nElfrieda/M\nElga/M\nElgar/M\nElianora/M\nElianore/M\nElia/SM\nElicia/M\nelicitation/MS\nelicit/GSD\nelide/GSD\nElie/M\neligibility/ISM\neligible/SI\nElihu/M\nElijah/M\nEli/M\neliminate/XSDYVGN\nelimination/M\neliminator/SM\nElinore/M\nElinor/M\nEliot/M\nElisabeth/M\nElisabet/M\nElisabetta/M\nElisa/M\nElise/M\nEliseo/M\nElisha/M\nelision/SM\nElissa/M\nElita/M\nelite/MPS\nelitism/SM\nelitist/SM\nelixir/MS\nElizabethan/S\nElizabeth/M\nElizabet/M\nEliza/M\nElka/M\nElke/M\nElkhart/M\nelk/MS\nElladine/M\nElla/M\nEllary/M\nElle/M\nEllene/M\nEllen/M\nEllerey/M\nEllery/M\nEllesmere/M\nEllette/M\nEllie/M\nEllington/M\nElliot/M\nElliott/M\nellipse/MS\nellipsis/M\nellipsoidal\nellipsoid/MS\nellipsometer/MS\nellipsometry\nelliptic\nelliptical/YS\nellipticity/M\nElli/SM\nEllison/M\nEllissa/M\nell/MS\nEllswerth/M\nEllsworth/M\nEllwood/M\nElly/M\nEllyn/M\nEllynn/M\nElma/M\nElmer/M\nElmhurst/M\nElmira/M\nelm/MRS\nElmo/M\nElmore/M\nElmsford/M\nEl/MY\nElna/MH\nElnar/M\nElnath/M\nElnora/M\nElnore/M\nelocutionary\nelocutionist/MS\nelocution/SM\nelodea/S\nElohim/M\nEloisa/M\nEloise/M\nelongate/NGXSD\nelongation/M\nElonore/M\nelopement/MS\neloper/M\nelope/SRDLG\neloquence/SM\neloquent/IY\nElora/M\nEloy/M\nElroy/M\nels\nElsa/M\nElsbeth/M\nelse/M\nElse/M\nElset/M\nelsewhere\nElsey/M\nElsie/M\nElsi/M\nElsinore/M\nElspeth/M\nElston/M\nElsworth/M\nElsy/M\nEltanin/M\nElton/M\neluate/SM\nelucidate/SDVNGX\nelucidation/M\nelude/GSD\nelusiveness/SM\nelusive/YP\nelute/DGN\nelution/M\nElva/M\nelven\nElvera/M\nelver/SM\nelves/M\nElvia/M\nElvina/M\nElvin/M\nElvira/M\nelvish\nElvis/M\nElvyn/M\nElwin/M\nElwira/M\nElwood/M\nElwyn/M\nEly/M\nElyn/M\nElys�e/M\nElysees\nElyse/M\nElysha/M\nElysia/M\nelysian\nElysian\nElysium/SM\nElyssa/M\nEM\nemaciate/NGXDS\nemaciation/M\nemacs/M\nEmacs/M\nemail/SMDG\nEmalee/M\nEmalia/M\nEma/M\nemanate/XSDVNG\nemanation/M\nemancipate/DSXGN\nemancipation/M\nemancipator/MS\nEmanuele/M\nEmanuel/M\nemasculate/GNDSX\nemasculation/M\nembalmer/M\nembalm/ZGRDS\nembank/GLDS\nembankment/MS\nembarcadero\nembargoes\nembargo/GMD\nembark/ADESG\nembarkation/EMS\nembarrassedly\nembarrassed/U\nembarrassing/Y\nembarrassment/MS\nembarrass/SDLG\nembassy/MS\nembattle/DSG\nembeddable\nembedded\nembedder\nembedding/MS\nembed/S\nembellished/U\nembellisher/M\nembellish/LGRSD\nembellishment/MS\nember/MS\nembezzle/LZGDRS\nembezzlement/MS\nembezzler/M\nembitter/LGDS\nembitterment/SM\nemblazon/DLGS\nemblazonment/SM\nemblematic\nemblem/GSMD\nembodier/M\nembodiment/ESM\nembody/ESDGA\nembolden/DSG\nembolism/SM\nembosom\nembosser/M\nemboss/ZGRSD\nembouchure/SM\nembower/GSD\nembraceable\nembracer/M\nembrace/RSDVG\nembracing/Y\nembrasure/MS\nembrittle\nembrocation/SM\nembroiderer/M\nembroider/SGZDR\nembroidery/MS\nembroilment/MS\nembroil/SLDG\nembryologist/SM\nembryology/MS\nembryonic\nembryo/SM\nemceeing\nemcee/SDM\nEmelda/M\nEmelen/M\nEmelia/M\nEmelina/M\nEmeline/M\nEmelita/M\nEmelyne/M\nemendation/MS\nemend/SRDGB\nemerald/SM\nEmera/M\nemerge/ADSG\nemergence/MAS\nemergency/SM\nemergent/S\nemerita\nemeritae\nemeriti\nemeritus\nEmerson/M\nEmery/M\nemery/MGSD\nemetic/S\nemf/S\nemigrant/MS\nemigrate/SDXNG\nemigration/M\n�migr�/S\nEmilee/M\nEmile/M\nEmilia/M\nEmilie/M\nEmili/M\nEmiline/M\nEmilio/M\nEmil/M\nEmily/M\neminence/MS\nEminence/MS\neminent/Y\nemirate/SM\nemir/SM\nemissary/SM\nemission/AMS\nemissivity/MS\nemit/S\nemittance/M\nemitted\nemitter/SM\nemitting\nEmlen/M\nEmlyn/M\nEmlynne/M\nEmlynn/M\nem/M\nEm/M\nEmmalee/M\nEmmaline/M\nEmmalyn/M\nEmmalynne/M\nEmmalynn/M\nEmma/M\nEmmanuel/M\nEmmeline/M\nEmmerich/M\nEmmery/M\nEmmet/M\nEmmett/M\nEmmey/M\nEmmie/M\nEmmi/M\nEmmit/M\nEmmott/M\nEmmye/M\nEmmy/SM\nEmogene/M\nemollient/S\nemolument/SM\nEmory/M\nemote/SDVGNX\nemotionalism/MS\nemotionality/M\nemotionalize/GDS\nemotional/UY\nemotionless\nemotion/M\nemotive/Y\nempaneled\nempaneling\nempath\nempathetic\nempathetical/Y\nempathic\nempathize/SDG\nempathy/MS\nemperor/MS\nemphases\nemphasis/M\nemphasize/ZGCRSDA\nemphatically/U\nemphatic/U\nemphysema/SM\nemphysematous\nempire/MS\nempirical/Y\nempiricism/SM\nempiricist/SM\nempiric/SM\nemplace/L\nemplacement/MS\nemployability/UM\nemployable/US\nemployed/U\nemployee/SM\nemployer/SM\nemploy/LAGDS\nemployment/UMAS\nemporium/MS\nempower/GLSD\nempowerment/MS\nempress/MS\nemptier/M\nemptily\nemptiness/SM\nempty/GRSDPT\nempyrean/SM\nems/C\nEMT\nemulate/SDVGNX\nemulation/M\nemulative/Y\nemulator/MS\nemulsification/M\nemulsifier/M\nemulsify/NZSRDXG\nemulsion/SM\nemu/SM\nEmylee/M\nEmyle/M\nenabler/M\nenable/SRDZG\nenactment/ASM\nenact/SGALD\nenameler/M\nenamelware/SM\nenamel/ZGJMDRS\nenamor/DSG\nen/BM\nenc\nencamp/LSDG\nencampment/MS\nencapsulate/SDGNX\nencapsulation/M\nencase/GSDL\nencasement/SM\nencephalitic\nencephalitides\nencephalitis/M\nencephalographic\nencephalopathy/M\nenchain/SGD\nenchanter/MS\nenchant/ESLDG\nenchanting/Y\nenchantment/MSE\nenchantress/MS\nenchilada/SM\nencipherer/M\nencipher/SRDG\nencircle/GLDS\nencirclement/SM\nencl\nenclave/MGDS\nenclosed/U\nenclose/GDS\nenclosure/SM\nencoder/M\nencode/ZJGSRD\nencomium/SM\nencompass/GDS\nencore/GSD\nencounter/GSD\nencouragement/SM\nencourager/M\nencourage/SRDGL\nencouraging/Y\nencroacher/M\nencroach/LGRSD\nencroachment/MS\nencrustation/MS\nencrust/DSG\nencrypt/DGS\nencrypted/U\nencryption/SM\nencumbered/U\nencumber/SEDG\nencumbrancer/M\nencumbrance/SRM\nency\nencyclical/SM\nencyclopaedia\'s\nencyclopedia/SM\nencyclopedic\nencyst/GSLD\nencystment/MS\nendanger/DGSL\nendangerment/SM\nendear/GSLD\nendearing/Y\nendearment/MS\nendeavored/U\nendeavorer/M\nendeavor/GZSMRD\nendemically\nendemicity\nendemic/S\nender/M\nendgame/M\nEndicott/M\nending/M\nendive/SM\nendlessness/MS\nendless/PY\nendmost\nendnote/MS\nendocrine/S\nendocrinologist/SM\nendocrinology/SM\nendogamous\nendogamy/M\nendogenous/Y\nendomorphism/SM\nendorse/DRSZGL\nendorsement/MS\nendorser/M\nendoscope/MS\nendoscopic\nendoscopy/SM\nendosperm/M\nendothelial\nendothermic\nendow/GSDL\nendowment/SM\nendpoint/MS\nendue/SDG\nendungeoned\nendurable/U\nendurably/U\nendurance/SM\nendure/BSDG\nenduringness/M\nenduring/YP\nendways\nEndymion/M\nend/ZGVMDRSJ\nENE\nenema/SM\nenemy/SM\nenergetically\nenergetic/S\nenergetics/M\nenergized/U\nenergizer/M\nenergize/ZGDRS\nenergy/MS\nenervate/XNGVDS\nenervation/M\nenfeeble/GLDS\nenfeeblement/SM\nenfilade/MGDS\nenfold/SGD\nenforceability/M\nenforceable/U\nenforced/Y\nenforce/LDRSZG\nenforcement/SM\nenforcer/M\nenforcible/U\nenfranchise/ELDRSG\nenfranchisement/EMS\nenfranchiser/M\nengage/ADSGE\nengagement/SEM\nengaging/Y\nEngelbert/M\nEngel/MS\nengender/DGS\nengineer/GSMDJ\nengineering/MY\nengine/MGSD\nEngland/M\nengland/ZR\nEnglebert/M\nEnglewood/M\nEnglish/GDRSM\nEnglishman/M\nEnglishmen\nEnglishwoman/M\nEnglishwomen\nEng/M\nengorge/LGDS\nengorgement/MS\nEngracia/M\nengram/MS\nengraver/M\nengrave/ZGDRSJ\nengraving/M\nengrossed/Y\nengrosser/M\nengross/GLDRS\nengrossing/Y\nengrossment/SM\nengulf/GDSL\nengulfment/SM\nenhanceable\nenhance/LZGDRS\nenhancement/MS\nenhancer/M\nenharmonic\nEnid/M\nEnif/M\nenigma/MS\nenigmatic\nenigmatically\nEniwetok/M\nenjambement\'s\nenjambment/MS\nenjoinder\nenjoin/GSD\nenjoyability\nenjoyableness/M\nenjoyable/P\nenjoyably\nenjoy/GBDSL\nenjoyment/SM\nEnkidu/M\nenlargeable\nenlarge/LDRSZG\nenlargement/MS\nenlarger/M\nenlightened/U\nenlighten/GDSL\nenlightening/U\nenlightenment/SM\nenlistee/MS\nenlister/M\nenlistment/SAM\nenlist/SAGDL\nenliven/LDGS\nenlivenment/SM\nenmesh/DSLG\nenmeshment/SM\nenmity/MS\nEnnis/M\nennoble/LDRSG\nennoblement/SM\nennobler/M\nennui/SM\nEnoch/M\nenormity/SM\nenormousness/MS\nenormous/YP\nEnos\nenough\nenoughs\nenplane/DSG\nenqueue/DS\nenquirer/S\nenquiringly\nenrage/SDG\nenrapture/GSD\nEnrica/M\nenricher/M\nEnrichetta/M\nenrich/LDSRG\nenrichment/SM\nEnrico/M\nEnrika/M\nEnrique/M\nEnriqueta/M\nenrobed\nenrollee/SM\nenroll/LGSD\nenrollment/SM\nens\nensconce/DSG\nensemble/MS\nenshrine/DSLG\nenshrinement/SM\nenshroud/DGS\nensign/SM\nensilage/DSMG\nenslavement/MS\nenslaver/M\nenslave/ZGLDSR\nensnare/GLDS\nensnarement/SM\nEnsolite/M\nensue/SDG\nensurer/M\nensure/SRDZG\nentailer/M\nentailment/MS\nentail/SDRLG\nentangle/EGDRSL\nentanglement/ESM\nentangler/EM\nentente/MS\nenter/ASDG\nentered/U\nenterer/M\nenteritides\nenteritis/SM\nenterprise/GMSR\nEnterprise/M\nenterpriser/M\nenterprising/Y\nentertainer/M\nentertaining/Y\nentertainment/SM\nentertain/SGZRDL\nenthalpy/SM\nenthrall/GDSL\nenthrallment/SM\nenthrone/GDSL\nenthronement/MS\nenthuse/DSG\nenthusiasm/SM\nenthusiastically/U\nenthusiastic/U\nenthusiast/MS\nenticement/SM\nentice/SRDJLZG\nenticing/Y\nentire/SY\nentirety/SM\nentitle/GLDS\nentitlement/MS\nentity/SM\nentomb/GDSL\nentombment/MS\nentomological\nentomologist/S\nentomology/MS\nentourage/SM\nentr\'acte/S\nentrails\nentrainer/M\nentrain/GSLDR\nentrancement/MS\nentrance/MGDSL\nentranceway/M\nentrancing/Y\nentrant/MS\nentrapment/SM\nentrapped\nentrapping\nentrap/SL\nentreating/Y\nentreat/SGD\nentreaty/SM\nentr�e/S\nentrench/LSDG\nentrenchment/MS\nentrepreneurial\nentrepreneur/MS\nentrepreneurship/M\nentropic\nentropy/MS\nentrust/DSG\nentry/ASM\nentryway/SM\nentwine/DSG\nenumerable\nenumerate/AN\nenumerated/U\nenumerates\nenumerating\nenumeration\'s/A\nenumeration/SM\nenumerative\nenumerator/SM\nenunciable\nenunciated/U\nenunciate/XGNSD\nenunciation/M\nenureses\nenuresis/M\nenvelope/MS\nenveloper/M\nenvelopment/MS\nenvelop/ZGLSDR\nenvenom/SDG\nenviableness/M\nenviable/U\nenviably\nenvied/U\nenvier/M\nenviousness/SM\nenvious/PY\nenviron/LGSD\nenvironmentalism/SM\nenvironmentalist/SM\nenvironmental/Y\nenvironment/MS\nenvisage/DSG\nenvision/GSD\nenvoy/SM\nenvying/Y\nenvy/SRDMG\nenzymatic\nenzymatically\nenzyme/SM\nenzymology/M\nEocene\nEOE\neohippus/M\nEolanda/M\nEolande/M\neolian\neon/SM\nEPA\nepaulet/SM\n�p�e/S\nephedrine/MS\nephemeral/SY\nephemera/MS\nephemerids\nephemeris/M\nEphesian/S\nEphesians/M\nEphesus/M\nEphraim/M\nEphrayim/M\nEphrem/M\nepically\nepicenter/SM\nepic/SM\nEpictetus/M\nEpicurean\nepicurean/S\nepicure/SM\nEpicurus/M\nepicycle/MS\nepicyclic\nepicyclical/Y\nepicycloid/M\nepidemically\nepidemic/MS\nepidemiological/Y\nepidemiologist/MS\nepidemiology/MS\nepidermal\nepidermic\nepidermis/MS\nepidural\nepigenetic\nepiglottis/SM\nepigrammatic\nepigram/MS\nepigrapher/M\nepigraph/RM\nepigraphs\nepigraphy/MS\nepilepsy/SM\nepileptic/S\nepilogue/SDMG\nEpimethius/M\nepinephrine/SM\nepiphany/SM\nEpiphany/SM\nepiphenomena\nepiscopacy/MS\nepiscopalian\nEpiscopalian/S\nEpiscopal/S\nepiscopal/Y\nepiscopate/MS\nepisode/SM\nepisodic\nepisodically\nepistemic\nepistemological/Y\nepistemology/M\nepistle/MRS\nEpistle/SM\nepistolary/S\nepistolatory\nepitaph/GMD\nepitaphs\nepitaxial/Y\nepitaxy/M\nepithelial\nepithelium/MS\nepithet/MS\nepitome/MS\nepitomized/U\nepitomizer/M\nepitomize/SRDZG\nepochal/Y\nepoch/M\nepochs\neponymous\nepoxy/GSD\nepsilon/SM\nEpsom/M\nEpstein/M\nequability/MS\nequableness/M\nequable/P\nequably\nequaling\nequality/ISM\nequalization/MS\nequalize/DRSGJZ\nequalized/U\nequalizer/M\nequalizes/U\nequal/USDY\nequanimity/MS\nequate/NGXBSD\nequation/M\nequatorial/S\nequator/SM\nequerry/MS\nequestrianism/SM\nequestrian/S\nequestrienne/SM\nequiangular\nequidistant/Y\nequilateral/S\nequilibrate/GNSD\nequilibration/M\nequilibrium/MSE\nequine/S\nequinoctial/S\nequinox/MS\nequipage/SM\nequipartition/M\nequip/AS\nequipment/SM\nequipoise/GMSD\nequipotent\nequipped/AU\nequipping/A\nequiproportional\nequiproportionality\nequiproportionate\nequitable/I\nequitableness/M\nequitably/I\nequitation/SM\nequity/IMS\nequiv\nequivalence/DSMG\nequivalent/SY\nequivocalness/MS\nequivocal/UY\nequivocate/NGSDX\nequivocation/M\nequivocator/SM\nEquuleus/M\nER\nERA\neradicable/I\neradicate/SDXVGN\neradication/M\neradicator/SM\nera/MS\nEran/M\nerase/N\neraser/M\nerasion/M\nErasmus/M\neras/SRDBGZ\nErastus/M\nerasure/MS\nErato/M\nEratosthenes/M\nerbium/SM\nErda/M\nere\nErebus/M\nerect/GPSRDY\nerectile\nerection/SM\nerectness/MS\nerector/SM\nErek/M\nerelong\neremite/MS\nErena/M\nergo\nergodic\nergodicity/M\nergonomically\nergonomics/M\nergonomic/U\nergophobia\nergosterol/SM\nergot/SM\nerg/SM\nErhard/M\nErhart/M\nErica/M\nEricha/M\nErich/M\nEricka/M\nErick/M\nErickson/M\nEric/M\nEricson\'s\nEricsson\'s\nEridanus/M\nErie/SM\nErika/M\nErik/M\nErikson/M\nErina/M\nErin/M\nErinna/M\nErinn/M\neris\nEris\nEritrea/M\nErlang/M\nErlenmeyer/M\nErl/M\nEr/M\nErma/M\nErmanno/M\nErmengarde/M\nErmentrude/M\nErmina/M\nermine/MSD\nErminia/M\nErminie/M\nErmin/M\nErnaline/M\nErna/M\nErnesta/M\nErnestine/M\nErnest/M\nErnesto/M\nErnestus/M\nErnie/M\nErnst/M\nErny/M\nerode/SDG\nerodible\nerogenous\nerosible\nerosional\nerosion/SM\nerosiveness/M\nerosive/P\nEros/SM\nerotically\nerotica/M\neroticism/MS\nerotic/S\nerrancy/MS\nerrand/MS\nerrantry/M\nerrant/YS\nerrata/SM\nerratically\nerratic/S\nerratum/MS\nerr/DGS\nErrick/M\nerring/UY\nErroll/M\nErrol/M\nerroneousness/M\nerroneous/YP\nerror/SM\nersatz/S\nErse/M\nErskine/M\nerst\nerstwhile\nErtha/M\neructation/MS\neruct/DGS\nerudite/NYX\nerudition/M\nerupt/DSVG\neruption/SM\neruptive/SY\nErvin/M\nErvIn/M\nErv/M\nErwin/M\nEryn/M\nerysipelas/SM\nerythrocyte/SM\nes\ne\'s\nEs\nE\'s\nEsau/M\nescadrille/M\nescalate/CDSXGN\nescalation/MC\nescalator/SM\nescallop/SGDM\nescapable/I\nescapade/SM\nescapee/MS\nescape/LGSRDB\nescapement/MS\nescaper/M\nescapism/SM\nescapist/S\nescapology\nescarole/MS\nescarpment/MS\neschatology/M\nEscherichia/M\nEscher/M\neschew/SGD\nEscondido/M\nescort/SGMD\nescritoire/SM\nescrow/DMGS\nescudo/MS\nescutcheon/SM\nEsdras/M\nESE\nEskimo/SM\nESL\nEsma/M\nEsmaria/M\nEsmark/M\nEsme/M\nEsmeralda/M\nesophageal\nesophagi\nesophagus/M\nesoteric\nesoterica\nesoterically\nesp\nESP\nespadrille/MS\nEspagnol/M\nespalier/SMDG\nespecial/Y\nEsperanto/M\nEsperanza/M\nEspinoza/M\nespionage/SM\nesplanade/SM\nEsp/M\nEsposito/M\nespousal/MS\nespouser/M\nespouse/SRDG\nespresso/SM\nesprit/SM\nespy/GSD\nEsq/M\nesquire/GMSD\nEsquire/S\nEsra/M\nEssa/M\nessayer/M\nessayist/SM\nessay/SZMGRD\nessence/MS\nEssene/SM\nEssen/M\nessentialist/M\nessentially\nessentialness/M\nessential/USI\nEssequibo/M\nEssex/M\nEssie/M\nEssy/M\nEST\nestablished/U\nestablisher/M\nestablish/LAEGSD\nestablishment/EMAS\nEstablishment/MS\nEsta/M\nestate/GSDM\nEsteban/M\nesteem/EGDS\nEstela/M\nEstele/M\nEstella/M\nEstelle/M\nEstell/M\nEstel/M\nEsterh�zy/M\nester/M\nEster/M\nEstes\nEstevan/M\nEsther/M\nesthete\'s\nesthetically\nesthetic\'s\nesthetics\'s\nestimable/I\nestimableness/M\nestimate/XDSNGV\nestimating/A\nestimation/M\nestimator/SM\nEstonia/M\nEstonian/S\nestoppal\nEstrada/M\nestrange/DRSLG\nestrangement/SM\nestranger/M\nEstrella/M\nEstrellita/M\nestrogen/SM\nestrous\nestrus/SM\nest/RZ\nestuarine\nestuary/SM\net\nET\nETA\nEtan/M\neta/SM\netc\netcetera/SM\netcher/M\netch/GZJSRD\netching/M\nETD\neternalness/SM\neternal/PSY\neternity/SM\nethane/SM\nEthan/M\nethanol/MS\nEthelbert/M\nEthelda/M\nEthelind/M\nEtheline/M\nEthelin/M\nEthel/M\nEthelred/M\nEthelyn/M\nEthe/M\netherealness/M\nethereal/PY\netherized\nEthernet/MS\nether/SM\nethically/U\nethicalness/M\nethical/PYS\nethicist/S\nethic/MS\nEthiopia/M\nEthiopian/S\nethnically\nethnicity/MS\nethnic/S\nethnocentric\nethnocentrism/MS\nethnographers\nethnographic\nethnography/M\nethnological\nethnologist/SM\nethnology/SM\nethnomethodology\nethological\nethologist/MS\nethology/SM\nethos/SM\nethylene/MS\nEthyl/M\nethyl/SM\nEtienne/M\netiologic\netiological\netiology/SM\netiquette/SM\nEtna/M\nEtruria/M\nEtruscan/MS\nEtta/M\nEttie/M\nEtti/M\nEttore/M\nEtty/M\n�tude/MS\netymological/Y\netymologist/SM\netymology/MS\nEU\neucalypti\neucalyptus/SM\nEucharistic\nEucharist/SM\neuchre/MGSD\neuclidean\nEuclid/M\nEudora/M\nEuell/M\nEugene/M\nEugenia/M\neugenically\neugenicist/SM\neugenic/S\neugenics/M\nEugenie/M\nEugenio/M\nEugenius/M\nEugen/M\nEugine/M\nEulalie/M\nEula/M\nEulerian/M\nEuler/M\neulogistic\neulogist/MS\neulogized/U\neulogize/GRSDZ\neulogizer/M\neulogy/MS\nEu/M\nEumenides\nEunice/M\neunuch/M\neunuchs\nEuphemia/M\neuphemism/MS\neuphemistic\neuphemistically\neuphemist/M\neuphonious/Y\neuphonium/M\neuphony/SM\neuphoria/SM\neuphoric\neuphorically\nEuphrates/M\nEurasia/M\nEurasian/S\neureka/S\nEuripides/M\nEur/M\nEurodollar/SM\nEuropa/M\nEuropeanization/SM\nEuropeanized\nEuropean/MS\nEurope/M\neuropium/MS\nEurydice/M\nEustace/M\nEustachian/M\nEustacia/M\neutectic\nEuterpe/M\neuthanasia/SM\neuthenics/M\nevacuate/DSXNGV\nevacuation/M\nevacuee/MS\nevader/M\nevade/SRDBGZ\nEvaleen/M\nevaluable\nevaluate/ADSGNX\nevaluated/U\nevaluational\nevaluation/MA\nevaluative\nevaluator/MS\nEva/M\nevanescence/MS\nevanescent\nEvangelia/M\nevangelic\nevangelicalism/SM\nEvangelical/S\nevangelical/YS\nEvangelina/M\nEvangeline/M\nEvangelin/M\nevangelism/SM\nevangelistic\nevangelist/MS\nEvangelist/MS\nevangelize/GDS\nEvania/M\nEvan/MS\nEvanne/M\nEvanston/M\nEvansville/M\nevaporate/VNGSDX\nevaporation/M\nevaporative/Y\nevaporator/MS\nevasion/SM\nevasiveness/SM\nevasive/PY\nEveleen/M\nEvelina/M\nEveline/M\nEvelin/M\nEvelyn/M\nEve/M\nevened\nevener/M\nevenhanded/YP\nevening/SM\nEvenki/M\nEven/M\nevenness/MSU\neven/PUYRT\nevens\nevensong/MS\neventfulness/SM\neventful/YU\neventide/SM\nevent/SGM\neventuality/MS\neventual/Y\neventuate/GSD\nEverard/M\nEveready/M\nEvered/M\nEverest/M\nEverette/M\nEverett/M\neverglade/MS\nEverglades\nevergreen/S\nEverhart/M\neverlastingness/M\neverlasting/PYS\neverliving\nevermore\nEverReady/M\neve/RSM\never/T\nevery\neverybody/M\neverydayness/M\neveryday/P\neveryman\neveryone/MS\neveryplace\neverything\neverywhere\neve\'s/A\neves/A\nEvey/M\nevict/DGS\neviction/SM\nevidence/MGSD\nevidential/Y\nevident/YS\nEvie/M\nevildoer/SM\nevildoing/MS\nevilness/MS\nevil/YRPTS\nevince/SDG\nEvin/M\neviscerate/GNXDS\nevisceration/M\nEvita/M\nEv/MN\nevocable\nevocate/NVX\nevocation/M\nevocativeness/M\nevocative/YP\nevoke/SDG\nevolute/NMXS\nevolutionarily\nevolutionary\nevolutionist/MS\nevolution/M\nevolve/SDG\nEvonne/M\nEvvie/M\nEvvy/M\nEvy/M\nEvyn/M\nEwan/M\nEward/M\nEwart/M\nEwell/M\newe/MZRS\nEwen/M\newer/M\nEwing/M\nexacerbate/NGXDS\nexacerbation/M\nexacter/M\nexactingness/M\nexacting/YP\nexaction/SM\nexactitude/ISM\nexactly/I\nexactness/MSI\nexact/TGSPRDY\nexaggerate/DSXNGV\nexaggerated/YP\nexaggeration/M\nexaggerative/Y\nexaggerator/MS\nexaltation/SM\nexalted/Y\nexalter/M\nexalt/ZRDGS\nexamen/M\nexamination/AS\nexamination\'s\nexamine/BGZDRS\nexamined/AU\nexaminees\nexaminer/M\nexamines/A\nexamining/A\nexam/MNS\nexample/DSGM\nexampled/U\nexasperate/DSXGN\nexasperated/Y\nexasperating/Y\nexasperation/M\nExcalibur/M\nexcavate/NGDSX\nexcavation/M\nexcavator/SM\nExcedrin/M\nexceeder/M\nexceeding/Y\nexceed/SGDR\nexcelled\nexcellence/SM\nexcellency/MS\nExcellency/MS\nexcellent/Y\nexcelling\nexcel/S\nexcelsior/S\nexcept/DSGV\nexceptionable/U\nexceptionalness/M\nexceptional/YU\nexception/BMS\nexcerpter/M\nexcerpt/GMDRS\nexcess/GVDSM\nexcessiveness/M\nexcessive/PY\nexchangeable\nexchange/GDRSZ\nexchanger/M\nexchequer/SM\nExchequer/SM\nexcise/XMSDNGB\nexcision/M\nexcitability/MS\nexcitableness/M\nexcitable/P\nexcitably\nexcitation/SM\nexcitatory\nexcited/Y\nexcitement/MS\nexciter/M\nexcite/RSDLBZG\nexcitingly\nexciting/U\nexciton/M\nexclaimer/M\nexclaim/SZDRG\nexclamation/MS\nexclamatory\nexclude/DRSG\nexcluder/M\nexclusionary\nexclusioner/M\nexclusion/SZMR\nexclusiveness/SM\nexclusive/SPY\nexclusivity/MS\nexcommunicate/XVNGSD\nexcommunication/M\nexcoriate/GNXSD\nexcoriation/M\nexcremental\nexcrement/SM\nexcrescence/MS\nexcrescent\nexcreta\nexcrete/NGDRSX\nexcreter/M\nexcretion/M\nexcretory/S\nexcruciate/NGDS\nexcruciating/Y\nexcruciation/M\nexculpate/XSDGN\nexculpation/M\nexculpatory\nexcursionist/SM\nexcursion/MS\nexcursiveness/SM\nexcursive/PY\nexcursus/MS\nexcusable/IP\nexcusableness/IM\nexcusably/I\nexcuse/BGRSD\nexcused/U\nexcuser/M\nexec/MS\nexecrableness/M\nexecrable/P\nexecrably\nexecrate/DSXNGV\nexecration/M\nexecutable/MS\nexecute/NGVZBXDRS\nexecuter/M\nexecutional\nexecutioner/M\nexecution/ZMR\nexecutive/SM\nexecutor/SM\nexecutrices\nexecutrix/M\nexegeses\nexegesis/M\nexegete/M\nexegetical\nexegetic/S\nexemplariness/M\nexemplar/MS\nexemplary/P\nexemplification/M\nexemplifier/M\nexemplify/ZXNSRDG\nexemption/MS\nexempt/SDG\nexerciser/M\nexercise/ZDRSGB\nexertion/MS\nexert/SGD\nExeter/M\nexeunt\nexhalation/SM\nexhale/GSD\nexhausted/Y\nexhauster/M\nexhaustible/I\nexhausting/Y\nexhaustion/SM\nexhaustiveness/MS\nexhaustive/YP\nexhaust/VGRDS\nexhibitioner/M\nexhibitionism/MS\nexhibitionist/MS\nexhibition/ZMRS\nexhibitor/SM\nexhibit/VGSD\nexhilarate/XSDVNG\nexhilarating/Y\nexhilaration/M\nexhortation/SM\nexhort/DRSG\nexhorter/M\nexhumation/SM\nexhume/GRSD\nexhumer/M\nexigence/S\nexigency/SM\nexigent/SY\nexiguity/SM\nexiguous\nexile/SDGM\nexistence/MS\nexistent/I\nexistentialism/MS\nexistentialistic\nexistentialist/MS\nexistential/Y\nexistents\nexist/SDG\nexit/MDSG\nexobiology/MS\nexocrine\nExodus/M\nexodus/SM\nexogamous\nexogamy/M\nexogenous/Y\nexonerate/SDVGNX\nexoneration/M\nexorbitance/MS\nexorbitant/Y\nexorcise/SDG\nexorcism/SM\nexorcist/SM\nexorcizer/M\nexoskeleton/MS\nexosphere/SM\nexothermic\nexothermically\nexotica\nexotically\nexoticism/SM\nexoticness/M\nexotic/PS\nexp\nexpandability/M\nexpand/DRSGZB\nexpanded/U\nexpander/M\nexpanse/DSXGNVM\nexpansible\nexpansionary\nexpansionism/MS\nexpansionist/MS\nexpansion/M\nexpansiveness/S\nexpansive/YP\nexpatiate/XSDNG\nexpatiation/M\nexpatriate/SDNGX\nexpatriation/M\nexpectancy/MS\nexpectant/YS\nexpectational\nexpectation/MS\nexpected/UPY\nexpecting/Y\nexpectorant/S\nexpectorate/NGXDS\nexpectoration/M\nexpect/SBGD\nexpedience/IS\nexpediency/IMS\nexpedients\nexpedient/YI\nexpediter/M\nexpedite/ZDRSNGX\nexpeditionary\nexpedition/M\nexpeditiousness/MS\nexpeditious/YP\nexpeditor\'s\nexpellable\nexpelled\nexpelling\nexpel/S\nexpendable/S\nexpended/U\nexpender/M\nexpenditure/SM\nexpend/SDRGB\nexpense/DSGVM\nexpensive/IYP\nexpensiveness/SMI\nexperienced/U\nexperience/ISDM\nexperiencing\nexperiential/Y\nexperimentalism/M\nexperimentalist/SM\nexperimental/Y\nexperimentation/SM\nexperimenter/M\nexperiment/GSMDRZ\nexperted\nexperting\nexpertise/SM\nexpertize/GD\nexpertnesses\nexpertness/IM\nexpert/PISY\nexpert\'s\nexpiable/I\nexpiate/XGNDS\nexpiation/M\nexpiatory\nexpiration/MS\nexpired/U\nexpire/SDG\nexpiry/MS\nexplainable/UI\nexplain/ADSG\nexplained/U\nexplainer/SM\nexplanation/MS\nexplanatory\nexpletive/SM\nexplicable/I\nexplicate/VGNSDX\nexplication/M\nexplicative/Y\nexplicitness/SM\nexplicit/PSY\nexplode/DSRGZ\nexploded/U\nexploder/M\nexploitation/MS\nexploitative\nexploited/U\nexploiter/M\nexploit/ZGVSMDRB\nexploration/MS\nexploratory\nexplore/DSRBGZ\nexplored/U\nexplorer/M\nexplosion/MS\nexplosiveness/SM\nexplosive/YPS\nexpo/MS\nexponential/SY\nexponentiate/XSDNG\nexponentiation/M\nexponent/MS\nexportability\nexportable\nexport/AGSD\nexportation/SM\nexporter/MS\nexport\'s\nexpose\nexposed/U\nexposer/M\nexposit/D\nexposition/SM\nexpositor/MS\nexpository\nexpos/RSDZG\nexpostulate/DSXNG\nexpostulation/M\nexposure/SM\nexpounder/M\nexpound/ZGSDR\nexpressed/U\nexpresser/M\nexpress/GVDRSY\nexpressibility/I\nexpressible/I\nexpressibly/I\nexpressionism/SM\nexpressionistic\nexpressionist/S\nexpressionless/YP\nexpression/MS\nexpressive/IYP\nexpressiveness/MS\nexpressiveness\'s/I\nexpressway/SM\nexpropriate/XDSGN\nexpropriation/M\nexpropriator/SM\nexpulsion/MS\nexpunge/GDSR\nexpunger/M\nexpurgated/U\nexpurgate/SDGNX\nexpurgation/M\nexquisiteness/SM\nexquisite/YPS\nex/S\next\nextant\nextemporaneousness/MS\nextemporaneous/YP\nextempore/S\nextemporization/SM\nextemporizer/M\nextemporize/ZGSRD\nextendability/M\nextendedly\nextendedness/M\nextended/U\nextender/M\nextendibility/M\nextendibles\nextend/SGZDR\nextensibility/M\nextensible/I\nextensional/Y\nextension/SM\nextensiveness/SM\nextensive/PY\nextensor/MS\nextent/SM\nextenuate/XSDGN\nextenuation/M\nexterior/MYS\nexterminate/XNGDS\nextermination/M\nexterminator/SM\nexternalities\nexternalization/SM\nexternalize/GDS\nexternal/YS\nextern/M\nextinct/DGVS\nextinction/MS\nextinguishable/I\nextinguish/BZGDRS\nextinguisher/M\nextirpate/XSDVNG\nextirpation/M\nextolled\nextoller/M\nextolling\nextol/S\nextort/DRSGV\nextorter/M\nextortionate/Y\nextortioner/M\nextortionist/SM\nextortion/ZSRM\nextracellular/Y\nextract/GVSBD\nextraction/SM\nextractive/Y\nextractor/SM\nextracurricular/S\nextradite/XNGSDB\nextradition/M\nextragalactic\nextralegal/Y\nextramarital\nextramural\nextraneousness/M\nextraneous/YP\nextraordinarily\nextraordinariness/M\nextraordinary/PS\nextrapolate/XVGNSD\nextrapolation/M\nextra/S\nextrasensory\nextraterrestrial/S\nextraterritorial\nextraterritoriality/MS\nextravagance/MS\nextravagant/Y\nextravaganza/SM\nextravehicular\nextravert\'s\nextrema\nextremal\nextreme/DSRYTP\nextremeness/MS\nextremism/SM\nextremist/MS\nextremity/SM\nextricable/I\nextricate/XSDNG\nextrication/M\nextrinsic\nextrinsically\nextroversion/SM\nextrovert/GMDS\nextrude/GDSR\nextruder/M\nextrusion/MS\nextrusive\nexuberance/MS\nexuberant/Y\nexudate/XNM\nexudation/M\nexude/GSD\nexultant/Y\nexultation/SM\nexult/DGS\nexulting/Y\nexurban\nexurbanite/SM\nexurbia/MS\nexurb/MS\nExxon/M\nEyck/M\nEyde/M\nEydie/M\neyeball/GSMD\neyebrow/MS\neyed/P\neyedropper/MS\neyeful/MS\neye/GDRSMZ\neyeglass/MS\neyelash/MS\neyeless\neyelet/GSMD\neyelid/SM\neyeliner/MS\neyeopener/MS\neyeopening\neyepiece/SM\neyer/M\neyeshadow\neyesight/MS\neyesore/SM\neyestrain/MS\neyeteeth\neyetooth/M\neyewash/MS\neyewitness/SM\nEyre/M\neyrie\'s\nEysenck/M\nEzechiel/M\nEzekiel/M\nEzequiel/M\nEziechiele/M\nEzmeralda/M\nEzra/M\nEzri/M\nF\nFAA\nFabe/MR\nFaberg�/M\nFaber/M\nFabiano/M\nFabian/S\nFabien/M\nFabio/M\nfable/GMSRD\nfabler/M\nfabricate/SDXNG\nfabrication/M\nfabricator/MS\nfabric/MS\nfabulists\nfabulousness/M\nfabulous/YP\nfacade/GMSD\nface/AGCSD\nfacecloth\nfacecloths\nfaceless/P\nfaceplate/M\nfacer/CM\nface\'s\nfacetiousness/MS\nfacetious/YP\nfacet/SGMD\nfacial/YS\nfacileness/M\nfacile/YP\nfacilitate/VNGXSD\nfacilitation/M\nfacilitator/SM\nfacilitatory\nfacility/MS\nfacing/MS\nfacsimileing\nfacsimile/MSD\nfactional\nfactionalism/SM\nfaction/SM\nfactiousness/M\nfactious/PY\nfactitious\nfact/MS\nfacto\nfactoid/S\nfactorial/MS\nfactoring/A\nfactoring\'s\nfactorisable\nfactorization/SM\nfactorize/GSD\nfactor/SDMJG\nfactory/MS\nfactotum/MS\nfactuality/M\nfactualness/M\nfactual/PY\nfaculty/MS\nfaddish\nfaddist/SM\nfadedly\nfaded/U\nfadeout\nfader/M\nfade/S\nfading\'s\nfading/U\nfad/ZGSMDR\nFae/M\nfaerie/MS\nFaeroe/M\nfaery\'s\nFafnir/M\nfagged\nfagging\nfaggoting\'s\nFagin/M\nfag/MS\nfagoting/M\nfagot/MDSJG\nFahd/M\nFahrenheit/S\nfa�ence/S\nfailing\'s\nfailing/UY\nfail/JSGD\nfaille/MS\nfailsafe\nfailure/SM\nFaina/M\nfain/GTSRD\nfainter/M\nfainthearted\nfaintness/MS\nfaint/YRDSGPT\nFairbanks\nFairchild/M\nfaired\nFairfax/M\nFairfield/M\nfairgoer/S\nfairground/MS\nfairing/MS\nfairish\nFairleigh/M\nfairless\nFairlie/M\nFair/M\nFairmont/M\nfairness\'s\nfairness/US\nFairport/M\nfairs\nfair/TURYP\nFairview/M\nfairway/MS\nfairyland/MS\nfairy/MS\nfairytale\nFaisalabad\nFaisal/M\nfaithed\nfaithfulness/MSU\nfaithfuls\nfaithful/UYP\nfaithing\nfaithlessness/SM\nfaithless/YP\nFaith/M\nfaiths\nfaith\'s\nfaith/U\nfajitas\nfaker/M\nfake/ZGDRS\nfakir/SM\nfalafel\nfalconer/M\nfalconry/MS\nfalcon/ZSRM\nFalito/M\nFalkland/MS\nFalk/M\nFalkner/M\nfallaciousness/M\nfallacious/PY\nfallacy/MS\nfaller/M\nfallibility/MSI\nfallible/I\nfallibleness/MS\nfallibly/I\nfalloff/S\nFallon/M\nfallopian\nFallopian/M\nfallout/MS\nfallowness/M\nfallow/PSGD\nfall/SGZMRN\nfalsehood/SM\nfalseness/SM\nfalse/PTYR\nfalsetto/SM\nfalsie/MS\nfalsifiability/M\nfalsifiable/U\nfalsification/M\nfalsifier/M\nfalsify/ZRSDNXG\nfalsity/MS\nFalstaff/M\nfalterer/M\nfaltering/UY\nfalter/RDSGJ\nFalwell/M\nfa/M\nfamed/C\nfame/DSMG\nfames/C\nfamilial\nfamiliarity/MUS\nfamiliarization/MS\nfamiliarized/U\nfamiliarizer/M\nfamiliarize/ZGRSD\nfamiliarizing/Y\nfamiliarly/U\nfamiliarness/M\nfamiliar/YPS\nfamily/MS\nfamine/SM\nfaming/C\nfamish/GSD\nfamously/I\nfamousness/M\nfamous/PY\nfanaticalness/M\nfanatical/YP\nfanaticism/MS\nfanatic/SM\nFanchette/M\nFanchon/M\nfancied\nFancie/M\nfancier/SM\nfanciest\nfancifulness/MS\nfanciful/YP\nfancily\nfanciness/SM\nfancying\nfancy/IS\nFancy/M\nfancywork/SM\nfandango/SM\nFanechka/M\nfanfare/SM\nfanfold/M\nfang/DMS\nfangled\nFania/M\nfanlight/SM\nFan/M\nfanned\nFannie/M\nFanni/M\nfanning\nfanny/SM\nFanny/SM\nfanout\nfan/SM\nfantail/SM\nfantasia/SM\nfantasist/M\nfantasize/SRDG\nfantastical/Y\nfantastic/S\nfantasy/GMSD\nFanya/M\nfanzine/S\nFAQ/SM\nFaraday/M\nfarad/SM\nFarah/M\nFara/M\nFarand/M\nfaraway\nFarber/M\nfarce/SDGM\nfarcical/Y\nfare/MS\nfarer/M\nfarewell/DGMS\nfarfetchedness/M\nfar/GDR\nFargo/M\nFarica/M\nfarinaceous\nfarina/MS\nFarkas/M\nFarlay/M\nFarlee/M\nFarleigh/M\nFarley/M\nFarlie/M\nFarly/M\nfarmer/M\nFarmer/M\nfarmhand/S\nfarmhouse/SM\nfarming/M\nFarmington/M\nfarmland/SM\nfarm/MRDGZSJ\nfarmstead/SM\nfarmworker/S\nFar/MY\nfarmyard/MS\nfaro/MS\nfarragoes\nfarrago/M\nFarragut/M\nFarrah/M\nFarrakhan/M\nFarra/M\nFarrand/M\nFarrell/M\nFarrel/M\nfarrier/SM\nFarris/M\nFarr/M\nfarrow/DMGS\nfarseeing\nfarsightedness/SM\nfarsighted/YP\nfarther\nfarthermost\nfarthest\nfarthing/SM\nfart/MDGS!\nfas\nfascia/SM\nfascicle/DSM\nfasciculate/DNX\nfasciculation/M\nfascinate/SDNGX\nfascinating/Y\nfascination/M\nfascism/MS\nFascism\'s\nfascistic\nFascist\'s\nfascist/SM\nfashionableness/M\nfashionable/PS\nfashionably/U\nfashion/ADSG\nfashioner/SM\nfashion\'s\nFassbinder/M\nfastback/MS\nfastball/S\nfasten/AGUDS\nfastener/MS\nfastening/SM\nfast/GTXSPRND\nfastidiousness/MS\nfastidious/PY\nfastness/MS\nfatalism/MS\nfatalistic\nfatalistically\nfatalist/MS\nfatality/MS\nfatal/SY\nfatback/SM\nfatefulness/MS\nfateful/YP\nfate/MS\nFates\nfatheaded/P\nfathead/SMD\nfather/DYMGS\nfathered/U\nfatherhood/MS\nfatherland/SM\nfatherless\nfatherliness/M\nfatherly/P\nFather/SM\nfathomable/U\nfathomless\nfathom/MDSBG\nfatigued/U\nfatigue/MGSD\nfatiguing/Y\nFatima/M\nfatness/SM\nfat/PSGMDY\nfatso/M\nfatted\nfattener/M\nfatten/JZGSRD\nfatter\nfattest/M\nfattiness/SM\nfatting\nfatty/RSPT\nfatuity/MS\nfatuousness/SM\nfatuous/YP\nfatwa/SM\nfaucet/SM\nFaulknerian\nFaulkner/M\nfault/CGSMD\nfaultfinder/MS\nfaultfinding/MS\nfaultily\nfaultiness/MS\nfaultlessness/SM\nfaultless/PY\nfaulty/RTP\nfauna/MS\nFaunie/M\nFaun/M\nfaun/MS\nFauntleroy/M\nFaustian\nFaustina/M\nFaustine/M\nFaustino/M\nFaust/M\nFaustus/M\nfauvism/S\nfavorableness/MU\nfavorable/UMPS\nfavorably/U\nfavoredness/M\nfavored\'s/U\nfavored/YPSM\nfavorer/EM\nfavor/ESMRDGZ\nfavoring/MYS\nfavorings/U\nfavorite/SMU\nfavoritism/MS\nfavors/A\nFawkes/M\nFawne/M\nfawner/M\nfawn/GZRDMS\nFawnia/M\nfawning/Y\nFawn/M\nfax/GMDS\nFax/M\nFaydra/M\nFaye/M\nFayette/M\nFayetteville/M\nFayina/M\nFay/M\nfay/MDRGS\nFayre/M\nFaythe/M\nFayth/M\nfaze/DSG\nFBI\nFCC\nFD\nFDA\nFDIC\nFDR/M\nfealty/MS\nfearfuller\nfearfullest\nfearfulness/MS\nfearful/YP\nfearlessness/MS\nfearless/PY\nfear/RDMSG\nfearsomeness/M\nfearsome/PY\nfeasibility/SM\nfeasibleness/M\nfeasible/UI\nfeasibly/U\nfeaster/M\nfeast/GSMRD\nfeater/C\nfeatherbed\nfeatherbedding/SM\nfeatherbrain/MD\nfeathered/U\nfeathering/M\nfeatherless\nfeatherlight\nFeatherman/M\nfeathertop\nfeatherweight/SM\nfeathery/TR\nfeather/ZMDRGS\nfeat/MYRGTS\nfeats/C\nfeatureless\nfeature/MGSD\nFeb/M\nfebrile\nFebruary/MS\nfecal\nfeces\nfecklessness/M\nfeckless/PY\nfecundability\nfecundate/XSDGN\nfecundation/M\nfecund/I\nfecundity/SM\nfederalism/SM\nFederalist\nfederalist/MS\nfederalization/MS\nfederalize/GSD\nFederal/S\nfederal/YS\nfederated/U\nfederate/FSDXVNG\nfederation/FM\nfederative/Y\nFederica/M\nFederico/M\nFedEx/M\nFedora/M\nfedora/SM\nfeds\nFed/SM\nfed/U\nfeebleness/SM\nfeeble/TPR\nfeebly\nfeedback/SM\nfeedbag/MS\nfeeder/M\nfeed/GRZJS\nfeeding/M\nfeedlot/SM\nfeedstock\nfeedstuffs\nfeeing\nfeeler/M\nfeel/GZJRS\nfeelingly/U\nfeeling/MYP\nfeelingness/M\nFee/M\nfee/MDS\nfeet/M\nfeigned/U\nfeigner/M\nfeign/RDGS\nfeint/MDSG\nfeisty/RT\nFelder/M\nFeldman/M\nfeldspar/MS\nFelecia/M\nFelicdad/M\nFelice/M\nFelicia/M\nFelicio/M\nfelicitate/XGNSD\nfelicitation/M\nfelicitous/IY\nfelicitousness/M\nfelicity/IMS\nFelicity/M\nFelicle/M\nFelic/M\nFelike/M\nFeliks/M\nfeline/SY\nFelipa/M\nFelipe/M\nFelisha/M\nFelita/M\nFelix/M\nFeliza/M\nFelizio/M\nfella/S\nfellatio/SM\nfelled/A\nfeller/M\nfelling/A\nFellini/M\nfellness/M\nfellowman\nfellowmen\nfellow/SGDYM\nfellowshipped\nfellowshipping\nfellowship/SM\nfell/PSGZTRD\nfeloniousness/M\nfelonious/PY\nfelon/MS\nfelony/MS\nfelt/GSD\nfelting/M\nFe/M\nfemale/MPS\nfemaleness/SM\nfeminineness/M\nfeminine/PYS\nfemininity/MS\nfeminism/MS\nfeminist/MS\nfemme/MS\nfemoral\nfem/S\nfemur/MS\nfenced/U\nfencepost/M\nfencer/M\nfence/SRDJGMZ\nfencing/M\nfender/CM\nfend/RDSCZG\nFenelia/M\nfenestration/CSM\nFenian/M\nfenland/M\nfen/MS\nfennel/SM\nFenwick/M\nFeodora/M\nFeodor/M\nferal\nFerber/M\nFerdie/M\nFerdinanda/M\nFerdinande/M\nFerdinand/M\nFerdinando/M\nFerd/M\nFerdy/M\nfer/FLC\nFergus/M\nFerguson/M\nFerlinghetti/M\nFermat/M\nfermentation/MS\nfermented\nfermenter\nferment/FSCM\nfermenting\nFermi/M\nfermion/MS\nfermium/MS\nFernanda/M\nFernande/M\nFernandez/M\nFernandina/M\nFernando/M\nFerne/M\nfernery/M\nFern/M\nfern/MS\nferny/TR\nferociousness/MS\nferocious/YP\nferocity/MS\nFerrari/M\nFerraro/M\nFerreira/M\nFerrell/M\nFerrel/M\nFerrer/M\nferreter/M\nferret/SMRDG\nferric\nferris\nFerris\nferrite/M\nferro\nferroelectric\nferromagnetic\nferromagnet/M\nferrous\nferrule/MGSD\nferryboat/MS\nferryman/M\nferrymen\nferry/SDMG\nfertileness/M\nfertile/YP\nfertility/IMS\nfertilization/ASM\nfertilized/U\nfertilizer/M\nfertilizes/A\nfertilize/SRDZG\nferule/SDGM\nfervency/MS\nfervent/Y\nfervidness/M\nfervid/YP\nfervor/MS\nfess/KGFSD\nFess/M\nfess\'s\nfestal/S\nfester/GD\nfestival/SM\nfestiveness/SM\nfestive/PY\nfestivity/SM\nfestoon/SMDG\nfest/RVZ\nfetal\nfeta/MS\nfetcher/M\nfetching/Y\nfetch/RSDGZ\nfeted\nf�te/MS\nfetich\'s\nfetidness/SM\nfetid/YP\nfeting\nfetishism/SM\nfetishistic\nfetishist/SM\nfetish/MS\nfetlock/MS\nfetter\'s\nfetter/UGSD\nfettle/GSD\nfettling/M\nfettuccine/S\nfetus/SM\nfeudalism/MS\nfeudalistic\nfeudal/Y\nfeudatory/M\nfeud/MDSG\nfeverishness/SM\nfeverish/PY\nfever/SDMG\nfewness/MS\nfew/PTRS\nFey/M\nFeynman/M\nfey/RT\nfez/M\nFez/M\nfezzes\nff\nFHA\nfianc�e/S\nfianc�/MS\nFianna/M\nFiann/M\nfiascoes\nfiasco/M\nFiat/M\nfiat/MS\nfibbed\nfibber/MS\nfibbing\nfiberboard/MS\nfiber/DM\nfiberfill/S\nFiberglas/M\nfiberglass/DSMG\nFibonacci/M\nfibrillate/XGNDS\nfibrillation/M\nfibril/MS\nfibrin/MS\nfibroblast/MS\nfibroid/S\nfibroses\nfibrosis/M\nfibrousness/M\nfibrous/YP\nfib/SZMR\nfibulae\nfibula/M\nfibular\nFICA\nfices\nfiche/SM\nFichte/M\nfichu/SM\nfickleness/MS\nfickle/RTP\nficos\nfictionalization/MS\nfictionalize/DSG\nfictional/Y\nfiction/SM\nfictitiousness/M\nfictitious/PY\nfictive/Y\nficus\nfiddle/GMZJRSD\nfiddler/M\nfiddlestick/SM\nfiddly\nfide/F\nFidela/M\nFidelia/M\nFidelio/M\nfidelity/IMS\nFidelity/M\nFidel/M\nfidget/DSG\nfidgety\nFidole/M\nFido/M\nfiducial/Y\nfiduciary/MS\nfiefdom/S\nfief/MS\nfielded\nfielder/IM\nfielding\nFielding/M\nField/MGS\nfieldstone/M\nfieldworker/M\nfieldwork/ZMRS\nfield/ZISMR\nfiendishness/M\nfiendish/YP\nfiend/MS\nfierceness/SM\nfierce/RPTY\nfierily\nfieriness/MS\nfiery/PTR\nfie/S\nfies/C\nfiesta/MS\nfife/DRSMZG\nfifer/M\nFifi/M\nFifine/M\nFIFO\nfifteen/HRMS\nfifteenths\nfifths\nfifth/Y\nfiftieths\nfifty/HSM\nFigaro/M\nfigged\nfigging\nfightback\nfighter/MIS\nfighting/IS\nfight/ZSJRG\nfigment/MS\nfig/MLS\nFigueroa/M\nfigural\nfiguration/FSM\nfigurativeness/M\nfigurative/YP\nfigure/GFESD\nfigurehead/SM\nfigurer/SM\nfigure\'s\nfigurine/SM\nfiguring/S\nFijian/SM\nFiji/M\nfilamentary\nfilament/MS\nfilamentous\nFilberte/M\nFilbert/M\nfilbert/MS\nFilberto/M\nfilch/SDG\nfiled/AC\nfile/KDRSGMZ\nfilename/SM\nfiler/KMCS\nfiles/AC\nfilet\'s\nfilial/UY\nFilia/M\nfilibusterer/M\nfilibuster/MDRSZG\nFilide/M\nfiligreeing\nfiligree/MSD\nfiling/AC\nfilings\nFilipino/SM\nFilip/M\nFilippa/M\nFilippo/M\nfill/BAJGSD\nfilled/U\nfiller/MS\nfilleting/M\nfillet/MDSG\nfilling/M\nfillip/MDGS\nFillmore/M\nfilly/SM\nfilmdom/M\nFilmer/M\nfilminess/SM\nfilming/M\nfilmmaker/S\nFilmore/M\nfilm/SGMD\nfilmstrip/SM\nfilmy/RTP\nFilofax/S\nfiltered/U\nfilterer/M\nfilter/RDMSZGB\nfilthily\nfilthiness/SM\nfilth/M\nfilths\nfilthy/TRSDGP\nfiltrated/I\nfiltrate/SDXMNG\nfiltrates/I\nfiltrating/I\nfiltration/IMS\nfinagler/M\nfinagle/RSDZG\nfinale/MS\nfinalist/MS\nfinality/MS\nfinalization/SM\nfinalize/GSD\nfinal/SY\nFina/M\nfinanced/A\nfinance/MGSDJ\nfinances/A\nfinancial/Y\nfinancier/DMGS\nfinancing/A\nFinch/M\nfinch/MS\nfindable/U\nfind/BRJSGZ\nfinder/M\nfinding/M\nFindlay/M\nFindley/M\nfine/FGSCRDA\nfinely\nfineness/MS\nfinery/MAS\nfine\'s\nfinespun\nfinesse/SDMG\nfingerboard/SM\nfingerer/M\nfingering/M\nfingerless\nfingerling/M\nfingernail/MS\nfingerprint/SGDM\nfinger/SGRDMJ\nfingertip/MS\nfinial/SM\nfinical\nfinickiness/S\nfinicky/RPT\nfining/M\nfinished/UA\nfinisher/M\nfinishes/A\nfinish/JZGRSD\nfinis/SM\nfinite/ISPY\nfinitely/C\nfiniteness/MIC\nfink/GDMS\nFinland/M\nFinlay/M\nFinley/M\nFin/M\nFinnbogadottir/M\nfinned\nFinnegan/M\nfinner\nfinning\nFinnish\nFinn/MS\nfinny/RT\nfin/TGMDRS\nFiona/M\nFionna/M\nFionnula/M\nfiord\'s\nFiorello/M\nFiorenze/M\nFiori/M\nf/IRAC\nfirearm/SM\nfireball/SM\nfireboat/M\nfirebomb/MDSG\nfirebox/MS\nfirebrand/MS\nfirebreak/SM\nfirebrick/SM\nfirebug/SM\nfirecracker/SM\nfiredamp/SM\nfired/U\nfirefight/JRGZS\nfirefly/MS\nFirefox/M\nfireguard/M\nfirehouse/MS\nfirelight/GZSM\nfireman/M\nfiremen\nfire/MS\nfireplace/MS\nfireplug/MS\nfirepower/SM\nfireproof/SGD\nfirer/M\nfiresafe\nfireside/SM\nFirestone/M\nfirestorm/SM\nfiretrap/SM\nfiretruck/S\nfirewall/S\nfirewater/SM\nfirewood/MS\nfirework/MS\nfiring/M\nfirkin/M\nfirmament/MS\nfirmer\nfirmest\nfirm/ISFDG\nfirmly/I\nfirmness/MS\nfirm\'s\nfirmware/MS\nfirring\nfirstborn/S\nfirsthand\nfirst/SY\nfirth/M\nfirths\nfir/ZGJMDRHS\nfiscal/YS\nFischbein/M\nFischer/M\nfishbowl/MS\nfishcake/S\nfisher/M\nFisher/M\nfisherman/M\nfishermen/M\nfishery/MS\nfishhook/MS\nfishily\nfishiness/MS\nfishing/M\nfish/JGZMSRD\nFishkill/M\nfishmeal\nfishmonger/MS\nfishnet/SM\nfishpond/SM\nfishtail/DMGS\nfishtanks\nfishwife/M\nfishwives\nfishy/TPR\nFiske/M\nFisk/M\nfissile\nfissionable/S\nfission/BSDMG\nfissure/MGSD\nfistfight/SM\nfistful/MS\nfisticuff/SM\nfist/MDGS\nfistula/SM\nfistulous\nFitchburg/M\nFitch/M\nfitfulness/SM\nfitful/PY\nfitments\nfitness/USM\nfits/AK\nfit\'s/K\nfitted/UA\nfitter/SM\nfittest\nfitting/AU\nfittingly\nfittingness/M\nfittings\nfit/UYPS\nFitzgerald/M\nFitz/M\nFitzpatrick/M\nFitzroy/M\nfivefold\nfive/MRS\nfiver/M\nfixable\nfixate/VNGXSD\nfixatifs\nfixation/M\nfixative/S\nfixedness/M\nfixed/YP\nfixer/SM\nfixes/I\nfixing/SM\nfixity/MS\nfixture/SM\nfix/USDG\nFizeau/M\nfizzer/M\nfizzle/GSD\nfizz/SRDG\nfizzy/RT\nfjord/SM\nFL\nflabbergast/GSD\nflabbergasting/Y\nflabbily\nflabbiness/SM\nflabby/TPR\nflab/MS\nflaccidity/MS\nflaccid/Y\nflack/SGDM\nflagella/M\nflagellate/DSNGX\nflagellation/M\nflagellum/M\nflagged\nflaggingly/U\nflagging/SMY\nflagman/M\nflagmen\nflag/MS\nflagon/SM\nflagpole/SM\nflagrance/MS\nflagrancy/SM\nflagrant/Y\nflagship/MS\nflagstaff/MS\nflagstone/SM\nflail/SGMD\nflair/SM\nflaker/M\nflake/SM\nflakiness/MS\nflak/RDMGS\nflaky/PRT\nFla/M\nflamb�/D\nflambeing\nflambes\nflamboyance/MS\nflamboyancy/MS\nflamboyant/YS\nflamenco/SM\nflamen/M\nflameproof/DGS\nflamer/IM\nflame\'s\nflame/SIGDR\nflamethrower/SM\nflamingo/SM\nflaming/Y\nflammability/ISM\nflammable/SI\nflam/MRNDJGZ\nFlanagan/M\nFlanders/M\nflange/GMSD\nflanker/M\nflank/SGZRDM\nflan/MS\nflannel/DMGS\nflannelet/MS\nflannelette\'s\nflapjack/SM\nflap/MS\nflapped\nflapper/SM\nflapping\nflaps/M\nflare/SDG\nflareup/S\nflaring/Y\nflashback/SM\nflashbulb/SM\nflashcard/S\nflashcube/MS\nflasher/M\nflashgun/S\nflashily\nflashiness/SM\nflashing/M\nflash/JMRSDGZ\nflashlight/MS\nflashy/TPR\nflask/SM\nflatbed/S\nflatboat/MS\nflatcar/MS\nflatfeet\nflatfish/SM\nflatfoot/SGDM\nflathead/M\nflatiron/SM\nflatland/RS\nflatmate/M\nflat/MYPS\nflatness/MS\nflatted\nflattener/M\nflatten/SDRG\nflatter/DRSZG\nflatterer/M\nflattering/YU\nflattery/SM\nflattest/M\nflatting\nflattish\nFlatt/M\nflattop/MS\nflatulence/SM\nflatulent/Y\nflatus/SM\nflatware/MS\nflatworm/SM\nFlaubert/M\nflaunting/Y\nflaunt/SDG\nflautist/SM\nflavored/U\nflavorer/M\nflavorful\nflavoring/M\nflavorless\nflavor/SJDRMZG\nflavorsome\nflaw/GDMS\nflawlessness/MS\nflawless/PY\nflax/MSN\nflaxseed/M\nflayer/M\nflay/RDGZS\nfleabag/MS\nfleabites\nflea/SM\nfleawort/M\nfleck/GRDMS\nFledermaus/M\nfledged/U\nfledge/GSD\nfledgling/SM\nfleecer/M\nfleece/RSDGMZ\nfleeciness/SM\nfleecy/RTP\nfleeing\nflee/RS\nfleetingly/M\nfleetingness/SM\nfleeting/YP\nfleet/MYRDGTPS\nfleetness/MS\nFleischer/M\nFleischman/M\nFleisher/M\nFleming/M\nFlemished/M\nFlemish/GDSM\nFlemishing/M\nFlem/JGM\nFlemming/M\nflesher/M\nfleshiness/M\nflesh/JMYRSDG\nfleshless\nfleshly/TR\nfleshpot/SM\nfleshy/TPR\nfletch/DRSGJ\nfletcher/M\nFletcher/M\nfletching/M\nFletch/MR\nFleurette/M\nFleur/M\nflew/S\nflews/M\nflexed/I\nflexibility/MSI\nflexible/I\nflexibly/I\nflexitime\'s\nflex/MSDAG\nflextime/S\nflexural\nflexure/M\nfl/GJD\nflibbertigibbet/MS\nflicker/GD\nflickering/Y\nflickery\nflick/GZSRD\nflier/M\nflight/GMDS\nflightiness/SM\nflightless\nflightpath\nflighty/RTP\nflimflammed\nflimflamming\nflimflam/MS\nflimsily\nflimsiness/MS\nflimsy/PTRS\nflincher/M\nflinch/GDRS\nflinching/U\nflinger/M\nfling/RMG\nFlin/M\nFlinn/M\nflintiness/M\nflintless\nflintlock/MS\nFlint/M\nflint/MDSG\nFlintstones\nflinty/TRP\nflipflop\nflippable\nflippancy/MS\nflippant/Y\nflipped\nflipper/SM\nflippest\nflipping\nflip/S\nflirtation/SM\nflirtatiousness/MS\nflirtatious/PY\nflirt/GRDS\nflit/S\nflitted\nflitting\nfloater/M\nfloat/SRDGJZ\nfloaty\nflocculate/GNDS\nflocculation/M\nflock/SJDMG\nfloe/MS\nflogged\nflogger/SM\nflogging/SM\nflog/S\nFlo/M\nfloodgate/MS\nfloodlight/DGMS\nfloodlit\nfloodplain/S\nflood/SMRDG\nfloodwater/SM\nfloorboard/MS\nfloorer/M\nflooring/M\nfloor/SJRDMG\nfloorspace\nfloorwalker/SM\nfloozy/SM\nflophouse/SM\nflop/MS\nflopped\nflopper/M\nfloppily\nfloppiness/SM\nflopping\nfloppy/TMRSP\nfloral/SY\nFlora/M\nFlorance/M\nflora/SM\nFlorella/M\nFlorence/M\nFlorencia/M\nFlorentia/M\nFlorentine/S\nFlorenza/M\nflorescence/MIS\nflorescent/I\nFlore/SM\nfloret/MS\nFlorette/M\nFloria/M\nFlorian/M\nFlorida/M\nFloridan/S\nFloridian/S\nfloridness/SM\nflorid/YP\nFlorie/M\nFlorina/M\nFlorinda/M\nFlorine/M\nflorin/MS\nFlori/SM\nflorist/MS\nFlor/M\nFlorrie/M\nFlorri/M\nFlorry/M\nFlory/M\nfloss/GSDM\nFlossie/M\nFlossi/M\nFlossy/M\nflossy/RST\nflotation/SM\nflotilla/SM\nflotsam/SM\nflounce/GDS\nflouncing/M\nflouncy/RT\nflounder/SDG\nflourisher/M\nflourish/GSRD\nflourishing/Y\nflour/SGDM\nfloury/TR\nflouter/M\nflout/GZSRD\nflowchart/SG\nflowed\nflowerbed/SM\nflower/CSGD\nflowerer/M\nfloweriness/SM\nflowerless\nflowerpot/MS\nflower\'s\nFlowers\nflowery/TRP\nflowing/Y\nflow/ISG\nflown\nflowstone\nFloyd/M\nFlss/M\nflt\nflubbed\nflubbing\nflub/S\nfluctuate/XSDNG\nfluctuation/M\nfluency/MS\nfluently\nfluent/SF\nflue/SM\nfluffiness/SM\nfluff/SGDM\nfluffy/PRT\nfluidity/SM\nfluidized\nfluid/MYSP\nfluidness/M\nfluke/SDGM\nfluky/RT\nflume/SDGM\nflummox/DSG\nflu/MS\nflung\nflunkey\'s\nflunk/SRDG\nflunky/MS\nfluoresce/GSRD\nfluorescence/MS\nfluorescent/S\nfluoridate/XDSGN\nfluoridation/M\nfluoride/SM\nfluorimetric\nfluorinated\nfluorine/SM\nfluorite/MS\nfluorocarbon/MS\nfluoroscope/MGDS\nfluoroscopic\nflurry/GMDS\nflushness/M\nflush/TRSDPBG\nfluster/DSG\nfluter/M\nflute/SRDGMJ\nfluting/M\nflutist/MS\nflutter/DRSG\nflutterer/M\nfluttery\nfluxed/A\nfluxes/A\nflux/IMS\nfluxing\nflyaway\nflyblown\nflyby/M\nflybys\nflycatcher/MS\nflyer\'s\nfly/JGBDRSTZ\nflyleaf/M\nflyleaves\nFlynn/M\nflyover/MS\nflypaper/MS\nflysheet/S\nflyspeck/MDGS\nflyswatter/S\nflyway/MS\nflyweight/MS\nflywheel/MS\nFM\nFm/M\nFNMA/M\nfoal/MDSG\nfoaminess/MS\nfoam/MRDSG\nfoamy/RPT\nfobbed\nfobbing\nfob/SM\nfocal/F\nfocally\nFoch/M\nfoci\'s\nfocused/AU\nfocuser/M\nfocuses/A\nfocus/SRDMBG\nfodder/GDMS\nfoe/SM\nfoetid\nFOFL\nfogbound\nfogged/C\nfoggily\nfogginess/MS\nfogging/C\nfoggy/RPT\nfoghorn/SM\nfogs/C\nfog/SM\nfogyish\nfogy/SM\nfoible/MS\nfoil/GSD\nfoist/GDS\nFokker/M\nfoldaway/S\nfolded/AU\nfolder/M\nfoldout/MS\nfold/RDJSGZ\nfolds/UA\nFoley/M\nfoliage/MSD\nfoliate/CSDXGN\nfoliation/CM\nfolio/SDMG\nfolklike\nfolklore/MS\nfolkloric\nfolklorist/SM\nfolk/MS\nfolksiness/MS\nfolksinger/S\nfolksinging/S\nfolksong/S\nfolksy/TPR\nfolktale/S\nfolkway/S\nfoll\nfollicle/SM\nfollicular\nfollower/M\nfollow/JSZBGRD\nfollowup\'s\nfolly/SM\nFolsom\nfol/Y\nFomalhaut/M\nfomentation/SM\nfomenter/M\nfoment/RDSG\nFonda/M\nfondant/SM\nfondle/GSRD\nfondler/M\nfondness/MS\nfond/PMYRDGTS\nfondue/MS\nFons\nFonsie/M\nFontainebleau/M\nFontaine/M\nFontana/M\nfontanelle\'s\nfontanel/MS\nfont/MS\nFonzie/M\nFonz/M\nfoodie/S\nfood/MS\nfoodstuff/MS\nfoolery/MS\nfoolhardily\nfoolhardiness/SM\nfoolhardy/PTR\nfoolishness/SM\nfoolish/PRYT\nfool/MDGS\nfoolproof\nfoolscap/MS\nfootage/SM\nfootball/SRDMGZ\nfootbridge/SM\nFoote/M\nfooter/M\nfootfall/SM\nfoothill/SM\nfoothold/MS\nfooting/M\nfootless\nfootlights\nfootling\nfootlocker/SM\nfootloose\nfootman/M\nfootmarks\nfootmen\nfootnote/MSDG\nfootpad/SM\nfootpath/M\nfootpaths\nfootplate/M\nfootprint/MS\nfootrace/S\nfootrest/MS\nfootsie/SM\nfoot/SMRDGZJ\nfootsore\nfootstep/SM\nfootstool/SM\nfootwear/M\nfootwork/SM\nfop/MS\nfopped\nfoppery/MS\nfopping\nfoppishness/SM\nfoppish/YP\nforage/GSRDMZ\nforager/M\nforayer/M\nforay/SGMRD\nforbade\nforbearance/SM\nforbearer/M\nforbear/MRSG\nForbes/M\nforbidden\nforbiddingness/M\nforbidding/YPS\nforbid/S\nforbore\nforborne\nforced/Y\nforcefield/MS\nforcefulness/MS\nforceful/PY\nforceps/M\nforcer/M\nforce/SRDGM\nforcibleness/M\nforcible/P\nforcibly\nfordable/U\nFordham/M\nFord/M\nford/SMDBG\nforearm/GSDM\nforebear/MS\nforebode/GJDS\nforebodingness/M\nforeboding/PYM\nforecaster/M\nforecastle/MS\nforecast/SZGR\nforeclose/GSD\nforeclosure/MS\nforecourt/SM\nforedoom/SDG\nforefather/SM\nforefeet\nforefinger/MS\nforefoot/M\nforefront/SM\nforegoer/M\nforegoing/S\nforegone\nforegos\nforeground/MGDS\nforehand/S\nforehead/MS\nforeigner/M\nforeignness/SM\nforeign/PRYZS\nforeknew\nforeknow/GS\nforeknowledge/MS\nforeknown\nforeleg/MS\nforelimb/MS\nforelock/MDSG\nforeman/M\nForeman/M\nforemast/SM\nforemen\nforemost\nforename/DSM\nforenoon/SM\nforensically\nforensic/S\nforensics/M\nforeordain/DSG\nforepart/MS\nforepaws\nforepeople\nforeperson/S\nforeplay/MS\nforequarter/SM\nforerunner/MS\nfore/S\nforesail/SM\nforesaw\nforeseeable/U\nforeseeing\nforeseen/U\nforeseer/M\nforesee/ZSRB\nforeshadow/SGD\nforeshore/M\nforeshorten/DSG\nforesightedness/SM\nforesighted/PY\nforesight/SMD\nforeskin/SM\nforestaller/M\nforestall/LGSRD\nforestallment/M\nforestation/MCS\nforestations/A\nforest/CSAGD\nForester/M\nforester/SM\nforestland/S\nForest/MR\nforestry/MS\nforest\'s\nforetaste/MGSD\nforeteller/M\nforetell/RGS\nforethought/MS\nforetold\nforevermore\nforever/PS\nforewarner/M\nforewarn/GSJRD\nforewent\nforewoman/M\nforewomen\nforeword/SM\nforfeiter/M\nforfeiture/MS\nforfeit/ZGDRMS\nforfend/GSD\nforgather/GSD\nforgave\nforged/A\nforge/JVGMZSRD\nforger/M\nforgery/MS\nforges/A\nforgetfulness/SM\nforgetful/PY\nforget/SV\nforgettable/U\nforgettably/U\nforgetting\nforging/M\nforgivable/U\nforgivably/U\nforgiven\nforgiveness/SM\nforgiver/M\nforgive/SRPBZG\nforgivingly\nforgivingness/M\nforgiving/UP\nforgoer/M\nforgoes\nforgone\nforgo/RSGZ\nforgot\nforgotten/U\nfor/HT\nforkful/S\nfork/GSRDM\nforklift/DMSG\nforlornness/M\nforlorn/PTRY\nformability/AM\nformaldehyde/SM\nformalin/M\nformalism/SM\nformalistic\nformalist/SM\nformality/SMI\nformal/IY\nformalization/SM\nformalized/U\nformalizer/M\nformalizes/I\nformalize/ZGSRD\nformalness/M\nformals\nformant/MIS\nformat/AVS\nformate/MXGNSD\nformation/AFSCIM\nformatively/I\nformativeness/IM\nformative/SYP\nformat\'s\nformatted/UA\nformatter/A\nformatters\nformatter\'s\nformatting/A\nform/CGSAFDI\nformed/U\nformer/FSAI\nformerly\nformfitting\nformic\nFormica/MS\nformidableness/M\nformidable/P\nformidably\nformlessness/MS\nformless/PY\nFormosa/M\nFormosan\nform\'s\nformulaic\nformula/SM\nformulate/AGNSDX\nformulated/U\nformulation/AM\nformulator/SM\nfornicate/GNXSD\nfornication/M\nfornicator/SM\nForrester/M\nForrest/RM\nforsaken\nforsake/SG\nforsook\nforsooth\nForster/M\nforswear/SG\nforswore\nforsworn\nforsythia/MS\nFortaleza/M\nforte/MS\nforthcome/JG\nforthcoming/U\nFORTH/M\nforthrightness/SM\nforthright/PYS\nforthwith\nfortieths\nfortification/MS\nfortified/U\nfortifier/SM\nfortify/ADSG\nfortiori\nfortissimo/S\nfortitude/SM\nfortnightly/S\nfortnight/MYS\nFORTRAN\nFortran/M\nfortress/GMSD\nfort/SM\nfortuitousness/SM\nfortuitous/YP\nfortuity/MS\nfortunateness/M\nfortunate/YUS\nfortune/MGSD\nfortuneteller/SM\nfortunetelling/SM\nforty/SRMH\nforum/MS\nforwarder/M\nforwarding/M\nforwardness/MS\nforward/PTZSGDRY\nforwent\nfossiliferous\nfossilization/MS\nfossilized/U\nfossilize/GSD\nfossil/MS\nFoss/M\nfosterer/M\nFoster/M\nfoster/SRDG\nFoucault/M\nfought\nfoulard/SM\nfoulmouth/D\nfoulness/MS\nfouls/M\nfoul/SYRDGTP\nfoundational\nfoundation/SM\nfounded/UF\nfounder/MDG\nfounder\'s/F\nfounding/F\nfoundling/MS\nfound/RDGZS\nfoundry/MS\nfounds/KF\nfountainhead/SM\nfountain/SMDG\nfount/MS\nfourfold\nFourier/M\nfourpence/M\nfourpenny\nfourposter/SM\nfourscore/S\nfour/SHM\nfoursome/SM\nfoursquare\nfourteener/M\nfourteen/SMRH\nfourteenths\nFourth\nfourths\nFourths\nfourth/Y\nfovea/M\nfowler/M\nFowler/M\nfowling/M\nfowl/SGMRD\nfoxfire/SM\nfoxglove/SM\nFoxhall/M\nfoxhole/SM\nfoxhound/SM\nfoxily\nfoxiness/MS\nfoxing/M\nfox/MDSG\nFox/MS\nfoxtail/M\nfoxtrot/MS\nfoxtrotted\nfoxtrotting\nfoxy/TRP\nfoyer/SM\nFPO\nfps\nfr\nfracas/SM\nfractal/SM\nfractional/Y\nfractionate/DNG\nfractionation/M\nfractioned\nfractioning\nfraction/ISMA\nfractiousness/SM\nfractious/PY\nfracture/MGDS\nfragile/Y\nfragility/MS\nfragmentarily\nfragmentariness/M\nfragmentary/P\nfragmentation/MS\nfragment/SDMG\nFragonard/M\nfragrance/SM\nfragrant/Y\nfrailness/MS\nfrail/STPYR\nfrailty/MS\nframed/U\nframer/M\nframe/SRDJGMZ\nframework/SM\nframing/M\nFrancaise/M\nFrance/MS\nFrancene/M\nFrancesca/M\nFrancesco/M\nfranchisee/S\nfranchise/ESDG\nfranchiser/SM\nfranchise\'s\nFranchot/M\nFrancie/M\nFrancine/M\nFrancis\nFrancisca/M\nFranciscan/MS\nFrancisco/M\nFranciska/M\nFranciskus/M\nfrancium/MS\nFrancklin/M\nFrancklyn/M\nFranck/M\nFrancoise/M\nFrancois/M\nFranco/M\nfrancophone/M\nfranc/SM\nFrancyne/M\nfrangibility/SM\nfrangible\nFrankel/M\nFrankenstein/MS\nfranker/M\nFrankford/M\nFrankfort/M\nFrankfurter/M\nfrankfurter/MS\nFrankfurt/RM\nFrankie/M\nfrankincense/MS\nFrankish/M\nfranklin/M\nFranklin/M\nFranklyn/M\nfrankness/MS\nfrank/SGTYRDP\nFrank/SM\nFranky/M\nFran/MS\nFrannie/M\nFranni/M\nFranny/M\nFransisco/M\nfrantically\nfranticness/M\nfrantic/PY\nFrants/M\nFranzen/M\nFranz/NM\nfrapp�\nfrappeed\nfrappeing\nfrappes\nFrasco/M\nFraser/M\nFrasier/M\nFrasquito/M\nfraternal/Y\nfraternity/MSF\nfraternization/SM\nfraternize/GZRSD\nfraternizer/M\nfraternizing/U\nfrat/MS\nfratricidal\nfratricide/MS\nfraud/CS\nfraud\'s\nfraudsters\nfraudulence/S\nfraudulent/YP\nfraught/SGD\nFraulein/S\nFrau/MN\nfray/CSDG\nFrayda/M\nFrayne/M\nfray\'s\nFraze/MR\nFrazer/M\nFrazier/M\nfrazzle/GDS\nfreakishness/SM\nfreakish/YP\nfreak/SGDM\nfreaky/RT\nfreckle/GMDS\nfreckly/RT\nFreda/M\nFreddie/M\nFreddi/M\nFreddy/M\nFredek/M\nFredelia/M\nFrederica/M\nFrederich/M\nFredericka/M\nFrederick/MS\nFrederic/M\nFrederico/M\nFredericton/M\nFrederigo/M\nFrederik/M\nFrederique/M\nFredholm/M\nFredia/M\nFredi/M\nFred/M\nFredra/M\nFredrick/M\nFredrickson/M\nFredric/M\nFredrika/M\nfreebase/GDS\nfreebie/MS\nfreebooter/M\nfreeboot/ZR\nfreeborn\nfreedman/M\nFreedman/M\nfreedmen\nfreedom/MS\nfreehand/D\nfreehanded/Y\nfreeholder/M\nfreehold/ZSRM\nfreeing/S\nfreelance/SRDGZM\nFreeland/M\nfreeloader/M\nfreeload/SRDGZ\nFree/M\nfreeman/M\nFreeman/M\nfreemasonry/M\nFreemasonry/MS\nFreemason/SM\nfreemen\nFreemon/M\nfreeness/M\nFreeport/M\nfreestanding\nfreestone/SM\nfreestyle/SM\nfreethinker/MS\nfreethinking/S\nFreetown/M\nfreeway/MS\nfreewheeler/M\nfreewheeling/P\nfreewheel/SRDMGZ\nfreewill\nfree/YTDRSP\nfreezable\nfreezer/SM\nfreeze/UGSA\nfreezing/S\nFreida/M\nfreighter/M\nfreight/ZGMDRS\nFremont/M\nFrenchman/M\nFrench/MDSG\nFrenchmen\nFrenchwoman/M\nFrenchwomen\nfrenetically\nfrenetic/S\nfrenzied/Y\nfrenzy/MDSG\nfreon/S\nFreon/SM\nfreq\nfrequency/ISM\nfrequented/U\nfrequenter/MS\nfrequentest\nfrequenting\nfrequent/IY\nfrequentness/M\nfrequents\nfresco/DMG\nfrescoes\nfresh/AZSRNDG\nfreshener/M\nfreshen/SZGDR\nfresher/MA\nfreshest\nfreshet/SM\nfreshly\nfreshman/M\nfreshmen\nfreshness/MS\nfreshwater/SM\nFresnel/M\nFresno/M\nfretboard\nfretfulness/MS\nfretful/PY\nfret/S\nfretsaw/S\nfretted\nfretting\nfretwork/MS\nFreudian/S\nFreud/M\nFreya/M\nFrey/M\nfriableness/M\nfriable/P\nfriary/MS\nfriar/YMS\nfricasseeing\nfricassee/MSD\nfrication/M\nfricative/MS\nFrick/M\nfrictional/Y\nfrictionless/Y\nfriction/MS\nFriday/SM\nfridge/SM\nfried/A\nFrieda/M\nFriedan/M\nfriedcake/SM\nFriederike/M\nFriedman/M\nFriedrich/M\nFriedrick/M\nfriendlessness/M\nfriendless/P\nfriendlies\nfriendlily\nfriendliness/USM\nfriendly/PUTR\nfriend/SGMYD\nfriendship/MS\nfrier\'s\nfries/M\nfrieze/SDGM\nfrigate/SM\nFrigga/M\nfrigged\nfrigging/S\nfrighten/DG\nfrightening/Y\nfrightfulness/MS\nfrightful/PY\nfright/GXMDNS\nFrigidaire/M\nfrigidity/MS\nfrigidness/SM\nfrigid/YP\nfrig/S\nfrill/MDGS\nfrilly/RST\nFri/M\nfringe/IGSD\nfringe\'s\nfrippery/SM\nFrisbee/MS\nFrisco/M\nFrisian/SM\nfrisker/M\nfriskily\nfriskiness/SM\nfrisk/RDGS\nfrisky/RTP\nfrisson/M\nFrito/M\nfritterer/M\nfritter/RDSG\nFritz/M\nfritz/SM\nfrivolity/MS\nfrivolousness/SM\nfrivolous/PY\nfrizz/GYSD\nfrizzle/DSG\nfrizzly/RT\nfrizzy/RT\nFr/MD\nFrobisher/M\nfrocking/M\nfrock\'s\nfrock/SUDGC\nfrogged\nfrogging\nfrogman/M\nfrogmarched\nfrogmen\nfrog/MS\nfro/HS\nFroissart/M\nfrolicked\nfrolicker/SM\nfrolicking\nfrolic/SM\nfrolicsome\nfrom\nFromm/M\nfrond/SM\nfrontage/MS\nfrontal/SY\nFrontenac/M\nfront/GSFRD\nfrontier/SM\nfrontiersman/M\nfrontiersmen\nfrontispiece/SM\nfrontrunner\'s\nfront\'s\nfrontward/S\nfrosh/M\nFrostbelt/M\nfrostbite/MS\nfrostbit/G\nfrostbiting/M\nfrostbitten\nfrost/CDSG\nfrosteds\nfrosted/U\nfrostily\nfrostiness/SM\nfrosting/MS\nFrost/M\nfrost\'s\nfrosty/PTR\nfroth/GMD\nfrothiness/SM\nfroths\nfrothy/TRP\nfroufrou/MS\nfrowardness/MS\nfroward/P\nfrowner/M\nfrowning/Y\nfrown/RDSG\nfrowzily\nfrowziness/SM\nfrowzy/RPT\nfrozenness/M\nfrozen/YP\nfroze/UA\nfructify/GSD\nfructose/MS\nFruehauf/M\nfrugality/SM\nfrugal/Y\nfruitcake/SM\nfruiterer/M\nfruiter/RM\nfruitfuller\nfruitfullest\nfruitfulness/MS\nfruitful/UYP\nfruit/GMRDS\nfruitiness/MS\nfruition/SM\nfruitlessness/MS\nfruitless/YP\nfruity/RPT\nfrumpish\nfrump/MS\nfrumpy/TR\nFrunze/M\nfrustrater/M\nfrustrate/RSDXNG\nfrustrating/Y\nfrustration/M\nfrustum/SM\nFrye/M\nfryer/MS\nFry/M\nfry/NGDS\nF\'s\nf\'s/KA\nFSLIC\nft/C\nFTC\nFTP\nfuchsia/MS\nFuchs/M\nfucker/M!\nfuck/GZJRDMS!\nFUD\nfuddle/GSD\nfudge/GMSD\nfuel/ASDG\nfueler/SM\nfuel\'s\nFuentes/M\nfugal\nFugger/M\nfugitiveness/M\nfugitive/SYMP\nfugue/GMSD\nfuhrer/S\nFuji/M\nFujitsu/M\nFujiyama\nFukuoka/M\nFulani/M\nFulbright/M\nfulcrum/SM\nfulfilled/U\nfulfiller/M\nfulfill/GLSRD\nfulfillment/MS\nfullback/SMG\nfuller/DMG\nFuller/M\nFullerton/M\nfullish\nfullness/MS\nfull/RDPSGZT\nfullstops\nfullword/SM\nfully\nfulminate/XSDGN\nfulmination/M\nfulness\'s\nfulsomeness/SM\nfulsome/PY\nFulton/M\nFulvia/M\nfumble/GZRSD\nfumbler/M\nfumbling/Y\nfume/DSG\nfumigant/MS\nfumigate/NGSDX\nfumigation/M\nfumigator/SM\nfuming/Y\nfumy/TR\nFunafuti\nfunctionalism/M\nfunctionalist/SM\nfunctionality/S\nfunctional/YS\nfunctionary/MS\nfunction/GSMD\nfunctor/SM\nfundamentalism/SM\nfundamentalist/SM\nfundamental/SY\nfund/ASMRDZG\nfunded/U\nfundholders\nfundholding\nfunding/S\nFundy/M\nfuneral/MS\nfunerary\nfunereal/Y\nfunfair/M\nfungal/S\nfungible/M\nfungicidal\nfungicide/SM\nfungi/M\nfungoid/S\nfungous\nfungus/M\nfunicular/SM\nfunk/GSDM\nfunkiness/S\nfunky/RTP\nfun/MS\nfunned\nfunnel/SGMD\nfunner\nfunnest\nfunnily/U\nfunniness/SM\nfunning\nfunny/RSPT\nfurbelow/MDSG\nfurbisher/M\nfurbish/GDRSA\nfuriousness/M\nfurious/RYP\nfurlong/MS\nfurlough/DGM\nfurloughs\nfurl/UDGS\nfurn\nfurnace/GMSD\nfurnished/U\nfurnisher/MS\nfurnish/GASD\nfurnishing/SM\nfurniture/SM\nfurore/MS\nfuror/MS\nfur/PMS\nfurred\nfurrier/M\nfurriness/SM\nfurring/SM\nfurrow/DMGS\nfurry/RTZP\nfurtherance/MS\nfurtherer/M\nfurthermore\nfurthermost\nfurther/TGDRS\nfurthest\nfurtiveness/SM\nfurtive/PY\nfury/SM\nfurze/SM\nfusebox/S\nfusee/SM\nfuse/FSDAGCI\nfuselage/SM\nfuse\'s/A\nFushun/M\nfusibility/SM\nfusible/I\nfusiform\nfusilier/MS\nfusillade/SDMG\nfusion/KMFSI\nfussbudget/MS\nfusser/M\nfussily\nfussiness/MS\nfusspot/SM\nfuss/SRDMG\nfussy/PTR\nfustian/MS\nfustiness/MS\nfusty/RPT\nfut\nfutileness/M\nfutile/PY\nfutility/MS\nfuton/S\nfuture/SM\nfuturism/SM\nfuturistic/S\nfuturist/S\nfuturity/MS\nfuturologist/S\nfuturology/MS\nfutz/GSD\nfuze\'s\nFuzhou/M\nFuzzbuster/M\nfuzzily\nfuzziness/SM\nfuzz/SDMG\nfuzzy/PRT\nfwd\nFWD\nfwy\nFY\nFYI\nGA\ngabardine/SM\ngabbed\nGabbey/M\nGabbie/M\nGabbi/M\ngabbiness/S\ngabbing\ngabble/SDG\nGabby/M\ngabby/TRP\nGabe/M\ngaberdine\'s\nGabey/M\ngabfest/MS\nGabie/M\nGabi/M\ngable/GMSRD\nGable/M\nGabonese\nGabon/M\nGaborone/M\nGabriela/M\nGabriele/M\nGabriella/M\nGabrielle/M\nGabriellia/M\nGabriell/M\nGabriello/M\nGabriel/M\nGabrila/M\ngab/S\nGaby/M\nGacrux/M\ngadabout/MS\ngadded\ngadder/MS\ngadding\ngadfly/MS\ngadgetry/MS\ngadget/SM\ngadolinium/MS\ngad/S\nGadsden/M\nGaea/M\nGaelan/M\nGaelic/M\nGael/SM\nGae/M\ngaffe/MS\ngaffer/M\ngaff/SGZRDM\ngaga\nGagarin/M\ngag/DRSG\nGage/M\ngager/M\ngage/SM\ngagged\ngagging\ngaggle/SDG\ngagwriter/S\ngaiety/MS\nGaile/M\nGail/M\ngaily\ngain/ADGS\ngainer/SM\nGaines/M\nGainesville/M\ngainfulness/M\ngainful/YP\ngaining/S\ngainly/U\ngainsaid\ngainsayer/M\ngainsay/RSZG\nGainsborough/M\ngaiter/M\ngait/GSZMRD\nGaithersburg/M\ngalactic\nGalahad/MS\nGalapagos/M\ngal/AS\ngala/SM\nGalatea/M\nGalatia/M\nGalatians/M\nGalaxy/M\ngalaxy/MS\nGalbraith/M\nGalbreath/M\ngale/AS\nGale/M\ngalen\ngalena/MS\ngalenite/M\nGalen/M\ngale\'s\nGalibi/M\nGalilean/MS\nGalilee/M\nGalileo/M\nGalina/M\nGallagher/M\ngallanted\ngallanting\ngallantry/MS\ngallants\ngallant/UY\nGallard/M\ngallbladder/MS\nGallegos/M\ngalleon/SM\ngalleria/S\ngallery/MSDG\ngalley/MS\nGallic\nGallicism/SM\ngallimaufry/MS\ngalling/Y\ngallium/SM\ngallivant/GDS\nGall/M\ngallonage/M\ngallon/SM\ngalloper/M\ngallop/GSRDZ\nGalloway/M\ngallows/M\ngall/SGMD\ngallstone/MS\nGallup/M\nGal/MN\nGalois/M\ngaloot/MS\ngalore/S\ngalosh/GMSD\ngal\'s\nGalsworthy/M\ngalumph/GD\ngalumphs\ngalvanic\nGalvani/M\ngalvanism/MS\ngalvanization/SM\ngalvanize/SDG\nGalvan/M\ngalvanometer/SM\ngalvanometric\nGalven/M\nGalveston/M\nGalvin/M\nGa/M\nGamaliel/M\nGama/M\nGambia/M\nGambian/S\ngambit/MS\ngamble/GZRSD\nGamble/M\ngambler/M\ngambol/SGD\ngamecock/SM\ngamekeeper/MS\ngameness/MS\ngame/PJDRSMYTZG\ngamesmanship/SM\ngamesmen\ngamester/M\ngamest/RZ\ngamete/MS\ngametic\ngamine/SM\ngaminess/MS\ngaming/M\ngamin/MS\ngamma/MS\ngammon/DMSG\nGamow/M\ngamut/MS\ngamy/TRP\ngander/DMGS\nGandhian\nGandhi/M\ngangbusters\nganger/M\nGanges/M\ngang/GRDMS\ngangland/SM\nganglia/M\ngangling\nganglionic\nganglion/M\ngangplank/SM\ngangrene/SDMG\ngangrenous\ngangster/SM\nGangtok/M\ngangway/MS\nGan/M\ngannet/SM\nGannie/M\nGannon/M\nGanny/M\ngantlet/GMDS\nGantry/M\ngantry/MS\nGanymede/M\nGAO\ngaoler/M\ngaol/MRDGZS\ngaper/M\ngape/S\ngaping/Y\ngapped\ngapping\ngap/SJMDRG\ngarage/GMSD\nGarald/M\ngarbageman/M\ngarbage/SDMG\ngarbanzo/MS\ngarb/DMGS\ngarbler/M\ngarble/RSDG\nGarbo/M\nGarcia/M\ngar�on/SM\ngardener/M\nGardener/M\ngardenia/SM\ngardening/M\ngarden/ZGRDMS\nGardie/M\nGardiner/M\nGard/M\nGardner/M\nGardy/M\nGarek/M\nGare/MH\nGareth/M\nGarey/M\nGarfield/M\ngarfish/MS\nGarfunkel/M\nGargantua/M\ngargantuan\ngargle/SDG\ngargoyle/DSM\nGaribaldi/M\nGarik/M\ngarishness/MS\ngarish/YP\nGarland/M\ngarland/SMDG\ngarlicked\ngarlicking\ngarlicky\ngarlic/SM\ngarment/MDGS\nGar/MH\nGarner/M\ngarner/SGD\nGarnet/M\ngarnet/SM\nGarnette/M\nGarnett/M\ngarnish/DSLG\ngarnisheeing\ngarnishee/SDM\ngarnishment/MS\nGarold/M\ngarote\'s\ngarotte\'s\nGarrard/M\ngarred\nGarrek/M\nGarreth/M\nGarret/M\ngarret/SM\nGarrett/M\nGarrick/M\nGarrik/M\ngarring\nGarrison/M\ngarrison/SGMD\ngarroter/M\ngarrote/SRDMZG\nGarrot/M\ngarrotte\'s\nGarrott/M\ngarrulity/SM\ngarrulousness/MS\ngarrulous/PY\nGarry/M\ngar/SLM\ngarter/SGDM\nGarth/M\nGarvey/M\nGarvin/M\nGarv/M\nGarvy/M\nGarwin/M\nGarwood/M\nGary/M\nGarza/M\ngasbag/MS\nGascony/M\ngaseousness/M\ngaseous/YP\ngases/C\ngas/FC\ngash/GTMSRD\ngasification/M\ngasifier/M\ngasify/SRDGXZN\ngasket/SM\ngaslight/DMS\ngasohol/S\ngasoline/MS\ngasometer/M\nGaspard/M\nGaspar/M\nGasparo/M\ngasper/M\nGasper/M\ngasp/GZSRD\ngasping/Y\ngas\'s\ngassed/C\nGasser/M\ngasser/MS\nGasset/M\ngassiness/M\ngassing/SM\ngassy/PTR\nGaston/M\ngastric\ngastritides\ngastritis/MS\ngastroenteritides\ngastroenteritis/M\ngastrointestinal\ngastronome/SM\ngastronomic\ngastronomical/Y\ngastronomy/MS\ngastropod/SM\ngasworks/M\ngateau/MS\ngateaux\ngatecrash/GZSRD\ngatehouse/MS\ngatekeeper/SM\ngate/MGDS\ngatepost/SM\nGates\ngateway/MS\ngathered/IA\ngatherer/M\ngathering/M\ngather/JRDZGS\ngathers/A\nGatlinburg/M\nGatling/M\nGatorade/M\ngator/MS\nGatsby/M\nGatun/M\ngaucheness/SM\ngaucherie/SM\ngauche/TYPR\ngaucho/SM\ngaudily\ngaudiness/MS\ngaudy/PRST\ngaugeable\ngauger/M\nGauguin/M\nGaulish/M\nGaulle/M\nGaul/MS\nGaultiero/M\ngauntlet/GSDM\nGauntley/M\ngauntness/MS\ngaunt/PYRDSGT\ngauss/C\ngausses\nGaussian\nGauss/M\ngauss\'s\nGautama/M\nGauthier/M\nGautier/M\ngauze/SDGM\ngauziness/MS\ngauzy/TRP\nGavan/M\ngave\ngavel/GMDS\nGaven/M\nGavin/M\nGav/MN\ngavotte/MSDG\nGavra/M\nGavrielle/M\nGawain/M\nGawen/M\ngawkily\ngawkiness/MS\ngawk/SGRDM\ngawky/RSPT\nGayel/M\nGayelord/M\nGaye/M\ngayety\'s\nGayla/M\nGayleen/M\nGaylene/M\nGayler/M\nGayle/RM\nGaylord/M\nGaylor/M\nGay/M\ngayness/SM\nGaynor/M\ngay/RTPS\nGaza/M\ngazebo/SM\ngaze/DRSZG\ngazelle/MS\ngazer/M\ngazetteer/SGDM\ngazette/MGSD\nGaziantep/M\ngazillion/S\ngazpacho/MS\nGB\nG/B\nGdansk/M\nGd/M\nGDP\nGearalt/M\nGearard/M\ngearbox/SM\ngear/DMJSG\ngearing/M\ngearshift/MS\ngearstick\ngearwheel/SM\nGeary/M\ngecko/MS\nGED\ngeegaw\'s\ngeeing\ngeek/SM\ngeeky/RT\ngeese/M\ngeest/M\ngee/TDS\ngeezer/MS\nGehenna/M\nGehrig/M\nGeiger/M\nGeigy/M\ngeisha/M\ngelatinousness/M\ngelatinous/PY\ngelatin/SM\ngelcap\ngelding/M\ngeld/JSGD\ngelid\ngelignite/MS\ngelled\ngelling\ngel/MBS\nGelya/M\nGe/M\nGE/M\nGemini/SM\ngemlike\nGemma/M\ngemmed\ngemming\ngem/MS\ngemological\ngemologist/MS\ngemology/MS\ngemstone/SM\ngen\nGena/M\nGenaro/M\ngendarme/MS\ngender/DMGS\ngenderless\ngenealogical/Y\ngenealogist/SM\ngenealogy/MS\nGene/M\ngene/MS\ngeneralissimo/SM\ngeneralist/MS\ngenerality/MS\ngeneralizable/SM\ngeneralization/MS\ngeneralized/U\ngeneralize/GZBSRD\ngeneralizer/M\ngeneral/MSPY\ngeneralness/M\ngeneralship/SM\ngenera/M\ngenerate/CXAVNGSD\ngenerational\ngeneration/MCA\ngenerative/AY\ngenerators/A\ngenerator/SM\ngenerically\ngeneric/PS\ngenerosity/MS\ngenerously/U\ngenerousness/SM\ngenerous/PY\nGenesco/M\ngenesis/M\nGenesis/M\ngenes/S\ngenetically\ngeneticist/MS\ngenetic/S\ngenetics/M\nGenet/M\nGeneva/M\nGenevieve/M\nGenevra/M\nGenghis/M\ngeniality/FMS\ngenially/F\ngenialness/M\ngenial/PY\nGenia/M\ngenies/K\ngenie/SM\ngenii/M\ngenitalia\ngenitals\ngenital/YF\ngenitive/SM\ngenitourinary\ngenius/SM\nGen/M\nGenna/M\nGennie/M\nGennifer/M\nGenni/M\nGenny/M\nGenoa/SM\ngenocidal\ngenocide/SM\nGeno/M\ngenome/SM\ngenotype/MS\nGenovera/M\ngenre/MS\ngent/AMS\ngenteelness/MS\ngenteel/PRYT\ngentian/SM\ngentile/S\nGentile\'s\ngentility/MS\ngentlefolk/S\ngentlemanliness/M\ngentlemanly/U\ngentleman/YM\ngentlemen\ngentleness/SM\ngentle/PRSDGT\ngentlewoman/M\ngentlewomen/M\ngently\ngentrification/M\ngentrify/NSDGX\nGentry/M\ngentry/MS\ngenuflect/GDS\ngenuflection/MS\ngenuineness/SM\ngenuine/PY\ngenus\nGenvieve/M\ngeocentric\ngeocentrically\ngeocentricism\ngeochemical/Y\ngeochemistry/MS\ngeochronology/M\ngeodesic/S\ngeode/SM\ngeodesy/MS\ngeodetic/S\nGeoff/M\nGeoffrey/M\nGeoffry/M\ngeog\ngeographer/MS\ngeographic\ngeographical/Y\ngeography/MS\ngeologic\ngeological/Y\ngeologist/MS\ngeology/MS\ngeom\nGeo/M\ngeomagnetic\ngeomagnetically\ngeomagnetism/SM\ngeometer/MS\ngeometrical/Y\ngeometrician/M\ngeometric/S\ngeometry/MS\ngeomorphological\ngeomorphology/M\ngeophysical/Y\ngeophysicist/MS\ngeophysics/M\ngeopolitical/Y\ngeopolitic/S\ngeopolitics/M\nGeoras/M\nGeordie/M\nGeorgeanna/M\nGeorgeanne/M\nGeorgena/M\nGeorge/SM\nGeorgeta/M\nGeorgetown/M\nGeorgetta/M\nGeorgette/M\nGeorgia/M\nGeorgiana/M\nGeorgianna/M\nGeorgianne/M\nGeorgian/S\nGeorgie/M\nGeorgi/M\nGeorgina/M\nGeorgine/M\nGeorg/M\nGeorgy/M\ngeostationary\ngeosynchronous\ngeosyncline/SM\ngeothermal\ngeothermic\nGeralda/M\nGeraldine/M\nGerald/M\ngeranium/SM\nGerard/M\nGerardo/M\nGerber/M\ngerbil/MS\nGerda/M\nGerek/M\nGerhardine/M\nGerhard/M\nGerhardt/M\nGerianna/M\nGerianne/M\ngeriatric/S\ngeriatrics/M\nGerick/M\nGerik/M\nGeri/M\nGeritol/M\nGerladina/M\nGer/M\nGermaine/M\nGermain/M\nGermana/M\ngermane\nGermania/M\nGermanic/M\ngermanium/SM\ngermanized\nGerman/SM\nGermantown/M\nGermany/M\nGermayne/M\ngermen/M\ngermicidal\ngermicide/MS\ngerminal/Y\ngerminated/U\ngerminate/XVGNSD\ngermination/M\ngerminative/Y\ngerm/MNS\nGerome/M\nGeronimo/M\ngerontocracy/M\ngerontological\ngerontologist/SM\ngerontology/SM\nGerrard/M\nGerrie/M\nGerrilee/M\nGerri/M\nGerry/M\ngerrymander/SGD\nGershwin/MS\nGerta/M\nGertie/M\nGerti/M\nGert/M\nGertruda/M\nGertrude/M\nGertrudis/M\nGertrud/M\nGerty/M\ngerundive/M\ngerund/SVM\nGery/M\ngestalt/M\ngestapo/S\nGestapo/SM\ngestate/SDGNX\ngestational\ngestation/M\ngesticulate/XSDVGN\ngesticulation/M\ngesticulative/Y\ngestural\ngesture/SDMG\ngesundheit\ngetaway/SM\nGethsemane/M\nget/S\ngetter/SDM\ngetting\nGetty/M\nGettysburg/M\ngetup/MS\ngewgaw/MS\nGew�rztraminer\ngeyser/GDMS\nGhanaian/MS\nGhana/M\nGhanian\'s\nghastliness/MS\nghastly/TPR\nghat/MS\nGhats/M\nGhent/M\nGherardo/M\ngherkin/SM\nghetto/DGMS\nghettoize/SDG\nGhibelline/M\nghostlike\nghostliness/MS\nghostly/TRP\nghost/SMYDG\nghostwrite/RSGZ\nghostwritten\nghostwrote\nghoulishness/SM\nghoulish/PY\nghoul/SM\nGHQ\nGI\nGiacinta/M\nGiacobo/M\nGiacometti/M\nGiacomo/M\nGiacopo/M\nGiana/M\nGianina/M\nGian/M\nGianna/M\nGianni/M\nGiannini/M\ngiantess/MS\ngiantkiller\ngiant/SM\nGiauque/M\nGiavani/M\ngibber/DGS\ngibberish/MS\ngibbet/MDSG\nGibbie/M\nGibb/MS\nGibbon/M\ngibbon/MS\ngibbousness/M\ngibbous/YP\nGibby/M\ngibe/GDRS\ngiber/M\ngiblet/MS\nGib/M\nGibraltar/MS\nGibson/M\ngiddap\ngiddily\ngiddiness/SM\nGiddings/M\ngiddy/GPRSDT\nGide/M\nGideon/MS\nGielgud/M\nGienah/M\nGiffard/M\nGiffer/M\nGiffie/M\nGifford/M\nGiff/RM\nGiffy/M\ngiftedness/M\ngifted/PY\ngift/SGMD\ngigabyte/S\ngigacycle/MS\ngigahertz/M\ngigantically\ngiganticness/M\ngigantic/P\ngigavolt\ngigawatt/M\ngigged\ngigging\ngiggler/M\ngiggle/RSDGZ\ngiggling/Y\ngiggly/TR\nGigi/M\ngig/MS\nGIGO\ngigolo/MS\ngila\nGila/M\nGilberta/M\nGilberte/M\nGilbertina/M\nGilbertine/M\ngilbert/M\nGilbert/M\nGilberto/M\nGilbertson/M\nGilburt/M\nGilchrist/M\nGilda/M\ngilder/M\ngilding/M\ngild/JSGZRD\nGilead/M\nGilemette/M\nGiles\nGilgamesh/M\nGilkson/M\nGillan/M\nGilles\nGillespie/M\nGillette/M\nGilliam/M\nGillian/M\nGillie/M\nGilligan/M\nGilli/M\nGill/M\ngill/SGMRD\nGilly/M\nGilmore/M\nGil/MY\ngilt/S\ngimbaled\ngimbals\nGimbel/M\ngimcrackery/SM\ngimcrack/S\ngimlet/MDSG\ngimme/S\ngimmick/GDMS\ngimmickry/MS\ngimmicky\ngimp/GSMD\ngimpy/RT\nGina/M\nGinelle/M\nGinevra/M\ngingerbread/SM\ngingerliness/M\ngingerly/P\nGinger/M\nginger/SGDYM\ngingersnap/SM\ngingery\ngingham/SM\ngingivitis/SM\nGingrich/M\nginkgoes\nginkgo/M\nginmill\ngin/MS\nginned\nGinnie/M\nGinnifer/M\nGinni/M\nginning\nGinny/M\nGino/M\nGinsberg/M\nGinsburg/M\nginseng/SM\nGioconda/M\nGiordano/M\nGiorgia/M\nGiorgi/M\nGiorgio/M\nGiorgione/M\nGiotto/M\nGiovanna/M\nGiovanni/M\nGipsy\'s\ngiraffe/MS\nGiralda/M\nGiraldo/M\nGiraud/M\nGiraudoux/M\ngirded/U\ngirder/M\ngirdle/GMRSD\ngirdler/M\ngird/RDSGZ\ngirlfriend/MS\ngirlhood/SM\ngirlie/M\ngirlishness/SM\ngirlish/YP\ngirl/MS\ngiro/M\ngirt/GDS\ngirth/MDG\ngirths\nGisela/M\nGiselbert/M\nGisele/M\nGisella/M\nGiselle/M\nGish/M\ngist/MS\ngit/M\nGiuditta/M\nGiulia/M\nGiuliano/M\nGiulietta/M\nGiulio/M\nGiuseppe/M\nGiustina/M\nGiustino/M\nGiusto/M\ngiveaway/SM\ngiveback/S\ngive/HZGRS\ngiven/SP\ngiver/M\ngiving/Y\nGiza/M\nGizela/M\ngizmo\'s\ngizzard/SM\nGk/M\nglac�/DGS\nglacial/Y\nglaciate/XNGDS\nglaciation/M\nglacier/SM\nglaciological\nglaciologist/M\nglaciology/M\ngladded\ngladden/GDS\ngladder\ngladdest\ngladding\ngladdy\nglade/SM\ngladiatorial\ngladiator/SM\nGladi/M\ngladiola/MS\ngladioli\ngladiolus/M\ngladly/RT\nGlad/M\ngladness/MS\ngladsome/RT\nGladstone/MS\nGladys\nglad/YSP\nglamor/DMGS\nglamorization/MS\nglamorizer/M\nglamorize/SRDZG\nglamorousness/M\nglamorous/PY\nglance/GJSD\nglancing/Y\nglanders/M\nglandes\nglandular/Y\ngland/ZSM\nglans/M\nglare/SDG\nglaringness/M\nglaring/YP\nGlaser/M\nGlasgow/M\nglasnost/S\nglassblower/S\nglassblowing/MS\nglassful/MS\nglass/GSDM\nglasshouse/SM\nglassily\nglassiness/SM\nglassless\nGlass/M\nglassware/SM\nglasswort/M\nglassy/PRST\nGlastonbury/M\nGlaswegian/S\nglaucoma/SM\nglaucous\nglazed/U\nglazer/M\nglaze/SRDGZJ\nglazier/SM\nglazing/M\ngleam/MDGS\ngleaner/M\ngleaning/M\nglean/RDGZJS\nGleason/M\nGleda/M\ngleed/M\nglee/DSM\ngleefulness/MS\ngleeful/YP\ngleeing\nGlendale/M\nGlenda/M\nGlenden/M\nGlendon/M\nGlenine/M\nGlen/M\nGlenna/M\nGlennie/M\nGlennis/M\nGlenn/M\nglen/SM\nglibber\nglibbest\nglibness/MS\nglib/YP\nglide/JGZSRD\nglider/M\nglim/M\nglimmer/DSJG\nglimmering/M\nglimpse/DRSZMG\nglimpser/M\nglint/DSG\nglissandi\nglissando/M\nglisten/DSG\nglister/DGS\nglitch/MS\nglitter/GDSJ\nglittering/Y\nglittery\nglitz/GSD\nglitzy/TR\ngloaming/MS\ngloater/M\ngloating/Y\ngloat/SRDG\nglobalism/S\nglobalist/S\nglobal/SY\nglobe/SM\nglobetrotter/MS\nglob/GDMS\nglobularity/M\nglobularness/M\nglobular/PY\nglobule/MS\nglobulin/MS\nglockenspiel/SM\nglommed\ngloom/GSMD\ngloomily\ngloominess/MS\ngloomy/RTP\nglop/MS\nglopped\nglopping\ngloppy/TR\nGloria/M\nGloriana/M\nGloriane/M\nglorification/M\nglorifier/M\nglorify/XZRSDNG\nGlori/M\nglorious/IYP\ngloriousness/IM\nGlory/M\nglory/SDMG\nglossary/MS\ngloss/GSDM\nglossily\nglossiness/SM\nglossolalia/SM\nglossy/RSPT\nglottal\nglottalization/M\nglottis/MS\nGloucester/M\ngloveless\nglover/M\nGlover/M\nglove/SRDGMZ\nglower/GD\nglow/GZRDMS\nglowing/Y\nglowworm/SM\nglucose/SM\nglue/DRSMZG\nglued/U\ngluer/M\ngluey\ngluier\ngluiest\nglummer\nglummest\nglumness/MS\nglum/SYP\ngluon/M\nglutamate/M\ngluten/M\nglutenous\nglutinousness/M\nglutinous/PY\nglut/SMNX\nglutted\nglutting\nglutton/MS\ngluttonous/Y\ngluttony/SM\nglyceride/M\nglycerinate/MD\nglycerine\'s\nglycerin/SM\nglycerolized/C\nglycerol/SM\nglycine/M\nglycogen/SM\nglycol/MS\nGlynda/M\nGlynis/M\nGlyn/M\nGlynnis/M\nGlynn/M\nglyph/M\nglyphs\ngm\nGM\nGMT\ngnarl/SMDG\ngnash/SDG\ngnat/MS\ngnawer/M\ngnaw/GRDSJ\ngnawing/M\ngneiss/SM\nGnni/M\ngnomelike\nGNOME/M\ngnome/SM\ngnomic\ngnomish\ngnomonic\ngnosticism\nGnosticism/M\ngnostic/K\nGnostic/M\nGNP\ngnu/MS\ngoad/MDSG\ngoalie/SM\ngoalkeeper/MS\ngoalkeeping/M\ngoalless\ngoal/MDSG\ngoalmouth/M\ngoalpost/S\ngoalscorer\ngoalscoring\ngoaltender/SM\nGoa/M\ngoatee/SM\ngoatherd/MS\ngoat/MS\ngoatskin/SM\ngobbed\ngobbet/MS\ngobbing\ngobbledegook\'s\ngobbledygook/S\ngobbler/M\ngobble/SRDGZ\nGobi/M\ngoblet/MS\ngoblin/SM\ngob/SM\nGodard/M\nGodart/M\ngodchild/M\ngodchildren\ngoddammit\ngoddamn/GS\nGoddard/M\nGoddart/M\ngoddaughter/SM\ngodded\ngoddess/MS\ngodding\nG�del/M\ngodfather/GSDM\ngodforsaken\nGodfree/M\nGodfrey/M\nGodfry/M\ngodhead/S\ngodhood/SM\nGodiva/M\ngodlessness/MS\ngodless/P\ngodlikeness/M\ngodlike/P\ngodliness/UMS\ngodly/UTPR\nGod/M\ngodmother/MS\nGodot/M\ngodparent/SM\ngodsend/MS\ngod/SMY\ngodson/MS\nGodspeed/S\nGodthaab/M\nGodunov/M\nGodwin/M\nGodzilla/M\nGoebbels/M\nGoering/M\ngoer/MG\ngoes\nGoethals/M\nGoethe/M\ngofer/SM\nGoff/M\ngoggler/M\ngoggle/SRDGZ\nGogh/M\nGog/M\nGogol/M\nGoiania/M\ngoing/M\ngoiter/SM\nGolan/M\nGolconda/M\nGolda/M\nGoldarina/M\nGoldberg/M\ngoldbricker/M\ngoldbrick/GZRDMS\nGolden/M\ngoldenness/M\ngoldenrod/SM\ngoldenseal/M\ngolden/TRYP\ngoldfinch/MS\ngoldfish/SM\nGoldia/M\nGoldie/M\nGoldilocks/M\nGoldi/M\nGoldina/M\nGolding/M\nGoldman/M\ngoldmine/S\ngold/MRNGTS\ngoldsmith/M\nGoldsmith/M\ngoldsmiths\nGoldstein/M\nGoldwater/M\nGoldwyn/M\nGoldy/M\nGoleta/M\ngolfer/M\ngolf/RDMGZS\nGolgotha/M\nGoliath/M\nGoliaths\ngolly/S\nGomez/M\nGomorrah/M\nGompers/M\ngo/MRHZGJ\ngonadal\ngonad/SM\ngondola/SM\ngondolier/MS\nGondwanaland/M\ngoner/M\ngone/RZN\ngong/SGDM\ngonion/M\ngonna\ngonorrheal\ngonorrhea/MS\nGonzales/M\nGonzalez/M\nGonzalo/M\nGoober/M\ngoober/MS\ngoodbye/MS\ngoodhearted\ngoodie\'s\ngoodish\ngoodly/TR\nGood/M\nGoodman/M\ngoodness/MS\ngoodnight\nGoodrich/M\ngood/SYP\ngoodwill/MS\nGoodwin/M\nGoodyear/M\ngoody/SM\ngooey\ngoofiness/MS\ngoof/SDMG\ngoofy/RPT\nGoogle/M\ngooier\ngooiest\ngook/SM\ngoo/MS\ngoon/SM\ngoop/SM\ngooseberry/MS\ngoosebumps\ngoose/M\ngoos/SDG\nGOP\nGopher\ngopher/SM\nGoran/M\nGoraud/M\nGorbachev\nGordan/M\nGorden/M\nGordian/M\nGordie/M\nGordimer/M\nGordon/M\nGordy/M\ngore/DSMG\nGore/M\nGoren/M\nGorey/M\nGorgas\ngorged/E\ngorge/GMSRD\ngorgeousness/SM\ngorgeous/YP\ngorger/EM\ngorges/E\ngorging/E\nGorgon/M\ngorgon/S\nGorgonzola/M\nGorham/M\ngorilla/MS\ngorily\ngoriness/MS\ngoring/M\nGorky/M\ngormandizer/M\ngormandize/SRDGZ\ngormless\ngorp/S\ngorse/SM\ngory/PRT\ngos\ngoshawk/MS\ngosh/S\ngosling/M\ngospeler/M\ngospel/MRSZ\nGospel/SM\ngossamer/SM\ngossipy\ngossip/ZGMRDS\ngotcha/SM\nG�teborg/M\nGotham/M\nGothart/M\nGothicism/M\nGothic/S\nGoth/M\nGoths\ngot/IU\ngoto\nGOTO/MS\ngotta\ngotten/U\nGottfried/M\nGoucher/M\nGouda/SM\ngouge/GZSRD\ngouger/M\ngoulash/SM\nGould/M\nGounod/M\ngourde/SM\ngourd/MS\ngourmand/MS\ngourmet/MS\ngout/SM\ngouty/RT\ngovernable/U\ngovernance/SM\ngoverned/U\ngoverness/SM\ngovern/LBGSD\ngovernmental/Y\ngovernment/MS\nGovernor\ngovernor/MS\ngovernorship/SM\ngov/S\ngovt\ngown/GSDM\nGoya/M\nGP\nGPA\nGPO\nGPSS\ngr\ngrabbed\ngrabber/SM\ngrabbing/S\ngrab/S\nGracchus/M\ngrace/ESDMG\ngraceful/EYPU\ngracefuller\ngracefullest\ngracefulness/ESM\nGraceland/M\ngracelessness/MS\ngraceless/PY\nGrace/M\nGracia/M\nGraciela/M\nGracie/M\ngraciousness/SM\ngracious/UY\ngrackle/SM\ngradate/DSNGX\ngradation/MCS\ngrade/ACSDG\ngraded/U\nGradeigh/M\ngradely\ngrader/MC\ngrade\'s\nGradey/M\ngradient/RMS\ngrad/MRDGZJS\ngradualism/MS\ngradualist/MS\ngradualness/MS\ngradual/SYP\ngraduand/SM\ngraduate/MNGDSX\ngraduation/M\nGrady/M\nGraehme/M\nGraeme/M\nGraffias/M\ngraffiti\ngraffito/M\nGraff/M\ngrafter/M\ngrafting/M\ngraft/MRDSGZ\nGrafton/M\nGrahame/M\nGraham/M\ngraham/SM\nGraig/M\ngrail/S\nGrail/SM\ngrainer/M\ngrain/IGSD\ngraininess/MS\ngraining/M\ngrain\'s\ngrainy/RTP\ngram/KSM\nGram/M\ngrammarian/SM\ngrammar/MS\ngrammaticality/M\ngrammaticalness/M\ngrammatical/UY\ngrammatic/K\ngramme/SM\nGrammy/S\ngramophone/SM\nGrampians\ngrampus/SM\nGranada/M\ngranary/MS\ngrandam/SM\ngrandaunt/MS\ngrandchild/M\ngrandchildren\ngranddaddy/MS\ngranddad/SM\ngranddaughter/MS\ngrandee/SM\ngrandeur/MS\ngrandfather/MYDSG\ngrandiloquence/SM\ngrandiloquent/Y\ngrandiose/YP\ngrandiosity/MS\ngrandkid/SM\ngrandma/MS\ngrandmaster/MS\ngrandmother/MYS\ngrandnephew/MS\ngrandness/MS\ngrandniece/SM\ngrandpa/MS\ngrandparent/MS\ngrandson/MS\ngrandstander/M\ngrandstand/SRDMG\ngrand/TPSYR\ngranduncle/MS\nGrange/MR\ngrange/MSR\nGranger/M\ngranite/MS\ngranitic\nGran/M\nGrannie/M\nGranny/M\ngranny/MS\ngranola/S\ngrantee/MS\ngranter/M\nGrantham/M\nGranthem/M\nGrantley/M\nGrant/M\ngrantor\'s\ngrant/SGZMRD\ngrantsmanship/S\ngranularity/SM\ngranular/Y\ngranulate/SDXVGN\ngranulation/M\ngranule/SM\ngranulocytic\nGranville/M\ngrapefruit/SM\ngrape/SDGM\ngrapeshot/M\ngrapevine/MS\ngrapheme/M\ngraph/GMD\ngraphical/Y\ngraphicness/M\ngraphic/PS\ngraphics/M\ngraphite/SM\ngraphologist/SM\ngraphology/MS\ngraphs\ngrapnel/SM\ngrapple/DRSG\ngrappler/M\ngrappling/M\ngrasper/M\ngraspingness/M\ngrasping/PY\ngrasp/SRDBG\ngrass/GZSDM\ngrasshopper/SM\ngrassland/MS\nGrass/M\ngrassroots\ngrassy/RT\nGrata/M\ngratefuller\ngratefullest\ngratefulness/USM\ngrateful/YPU\ngrater/M\ngrates/I\ngrate/SRDJGZ\nGratia/M\nGratiana/M\ngraticule/M\ngratification/M\ngratified/U\ngratifying/Y\ngratify/NDSXG\ngrating/YM\ngratis\ngratitude/IMS\ngratuitousness/MS\ngratuitous/PY\ngratuity/SM\ngravamen/SM\ngravedigger/SM\ngravel/SGMYD\ngraven\ngraveness/MS\ngraver/M\ngraveside/S\nGraves/M\ngrave/SRDPGMZTY\ngravestone/SM\ngraveyard/MS\ngravidness/M\ngravid/PY\ngravimeter/SM\ngravimetric\ngravitas\ngravitate/XVGNSD\ngravitational/Y\ngravitation/M\ngraviton/SM\ngravity/MS\ngravy/SM\ngraybeard/MS\nGrayce/M\ngrayish\nGray/M\ngrayness/S\ngray/PYRDGTS\nGrayson/M\ngraze/GZSRD\ngrazer/M\nGrazia/M\ngrazing/M\ngrease/GMZSRD\ngreasepaint/MS\ngreaseproof\ngreaser/M\ngreasily\ngreasiness/SM\ngreasy/PRT\ngreatcoat/DMS\ngreaten/DG\ngreathearted\ngreatness/MS\ngreat/SPTYRN\ngrebe/MS\nGrecian/S\nGreece/M\ngreed/C\ngreedily\ngreediness/SM\ngreeds\ngreed\'s\ngreedy/RTP\nGreek/SM\nGreeley/M\ngreenback/MS\ngreenbelt/S\nGreenberg/M\nGreenblatt/M\nGreenbriar/M\nGreene/M\ngreenery/MS\nGreenfeld/M\ngreenfield\nGreenfield/M\ngreenfly/M\ngreengage/SM\ngreengrocer/SM\ngreengrocery/M\ngreenhorn/SM\ngreenhouse/SM\ngreening/M\ngreenish/P\nGreenland/M\nGreen/M\ngreenmail/GDS\ngreenness/MS\nGreenpeace/M\ngreenroom/SM\nGreensboro/M\nGreensleeves/M\nGreensville/M\ngreensward/SM\ngreen/SYRDMPGT\nGreentree/M\nGreenville/M\nGreenwich/M\ngreenwood/MS\nGreer/M\ngreeter/M\ngreeting/M\ngreets/A\ngreet/SRDJGZ\ngregariousness/MS\ngregarious/PY\nGregg/M\nGreggory/M\nGreg/M\nGregoire/M\nGregoor/M\nGregorian\nGregorio/M\nGregorius/M\nGregor/M\nGregory/M\ngremlin/SM\nGrenada/M\ngrenade/MS\nGrenadian/S\ngrenadier/SM\nGrenadines\ngrenadine/SM\nGrendel/M\nGrenier/M\nGrenoble/M\nGrenville/M\nGresham/M\nGretal/M\nGreta/M\nGretchen/M\nGretel/M\nGrete/M\nGrethel/M\nGretna/M\nGretta/M\nGretzky/M\ngrew/A\ngreybeard/M\ngreyhound/MS\nGrey/M\ngreyness/M\ngridded\ngriddlecake/SM\ngriddle/DSGM\ngridiron/GSMD\ngridlock/DSG\ngrids/A\ngrid/SGM\ngrief/MS\nGrieg/M\nGrier/M\ngrievance/SM\ngriever/M\ngrieve/SRDGZ\ngrieving/Y\ngrievousness/SM\ngrievous/PY\nGriffie/M\nGriffin/M\ngriffin/SM\nGriffith/M\nGriff/M\ngriffon\'s\nGriffy/M\ngriller/M\ngrille/SM\ngrill/RDGS\ngrillwork/M\ngrimace/DRSGM\ngrimacer/M\nGrimaldi/M\ngrime/MS\nGrimes\ngriminess/MS\ngrimmer\ngrimmest\nGrimm/M\ngrimness/MS\ngrim/PGYD\ngrimy/TPR\nGrinch/M\ngrind/ASG\ngrinder/MS\ngrinding/SY\ngrindstone/SM\ngringo/SM\ngrinned\ngrinner/M\ngrinning/Y\ngrin/S\ngriper/M\ngripe/S\ngrippe/GMZSRD\ngripper/M\ngripping/Y\ngrip/SGZMRD\nGriselda/M\ngrisliness/SM\ngrisly/RPT\nGris/M\nGrissel/M\ngristle/SM\ngristliness/M\ngristly/TRP\ngristmill/MS\ngrist/MYS\nGriswold/M\ngrit/MS\ngritted\ngritter/MS\ngrittiness/SM\ngritting\ngritty/PRT\nGriz/M\ngrizzle/DSG\ngrizzling/M\ngrizzly/TRS\nGr/M\ngroaner/M\ngroan/GZSRDM\ngroat/SM\ngrocer/MS\ngrocery/MS\ngroggily\ngrogginess/SM\ngroggy/RPT\ngrog/MS\ngroin/MGSD\ngrokked\ngrokking\ngrok/S\ngrommet/GMDS\nGromyko/M\ngroofs\ngroomer/M\ngroom/GZSMRD\ngroomsman/M\ngroomsmen\nGroot/M\ngroover/M\ngroove/SRDGM\ngroovy/TR\ngroper/M\ngrope/SRDJGZ\nGropius/M\ngrosbeak/SM\ngrosgrain/MS\nGross\nGrosset/M\ngross/GTYSRDP\nGrossman/M\ngrossness/MS\nGrosvenor/M\nGrosz/M\ngrotesqueness/MS\ngrotesque/PSY\nGrotius/M\nGroton/M\ngrottoes\ngrotto/M\ngrouch/GDS\ngrouchily\ngrouchiness/MS\ngrouchy/RPT\ngroundbreaking/S\ngrounded/U\ngrounder/M\ngroundhog/SM\nground/JGZMDRS\ngroundlessness/M\ngroundless/YP\ngroundnut/MS\ngroundsheet/M\ngroundskeepers\ngroundsman/M\ngroundswell/S\ngroundwater/S\ngroundwork/SM\ngrouped/A\ngrouper/M\ngroupie/MS\ngrouping/M\ngroups/A\ngroup/ZJSMRDG\ngrouse/GMZSRD\ngrouser/M\ngrouter/M\ngrout/GSMRD\ngroveler/M\ngrovelike\ngroveling/Y\ngrovel/SDRGZ\nGrover/M\nGrove/RM\ngrove/SRMZ\ngrower/M\ngrow/GZYRHS\ngrowing/I\ngrowingly\ngrowler/M\ngrowling/Y\ngrowl/RDGZS\ngrowly/RP\ngrown/IA\ngrownup/MS\ngrows/A\ngrowth/IMA\ngrowths/IA\ngrubbed\ngrubber/SM\ngrubbily\ngrubbiness/SM\ngrubbing\ngrubby/RTP\ngrub/MS\ngrubstake/MSDG\ngrudge/GMSRDJ\ngrudger/M\ngrudging/Y\ngrueling/Y\ngruel/MDGJS\ngruesomeness/SM\ngruesome/RYTP\ngruffness/MS\ngruff/PSGTYRD\ngrumble/GZJDSR\ngrumbler/M\ngrumbling/Y\nGrumman/M\ngrumpily\ngrumpiness/MS\ngrump/MDGS\ngrumpy/TPR\nGrundy/M\nGr�newald/M\ngrunge/S\ngrungy/RT\ngrunion/SM\ngrunter/M\ngrunt/SGRD\nGrusky/M\nGrus/M\nGruy�re\nGruyeres\ngryphon\'s\ng\'s\nG\'s\ngs/A\nGSA\ngt\nGU\nguacamole/MS\nGuadalajara/M\nGuadalcanal/M\nGuadalquivir/M\nGuadalupe/M\nGuadeloupe/M\nGuallatiri/M\nGualterio/M\nGuamanian/SM\nGuam/M\nGuangzhou\nguanine/MS\nguano/MS\nGuantanamo/M\nGuarani/M\nguarani/SM\nguaranteeing\nguarantee/RSDZM\nguarantor/SM\nguaranty/MSDG\nguardedness/UM\nguarded/UYP\nguarder/M\nguardhouse/SM\nGuardia/M\nguardianship/MS\nguardian/SM\nguardrail/SM\nguard/RDSGZ\nguardroom/SM\nguardsman/M\nguardsmen\nGuarnieri/M\nGuatemala/M\nGuatemalan/S\nguava/SM\nGuayaquil/M\ngubernatorial\nGucci/M\ngudgeon/M\nGuelph/M\nGuendolen/M\nGuenevere/M\nGuenna/M\nGuenther/M\nguernsey/S\nGuernsey/SM\nGuerra/M\nGuerrero/M\nguerrilla/MS\nguessable/U\nguess/BGZRSD\nguessed/U\nguesser/M\nguesstimate/DSMG\nguesswork/MS\nguest/SGMD\nGuevara/M\nguffaw/GSDM\nguff/SM\nGuggenheim/M\nGuglielma/M\nGuglielmo/M\nGuhleman/M\nGUI\nGuiana/M\nguidance/MS\nguidebook/SM\nguided/U\nguide/GZSRD\nguideline/SM\nguidepost/MS\nguider/M\nGuido/M\nGuilbert/M\nguilder/M\nguildhall/SM\nguild/SZMR\nguileful\nguilelessness/MS\nguileless/YP\nguile/SDGM\nGuillaume/M\nGuillema/M\nGuillemette/M\nguillemot/MS\nGuillermo/M\nguillotine/SDGM\nguiltily\nguiltiness/MS\nguiltlessness/M\nguiltless/YP\nguilt/SM\nguilty/PTR\nGui/M\nGuinea/M\nGuinean/S\nguinea/SM\nGuinevere/M\nGuinna/M\nGuinness/M\nguise\'s\nguise/SDEG\nguitarist/SM\nguitar/SM\nGuiyang\nGuizot/M\nGujarati/M\nGujarat/M\nGujranwala/M\ngulag/S\ngulch/MS\ngulden/MS\ngulf/DMGS\nGullah/M\ngullet/MS\ngulley\'s\ngullibility/MS\ngullible\nGulliver/M\ngull/MDSG\ngully/SDMG\ngulp/RDGZS\ngumboil/MS\ngumbo/MS\ngumboots\ngumdrop/SM\ngummed\ngumminess/M\ngumming/C\ngum/MS\ngummy/RTP\ngumption/SM\ngumshoeing\ngumshoe/SDM\ngumtree/MS\nGunar/M\ngunboat/MS\nGunderson/M\ngunfighter/M\ngunfight/SRMGZ\ngunfire/SM\ngunflint/M\ngunfought\nGunilla/M\ngunk/SM\ngunky/RT\nGun/M\ngunman/M\ngunmen\ngunmetal/MS\ngun/MS\nGunnar/M\ngunned\ngunnel\'s\nGunner/M\ngunner/SM\ngunnery/MS\ngunning/M\ngunnysack/SM\ngunny/SM\ngunpoint/MS\ngunpowder/SM\ngunrunner/MS\ngunrunning/MS\ngunship/S\ngunshot/SM\ngunslinger/M\ngunsling/GZR\ngunsmith/M\ngunsmiths\nGuntar/M\nGunter/M\nGunther/M\ngunwale/MS\nGuofeng/M\nguppy/SM\nGupta/M\ngurgle/SDG\nGurkha/M\ngurney/S\nguru/MS\nGusella/M\ngusher/M\ngush/SRDGZ\ngushy/TR\nGus/M\nGuss\ngusset/MDSG\nGussie/M\nGussi/M\ngussy/GSD\nGussy/M\nGustaf/M\nGustafson/M\nGusta/M\ngustatory\nGustave/M\nGustav/M\nGustavo/M\nGustavus/M\ngusted/E\nGustie/M\ngustily\nGusti/M\ngustiness/M\ngusting/E\ngust/MDGS\ngustoes\ngusto/M\ngusts/E\nGusty/M\ngusty/RPT\nGutenberg/M\nGuthrey/M\nGuthrie/M\nGuthry/M\nGutierrez/M\ngutlessness/S\ngutless/P\ngutser/M\ngutsiness/M\ngut/SM\nguts/R\ngutsy/PTR\ngutted\ngutter/GSDM\nguttering/M\nguttersnipe/M\ngutting\ngutturalness/M\nguttural/SPY\ngutty/RSMT\nGuyana/M\nGuyanese\nGuy/M\nguy/MDRZGS\nGuzman/M\nguzzle/GZRSD\nguzzler/M\ng/VBX\nGwalior/M\nGwendolen/M\nGwendoline/M\nGwendolin/M\nGwendolyn/M\nGweneth/M\nGwenette/M\nGwen/M\nGwenneth/M\nGwennie/M\nGwenni/M\nGwenny/M\nGwenora/M\nGwenore/M\nGwyneth/M\nGwyn/M\nGwynne/M\ngymkhana/SM\ngym/MS\ngymnasia\'s\ngymnasium/SM\ngymnastically\ngymnastic/S\ngymnastics/M\ngymnast/SM\ngymnosperm/SM\ngynecologic\ngynecological/MS\ngynecologist/SM\ngynecology/MS\ngypped\ngypper/S\ngypping\ngyp/S\ngypsite\ngypster/S\ngypsum/MS\ngypsy/SDMG\nGypsy/SM\ngyrate/XNGSD\ngyration/M\ngyrator/MS\ngyrfalcon/SM\ngyrocompass/M\ngyro/MS\ngyroscope/SM\ngyroscopic\ngyve/GDS\nH\nHaag/M\nHaas/M\nHabakkuk/M\nhabeas\nhaberdasher/SM\nhaberdashery/SM\nHaber/M\nHaberman/M\nHabib/M\nhabiliment/SM\nhabitability/MS\nhabitableness/M\nhabitable/P\nhabitant/ISM\nhabitation/MI\nhabitations\nhabitat/MS\nhabit/IBDGS\nhabit\'s\nhabitualness/SM\nhabitual/SYP\nhabituate/SDNGX\nhabituation/M\nhabitu�/MS\nhacienda/MS\nhacker/M\nHackett/M\nhack/GZSDRBJ\nhackler/M\nhackle/RSDMG\nhackney/SMDG\nhacksaw/SDMG\nhackwork/S\nHadamard/M\nHadar/M\nHaddad/M\nhaddock/MS\nhades\nHades\nhad/GD\nhadji\'s\nhadj\'s\nHadlee/M\nHadleigh/M\nHadley/M\nHad/M\nhadn\'t\nHadria/M\nHadrian/M\nhadron/MS\nhadst\nhaemoglobin\'s\nhaemophilia\'s\nhaemorrhage\'s\nHafiz/M\nhafnium/MS\nhaft/GSMD\nHagan/M\nHagar/M\nHagen/M\nHager/M\nHaggai/M\nhaggardness/MS\nhaggard/SYP\nhagged\nhagging\nhaggish\nhaggis/SM\nhaggler/M\nhaggle/RSDZG\nHagiographa/M\nhagiographer/SM\nhagiography/MS\nhag/SMN\nHagstrom/M\nHague/M\nha/H\nhahnium/S\nHahn/M\nHaifa/M\nhaiku/M\nHailee/M\nhailer/M\nHailey/M\nhail/SGMDR\nhailstone/SM\nhailstorm/SM\nHaily/M\nHaiphong/M\nhairball/SM\nhairbreadth/M\nhairbreadths\nhairbrush/SM\nhaircare\nhaircloth/M\nhaircloths\nhaircut/MS\nhaircutting\nhairdo/SM\nhairdresser/SM\nhairdressing/SM\nhairdryer/S\nhairiness/MS\nhairlessness/M\nhairless/P\nhairlike\nhairline/SM\nhairnet/MS\nhairpiece/MS\nhairpin/MS\nhairsbreadth\nhairsbreadths\nhair/SDM\nhairsplitter/SM\nhairsplitting/MS\nhairspray\nhairspring/SM\nhairstyle/SMG\nhairstylist/S\nhairy/PTR\nHaitian/S\nHaiti/M\nhajjes\nhajji/MS\nhajj/M\nHakeem/M\nhake/MS\nHakim/M\nHakka/M\nHakluyt/M\nhalalled\nhalalling\nhalal/S\nhalberd/SM\nhalcyon/S\nHaldane/M\nHaleakala/M\nHaleigh/M\nhale/ISRDG\nHale/M\nhaler/IM\nhalest\nHalette/M\nHaley/M\nhalfback/SM\nhalfbreed\nhalfheartedness/MS\nhalfhearted/PY\nhalfpence/S\nhalfpenny/MS\nhalfpennyworth\nhalf/PM\nhalftime/S\nhalftone/MS\nhalfway\nhalfword/MS\nhalibut/SM\nhalide/SM\nHalie/M\nHalifax/M\nHali/M\nHalimeda/M\nhalite/MS\nhalitoses\nhalitosis/M\nhallelujah\nhallelujahs\nHalley/M\nhalliard\'s\nHallie/M\nHalli/M\nHallinan/M\nHall/M\nHallmark/M\nhallmark/SGMD\nhallo/GDS\nhalloo\'s\nHalloween/MS\nhallowing\nhallows\nhallow/UD\nhall/SMR\nHallsy/M\nhallucinate/VNGSDX\nhallucination/M\nhallucinatory\nhallucinogenic/S\nhallucinogen/SM\nhallway/SM\nHally/M\nhalocarbon\nhalogenated\nhalogen/SM\nhalon\nhalo/SDMG\nHalpern/M\nHalsey/M\nHal/SMY\nHalsy/M\nhalter/GDM\nhalt/GZJSMDR\nhalting/Y\nhalve/GZDS\nhalves/M\nhalyard/MS\nHa/M\nHamal/M\nHaman/M\nhamburger/M\nHamburg/MS\nhamburg/SZRM\nHamel/M\nHamey/M\nHamhung/M\nHamid/M\nHamilcar/M\nHamil/M\nHamiltonian/MS\nHamilton/M\nHamish/M\nHamitic/M\nHamlen/M\nHamlet/M\nhamlet/MS\nHamlin/M\nHam/M\nHammad/M\nHammarskjold/M\nhammed\nhammerer/M\nhammerhead/SM\nhammering/M\nhammerless\nhammerlock/MS\nHammerstein/M\nhammertoe/SM\nhammer/ZGSRDM\nHammett/M\nhamming\nhammock/MS\nHammond/M\nHammurabi/M\nhammy/RT\nHamnet/M\nhampered/U\nhamper/GSD\nHampshire/M\nHampton/M\nham/SM\nhamster/MS\nhamstring/MGS\nhamstrung\nHamsun/M\nHana/M\nHanan/M\nHancock/M\nhandbagged\nhandbagging\nhandbag/MS\nhandball/SM\nhandbarrow/MS\nhandbasin\nhandbill/MS\nhandbook/SM\nhandbrake/M\nhandcar/SM\nhandcart/MS\nhandclasp/MS\nhandcraft/GMDS\nhandcuff/GSD\nhandcuffs/M\nhandedness/M\nhanded/PY\nHandel/M\nhander/S\nhandful/SM\nhandgun/SM\nhandhold/M\nhandicapped\nhandicapper/SM\nhandicapping\nhandicap/SM\nhandicraftsman/M\nhandicraftsmen\nhandicraft/SMR\nhandily/U\nhandiness/SM\nhandiwork/MS\nhandkerchief/MS\nhandleable\nhandlebar/SM\nhandle/MZGRSD\nhandler/M\nhandless\nhandling/M\nhandmade\nhandmaiden/M\nhandmaid/NMSX\nhandout/SM\nhandover\nhandpick/GDS\nhandrail/SM\nhand\'s\nhandsaw/SM\nhandset/SM\nhandshake/GMSR\nhandshaker/M\nhandshaking/M\nhandsomely/U\nhandsomeness/MS\nhandsome/RPTY\nhandspike/SM\nhandspring/SM\nhandstand/MS\nhand/UDSG\nhandwork/SM\nhandwoven\nhandwrite/GSJ\nhandwriting/M\nhandwritten\nHandy/M\nhandyman/M\nhandymen\nhandy/URT\nHaney/M\nhangar/SGDM\nhangdog/S\nhanged/A\nhanger/M\nhang/GDRZBSJ\nhanging/M\nhangman/M\nhangmen\nhangnail/MS\nhangout/MS\nhangover/SM\nhangs/A\nHangul/M\nhangup/S\nHangzhou\nHankel/M\nhankerer/M\nhanker/GRDJ\nhankering/M\nhank/GZDRMS\nhankie/SM\nHank/M\nhanky\'s\nHannah/M\nHanna/M\nHannibal/M\nHannie/M\nHanni/MS\nHanny/M\nHanoi/M\nHanoverian\nHanover/M\nHansel/M\nHansen/M\nHansiain/M\nHan/SM\nHans/N\nhansom/MS\nHanson/M\nHanuka/S\nHanukkah/M\nHanukkahs\nHapgood/M\nhaphazardness/SM\nhaphazard/SPY\nhaplessness/MS\nhapless/YP\nhaploid/S\nhapped\nhappening/M\nhappen/JDGS\nhappenstance/SM\nhappily/U\nhappiness/UMS\nhapping\nHappy/M\nhappy/UTPR\nHapsburg/M\nhap/SMY\nHarald/M\nharangue/GDRS\nharanguer/M\nHarare\nharasser/M\nharass/LSRDZG\nharassment/SM\nHarbert/M\nharbinger/DMSG\nHarbin/M\nharborer/M\nharbor/ZGRDMS\nHarcourt/M\nhardback/SM\nhardball/SM\nhardboard/SM\nhardboiled\nhardbound\nhardcore/MS\nhardcover/SM\nhardened/U\nhardener/M\nhardening/M\nharden/ZGRD\nhardhat/S\nhardheadedness/SM\nhardheaded/YP\nhardheartedness/SM\nhardhearted/YP\nhardihood/MS\nhardily\nhardiness/SM\nHarding/M\nHardin/M\nhardliner/S\nhardness/MS\nhardscrabble\nhardshell\nhardship/MS\nhardstand/S\nhardtack/MS\nhardtop/MS\nhardware/SM\nhardwire/DSG\nhardwood/MS\nhardworking\nHardy/M\nhard/YNRPJGXTS\nhardy/PTRS\nharebell/MS\nharebrained\nharelip/MS\nharelipped\nhare/MGDS\nharem/SM\nHargreaves/M\nhark/GDS\nHarland/M\nHarlan/M\nHarlem/M\nHarlene/M\nHarlen/M\nHarlequin\nharlequin/MS\nHarley/M\nHarlie/M\nHarli/M\nHarlin/M\nharlotry/MS\nharlot/SM\nHarlow/M\nHarman/M\nharmed/U\nharmer/M\nharmfulness/MS\nharmful/PY\nharmlessness/SM\nharmless/YP\nharm/MDRGS\nHarmonia/M\nharmonically\nharmonica/MS\nharmonic/S\nharmonics/M\nHarmonie/M\nharmonious/IPY\nharmoniousness/MS\nharmoniousness\'s/I\nharmonium/MS\nharmonization/A\nharmonizations\nharmonization\'s\nharmonized/U\nharmonizer/M\nharmonizes/UA\nharmonize/ZGSRD\nHarmon/M\nharmony/EMS\nHarmony/M\nharness/DRSMG\nharnessed/U\nharnesser/M\nharnesses/U\nHarold/M\nHaroun/M\nharper/M\nHarper/M\nharping/M\nharpist/SM\nharp/MDRJGZS\nHarp/MR\nharpooner/M\nharpoon/SZGDRM\nharpsichordist/MS\nharpsichord/SM\nharpy/SM\nHarpy/SM\nHarrell/M\nharridan/SM\nHarrie/M\nharrier/M\nHarriet/M\nHarrietta/M\nHarriette/M\nHarriett/M\nHarrington/M\nHarriot/M\nHarriott/M\nHarrisburg/M\nHarri/SM\nHarrisonburg/M\nHarrison/M\nharrower/M\nharrow/RDMGS\nharrumph/SDG\nHarry/M\nharry/RSDGZ\nharshen/GD\nharshness/SM\nharsh/TRNYP\nHarte/M\nHartford/M\nHartley/M\nHartline/M\nHart/M\nHartman/M\nhart/MS\nHartwell/M\nHarvard/M\nharvested/U\nharvester/M\nharvestman/M\nharvest/MDRZGS\nHarvey/MS\nHarv/M\nHarwell/M\nHarwilll/M\nhas\nHasbro/M\nhash/AGSD\nHasheem/M\nhasher/M\nHashim/M\nhashing/M\nhashish/MS\nhash\'s\nHasidim\nHaskell/M\nHaskel/M\nHaskins/M\nHaslett/M\nhasn\'t\nhasp/GMDS\nhassle/MGRSD\nhassock/MS\nhaste/MS\nhastener/M\nhasten/GRD\nhast/GXJDN\nHastie/M\nhastily\nhastiness/MS\nHastings/M\nHasty/M\nhasty/RPT\nhatchback/SM\nhatcheck/S\nhatched/U\nhatcher/M\nhatchery/MS\nhatchet/MDSG\nhatching/M\nhatch/RSDJG\nHatchure/M\nhatchway/MS\nhatefulness/MS\nhateful/YP\nhater/M\nhate/S\nHatfield/M\nHathaway/M\nhatless\nhat/MDRSZG\nhatred/SM\nhatstands\nhatted\nHatteras/M\nhatter/SM\nHattie/M\nHatti/M\nhatting\nHatty/M\nhauberk/SM\nHaugen/M\nhaughtily\nhaughtiness/SM\nhaughty/TPR\nhaulage/MS\nhauler/M\nhaul/SDRGZ\nhaunch/GMSD\nhaunter/M\nhaunting/Y\nhaunt/JRDSZG\nHauptmann/M\nHausa/M\nHausdorff/M\nHauser/M\nhauteur/MS\nHavana/SM\nHavarti\nHavel/M\nhaven/DMGS\nHaven/M\nhaven\'t\nhaver/G\nhaversack/SM\nhave/ZGSR\nhavocked\nhavocking\nhavoc/SM\nHaw\nHawaiian/S\nHawaii/M\nhawker/M\nhawk/GZSDRM\nHawking\nhawking/M\nHawkins/M\nhawkishness/S\nhawkish/P\nHawley/M\nhaw/MDSG\nhawser/M\nhaws/RZ\nHawthorne/M\nhawthorn/MS\nhaycock/SM\nHayden/M\nHaydn/M\nHaydon/M\nHayes\nhayfield/MS\nhay/GSMDR\nHayley/M\nhayloft/MS\nhaymow/MS\nHaynes\nhayrick/MS\nhayride/MS\nhayseed/MS\nHay/SM\nhaystack/SM\nhaywain\nHayward/M\nhaywire/MS\nHaywood/M\nHayyim/M\nhazard/MDGS\nhazardousness/M\nhazardous/PY\nhaze/DSRJMZG\nHazel/M\nhazel/MS\nhazelnut/SM\nHaze/M\nhazer/M\nhazily\nhaziness/MS\nhazing/M\nHazlett/M\nHazlitt/M\nhazy/PTR\nHBO/M\nhdqrs\nHDTV\nheadache/MS\nheadband/SM\nheadboard/MS\nheadcount\nheaddress/MS\nheader/M\nheadfirst\nheadgear/SM\nheadhunter/M\nheadhunting/M\nheadhunt/ZGSRDMJ\nheadily\nheadiness/S\nheading/M\nheadlamp/S\nheadland/MS\nheadlessness/M\nheadless/P\nheadlight/MS\nheadline/DRSZMG\nheadliner/M\nheadlock/MS\nheadlong\nHead/M\nheadman/M\nheadmaster/MS\nheadmastership/M\nheadmen\nheadmistress/MS\nheadphone/SM\nheadpiece/SM\nheadpin/MS\nheadquarter/GDS\nheadrest/MS\nheadroom/SM\nheadscarf/M\nheadset/SM\nheadship/SM\nheadshrinker/MS\nhead/SJGZMDR\nheadsman/M\nheadsmen\nheadstall/SM\nheadstand/MS\nheadstock/M\nheadstone/MS\nheadstrong\nheadwaiter/SM\nheadwall/S\nheadwater/S\nheadway/MS\nheadwind/SM\nheadword/MS\nheady/PTR\nheal/DRHSGZ\nhealed/U\nhealer/M\nHeall/M\nhealthfully\nhealthfulness/SM\nhealthful/U\nhealthily/U\nhealthiness/MSU\nhealth/M\nhealths\nhealthy/URPT\nheap/SMDG\nheard/UA\nhearer/M\nhearing/AM\nhearken/SGD\nhearsay/SM\nhearse/M\nhears/SDAG\nHearst/M\nheartache/SM\nheartbeat/MS\nheartbreak/GMS\nheartbreaking/Y\nheartbroke\nheartbroken\nheartburning/M\nheartburn/SGM\nhearted/Y\nhearten/EGDS\nheartening/EY\nheartfelt\nhearth/M\nhearthrug\nhearths\nhearthstone/MS\nheartily\nheartiness/SM\nheartland/SM\nheartlessness/SM\nheartless/YP\nheartrending/Y\nheartsickness/MS\nheartsick/P\nheart/SMDNXG\nheartstrings\nheartthrob/MS\nheartwarming\nHeartwood/M\nheartwood/SM\nhearty/TRSP\nhear/ZTSRHJG\nheatedly\nheated/UA\nheater/M\nheathendom/SM\nheathenish/Y\nheathenism/MS\nheathen/M\nheather/M\nHeather/M\nheathery\nHeathkit/M\nheathland\nHeathman/M\nHeath/MR\nheath/MRNZX\nheaths\nheatproof\nheats/A\nheat/SMDRGZBJ\nheatstroke/MS\nheatwave\nheave/DSRGZ\nheavenliness/M\nheavenly/PTR\nheaven/SYM\nheavenward/S\nheaver/M\nheaves/M\nheavily\nheaviness/MS\nHeaviside/M\nheavyhearted\nheavyset\nheavy/TPRS\nheavyweight/SM\nHebe/M\nhebephrenic\nHebert/M\nHeb/M\nHebraic\nHebraism/MS\nHebrew/SM\nHebrides/M\nHecate/M\nhecatomb/M\nheckler/M\nheckle/RSDZG\nheck/S\nhectare/MS\nhectically\nhectic/S\nhectogram/MS\nhectometer/SM\nHector/M\nhector/SGD\nHecuba/M\nhe\'d\nHeda/M\nHedda/M\nHeddie/M\nHeddi/M\nhedge/DSRGMZ\nhedgehog/MS\nhedgehopped\nhedgehopping\nhedgehop/S\nhedger/M\nhedgerow/SM\nhedging/Y\nHedi/M\nhedonism/SM\nhedonistic\nhedonist/MS\nHedvige/M\nHedvig/M\nHedwiga/M\nHedwig/M\nHedy/M\nheeded/U\nheedfulness/M\nheedful/PY\nheeding/U\nheedlessness/SM\nheedless/YP\nheed/SMGD\nheehaw/DGS\nheeler/M\nheeling/M\nheelless\nheel/SGZMDR\nHeep/M\nHefner/M\nheft/GSD\nheftily\nheftiness/SM\nhefty/TRP\nHegelian\nHegel/M\nhegemonic\nhegemony/MS\nHegira/M\nhegira/S\nHeida/M\nHeidegger/M\nHeidelberg/M\nHeidie/M\nHeidi/M\nheifer/MS\nHeifetz/M\nheighten/GD\nheight/SMNX\nHeimlich/M\nHeindrick/M\nHeineken/M\nHeine/M\nHeinlein/M\nheinousness/SM\nheinous/PY\nHeinrich/M\nHeinrick/M\nHeinrik/M\nHeinze/M\nHeinz/M\nheiress/MS\nheirloom/MS\nheir/SDMG\nHeisenberg/M\nHeiser/M\nheister/M\nheist/GSMRD\nHejira\'s\nHelaina/M\nHelaine/M\nheld\nHelena/M\nHelene/M\nHelenka/M\nHelen/M\nHelga/M\nHelge/M\nhelical/Y\nhelices/M\nhelicon/M\nHelicon/M\nhelicopter/GSMD\nheliocentric\nheliography/M\nHeliopolis/M\nHelios/M\nheliosphere\nheliotrope/SM\nheliport/MS\nhelium/MS\nhelix/M\nhe\'ll\nhellbender/M\nhellbent\nhellcat/SM\nhellebore/SM\nHellene/SM\nHellenic\nHellenism/MS\nHellenistic\nHellenist/MS\nHellenization/M\nHellenize\nheller/M\nHeller/M\nHellespont/M\nhellfire/M\nhell/GSMDR\nhellhole/SM\nHelli/M\nhellion/SM\nhellishness/SM\nhellish/PY\nHellman/M\nhello/GMS\nHell\'s\nhelluva\nhelmed\nhelmet/GSMD\nHelmholtz/M\nhelming\nhelms\nhelm\'s\nhelmsman/M\nhelmsmen\nhelm/U\nHelmut/M\nH�loise/M\nhelot/S\nhelper/M\nhelpfulness/MS\nhelpful/UY\nhelp/GZSJDR\nhelping/M\nhelplessness/SM\nhelpless/YP\nhelpline/S\nhelpmate/SM\nhelpmeet\'s\nHelsa/M\nHelsinki/M\nhelve/GMDS\nHelvetian/S\nHelvetius/M\nHelyn/M\nHe/M\nhematite/MS\nhematologic\nhematological\nhematologist/SM\nhematology/MS\nheme/MS\nHemingway/M\nhemisphere/MSD\nhemispheric\nhemispherical\nhemline/SM\nhemlock/MS\nhemmed\nhemmer/SM\nhemming\nhem/MS\nhemoglobin/MS\nhemolytic\nhemophiliac/SM\nhemophilia/SM\nhemorrhage/GMDS\nhemorrhagic\nhemorrhoid/MS\nhemostat/SM\nhemp/MNS\nh/EMS\nhemstitch/DSMG\nhenceforth\nhenceforward\nhence/S\nHench/M\nhenchman/M\nhenchmen\nHenderson/M\nHendrick/SM\nHendrickson/M\nHendrika/M\nHendrik/M\nHendrix/M\nhenge/M\nHenka/M\nHenley/M\nhen/MS\nhenna/MDSG\nHennessey/M\nhenning\nhenpeck/GSD\nHenrie/M\nHenrieta/M\nHenrietta/M\nHenriette/M\nHenrik/M\nHenri/M\nHenryetta/M\nhenry/M\nHenry/M\nHensley/M\nHenson/M\nheparin/MS\nhepatic/S\nhepatitides\nhepatitis/M\nHepburn/M\nHephaestus/M\nHephzibah/M\nhepper\nheppest\nHepplewhite\nhep/S\nheptagonal\nheptagon/SM\nheptane/M\nheptathlon/S\nher\nHeracles/M\nHeraclitus/M\nheralded/U\nheraldic\nherald/MDSG\nheraldry/MS\nHera/M\nherbaceous\nherbage/MS\nherbalism\nherbalist/MS\nherbal/S\nHerbart/M\nHerbert/M\nherbicidal\nherbicide/MS\nHerbie/M\nherbivore/SM\nherbivorous/Y\nHerb/M\nherb/MS\nHerby/M\nHerc/M\nHerculaneum/M\nherculean\nHerculean\nHercule/MS\nHerculie/M\nherder/M\nHerder/M\nherd/MDRGZS\nherdsman/M\nherdsmen\nhereabout/S\nhereafter/S\nhereby\nhereditary\nheredity/MS\nHereford/SM\nherein\nhereinafter\nhere/IS\nhereof\nhereon\nhere\'s\nheres/M\nheresy/SM\nheretical\nheretic/SM\nhereto\nheretofore\nhereunder\nhereunto\nhereupon\nherewith\nHeriberto/M\nheritable\nheritage/MS\nheritor/IM\nHerkimer/M\nHerman/M\nHermann/M\nhermaphrodite/SM\nhermaphroditic\nHermaphroditus/M\nhermeneutic/S\nhermeneutics/M\nHermes\nhermetical/Y\nhermetic/S\nHermia/M\nHermie/M\nHermina/M\nHermine/M\nHerminia/M\nHermione/M\nhermitage/SM\nHermite/M\nhermitian\nhermit/MS\nHermon/M\nHermosa/M\nHermosillo/M\nHermy/M\nHernandez/M\nHernando/M\nhernial\nhernia/MS\nherniate/NGXDS\nHerod/M\nHerodotus/M\nheroes\nheroically\nheroics\nheroic/U\nheroine/SM\nheroin/MS\nheroism/SM\nHerold/M\nhero/M\nheron/SM\nherpes/M\nherpetologist/SM\nherpetology/MS\nHerrera/M\nHerrick/M\nherringbone/SDGM\nHerring/M\nherring/SM\nHerrington/M\nHerr/MG\nHerschel/M\nHersch/M\nherself\nHersey/M\nHershel/M\nHershey/M\nHersh/M\nHerta/M\nHertha/M\nhertz/M\nHertz/M\nHertzog/M\nHertzsprung/M\nHerve/M\nHervey/M\nHerzegovina/M\nHerzl/M\nhes\nHesiod/M\nhesitance/S\nhesitancy/SM\nhesitantly\nhesitant/U\nhesitater/M\nhesitate/XDRSNG\nhesitating/UY\nhesitation/M\nHesperus/M\nHesse/M\nHessian/MS\nHess/M\nHester/M\nHesther/M\nHestia/M\nHeston/M\nheterodox\nheterodoxy/MS\nheterodyne\nheterogamous\nheterogamy/M\nheterogeneity/SM\nheterogeneousness/M\nheterogeneous/PY\nheterosexuality/SM\nheterosexual/YMS\nheterostructure\nheterozygous\nHettie/M\nHetti/M\nHetty/M\nHeublein/M\nheuristically\nheuristic/SM\nHeusen/M\nHeuser/M\nhe/VMZ\nhew/DRZGS\nHewe/M\nhewer/M\nHewet/M\nHewett/M\nHewie/M\nHewitt/M\nHewlett/M\nHew/M\nhexachloride/M\nhexadecimal/YS\nhexafluoride/M\nhexagonal/Y\nhexagon/SM\nhexagram/SM\nhexameter/SM\nhex/DSRG\nhexer/M\nhey\nheyday/MS\nHeyerdahl/M\nHeywood/M\nHezekiah/M\nhf\nHF\nHf/M\nHg/M\nhgt\nhgwy\nHHS\nHI\nHialeah/M\nhiatus/SM\nHiawatha/M\nhibachi/MS\nhibernate/XGNSD\nhibernation/M\nhibernator/SM\nHibernia/M\nHibernian/S\nhibiscus/MS\nhiccup/MDGS\nhickey/SM\nHickey/SM\nHickman/M\nHickok/M\nhickory/MS\nhick/SM\nHicks/M\nhi/D\nhidden/U\nhideaway/SM\nhidebound\nhideousness/SM\nhideous/YP\nhideout/MS\nhider/M\nhide/S\nhiding/M\nhid/ZDRGJ\nhieing\nhierarchal\nhierarchic\nhierarchical/Y\nhierarchy/SM\nhieratic\nhieroglyph\nhieroglyphic/S\nhieroglyphics/M\nhieroglyphs\nHieronymus/M\nhie/S\nhifalutin\nHigashiosaka\nHiggins/M\nhighball/GSDM\nhighborn\nhighboy/MS\nhighbrow/SM\nhighchair/SM\nhighfalutin\nHighfield/M\nhighhandedness/SM\nhighhanded/PY\nhighish\nHighlander/SM\nHighlands\nhighland/ZSRM\nhighlight/GZRDMS\nHighness/M\nhighness/MS\nhighpoint\nhigh/PYRT\nhighroad/MS\nhighs\nhight\nhightail/DGS\nhighwayman/M\nhighwaymen\nhighway/MS\nhijacker/M\nhijack/JZRDGS\nhiker/M\nhike/ZGDSR\nHilario/M\nhilariousness/MS\nhilarious/YP\nhilarity/MS\nHilarius/M\nHilary/M\nHilbert/M\nHildagarde/M\nHildagard/M\nHilda/M\nHildebrand/M\nHildegaard/M\nHildegarde/M\nHilde/M\nHildy/M\nHillard/M\nHillary/M\nhillbilly/MS\nHillcrest/M\nHillel/M\nhiller/M\nHillery/M\nhill/GSMDR\nHilliard/M\nHilliary/M\nHillie/M\nHillier/M\nhilliness/SM\nHill/M\nhillman\nhillmen\nhillock/SM\nHillsboro/M\nHillsdale/M\nhillside/SM\nhilltop/MS\nhillwalking\nHillyer/M\nHilly/RM\nhilly/TRP\nhilt/MDGS\nHilton/M\nHi/M\nHimalaya/MS\nHimalayan/S\nHimmler/M\nhim/S\nhimself\nHinayana/M\nHinda/M\nHindemith/M\nHindenburg/M\nhindered/U\nhinderer/M\nhinder/GRD\nHindi/M\nhindmost\nhindquarter/SM\nhindrance/SM\nhind/RSZ\nhindsight/SM\nHinduism/SM\nHindu/MS\nHindustani/MS\nHindustan/M\nHines/M\nhinger\nhinge\'s\nhinge/UDSG\nHinkle/M\nHinsdale/M\nhinterland/MS\nhinter/M\nhint/GZMDRS\nHinton/M\nHinze/M\nhipbone/SM\nhipness/S\nHipparchus/M\nhipped\nhipper\nhippest\nhippie/MTRS\nhipping/M\nHippocrates/M\nHippocratic\nhippodrome/MS\nhippo/MS\nhippopotamus/SM\nhip/PSM\nhippy\'s\nhipster/MS\nhiragana\nHiram/M\nhire/AGSD\nhireling/SM\nhirer/SM\nHirey/M\nhiring/S\nHirohito/M\nHiroshi/M\nHiroshima/M\nHirsch/M\nhirsuteness/MS\nhirsute/P\nhis\nHispanic/SM\nHispaniola/M\nhiss/DSRMJG\nhisser/M\nhissing/M\nHiss/M\nhistamine/SM\nhistidine/SM\nhistochemic\nhistochemical\nhistochemistry/M\nhistogram/MS\nhistological\nhistologist/MS\nhistology/SM\nhistorian/MS\nhistoric\nhistoricalness/M\nhistorical/PY\nhistoricism/M\nhistoricist/M\nhistoricity/MS\nhistoriographer/SM\nhistoriography/MS\nhistory/MS\nhistrionically\nhistrionic/S\nhistrionics/M\nhist/SDG\nHitachi/M\nHitchcock/M\nhitcher/MS\nhitchhike/RSDGZ\nhitch/UGSD\nhither\nhitherto\nHitler/SM\nhitless\nhit/MS\nhittable\nhitter/SM\nhitting\nHittite/SM\nHIV\nhive/MGDS\nh\'m\nHM\nHMO\nHmong\nHMS\nhoarder/M\nhoarding/M\nhoard/RDJZSGM\nhoarfrost/SM\nhoariness/MS\nhoar/M\nhoarseness/SM\nhoarse/RTYP\nhoary/TPR\nhoaxer/M\nhoax/GZMDSR\nHobard/M\nHobart/M\nhobbed\nHobbes/M\nhobbing\nhobbit\nhobbler/M\nhobble/ZSRDG\nHobbs/M\nhobbyhorse/SM\nhobbyist/SM\nhobby/SM\nHobday/M\nHobey/M\nhobgoblin/MS\nHobie/M\nhobnail/GDMS\nhobnobbed\nhobnobbing\nhobnob/S\nHoboken/M\nhobo/SDMG\nhob/SM\nhoc\nhocker/M\nhockey/SM\nhock/GDRMS\nHockney/M\nhockshop/SM\nhodge/MS\nHodge/MS\nhodgepodge/SM\nHodgkin/M\nho/DRYZ\nhod/SM\nHoebart/M\nhoecake/SM\nhoedown/MS\nhoeing\nhoer/M\nhoe/SM\nHoffa/M\nHoff/M\nHoffman/M\nHofstadter/M\nHogan/M\nhogan/SM\nHogarth/M\nhogback/MS\nhogged\nhogger\nhogging\nhoggish/Y\nhogshead/SM\nhog/SM\nhogtie/SD\nhogtying\nhogwash/SM\nHohenlohe/M\nHohenstaufen/M\nHohenzollern/M\nHohhot/M\nhoister/M\nhoist/GRDS\nhoke/DSG\nhokey/PRT\nhokier\nhokiest\nHokkaido/M\nhokum/MS\nHokusai/M\nHolbein/M\nHolbrook/M\nHolcomb/M\nholdall/MS\nHolden/M\nholder/M\nHolder/M\nholding/IS\nholding\'s\nhold/NRBSJGZ\nholdout/SM\nholdover/SM\nholdup/MS\nhole/MGDS\nholey\nholiday/GRDMS\nHoliday/M\nholidaymaker/S\nholier/U\nHoliness/MS\nholiness/MSU\nholistic\nholistically\nhollandaise\nHollandaise/M\nHollander/M\nHolland/RMSZ\nholler/GDS\nHollerith/M\nHolley/M\nHollie/M\nHolli/SM\nHollister/M\nHolloway/M\nhollowness/MS\nhollow/RDYTGSP\nhollowware/M\nHollyanne/M\nhollyhock/MS\nHolly/M\nholly/SM\nHollywood/M\nHolman/M\nHolmes\nholmium/MS\nHolm/M\nHolocaust\nholocaust/MS\nHolocene\nhologram/SM\nholograph/GMD\nholographic\nholographs\nholography/MS\nHolstein/MS\nholster/MDSG\nHolst/M\nHolt/M\nHolyoke/M\nholy/SRTP\nholystone/MS\nHolzman/M\nHo/M\nhomage/MGSRD\nhomager/M\nhombre/SM\nhomburg/SM\nhomebody/MS\nhomebound\nhomeboy/S\nhomebuilder/S\nhomebuilding\nhomebuilt\nhomecoming/MS\nhome/DSRMYZG\nhomegrown\nhomeland/SM\nhomelessness/SM\nhomeless/P\nhomelike\nhomeliness/SM\nhomely/RPT\nhomemade\nhomemake/JRZG\nhomemaker/M\nhomemaking/M\nhomeomorphic\nhomeomorphism/MS\nhomeomorph/M\nhomeopath\nhomeopathic\nhomeopaths\nhomeopathy/MS\nhomeostases\nhomeostasis/M\nhomeostatic\nhomeowner/S\nhomeownership\nhomepage\nHomere/M\nhomer/GDM\nHomeric\nhomerists\nHomer/M\nhomeroom/MS\nHomerus/M\nhomeschooling/S\nhomesickness/MS\nhomesick/P\nhomespun/S\nhomesteader/M\nhomestead/GZSRDM\nhomestretch/SM\nhometown/SM\nhomeward\nhomeworker/M\nhomework/ZSMR\nhomeyness/MS\nhomey/PS\nhomicidal/Y\nhomicide/SM\nhomier\nhomiest\nhomiletic/S\nhomily/SM\nhominess\'s\nhoming/M\nhominid/MS\nhominy/SM\nHom/MR\nhomogamy/M\nhomogenate/MS\nhomogeneity/ISM\nhomogeneous/PY\nhomogenization/MS\nhomogenize/DRSGZ\nhomogenizer/M\nhomograph/M\nhomographs\nhomological\nhomologous\nhomologue/M\nhomology/MS\nhomomorphic\nhomomorphism/SM\nhomonym/SM\nhomophobia/S\nhomophobic\nhomophone/MS\nhomopolymers\nhomosexuality/SM\nhomosexual/YMS\nhomo/SM\nhomotopy\nhomozygous/Y\nhoncho/DSG\nHonda/M\nHondo/M\nHonduran/S\nHonduras/M\nHonecker/M\nhone/SM\nhonestly/E\nhonest/RYT\nhonesty/ESM\nhoneybee/SM\nhoneycomb/SDMG\nhoneydew/SM\nhoney/GSMD\nhoneylocust\nHoney/M\nhoneymooner/M\nhoneymoon/RDMGZS\nhoneysuckle/MS\nHoneywell/M\nhong/M\nHoniara/M\nhonker/M\nhonk/GZSDRM\nhonky/SM\nHon/M\nhon/MDRSZTG\nHonolulu/M\nhonorableness/SM\nhonorable/PSM\nhonorables/U\nhonorablies/U\nhonorably/UE\nhonorarily\nhonorarium/SM\nhonorary/S\nhonored/U\nhonoree/S\nhonor/ERDBZGS\nhonorer/EM\nHonoria/M\nhonorific/S\nHonor/M\nhonor\'s\nhonors/A\nHonshu/M\nhooch/MS\nhoodedness/M\nhooded/P\nhoodlum/SM\nHood/M\nhood/MDSG\nhoodoo/DMGS\nhoodwinker/M\nhoodwink/SRDG\nhooey/SM\nhoof/DRMSG\nhoofer/M\nhoofmark/S\nhookah/M\nhookahs\nhookedness/M\nhooked/P\nHooke/MR\nhooker/M\nHooker/M\nhookey\'s\nhook/GZDRMS\nhooks/U\nhookup/SM\nhookworm/MS\nhooky/SRMT\nhooliganism/SM\nhooligan/SM\nhooper/M\nHooper/M\nhoopla/SM\nhoop/MDRSG\nhooray/SMDG\nhoosegow/MS\nHoosier/SM\nhootch\'s\nhootenanny/SM\nhooter/M\nhoot/MDRSGZ\nHoover/MS\nhooves/M\nhoped/U\nhopefulness/MS\nhopeful/SPY\nhopelessness/SM\nhopeless/YP\nHope/M\nhoper/M\nhope/SM\nHopewell/M\nHopi/SM\nHopkinsian/M\nHopkins/M\nhopped\nHopper/M\nhopper/MS\nhopping/M\nhoppled\nhopples\nhopscotch/MDSG\nhop/SMDRG\nHorace/M\nHoracio/M\nHoratia/M\nHoratio/M\nHoratius/M\nhorde/DSGM\nhorehound/MS\nhorizon/MS\nhorizontal/YS\nHormel/M\nhormonal/Y\nhormone/MS\nHormuz/M\nhornbeam/M\nhornblende/MS\nHornblower/M\nhornedness/M\nhorned/P\nHorne/M\nhornet/MS\nhorn/GDRMS\nhorniness/M\nhornless\nhornlike\nHorn/M\nhornpipe/MS\nhorny/TRP\nhorologic\nhorological\nhorologist/MS\nhorology/MS\nhoroscope/MS\nHorowitz/M\nhorrendous/Y\nhorribleness/SM\nhorrible/SP\nhorribly\nhorridness/M\nhorrid/PY\nhorrific\nhorrifically\nhorrify/DSG\nhorrifying/Y\nhorror/MS\nhors/DSGX\nhorseback/MS\nhorsedom\nhorseflesh/M\nhorsefly/MS\nhorsehair/SM\nhorsehide/SM\nhorselaugh/M\nhorselaughs\nhorseless\nhorselike\nhorsely\nhorseman/M\nhorsemanship/MS\nhorsemen\nhorseplayer/M\nhorseplay/SMR\nhorsepower/SM\nhorseradish/SM\nhorse\'s\nhorseshoeing\nhorseshoe/MRSD\nhorseshoer/M\nhorsetail/SM\nhorse/UGDS\nhorsewhipped\nhorsewhipping\nhorsewhip/SM\nhorsewoman/M\nhorsewomen\nhorsey\nhorsier\nhorsiest\nhorsing/M\nHorst/M\nhortatory\nHorten/M\nHortense/M\nHortensia/M\nhorticultural\nhorticulture/SM\nhorticulturist/SM\nHort/MN\nHorton/M\nHorus/M\nhosanna/SDG\nHosea/M\nhose/M\nhosepipe\nhos/GDS\nhosier/MS\nhosiery/SM\nhosp\nhospice/MS\nhospitable/I\nhospitably/I\nhospitality/MS\nhospitality\'s/I\nhospitalization/MS\nhospitalize/GSD\nhospital/MS\nhostage/MS\nhosteler/M\nhostelry/MS\nhostel/SZGMRD\nhostess/MDSG\nhostile/YS\nhostility/SM\nhostler/MS\nHost/MS\nhost/MYDGS\nhotbed/MS\nhotblooded\nhotbox/MS\nhotcake/S\nhotchpotch/M\nhotelier/MS\nhotelman/M\nhotel/MS\nhotfoot/DGS\nhothead/DMS\nhotheadedness/SM\nhotheaded/PY\nhothouse/MGDS\nhotness/MS\nhotplate/SM\nhotpot/M\nhot/PSY\nhotrod\nhotshot/S\nhotted\nHottentot/SM\nhotter\nhottest\nhotting\nHoudaille/M\nHoudini/M\nhough/M\nhounder/M\nhounding/M\nhound/MRDSG\nhourglass/MS\nhouri/MS\nhourly/S\nhour/YMS\nhouse/ASDG\nhouseboat/SM\nhousebound\nhouseboy/SM\nhousebreaker/M\nhousebreaking/M\nhousebreak/JSRZG\nhousebroke\nhousebroken\nhousebuilding\nhousecleaning/M\nhouseclean/JDSG\nhousecoat/MS\nhousefly/MS\nhouseful/SM\nhouseholder/M\nhousehold/ZRMS\nhousehusband/S\nhousekeeper/M\nhousekeeping/M\nhousekeep/JRGZ\nhouselights\nHouse/M\nhousemaid/MS\nhouseman/M\nhousemen\nhousemother/MS\nhousemoving\nhouseparent/SM\nhouseplant/S\nhouser\nhouse\'s\nhousetop/MS\nhousewares\nhousewarming/MS\nhousewifeliness/M\nhousewifely/P\nhousewife/YM\nhousewives\nhouseworker/M\nhousework/ZSMR\nhousing/MS\nHousman/M\nHouston/M\nHouyhnhnm/M\nHOV\nhovel/GSMD\nhovercraft/M\nhoverer/M\nhover/GRD\nhove/ZR\nHoward/M\nhowbeit\nhowdah/M\nhowdahs\nhowdy/GSD\nHowell/MS\nHowe/M\nhowever\nHowey/M\nHowie/M\nhowitzer/MS\nhowler/M\nhowl/GZSMDR\nHowrah/M\nhow/SM\nhowsoever\nhoyden/DMGS\nhoydenish\nHoyle/SM\nhoy/M\nHoyt/M\nhp\nHP\nHQ\nhr\nHR\nHRH\nHrothgar/M\nhrs\nh\'s\nH\'s\nHS\nHST\nht\nHTML\nHts/M\nHTTP\nHuang/M\nhuarache/SM\nhubba\nHubbard/M\nHubble/M\nhubbub/SM\nhubby/SM\nhubcap/SM\nHuber/M\nHube/RM\nHubert/M\nHuberto/M\nHubey/M\nHubie/M\nhub/MS\nhubris/SM\nhuckleberry/SM\nHuck/M\nhuckster/SGMD\nHUD\nHuddersfield/M\nhuddler/M\nhuddle/RSDMG\nHudson/M\nhue/MDS\nHuerta/M\nHuey/M\nhuffily\nhuffiness/SM\nHuff/M\nHuffman/M\nhuff/SGDM\nhuffy/TRP\nhugeness/MS\nhuge/YP\nhugged\nhugger\nhugging/S\nHuggins\nHughie/M\nHugh/MS\nHugibert/M\nHugo/M\nhug/RTS\nHuguenot/SM\nHugues/M\nhuh\nhuhs\nHui/M\nHuitzilopitchli/M\nhula/MDSG\nHulda/M\nhulk/GDMS\nhullabaloo/SM\nhuller/M\nhulling/M\nHull/M\nhull/MDRGZS\nhullo/GSDM\nhumane/IY\nhumaneness/SM\nhumaner\nhumanest\nhuman/IPY\nhumanism/SM\nhumanistic\nhumanist/SM\nhumanitarianism/SM\nhumanitarian/S\nhumanity/ISM\nhumanization/CSM\nhumanized/C\nhumanizer/M\nhumanize/RSDZG\nhumanizes/IAC\nhumanizing/C\nhumankind/M\nhumannesses\nhumanness/IM\nhumanoid/S\nhumans\nHumbert/M\nHumberto/M\nhumbleness/SM\nhumble/TZGPRSDJ\nhumbly\nHumboldt/M\nhumbugged\nhumbugging\nhumbug/MS\nhumdinger/MS\nhumdrum/S\nHume/M\nhumeral/S\nhumeri\nhumerus/M\nHumfrey/M\nHumfrid/M\nHumfried/M\nhumidification/MC\nhumidifier/CM\nhumidify/RSDCXGNZ\nhumidistat/M\nhumidity/MS\nhumidor/MS\nhumid/Y\nhumiliate/SDXNG\nhumiliating/Y\nhumiliation/M\nhumility/MS\nhummed\nHummel/M\nhummer/SM\nhumming\nhummingbird/SM\nhummock/MDSG\nhummocky\nhummus/S\nhumongous\nhumored/U\nhumorist/MS\nhumorlessness/MS\nhumorless/PY\nhumorousness/MS\nhumorous/YP\nhumor/RDMZGS\nhumpback/SMD\nhump/GSMD\nhumph/DG\nHumphrey/SM\nhumphs\nHumpty/M\nhum/S\nhumus/SM\nHumvee\nhunchback/DSM\nhunch/GMSD\nhundredfold/S\nhundred/SHRM\nhundredths\nhundredweight/SM\nHunfredo/M\nhung/A\nHungarian/MS\nHungary/M\nhunger/SDMG\nHung/M\nhungover\nhungrily\nhungriness/SM\nhungry/RTP\nhunker/DG\nhunky/RST\nhunk/ZRMS\nHun/MS\nhunter/M\nHunter/M\nhunt/GZJDRS\nhunting/M\nHuntington/M\nHuntlee/M\nHuntley/M\nHunt/MR\nhuntress/MS\nhuntsman/M\nhuntsmen\nHuntsville/M\nhurdle/JMZGRSD\nhurdler/M\nhurl/DRGZJS\nHurlee/M\nHurleigh/M\nhurler/M\nHurley/M\nhurling/M\nHuron/SM\nhurray/SDG\nhurricane/MS\nhurriedness/M\nhurried/UY\nhurry/RSDG\nHurst/M\nhurter/M\nhurtfulness/MS\nhurtful/PY\nhurting/Y\nhurtle/SDG\nhurts\nhurt/U\nHurwitz/M\nHus\nHusain\'s\nhusbander/M\nhusband/GSDRYM\nhusbandman/M\nhusbandmen\nhusbandry/SM\nHusein/M\nhush/DSG\nhusker/M\nhuskily\nhuskiness/MS\nhusking/M\nhusk/SGZDRM\nhusky/RSPT\nhussar/MS\nHussein/M\nHusserl/M\nhussy/SM\nhustings/M\nhustler/M\nhustle/RSDZG\nHuston/M\nHutchins/M\nHutchinson/M\nHutchison/M\nhutch/MSDG\nhut/MS\nhutted\nhutting\nHutton/M\nHutu/M\nHuxley/M\nHuygens/M\nhuzzah/GD\nhuzzahs\nhwy\nHyacintha/M\nHyacinthe/M\nHyacinthia/M\nHyacinthie/M\nhyacinth/M\nHyacinth/M\nhyacinths\nHyades\nhyaena\'s\nHyannis/M\nHyatt/M\nhybridism/SM\nhybridization/S\nhybridize/GSD\nhybrid/MS\nHyde/M\nHyderabad/M\nHydra/M\nhydra/MS\nhydrangea/SM\nhydrant/SM\nhydrate/CSDNGX\nhydrate\'s\nhydration/MC\nhydraulically\nhydraulicked\nhydraulicking\nhydraulic/S\nhydraulics/M\nhydrazine/M\nhydride/MS\nhydrocarbon/SM\nhydrocephali\nhydrocephalus/MS\nhydrochemistry\nhydrochloric\nhydrochloride/M\nhydrodynamical\nhydrodynamic/S\nhydrodynamics/M\nhydroelectric\nhydroelectrically\nhydroelectricity/SM\nhydrofluoric\nhydrofoil/MS\nhydrogenate/CDSGN\nhydrogenate\'s\nhydrogenation/MC\nhydrogenations\nhydrogen/MS\nhydrogenous\nhydrological/Y\nhydrologist/MS\nhydrology/SM\nhydrolysis/M\nhydrolyzed/U\nhydrolyze/GSD\nhydromagnetic\nhydromechanics/M\nhydrometer/SM\nhydrometry/MS\nhydrophilic\nhydrophobia/SM\nhydrophobic\nhydrophone/SM\nhydroplane/DSGM\nhydroponic/S\nhydroponics/M\nhydro/SM\nhydrosphere/MS\nhydrostatic/S\nhydrostatics/M\nhydrotherapy/SM\nhydrothermal/Y\nhydrous\nhydroxide/MS\nhydroxy\nhydroxylate/N\nhydroxyl/SM\nhydroxyzine/M\nhyena/MS\nhygiene/MS\nhygienically\nhygienic/S\nhygienics/M\nhygienist/MS\nhygrometer/SM\nhygroscopic\nhying\nHy/M\nHyman/M\nhymeneal/S\nHymen/M\nhymen/MS\nHymie/M\nhymnal/SM\nhymnbook/S\nhymn/GSDM\nHynda/M\nhype/MZGDSR\nhyperactive/S\nhyperactivity/SM\nhyperbola/MS\nhyperbole/MS\nhyperbolic\nhyperbolically\nhyperboloidal\nhyperboloid/SM\nhypercellularity\nhypercritical/Y\nhypercube/MS\nhyperemia/M\nhyperemic\nhyperfine\nhypergamous/Y\nhypergamy/M\nhyperglycemia/MS\nhyperinflation\nHyperion/M\nhypermarket/SM\nhypermedia/S\nhyperplane/SM\nhyperplasia/M\nhypersensitiveness/MS\nhypersensitive/P\nhypersensitivity/MS\nhypersonic\nhyperspace/M\nhypersphere/M\nhypertension/MS\nhypertensive/S\nhypertext/SM\nhyperthyroid\nhyperthyroidism/MS\nhypertrophy/MSDG\nhypervelocity\nhyperventilate/XSDGN\nhyperventilation/M\nhyphenated/U\nhyphenate/NGXSD\nhyphenation/M\nhyphen/DMGS\nhypnoses\nhypnosis/M\nhypnotherapy/SM\nhypnotically\nhypnotic/S\nhypnotism/MS\nhypnotist/SM\nhypnotize/SDG\nhypoactive\nhypoallergenic\nhypocellularity\nhypochondriac/SM\nhypochondria/MS\nhypocrisy/SM\nhypocrite/MS\nhypocritical/Y\nhypodermic/S\nhypo/DMSG\nhypoglycemia/SM\nhypoglycemic/S\nhypophyseal\nhypophysectomized\nhypotenuse/MS\nhypothalami\nhypothalamic\nhypothalamically\nhypothalamus/M\nhypothermia/SM\nhypotheses\nhypothesis/M\nhypothesizer/M\nhypothesize/ZGRSD\nhypothetic\nhypothetical/Y\nhypothyroid\nhypothyroidism/SM\nhypoxia/M\nhyssop/MS\nhysterectomy/MS\nhysteresis/M\nhysteria/SM\nhysterical/YU\nhysteric/SM\nHyundai/M\nHz\ni\nI\nIA\nIaccoca/M\nIago/M\nIain/M\nIa/M\niambi\niambic/S\niamb/MS\niambus/SM\nIan/M\nIanthe/M\nIbadan/M\nIbbie/M\nIbby/M\nIberia/M\nIberian/MS\nIbero/M\nibex/MS\nibid\nibidem\nibis/SM\nIBM/M\nIbo/M\nIbrahim/M\nIbsen/M\nibuprofen/S\nIcarus/M\nICBM/S\nICC\niceberg/SM\niceboat/MS\nicebound\nicebox/MS\nicebreaker/SM\nicecap/SM\nice/GDSC\nIcelander/M\nIcelandic\nIceland/MRZ\nIce/M\niceman/M\nicemen\nicepack\nicepick/S\nice\'s\nIchabod/M\nichneumon/M\nichthyologist/MS\nichthyology/MS\nicicle/SM\nicily\niciness/SM\nicing/MS\nicky/RT\niconic\nicon/MS\niconoclasm/MS\niconoclastic\niconoclast/MS\niconography/MS\nicosahedra\nicosahedral\nicosahedron/M\nictus/SM\nICU\nicy/RPT\nI\'d\nID\nIdahoan/S\nIdahoes\nIdaho/MS\nIdalia/M\nIdalina/M\nIdaline/M\nIda/M\nidealism/MS\nidealistic\nidealistically\nidealist/MS\nidealization/MS\nidealized/U\nidealize/GDRSZ\nidealizer/M\nideal/MYS\nidealogical\nidea/SM\nideate/SN\nideation/M\nIdelle/M\nIdell/M\nidem\nidempotent/S\nidenticalness/M\nidentical/YP\nidentifiability\nidentifiable/U\nidentifiably\nidentification/M\nidentified/U\nidentifier/M\nidentify/XZNSRDG\nidentity/SM\nideogram/MS\nideographic\nideograph/M\nideographs\nideological/Y\nideologist/SM\nideologue/S\nideology/SM\nides\nIdette/M\nidiocy/MS\nidiolect/M\nidiomatically\nidiomatic/P\nidiom/MS\nidiopathic\nidiosyncrasy/SM\nidiosyncratic\nidiosyncratically\nidiotic\nidiotically\nidiot/MS\nidleness/MS\nidle/PZTGDSR\nidler/M\nid/MY\nidolater/MS\nidolatress/S\nidolatrous\nidolatry/SM\nidolization/SM\nidolized/U\nidolizer/M\nidolize/ZGDRS\nidol/MS\nids\nIDs\nidyllic\nidyllically\nidyll/MS\nIE\nIEEE\nIeyasu/M\nif\niffiness/S\niffy/TPR\nIfni/M\nifs\nIggie/M\nIggy/M\nigloo/MS\nIgnace/M\nIgnacio/M\nIgnacius/M\nIgnatius/M\nIgnazio/M\nIgnaz/M\nigneous\nignitable\nignite/ASDG\nigniter/M\nignition/MS\nignobleness/M\nignoble/P\nignobly\nignominious/Y\nignominy/MS\nignoramus/SM\nignorance/MS\nignorantness/M\nignorant/SPY\nignorer/M\nignore/SRDGB\nIgor/M\niguana/MS\nIguassu/M\nii\niii\nIjsselmeer/M\nIke/M\nIkey/M\nIkhnaton/M\nikon\'s\nIL\nIlaire/M\nIla/M\nIlario/M\nilea\nIleana/M\nIleane/M\nileitides\nileitis/M\nIlene/M\nileum/M\nilia\niliac\nIliad/MS\nIlise/M\nilium/M\nIlka/M\nilk/MS\nI\'ll\nIlla/M\nillegality/MS\nillegal/YS\nillegibility/MS\nillegible\nillegibly\nillegitimacy/SM\nillegitimate/SDGY\nilliberality/SM\nilliberal/Y\nillicitness/MS\nillicit/YP\nillimitableness/M\nillimitable/P\nIllinoisan/MS\nIllinois/M\nilliquid\nilliteracy/MS\nilliterateness/M\nilliterate/PSY\nIll/M\nillness/MS\nillogicality/SM\nillogicalness/M\nillogical/PY\nillogic/M\nill/PS\nillume/DG\nilluminate/XSDVNG\nIlluminati\nilluminatingly\nilluminating/U\nillumination/M\nillumine/BGSD\nillusionary\nillusion/ES\nillusionist/MS\nillusion\'s\nillusiveness/M\nillusive/PY\nillusoriness/M\nillusory/P\nillustrated/U\nillustrate/VGNSDX\nillustration/M\nillustrative/Y\nillustrator/SM\nillustriousness/SM\nillustrious/PY\nillus/V\nilly\nIlona/M\nIlsa/M\nIlse/M\nIlysa/M\nIlyse/M\nIlyssa/M\nIlyushin/M\nI\'m\nimage/DSGM\nImagen/M\nimagery/MS\nimaginableness\nimaginable/U\nimaginably/U\nimaginariness/M\nimaginary/PS\nimagination/MS\nimaginativeness/M\nimaginative/UY\nimagined/U\nimaginer/M\nimagine/RSDJBG\nimagoes\nimago/M\nimam/MS\nimbalance/SDM\nimbecile/YMS\nimbecilic\nimbecility/MS\nimbiber/M\nimbibe/ZRSDG\nimbrication/SM\nImbrium/M\nimbroglio/MS\nimbruing\nimbue/GDS\nImelda/M\nIMF\nIMHO\nimitable/I\nimitate/SDVNGX\nimitation/M\nimitativeness/MS\nimitative/YP\nimitator/SM\nimmaculateness/SM\nimmaculate/YP\nimmanence/S\nimmanency/MS\nimmanent/Y\nImmanuel/M\nimmateriality/MS\nimmaterialness/MS\nimmaterial/PY\nimmatureness/M\nimmature/SPY\nimmaturity/MS\nimmeasurableness/M\nimmeasurable/P\nimmeasurably\nimmediacy/MS\nimmediateness/SM\nimmediate/YP\nimmemorial/Y\nimmenseness/M\nimmense/PRTY\nimmensity/MS\nimmerse/RSDXNG\nimmersible\nimmersion/M\nimmigrant/SM\nimmigrate/NGSDX\nimmigration/M\nimminence/SM\nimminentness/M\nimminent/YP\nimmobile\nimmobility/MS\nimmobilization/MS\nimmobilize/DSRG\nimmoderateness/M\nimmoderate/NYP\nimmoderation/M\nimmodest/Y\nimmodesty/SM\nimmolate/SDNGX\nimmolation/M\nimmorality/MS\nimmoral/Y\nimmortality/SM\nimmortalized/U\nimmortalize/GDS\nimmortal/SY\nimmovability/SM\nimmovableness/M\nimmovable/PS\nimmovably\nimmune/S\nimmunity/SM\nimmunization/MS\nimmunize/GSD\nimmunoassay/M\nimmunodeficiency/S\nimmunodeficient\nimmunologic\nimmunological/Y\nimmunologist/SM\nimmunology/MS\nimmure/GSD\nimmutability/MS\nimmutableness/M\nimmutable/P\nimmutably\nIMNSHO\nIMO\nImogene/M\nImogen/M\nImojean/M\nimpaction/SM\nimpactor/SM\nimpact/VGMRDS\nimpaired/U\nimpairer/M\nimpair/LGRDS\nimpairment/SM\nimpala/MS\nimpale/GLRSD\nimpalement/SM\nimpaler/M\nimpalpable\nimpalpably\nimpanel/DGS\nimpartation/M\nimpart/GDS\nimpartiality/SM\nimpartial/Y\nimpassableness/M\nimpassable/P\nimpassably\nimpasse/SXBMVN\nimpassibility/SM\nimpassible\nimpassibly\nimpassion/DG\nimpassioned/U\nimpassiveness/MS\nimpassive/YP\nimpassivity/MS\nimpasto/SM\nimpatience/SM\nimpatiens/M\nimpatient/Y\nimpeachable/U\nimpeach/DRSZGLB\nimpeacher/M\nimpeachment/MS\nimpeccability/SM\nimpeccable/S\nimpeccably\nimpecuniousness/MS\nimpecunious/PY\nimpedance/MS\nimpeded/U\nimpeder/M\nimpede/S\nimped/GRD\nimpedimenta\nimpediment/SM\nimpelled\nimpeller/MS\nimpelling\nimpel/S\nimpend/DGS\nimpenetrability/MS\nimpenetrableness/M\nimpenetrable/P\nimpenetrably\nimpenitence/MS\nimpenitent/YS\nimperativeness/M\nimperative/PSY\nimperceivable\nimperceptibility/MS\nimperceptible\nimperceptibly\nimperceptive\nimperf\nimperfectability\nimperfection/MS\nimperfectness/SM\nimperfect/YSVP\nimperialism/MS\nimperialistic\nimperialistically\nimperialist/SM\nimperial/YS\nimperil/GSLD\nimperilment/SM\nimperiousness/MS\nimperious/YP\nimperishableness/M\nimperishable/SP\nimperishably\nimpermanence/MS\nimpermanent/Y\nimpermeability/SM\nimpermeableness/M\nimpermeable/P\nimpermeably\nimpermissible\nimpersonality/M\nimpersonalized\nimpersonal/Y\nimpersonate/XGNDS\nimpersonation/M\nimpersonator/SM\nimpertinence/SM\nimpertinent/YS\nimperturbability/SM\nimperturbable\nimperturbably\nimperviousness/M\nimpervious/PY\nimpetigo/MS\nimpetuosity/MS\nimpetuousness/MS\nimpetuous/YP\nimpetus/MS\nimpiety/MS\nimpinge/LS\nimpingement/MS\nimping/GD\nimpiousness/SM\nimpious/PY\nimpishness/MS\nimpish/YP\nimplacability/SM\nimplacableness/M\nimplacable/P\nimplacably\nimplantation/SM\nimplant/BGSDR\nimplanter/M\nimplausibility/MS\nimplausible\nimplausibly\nimplementability\nimplementable/U\nimplementation/A\nimplementations\nimplementation\'s\nimplemented/AU\nimplementer/M\nimplementing/A\nimplementor/MS\nimplement/SMRDGZB\nimplicant/SM\nimplicate/VGSD\nimplication/M\nimplicative/PY\nimplicitness/SM\nimplicit/YP\nimplied/Y\nimplode/GSD\nimplore/GSD\nimploring/Y\nimplosion/SM\nimplosive/S\nimply/GNSDX\nimpoliteness/MS\nimpolite/YP\nimpoliticness/M\nimpolitic/PY\nimponderableness/M\nimponderable/PS\nimportance/SM\nimportant/Y\nimportation/MS\nimporter/M\nimporting/A\nimport/SZGBRD\nimportunateness/M\nimportunate/PYGDS\nimportuner/M\nimportune/SRDZYG\nimportunity/SM\nimposable\nimpose/ASDG\nimposer/SM\nimposingly\nimposing/U\nimposition/SM\nimpossibility/SM\nimpossibleness/M\nimpossible/PS\nimpossibly\nimposter\'s\nimpostor/SM\nimpost/SGMD\nimposture/SM\nimpotence/MS\nimpotency/S\nimpotent/SY\nimpound/GDS\nimpoundments\nimpoverisher/M\nimpoverish/LGDRS\nimpoverishment/SM\nimpracticableness/M\nimpracticable/P\nimpracticably\nimpracticality/SM\nimpracticalness/M\nimpractical/PY\nimprecate/NGXSD\nimprecation/M\nimpreciseness/MS\nimprecise/PYXN\nimprecision/M\nimpregnability/MS\nimpregnableness/M\nimpregnable/P\nimpregnably\nimpregnate/DSXNG\nimpregnation/M\nimpresario/SM\nimpress/DRSGVL\nimpressed/U\nimpresser/M\nimpressibility/MS\nimpressible\nimpressionability/SM\nimpressionableness/M\nimpressionable/P\nimpression/BMS\nimpressionism/SM\nimpressionistic\nimpressionist/MS\nimpressiveness/MS\nimpressive/YP\nimpressment/M\nimprimatur/SM\nimprinter/M\nimprinting/M\nimprint/SZDRGM\nimprison/GLDS\nimprisonment/MS\nimprobability/MS\nimprobableness/M\nimprobable/P\nimprobably\nimpromptu/S\nimproperness/M\nimproper/PY\nimpropitious\nimpropriety/SM\nimproved/U\nimprovement/MS\nimprover/M\nimprove/SRDGBL\nimprovidence/SM\nimprovident/Y\nimprovisational\nimprovisation/MS\nimprovisatory\nimproviser/M\nimprovise/RSDZG\nimprudence/SM\nimprudent/Y\nimp/SGMDRY\nimpudence/MS\nimpudent/Y\nimpugner/M\nimpugn/SRDZGB\nimpulse/XMVGNSD\nimpulsion/M\nimpulsiveness/MS\nimpulsive/YP\nimpunity/SM\nimpureness/M\nimpure/RPTY\nimpurity/MS\nimputation/SM\nimpute/SDBG\nImus/M\nIN\ninaction\ninactive\ninadequate/S\ninadvertence/MS\ninadvertent/Y\ninalienability/MS\ninalienably\ninalterableness/M\ninalterable/P\nIna/M\ninamorata/MS\ninane/SRPYT\ninanimateness/S\ninanimate/P\ninanity/MS\ninappeasable\ninappropriate/P\ninarticulate/P\nin/AS\ninasmuch\ninaugural/S\ninaugurate/XSDNG\ninauguration/M\ninauthenticity\ninbound/G\ninbred/S\ninbreed/JG\nincalculableness/M\nincalculably\nincandescence/SM\nincandescent/YS\nincant\nincantation/SM\nincantatory\nincapable/S\nincapacitate/GNSD\nincapacitation/M\nincarcerate/XGNDS\nincarceration/M\nincarnadine/GDS\nincarnate/AGSDNX\nincarnation/AM\nInca/SM\nincendiary/S\nincense/MGDS\nincentive/ESM\nincentively\nincept/DGVS\ninception/MS\ninceptive/Y\ninceptor/M\nincessant/Y\nincest/SM\nincestuousness/MS\nincestuous/PY\ninch/GMDS\ninchoate/DSG\nInchon/M\ninchworm/MS\nincidence/MS\nincidental/YS\nincident/SM\nincinerate/XNGSD\nincineration/M\nincinerator/SM\nincipience/SM\nincipiency/M\nincipient/Y\nincise/SDVGNX\nincision/M\nincisiveness/MS\nincisive/YP\nincisor/MS\nincitement/MS\ninciter/M\nincite/RZL\nincl\ninclination/ESM\nincline/EGSD\nincliner/M\ninclining/M\ninclude/GDS\ninclusion/MS\ninclusiveness/MS\ninclusive/PY\nInc/M\nincognito/S\nincoherency/M\nincome/M\nincommode/DG\nincommunicado\nincomparable\nincompetent/MS\nincomplete/P\ninconceivability/MS\ninconceivableness/M\ninconceivable/P\nincondensable\nincongruousness/S\ninconsiderableness/M\ninconsiderable/P\ninconsistence\ninconsolableness/M\ninconsolable/P\ninconsolably\nincontestability/SM\nincontestably\nincontrovertibly\ninconvenience/DG\ninconvertibility\ninconvertible\nincorporable\nincorporated/UE\nincorporate/GASDXN\nincorrect/P\nincorrigibility/MS\nincorrigibleness/M\nincorrigible/SP\nincorrigibly\nincorruptible/S\nincorruptibly\nincrease/JB\nincreaser/M\nincreasing/Y\nincredibleness/M\nincredible/P\nincremental/Y\nincrementation\nincrement/DMGS\nincriminate/XNGSD\nincrimination/M\nincriminatory\nincrustation/SM\ninc/T\nincubate/XNGVDS\nincubation/M\nincubator/MS\nincubus/MS\ninculcate/SDGNX\ninculcation/M\ninculpate/SDG\nincumbency/MS\nincumbent/S\nincunabula\nincunabulum\nincurable/S\nincurious\nincursion/SM\nind\nindebtedness/SM\nindebted/P\nindefatigableness/M\nindefatigable/P\nindefatigably\nindefeasible\nindefeasibly\nindefinableness/M\nindefinable/PS\nindefinite/S\nindelible\nindelibly\nindemnification/M\nindemnify/NXSDG\nindemnity/SM\nindentation/SM\nindented/U\nindenter/M\nindention/SM\nindent/R\nindenture/DG\nIndependence/M\nindescribableness/M\nindescribable/PS\nindescribably\nindestructibleness/M\nindestructible/P\nindestructibly\nindeterminably\nindeterminacy/MS\nindeterminism\nindexation/S\nindexer/M\nindex/MRDZGB\nIndia/M\nIndiana/M\nIndianan/S\nIndianapolis/M\nIndianian/S\nIndian/SM\nindicant/MS\nindicate/DSNGVX\nindication/M\nindicative/SY\nindicator/MS\nindices\'s\nindicter/M\nindictment/SM\nindict/SGLBDR\nindifference\nindigence/MS\nindigenousness/M\nindigenous/YP\nindigent/SY\nindigestible/S\nindignant/Y\nindignation/MS\nindigo/SM\nIndira/M\nindirect/PG\nindiscreet/P\nindiscriminateness/M\nindiscriminate/PY\nindispensability/MS\nindispensableness/M\nindispensable/SP\nindispensably\nindisputableness/M\nindisputable/P\nindissolubleness/M\nindissoluble/P\nindissolubly\nindistinguishableness/M\nindistinguishable/P\nindite/SDG\nindium/SM\nindividualism/MS\nindividualistic\nindividualistically\nindividualist/MS\nindividuality/MS\nindividualization/SM\nindividualize/DRSGZ\nindividualized/U\nindividualizer/M\nindividualizes/U\nindividualizing/Y\nindividual/YMS\nindividuate/DSXGN\nindividuation/M\nindivisibleness/M\nindivisible/SP\nindivisibly\nInd/M\nIndochina/M\nIndochinese\nindoctrinate/GNXSD\nindoctrination/M\nindoctrinator/SM\nindolence/SM\nindolent/Y\nindomitableness/M\nindomitable/P\nindomitably\nIndonesia/M\nIndonesian/S\nindoor\nIndore/M\nIndra/M\nindubitableness/M\nindubitable/P\nindubitably\ninducement/MS\ninducer/M\ninduce/ZGLSRD\ninducible\ninductance/MS\ninductee/SM\ninduct/GV\ninduction/SM\ninductiveness/M\ninductive/PY\ninductor/MS\nindulge/GDRS\nindulgence/SDGM\nindulgent/Y\nindulger/M\nIndus/M\nindustrialism/MS\nindustrialist/MS\nindustrialization/MS\nindustrialized/U\nindustrialize/SDG\nindustrial/SY\nindustriousness/SM\nindustrious/YP\nindustry/SM\nIndy/SM\ninebriate/NGSDX\ninebriation/M\ninedible\nineducable\nineffability/MS\nineffableness/M\nineffable/P\nineffably\ninelastic\nineligibly\nineluctable\nineluctably\nineptitude/SM\nineptness/MS\ninept/YP\ninequivalent\ninerrant\ninertial/Y\ninertia/SM\ninertness/MS\ninert/SPY\nInes\ninescapably\nInesita/M\nInessa/M\ninestimably\ninevitability/MS\ninevitableness/M\ninevitable/P\ninevitably\ninexact/P\ninexhaustibleness/M\ninexhaustible/P\ninexhaustibly\ninexorability/M\ninexorableness/M\ninexorable/P\ninexorably\ninexpedience/M\ninexplicableness/M\ninexplicable/P\ninexplicably\ninexplicit\ninexpressibility/M\ninexpressibleness/M\ninexpressible/PS\ninextricably\nInez/M\ninfamous\ninfamy/SM\ninfancy/M\ninfanticide/MS\ninfantile\ninfant/MS\ninfantryman/M\ninfantrymen\ninfantry/SM\ninfarction/SM\ninfarct/SM\ninfatuate/XNGSD\ninfatuation/M\ninfauna\ninfected/U\ninfecter\ninfect/ESGDA\ninfection/EASM\ninfectiousness/MS\ninfectious/PY\ninfective\ninfer/B\ninference/GMSR\ninferential/Y\ninferiority/MS\ninferior/SMY\ninfernal/Y\ninferno/MS\ninferred\ninferring\ninfertile\ninfestation/MS\ninfester/M\ninfest/GSDR\ninfidel/SM\ninfighting/M\ninfill/MG\ninfiltrate/V\ninfiltrator/MS\ninfinitesimal/SY\ninfinite/V\ninfinitival\ninfinitive/YMS\ninfinitude/MS\ninfinitum\ninfinity/SM\ninfirmary/SM\ninfirmity/SM\ninfix/M\ninflammableness/M\ninflammable/P\ninflammation/MS\ninflammatory\ninflatable/MS\ninflate/NGBDRSX\ninflater/M\ninflationary\ninflation/ESM\ninflect/GVDS\ninflectional/Y\ninflection/SM\ninflexibleness/M\ninflexible/P\ninflexion/SM\ninflict/DRSGV\ninflicter/M\ninfliction/SM\ninflow/M\ninfluenced/U\ninfluencer/M\ninfluence/SRDGM\ninfluent\ninfluential/SY\ninfluenza/MS\ninfomercial/S\nInformatica/M\ninformatics\ninformational\ninformation/ES\ninformativeness/S\ninformative/UY\ninformatory\ninformed/U\ninformer/M\ninfo/SM\ninfotainment/S\ninfra\ninfrared/SM\ninfrasonic\ninfrastructural\ninfrastructure/MS\ninfrequence/S\ninfringe/LR\ninfringement/SM\ninfringer/M\ninfuriate/GNYSD\ninfuriating/Y\ninfuriation/M\ninfuser/M\ninfuse/RZ\ninfusibleness/M\ninfusible/P\ninf/ZT\nIngaberg/M\nIngaborg/M\nInga/M\nIngamar/M\nIngar/M\nIngeberg/M\nIngeborg/M\nIngelbert/M\nIngemar/M\ningeniousness/MS\ningenious/YP\ning�nue/S\ningenuity/SM\ningenuous/EY\ningenuousness/MS\nInger/M\nInge/RM\nIngersoll/M\ningest/DGVS\ningestible\ningestion/SM\nInglebert/M\ninglenook/MS\nInglewood/M\nInglis/M\nIngmar/M\ningoing\ningot/SMDG\ningrained/Y\nIngra/M\nIngram/M\ningrate/M\ningratiate/DSGNX\ningratiating/Y\ningratiation/M\ningredient/SM\nIngres/M\ningression/M\ningress/MS\nIngrid/M\nIngrim/M\ningrown/P\ninguinal\nIngunna/M\ninhabitable/U\ninhabitance\ninhabited/U\ninhabiter/M\ninhabit/R\ninhalant/S\ninhalation/SM\ninhalator/SM\ninhale/Z\ninhere/DG\ninherent/Y\ninheritableness/M\ninheritable/P\ninheritance/EMS\ninherit/BDSG\ninherited/E\ninheriting/E\ninheritor/S\ninheritress/MS\ninheritrix/MS\ninherits/E\ninhibit/DVGS\ninhibited/U\ninhibiter\'s\ninhibition/MS\ninhibitor/MS\ninhibitory\ninhomogeneous\ninhospitableness/M\ninhospitable/P\ninhospitality\nInigo/M\ninimical/Y\ninimitableness/M\ninimitable/P\ninimitably\ninion\niniquitousness/M\niniquitous/PY\niniquity/MS\ninitialer/M\ninitial/GSPRDY\ninitialization/A\ninitializations\ninitialization\'s\ninitialize/ASDG\ninitialized/U\ninitializer/S\ninitiates\ninitiate/UD\ninitiating\ninitiation/SM\ninitiative/SM\ninitiator/MS\ninitiatory\ninjectable/U\ninject/GVSDB\ninjection/MS\ninjector/SM\ninjunctive\ninjured/U\ninjurer/M\ninjure/SRDZG\ninjuriousness/M\ninjurious/YP\ninkblot/SM\ninker/M\ninkiness/MS\ninkling/SM\ninkstand/SM\ninkwell/SM\ninky/TP\nink/ZDRJ\ninland\ninlander/M\ninlay/RG\ninletting\ninly/G\ninmost\nInna/M\ninnards\ninnateness/SM\ninnate/YP\ninnermost/S\ninnersole/S\ninnerspring\ninnervate/GNSDX\ninnervation/M\ninner/Y\ninning/M\nInnis/M\ninnkeeper/MS\ninnocence/SM\nInnocent/M\ninnocent/SYRT\ninnocuousness/MS\ninnocuous/PY\ninnovate/SDVNGX\ninnovation/M\ninnovative/P\ninnovator/MS\ninnovatory\nInnsbruck/M\ninnuendo/MDGS\ninnumerability/M\ninnumerableness/M\ninnumerable/P\ninnumerably\ninnumerate\ninn/ZGDRSJ\ninoculate/ASDG\ninoculation/MS\ninoculative\ninoffensive/P\nInonu/M\ninopportuneness/M\ninopportune/P\ninordinateness/M\ninordinate/PY\ninorganic\ninpatient\nIn/PM\ninput/MRDG\ninquirer/M\ninquire/ZR\ninquiring/Y\ninquiry/MS\ninquisitional\ninquisition/MS\nInquisition/MS\ninquisitiveness/MS\ninquisitive/YP\ninquisitorial/Y\ninquisitor/MS\nINRI\ninrush/M\nins\nINS\ninsalubrious\ninsanitary\ninsatiability/MS\ninsatiableness/M\ninsatiable/P\ninsatiably\ninscribe/Z\ninscription/SM\ninscrutability/SM\ninscrutableness/SM\ninscrutable/P\ninscrutably\ninseam\ninsecticidal\ninsecticide/MS\ninsectivore/SM\ninsectivorous\ninsecureness/M\ninsecure/P\ninseminate/NGXSD\ninsemination/M\ninsensateness/M\ninsensate/P\ninsensible/P\ninsentient\ninseparable/S\ninsert/ADSG\ninserter/M\ninsertion/AMS\ninsetting\ninshore\ninsider/M\ninside/Z\ninsidiousness/MS\ninsidious/YP\ninsightful/Y\ninsigne\'s\ninsignia/SM\ninsignificant\ninsinuate/VNGXSD\ninsinuating/Y\ninsinuation/M\ninsinuator/SM\ninsipidity/MS\ninsipid/Y\ninsistence/SM\ninsistent/Y\ninsisting/Y\ninsist/SGD\ninsociable\ninsofar\ninsole/M\ninsolence/SM\ninsolent/YS\ninsolubleness/M\ninsoluble/P\ninsolubly\ninsomniac/S\ninsomnia/MS\ninsomuch\ninsouciance/SM\ninsouciant/Y\ninspect/AGSD\ninspection/SM\ninspective\ninspectorate/MS\ninspector/SM\ninspirational/Y\ninspiration/MS\ninspired/U\ninspire/R\ninspirer/M\ninspiring/U\ninspirit/DG\nInst\ninstallable\ninstall/ADRSG\ninstallation/SM\ninstaller/MS\ninstallment/MS\ninstance/GD\ninstantaneousness/M\ninstantaneous/PY\ninstantiated/U\ninstantiate/SDXNG\ninstantiation/M\ninstant/SRYMP\ninstate/AGSD\ninst/B\ninstead\ninstigate/XSDVGN\ninstigation/M\ninstigator/SM\ninstillation/SM\ninstinctive/Y\ninstinctual\ninstinct/VMS\ninstituter/M\ninstitutes/M\ninstitute/ZXVGNSRD\ninstitutionalism/M\ninstitutionalist/M\ninstitutionalization/SM\ninstitutionalize/GDS\ninstitutional/Y\ninstitution/AM\ninstitutor\'s\ninstr\ninstruct/DSVG\ninstructed/U\ninstructional\ninstruction/MS\ninstructiveness/M\ninstructive/PY\ninstructor/MS\ninstrumentalist/MS\ninstrumentality/SM\ninstrumental/SY\ninstrumentation/SM\ninstrument/GMDS\ninsubordinate\ninsubstantial\ninsufferable\ninsufferably\ninsularity/MS\ninsular/YS\ninsulate/DSXNG\ninsulated/U\ninsulation/M\ninsulator/MS\ninsulin/MS\ninsult/DRSG\ninsulter/M\ninsulting/Y\ninsuperable\ninsuperably\ninsupportableness/M\ninsupportable/P\ninsurance/MS\ninsurance\'s/A\ninsure/BZGS\ninsured/S\ninsurer/M\ninsurgence/SM\ninsurgency/MS\ninsurgent/MS\ninsurmountably\ninsurrectionist/SM\ninsurrection/SM\nintactness/M\nintact/P\nintaglio/GMDS\nintake/M\nintangible/M\ninteger/MS\nintegrability/M\nintegrable\nintegral/SYM\nintegrand/MS\nintegrate/AGNXEDS\nintegration/EMA\nintegrative/E\nintegrator/MS\nintegrity/SM\nintegument/SM\nintellective/Y\nintellect/MVS\nintellectualism/MS\nintellectuality/M\nintellectualize/GSD\nintellectualness/M\nintellectual/YPS\nintelligence/MSR\nintelligencer/M\nintelligentsia/MS\nintelligent/UY\nintelligibilities\nintelligibility/UM\nintelligibleness/MU\nintelligible/PU\nintelligibly/U\nIntel/M\nIntelsat/M\nintemperate/P\nintendant/MS\nintendedness/M\nintended/SYP\nintender/M\nintensification/M\nintensifier/M\nintensify/GXNZRSD\nintensional/Y\nintensiveness/MS\nintensive/PSY\nintentionality/M\nintentional/UY\nintention/SDM\nintentness/SM\nintent/YP\ninteraction/MS\ninteractive/PY\ninteractivity\ninteract/VGDS\ninteraxial\ninterbank\ninterbred\ninterbreed/GS\nintercalate/GNVDS\nintercalation/M\nintercase\nintercaste\ninterceder/M\nintercede/SRDG\nintercensal\nintercept/DGS\ninterception/MS\ninterceptor/MS\nintercession/MS\nintercessor/SM\nintercessory\ninterchangeability/M\ninterchangeableness/M\ninterchangeable/P\ninterchangeably\ninterchange/DSRGJ\ninterchanger/M\nintercity\ninterclass\nintercohort\nintercollegiate\nintercommunicate/SDXNG\nintercommunication/M\nintercom/SM\ninterconnectedness/M\ninterconnected/P\ninterconnect/GDS\ninterconnection/SM\ninterconnectivity\nintercontinental\ninterconversion/M\nintercorrelated\nintercourse/SM\nInterdata/M\ninterdenominational\ninterdepartmental/Y\ninterdependence/MS\ninterdependency/SM\ninterdependent/Y\ninterdiction/MS\ninterdict/MDVGS\ninterdisciplinary\ninterested/UYE\ninterest/GEMDS\ninterestingly/U\ninterestingness/M\ninteresting/YP\ninter/ESTL\ninterface/SRDGM\ninterfacing/M\ninterfaith\ninterference/MS\ninterferer/M\ninterfere/SRDG\ninterfering/Y\ninterferometer/SM\ninterferometric\ninterferometry/M\ninterferon/MS\ninterfile/GSD\nintergalactic\nintergenerational\nintergeneration/M\ninterglacial\nintergovernmental\nintergroup\ninterim/S\ninterindex\ninterindustry\ninterior/SMY\ninterj\ninterject/GDS\ninterjectional\ninterjection/MS\ninterlace/GSD\ninterlard/SGD\ninterlayer/G\ninterleave/SDG\ninterleukin/S\ninterlibrary\ninterlinear/S\ninterline/JGSD\ninterlingual\ninterlingua/M\ninterlining/M\ninterlink/GDS\ninterlisp/M\ninterlobular\ninterlocker/M\ninterlock/RDSG\ninterlocutor/MS\ninterlocutory\ninterlope/GZSRD\ninterloper/M\ninterlude/MSDG\nintermarriage/MS\nintermarry/GDS\nintermediary/MS\nintermediateness/M\nintermediate/YMNGSDP\nintermediation/M\ninterment/SME\nintermeshed\nintermetrics\nintermezzi\nintermezzo/SM\ninterminably\nintermingle/DSG\nintermission/MS\nintermittent/Y\nintermix/GSRD\nintermodule\nintermolecular/Y\ninternalization/SM\ninternalize/GDS\ninternal/SY\nInternationale/M\ninternationalism/SM\ninternationalist/SM\ninternationality/M\ninternationalization/MS\ninternationalize/DSG\ninternational/YS\ninternecine\ninternee/SM\ninterne\'s\nInternet/M\nINTERNET/M\ninternetwork\ninternist/SM\nintern/L\ninternment/SM\ninternship/MS\ninternuclear\ninterocular\ninteroffice\ninteroperability\ninterpenetrates\ninterpersonal/Y\ninterplanetary\ninterplay/GSMD\ninterpol\ninterpolate/XGNVBDS\ninterpolation/M\nInterpol/M\ninterpose/GSRD\ninterposer/M\ninterposition/MS\ninterpretable/U\ninterpret/AGSD\ninterpretation/MSA\ninterpretative/Y\ninterpreted/U\ninterpreter/SM\ninterpretive/Y\ninterpretor/S\ninterprocess\ninterprocessor\ninterquartile\ninterracial\ninterred/E\ninterregional\ninterregnum/MS\ninterrelatedness/M\ninterrelated/PY\ninterrelate/GNDSX\ninterrelation/M\ninterrelationship/SM\ninterring/E\ninterrogate/DSXGNV\ninterrogation/M\ninterrogative/SY\ninterrogator/SM\ninterrogatory/S\ninterrupted/U\ninterrupter/M\ninterruptibility\ninterruptible\ninterruption/MS\ninterrupt/VGZRDS\ninterscholastic\nintersect/GDS\nintersection/MS\nintersession/MS\ninterspecies\nintersperse/GNDSX\ninterspersion/M\ninterstage\ninterstate/S\ninterstellar\ninterstice/SM\ninterstitial/SY\nintersurvey\nintertask\nintertwine/GSD\ninterurban/S\ninterval/MS\nintervene/GSRD\nintervener/M\nintervenor/M\ninterventionism/MS\ninterventionist/S\nintervention/MS\ninterview/AMD\ninterviewed/U\ninterviewee/SM\ninterviewer/SM\ninterviewing\ninterviews\nintervocalic\ninterweave/GS\ninterwove\ninterwoven\nintestacy/SM\nintestinal/Y\nintestine/SM\ninti\nintifada\nintimacy/SM\nintimal\nintimateness/M\nintimater/M\nintimate/XYNGPDRS\nintimation/M\nintimidate/SDXNG\nintimidating/Y\nintimidation/M\ninto\nintolerableness/M\nintolerable/P\nintolerant/PS\nintonate/NX\nintonation/M\nintoxicant/MS\nintoxicate/DSGNX\nintoxicated/Y\nintoxication/M\nintra\nintracellular\nintracity\nintraclass\nintracohort\nintractability/M\nintractableness/M\nintractable/P\nintradepartmental\nintrafamily\nintragenerational\nintraindustry\nintraline\nintrametropolitan\nintramural/Y\nintramuscular/Y\nintranasal\nintransigence/MS\nintransigent/YS\nintransitive/S\nintraoffice\nintraprocess\nintrapulmonary\nintraregional\nintrasectoral\nintrastate\nintratissue\nintrauterine\nintravenous/YS\nintrepidity/SM\nintrepidness/M\nintrepid/YP\nintricacy/SM\nintricateness/M\nintricate/PY\nintrigue/DRSZG\nintriguer/M\nintriguing/Y\nintrinsically\nintrinsic/S\nintroduce/ADSG\nintroducer/M\nintroduction/ASM\nintroductory\nintroit/SM\nintroject/SD\nintro/S\nintrospection/MS\nintrospectiveness/M\nintrospective/YP\nintrospect/SGVD\nintroversion/SM\nintrovert/SMDG\nintruder/M\nintrude/ZGDSR\nintrusion/SM\nintrusiveness/MS\nintrusive/SYP\nintubate/NGDS\nintubation/M\nintuit/GVDSB\nintuitionist/M\nintuitiveness/MS\nintuitive/YP\nint/ZR\nInuit/MS\ninundate/SXNG\ninundation/M\ninure/GDS\ninvader/M\ninvade/ZSRDG\ninvalid/GSDM\ninvalidism/MS\ninvariable/P\ninvariant/M\ninvasion/SM\ninvasive/P\ninvectiveness/M\ninvective/PSMY\ninveigh/DRG\ninveigher/M\ninveighs\ninveigle/DRSZG\ninveigler/M\ninvent/ADGS\ninvented/U\ninvention/ASM\ninventiveness/MS\ninventive/YP\ninventor/MS\ninventory/SDMG\nInverness/M\ninverse/YV\ninverter/M\ninvertible\ninvert/ZSGDR\ninvest/ADSLG\ninvestigate/XDSNGV\ninvestigation/MA\ninvestigator/MS\ninvestigatory\ninvestiture/SM\ninvestment/ESA\ninvestment\'s/A\ninvestor/SM\ninveteracy/MS\ninveterate/Y\ninviability\ninvidiousness/MS\ninvidious/YP\ninvigilate/GD\ninvigilator/SM\ninvigorate/ANGSD\ninvigorating/Y\ninvigoration/AM\ninvigorations\ninvincibility/SM\ninvincibleness/M\ninvincible/P\ninvincibly\ninviolability/MS\ninviolably\ninviolateness/M\ninviolate/YP\ninviscid\ninvisibleness/M\ninvisible/S\ninvitational/S\ninvitation/MS\ninvited/U\ninvitee/S\ninviter/M\ninvite/SRDG\ninviting/Y\ninvocable\ninvocate\ninvoked/A\ninvoke/GSRDBZ\ninvoker/M\ninvokes/A\ninvoluntariness/S\ninvoluntary/P\ninvolute/XYN\ninvolution/M\ninvolutorial\ninvolvedly\ninvolved/U\ninvolve/GDSRL\ninvolvement/SM\ninvolver/M\ninvulnerability/M\ninvulnerableness/M\ninwardness/M\ninward/PY\nioctl\niodate/MGND\niodation/M\niodide/MS\niodinate/DNG\niodine/MS\niodize/GSD\nIolande/M\nIolanthe/M\nIo/M\nIona/M\nIonesco/M\nIonian/M\nionic/S\nIonic/S\nionization\'s\nionization/SU\nionized/UC\nionize/GNSRDJXZ\nionizer\'s\nionizer/US\nionizes/U\nionizing/U\nionosphere/SM\nionospheric\nion\'s/I\nion/SMU\nIorgo/MS\nIormina/M\nIosep/M\niota/SM\nIOU\nIowan/S\nIowa/SM\nIPA\nipecac/MS\nIphigenia/M\nipso\nIpswich/M\nIQ\nIqbal/M\nIquitos/M\nIra/M\nIranian/MS\nIran/M\nIraqi/SM\nIraq/M\nIRA/S\nirascibility/SM\nirascible\nirascibly\nirateness/S\nirate/RPYT\nireful\nIreland/M\nire/MGDS\nIrena/M\nIrene/M\nirenic/S\niridescence/SM\niridescent/Y\nirides/M\niridium/MS\nirids\nIrina/M\nIris\niris/GDSM\nIrishman/M\nIrishmen\nIrish/R\nIrishwoman/M\nIrishwomen\nIrita/M\nirk/GDS\nirksomeness/SM\nirksome/YP\nIrkutsk/M\nIr/M\nIrma/M\nironclad/S\niron/DRMPSGJ\nironer/M\nironic\nironicalness/M\nironical/YP\nironing/M\nironmonger/M\nironmongery/M\nironside/MS\nironstone/MS\nironware/SM\nironwood/SM\nironworker/M\nironwork/MRS\nirony/SM\nIroquoian/MS\nIroquois/M\nirradiate/XSDVNG\nirradiation/M\nirrationality/MS\nirrationalness/M\nirrational/YSP\nIrrawaddy/M\nirreclaimable\nirreconcilability/MS\nirreconcilableness/M\nirreconcilable/PS\nirreconcilably\nirrecoverableness/M\nirrecoverable/P\nirrecoverably\nirredeemable/S\nirredeemably\nirredentism/M\nirredentist/M\nirreducibility/M\nirreducible\nirreducibly\nirreflexive\nirrefutable\nirrefutably\nirregardless\nirregularity/SM\nirregular/YS\nirrelevance/SM\nirrelevancy/MS\nirrelevant/Y\nirreligious\nirremediableness/M\nirremediable/P\nirremediably\nirremovable\nirreparableness/M\nirreparable/P\nirreparably\nirreplaceable/P\nirrepressible\nirrepressibly\nirreproachableness/M\nirreproachable/P\nirreproachably\nirreproducibility\nirreproducible\nirresistibility/M\nirresistibleness/M\nirresistible/P\nirresistibly\nirresoluteness/SM\nirresolute/PNXY\nirresolution/M\nirresolvable\nirrespective/Y\nirresponsibility/SM\nirresponsibleness/M\nirresponsible/PS\nirresponsibly\nirretrievable\nirretrievably\nirreverence/MS\nirreverent/Y\nirreversible\nirreversibly\nirrevocableness/M\nirrevocable/P\nirrevocably\nirrigable\nirrigate/DSXNG\nirrigation/M\nirritability/MS\nirritableness/M\nirritable/P\nirritably\nirritant/S\nirritate/DSXNGV\nirritated/Y\nirritating/Y\nirritation/M\nirrupt/GVSD\nirruption/SM\nIRS\nIrtish/M\nIrvine/M\nIrving/M\nIrvin/M\nIrv/MG\nIrwin/M\nIrwinn/M\nis\ni\'s\nIsaac/SM\nIsaak/M\nIsabelita/M\nIsabella/M\nIsabelle/M\nIsabel/M\nIsacco/M\nIsac/M\nIsadora/M\nIsadore/M\nIsador/M\nIsahella/M\nIsaiah/M\nIsak/M\nIsa/M\nISBN\nIscariot/M\nIseabal/M\nIsfahan/M\nIsherwood/M\nIshim/M\nIshmael/M\nIshtar/M\nIsiahi/M\nIsiah/M\nIsidora/M\nIsidore/M\nIsidor/M\nIsidoro/M\nIsidro/M\nisinglass/MS\nIsis/M\nIslamabad/M\nIslamic/S\nIslam/SM\nislander/M\nisland/GZMRDS\nIslandia/M\nisle/MS\nislet/SM\nisl/GD\nIsmael/M\nism/MCS\nisn\'t\nISO\nisobaric\nisobar/MS\nIsobel/M\nisochronal/Y\nisochronous/Y\nisocline/M\nisocyanate/M\nisodine\nisolate/SDXNG\nisolationism/SM\nisolationistic\nisolationist/SM\nisolation/M\nisolator/MS\nIsolde/M\nisomeric\nisomerism/SM\nisomer/SM\nisometrically\nisometric/S\nisometrics/M\nisomorphic\nisomorphically\nisomorphism/MS\nisomorph/M\nisoperimetrical\nisopleth/M\nisopleths\nisosceles\nisostatic\nisothermal/Y\nisotherm/MS\nisotonic\nisotope/SM\nisotopic\nisotropic\nisotropically\nisotropy/M\nIspahan\'s\nispell/M\nIspell/M\nIsraeli/MS\nIsraelite/SM\nIsrael/MS\nIssac/M\nIssiah/M\nIssie/M\nIssi/M\nissuable\nissuance/MS\nissuant\nissued/A\nissue/GMZDSR\nissuer/AMS\nissues/A\nissuing/A\nIssy/M\nIstanbul/M\nisthmian/S\nisthmus/SM\nIstvan/M\nIsuzu/M\nIt\nIT\nItaipu/M\nital\nItalianate/GSD\nItalian/MS\nitalicization/MS\nitalicized/U\nitalicize/GSD\nitalic/S\nItal/M\nItaly/M\nItasca/M\nitch/GMDS\nitchiness/MS\nItch/M\nitchy/RTP\nITcorp/M\nITCorp/M\nit\'d\nItel/M\nitemization/SM\nitemized/U\nitemize/GZDRS\nitemizer/M\nitemizes/A\nitem/MDSG\niterate/ASDXVGN\niteration/M\niterative/YA\niterator/MS\nIthaca/M\nIthacan\nitinerant/SY\nitinerary/MS\nit\'ll\nit/MUS\nIto/M\nits\nitself\nITT\nIUD/S\nIV\nIva/M\nIvanhoe/M\nIvan/M\nIvar/M\nI\'ve\nIve/MRS\nIver/M\nIvette/M\nIvett/M\nIvie/M\niv/M\nIvonne/M\nIvor/M\nIvory/M\nivory/SM\nIVs\nIvy/M\nivy/MDS\nix\nIzaak/M\nIzabel/M\nIzak/M\nIzanagi/M\nIzanami/M\nIzhevsk/M\nIzmir/M\nIzvestia/M\nIzzy/M\njabbed\njabberer/M\njabber/JRDSZG\njabbing\nJabez/M\nJablonsky/M\njabot/MS\njab/SM\njacaranda/MS\nJacenta/M\nJacinda/M\nJacinta/M\nJacintha/M\nJacinthe/M\njackal/SM\njackass/SM\njackboot/DMS\njackdaw/SM\nJackelyn/M\njacketed/U\njacket/GSMD\njack/GDRMS\njackhammer/MDGS\nJackie/M\nJacki/M\njackknife/MGSD\njackknives\nJacklin/M\nJacklyn/M\nJack/M\nJackman/M\njackpot/MS\nJackqueline/M\nJackquelin/M\njackrabbit/DGS\nJacksonian\nJackson/SM\nJacksonville/M\njackstraw/MS\nJacky/M\nJaclin/M\nJaclyn/M\nJacobean\nJacobian/M\nJacobi/M\nJacobin/M\nJacobite/M\nJacobo/M\nJacobsen/M\nJacob/SM\nJacobs/N\nJacobson/M\nJacobus\nJacoby/M\njacquard/MS\nJacquard/SM\nJacqueline/M\nJacquelin/M\nJacquelyn/M\nJacquelynn/M\nJacquenetta/M\nJacquenette/M\nJacques/M\nJacquetta/M\nJacquette/M\nJacquie/M\nJacqui/M\njacuzzi\nJacuzzi/S\nJacynth/M\nJada/M\njadedness/SM\njaded/PY\njadeite/SM\nJade/M\njade/MGDS\nJaeger/M\nJae/M\njaggedness/SM\njagged/RYTP\nJagger/M\njaggers\njagging\njag/S\njaguar/MS\njailbird/MS\njailbreak/SM\njailer/M\njail/GZSMDR\nJaime/M\nJaimie/M\nJaine/M\nJainism/M\nJain/M\nJaipur/M\nJakarta/M\nJake/MS\nJakie/M\nJakob/M\njalape�o/S\njalopy/SM\njalousie/MS\nJamaal/M\nJamaica/M\nJamaican/S\nJamal/M\nJamar/M\njambalaya/MS\njamb/DMGS\njamboree/MS\nJamel/M\nJame/MS\nJameson/M\nJamestown/M\nJamesy/M\nJamey/M\nJamie/M\nJamill/M\nJamil/M\nJami/M\nJamima/M\nJamison/M\nJammal/M\njammed/U\nJammie/M\njamming/U\njam/SM\nJanacek/M\nJana/M\nJanaya/M\nJanaye/M\nJandy/M\nJanean/M\nJaneczka/M\nJaneen/M\nJaneiro/M\nJanek/M\nJanela/M\nJanella/M\nJanelle/M\nJanell/M\nJanel/M\nJane/M\nJanene/M\nJanenna/M\nJanessa/M\nJanesville/M\nJaneta/M\nJanet/M\nJanetta/M\nJanette/M\nJaneva/M\nJaney/M\njangler/M\njangle/RSDGZ\njangly\nJania/M\nJanice/M\nJanie/M\nJanifer/M\nJanina/M\nJanine/M\nJanis/M\njanissary/MS\nJanith/M\njanitorial\njanitor/SM\nJanka/M\nJan/M\nJanna/M\nJannelle/M\nJannel/M\nJannie/M\nJanos/M\nJanot/M\nJansenist/M\nJansen/M\nJanuary/MS\nJanus/M\nJany/M\nJapanese/SM\nJapan/M\njapanned\njapanner\njapanning\njapan/SM\njape/DSMG\nJapura/M\nJaquelin/M\nJaquelyn/M\nJaquenetta/M\nJaquenette/M\nJaquith/M\nJarad/M\njardini�re/MS\nJard/M\nJareb/M\nJared/M\njarful/S\njargon/SGDM\nJarib/M\nJarid/M\nJarlsberg\njar/MS\nJarrad/M\njarred\nJarred/M\nJarret/M\nJarrett/M\nJarrid/M\njarring/SY\nJarrod/M\nJarvis/M\nJase/M\nJasen/M\nJasmina/M\nJasmine/M\njasmine/MS\nJasmin/M\nJason/M\nJasper/M\njasper/MS\nJastrow/M\nJasun/M\njato/SM\njaundice/DSMG\njaundiced/U\njauntily\njauntiness/MS\njaunt/MDGS\njaunty/SRTP\nJavanese\nJava/SM\njavelin/SDMG\nJavier/M\njawbone/SDMG\njawbreaker/SM\njawline\njaw/SMDG\nJaxartes/M\nJayapura/M\njaybird/SM\nJaycee/SM\nJaye/M\nJay/M\nJaymee/M\nJayme/M\nJaymie/M\nJaynell/M\nJayne/M\njay/SM\nJayson/M\njaywalker/M\njaywalk/JSRDZG\nJazmin/M\njazziness/M\njazzmen\njazz/MGDS\njazzy/PTR\nJCS\njct\nJD\nJdavie/M\njealousness/M\njealous/PY\njealousy/MS\nJeana/M\nJeanelle/M\nJeane/M\nJeanette/M\nJeanie/M\nJeanine/M\nJean/M\njean/MS\nJeanna/M\nJeanne/M\nJeannette/M\nJeannie/M\nJeannine/M\nJecho/M\nJedd/M\nJeddy/M\nJedediah/M\nJedidiah/M\nJedi/M\nJed/M\njeep/GZSMD\nJeep/S\njeerer/M\njeering/Y\njeer/SJDRMG\nJeeves/M\njeez\nJefferey/M\nJeffersonian/S\nJefferson/M\nJeffery/M\nJeffie/M\nJeff/M\nJeffrey/SM\nJeffry/M\nJeffy/M\njehad\'s\nJehanna/M\nJehoshaphat/M\nJehovah/M\nJehu/M\njejuna\njejuneness/M\njejune/PY\njejunum/M\nJekyll/M\nJelene/M\njell/GSD\nJello/M\njello\'s\njellybean/SM\njellyfish/MS\njellying/M\njellylike\njellyroll/S\njelly/SDMG\nJemie/M\nJemimah/M\nJemima/M\nJemmie/M\njemmy/M\nJemmy/M\nJena/M\nJenda/M\nJenelle/M\nJenica/M\nJeniece/M\nJenifer/M\nJeniffer/M\nJenilee/M\nJeni/M\nJenine/M\nJenkins/M\nJen/M\nJenna/M\nJennee/M\nJenner/M\njennet/SM\nJennette/M\nJennica/M\nJennie/M\nJennifer/M\nJennilee/M\nJenni/M\nJennine/M\nJennings/M\nJenn/RMJ\nJenny/M\njenny/SM\nJeno/M\nJensen/M\nJens/N\njeopard\njeopardize/GSD\njeopardy/MS\nJephthah/M\nJerad/M\nJerald/M\nJeralee/M\nJeramey/M\nJeramie/M\nJere/M\nJereme/M\njeremiad/SM\nJeremiah/M\nJeremiahs\nJeremias/M\nJeremie/M\nJeremy/M\nJericho/M\nJeri/M\njerker/M\njerk/GSDRJ\njerkily\njerkiness/SM\njerkin/SM\njerkwater/S\njerky/RSTP\nJermaine/M\nJermain/M\nJermayne/M\nJeroboam/M\nJerold/M\nJerome/M\nJeromy/M\nJerrie/M\nJerrilee/M\nJerrilyn/M\nJerri/M\nJerrine/M\nJerrod/M\nJerrold/M\nJerrome/M\njerrybuilt\nJerrylee/M\njerry/M\nJerry/M\njersey/MS\nJersey/MS\nJerusalem/M\nJervis/M\nJes\nJessalin/M\nJessalyn/M\nJessa/M\nJessamine/M\njessamine\'s\nJessamyn/M\nJessee/M\nJesselyn/M\nJesse/M\nJessey/M\nJessica/M\nJessie/M\nJessika/M\nJessi/M\njess/M\nJess/M\nJessy/M\njest/DRSGZM\njester/M\njesting/Y\nJesuit/SM\nJesus\nJeth/M\nJethro/M\njetliner/MS\njet/MS\njetport/SM\njetsam/MS\njetted/M\njetting/M\njettison/DSG\njetty/RSDGMT\njeweler/M\njewelery/S\njewel/GZMRDS\nJewelled/M\nJewelle/M\njewellery\'s\nJewell/MD\nJewel/M\njewelry/MS\nJewess/SM\nJewishness/MS\nJewish/P\nJew/MS\nJewry/MS\nJezebel/MS\nj/F\nJFK/M\njg/M\njibbed\njibbing\njibe/S\njib/MDSG\nJidda/M\njiff/S\njiffy/SM\njigged\njigger/SDMG\njigging/M\njiggle/SDG\njiggly/TR\njig/MS\njigsaw/GSDM\njihad/SM\nJilin\nJillana/M\nJillane/M\nJillayne/M\nJilleen/M\nJillene/M\nJillian/M\nJillie/M\nJilli/M\nJill/M\nJilly/M\njilt/DRGS\njilter/M\nJimenez/M\nJim/M\nJimmie/M\njimmy/GSDM\nJimmy/M\njimsonweed/S\nJinan\njingler/M\njingle/RSDG\njingly/TR\njingoism/SM\njingoistic\njingoist/SM\njingo/M\nJinnah/M\njinni\'s\njinn/MS\nJinny/M\njinrikisha/SM\njinx/GMDS\njitney/MS\njitterbugged\njitterbugger\njitterbugging\njitterbug/SM\njitter/S\njittery/TR\njiujitsu\'s\nJivaro/M\njive/MGDS\nJoachim/M\nJoana/M\nJoane/M\nJoanie/M\nJoan/M\nJoanna/M\nJoanne/SM\nJoann/M\nJoaquin/M\njobbed\njobber/MS\njobbery/M\njobbing/M\nJobey/M\njobholder/SM\nJobie/M\nJobi/M\nJobina/M\njoblessness/MS\njobless/P\nJobrel/M\njob/SM\nJob/SM\nJobye/M\nJoby/M\nJobyna/M\nJocasta/M\nJoceline/M\nJocelin/M\nJocelyne/M\nJocelyn/M\njockey/SGMD\njock/GDMS\nJock/M\nJocko/M\njockstrap/MS\njocoseness/MS\njocose/YP\njocosity/SM\njocularity/SM\njocular/Y\njocundity/SM\njocund/Y\nJodee/M\njodhpurs\nJodie/M\nJodi/M\nJody/M\nJoeann/M\nJoela/M\nJoelie/M\nJoella/M\nJoelle/M\nJoellen/M\nJoell/MN\nJoelly/M\nJoellyn/M\nJoel/MY\nJoelynn/M\nJoe/M\nJoesph/M\nJoete/M\njoey/M\nJoey/M\njogged\njogger/SM\njogging/S\njoggler/M\njoggle/SRDG\nJogjakarta/M\njog/S\nJohan/M\nJohannah/M\nJohanna/M\nJohannes\nJohannesburg/M\nJohann/M\nJohansen/M\nJohanson/M\nJohna/MH\nJohnathan/M\nJohnath/M\nJohnathon/M\nJohnette/M\nJohnie/M\nJohnna/M\nJohnnie/M\njohnnycake/SM\nJohnny/M\njohnny/SM\nJohnsen/M\njohn/SM\nJohn/SM\nJohns/N\nJohnson/M\nJohnston/M\nJohnstown/M\nJohny/M\nJoice/M\njoin/ADGFS\njoined/U\njoiner/FSM\njoinery/MS\njointed/EYP\njointedness/ME\njoint/EGDYPS\njointer/M\njointly/F\njoint\'s\njointures\njoist/GMDS\nJojo/M\njoke/MZDSRG\njoker/M\njokey\njokier\njokiest\njokily\njoking/Y\nJolee/M\nJoleen/M\nJolene/M\nJoletta/M\nJolie/M\nJoliet\'s\nJoli/M\nJoline/M\nJolla/M\njollification/MS\njollily\njolliness/SM\njollity/MS\njolly/TSRDGP\nJolson/M\njolt/DRGZS\njolter/M\nJoly/M\nJolyn/M\nJolynn/M\nJo/MY\nJonah/M\nJonahs\nJonas\nJonathan/M\nJonathon/M\nJonell/M\nJone/MS\nJones/S\nJonie/M\nJoni/MS\nJon/M\njonquil/MS\nJonson/M\nJoplin/M\nJordain/M\nJordana/M\nJordanian/S\nJordan/M\nJordanna/M\nJordon/M\nJorey/M\nJorgan/M\nJorge/M\nJorgensen/M\nJorgenson/M\nJorie/M\nJori/M\nJorrie/M\nJorry/M\nJory/M\nJoscelin/M\nJosee/M\nJosefa/M\nJosefina/M\nJosef/M\nJoseito/M\nJose/M\nJosepha/M\nJosephina/M\nJosephine/M\nJoseph/M\nJosephs\nJosephson/M\nJosephus/M\nJosey/M\njosh/DSRGZ\njosher/M\nJoshia/M\nJosh/M\nJoshuah/M\nJoshua/M\nJosiah/M\nJosias/M\nJosie/M\nJosi/M\nJosselyn/M\njoss/M\njostle/SDG\nJosue/M\nJosy/M\njot/S\njotted\njotter/SM\njotting/SM\nJoule/M\njoule/SM\njounce/SDG\njouncy/RT\nJourdain/M\nJourdan/M\njournalese/MS\njournal/GSDM\njournalism/SM\njournalistic\njournalist/SM\njournalize/DRSGZ\njournalized/U\njournalizer/M\njourney/DRMZSGJ\njourneyer/M\njourneyman/M\njourneymen\njouster/M\njoust/ZSMRDG\nJovanovich/M\nJove/M\njoviality/SM\njovial/Y\nJovian\njowl/SMD\njowly/TR\nJoya/M\nJoyan/M\nJoyann/M\nJoycean\nJoycelin/M\nJoyce/M\nJoye/M\njoyfuller\njoyfullest\njoyfulness/SM\njoyful/PY\njoylessness/MS\njoyless/PY\nJoy/M\njoy/MDSG\nJoyner/M\njoyousness/MS\njoyous/YP\njoyridden\njoyride/SRZMGJ\njoyrode\njoystick/S\nJozef/M\nJP\nJpn\nJr/M\nj\'s\nJ\'s\nJsandye/M\nJuana/M\nJuanita/M\nJuan/M\nJuarez\nJubal/M\njubilant/Y\njubilate/XNGDS\njubilation/M\njubilee/SM\nJudah/M\nJudaic\nJudaical\nJudaism/SM\nJudas/S\njuddered\njuddering\nJudd/M\nJudea/M\nJude/M\njudge/AGDS\njudger/M\njudge\'s\njudgeship/SM\njudgmental/Y\njudgment/MS\njudicable\njudicatory/S\njudicature/MS\njudicial/Y\njudiciary/S\njudicious/IYP\njudiciousness/SMI\nJudie/M\nJudi/MH\nJuditha/M\nJudith/M\nJud/M\njudo/MS\nJudon/M\nJudson/M\nJudye/M\nJudy/M\njugate/F\njugful/SM\njugged\nJuggernaut/M\njuggernaut/SM\njugging\njuggler/M\njuggle/RSDGZ\njugglery/MS\njug/MS\njugular/S\njuice/GMZDSR\njuicer/M\njuicily\njuiciness/MS\njuicy/TRP\nJuieta/M\njujitsu/MS\njujube/SM\njuju/M\njujutsu\'s\njukebox/SM\njuke/GS\nJulee/M\nJule/MS\njulep/SM\nJulia/M\nJuliana/M\nJuliane/M\nJulian/M\nJulianna/M\nJulianne/M\nJuliann/M\nJulie/M\njulienne/GSD\nJulienne/M\nJulieta/M\nJuliet/M\nJulietta/M\nJuliette/M\nJuli/M\nJulina/M\nJuline/M\nJulio/M\nJulissa/M\nJulita/M\nJulius/M\nJul/M\nJulys\nJuly/SM\njumble/GSD\njumbo/MS\njumper/M\njump/GZDRS\njumpily\njumpiness/MS\njumpsuit/S\njumpy/PTR\njun\njunco/MS\njunction/IMESF\njuncture/SFM\nJuneau/M\nJune/MS\nJunette/M\nJungfrau/M\nJungian\njungle/SDM\nJung/M\nJunia/M\nJunie/M\nJunina/M\njuniority/M\njunior/MS\nJunior/S\njuniper/SM\njunkerdom\nJunker/SM\njunketeer/SGDM\njunket/SMDG\njunk/GZDRMS\njunkie/RSMT\njunkyard/MS\nJun/M\nJuno/M\njunta/MS\nJupiter/M\nJurassic\njuridic\njuridical/Y\njuried\njurisdictional/Y\njurisdiction/SM\njurisprudence/SM\njurisprudent\njurisprudential/Y\njuristic\njurist/MS\njuror/MS\nJurua/M\njury/IMS\njurying\njuryman/M\njurymen\njurywoman/M\njurywomen\njusted\nJusten/M\njuster/M\njustest\nJustice/M\njustice/MIS\njusticiable\njustifiability/M\njustifiable/U\njustifiably/U\njustification/M\njustified/UA\njustifier/M\njustify/GDRSXZN\nJustina/M\nJustine/M\njusting\nJustinian/M\nJustin/M\nJustinn/M\nJustino/M\nJustis/M\njustness/MS\njustness\'s/U\njusts\njust/UPY\nJustus/M\njute/SM\nJutish\nJutland/M\njut/S\njutted\njutting\nJuvenal/M\njuvenile/SM\njuxtapose/SDG\njuxtaposition/SM\nJV\nJ/X\nJyoti/M\nKaaba/M\nkabob/SM\nkaboom\nKabuki\nkabuki/SM\nKabul/M\nKacey/M\nKacie/M\nKacy/M\nKaddish/M\nkaddish/S\nKaela/M\nkaffeeklatch\nkaffeeklatsch/S\nKafkaesque\nKafka/M\nkaftan\'s\nKagoshima/M\nKahaleel/M\nKahlil/M\nKahlua/M\nKahn/M\nKaia/M\nKaifeng/M\nKaila/M\nKaile/M\nKailey/M\nKai/M\nKaine/M\nKain/M\nkaiser/MS\nKaiser/SM\nKaitlin/M\nKaitlyn/M\nKaitlynn/M\nKaja/M\nKajar/M\nKakalina/M\nKalahari/M\nKala/M\nKalamazoo/M\nKalashnikov/M\nKalb/M\nKaleb/M\nKaleena/M\nkaleidescope\nkaleidoscope/SM\nkaleidoscopic\nkaleidoscopically\nKale/M\nkale/MS\nKalgoorlie/M\nKalie/M\nKalila/M\nKalil/M\nKali/M\nKalina/M\nKalinda/M\nKalindi/M\nKalle/M\nKalli/M\nKally/M\nKalmyk\nKalvin/M\nKama/M\nKamchatka/M\nKamehameha/M\nKameko/M\nKamikaze/MS\nkamikaze/SM\nKamilah/M\nKamila/M\nKamillah/M\nKampala/M\nKampuchea/M\nKanchenjunga/M\nKandace/M\nKandahar/M\nKandinsky/M\nKandy/M\nKane/M\nkangaroo/SGMD\nKania/M\nKankakee/M\nKan/MS\nKannada/M\nKano/M\nKanpur/M\nKansan/S\nKansas\nKantian\nKant/M\nKanya/M\nKaohsiung/M\nkaolinite/M\nkaolin/MS\nKaplan/M\nkapok/SM\nKaposi/M\nkappa/MS\nkaput/M\nKarachi/M\nKaraganda/M\nKarakorum/M\nkarakul/MS\nKaralee/M\nKaralynn/M\nKara/M\nKaramazov/M\nkaraoke/S\nkarate/MS\nkarat/SM\nKaree/M\nKareem/M\nKarel/M\nKare/M\nKarena/M\nKarenina/M\nKaren/M\nKaria/M\nKarie/M\nKaril/M\nKarilynn/M\nKari/M\nKarim/M\nKarina/M\nKarine/M\nKarin/M\nKariotta/M\nKarisa/M\nKarissa/M\nKarita/M\nKarla/M\nKarlan/M\nKarlee/M\nKarleen/M\nKarlene/M\nKarlen/M\nKarlie/M\nKarlik/M\nKarlis\nKarl/MNX\nKarloff/M\nKarlotta/M\nKarlotte/M\nKarly/M\nKarlyn/M\nkarma/SM\nKarmen/M\nkarmic\nKarna/M\nKarney/M\nKarola/M\nKarole/M\nKarolina/M\nKaroline/M\nKarol/M\nKaroly/M\nKaron/M\nKaro/YM\nKarp/M\nKarrah/M\nKarrie/M\nKarroo/M\nKarry/M\nkart/MS\nKarylin/M\nKaryl/M\nKary/M\nKaryn/M\nKasai/M\nKasey/M\nKashmir/SM\nKaspar/M\nKasparov/M\nKasper/M\nKass\nKassandra/M\nKassey/M\nKassia/M\nKassie/M\nKassi/M\nkatakana\nKatalin/M\nKata/M\nKatee/M\nKatelyn/M\nKate/M\nKaterina/M\nKaterine/M\nKatey/M\nKatha/M\nKatharina/M\nKatharine/M\nKatharyn/M\nKathe/M\nKatherina/M\nKatherine/M\nKatheryn/M\nKathiawar/M\nKathie/M\nKathi/M\nKathleen/M\nKathlin/M\nKath/M\nKathmandu\nKathrine/M\nKathryne/M\nKathryn/M\nKathye/M\nKathy/M\nKatie/M\nKati/M\nKatina/M\nKatine/M\nKatinka/M\nKatleen/M\nKatlin/M\nKat/M\nKatmai/M\nKatmandu\'s\nKatowice/M\nKatrina/M\nKatrine/M\nKatrinka/M\nKattie/M\nKatti/M\nKatuscha/M\nKatusha/M\nKatya/M\nkatydid/SM\nKaty/M\nKatz/M\nKauai/M\nKauffman/M\nKaufman/M\nKaunas/M\nKaunda/M\nKawabata/M\nKawasaki/M\nkayak/SGDM\nKaycee/M\nKaye/M\nKayla/M\nKaylee/M\nKayle/M\nKayley/M\nKaylil/M\nKaylyn/M\nKay/M\nKayne/M\nkayo/DMSG\nKazakh/M\nKazakhstan\nKazan/M\nKazantzakis/M\nkazoo/SM\nKb\nKB\nKC\nkcal/M\nkc/M\nKDE/M\nKeane/M\nKean/M\nKearney/M\nKeary/M\nKeaton/M\nKeats/M\nkebab/SM\nKeck/M\nKeefe/MR\nKeefer/M\nKeegan/M\nKeelby/M\nKeeley/M\nkeel/GSMDR\nkeelhaul/SGD\nKeelia/M\nKeely/M\nKeenan/M\nKeene/M\nkeener/M\nkeen/GTSPYDR\nkeening/M\nKeen/M\nkeenness/MS\nkeeper/M\nkeep/GZJSR\nkeeping/M\nkeepsake/SM\nKeewatin/M\nkegged\nkegging\nkeg/MS\nKeillor/M\nKeir/M\nKeisha/M\nKeith/M\nKelbee/M\nKelby/M\nKelcey/M\nKelcie/M\nKelci/M\nKelcy/M\nKele/M\nKelila/M\nKellby/M\nKellen/M\nKeller/M\nKelley/M\nKellia/M\nKellie/M\nKelli/M\nKellina/M\nKellogg/M\nKellsie/M\nKellyann/M\nKelly/M\nkelp/GZMDS\nKelsey/M\nKelsi/M\nKelsy/M\nKelt\'s\nKelvin/M\nkelvin/MS\nKelwin/M\nKemerovo/M\nKempis/M\nKemp/M\nKendall/M\nKendal/M\nKendell/M\nKendra/M\nKendre/M\nKendrick/MS\nKenilworth/M\nKen/M\nKenmore/M\nken/MS\nKenna/M\nKennan/M\nKennecott/M\nkenned\nKennedy/M\nkennel/GSMD\nKenneth/M\nKennett/M\nKennie/M\nkenning\nKennith/M\nKenn/M\nKenny/M\nkeno/M\nKenon/M\nKenosha/M\nKensington/M\nKent/M\nKenton/M\nKentuckian/S\nKentucky/M\nKenya/M\nKenyan/S\nKenyatta/M\nKenyon/M\nKeogh/M\nKeokuk/M\nkepi/SM\nKepler/M\nkept\nkeratin/MS\nkerbside\nKerby/M\nkerchief/MDSG\nKerensky/M\nKerianne/M\nKeriann/M\nKeri/M\nKerk/M\nKer/M\nKermie/M\nKermit/M\nKermy/M\nkerned\nkernel/GSMD\nkerning\nKern/M\nkerosene/MS\nKerouac/M\nKerrie/M\nKerrill/M\nKerri/M\nKerrin/M\nKerr/M\nKerry/M\nKerstin/M\nKerwin/M\nKerwinn/M\nKesley/M\nKeslie/M\nKessiah/M\nKessia/M\nKessler/M\nkestrel/SM\nketch/MS\nketchup/SM\nketone/M\nketosis/M\nKettering/M\nKettie/M\nKetti/M\nkettledrum/SM\nkettleful\nkettle/SM\nKetty/M\nKevan/M\nKeven/M\nKevina/M\nKevin/M\nKevlar\nKev/MN\nKevon/M\nKevorkian/M\nKevyn/M\nKewaskum/M\nKewaunee/M\nKewpie/M\nkeyboardist/S\nkeyboard/RDMZGS\nkeyclick/SM\nkeyhole/MS\nKey/M\nKeynesian/M\nKeynes/M\nkeynoter/M\nkeynote/SRDZMG\nkeypad/MS\nkeypuncher/M\nkeypunch/ZGRSD\nkeyring\nkey/SGMD\nkeystone/SM\nkeystroke/SDMG\nkeyword/SM\nk/FGEIS\nkg\nK/G\nKGB\nKhabarovsk/M\nKhachaturian/M\nkhaki/SM\nKhalid/M\nKhalil/M\nKhan/M\nkhan/MS\nKharkov/M\nKhartoum/M\nKhayyam/M\nKhmer/M\nKhoisan/M\nKhomeini/M\nKhorana/M\nKhrushchev/SM\nKhufu/M\nKhulna/M\nKhwarizmi/M\nKhyber/M\nkHz/M\nKIA\nKiah/M\nKial/M\nkibble/GMSD\nkibbutzim\nkibbutz/M\nkibitzer/M\nkibitz/GRSDZ\nkibosh/GMSD\nKickapoo/M\nkickback/SM\nkickball/MS\nkicker/M\nkick/GZDRS\nkickoff/SM\nkickstand/MS\nkicky/RT\nkidded\nkidder/SM\nkiddie/SD\nkidding/YM\nkiddish\nKidd/M\nkiddo/SM\nkiddying\nkiddy\'s\nkidless\nkid/MS\nkidnaper\'s\nkidnaping\'s\nkidnap/MSJ\nkidnapped\nkidnapper/SM\nkidnapping/S\nkidney/MS\nkidskin/SM\nKieffer/M\nkielbasa/SM\nkielbasi\nKiele/M\nKiel/M\nKienan/M\nkier/I\nKierkegaard/M\nKiersten/M\nKieth/M\nKiev/M\nKigali/M\nKikelia/M\nKikuyu/M\nKilauea/M\nKile/M\nKiley/M\nKilian/M\nKilimanjaro/M\nkill/BJGZSDR\nkilldeer/SM\nKillebrew/M\nkiller/M\nKillian/M\nKillie/M\nkilling/Y\nkilljoy/S\nKilly/M\nkiln/GDSM\nkilobaud/M\nkilobit/S\nkilobuck\nkilobyte/S\nkilocycle/MS\nkilogauss/M\nkilogram/MS\nkilohertz/M\nkilohm/M\nkilojoule/MS\nkiloliter/MS\nkilometer/SM\nkilo/SM\nkiloton/SM\nkilovolt/SM\nkilowatt/SM\nkiloword\nkilter/M\nkilt/MDRGZS\nKi/M\nKimball/M\nKimbell/M\nKimberlee/M\nKimberley/M\nKimberli/M\nKimberly/M\nKimberlyn/M\nKimble/M\nKimbra/M\nKim/M\nKimmie/M\nKimmi/M\nKimmy/M\nkimono/MS\nKincaid/M\nkinda\nkindergarten/MS\nkinderg�rtner/SM\nkinder/U\nkindheartedness/MS\nkindhearted/YP\nkindle/AGRSD\nkindler/M\nkindliness/SM\nkindliness\'s/U\nkindling/M\nkindly/TUPR\nkindness\'s\nkindness/US\nkind/PSYRT\nkindred/S\nkinematic/S\nkinematics/M\nkinesics/M\nkine/SM\nkinesthesis\nkinesthetically\nkinesthetic/S\nkinetically\nkinetic/S\nkinetics/M\nkinfolk/S\nkingbird/M\nkingdom/SM\nkingfisher/MS\nkinglet/M\nkingliness/M\nkingly/TPR\nKing/M\nkingpin/MS\nKingsbury/M\nking/SGYDM\nkingship/SM\nKingsley/M\nKingsly/M\nKingston/M\nKingstown/M\nKingwood/M\nkink/GSDM\nkinkily\nkinkiness/SM\nkinky/PRT\nKin/M\nkin/MS\nKinna/M\nKinney/M\nKinnickinnic/M\nKinnie/M\nKinny/M\nKinsey/M\nkinsfolk/S\nKinshasa/M\nKinshasha/M\nkinship/SM\nKinsley/M\nkinsman/M\nkinsmen/M\nkinswoman/M\nkinswomen\nkiosk/SM\nKiowa/SM\nKipling/M\nKip/M\nkip/MS\nKippar/M\nkipped\nkipper/DMSG\nKipper/M\nKippie/M\nkipping\nKipp/MR\nKippy/M\nKira/M\nKirbee/M\nKirbie/M\nKirby/M\nKirchhoff/M\nKirchner/M\nKirchoff/M\nKirghistan/M\nKirghizia/M\nKirghiz/M\nKiribati\nKiri/M\nKirinyaga/M\nkirk/GDMS\nKirkland/M\nKirk/M\nKirkpatrick/M\nKirkwood/M\nKirov/M\nkirsch/S\nKirsteni/M\nKirsten/M\nKirsti/M\nKirstin/M\nKirstyn/M\nKisangani/M\nKishinev/M\nkismet/SM\nkiss/DSRBJGZ\nKissee/M\nkisser/M\nKissiah/M\nKissie/M\nKissinger/M\nKitakyushu/M\nkitbag\'s\nkitchener/M\nKitchener/M\nkitchenette/SM\nkitchen/GDRMS\nkitchenware/SM\nkiter/M\nkite/SM\nkith/MDG\nkiths\nKit/M\nkit/MDRGS\nkitsch/MS\nkitschy\nkitted\nkittenishness/M\nkittenish/YP\nkitten/SGDM\nKittie/M\nKitti/M\nkitting\nkittiwakes\nKitty/M\nkitty/SM\nKiwanis/M\nkiwifruit/S\nkiwi/SM\nKizzee/M\nKizzie/M\nKKK\nkl\nKlan/M\nKlansman/M\nKlara/M\nKlarika/M\nKlarrisa/M\nKlaus/M\nklaxon/M\nKlee/M\nKleenex/SM\nKlein/M\nKleinrock/M\nKlemens/M\nKlement/M\nKleon/M\nkleptomaniac/SM\nkleptomania/MS\nKliment/M\nKline/M\nKlingon/M\nKlondike/SDMG\nkludger/M\nkludge/RSDGMZ\nkludgey\nklutziness/S\nklutz/SM\nklutzy/TRP\nKlux/M\nklystron/MS\nkm\nkn\nknacker/M\nknack/SGZRDM\nknackwurst/MS\nKnapp/M\nknapsack/MS\nKnauer/M\nknavery/MS\nknave/SM\nknavish/Y\nkneader/M\nknead/GZRDS\nkneecap/MS\nkneecapped\nkneecapping\nknee/DSM\nkneeing\nkneeler/M\nkneel/GRS\nkneepad/SM\nknell/SMDG\nknelt\nKnesset/M\nknew\nKngwarreye/M\nKnickerbocker/MS\nknickerbocker/S\nknickknack/SM\nknick/ZR\nKnievel/M\nknife/DSGM\nknighthood/MS\nknightliness/MS\nknightly/P\nKnight/M\nknight/MDYSG\nknish/MS\nknit/AU\nknits\nknitted\nknitter/MS\nknitting/SM\nknitwear/M\nknives/M\nknobbly\nknobby/RT\nKnobeloch/M\nknob/MS\nknockabout/M\nknockdown/S\nknocker/M\nknock/GZSJRD\nknockoff/S\nknockout/MS\nknockwurst\'s\nknoll/MDSG\nKnopf/M\nKnossos/M\nknothole/SM\nknot/MS\nknotted\nknottiness/M\nknotting/M\nknotty/TPR\nknowable/U\nknower/M\nknow/GRBSJ\nknowhow\nknowingly/U\nknowing/RYT\nknowings/U\nknowledgeableness/M\nknowledgeable/P\nknowledgeably\nknowledge/SM\nKnowles\nknown/SU\nKnox/M\nKnoxville/M\nknuckleball/R\nknuckle/DSMG\nknuckleduster\nknucklehead/MS\nKnudsen/M\nKnudson/M\nknurl/DSG\nKnuth/M\nKnutsen/M\nKnutson/M\nKO\nkoala/SM\nKobayashi/M\nKobe/M\nKochab/M\nKoch/M\nKodachrome/M\nKodak/SM\nKodaly/M\nKodiak/M\nKoenig/M\nKoenigsberg/M\nKoenraad/M\nKoestler/M\nKohinoor/M\nKohler/M\nKohl/MR\nkohlrabies\nkohlrabi/M\nkola/SM\nKolyma/M\nKommunizma/M\nKong/M\nKongo/M\nKonrad/M\nKonstance/M\nKonstantine/M\nKonstantin/M\nKonstanze/M\nkookaburra/SM\nkook/GDMS\nkookiness/S\nkooky/PRT\nKoo/M\nKoontz/M\nkopeck/MS\nKoppers/M\nKoralle/M\nKoral/M\nKora/M\nKoranic\nKoran/SM\nKordula/M\nKorea/M\nKorean/S\nKorella/M\nKore/M\nKoren/M\nKoressa/M\nKorey/M\nKorie/M\nKori/M\nKornberg/M\nKorney/M\nKorrie/M\nKorry/M\nKort/M\nKory/M\nKorzybski/M\nKosciusko/M\nkosher/DGS\nKossuth/M\nKosygin/M\nKovacs/M\nKowalewski/M\nKowalski/M\nKowloon/M\nkowtow/SGD\nKP\nkph\nkraal/SMDG\nKraemer/M\nkraft/M\nKraft/M\nKrakatau\'s\nKrakatoa/M\nKrakow/M\nKramer/M\nKrasnodar/M\nKrasnoyarsk/M\nKrause/M\nkraut/S!\nKrebs/M\nKremlin/M\nKremlinologist/MS\nKremlinology/MS\nKresge/M\nKrieger/M\nkriegspiel/M\nkrill/MS\nKringle/M\nKrisha/M\nKrishnah/M\nKrishna/M\nKris/M\nKrispin/M\nKrissie/M\nKrissy/M\nKristal/M\nKrista/M\nKristan/M\nKristel/M\nKriste/M\nKristen/M\nKristian/M\nKristie/M\nKristien/M\nKristi/MN\nKristina/M\nKristine/M\nKristin/M\nKristofer/M\nKristoffer/M\nKristofor/M\nKristoforo/M\nKristo/MS\nKristopher/M\nKristy/M\nKristyn/M\nKr/M\nKroc/M\nKroger/M\nkr�na/M\nKronecker/M\nkrone/RM\nkronor\nkr�nur\nKropotkin/M\nKrueger/M\nKruger/M\nKrugerrand/S\nKrupp/M\nKruse/M\nkrypton/SM\nKrystalle/M\nKrystal/M\nKrysta/M\nKrystle/M\nKrystyna/M\nks\nK\'s\nKS\nk\'s/IE\nkt\nKublai/M\nKubrick/M\nkuchen/MS\nkudos/M\nkudzu/SM\nKuenning/M\nKuhn/M\nKuibyshev/M\nKu/M\nKumar/M\nkumquat/SM\nKunming/M\nKuomintang/M\nKurdish/M\nKurdistan/SM\nKurd/SM\nKurosawa/M\nKurtis/M\nKurt/M\nkurtosis/M\nKusch/M\nKuwaiti/SM\nKuwait/M\nKuznetsk/M\nKuznets/M\nkvetch/DSG\nkw\nkW\nKwakiutl/M\nKwangchow\'s\nKwangju/M\nKwanzaa/S\nkWh\nKY\nKyla/M\nkyle/M\nKyle/M\nKylen/M\nKylie/M\nKylila/M\nKylynn/M\nKy/MH\nKym/M\nKynthia/M\nKyoto/M\nKyrgyzstan\nKyrstin/M\nKyushu/M\nL\nLA\nLaban/M\nlabeled/U\nlabeler/M\nlabel/GAZRDS\nlabellings/A\nlabel\'s\nlabial/YS\nlabia/M\nlabile\nlabiodental\nlabium/M\nlaboratory/MS\nlaboredness/M\nlabored/PMY\nlabored\'s/U\nlaborer/M\nlaboring/MY\nlaborings/U\nlaboriousness/MS\nlaborious/PY\nlabor/RDMJSZG\nlaborsaving\nLabradorean/S\nLabrador/SM\nlab/SM\nLab/SM\nlaburnum/SM\nlabyrinthine\nlabyrinth/M\nlabyrinths\nlaced/U\nLacee/M\nlace/MS\nlacerate/NGVXDS\nlaceration/M\nlacer/M\nlaces/U\nlacewing/MS\nLacey/M\nLachesis/M\nlachrymal/S\nlachrymose\nLacie/M\nlacing/M\nlackadaisic\nlackadaisical/Y\nLackawanna/M\nlacker/M\nlackey/SMDG\nlack/GRDMS\nlackluster/S\nLac/M\nlaconic\nlaconically\nlacquerer/M\nlacquer/ZGDRMS\nlacrosse/MS\nlac/SGMDR\nlactate/MNGSDX\nlactational/Y\nlactation/M\nlacteal\nlactic\nlactose/MS\nlacunae\nlacuna/M\nLacy/M\nlacy/RT\nladder/GDMS\nladdie/MS\nladed/U\nladened\nladening\nladen/U\nlade/S\nlading/M\nladle/SDGM\nLadoga/M\nLadonna/M\nlad/XGSJMND\nladybird/SM\nladybug/MS\nladyfinger/SM\nladylike/U\nladylove/MS\nLadyship/MS\nladyship/SM\nlady/SM\nLady/SM\nLaetitia/M\nlaetrile/S\nLafayette/M\nLafitte/M\nlager/DMG\nlaggard/MYSP\nlaggardness/M\nlagged\nlagging/MS\nlagniappe/SM\nlagoon/MS\nLagos/M\nLagrange/M\nLagrangian/M\nLaguerre/M\nLaguna/M\nlag/ZSR\nLahore/M\nlaid/AI\nLaidlaw/M\nlain\nLaina/M\nLainey/M\nLaird/M\nlaird/MS\nlair/GDMS\nlaissez\nlaity/SM\nLaius/M\nlake/DSRMG\nLakehurst/M\nLakeisha/M\nlaker/M\nlakeside\nLakewood/M\nLakisha/M\nLakshmi/M\nlallygagged\nlallygagging\nlallygag/S\nLalo/M\nLa/M\nLamaism/SM\nLamarck/M\nLamar/M\nlamasery/MS\nlama/SM\nLamaze\nlambada/S\nlambaste/SDG\nlambda/SM\nlambency/MS\nlambent/Y\nLambert/M\nlambkin/MS\nLamb/M\nLamborghini/M\nlambskin/MS\nlamb/SRDMG\nlambswool\nlamebrain/SM\nlamed/M\nlameness/MS\nlamentableness/M\nlamentable/P\nlamentably\nlamentation/SM\nlament/DGSB\nlamented/U\nlame/SPY\nla/MHLG\nlaminae\nlamina/M\nlaminar\nlaminate/XNGSD\nlamination/M\nlam/MDRSTG\nlammed\nlammer\nlamming\nLammond/M\nLamond/M\nLamont/M\nL\'Amour\nlampblack/SM\nlamplighter/M\nlamplight/ZRMS\nlampooner/M\nlampoon/RDMGS\nLamport/M\nlamppost/SM\nlamprey/MS\nlamp/SGMRD\nlampshade/MS\nLAN\nLanae/M\nLanai/M\nlanai/SM\nLana/M\nLancashire/M\nLancaster/M\nLancelot/M\nLance/M\nlancer/M\nlance/SRDGMZ\nlancet/MS\nlandau/MS\nlander/I\nlandfall/SM\nlandfill/DSG\nlandforms\nlandholder/M\nlandhold/JGZR\nlanding/M\nLandis/M\nlandlady/MS\nlandless\nlandlines\nlandlocked\nlandlord/MS\nlandlubber/SM\nLand/M\nlandmark/GSMD\nlandmass/MS\nLandon/M\nlandowner/MS\nlandownership/M\nlandowning/SM\nLandry/M\nLandsat\nlandscape/GMZSRD\nlandscaper/M\nlands/I\nlandslide/MS\nlandslid/G\nlandslip\nlandsman/M\nlandsmen\nland/SMRDJGZ\nLandsteiner/M\nlandward/S\nLandwehr/M\nLane/M\nlane/SM\nLanette/M\nLaney/M\nLangeland/M\nLange/M\nLangerhans/M\nLangford/M\nLangland/M\nLangley/M\nLang/M\nLangmuir/M\nLangsdon/M\nLangston/M\nlanguage/MS\nlanguidness/MS\nlanguid/PY\nlanguisher/M\nlanguishing/Y\nlanguish/SRDG\nlanguorous/Y\nlanguor/SM\nLanie/M\nLani/M\nLanita/M\nlankiness/SM\nlankness/MS\nlank/PTYR\nlanky/PRT\nLanna/M\nLannie/M\nLanni/M\nLanny/M\nlanolin/MS\nLansing/M\nlantern/GSDM\nlanthanide/M\nlanthanum/MS\nlanyard/MS\nLanzhou\nLaocoon/M\nLao/SM\nLaotian/MS\nlapboard/MS\nlapdog/S\nlapel/MS\nlapidary/MS\nlapin/MS\nLaplace/M\nLapland/ZMR\nlapped\nlappet/MS\nlapping\nLapp/SM\nlapsed/A\nlapse/KSDMG\nlapser/MA\nlapses/A\nlapsing/A\nlap/SM\nlaps/SRDG\nlaptop/SM\nlapwing/MS\nLaraine/M\nLara/M\nLaramie/M\nlarboard/MS\nlarcenist/S\nlarcenous\nlarceny/MS\nlarch/MS\nlarder/M\nlard/MRDSGZ\nLardner/M\nlardy/RT\nLaredo/M\nlargehearted\nlargemouth\nlargeness/SM\nlarge/SRTYP\nlargess/SM\nlargish\nlargo/S\nlariat/MDGS\nLari/M\nLarina/M\nLarine/M\nLarisa/M\nLarissa/M\nlarker/M\nlark/GRDMS\nLark/M\nlarkspur/MS\nLarousse/M\nLarry/M\nLarsen/M\nLars/NM\nLarson/M\nlarvae\nlarval\nlarva/M\nlaryngeal/YS\nlarynges\nlaryngitides\nlaryngitis/M\nlarynx/M\nLaryssa/M\nlasagna/S\nlasagne\'s\nLascaux/M\nlasciviousness/MS\nlascivious/YP\nlase\nlaser/M\nlashed/U\nlasher/M\nlashing/M\nlash/JGMSRD\nLassa/M\nLassen/M\nLassie/M\nlassie/SM\nlassitude/MS\nlassoer/M\nlasso/GRDMS\nlas/SRZG\nlass/SM\nlaster/M\nlastingness/M\nlasting/PY\nlast/JGSYRD\nLaszlo/M\nLatasha/M\nLatashia/M\nlatching/M\nlatchkey/SM\nlatch\'s\nlatch/UGSD\nlatecomer/SM\nlated/A\nlate/KA\nlately\nlatency/MS\nlateness/MS\nlatent/YS\nlater/A\nlateral/GDYS\nlateralization\nLateran/M\nlatest/S\nLaTeX/M\nlatex/MS\nlathe/M\nlatherer/M\nlather/RDMG\nlathery\nlathing/M\nlath/MSRDGZ\nLathrop/M\nlaths\nLatia/M\nlatices/M\nLatina/SM\nLatinate\nLatino/S\nLatin/RMS\nlatish\nLatisha/M\nlatitude/SM\nlatitudinal/Y\nlatitudinarian/S\nlatitudinary\nLat/M\nLatonya/M\nLatoya/M\nLatrena/M\nLatrina/M\nlatrine/MS\nLatrobe/M\nlat/SDRT\nlatter/YM\nlatte/SR\nlattice/SDMG\nlatticework/MS\nlatticing/M\nLattimer/M\nLatvia/M\nLatvian/S\nlaudably\nlaudanum/MS\nlaudatory\nLauderdale/M\nlauder/M\nLauder/M\nLaud/MR\nlaud/RDSBG\nlauds/M\nLaue/M\nlaughableness/M\nlaughable/P\nlaughably\nlaugh/BRDZGJ\nlaugher/M\nlaughing/MY\nlaughingstock/SM\nlaughs\nlaughter/MS\nLaughton/M\nLaunce/M\nlaunch/AGSD\nlauncher/MS\nlaunching/S\nlaunchpad/S\nlaundered/U\nlaunderer/M\nlaunderette/MS\nlaunder/SDRZJG\nlaundress/MS\nlaundrette/S\nlaundromat/S\nLaundromat/SM\nlaundryman/M\nlaundrymen\nlaundry/MS\nlaundrywoman/M\nlaundrywomen\nLauraine/M\nLauralee/M\nLaural/M\nlaura/M\nLaura/M\nLaurasia/M\nlaureate/DSNG\nlaureateship/SM\nLauree/M\nLaureen/M\nLaurella/M\nLaurel/M\nlaurel/SGMD\nLaure/M\nLaurena/M\nLaurence/M\nLaurene/M\nLauren/SM\nLaurentian\nLaurent/M\nLauretta/M\nLaurette/M\nLaurianne/M\nLaurice/M\nLaurie/M\nLauri/M\nLauritz/M\nLauryn/M\nLausanne/M\nlavage/MS\nlavaliere/MS\nLaval/M\nlava/SM\nlavatory/MS\nlave/GDS\nLavena/M\nlavender/MDSG\nLaverna/M\nLaverne/M\nLavern/M\nLavina/M\nLavinia/M\nLavinie/M\nlavishness/MS\nlavish/SRDYPTG\nLavoisier/M\nLavonne/M\nLawanda/M\nlawbreaker/SM\nlawbreaking/MS\nLawford/M\nlawfulness/SMU\nlawful/PUY\nlawgiver/MS\nlawgiving/M\nlawlessness/MS\nlawless/PY\nLaw/M\nlawmaker/MS\nlawmaking/SM\nlawman/M\nlawmen\nlawnmower/S\nlawn/SM\nLawrence/M\nLawrenceville/M\nlawrencium/SM\nLawry/M\nlaw/SMDG\nLawson/M\nlawsuit/MS\nLawton/M\nlawyer/DYMGS\nlaxativeness/M\nlaxative/PSYM\nlaxer/A\nlaxes/A\nlaxity/SM\nlaxness/SM\nlax/PTSRY\nlayabout/MS\nLayamon/M\nlayaway/S\nlay/CZGSR\nlayered/C\nlayer/GJDM\nlayering/M\nlayer\'s/IC\nlayette/SM\nLayla/M\nLay/M\nlayman/M\nlaymen\nLayne/M\nLayney/M\nlayoff/MS\nlayout/SM\nlayover/SM\nlaypeople\nlayperson/S\nlays/AI\nLayton/M\nlayup/MS\nlaywoman/M\nlaywomen\nLazare/M\nLazar/M\nLazaro/M\nLazarus/M\nlaze/DSG\nlazily\nlaziness/MS\nlazuli/M\nlazybones/M\nlazy/PTSRDG\nlb\nLBJ/M\nlbs\nLC\nLCD\nLCM\nLDC\nleachate\nLeach/M\nleach/SDG\nLeadbelly/M\nleaded/U\nleadenness/M\nleaden/PGDY\nleaderless\nleader/M\nleadership/MS\nlead/SGZXJRDN\nleadsman/M\nleadsmen\nleafage/MS\nleaf/GSDM\nleafhopper/M\nleafiness/M\nleafless\nleaflet/SDMG\nleafstalk/SM\nleafy/PTR\nleaguer/M\nleague/RSDMZG\nLeah/M\nleakage/SM\nleaker/M\nLeakey/M\nleak/GSRDM\nleakiness/MS\nleaky/PRT\nLea/M\nlea/MS\nLeander/M\nLeandra/M\nleaner/M\nleaning/M\nLean/M\nLeanna/M\nLeanne/M\nleanness/MS\nLeann/M\nLeanora/M\nLeanor/M\nlean/YRDGTJSP\nleaper/M\nleapfrogged\nleapfrogging\nleapfrog/SM\nleap/RDGZS\nLear/M\nlearnedly\nlearnedness/M\nlearned/UA\nlearner/M\nlearning/M\nlearns/UA\nlearn/SZGJRD\nLeary/M\nlease/ARSDG\nleaseback/MS\nleaseholder/M\nleasehold/SRMZ\nleaser/MA\nlease\'s\nleash\'s\nleash/UGSD\nleasing/M\nleas/SRDGZ\nleast/S\nleastwise\nleatherette/S\nleather/MDSG\nleathern\nleatherneck/SM\nleathery\nleaven/DMJGS\nleavened/U\nleavening/M\nLeavenworth/M\nleaver/M\nleaves/M\nleave/SRDJGZ\nleaving/M\nLebanese\nLebanon/M\nLebbie/M\nlebensraum\nLebesgue/M\nLeblanc/M\nlecher/DMGS\nlecherousness/MS\nlecherous/YP\nlechery/MS\nlecithin/SM\nlectern/SM\nlecturer/M\nlecture/RSDZMG\nlectureship/SM\nled\nLeda/M\nLederberg/M\nledger/DMG\nledge/SRMZ\nLED/SM\nLeeanne/M\nLeeann/M\nleech/MSDG\nLeeds/M\nleek/SM\nLeelah/M\nLeela/M\nLeeland/M\nLee/M\nlee/MZRS\nLeena/M\nleer/DG\nleeriness/MS\nleering/Y\nleery/PTR\nLeesa/M\nLeese/M\nLeeuwenhoek/M\nLeeward/M\nleeward/S\nleeway/MS\nleftism/SM\nleftist/SM\nleftmost\nleftover/MS\nLeft/S\nleft/TRS\nleftward/S\nLefty/M\nlefty/SM\nlegacy/MS\nlegalese/MS\nlegalism/SM\nlegalistic\nlegality/MS\nlegalization/MS\nlegalize/DSG\nlegalized/U\nlegal/SY\nlegate/AXCNGSD\nlegatee/MS\nlegate\'s/C\nlegation/AMC\nlegato/SM\nlegendarily\nlegendary/S\nLegendre/M\nlegend/SM\nlegerdemain/SM\nLeger/SM\nlegged\nlegginess/MS\nlegging/MS\nleggy/PRT\nleghorn/SM\nLeghorn/SM\nlegibility/MS\nlegible\nlegibly\nlegionary/S\nlegionnaire/SM\nlegion/SM\nlegislate/SDXVNG\nlegislation/M\nlegislative/SY\nlegislator/SM\nlegislature/MS\nlegitimacy/MS\nlegitimate/SDNGY\nlegitimation/M\nlegitimatize/SDG\nlegitimization/MS\nlegitimize/RSDG\nlegit/S\nlegless\nlegman/M\nlegmen\nleg/MS\nLego/M\nLegra/M\nLegree/M\nlegroom/MS\nlegstraps\nlegume/SM\nleguminous\nlegwork/SM\nLehigh/M\nLehman/M\nLeia/M\nLeibniz/M\nLeicester/SM\nLeiden/M\nLeif/M\nLeigha/M\nLeigh/M\nLeighton/M\nLeilah/M\nLeila/M\nlei/MS\nLeipzig/M\nLeisha/M\nleisureliness/MS\nleisurely/P\nleisure/SDYM\nleisurewear\nleitmotif/SM\nleitmotiv/MS\nLek/M\nLelah/M\nLela/M\nLeland/M\nLelia/M\nLemaitre/M\nLemar/M\nLemke/M\nLem/M\nlemma/MS\nlemme/GJ\nLemmie/M\nlemming/M\nLemmy/M\nlemonade/SM\nlemon/GSDM\nlemony\nLemuel/M\nLemuria/M\nlemur/MS\nLena/M\nLenard/M\nLenci/M\nlender/M\nlend/SRGZ\nLenee/M\nLenette/M\nlengthener/M\nlengthen/GRD\nlengthily\nlengthiness/MS\nlength/MNYX\nlengths\nlengthwise\nlengthy/TRP\nlenience/S\nleniency/MS\nlenient/SY\nLeningrad/M\nLeninism/M\nLeninist\nLenin/M\nlenitive/S\nLenka/M\nLen/M\nLe/NM\nLenna/M\nLennard/M\nLennie/M\nLennon/M\nLenny/M\nLenoir/M\nLeno/M\nLenora/M\nLenore/M\nlens/SRDMJGZ\nlent/A\nlenticular\nlentil/SM\nlento/S\nLent/SMN\nLeodora/M\nLeoine/M\nLeola/M\nLeoline/M\nLeo/MS\nLeona/M\nLeonanie/M\nLeonard/M\nLeonardo/M\nLeoncavallo/M\nLeonelle/M\nLeonel/M\nLeone/M\nLeonerd/M\nLeonhard/M\nLeonidas/M\nLeonid/M\nLeonie/M\nleonine\nLeon/M\nLeonora/M\nLeonore/M\nLeonor/M\nLeontine/M\nLeontyne/M\nleopardess/SM\nleopard/MS\nleopardskin\nLeopold/M\nLeopoldo/M\nLeopoldville/M\nLeora/M\nleotard/MS\nleper/SM\nLepidus/M\nLepke/M\nleprechaun/SM\nleprosy/MS\nleprous\nlepta\nlepton/SM\nLepus/M\nLerner/M\nLeroi/M\nLeroy/M\nLesa/M\nlesbianism/MS\nlesbian/MS\nLeshia/M\nlesion/DMSG\nLesley/M\nLeslie/M\nLesli/M\nLesly/M\nLesotho/M\nlessee/MS\nlessen/GDS\nLesseps/M\nlesser\nlesses\nLessie/M\nlessing\nlesson/DMSG\nlessor/MS\nless/U\nLester/M\nlest/R\nLes/Y\nLesya/M\nLeta/M\nletdown/SM\nlethality/M\nlethal/YS\nLetha/M\nlethargic\nlethargically\nlethargy/MS\nLethe/M\nLethia/M\nLeticia/M\nLetisha/M\nlet/ISM\nLetitia/M\nLetizia/M\nLetta/M\nletterbox/S\nlettered/U\nletterer/M\nletterhead/SM\nlettering/M\nletter/JSZGRDM\nletterman/M\nLetterman/M\nlettermen\nletterpress/MS\nLettie/M\nLetti/M\nletting/S\nlettuce/SM\nLetty/M\nletup/MS\nleukemia/SM\nleukemic/S\nleukocyte/MS\nLeupold/M\nLevant/M\nleveeing\nlevee/SDM\nleveled/U\nleveler/M\nlevelheadedness/S\nlevelheaded/P\nleveling/U\nlevelness/SM\nlevel/STZGRDYP\nleverage/MGDS\nlever/SDMG\nLevesque/M\nLevey/M\nLeviathan\nleviathan/MS\nlevier/M\nLevi/MS\nLevine/M\nLevin/M\nlevitate/XNGDS\nlevitation/M\nLeviticus/M\nLevitt/M\nlevity/MS\nLev/M\nLevon/M\nLevy/M\nlevy/SRDZG\nlewdness/MS\nlewd/PYRT\nLewellyn/M\nLewes\nLewie/M\nLewinsky/M\nlewis/M\nLewis/M\nLewiss\nLew/M\nlex\nlexeme/MS\nlexical/Y\nlexicographer/MS\nlexicographic\nlexicographical/Y\nlexicography/SM\nlexicon/SM\nLexie/M\nLexi/MS\nLexine/M\nLexington/M\nLexus/M\nLexy/M\nLeyden/M\nLeyla/M\nLezley/M\nLezlie/M\nlg\nLhasa/SM\nLhotse/M\nliability/SAM\nliable/AP\nliaise/GSD\nliaison/SM\nLia/M\nLiam/M\nLiana/M\nLiane/M\nLian/M\nLianna/M\nLianne/M\nliar/MS\nlibation/SM\nlibbed\nLibbey/M\nLibbie/M\nLibbi/M\nlibbing\nLibby/M\nlibeler/M\nlibel/GMRDSZ\nlibelous/Y\nLiberace/M\nliberalism/MS\nliberality/MS\nliberalization/SM\nliberalized/U\nliberalize/GZSRD\nliberalizer/M\nliberalness/MS\nliberal/YSP\nliberate/NGDSCX\nliberationists\nliberation/MC\nliberator/SCM\nLiberia/M\nLiberian/S\nlibertarianism/M\nlibertarian/MS\nlibertine/MS\nliberty/MS\nlibidinal\nlibidinousness/M\nlibidinous/PY\nlibido/MS\nLib/M\nlib/MS\nlibrarian/MS\nlibrary/MS\nLibra/SM\nlibretoes\nlibretos\nlibrettist/MS\nlibretto/MS\nLibreville/M\nLibrium/M\nLibya/M\nLibyan/S\nlice/M\nlicensed/AU\nlicensee/SM\nlicense/MGBRSD\nlicenser/M\nlicenses/A\nlicensing/A\nlicensor/M\nlicentiate/MS\nlicentiousness/MS\nlicentious/PY\nLicha/M\nlichee\'s\nlichen/DMGS\nLichtenstein/M\nLichter/M\nlicit/Y\nlicked/U\nlickerish\nlicker/M\nlick/GRDSJ\nlicking/M\nlicorice/SM\nLida/M\nlidded\nlidding\nLidia/M\nlidless\nlid/MS\nlido/MS\nLieberman/M\nLiebfraumilch/M\nLiechtenstein/RMZ\nlied/MR\nlie/DRS\nLief/M\nliefs/A\nlief/TSR\nLiege/M\nliege/SR\nLie/M\nlien/SM\nlier/IMA\nlies/A\nLiesa/M\nlieu/SM\nlieut\nlieutenancy/MS\nlieutenant/SM\nLieut/M\nlifeblood/SM\nlifeboat/SM\nlifebuoy/S\nlifeforms\nlifeguard/MDSG\nlifelessness/SM\nlifeless/PY\nlifelikeness/M\nlifelike/P\nlifeline/SM\nlifelong\nlife/MZR\nlifer/M\nlifesaver/SM\nlifesaving/S\nlifespan/S\nlifestyle/S\nlifetaking\nlifetime/MS\nlifework/MS\nLIFO\nlifter/M\nlift/GZMRDS\nliftoff/MS\nligament/MS\nligand/MS\nligate/XSDNG\nligation/M\nligature/DSGM\nlight/ADSCG\nlighted/U\nlightener/M\nlightening/M\nlighten/ZGDRS\nlighter/CM\nlightered\nlightering\nlighters\nlightest\nlightface/SDM\nlightheaded\nlightheartedness/MS\nlighthearted/PY\nlighthouse/MS\nlighting/MS\nlightly\nlightness/MS\nlightning/SMD\nlightproof\nlight\'s\nlightship/SM\nlightweight/S\nligneous\nlignite/MS\nlignum\nlikability/MS\nlikableness/MS\nlikable/P\nlikeability\'s\nliked/E\nlikelihood/MSU\nlikely/UPRT\nlikeness/MSU\nliken/GSD\nliker/E\nliker\'s\nlikes/E\nlikest\nlike/USPBY\nlikewise\nliking/SM\nlilac/MS\nLilah/M\nLila/SM\nLilia/MS\nLiliana/M\nLiliane/M\nLilian/M\nLilith/M\nLiliuokalani/M\nLilla/M\nLille/M\nLillian/M\nLillie/M\nLilli/MS\nlilliputian/S\nLilliputian/SM\nLilliput/M\nLilllie/M\nLilly/M\nLil/MY\nLilongwe/M\nlilting/YP\nlilt/MDSG\nLilyan/M\nLily/M\nlily/MSD\nLima/M\nLimbaugh/M\nlimbered/U\nlimberness/SM\nlimber/RDYTGP\nlimbers/U\nlimbic\nlimbless\nLimbo\nlimbo/GDMS\nlimb/SGZRDM\nLimburger/SM\nlimeade/SM\nlime/DSMG\nlimekiln/M\nlimelight/DMGS\nlimerick/SM\nlimestone/SM\nlimitability\nlimitably\nlimitation/MCS\nlimit/CSZGRD\nlimitedly/U\nlimitedness/M\nlimited/PSY\nlimiter/M\nlimiting/S\nlimitlessness/SM\nlimitless/PY\nlimit\'s\nlimn/GSD\nLimoges/M\nlimo/S\nlimousine/SM\nlimper/M\nlimpet/SM\nlimpidity/MS\nlimpidness/SM\nlimpid/YP\nlimpness/MS\nLimpopo/M\nlimp/SGTPYRD\nLi/MY\nlimy/TR\nlinage/MS\nLina/M\nlinchpin/MS\nLinc/M\nLincoln/SM\nLinda/M\nLindbergh/M\nLindberg/M\nlinden/MS\nLindholm/M\nLindie/M\nLindi/M\nLind/M\nLindon/M\nLindquist/M\nLindsay/M\nLindsey/M\nLindstrom/M\nLindsy/M\nLindy/M\nline/AGDS\nlineage/SM\nlineal/Y\nLinea/M\nlineament/MS\nlinearity/MS\nlinearize/SDGNB\nlinear/Y\nlinebacker/SM\nlined/U\nlinefeed\nLinell/M\nlineman/M\nlinemen\nlinen/SM\nliner/SM\nline\'s\nlinesman/M\nlinesmen\nLinet/M\nLinette/M\nlineup/S\nlingerer/M\nlingerie/SM\nlingering/Y\nlinger/ZGJRD\nlingoes\nlingo/M\nlingual/SY\nlingua/M\nlinguine\nlinguini\'s\nlinguistically\nlinguistic/S\nlinguistics/M\nlinguist/SM\nling/ZR\nliniment/MS\nlining/SM\nlinkable\nlinkage/SM\nlinked/A\nlinker/S\nlinking/S\nLink/M\nlink\'s\nlinkup/S\nlink/USGD\nLin/M\nLinnaeus/M\nLinnea/M\nLinnell/M\nLinnet/M\nlinnet/SM\nLinnie/M\nLinn/M\nLinoel/M\nlinoleum/SM\nlino/M\nLinotype/M\nlinseed/SM\nlintel/SM\nlinter/M\nLinton/M\nlint/SMR\nlinty/RST\nLinus/M\nLinux/M\nLinwood/M\nLinzy/M\nLionello/M\nLionel/M\nlioness/SM\nlionhearted\nlionization/SM\nlionizer/M\nlionize/ZRSDG\nLion/M\nlion/MS\nlipase/M\nlipid/MS\nlip/MS\nliposuction/S\nlipped\nlipper\nLippi/M\nlipping\nLippmann/M\nlippy/TR\nlipread/GSRJ\nLipschitz/M\nLipscomb/M\nlipstick/MDSG\nLipton/M\nliq\nliquefaction/SM\nliquefier/M\nliquefy/DRSGZ\nliqueur/DMSG\nliquidate/GNXSD\nliquidation/M\nliquidator/SM\nliquidity/SM\nliquidizer/M\nliquidize/ZGSRD\nliquidness/M\nliquid/SPMY\nliquorice/SM\nliquorish\nliquor/SDMG\nlira/M\nLira/M\nlire\nLisabeth/M\nLisa/M\nLisbeth/M\nLisbon/M\nLise/M\nLisetta/M\nLisette/M\nLisha/M\nLishe/M\nLisle/M\nlisle/SM\nlisper/M\nlisp/MRDGZS\nLissajous/M\nLissa/M\nLissie/M\nLissi/M\nLiss/M\nlissomeness/M\nlissome/P\nlissomness/M\nLissy/M\nlisted/U\nlistener/M\nlisten/ZGRD\nListerine/M\nlister/M\nLister/M\nlisting/M\nlist/JMRDNGZXS\nlistlessness/SM\nlistless/PY\nListon/M\nLiszt/M\nLita/M\nlitany/MS\nlitchi/SM\nliteracy/MS\nliteralism/M\nliteralistic\nliteralness/MS\nliteral/PYS\nliterariness/SM\nliterary/P\nliterate/YNSP\nliterati\nliteration/M\nliterature/SM\nliter/M\nlite/S\nlitheness/SM\nlithe/PRTY\nlithesome\nlithium/SM\nlithograph/DRMGZ\nlithographer/M\nlithographic\nlithographically\nlithographs\nlithography/MS\nlithology/M\nlithosphere/MS\nlithospheric\nLithuania/M\nLithuanian/S\nlitigant/MS\nlitigate/NGXDS\nlitigation/M\nlitigator/SM\nlitigiousness/MS\nlitigious/PY\nlitmus/SM\nlitotes/M\nlit/RZS\nlitt�rateur/S\nlitterbug/SM\nlitter/SZGRDM\nLittle/M\nlittleneck/M\nlittleness/SM\nlittle/RSPT\nLittleton/M\nLitton/M\nlittoral/S\nliturgical/Y\nliturgic/S\nliturgics/M\nliturgist/MS\nliturgy/SM\nLiuka/M\nlivability/MS\nlivableness/M\nlivable/U\nlivably\nLiva/M\nlived/A\nlivelihood/SM\nliveliness/SM\nlivelong/S\nlively/RTP\nliveness/M\nliven/SDG\nliver/CSGD\nliveried\nliverish\nLivermore/M\nLiverpool/M\nLiverpudlian/MS\nliver\'s\nliverwort/SM\nliverwurst/SM\nlivery/CMS\nliveryman/MC\nliverymen/C\nlives/A\nlives\'s\nlivestock/SM\nlive/YHZTGJDSRPB\nLivia/M\nlividness/M\nlivid/YP\nlivingness/M\nLivingstone/M\nLivingston/M\nliving/YP\nLiv/M\nLivonia/M\nLivvie/M\nLivvy/M\nLivvyy/M\nLivy/M\nLizabeth/M\nLiza/M\nlizard/MS\nLizbeth/M\nLizette/M\nLiz/M\nLizzie/M\nLizzy/M\nl/JGVXT\nLjubljana/M\nLL\nllama/SM\nllano/SM\nLLB\nll/C\nLLD\nLlewellyn/M\nLloyd/M\nLlywellyn/M\nLNG\nlo\nloadable\nloaded/A\nloader/MU\nloading/MS\nload\'s/A\nloads/A\nloadstar\'s\nloadstone\'s\nload/SURDZG\nloafer/M\nLoafer/S\nloaf/SRDMGZ\nloam/SMDG\nloamy/RT\nloaner/M\nloaning/M\nloan/SGZRDMB\nloansharking/S\nloanword/S\nloathe\nloather/M\nloathing/M\nloath/JPSRDYZG\nloathness/M\nloathsomeness/MS\nloathsome/PY\nloaves/M\nLobachevsky/M\nlobar\nlobbed\nlobber/MS\nlobbing\nlobby/GSDM\nlobbyist/MS\nlobe/SM\nlob/MDSG\nlobotomist\nlobotomize/GDS\nlobotomy/MS\nlobster/MDGS\nlobularity\nlobular/Y\nlobule/SM\nlocale/MS\nlocalisms\nlocality/MS\nlocalization/MS\nlocalized/U\nlocalizer/M\nlocalizes/U\nlocalize/ZGDRS\nlocal/SGDY\nlocatable\nlocate/AXESDGN\nlocater/M\nlocational/Y\nlocation/EMA\nlocative/S\nlocator\'s\nLochinvar/M\nloch/M\nlochs\nloci/M\nlockable\nLockean/M\nlocked/A\nLocke/M\nlocker/SM\nlocket/SM\nLockhart/M\nLockheed/M\nLockian/M\nlocking/S\nlockjaw/SM\nLock/M\nlocknut/M\nlockout/MS\nlock\'s\nlocksmithing/M\nlocksmith/MG\nlocksmiths\nlockstep/S\nlock/UGSD\nlockup/MS\nLockwood/M\nlocomotion/SM\nlocomotive/YMS\nlocomotor\nlocomotory\nloco/SDMG\nlocoweed/MS\nlocus/M\nlocust/SM\nlocution/MS\nlode/SM\nlodestar/MS\nlodestone/MS\nlodged/E\nlodge/GMZSRDJ\nLodge/M\nlodgepole\nlodger/M\nlodges/E\nlodging/M\nlodgment/M\nLodovico/M\nLodowick/M\nLodz\nLoeb/M\nLoella/M\nLoewe/M\nLoewi/M\nlofter/M\nloftily\nloftiness/SM\nloft/SGMRD\nlofty/PTR\nloganberry/SM\nLogan/M\nlogarithmic\nlogarithmically\nlogarithm/MS\nlogbook/MS\nloge/SMNX\nlogged/U\nloggerhead/SM\nlogger/SM\nloggia/SM\nlogging/MS\nlogicality/MS\nlogicalness/M\nlogical/SPY\nlogician/SM\nlogic/SM\nlogin/S\nlogion/M\nlogistical/Y\nlogistic/MS\nlogjam/SM\nLOGO\nlogo/SM\nlogotype/MS\nlogout\nlogrolling/SM\nlog\'s/K\nlog/SM\nlogy/RT\nLohengrin/M\nloincloth/M\nloincloths\nloin/SM\nLoire/M\nLoise/M\nLois/M\nloiterer/M\nloiter/RDJSZG\nLoki/M\nLola/M\nLoleta/M\nLolita/M\nloller/M\nlollipop/MS\nloll/RDGS\nLolly/M\nlolly/SM\nLombardi/M\nLombard/M\nLombardy/M\nLomb/M\nLome\nLona/M\nLondonderry/M\nLondoner/M\nLondon/RMZ\nLonee/M\nloneliness/SM\nlonely/TRP\nloneness/M\nlone/PYZR\nloner/M\nlonesomeness/MS\nlonesome/PSY\nlongboat/MS\nlongbow/SM\nlonged/K\nlongeing\nlonger/K\nlongevity/MS\nLongfellow/M\nlonghair/SM\nlonghand/SM\nlonghorn/SM\nlonging/MY\nlongish\nlongitude/MS\nlongitudinal/Y\nlong/JGTYRDPS\nLong/M\nlongness/M\nlongshoreman/M\nlongshoremen\nlongsighted\nlongs/K\nlongstanding\nLongstreet/M\nlongsword\nlongterm\nlongtime\nLongueuil/M\nlongueur/SM\nlongways\nlongword/SM\nLoni/M\nLon/M\nLonna/M\nLonnard/M\nLonnie/M\nLonni/M\nLonny/M\nloofah/M\nloofahs\nlookahead\nlookalike/S\nlooker/M\nlook/GZRDS\nlookout/MS\nlookup/SM\nlooming/M\nLoomis/M\nloom/MDGS\nloon/MS\nloony/SRT\nlooper/M\nloophole/MGSD\nloop/MRDGS\nloopy/TR\nloosed/U\nlooseleaf\nloosener/M\nlooseness/MS\nloosen/UDGS\nloose/SRDPGTY\nlooses/U\nloosing/M\nlooter/M\nloot/MRDGZS\nloper/M\nlope/S\nLopez/M\nlopped\nlopper/MS\nlopping\nlop/SDRG\nlopsidedness/SM\nlopsided/YP\nloquaciousness/MS\nloquacious/YP\nloquacity/SM\nLoraine/M\nLorain/M\nLoralee/M\nLoralie/M\nLoralyn/M\nLora/M\nLorant/M\nlording/M\nlordliness/SM\nlordly/PTR\nLord/MS\nlord/MYDGS\nlordship/SM\nLordship/SM\nLoree/M\nLoreen/M\nLorelei/M\nLorelle/M\nlore/MS\nLorena/M\nLorene/M\nLoren/SM\nLorentzian/M\nLorentz/M\nLorenza/M\nLorenz/M\nLorenzo/M\nLoretta/M\nLorette/M\nlorgnette/SM\nLoria/M\nLorianna/M\nLorianne/M\nLorie/M\nLorilee/M\nLorilyn/M\nLori/M\nLorinda/M\nLorine/M\nLorin/M\nloris/SM\nLorita/M\nlorn\nLorna/M\nLorne/M\nLorraine/M\nLorrayne/M\nLorre/M\nLorrie/M\nLorri/M\nLorrin/M\nlorryload/S\nLorry/M\nlorry/SM\nLory/M\nLos\nloser/M\nlose/ZGJBSR\nlossage\nlossless\nloss/SM\nlossy/RT\nlost/P\nLothaire/M\nLothario/MS\nlotion/MS\nLot/M\nlot/MS\nLotta/M\nlotted\nLotte/M\nlotter\nlottery/MS\nLottie/M\nLotti/M\nlotting\nLott/M\nlotto/MS\nLotty/M\nlotus/SM\nlouden/DG\nloudhailer/S\nloudly/RT\nloudmouth/DM\nloudmouths\nloudness/MS\nloudspeaker/SM\nloudspeaking\nloud/YRNPT\nLouella/M\nLouie/M\nLouisa/M\nLouise/M\nLouisette/M\nLouisiana/M\nLouisianan/S\nLouisianian/S\nLouis/M\nLouisville/M\nLou/M\nlounger/M\nlounge/SRDZG\nLourdes/M\nlour/GSD\nlouse/CSDG\nlouse\'s\nlousewort/M\nlousily\nlousiness/MS\nlousy/PRT\nloutishness/M\nloutish/YP\nLoutitia/M\nlout/SGMD\nlouver/DMS\nL\'Ouverture\nLouvre/M\nlovableness/MS\nlovable/U\nlovably\nlovebird/SM\nlovechild\nLovecraft/M\nlove/DSRMYZGJB\nloved/U\nLovejoy/M\nLovelace/M\nLoveland/M\nlovelessness/M\nloveless/YP\nlovelies\nlovelinesses\nloveliness/UM\nLovell/M\nlovelornness/M\nlovelorn/P\nlovely/URPT\nLove/M\nlovemaking/SM\nlover/YMG\nlovesick\nlovestruck\nlovingly\nlovingness/M\nloving/U\nlowborn\nlowboy/SM\nlowbrow/MS\nlowdown/S\nLowell/M\nLowe/M\nlowercase/GSD\nlower/DG\nlowermost\nLowery/M\nlowish\nlowland/RMZS\nLowlands/M\nlowlife/SM\nlowlight/MS\nlowliness/MS\nlowly/PTR\nlowness/MS\nlow/PDRYSZTG\nLowrance/M\nlox/MDSG\nloyaler\nloyalest\nloyal/EY\nloyalism/SM\nloyalist/SM\nloyalty/EMS\nLoyang/M\nLoydie/M\nLoyd/M\nLoy/M\nLoyola/M\nlozenge/SDM\nLP\nLPG\nLPN/S\nLr\nls\nl\'s\nL\'s\nLSD\nltd\nLtd/M\nLt/M\nLuanda/M\nLuann/M\nluau/MS\nlubber/YMS\nLubbock/M\nlube/DSMG\nlubricant/SM\nlubricate/VNGSDX\nlubrication/M\nlubricator/MS\nlubricious/Y\nlubricity/SM\nLubumbashi/M\nLucais/M\nLuca/MS\nLuce/M\nlucent/Y\nLucerne/M\nLucho/M\nLucia/MS\nLuciana/M\nLucian/M\nLuciano/M\nlucidity/MS\nlucidness/MS\nlucid/YP\nLucie/M\nLucien/M\nLucienne/M\nLucifer/M\nLucila/M\nLucile/M\nLucilia/M\nLucille/M\nLuci/MN\nLucina/M\nLucinda/M\nLucine/M\nLucio/M\nLucita/M\nLucite/MS\nLucius/M\nluck/GSDM\nluckier/U\nluckily/U\nluckiness/UMS\nluckless\nLucknow/M\nLucky/M\nlucky/RSPT\nlucrativeness/SM\nlucrative/YP\nlucre/MS\nLucretia/M\nLucretius/M\nlucubrate/GNSDX\nlucubration/M\nLucy/M\nLuddite/SM\nLudhiana/M\nludicrousness/SM\nludicrous/PY\nLudlow/M\nLudmilla/M\nludo/M\nLudovico/M\nLudovika/M\nLudvig/M\nLudwig/M\nLuella/M\nLuelle/M\nluff/GSDM\nLufthansa/M\nLuftwaffe/M\nluge/MC\nLuger/M\nluggage/SM\nlugged\nlugger/SM\nlugging\nLugosi/M\nlug/RS\nlugsail/SM\nlugubriousness/MS\nlugubrious/YP\nLuigi/M\nLuisa/M\nLuise/M\nLuis/M\nLukas/M\nLuke/M\nlukewarmness/SM\nlukewarm/PY\nLula/M\nLulita/M\nlullaby/GMSD\nlull/SDG\nlulu/M\nLulu/M\nLu/M\nlumbago/SM\nlumbar/S\nlumberer/M\nlumbering/M\nlumberjack/MS\nlumberman/M\nlumbermen\nlumber/RDMGZSJ\nlumberyard/MS\nlumen/M\nLumi�re/M\nluminance/M\nluminary/MS\nluminescence/SM\nluminescent\nluminosity/MS\nluminousness/M\nluminous/YP\nlummox/MS\nlumper/M\nlumpiness/MS\nlumpishness/M\nlumpish/YP\nlump/SGMRDN\nlumpy/TPR\nlunacy/MS\nLuna/M\nlunar/S\nlunary\nlunate/YND\nlunatic/S\nlunation/M\nluncheonette/SM\nluncheon/SMDG\nluncher/M\nlunch/GMRSD\nlunchpack\nlunchroom/MS\nlunchtime/MS\nLundberg/M\nLund/M\nLundquist/M\nlune/M\nlunge/MS\nlunger/M\nlungfish/SM\nlungful\nlung/SGRDM\nlunkhead/SM\nLupe/M\nlupine/SM\nLupus/M\nlupus/SM\nLura/M\nlurcher/M\nlurch/RSDG\nlure/DSRG\nlurer/M\nLurette/M\nlurex\nLuria/M\nluridness/SM\nlurid/YP\nlurker/M\nlurk/GZSRD\nLurleen/M\nLurlene/M\nLurline/M\nLusaka/M\nLusa/M\nlusciousness/MS\nluscious/PY\nlushness/MS\nlush/YSRDGTP\nLusitania/M\nluster/GDM\nlustering/M\nlusterless\nlustfulness/M\nlustful/PY\nlustily\nlustiness/MS\nlust/MRDGZS\nlustrousness/M\nlustrous/PY\nlusty/PRT\nlutanist/MS\nlute/DSMG\nlutenist/MS\nLutero/M\nlutetium/MS\nLutheranism/MS\nLutheran/SM\nLuther/M\nluting/M\nLutz\nLuxembourgian\nLuxembourg/RMZ\nLuxemburg\'s\nluxe/MS\nluxuriance/MS\nluxuriant/Y\nluxuriate/GNSDX\nluxuriation/M\nluxuriousness/SM\nluxurious/PY\nluxury/MS\nLuz/M\nLuzon/M\nL\'vov\nLyallpur/M\nlyceum/MS\nlychee\'s\nlycopodium/M\nLycra/S\nLycurgus/M\nLyda/M\nLydia/M\nLydian/S\nLydie/M\nLydon/M\nlye/JSMG\nLyell/M\nlying/Y\nLyle/M\nLyly/M\nLyman/M\nLyme/M\nlymphatic/S\nlymph/M\nlymphocyte/SM\nlymphoid\nlymphoma/MS\nlymphs\nLy/MY\nLynchburg/M\nlyncher/M\nlynching/M\nLynch/M\nlynch/ZGRSDJ\nLynda/M\nLyndell/M\nLyndel/M\nLynde/M\nLyndon/M\nLyndsay/M\nLyndsey/M\nLyndsie/M\nLyndy/M\nLynea/M\nLynelle/M\nLynette/M\nLynett/M\nLyn/M\nLynna/M\nLynnea/M\nLynnelle/M\nLynnell/M\nLynne/M\nLynnet/M\nLynnette/M\nLynnett/M\nLynn/M\nLynsey/M\nlynx/MS\nLyon/SM\nLyra/M\nlyrebird/MS\nlyre/SM\nlyricalness/M\nlyrical/YP\nlyricism/SM\nlyricist/SM\nlyric/S\nLysenko/M\nlysine/M\nLysistrata/M\nLysol/M\nLyssa/M\nLyX/M\nMA\nMaalox/M\nma\'am\nMabelle/M\nMabel/M\nMable/M\nMab/M\nmacabre/Y\nmacadamize/SDG\nmacadam/SM\nMacao/M\nmacaque/SM\nmacaroni/SM\nmacaroon/MS\nMacarthur/M\nMacArthur/M\nMacaulay/M\nmacaw/SM\nMacbeth/M\nMaccabees/M\nMaccabeus/M\nMacdonald/M\nMacDonald/M\nMacDraw/M\nMacedonia/M\nMacedonian/S\nMacedon/M\nmace/MS\nMace/MS\nmacerate/DSXNG\nmaceration/M\nmacer/M\nMacgregor/M\nMacGregor/M\nmachete/SM\nMachiavellian/S\nMachiavelli/M\nmachinate/SDXNG\nmachination/M\nmachinelike\nmachine/MGSDB\nmachinery/SM\nmachinist/MS\nmachismo/SM\nMach/M\nmacho/S\nMachs\nMacias/M\nMacintosh/M\nMacIntosh/M\nmacintosh\'s\nMackenzie/M\nMacKenzie/M\nmackerel/SM\nMackinac/M\nMackinaw\nmackinaw/SM\nmackintosh/SM\nmack/M\nMack/M\nMacLeish/M\nMacmillan/M\nMacMillan/M\nMacon/SM\nMacPaint/M\nmacram�/S\nmacrobiotic/S\nmacrobiotics/M\nmacrocosm/MS\nmacrodynamic\nmacroeconomic/S\nmacroeconomics/M\nmacromolecular\nmacromolecule/SM\nmacron/MS\nmacrophage/SM\nmacroscopic\nmacroscopically\nmacrosimulation\nmacro/SM\nmacrosocioeconomic\nMac/SGMD\nmac/SGMDR\nMacy/M\nMadagascan/SM\nMadagascar/M\nMadalena/M\nMadalyn/M\nMada/M\nmadame/M\nMadame/MS\nmadam/SM\nmadcap/S\nMaddalena/M\nmadded\nmadden/GSD\nmaddening/Y\nMadden/M\nmadder/MS\nmaddest\nMaddie/M\nMaddi/M\nmadding\nMaddox/M\nMaddy/M\nmade/AU\nMadeira/SM\nMadelaine/M\nMadeleine/M\nMadelena/M\nMadelene/M\nMadelina/M\nMadeline/M\nMadelin/M\nMadella/M\nMadelle/M\nMadel/M\nMadelon/M\nMadelyn/M\nmademoiselle/MS\nMadge/M\nmadhouse/SM\nMadhya/M\nMadison/M\nMadlen/M\nMadlin/M\nmadman/M\nmadmen\nmadness/SM\nMadonna/MS\nmad/PSY\nMadras\nmadras/SM\nMadrid/M\nmadrigal/MSG\nMadsen/M\nMadurai/M\nmadwoman/M\nmadwomen\nMady/M\nMaegan/M\nMaelstrom/M\nmaelstrom/SM\nMae/M\nmaestro/MS\nMaeterlinck/M\nMafia/MS\nmafia/S\nmafiosi\nmafioso/M\nMafioso/S\nMAG\nmagazine/DSMG\nMagdaia/M\nMagdalena/M\nMagdalene/M\nMagdalen/M\nMagda/M\nMagellanic\nMagellan/M\nmagenta/MS\nmagged\nMaggee/M\nMaggie/M\nMaggi/M\nmagging\nmaggot/MS\nmaggoty/RT\nMaggy/M\nmagi\nmagical/Y\nmagician/MS\nmagicked\nmagicking\nmagic/SM\nMagill/M\nMagi/M\nMaginot/M\nmagisterial/Y\nmagistracy/MS\nmagistrate/MS\nMag/M\nmagma/SM\nmagnanimity/SM\nmagnanimosity\nmagnanimous/PY\nmagnate/SM\nmagnesia/MS\nmagnesite/M\nmagnesium/SM\nmagnetically\nmagnetic/S\nmagnetics/M\nmagnetism/SM\nmagnetite/SM\nmagnetizable\nmagnetization/ASCM\nmagnetize/CGDS\nmagnetized/U\nmagnetodynamics\nmagnetohydrodynamical\nmagnetohydrodynamics/M\nmagnetometer/MS\nmagneto/MS\nmagnetosphere/M\nmagnetron/M\nmagnet/SM\nmagnification/M\nmagnificence/SM\nmagnificent/Y\nmagnified/U\nmagnify/DRSGNXZ\nmagniloquence/MS\nmagniloquent\nMagnitogorsk/M\nmagnitude/SM\nmagnolia/SM\nMagnum\nmagnum/SM\nMagnuson/M\nMagog/M\nMagoo/M\nmagpie/SM\nMagritte/M\nMagruder/M\nmag/S\nMagsaysay/M\nMaguire/SM\nMagus/M\nMagyar/MS\nMahabharata\nMahala/M\nMahalia/M\nmaharajah/M\nmaharajahs\nmaharanee\'s\nmaharani/MS\nMaharashtra/M\nmaharishi/SM\nmahatma/SM\nMahavira/M\nMahayana/M\nMahayanist\nMahdi/M\nMahfouz/M\nMahican/SM\nmahjong\'s\nMahler/M\nMahmoud/M\nMahmud/M\nmahogany/MS\nMahomet\'s\nmahout/SM\nMaia/M\nMaible/M\nmaidenhair/MS\nmaidenhead/SM\nmaidenhood/SM\nmaidenly/P\nmaiden/YM\nmaidservant/MS\nmaid/SMNX\nmaier\nMaier/M\nMaiga/M\nMaighdiln/M\nMaigret/M\nmailbag/MS\nmailbox/MS\nmail/BSJGZMRD\nmailer/M\nMailer/M\nMaillol/M\nmaillot/SM\nmailman/M\nmailmen\nMaiman/M\nmaimedness/M\nmaimed/P\nmaimer/M\nMaimonides/M\nMai/MR\nmaim/SGZRD\nmainbrace/M\nMaine/MZR\nMainer/M\nmainframe/MS\nmainlander/M\nmainland/SRMZ\nmainliner/M\nmainline/RSDZG\nmainly\nmainmast/SM\nmain/SA\nmainsail/SM\nmains/M\nmainspring/SM\nmainstay/MS\nmainstream/DRMSG\nmaintainability\nmaintainable/U\nmaintain/BRDZGS\nmaintained/U\nmaintainer/M\nmaintenance/SM\nmaintop/SM\nmaiolica\'s\nMaire/M\nMair/M\nMaisey/M\nMaisie/M\nmaisonette/MS\nMaison/M\nMaitilde/M\nmaize/MS\nMaj\nMaje/M\nmajestic\nmajestically\nmajesty/MS\nMajesty/MS\nmajolica/SM\nMajorca/M\nmajor/DMGS\nmajordomo/S\nmajorette/SM\nmajority/SM\nMajor/M\nMajuro/M\nmakable\nMakarios/M\nmakefile/S\nmakeover/S\nMaker/M\nmaker/SM\nmakeshift/S\nmake/UGSA\nmakeup/MS\nmaking/SM\nMalabar/M\nMalabo/M\nMalacca/M\nMalachi/M\nmalachite/SM\nmaladapt/DV\nmaladjust/DLV\nmaladjustment/MS\nmaladministration\nmaladroitness/MS\nmaladroit/YP\nmalady/MS\nMalagasy/M\nmalaise/SM\nMala/M\nMalamud/M\nmalamute/SM\nMalanie/M\nmalaprop\nmalapropism/SM\nMalaprop/M\nmalarial\nmalaria/MS\nmalarious\nmalarkey/SM\nmalathion/S\nMalawian/S\nMalawi/M\nMalayalam/M\nMalaya/M\nMalayan/MS\nMalaysia/M\nMalaysian/S\nMalay/SM\nMalchy/M\nMalcolm/M\nmalcontentedness/M\nmalcontented/PY\nmalcontent/SMD\nMaldive/SM\nMaldivian/S\nMaldonado/M\nmaledict\nmalediction/MS\nmalefaction/MS\nmalefactor/MS\nmalefic\nmaleficence/MS\nmaleficent\nMale/M\nMalena/M\nmaleness/MS\nmale/PSM\nmalevolence/S\nmalevolencies\nmalevolent/Y\nmalfeasance/SM\nmalfeasant\nmalformation/MS\nmalformed\nmalfunction/SDG\nMalia/M\nMalian/S\nMalibu/M\nmalice/MGSD\nmaliciousness/MS\nmalicious/YU\nmalignancy/SM\nmalignant/YS\nmalign/GSRDYZ\nmalignity/MS\nMali/M\nMalina/M\nMalinda/M\nMalinde/M\nmalingerer/M\nmalinger/GZRDS\nMalinowski/M\nMalissa/M\nMalissia/M\nmallard/SM\nMallarm�/M\nmalleability/SM\nmalleableness/M\nmalleable/P\nmallet/MS\nMallissa/M\nMallorie/M\nMallory/M\nmallow/MS\nmall/SGMD\nMal/M\nmalnourished\nmalnutrition/SM\nmalocclusion/MS\nmalodorous\nMalone/M\nMalorie/M\nMalory/M\nmalposed\nmalpractice/SM\nMalraux/M\nMalta/M\nmalted/S\nMaltese\nMalthusian/S\nMalthus/M\nmalting/M\nmaltose/SM\nmaltreat/GDSL\nmaltreatment/S\nmalt/SGMD\nmalty/RT\nMalva/M\nMalvina/M\nMalvin/M\nMalynda/M\nmama/SM\nmamba/SM\nmambo/GSDM\nMame/M\nMamet/M\nma/MH\nMamie/M\nmammalian/SM\nmammal/SM\nmammary\nmamma\'s\nmammogram/S\nmammography/S\nMammon\'s\nmammon/SM\nmammoth/M\nmammoths\nmammy/SM\nMamore/M\nmanacle/SDMG\nmanageability/S\nmanageableness\nmanageable/U\nmanaged/U\nmanagement/SM\nmanageress/M\nmanagerial/Y\nmanager/M\nmanagership/M\nmanage/ZLGRSD\nManagua/M\nManama/M\nma�ana/M\nmananas\nManasseh/M\nmanatee/SM\nManaus\'s\nManchester/M\nManchu/MS\nManchuria/M\nManchurian/S\nMancini/M\nmanciple/M\nMancunian/MS\nmandala/SM\nMandalay/M\nManda/M\nmandamus/GMSD\nMandarin\nmandarin/MS\nmandate/SDMG\nmandatory/S\nMandela\nMandelbrot/M\nMandel/M\nmandible/MS\nmandibular\nMandie/M\nMandi/M\nMandingo/M\nmandolin/MS\nmandrake/MS\nmandrel/SM\nmandrill/SM\nMandy/M\nman�ge/GSD\nmane/MDS\nManet/M\nmaneuverability/MS\nmaneuverer/M\nmaneuver/MRDSGB\nManfred/M\nmanful/Y\nmanganese/MS\nmange/GMSRDZ\nmanger/M\nmanginess/S\nmangler/M\nmangle/RSDG\nmangoes\nmango/M\nmangrove/MS\nmangy/PRT\nmanhandle/GSD\nManhattan/SM\nmanhole/MS\nmanhood/MS\nmanhunt/SM\nmaniacal/Y\nmaniac/SM\nmania/SM\nmanically\nManichean/M\nmanic/S\nmanicure/MGSD\nmanicurist/SM\nmanifestation/SM\nmanifesto/GSDM\nmanifest/YDPGS\nmanifolder/M\nmanifold/GPYRDMS\nmanifoldness/M\nmanikin/MS\nManila/MS\nmanila/S\nmanilla\'s\nMani/M\nmanioc/SM\nmanipulability\nmanipulable\nmanipulate/SDXBVGN\nmanipulative/PM\nmanipulator/MS\nmanipulatory\nManitoba/M\nManitoulin/M\nManitowoc/M\nmankind/M\nMankowski/M\nManley/M\nmanlike\nmanliness/SM\nmanliness\'s/U\nmanly/URPT\nmanna/MS\nmanned/U\nmannequin/MS\nmannered/U\nmannerism/SM\nmannerist/M\nmannerliness/MU\nmannerly/UP\nmanner/SDYM\nMann/GM\nMannheim/M\nMannie/M\nmannikin\'s\nManning/M\nmanning/U\nmannishness/SM\nmannish/YP\nManny/M\nManolo/M\nMano/M\nmanometer/SM\nManon/M\nmanorial\nmanor/MS\nmanpower/SM\nmanqu�/M\nman\'s\nmansard/SM\nmanservant/M\nmanse/XNM\nMansfield/M\nmansion/M\nmanslaughter/SM\nMan/SM\nManson/M\nmans/S\nmanta/MS\nMantegna/M\nmantelpiece/MS\nmantel/SM\nmantes\nmantilla/MS\nmantissa/SM\nmantis/SM\nmantle/ESDG\nMantle/M\nmantle\'s\nmantling/M\nmantra/MS\nmantrap/SM\nmanual/SMY\nManuela/M\nManuel/M\nmanufacture/JZGDSR\nmanufacturer/M\nmanumission/MS\nmanumit/S\nmanumitted\nmanumitting\nmanure/RSDMZG\nmanuscript/MS\nman/USY\nManville/M\nManx\nmany\nManya/M\nMaoism/MS\nMaoist/S\nMao/M\nMaori/SM\nMaplecrest/M\nmaple/MS\nmapmaker/S\nmappable\nmapped/UA\nmapper/S\nmapping/MS\nMapplethorpe/M\nmaps/AU\nmap/SM\nMaputo/M\nMarabel/M\nmarabou/MS\nmarabout\'s\nMaracaibo/M\nmaraca/MS\nMara/M\nmaraschino/SM\nMarathi\nmarathoner/M\nMarathon/M\nmarathon/MRSZ\nMarat/M\nmarauder/M\nmaraud/ZGRDS\nmarbleize/GSD\nmarble/JRSDMG\nmarbler/M\nmarbling/M\nMarceau/M\nMarcela/M\nMarcelia/M\nMarcelino/M\nMarcella/M\nMarcelle/M\nMarcellina/M\nMarcelline/M\nMarcello/M\nMarcellus/M\nMarcel/M\nMarcelo/M\nMarchall/M\nMarchelle/M\nmarcher/M\nmarchioness/SM\nMarch/MS\nmarch/RSDZG\nMarcia/M\nMarciano/M\nMarcie/M\nMarcile/M\nMarcille/M\nMarci/M\nMarc/M\nMarconi/M\nMarco/SM\nMarcotte/M\nMarcus/M\nMarcy/M\nMardi/SM\nMarduk/M\nMareah/M\nmare/MS\nMarena/M\nMaren/M\nMaressa/M\nMargalit/M\nMargalo/M\nMarga/M\nMargareta/M\nMargarete/M\nMargaretha/M\nMargarethe/M\nMargaret/M\nMargaretta/M\nMargarette/M\nmargarine/MS\nMargarita/M\nmargarita/SM\nMargarito/M\nMargaux/M\nMargeaux/M\nMarge/M\nMargery/M\nMarget/M\nMargette/M\nMargie/M\nMargi/M\nmarginalia\nmarginality\nmarginalization\nmarginalize/SDG\nmarginal/YS\nmargin/GSDM\nMargit/M\nMargo/M\nMargot/M\nMargrethe/M\nMargret/M\nMarguerite/M\nMargy/M\nmariachi/SM\nmaria/M\nMaria/M\nMariam/M\nMariana/SM\nMarian/MS\nMarianna/M\nMarianne/M\nMariann/M\nMariano/M\nMaribelle/M\nMaribel/M\nMaribeth/M\nMaricela/M\nMarice/M\nMaridel/M\nMarieann/M\nMariejeanne/M\nMariele/M\nMarielle/M\nMariellen/M\nMariel/M\nMarie/M\nMarietta/M\nMariette/M\nMarigold/M\nmarigold/MS\nMarijn/M\nMarijo/M\nmarijuana/SM\nMarika/M\nMarilee/M\nMarilin/M\nMarillin/M\nMarilyn/M\nmarimba/SM\nMari/MS\nmarinade/MGDS\nMarina/M\nmarina/MS\nmarinara/SM\nmarinate/NGXDS\nmarination/M\nmariner/M\nMarine/S\nmarine/ZRS\nMarin/M\nMarinna/M\nMarino/M\nMario/M\nmarionette/MS\nMarion/M\nMariquilla/M\nMarisa/M\nMariska/M\nMarisol/M\nMarissa/M\nMaritain/M\nmarital/Y\nMarita/M\nmaritime/R\nMaritsa/M\nMaritza/M\nMariupol/M\nMarius/M\nMariya/M\nMarja/M\nMarje/M\nMarjie/M\nMarji/M\nMarj/M\nmarjoram/SM\nMarjorie/M\nMarjory/M\nMarjy/M\nMarkab/M\nmarkdown/SM\nmarked/AU\nmarkedly\nmarker/M\nmarketability/SM\nmarketable/U\nMarketa/M\nmarketeer/S\nmarketer/M\nmarket/GSMRDJBZ\nmarketing/M\nmarketplace/MS\nmark/GZRDMBSJ\nMarkham/M\nmarking/M\nMarkism/M\nmarkkaa\nmarkka/M\nMark/MS\nMarkos\nMarkov\nMarkovian\nMarkovitz/M\nmarks/A\nmarksman/M\nmarksmanship/S\nmarksmen\nmarkup/SM\nMarkus/M\nMarla/M\nMarlane/M\nMarlboro/M\nMarlborough/M\nMarleah/M\nMarlee/M\nMarleen/M\nMarlena/M\nMarlene/M\nMarley/M\nMarlie/M\nMarline/M\nmarlinespike/SM\nMarlin/M\nmarlin/SM\nmarl/MDSG\nMarlo/M\nMarlon/M\nMarlowe/M\nMarlow/M\nMarlyn/M\nMarmaduke/M\nmarmalade/MS\nMarmara/M\nmarmoreal\nmarmoset/MS\nmarmot/SM\nMarna/M\nMarne/M\nMarney/M\nMarnia/M\nMarnie/M\nMarni/M\nmaroon/GRDS\nmarquee/MS\nMarquesas/M\nmarque/SM\nmarquess/MS\nmarquetry/SM\nMarquette/M\nMarquez/M\nmarquise/M\nmarquisette/MS\nMarquis/M\nmarquis/SM\nMarquita/M\nMarrakesh/M\nmarred/U\nmarriageability/SM\nmarriageable\nmarriage/ASM\nmarried/US\nMarrilee/M\nmarring\nMarriott/M\nMarris/M\nMarrissa/M\nmarrowbone/MS\nmarrow/GDMS\nmarry/SDGA\nmar/S\nMarseillaise/SM\nMarseilles\nMarseille\'s\nmarshal/GMDRSZ\nMarshalled/M\nmarshaller\nMarshall/GDM\nMarshalling/M\nmarshallings\nMarshal/M\nMarsha/M\nmarshiness/M\nmarshland/MS\nMarsh/M\nmarshmallow/SM\nmarsh/MS\nmarshy/PRT\nMarsiella/M\nMar/SMN\nmarsupial/MS\nMartainn/M\nMarta/M\nMartelle/M\nMartel/M\nmarten/M\nMarten/M\nMartguerita/M\nMartha/M\nMarthe/M\nMarthena/M\nMartial\nmartial/Y\nMartian/S\nMartica/M\nMartie/M\nMarti/M\nMartina/M\nmartinet/SM\nMartinez/M\nmartingale/MS\nmartini/MS\nMartinique/M\nMartin/M\nMartino/M\nmartin/SM\nMartinson/M\nMartita/M\nmart/MDNGXS\nMart/MN\nMarty/M\nMartyn/M\nMartynne/M\nmartyrdom/SM\nmartyr/GDMS\nMarva/M\nmarvel/DGS\nMarvell/M\nmarvelous/PY\nMarve/M\nMarven/M\nMarvin/M\nMarv/NM\nMarwin/M\nMarxian/S\nMarxism/SM\nMarxist/SM\nMarx/M\nMarya/M\nMaryanna/M\nMaryanne/M\nMaryann/M\nMarybelle/M\nMarybeth/M\nMaryellen/M\nMaryjane/M\nMaryjo/M\nMaryland/MZR\nMarylee/M\nMarylinda/M\nMarylin/M\nMaryl/M\nMarylou/M\nMarylynne/M\nMary/M\nMaryrose/M\nMarys\nMarysa/M\nmarzipan/SM\nMasada/M\nMasai/M\nMasaryk/M\nmasc\nMascagni/M\nmascara/SGMD\nmascot/SM\nmasculineness/M\nmasculine/PYS\nmasculinity/SM\nMasefield/M\nmaser/M\nMaseru/M\nMASH\nMasha/M\nMashhad/M\nmash/JGZMSRD\nm/ASK\nmasked/U\nmasker/M\nmask/GZSRDMJ\nmasks/U\nmasochism/MS\nmasochistic\nmasochistically\nmasochist/MS\nmasonic\nMasonic\nMasonite/M\nmasonry/MS\nmason/SDMG\nMason/SM\nmasquerader/M\nmasquerade/RSDGMZ\nmasquer/M\nmasque/RSMZ\nMassachusetts/M\nmassacre/DRSMG\nmassager/M\nmassage/SRDMG\nMassasoit/M\nMassenet/M\nmasseur/MS\nmasseuse/SM\nMassey/M\nmassif/SM\nMassimiliano/M\nMassimo/M\nmassing/R\nmassiveness/SM\nmassive/YP\nmassless\nmas/SRZ\nMass/S\nmass/VGSD\nmastectomy/MS\nmasterclass\nmastered/A\nmasterfulness/M\nmasterful/YP\nmaster/JGDYM\nmasterliness/M\nmasterly/P\nmastermind/GDS\nmasterpiece/MS\nmastership/M\nMaster/SM\nmasterstroke/MS\nmasterwork/S\nmastery/MS\nmast/GZSMRD\nmasthead/SDMG\nmasticate/SDXGN\nmastication/M\nmastic/SM\nmastiff/MS\nmastodon/MS\nmastoid/S\nmasturbate/SDNGX\nmasturbation/M\nmasturbatory\nmatador/SM\nMata/M\nmatchable/U\nmatch/BMRSDZGJ\nmatchbook/SM\nmatchbox/SM\nmatched/UA\nmatcher/M\nmatches/A\nmatchless/Y\nmatchlock/MS\nmatchmake/GZJR\nmatchmaker/M\nmatchmaking/M\nmatchplay\nmatch\'s/A\nmatchstick/MS\nmatchwood/SM\nmated/U\nmate/IMS\nMatelda/M\nMateo/M\nmaterialism/SM\nmaterialistic\nmaterialistically\nmaterialist/SM\nmateriality/M\nmaterialization/SM\nmaterialize/CDS\nmaterialized/A\nmaterializer/SM\nmaterializes/A\nmaterializing\nmaterialness/M\nmaterial/SPYM\nmat�riel/MS\nmater/M\nmaternal/Y\nmaternity/MS\nmates/U\nmathematical/Y\nMathematica/M\nmathematician/SM\nmathematic/S\nmathematics/M\nMathematik/M\nMather/M\nMathe/RM\nMathew/MS\nMathewson/M\nMathian/M\nMathias\nMathieu/M\nMathilda/M\nMathilde/M\nMathis\nmath/M\nmaths\nMatias/M\nMatilda/M\nMatilde/M\nmatin�e/S\nmating/M\nmatins/M\nMatisse/SM\nmatriarchal\nmatriarch/M\nmatriarchs\nmatriarchy/MS\nmatrices\nmatricidal\nmatricide/MS\nmatriculate/XSDGN\nmatriculation/M\nmatrimonial/Y\nmatrimony/SM\nmatrix/M\nmatron/YMS\nmat/SJGMDR\nMatsumoto/M\nmatte/JGMZSRD\nMattel/M\nMatteo/M\nmatter/GDM\nMatterhorn/M\nMatthaeus/M\nMattheus/M\nMatthew/MS\nMatthias\nMatthieu/M\nMatthiew/M\nMatthus/M\nMattias/M\nMattie/M\nMatti/M\nmatting/M\nmattins\'s\nMatt/M\nmattock/MS\nmattress/MS\nmatt\'s\nMatty/M\nmaturate/DSNGVX\nmaturational\nmaturation/M\nmatureness/M\nmaturer/M\nmature/RSDTPYG\nmaturity/MS\nmatzo/SHM\nmatzot\nMaude/M\nMaudie/M\nmaudlin/Y\nMaud/M\nMaugham/M\nMaui/M\nmauler/M\nmaul/RDGZS\nmaunder/GDS\nMaupassant/M\nMaura/M\nMaureene/M\nMaureen/M\nMaure/M\nMaurene/M\nMauriac/M\nMaurice/M\nMauricio/M\nMaurie/M\nMaurine/M\nMaurise/M\nMaurita/M\nMauritania/M\nMauritanian/S\nMauritian/S\nMauritius/M\nMaurits/M\nMaurizia/M\nMaurizio/M\nMaurois/M\nMauro/M\nMaury/M\nMauser/M\nmausoleum/SM\nmauve/SM\nmaven/S\nmaverick/SMDG\nmavin\'s\nMavis/M\nMavra/M\nmawkishness/SM\nmawkish/PY\nMawr/M\nmaw/SGMD\nmax/GDS\nMaxie/M\nmaxillae\nmaxilla/M\nmaxillary/S\nMaxi/M\nmaximality\nmaximal/SY\nmaxima\'s\nMaximilian/M\nMaximilianus/M\nMaximilien/M\nmaximization/SM\nmaximizer/M\nmaximize/RSDZG\nMaxim/M\nMaximo/M\nmaxim/SM\nmaximum/MYS\nMaxine/M\nmaxi/S\nMax/M\nMaxtor/M\nMaxwellian\nmaxwell/M\nMaxwell/M\nMaxy/M\nMaya/MS\nMayan/S\nMaybelle/M\nmaybe/S\nmayday/S\nmay/EGS\nMaye/M\nmayer\nMayer/M\nmayest\nMayfair/M\nMayflower/M\nmayflower/SM\nmayfly/MS\nmayhap\nmayhem/MS\nMaynard/M\nMayne/M\nMaynord/M\nmayn\'t\nMayo/M\nmayonnaise/MS\nmayoral\nmayoralty/MS\nmayoress/MS\nMayor/M\nmayor/MS\nmayorship/M\nmayo/S\nmaypole/MS\nMaypole/SM\nMayra/M\nMay/SMR\nmayst\nMazama/M\nMazarin/M\nMazatlan/M\nMazda/M\nmazedness/SM\nmazed/YP\nmaze/MGDSR\nmazurka/SM\nMazzini/M\nMb\nMB\nMBA\nMbabane/M\nMbini/M\nMC\nMcAdam/MS\nMcAllister/M\nMcBride/M\nMcCabe/M\nMcCain/M\nMcCall/M\nMcCarthyism/M\nMcCarthy/M\nMcCartney/M\nMcCarty/M\nMcCauley/M\nMcClain/M\nMcClellan/M\nMcClure/M\nMcCluskey/M\nMcConnell/M\nMcCormick/M\nMcCoy/SM\nMcCracken/M\nMcCray/M\nMcCullough/M\nMcDaniel/M\nMcDermott/M\nMcDonald/M\nMcDonnell/M\nMcDougall/M\nMcDowell/M\nMcElhaney/M\nMcEnroe/M\nMcFadden/M\nMcFarland/M\nMcGee/M\nMcGill/M\nMcGovern/M\nMcGowan/M\nMcGrath/M\nMcGraw/M\nMcGregor/M\nMcGuffey/M\nMcGuire/M\nMCI/M\nMcIntosh/M\nMcIntyre/M\nMcKay/M\nMcKee/M\nMcKenzie/M\nMcKesson/M\nMcKinley/M\nMcKinney/M\nMcKnight/M\nMcLanahan/M\nMcLaughlin/M\nMcLean/M\nMcLeod/M\nMcLuhan/M\nMcMahon/M\nMcMartin/M\nMcMillan/M\nMcNamara/M\nMcNaughton/M\nMcNeil/M\nMcPherson/M\nMD\nMd/M\nmdse\nMDT\nME\nMeade/M\nMead/M\nmeadowland\nmeadowlark/SM\nmeadow/MS\nMeadows\nmeadowsweet/M\nmead/SM\nMeagan/M\nmeagerness/SM\nmeager/PY\nMeaghan/M\nmeagres\nmealiness/MS\nmeal/MDGS\nmealtime/MS\nmealybug/S\nmealymouthed\nmealy/PRST\nmeander/JDSG\nmeaneing\nmeanie/MS\nmeaningfulness/SM\nmeaningful/YP\nmeaninglessness/SM\nmeaningless/PY\nmeaning/M\nmeanness/S\nmeans/M\nmeantime/SM\nmeant/U\nmeanwhile/S\nMeany/M\nmean/YRGJTPS\nmeany\'s\nMeara/M\nmeasle/SD\nmeasles/M\nmeasly/TR\nmeasurable/U\nmeasurably\nmeasure/BLMGRSD\nmeasured/Y\nmeasureless\nmeasurement/SM\nmeasurer/M\nmeasures/A\nmeasuring/A\nmeas/Y\nmeataxe\nmeatball/MS\nmeatiness/MS\nmeatless\nmeatloaf\nmeatloaves\nmeat/MS\nmeatpacking/S\nmeaty/RPT\nMecca/MS\nmecca/S\nmechanical/YS\nmechanic/MS\nmechanism/SM\nmechanistic\nmechanistically\nmechanist/M\nmechanization/SM\nmechanized/U\nmechanizer/M\nmechanize/RSDZGB\nmechanizes/U\nmechanochemically\nMechelle/M\nmed\nmedalist/MS\nmedallion/MS\nmedal/SGMD\nMedan/M\nmeddle/GRSDZ\nmeddlesome\nMedea/M\nMedellin\nMedfield/M\nmediaeval\'s\nmedial/AY\nmedials\nmedian/YMS\nmedia/SM\nmediateness/M\nmediate/PSDYVNGX\nmediation/ASM\nmediator/SM\nMedicaid/SM\nmedical/YS\nmedicament/MS\nMedicare/MS\nmedicate/DSXNGV\nmedication/M\nMedici/MS\nmedicinal/SY\nmedicine/DSMG\nmedico/SM\nmedic/SM\nmedievalist/MS\nmedieval/YMS\nMedina/M\nmediocre\nmediocrity/MS\nmeditate/NGVXDS\nmeditation/M\nmeditativeness/M\nmeditative/PY\nMediterranean/MS\nmediumistic\nmedium/SM\nmedley/SM\nmedulla/SM\nMedusa/M\nmeed/MS\nmeekness/MS\nmeek/TPYR\nmeerschaum/MS\nmeeter/M\nmeetinghouse/S\nmeeting/M\nmeet/JGSYR\nme/G\nmega\nmegabit/MS\nmegabuck/S\nmegabyte/S\nmegacycle/MS\nmegadeath/M\nmegadeaths\nmegahertz/M\nmegalithic\nmegalith/M\nmegaliths\nmegalomaniac/SM\nmegalomania/SM\nmegalopolis/SM\nMegan/M\nmegaphone/SDGM\nmegaton/MS\nmegavolt/M\nmegawatt/SM\nmegaword/S\nMegen/M\nMeggie/M\nMeggi/M\nMeggy/M\nMeghan/M\nMeghann/M\nMeg/MN\nmegohm/MS\nMehetabel/M\nMeier/M\nMeighen/M\nMeiji/M\nMei/MR\nmeioses\nmeiosis/M\nmeiotic\nMeir/M\nMeister/M\nMeistersinger/M\nMejia/M\nMekong/M\nMela/M\nMelamie/M\nmelamine/SM\nmelancholia/SM\nmelancholic/S\nmelancholy/MS\nMelanesia/M\nMelanesian/S\nmelange/S\nMelania/M\nMelanie/M\nmelanin/MS\nmelanoma/SM\nMelantha/M\nMelany/M\nMelba/M\nMelbourne/M\nMelcher/M\nMelchior/M\nmeld/SGD\nm�l�e/MS\nMelendez/M\nMelesa/M\nMelessa/M\nMelicent/M\nMelina/M\nMelinda/M\nMelinde/M\nmeliorate/XSDVNG\nmelioration/M\nMelisa/M\nMelisande/M\nMelisandra/M\nMelisenda/M\nMelisent/M\nMelissa/M\nMelisse/M\nMelita/M\nMelitta/M\nMella/M\nMellicent/M\nMellie/M\nmellifluousness/SM\nmellifluous/YP\nMelli/M\nMellisa/M\nMellisent/M\nMelloney/M\nMellon/M\nmellowness/MS\nmellow/TGRDYPS\nMelly/M\nMel/MY\nMelodee/M\nmelodically\nmelodic/S\nMelodie/M\nmelodiousness/S\nmelodious/YP\nmelodrama/SM\nmelodramatically\nmelodramatic/S\nMelody/M\nmelody/MS\nMelonie/M\nmelon/MS\nMelony/M\nMelosa/M\nMelpomene/M\nmeltdown/S\nmelter/M\nmelting/Y\nMelton/M\nmelt/SAGD\nMelva/M\nMelville/M\nMelvin/M\nMelvyn/M\nMe/M\nmember/DMS\nmembered/AE\nmembers/EA\nmembership/SM\nmembrane/MSD\nmembranous\nmemento/SM\nMemling/M\nmemoir/MS\nmemorabilia\nmemorability/SM\nmemorableness/M\nmemorable/P\nmemorably\nmemorandum/SM\nmemorialize/DSG\nmemorialized/U\nmemorial/SY\nmemoriam\nmemorization/MS\nmemorized/U\nmemorizer/M\nmemorize/RSDZG\nmemorizes/A\nmemoryless\nmemory/MS\nmemo/SM\nMemphis/M\nmenace/GSD\nmenacing/Y\nmenagerie/SM\nmenage/S\nMenander/M\nmenarche/MS\nMenard/M\nMencius/M\nMencken/M\nmendaciousness/M\nmendacious/PY\nmendacity/MS\nMendeleev/M\nmendelevium/SM\nMendelian\nMendel/M\nMendelssohn/M\nmender/M\nMendez/M\nmendicancy/MS\nmendicant/S\nMendie/M\nmending/M\nMendocino/M\nMendoza/M\nmend/RDSJGZ\nMendy/M\nMenelaus/M\nMenes/M\nmenfolk/S\nmenhaden/M\nmenial/YS\nmeningeal\nmeninges\nmeningitides\nmeningitis/M\nmeninx\nmenisci\nmeniscus/M\nMenkalinan/M\nMenkar/M\nMenkent/M\nMenlo/M\nmen/MS\nMennonite/SM\nMenominee\nmenopausal\nmenopause/SM\nmenorah/M\nmenorahs\nMenotti/M\nMensa/M\nMensch/M\nmensch/S\nmenservants/M\nmens/SDG\nmenstrual\nmenstruate/NGDSX\nmenstruation/M\nmensurable/P\nmensuration/MS\nmenswear/M\nmentalist/MS\nmentality/MS\nmental/Y\nmentholated\nmenthol/SM\nmentionable/U\nmentioned/U\nmentioner/M\nmention/ZGBRDS\nmentor/DMSG\nMenuhin/M\nmenu/SM\nMenzies/M\nmeow/DSG\nMephistopheles/M\nMerak/M\nMercado/M\nmercantile\nMercator/M\nMercedes\nmercenariness/M\nmercenary/SMP\nmercerize/SDG\nMercer/M\nmercer/SM\nmerchandiser/M\nmerchandise/SRDJMZG\nmerchantability\nmerchantman/M\nmerchantmen\nmerchant/SBDMG\nMercie/M\nmercifully/U\nmercifulness/M\nmerciful/YP\nmercilessness/SM\nmerciless/YP\nMerci/M\nMerck/M\nmercurial/SPY\nmercuric\nMercurochrome/M\nmercury/MS\nMercury/MS\nMercy/M\nmercy/SM\nMeredeth/M\nMeredithe/M\nMeredith/M\nMerell/M\nmeretriciousness/SM\nmeretricious/YP\nmere/YS\nmerganser/MS\nmerger/M\nmerge/SRDGZ\nMeridel/M\nmeridian/MS\nmeridional\nMeridith/M\nMeriel/M\nMerilee/M\nMerill/M\nMerilyn/M\nmeringue/MS\nmerino/MS\nMeris\nMerissa/M\nmerited/U\nmeritocracy/MS\nmeritocratic\nmeritocrats\nmeritoriousness/MS\nmeritorious/PY\nmerit/SCGMD\nMeriwether/M\nMerla/M\nMerle/M\nMerlina/M\nMerline/M\nmerlin/M\nMerlin/M\nMerl/M\nmermaid/MS\nmerman/M\nmermen\nMerna/M\nMerola/M\nmeromorphic\nMerralee/M\nMerrel/M\nMerriam/M\nMerrick/M\nMerridie/M\nMerrielle/M\nMerrie/M\nMerrilee/M\nMerrile/M\nMerrili/M\nMerrill/M\nmerrily\nMerrily/M\nMerrimack/M\nMerrimac/M\nmerriment/MS\nmerriness/S\nMerritt/M\nMerry/M\nmerrymaker/MS\nmerrymaking/SM\nmerry/RPT\nMersey/M\nmer/TGDR\nMerton/M\nMervin/M\nMerv/M\nMerwin/M\nMerwyn/M\nMeryl/M\nMesa\nMesabi/M\nmesa/SM\nmescaline/SM\nmescal/SM\nmesdames/M\nmesdemoiselles/M\nMeshed\'s\nmeshed/U\nmesh/GMSD\nmesmeric\nmesmerism/SM\nmesmerized/U\nmesmerizer/M\nmesmerize/SRDZG\nMesolithic/M\nmesomorph/M\nmesomorphs\nmeson/MS\nMesopotamia/M\nMesopotamian/S\nmesosphere/MS\nmesozoic\nMesozoic\nmesquite/MS\nmes/S\nmessage/SDMG\nmesseigneurs\nmessenger/GSMD\nMesserschmidt/M\nmess/GSDM\nMessiaen/M\nmessiah\nMessiah/M\nmessiahs\nMessiahs\nmessianic\nMessianic\nmessieurs/M\nmessily\nmessiness/MS\nmessmate/MS\nMessrs/M\nmessy/PRT\nmestizo/MS\nmeta\nmetabolic\nmetabolically\nmetabolism/MS\nmetabolite/SM\nmetabolize/GSD\nmetacarpal/S\nmetacarpi\nmetacarpus/M\nmetacircular\nmetacircularity\nmetalanguage/MS\nmetalization/SM\nmetalized\nmetallic/S\nmetalliferous\nmetallings\nmetallography/M\nmetalloid/M\nmetallurgic\nmetallurgical/Y\nmetallurgist/S\nmetallurgy/MS\nmetal/SGMD\nmetalsmith/MS\nmetalworking/M\nmetalwork/RMJGSZ\nMeta/M\nmetamathematical\nmetamorphic\nmetamorphism/SM\nmetamorphose/GDS\nmetamorphosis/M\nmetaphoric\nmetaphorical/Y\nmetaphor/MS\nmetaphosphate/M\nmetaphysical/Y\nmetaphysic/SM\nmetastability/M\nmetastable\nmetastases\nmetastasis/M\nmetastasize/DSG\nmetastatic\nmetatarsal/S\nmetatarsi\nmetatarsus/M\nmetatheses\nmetathesis/M\nmetathesized\nmetathesizes\nmetathesizing\nmetavariable\nmetempsychoses\nmetempsychosis/M\nmeteoric\nmeteorically\nmeteorite/SM\nmeteoritic/S\nmeteoritics/M\nmeteoroid/SM\nmeteorologic\nmeteorological\nmeteorologist/S\nmeteorology/MS\nmeteor/SM\nmeter/GDM\nmete/ZDGSR\nmethadone/SM\nmethane/MS\nmethanol/SM\nmethinks\nmethionine/M\nmethodicalness/SM\nmethodical/YP\nmethodism\nMethodism/SM\nmethodist/MS\nMethodist/MS\nmethod/MS\nmethodological/Y\nmethodologists\nmethodology/MS\nmethought\nMethuen/M\nMethuselah/M\nMethuselahs\nmethylated\nmethylene/M\nmethyl/SM\nmeticulousness/MS\nmeticulous/YP\nm�tier/S\nmetonymy/M\nMetrecal/M\nmetrical/Y\nmetricate/SDNGX\nmetricize/GSD\nmetrics/M\nmetric/SM\nmetronome/MS\nmetropolis/SM\nmetropolitanization\nmetropolitan/S\nmetro/SM\nmets\nMetternich/M\nmettle/SDM\nmettlesome\nmet/U\nMetzler/M\nMeuse/M\nmewl/GSD\nmew/SGD\nmews/SM\nMex\nMexicali/M\nMexican/S\nMexico/M\nMeyerbeer/M\nMeyer/SM\nmezzanine/MS\nmezzo/S\nMFA\nmfg\nmfr/S\nmg\nM/GB\nMg/M\nMGM/M\nmgr\nMgr\nMHz\nMI\nMIA\nMia/M\nMiami/SM\nMiaplacidus/M\nmiasmal\nmiasma/SM\nMicaela/M\nMicah/M\nmica/MS\nmicelles\nmice/M\nMichaela/M\nMichaelangelo/M\nMichaelina/M\nMichaeline/M\nMichaella/M\nMichaelmas/MS\nMichael/SM\nMichaelson/M\nMichail/M\nMichale/M\nMichal/M\nMicheal/M\nMicheil/M\nMichelangelo/M\nMichele/M\nMichelina/M\nMicheline/M\nMichelin/M\nMichelle/M\nMichell/M\nMichel/M\nMichelson/M\nMichigander/S\nMichiganite/S\nMichigan/M\nMich/M\nMickelson/M\nMickey/M\nmickey/SM\nMickie/M\nMicki/M\nMick/M\nMicky/M\nMic/M\nMicmac/M\nmicra\'s\nmicroamp\nmicroanalysis/M\nmicroanalytic\nmicrobe/MS\nmicrobial\nmicrobicidal\nmicrobicide/M\nmicrobiological\nmicrobiologist/MS\nmicrobiology/SM\nmicrobrewery/S\nmicrochemistry/M\nmicrochip/S\nmicrocircuit/MS\nmicrocode/GSD\nmicrocomputer/MS\nmicrocosmic\nmicrocosm/MS\nmicrodensitometer\nmicrodot/MS\nmicroeconomic/S\nmicroeconomics/M\nmicroelectronic/S\nmicroelectronics/M\nmicrofiber/S\nmicrofiche/M\nmicrofilm/DRMSG\nmicrofossils\nmicrography/M\nmicrogroove/MS\nmicrohydrodynamics\nmicroinstruction/SM\nmicrojoule\nmicrolevel\nmicrolight/S\nmicromanage/GDSL\nmicromanagement/S\nmicrometeorite/MS\nmicrometeoritic\nmicrometer/SM\nMicronesia/M\nMicronesian/S\nmicron/MS\nmicroorganism/SM\nmicrophone/SGM\nMicroport/M\nmicroprocessing\nmicroprocessor/SM\nmicroprogrammed\nmicroprogramming\nmicroprogram/SM\nmicro/S\nmicroscope/SM\nmicroscopic\nmicroscopical/Y\nmicroscopy/MS\nmicrosecond/MS\nmicrosimulation/S\nMicrosystems\nmicros/M\nMicrosoft/M\nmicrosomal\nmicrostore\nmicrosurgery/SM\nMicroVAXes\nMicroVAX/M\nmicrovolt/SM\nmicrowaveable\nmicrowave/BMGSD\nmicroword/S\nmidair/MS\nmidas\nMidas/M\nmidband/M\nmidday/MS\nmidden/SM\nmiddest\nmiddlebrow/SM\nMiddlebury/M\nmiddle/GJRSD\nmiddleman/M\nmiddlemen\nmiddlemost\nMiddlesex/M\nMiddleton/M\nMiddletown/M\nmiddleweight/SM\nmiddling/Y\nmiddy/SM\nMideastern\nMideast/M\nmidfield/RM\nMidge/M\nmidge/SM\nmidget/MS\nmidi/S\nmidland/MRS\nMidland/MS\nmidlife\nmidlives\nmidmorn/G\nmidmost/S\nmidnight/SYM\nmidpoint/MS\nmidrange\nmidrib/MS\nmidriff/MS\nmid/S\nmidscale\nmidsection/M\nmidshipman/M\nmidshipmen\nmidship/S\nmidspan\nmidstream/MS\nmidst/SM\nmidsummer/MS\nmidterm/MS\nmidtown/MS\nMidway/M\nmidway/S\nmidweek/SYM\nMidwesterner/M\nMidwestern/ZR\nMidwest/M\nmidwicket\nmidwifery/SM\nmidwife/SDMG\nmidwinter/YMS\nmidwives\nmidyear/MS\nmien/M\nmiff/GDS\nmightily\nmightiness/MS\nmightn\'t\nmight/S\nmighty/TPR\nmignon\nmignonette/SM\nMignon/M\nMignonne/M\nmigraine/SM\nmigrant/MS\nmigrate/ASDG\nmigration/MS\nmigrative\nmigratory/S\nMIG/S\nMiguela/M\nMiguelita/M\nMiguel/M\nmikado/MS\nMikaela/M\nMikael/M\nmike/DSMG\nMikel/M\nMike/M\nMikey/M\nMikhail/M\nMikkel/M\nMikol/M\nMikoyan/M\nmilady/MS\nMilagros/M\nMilanese\nMilan/M\nmilch/M\nmildew/DMGS\nmildness/MS\nMildred/M\nMildrid/M\nmild/STYRNP\nmileage/SM\nMilena/M\nmilepost/SM\nmiler/M\nmile/SM\nMile/SM\nmilestone/MS\nMilford/M\nMilicent/M\nmilieu/SM\nMilissent/M\nmilitancy/MS\nmilitantness/M\nmilitant/YPS\nmilitarily\nmilitarism/SM\nmilitaristic\nmilitarist/MS\nmilitarization/SCM\nmilitarize/SDCG\nmilitary\nmilitate/SDG\nmilitiaman/M\nmilitiamen\nmilitia/SM\nMilka/M\nMilken/M\nmilker/M\nmilk/GZSRDM\nmilkiness/MS\nmilkmaid/SM\nmilkman/M\nmilkmen\nmilkshake/S\nmilksop/SM\nmilkweed/MS\nmilky/RPT\nmillage/S\nMillard/M\nMillay/M\nmillenarian\nmillenarianism/M\nmillennial\nmillennialism\nmillennium/MS\nmillepede\'s\nmiller/M\nMiller/M\nMillet/M\nmillet/MS\nmilliamp\nmilliampere/S\nmilliard/MS\nmillibar/MS\nMillicent/M\nmillidegree/S\nMillie/M\nmilligram/MS\nmillijoule/S\nMillikan/M\nmilliliter/MS\nMilli/M\nmillimeter/SM\nmilliner/SM\nmillinery/MS\nmilling/M\nmillionaire/MS\nmillion/HDMS\nmillionth/M\nmillionths\nmillipede/SM\nmillisecond/MS\nMillisent/M\nmillivoltmeter/SM\nmillivolt/SM\nmilliwatt/S\nmillpond/MS\nmillrace/SM\nmill/SGZMRD\nMill/SMR\nmillstone/SM\nmillstream/SM\nmillwright/MS\nMilly/M\nmil/MRSZ\nMil/MY\nMilne/M\nMilo/M\nMilquetoast/S\nmilquetoast/SM\nMiltiades/M\nMiltie/M\nMilt/M\nmilt/MDSG\nMiltonic\nMilton/M\nMiltown/M\nMilty/M\nMilwaukee/M\nMilzie/M\nMIMD\nmime/DSRMG\nmimeograph/GMDS\nmimeographs\nmimer/M\nmimesis/M\nmimetic\nmimetically\nmimicked\nmimicker/SM\nmimicking\nmimicry/MS\nmimic/S\nMimi/M\nmi/MNX\nMimosa/M\nmimosa/SM\nMina/M\nminaret/MS\nminatory\nmincemeat/MS\nmincer/M\nmince/SRDGZJ\nmincing/Y\nMinda/M\nMindanao/M\nmind/ARDSZG\nmindbogglingly\nminded/P\nminder/M\nmindfully\nmindfulness/MS\nmindful/U\nmindlessness/SM\nmindless/YP\nMindoro/M\nmin/DRZGJ\nmind\'s\nmindset/S\nMindy/M\nminefield/MS\nmineralization/C\nmineralized/U\nmineralogical\nmineralogist/SM\nmineralogy/MS\nmineral/SM\nminer/M\nMiner/M\nMinerva/M\nmineshaft\nmine/SNX\nminestrone/MS\nminesweeper/MS\nMinetta/M\nMinette/M\nmineworkers\nmingle/SDG\nMing/M\nMingus/M\nminiature/GMSD\nminiaturist/SM\nminiaturization/MS\nminiaturize/SDG\nminibike/S\nminibus/SM\nminicab/M\nminicam/MS\nminicomputer/SM\nminidress/SM\nminify/GSD\nminimalism/S\nminimalistic\nminimalist/MS\nminimality\nminimal/SY\nminima\'s\nminimax/M\nminimization/MS\nminimized/U\nminimizer/M\nminimize/RSDZG\nminim/SM\nminimum/MS\nmining/M\nminion/M\nmini/S\nminiseries\nminiskirt/MS\nministerial/Y\nminister/MDGS\nministrant/S\nministration/SM\nministry/MS\nminivan/S\nminiver/M\nminke\nmink/SM\nMin/MR\nMinna/M\nMinnaminnie/M\nMinneapolis/M\nMinne/M\nminnesinger/MS\nMinnesota/M\nMinnesotan/S\nMinnie/M\nMinni/M\nMinn/M\nMinnnie/M\nminnow/SM\nMinny/M\nMinoan/S\nMinolta/M\nminor/DMSG\nminority/MS\nMinor/M\nMinos\nMinotaur/M\nminotaur/S\nMinot/M\nminoxidil/S\nMinsk/M\nMinsky/M\nminster/SM\nminstrel/SM\nminstrelsy/MS\nmintage/SM\nMintaka/M\nMinta/M\nminter/M\nmint/GZSMRD\nminty/RT\nminuend/SM\nminuet/SM\nMinuit/M\nminuscule/SM\nminus/S\nminuteman\nMinuteman/M\nminutemen\nminuteness/SM\nminute/RSDPMTYG\nminutiae\nminutia/M\nminx/MS\nMiocene\nMIPS\nMiquela/M\nMirabeau/M\nMirabella/M\nMirabelle/M\nMirabel/M\nMirach/M\nmiracle/MS\nmiraculousness/M\nmiraculous/PY\nmirage/GSDM\nMira/M\nMiranda/M\nMiran/M\nMireielle/M\nMireille/M\nMirella/M\nMirelle/M\nmire/MGDS\nMirfak/M\nMiriam/M\nMirilla/M\nMir/M\nMirna/M\nMiro\nmirror/DMGS\nmirthfulness/SM\nmirthful/PY\nmirthlessness/M\nmirthless/YP\nmirth/M\nmirths\nMIRV/DSG\nmiry/RT\nMirzam/M\nmisaddress/SDG\nmisadventure/SM\nmisalign/DSGL\nmisalignment/MS\nmisalliance/MS\nmisanalysed\nmisanthrope/MS\nmisanthropic\nmisanthropically\nmisanthropist/S\nmisanthropy/SM\nmisapplier/M\nmisapply/GNXRSD\nmisapprehend/GDS\nmisapprehension/MS\nmisappropriate/GNXSD\nmisbegotten\nmisbehaver/M\nmisbehave/RSDG\nmisbehavior/SM\nmisbrand/DSG\nmisc\nmiscalculate/XGNSD\nmiscalculation/M\nmiscall/SDG\nmiscarriage/MS\nmiscarry/SDG\nmiscast/GS\nmiscegenation/SM\nmiscellanea\nmiscellaneous/PY\nmiscellany/MS\nMischa/M\nmischance/MGSD\nmischief/MDGS\nmischievousness/MS\nmischievous/PY\nmiscibility/S\nmiscible/C\nmisclassification/M\nmisclassified\nmisclassifying\nmiscode/SDG\nmiscommunicate/NDS\nmiscomprehended\nmisconceive/GDS\nmisconception/MS\nmisconduct/GSMD\nmisconfiguration\nmisconstruction/MS\nmisconstrue/DSG\nmiscopying\nmiscount/DGS\nmiscreant/MS\nmiscue/MGSD\nmisdeal/SG\nmisdealt\nmisdeed/MS\nmisdemeanant/SM\nmisdemeanor/SM\nmisdiagnose/GSD\nmisdid\nmisdirect/GSD\nmisdirection/MS\nmisdirector/S\nmisdoes\nmisdo/JG\nmisdone\nmiserableness/SM\nmiserable/SP\nmiserably\nmiser/KM\nmiserliness/MS\nmiserly/P\nmisery/MS\nmises/KC\nmisfeasance/MS\nmisfeature/M\nmisfield\nmisfile/SDG\nmisfire/SDG\nmisfit/MS\nmisfitted\nmisfitting\nmisfortune/SM\nmisgauge/GDS\nmisgiving/MYS\nmisgovern/LDGS\nmisgovernment/S\nmisguidance/SM\nmisguidedness/M\nmisguided/PY\nmisguide/DRSG\nmisguider/M\nMisha/M\nmishandle/SDG\nmishap/MS\nmishapped\nmishapping\nmisheard\nmishear/GS\nmishitting\nmishmash/SM\nmisidentification/M\nmisidentify/GNSD\nmisinformation/SM\nmisinform/GDS\nmisinterpretation/MS\nmisinterpreter/M\nmisinterpret/RDSZG\nmisjudge/DSG\nmisjudging/Y\nmisjudgment/MS\nMiskito\nmislabel/DSG\nmislaid\nmislay/GS\nmisleader/M\nmislead/GRJS\nmisleading/Y\nmisled\nmismanage/LGSD\nmismanagement/MS\nmismatch/GSD\nmisname/GSD\nmisnomer/GSMD\nmisogamist/MS\nmisogamy/MS\nmisogynistic\nmisogynist/MS\nmisogynous\nmisogyny/MS\nmisperceive/SD\nmisplace/GLDS\nmisplacement/MS\nmisplay/GSD\nmispositioned\nmisprint/SGDM\nmisprision/SM\nmispronounce/DSG\nmispronunciation/MS\nmisquotation/MS\nmisquote/GDS\nmisreader/M\nmisread/RSGJ\nmisrelated\nmisremember/DG\nmisreport/DGS\nmisrepresentation/MS\nmisrepresenter/M\nmisrepresent/SDRG\nmisroute/DS\nmisrule/SDG\nmissal/ESM\nmisshape/DSG\nmisshapenness/SM\nmisshapen/PY\nMissie/M\nmissile/MS\nmissilery/SM\nmission/AMS\nmissionary/MS\nmissioned\nmissioner/SM\nmissioning\nmissis\'s\nMississauga/M\nMississippian/S\nMississippi/M\nmissive/MS\nMissoula/M\nMissourian/S\nMissouri/M\nmisspeak/SG\nmisspecification\nmisspecified\nmisspelling/M\nmisspell/SGJD\nmisspend/GS\nmisspent\nmisspoke\nmisspoken\nmis/SRZ\nmiss/SDEGV\nMiss/SM\nmisstate/GLDRS\nmisstatement/MS\nmisstater/M\nmisstep/MS\nmisstepped\nmisstepping\nmissus/SM\nMissy/M\nmistakable/U\nmistake/BMGSR\nmistaken/Y\nmistaker/M\nmistaking/Y\nMistassini/M\nmister/GDM\nMister/SM\nmistily\nMisti/M\nmistime/GSD\nmistiness/S\nmistletoe/MS\nmist/MRDGZS\nmistook\nmistral/MS\nmistranslated\nmistranslates\nmistranslating\nmistranslation/SM\nmistreat/DGSL\nmistreatment/SM\nMistress/MS\nmistress/MSY\nmistrial/SM\nmistruster/M\nmistrustful/Y\nmistrust/SRDG\nMisty/M\nmistype/SDGJ\nmisty/PRT\nmisunderstander/M\nmisunderstanding/M\nmisunderstand/JSRZG\nmisunderstood\nmisuser/M\nmisuse/RSDMG\nmiswritten\nMitchael/M\nMitchell/M\nMitchel/M\nMitch/M\nmiterer/M\nmiter/GRDM\nmite/SRMZ\nMitford/M\nMithra/M\nMithridates/M\nmitigated/U\nmitigate/XNGVDS\nmitigation/M\nMIT/M\nmitoses\nmitosis/M\nmitotic\nMITRE/SM\nMitsubishi/M\nmitten/M\nMitterrand/M\nmitt/XSMN\nMitty/M\nMitzi/M\nmitzvahs\nmixable\nmix/AGSD\nmixed/U\nmixer/SM\nmixture/SM\nMizar/M\nmizzenmast/SM\nmizzen/MS\nMk\nmks\nml\nMlle/M\nmm\nMM\nMMe\nMme/SM\nMN\nmnemonically\nmnemonics/M\nmnemonic/SM\nMnemosyne/M\nMn/M\nMO\nmoan/GSZRDM\nmoat/SMDG\nmobbed\nmobber\nmobbing\nmobcap/SM\nMobile/M\nmobile/S\nmobility/MS\nmobilizable\nmobilization/AMCS\nmobilize/CGDS\nmobilized/U\nmobilizer/MS\nmobilizes/A\nMobil/M\nmob/MS\nmobster/MS\nMobutu/M\nmoccasin/SM\nmocha/SM\nmockers/M\nmockery/MS\nmock/GZSRD\nmockingbird/MS\nmocking/Y\nmo/CSK\nmodality/MS\nmodal/Y\nmodeled/A\nmodeler/M\nmodeling/M\nmodels/A\nmodel/ZGSJMRD\nmode/MS\nmodem/SM\nmoderated/U\nmoderateness/SM\nmoderate/PNGDSXY\nmoderation/M\nmoderator/MS\nmodernism/MS\nmodernistic\nmodernist/S\nmodernity/SM\nmodernization/MS\nmodernized/U\nmodernizer/M\nmodernize/SRDGZ\nmodernizes/U\nmodernness/SM\nmodern/PTRYS\nModesta/M\nModestia/M\nModestine/M\nModesto/M\nmodest/TRY\nModesty/M\nmodesty/MS\nmodicum/SM\nmodifiability/M\nmodifiableness/M\nmodifiable/U\nmodification/M\nmodified/U\nmodifier/M\nmodify/NGZXRSD\nModigliani/M\nmodishness/MS\nmodish/YP\nmod/TSR\nModula/M\nmodularity/SM\nmodularization\nmodularize/SDG\nmodular/SY\nmodulate/ADSNCG\nmodulation/CMS\nmodulator/ACSM\nmodule/SM\nmoduli\nmodulo\nmodulus/M\nmodus\nMoe/M\nMoen/M\nMogadiscio\'s\nMogadishu\nmogul/MS\nMogul/MS\nmohair/SM\nMohamed/M\nMohammad/M\nMohammedanism/MS\nMohammedan/SM\nMohammed\'s\nMohandas/M\nMohandis/M\nMohawk/MS\nMohegan/S\nMohican\'s\nMoho/M\nMohorovicic/M\nMohr/M\nmoiety/MS\nmoil/SGD\nMoina/M\nMoines/M\nMoira/M\nmoire/MS\nMoise/MS\nMoiseyev/M\nMoishe/M\nmoistener/M\nmoisten/ZGRD\nmoistness/MS\nmoist/TXPRNY\nmoisture/MS\nmoisturize/GZDRS\nMojave/M\nmolal\nmolarity/SM\nmolar/MS\nmolasses/MS\nMoldavia/M\nMoldavian/S\nmoldboard/SM\nmolder/DG\nmoldiness/SM\nmolding/M\nmold/MRDJSGZ\nMoldova\nmoldy/PTR\nmolecularity/SM\nmolecular/Y\nmolecule/MS\nmolehill/SM\nmole/MTS\nmoleskin/MS\nmolestation/SM\nmolested/U\nmolester/M\nmolest/RDZGS\nMoliere\nMolina/M\nMoline/M\nMollee/M\nMollie/M\nmollification/M\nmollify/XSDGN\nMolli/M\nMoll/M\nmoll/MS\nmollusc\'s\nmollusk/S\nmollycoddler/M\nmollycoddle/SRDG\nMolly/M\nmolly/SM\nMolnar/M\nMoloch/M\nMolokai/M\nMolotov/M\nmolter/M\nmolt/RDNGZS\nMoluccas\nmolybdenite/M\nmolybdenum/MS\nMombasa/M\nmomenta\nmomentarily\nmomentariness/SM\nmomentary/P\nmoment/MYS\nmomentousness/MS\nmomentous/YP\nmomentum/SM\nmomma/S\nMommy/M\nmommy/SM\nMo/MN\nmom/SM\nMonaco/M\nmonadic\nmonad/SM\nMonah/M\nMona/M\nmonarchic\nmonarchical\nmonarchism/MS\nmonarchistic\nmonarchist/MS\nmonarch/M\nmonarchs\nmonarchy/MS\nMonash/M\nmonastery/MS\nmonastical/Y\nmonasticism/MS\nmonastic/S\nmonaural/Y\nMondale/M\nMonday/MS\nMondrian/M\nMonegasque/SM\nMonera/M\nmonetarily\nmonetarism/S\nmonetarist/MS\nmonetary\nmonetization/CMA\nmonetize/CGADS\nMonet/M\nmoneybag/SM\nmoneychangers\nmoneyer/M\nmoneylender/SM\nmoneymaker/MS\nmoneymaking/MS\nmoney/SMRD\nMonfort/M\nmonger/SGDM\nMongolia/M\nMongolian/S\nMongolic/M\nmongolism/SM\nmongoloid/S\nMongoloid/S\nMongol/SM\nmongoose/SM\nmongrel/SM\nMonica/M\nmonies/M\nMonika/M\nmoniker/MS\nMonique/M\nmonism/MS\nmonist/SM\nmonition/SM\nmonitored/U\nmonitor/GSMD\nmonitory/S\nmonkeyshine/S\nmonkey/SMDG\nmonkish\nMonk/M\nmonk/MS\nmonkshood/SM\nMonmouth/M\nmonochromatic\nmonochromator\nmonochrome/MS\nmonocle/SDM\nmonoclinic\nmonoclonal/S\nmonocotyledonous\nmonocotyledon/SM\nmonocular/SY\nmonodic\nmonodist/S\nmonody/MS\nmonogamist/MS\nmonogamous/PY\nmonogamy/MS\nmonogrammed\nmonogramming\nmonogram/MS\nmonograph/GMDS\nmonographs\nmonolingualism\nmonolingual/S\nmonolithic\nmonolithically\nmonolith/M\nmonoliths\nmonologist/S\nmonologue/GMSD\nmonomaniacal\nmonomaniac/MS\nmonomania/MS\nmonomeric\nmonomer/SM\nmonomial/SM\nmono/MS\nMonongahela/M\nmononuclear\nmononucleoses\nmononucleosis/M\nmonophonic\nmonoplane/MS\nmonopole/S\nmonopolistic\nmonopolist/MS\nmonopolization/MS\nmonopolized/U\nmonopolize/GZDSR\nmonopolizes/U\nmonopoly/MS\nmonorail/SM\nmonostable\nmonosyllabic\nmonosyllable/MS\nmonotheism/SM\nmonotheistic\nmonotheist/S\nmonotone/SDMG\nmonotonic\nmonotonically\nmonotonicity\nmonotonousness/MS\nmonotonous/YP\nmonotony/MS\nmonovalent\nmonoxide/SM\nMonroe/M\nMonro/M\nMonrovia/M\nMonsanto/M\nmonseigneur\nmonsieur/M\nMonsignori\nMonsignor/MS\nmonsignor/S\nMon/SM\nmonsoonal\nmonsoon/MS\nmonster/SM\nmonstrance/ASM\nmonstrosity/SM\nmonstrousness/M\nmonstrous/YP\nmontage/SDMG\nMontague/M\nMontaigne/M\nMontana/M\nMontanan/MS\nMontcalm/M\nMontclair/M\nMonte/M\nMontenegrin\nMontenegro/M\nMonterey/M\nMonterrey/M\nMontesquieu/M\nMontessori/M\nMonteverdi/M\nMontevideo/M\nMontezuma\nMontgomery/M\nmonthly/S\nmonth/MY\nmonths\nMonticello/M\nMonti/M\nMont/M\nMontmartre/M\nMontoya/M\nMontpelier/M\nMontrachet/M\nMontreal/M\nMontserrat/M\nMonty/M\nmonumentality/M\nmonumental/Y\nmonument/DMSG\nmooch/ZSRDG\nmoodily\nmoodiness/MS\nmood/MS\nMoody/M\nmoody/PTR\nMoog\nmoo/GSD\nmoonbeam/SM\nMooney/M\nmoon/GDMS\nmoonless\nmoonlight/GZDRMS\nmoonlighting/M\nmoonlit\nMoon/M\nmoonscape/MS\nmoonshiner/M\nmoonshine/SRZM\nmoonshot/MS\nmoonstone/SM\nmoonstruck\nmoonwalk/SDG\nMoore/M\nmoor/GDMJS\nmooring/M\nMoorish\nmoorland/MS\nMoor/MS\nmoose/M\nmoot/RDGS\nmoped/MS\nmoper/M\nmope/S\nmopey\nmopier\nmopiest\nmopish\nmopped\nmoppet/MS\nmopping\nmop/SZGMDR\nmoraine/MS\nmorale/MS\nMorales/M\nmoralistic\nmoralistically\nmoralist/MS\nmorality/UMS\nmoralization/CS\nmoralize/CGDRSZ\nmoralled\nmoraller\nmoralling\nmoral/SMY\nMora/M\nMoran/M\nmorass/SM\nmoratorium/SM\nMoravia/M\nMoravian\nmoray/SM\nmorbidity/SM\nmorbidness/S\nmorbid/YP\nmordancy/MS\nmordant/GDYS\nMordecai/M\nMord/M\nMordred/M\nMordy/M\nmore/DSN\nMoreen/M\nMorehouse/M\nMoreland/M\nmorel/SM\nMore/M\nMorena/M\nMoreno/M\nmoreover\nMorey/M\nMorgana/M\nMorganica/M\nMorgan/MS\nMorganne/M\nmorgen/M\nMorgen/M\nmorgue/SM\nMorgun/M\nMoria/M\nMoriarty/M\nmoribundity/M\nmoribund/Y\nMorie/M\nMorin/M\nmorion/M\nMorison/M\nMorissa/M\nMorita/M\nMoritz/M\nMorlee/M\nMorley/M\nMorly/M\nMormonism/MS\nMormon/SM\nMorna/M\nmorning/MY\nmorn/SGJDM\nMoroccan/S\nMorocco/M\nmorocco/SM\nMoro/M\nmoronic\nmoronically\nMoroni/M\nmoron/SM\nmoroseness/MS\nmorose/YP\nmorpheme/DSMG\nmorphemic/S\nMorpheus/M\nmorph/GDJ\nmorphia/S\nmorphine/MS\nmorphism/MS\nmorphologic\nmorphological/Y\nmorphology/MS\nmorphophonemic/S\nmorphophonemics/M\nmorphs\nMorrie/M\nmorris\nMorris/M\nMorrison/M\nMorristown/M\nMorrow/M\nmorrow/MS\nMorry/M\nmorsel/GMDS\nMorse/M\nmortality/SM\nmortal/SY\nmortarboard/SM\nmortar/GSDM\nMorten/M\nmortgageable\nmortgagee/SM\nmortgage/MGDS\nmortgagor/SM\nmortice\'s\nmortician/SM\nMortie/M\nmortification/M\nmortified/Y\nmortifier/M\nmortify/DRSXGN\nMortimer/M\nmortise/MGSD\nMort/MN\nMorton/M\nmortuary/MS\nMorty/M\nMosaic\nmosaicked\nmosaicking\nmosaic/MS\nMoscone/M\nMoscow/M\nMoseley/M\nMoselle/M\nMose/MSR\nMoser/M\nmosey/SGD\nMoshe/M\nMoslem\'s\nMosley/M\nmosque/SM\nmosquitoes\nmosquito/M\nmos/S\nmossback/MS\nMossberg/M\nMoss/M\nmoss/SDMG\nmossy/SRT\nmost/SY\nMosul/M\nmote/ASCNK\nmotel/MS\nmote\'s\nmotet/SM\nmothball/DMGS\nmotherboard/MS\nmotherfucker/MS!\nmotherfucking/!\nmotherhood/SM\nmothering/M\nmotherland/SM\nmotherless\nmotherliness/MS\nmotherly/P\nmother/RDYMZG\nmoths\nmoth/ZMR\nmotif/MS\nmotile/S\nmotility/MS\nmotional/K\nmotioner/M\nmotion/GRDMS\nmotionlessness/S\nmotionless/YP\nmotion\'s/ACK\nmotions/K\nmotivated/U\nmotivate/XDSNGV\nmotivational/Y\nmotivation/M\nmotivator/S\nmotiveless\nmotive/MGSD\nmotley/S\nmotlier\nmotliest\nmot/MSV\nmotocross/SM\nmotorbike/SDGM\nmotorboat/MS\nmotorcade/MSDG\nmotorcar/MS\nmotorcycle/GMDS\nmotorcyclist/SM\nmotor/DMSG\nmotoring/M\nmotorist/SM\nmotorization/SM\nmotorize/DSG\nmotorized/U\nmotorman/M\nmotormen\nmotormouth\nmotormouths\nMotorola/M\nmotorway/SM\nMotown/M\nmottle/GSRD\nmottler/M\nMott/M\nmottoes\nmotto/M\nmoue/DSMG\nmoulder/DSG\nmoult/GSD\nmound/GMDS\nmountable\nmountaineering/M\nmountaineer/JMDSG\nmountainousness/M\nmountainous/PY\nmountainside/MS\nmountain/SM\nmountaintop/SM\nMountbatten/M\nmountebank/SGMD\nmounted/U\nmount/EGACD\nmounter/SM\nmounties\nMountie/SM\nmounting/MS\nMount/M\nmounts/AE\nmourner/M\nmournfuller\nmournfullest\nmournfulness/S\nmournful/YP\nmourning/M\nmourn/ZGSJRD\nmouser/M\nmouse/SRDGMZ\nmousetrapped\nmousetrapping\nmousetrap/SM\nmousiness/MS\nmousing/M\nmousse/MGSD\nMoussorgsky/M\nmousy/PRT\nMouthe/M\nmouthful/MS\nmouthiness/SM\nmouth/MSRDG\nmouthorgan\nmouthpiece/SM\nmouths\nmouthwash/SM\nmouthwatering\nmouthy/PTR\nMouton/M\nmouton/SM\nmovable/ASP\nmovableness/AM\nmove/ARSDGZB\nmoved/U\nmovement/SM\nmover/AM\nmoviegoer/S\nmovie/SM\nmoving/YS\nmower/M\nMowgli/M\nmowing/M\nmow/SDRZG\nmoxie/MS\nMoyer/M\nMoyna/M\nMoyra/M\nMozambican/S\nMozambique/M\nMozart/M\nMozelle/M\nMozes/M\nMozilla/M\nmozzarella/MS\nmp\nMP\nmpg\nmph\nMPH\nMRI\nMr/M\nMrs\nms\nM\'s\nMS\nMSG\nMsgr/M\nm\'s/K\nMs/S\nMST\nMSW\nmt\nMT\nmtg\nmtge\nMt/M\nMTS\nMTV\nMuawiya/M\nMubarak/M\nmuchness/M\nmuch/SP\nmucilage/MS\nmucilaginous\nmucker/M\nmuck/GRDMS\nmuckraker/M\nmuckrake/ZMDRSG\nmucky/RT\nmucosa/M\nmucous\nmucus/SM\nmudded\nmuddily\nmuddiness/SM\nmudding\nmuddle/GRSDZ\nmuddleheaded/P\nmuddlehead/SMD\nmuddler/M\nmuddy/TPGRSD\nmudflat/S\nmudguard/SM\nmudlarks\nmud/MS\nmudroom/S\nmudslide/S\nmudslinger/M\nmudslinging/M\nmudsling/JRGZ\nMueller/M\nMuenster\nmuenster/MS\nmuesli/M\nmuezzin/MS\nmuff/GDMS\nMuffin/M\nmuffin/SM\nmuffler/M\nmuffle/ZRSDG\nMufi/M\nMufinella/M\nmufti/MS\nMugabe/M\nmugged\nmugger/SM\nmugginess/S\nmugging/S\nmuggy/RPT\nmugshot/S\nmug/SM\nmugwump/MS\nMuhammadanism/S\nMuhammadan/SM\nMuhammad/M\nMuire/M\nMuir/M\nMukden/M\nmukluk/SM\nmulattoes\nmulatto/M\nmulberry/MS\nmulch/GMSD\nmulct/SDG\nMulder/M\nmule/MGDS\nmuleskinner/S\nmuleteer/MS\nmulishness/MS\nmulish/YP\nmullah/M\nmullahs\nmullein/MS\nMullen/M\nmuller/M\nMuller/M\nmullet/MS\nMulligan/M\nmulligan/SM\nmulligatawny/SM\nMullikan/M\nMullins\nmullion/MDSG\nmull/RDSG\nMultan/M\nmulti\nMultibus/M\nmulticellular\nmultichannel/M\nmulticollinearity/M\nmulticolor/SDM\nmulticolumn\nmulticomponent\nmulticomputer/MS\nMultics/M\nMULTICS/M\nmulticultural\nmulticulturalism/S\nmultidimensional\nmultidimensionality\nmultidisciplinary\nmultifaceted\nmultifamily\nmultifariousness/SM\nmultifarious/YP\nmultifigure\nmultiform\nmultifunction/D\nmultilateral/Y\nmultilayer\nmultilevel/D\nmultilingual\nmultilingualism/S\nmultimedia/S\nmultimegaton/M\nmultimeter/M\nmultimillionaire/SM\nmultinational/S\nmultinomial/M\nmultiphase\nmultiple/SM\nmultiplet/SM\nmultiplex/GZMSRD\nmultiplexor\'s\nmultipliable\nmultiplicand/SM\nmultiplication/M\nmultiplicative/YS\nmultiplicity/MS\nmultiplier/M\nmultiply/ZNSRDXG\nmultiprocess/G\nmultiprocessor/MS\nmultiprogram\nmultiprogrammed\nmultiprogramming/MS\nmultipurpose\nmultiracial\nmultistage\nmultistory/S\nmultisyllabic\nmultitasking/S\nmultitude/MS\nmultitudinousness/M\nmultitudinous/YP\nmultiuser\nmultivalent\nmultivalued\nmultivariate\nmultiversity/M\nmultivitamin/S\nmu/M\nmumbler/M\nmumbletypeg/S\nmumble/ZJGRSD\nMumford/M\nmummed\nmummer/SM\nmummery/MS\nmummification/M\nmummify/XSDGN\nmumming\nmum/MS\nmummy/GSDM\nmumps/M\nmuncher/M\nM�nchhausen/M\nmunchies\nMunch/M\nmunch/ZRSDG\nMuncie/M\nmundane/YSP\nMundt/M\nmunge/JGZSRD\nMunich/M\nmunicipality/SM\nmunicipal/YS\nmunificence/MS\nmunificent/Y\nmunition/SDG\nMunmro/M\nMunoz/M\nMunroe/M\nMunro/M\nmun/S\nMunsey/M\nMunson/M\nMunster/MS\nMuong/M\nmuon/M\nMuppet/M\nmuralist/SM\nmural/SM\nMurasaki/M\nMurat/M\nMurchison/M\nMurcia/M\nmurderer/M\nmurderess/S\nmurder/GZRDMS\nmurderousness/M\nmurderous/YP\nMurdoch/M\nMurdock/M\nMureil/M\nMurial/M\nmuriatic\nMurielle/M\nMuriel/M\nMurillo/M\nmurkily\nmurkiness/S\nmurk/TRMS\nmurky/RPT\nMurmansk/M\nmurmurer/M\nmurmuring/U\nmurmurous\nmurmur/RDMGZSJ\nMurphy/M\nmurrain/SM\nMurray/M\nMurrow/M\nMurrumbidgee/M\nMurry/M\nMurvyn/M\nmuscatel/MS\nMuscat/M\nmuscat/SM\nmusclebound\nmuscle/SDMG\nMuscovite/M\nmuscovite/MS\nMuscovy/M\nmuscularity/SM\nmuscular/Y\nmusculature/SM\nmuse\nMuse/M\nmuser/M\nmusette/SM\nmuseum/MS\nmus/GJDSR\nmusher/M\nmushiness/MS\nmush/MSRDG\nmushroom/DMSG\nmushy/PTR\nMusial/M\nmusicale/SM\nmusicality/SM\nmusicals\nmusical/YU\nmusician/MYS\nmusicianship/MS\nmusicked\nmusicking\nmusicological\nmusicologist/MS\nmusicology/MS\nmusic/SM\nmusing/Y\nMuskegon/M\nmuskeg/SM\nmuskellunge/SM\nmusketeer/MS\nmusketry/MS\nmusket/SM\nmusk/GDMS\nmuskie/M\nmuskiness/MS\nmuskmelon/MS\nmuskox/N\nmuskrat/MS\nmusky/RSPT\nMuslim/MS\nmuslin/MS\nmussel/MS\nMussolini/MS\nMussorgsky/M\nmuss/SDG\nmussy/RT\nmustache/DSM\nmustachio/MDS\nmustang/MS\nmustard/MS\nmuster/GD\nmustily\nmustiness/MS\nmustn\'t\nmust/RDGZS\nmust\'ve\nmusty/RPT\nmutability/SM\nmutableness/M\nmutable/P\nmutably\nmutagen/SM\nmutant/MS\nmutate/XVNGSD\nmutational/Y\nmutation/M\nmutator/S\nmuted/Y\nmuteness/S\nmute/PDSRBYTG\nmutilate/XDSNG\nmutilation/M\nmutilator/MS\nmutineer/SMDG\nmutinous/Y\nmutiny/MGSD\nMutsuhito/M\nmutterer/M\nmutter/GZRDJ\nmuttonchops\nmutton/SM\nmutt/ZSMR\nmutuality/S\nmutual/SY\nmuumuu/MS\nmuzak\nMuzak/SM\nMuzo/M\nmuzzled/U\nmuzzle/MGRSD\nmuzzler/M\nMVP\nMW\nMyanmar\nMycah/M\nMyca/M\nMycenaean\nMycenae/M\nMychal/M\nmycologist/MS\nmycology/MS\nmyelitides\nmyelitis/M\nMyer/MS\nmyers\nmylar\nMylar/S\nMyles/M\nMylo/M\nMy/M\nmyna/SM\nMynheer/M\nmyocardial\nmyocardium/M\nmyopia/MS\nmyopically\nmyopic/S\nMyrah/M\nMyra/M\nMyranda/M\nMyrdal/M\nmyriad/S\nMyriam/M\nMyrilla/M\nMyrle/M\nMyrlene/M\nmyrmidon/S\nMyrna/M\nMyron/M\nmyrrh/M\nmyrrhs\nMyrta/M\nMyrtia/M\nMyrtice/M\nMyrtie/M\nMyrtle/M\nmyrtle/SM\nMyrvyn/M\nMyrwyn/M\nmys\nmy/S\nmyself\nMysore/M\nmysteriousness/MS\nmysterious/YP\nmystery/MDSG\nmystical/Y\nmysticism/MS\nmystic/SM\nmystification/M\nmystifier/M\nmystify/CSDGNX\nmystifying/Y\nmystique/MS\nMyst/M\nmythic\nmythical/Y\nmyth/MS\nmythographer/SM\nmythography/M\nmythological/Y\nmythologist/MS\nmythologize/CSDG\nmythology/SM\nmyths\nN\nNAACP\nnabbed\nnabbing\nNabisco/M\nnabob/SM\nNabokov/M\nnab/S\nnacelle/SM\nnacho/S\nNaCl/M\nnacre/MS\nnacreous\nNada/M\nNadean/M\nNadeen/M\nNader/M\nNadia/M\nNadine/M\nnadir/SM\nNadiya/M\nNadya/M\nNady/M\nnae/VM\nNagasaki/M\nnagged\nnagger/S\nnagging/Y\nnag/MS\nNagoya/M\nNagpur/M\nNagy/M\nNahuatl/SM\nNahum/M\nnaiad/SM\nnaifs\nnailbrush/SM\nnailer/M\nnail/SGMRD\nNaipaul/M\nNair/M\nNairobi/M\nNaismith/M\nnaive/SRTYP\nnaivet�/SM\nnaivety/MS\nNakamura/M\nNakayama/M\nnakedness/MS\nnaked/TYRP\nNakoma/M\nNalani/M\nNa/M\nNamath/M\nnameable/U\nname/ADSG\nnamedrop\nnamedropping\nnamed\'s\nnamed/U\nnameless/PY\nnamely\nnameplate/MS\nnamer/SM\nname\'s\nnamesake/SM\nNamibia/M\nNamibian/S\nnaming/M\nNam/M\nNanak/M\nNana/M\nNananne/M\nNancee/M\nNance/M\nNancey/M\nNanchang/M\nNancie/M\nNanci/M\nNancy/M\nNanete/M\nNanette/M\nNanice/M\nNani/M\nNanine/M\nNanjing\nNanking\'s\nNan/M\nNannette/M\nNannie/M\nNanni/M\nNanny/M\nnanny/SDMG\nnanometer/MS\nNanon/M\nNanook/M\nnanosecond/SM\nNansen/M\nNantes/M\nNantucket/M\nNaoma/M\nNaomi/M\nnapalm/MDGS\nnape/SM\nNaphtali/M\nnaphthalene/MS\nnaphtha/SM\nNapier/M\nnapkin/SM\nNaples/M\nnapless\nNap/M\nNapoleonic\nnapoleon/MS\nNapoleon/MS\nnapped\nnapper/MS\nNappie/M\nnapping\nNappy/M\nnappy/TRSM\nnap/SM\nNara/M\nNarbonne/M\nnarc/DGS\nnarcissism/MS\nnarcissistic\nnarcissist/MS\nnarcissus/M\nNarcissus/M\nnarcoleptic\nnarcoses\nnarcosis/M\nnarcotic/SM\nnarcotization/S\nnarcotize/GSD\nNariko/M\nNari/M\nnark\'s\nNarmada/M\nNarragansett/M\nnarrate/VGNSDX\nnarration/M\nnarrative/MYS\nnarratology\nnarrator/SM\nnarrowing/P\nnarrowness/SM\nnarrow/RDYTGPS\nnarwhal/MS\nnary\nnasality/MS\nnasalization/MS\nnasalize/GDS\nnasal/YS\nNASA/MS\nnascence/ASM\nnascent/A\nNASDAQ\nNash/M\nNashua/M\nNashville/M\nNassau/M\nNasser/M\nnastily\nnastiness/MS\nnasturtium/SM\nnasty/TRSP\nnatal\nNatala/M\nNatalee/M\nNatale/M\nNatalia/M\nNatalie/M\nNatalina/M\nNataline/M\nnatalist\nnatality/M\nNatal/M\nNatalya/M\nNata/M\nNataniel/M\nNatasha/M\nNatassia/M\nNatchez\nnatch/S\nNate/XMN\nNathalia/M\nNathalie/M\nNathanael/M\nNathanial/M\nNathaniel/M\nNathanil/M\nNathan/MS\nnationalism/SM\nnationalistic\nnationalistically\nnationalist/MS\nnationality/MS\nnationalization/MS\nnationalize/CSDG\nnationalized/AU\nnationalizer/SM\nnational/YS\nnationhood/SM\nnation/MS\nnationwide\nnativeness/M\nnative/PYS\nNatividad/M\nNativity/M\nnativity/MS\nNatka/M\nnatl\nNat/M\nNATO/SM\nnatter/SGD\nnattily\nnattiness/SM\nNatty/M\nnatty/TRP\nnaturalism/MS\nnaturalistic\nnaturalist/MS\nnaturalization/SM\nnaturalized/U\nnaturalize/GSD\nnaturalness/US\nnatural/PUY\nnaturals\nnature/ASDCG\nnature\'s\nnaturist\nNaugahyde/S\nnaughtily\nnaughtiness/SM\nnaught/MS\nnaughty/TPRS\nNaur/M\nNauru/M\nnausea/SM\nnauseate/DSG\nnauseating/Y\nnauseousness/SM\nnauseous/P\nnautical/Y\nnautilus/MS\nNavaho\'s\nNavajoes\nNavajo/S\nnaval/Y\nNavarro/M\nnavel/MS\nnave/SM\nnavigability/SM\nnavigableness/M\nnavigable/P\nnavigate/DSXNG\nnavigational\nnavigation/M\nnavigator/MS\nNavona/M\nNavratilova/M\nnavvy/M\nNavy/S\nnavy/SM\nnay/MS\nnaysayer/S\nNazarene/MS\nNazareth/M\nNazi/SM\nNazism/S\nNB\nNBA\nNBC\nNb/M\nNBS\nNC\nNCAA\nNCC\nNCO\nNCR\nND\nN\'Djamena\nNdjamena/M\nNd/M\nNe\nNE\nNeala/M\nNeale/M\nNeall/M\nNeal/M\nNealon/M\nNealson/M\nNealy/M\nNeanderthal/S\nneap/DGS\nNeapolitan/SM\nnearby\nnearly/RT\nnearness/MS\nnearside/M\nnearsightedness/S\nnearsighted/YP\nnear/TYRDPSG\nneaten/DG\nneath\nneatness/MS\nneat/YRNTXPS\nNeb/M\nNebraska/M\nNebraskan/MS\nNebr/M\nNebuchadnezzar/MS\nnebulae\nnebula/M\nnebular\nnebulousness/SM\nnebulous/PY\nnecessaries\nnecessarily/U\nnecessary/U\nnecessitate/DSNGX\nnecessitation/M\nnecessitous\nnecessity/SM\nneckband/M\nneckerchief/MS\nneck/GRDMJS\nnecking/M\nnecklace/DSMG\nneckline/MS\nnecktie/MS\nnecrology/SM\nnecromancer/MS\nnecromancy/MS\nnecromantic\nnecrophiliac/S\nnecrophilia/M\nnecropolis/SM\nnecropsy/M\nnecroses\nnecrosis/M\nnecrotic\nnectarine/SM\nnectarous\nnectar/SM\nnectary/MS\nNeda/M\nNedda/M\nNeddie/M\nNeddy/M\nNedi/M\nNed/M\nn�e\nneeded/U\nneeder/M\nneedful/YSP\nNeedham/M\nneediness/MS\nneedlecraft/M\nneedle/GMZRSD\nneedlepoint/SM\nneedlessness/S\nneedless/YP\nneedlewoman/M\nneedlewomen\nneedlework/RMS\nneedn\'t\nneed/YRDGS\nneedy/TPR\nNeel/M\nNeely/M\nne\'er\nnefariousness/MS\nnefarious/YP\nNefen/M\nNefertiti/M\nnegated/U\nnegater/M\nnegate/XRSDVNG\nnegation/M\nnegativeness/SM\nnegative/PDSYG\nnegativism/MS\nnegativity/MS\nnegator/MS\nNegev/M\nneglecter/M\nneglectfulness/SM\nneglectful/YP\nneglect/SDRG\nnegligee/SM\nnegligence/MS\nnegligent/Y\nnegligibility/M\nnegligible\nnegligibly\nnegotiability/MS\nnegotiable/A\nnegotiant/M\nnegotiate/ASDXGN\nnegotiation/MA\nnegotiator/MS\nNegress/MS\nnegritude/MS\nNegritude/S\nNegroes\nnegroid\nNegroid/S\nNegro/M\nneg/S\nNehemiah/M\nNehru/M\nneighbored/U\nneighborer/M\nneighborhood/SM\nneighborlinesses\nneighborliness/UM\nneighborly/UP\nneighbor/SMRDYZGJ\nneigh/MDG\nneighs\nNeila/M\nNeile/M\nNeilla/M\nNeille/M\nNeill/M\nNeil/SM\nneither\nNelda/M\nNelia/M\nNelie/M\nNelle/M\nNellie/M\nNelli/M\nNell/M\nNelly/M\nNelsen/M\nNels/N\nNelson/M\nnelson/MS\nnematic\nnematode/SM\nNembutal/M\nnemeses\nnemesis\nNemesis/M\nneoclassical\nneoclassicism/MS\nneoclassic/M\nneocolonialism/MS\nneocortex/M\nneodymium/MS\nNeogene\nneolithic\nNeolithic/M\nneologism/SM\nneomycin/M\nneonatal/Y\nneonate/MS\nneon/DMS\nneophyte/MS\nneoplasm/SM\nneoplastic\nneoprene/SM\nNepalese\nNepali/MS\nNepal/M\nnepenthe/MS\nnephew/MS\nnephrite/SM\nnephritic\nnephritides\nnephritis/M\nnepotism/MS\nnepotist/S\nNeptune/M\nneptunium/MS\nnerd/S\nnerdy/RT\nNereid/M\nNerf/M\nNerissa/M\nNerita/M\nNero/M\nNeron/M\nNerta/M\nNerte/M\nNertie/M\nNerti/M\nNert/M\nNerty/M\nNeruda/M\nnervelessness/SM\nnerveless/YP\nnerve\'s\nnerve/UGSD\nnerviness/SM\nnerving/M\nnervousness/SM\nnervous/PY\nnervy/TPR\nNessa/M\nNessie/M\nNessi/M\nNessy/M\nNesta/M\nnester/M\nNester/M\nNestle/M\nnestler/M\nnestle/RSDG\nnestling/M\nNestorius/M\nNestor/M\nnest/RDGSBM\nnetball/M\nnether\nNetherlander/SM\nNetherlands/M\nnethermost\nnetherworld/S\nNetscape/M\nnet/SM\nNetta/M\nNettie/M\nNetti/M\nnetting/M\nnett/JGRDS\nNettle/M\nnettle/MSDG\nnettlesome\nNetty/M\nnetwork/SJMDG\nNetzahualcoyotl/M\nNeumann/M\nneuralgia/MS\nneuralgic\nneural/Y\nneurasthenia/MS\nneurasthenic/S\nneuritic/S\nneuritides\nneuritis/M\nneuroanatomy\nneurobiology/M\nneurological/Y\nneurologist/MS\nneurology/SM\nneuromuscular\nneuronal\nneurone/S\nneuron/MS\nneuropathology/M\nneurophysiology/M\nneuropsychiatric\nneuroses\nneurosis/M\nneurosurgeon/MS\nneurosurgery/SM\nneurotically\nneurotic/S\nneurotransmitter/S\nneuter/JZGRD\nneutralise\'s\nneutralism/MS\nneutralist/S\nneutrality/MS\nneutralization/MS\nneutralized/U\nneutralize/GZSRD\nneutral/PYS\nneutrino/MS\nneutron/MS\nneut/ZR\nNevada/M\nNevadan/S\nNevadian/S\nNeva/M\nnever\nnevermore\nnevertheless\nnevi\nNevile/M\nNeville/M\nNevil/M\nNevin/SM\nNevis/M\nNev/M\nNevsa/M\nNevsky/M\nnevus/M\nNewark/M\nnewbie/S\nnewborn/S\nNewbury/M\nNewburyport/M\nNewcastle/M\nnewcomer/MS\nnewed/A\nNewell/M\nnewel/MS\nnewer/A\nnewfangled\nnewfound\nnewfoundland\nNewfoundlander/M\nNewfoundland/SRMZ\nnewish\nnewline/SM\nnewlywed/MS\nNewman/M\nnewness/MS\nNewport/M\nnews/A\nnewsagent/MS\nnewsboy/SM\nnewscaster/M\nnewscasting/M\nnewscast/SRMGZ\nnewsdealer/MS\nnewsed\nnewses\nnewsflash/S\nnewsgirl/S\nnewsgroup/SM\nnewsing\nnewsletter/SM\nNeWS/M\nnewsman/M\nnewsmen\nnewspaperman/M\nnewspapermen\nnewspaper/SMGD\nnewspaperwoman/M\nnewspaperwomen\nnewsprint/MS\nnew/SPTGDRY\nnewsreader/MS\nnewsreel/SM\nnewsroom/S\nnews\'s\nnewsstand/MS\nNewsweekly/M\nnewsweekly/S\nNewsweek/MY\nnewswire\nnewswoman/M\nnewswomen\nnewsworthiness/SM\nnewsworthy/RPT\nnewsy/TRS\nnewt/MS\nNewtonian\nNewton/M\nnewton/SM\nNexis/M\nnext\nnexus/SM\nNeysa/M\nNF\nNFC\nNFL\nNFS\nNgaliema/M\nNguyen/M\nNH\nNHL\nniacin/SM\nNiagara/M\nNiall/M\nNial/M\nNiamey/M\nnibbed\nnibbing\nnibbler/M\nnibble/RSDGZ\nNibelung/M\nnib/SM\nNicaean\nNicaragua/M\nNicaraguan/S\nNiccolo/M\nNice/M\nNicene\nniceness/MS\nnicety/MS\nnice/YTPR\nniche/SDGM\nNicholas\nNichole/M\nNicholle/M\nNichol/MS\nNicholson/M\nnichrome\nnickelodeon/SM\nnickel/SGMD\nnicker/GD\nNickey/M\nnick/GZRDMS\nNickie/M\nNicki/M\nNicklaus/M\nNick/M\nnicknack\'s\nnickname/MGDRS\nnicknamer/M\nNickolai/M\nNickola/MS\nNickolaus/M\nNicko/M\nNicky/M\nNicobar/M\nNicodemus/M\nNicolai/MS\nNicola/MS\nNicolea/M\nNicole/M\nNicolette/M\nNicoli/MS\nNicolina/M\nNicoline/M\nNicolle/M\nNicol/M\nNico/M\nNicosia/M\nnicotine/MS\nNiebuhr/M\nniece/MS\nNiel/MS\nNielsen/M\nNiels/N\nNielson/M\nNietzsche/M\nNieves/M\nnifty/TRS\nNigel/M\nNigeria/M\nNigerian/S\nNigerien\nNiger/M\nniggardliness/SM\nniggardly/P\nniggard/SGMDY\nnigger/SGDM!\nniggler/M\nniggle/RSDGZJ\nniggling/Y\nnigh/RDGT\nnighs\nnightcap/SM\nnightclothes\nnightclubbed\nnightclubbing\nnightclub/MS\nnightdress/MS\nnightfall/SM\nnightgown/MS\nnighthawk/MS\nnightie/MS\nNightingale/M\nnightingale/SM\nnightlife/MS\nnightlong\nnightmare/MS\nnightmarish/Y\nnightshade/SM\nnightshirt/MS\nnight/SMYDZ\nnightspot/MS\nnightstand/SM\nnightstick/S\nnighttime/S\nnightwear/M\nnighty\'s\nNIH\nnihilism/MS\nnihilistic\nnihilist/MS\nNijinsky/M\nNikaniki/M\nNike/M\nNiki/M\nNikita/M\nNikkie/M\nNikki/M\nNikko/M\nNikolai/M\nNikola/MS\nNikolaos/M\nNikolaus/M\nNikolayev\'s\nNikoletta/M\nNikolia/M\nNikolos/M\nNiko/MS\nNikon/M\nNile/SM\nnilled\nnilling\nNil/MS\nnil/MYS\nnilpotent\nNilsen/M\nNils/N\nNilson/M\nNilsson/M\nNi/M\nnimbi\nnimbleness/SM\nnimble/TRP\nnimbly\nnimbus/DM\nNIMBY\nNimitz/M\nNimrod/MS\nNina/M\nnincompoop/MS\nninefold\nnine/MS\nninepence/M\nninepin/S\nninepins/M\nnineteen/SMH\nnineteenths\nninetieths\nNinetta/M\nNinette/M\nninety/MHS\nNineveh/M\nninja/S\nNinnetta/M\nNinnette/M\nninny/SM\nNinon/M\nNintendo/M\nninth\nninths\nNiobe/M\nniobium/MS\nnipped\nnipper/DMGS\nnippiness/S\nnipping/Y\nnipple/GMSD\nNipponese\nNippon/M\nnippy/TPR\nnip/S\nNirenberg/M\nnirvana/MS\nNirvana/S\nnisei\nNisei/MS\nNissa/M\nNissan/M\nNisse/M\nNissie/M\nNissy/M\nNita/M\nniter/M\nnitpick/DRSJZG\nnitrate/MGNXSD\nnitration/M\nnitric\nnitride/MGS\nnitriding/M\nnitrification/SM\nnitrite/MS\nnitrocellulose/MS\nnitrogenous\nnitrogen/SM\nnitroglycerin/MS\nnitrous\nnitwit/MS\nnit/ZSMR\nNiven/M\nnixer/M\nnix/GDSR\nNixie/M\nNixon/M\nNJ\nNkrumah/M\nNLRB\nnm\nNM\nno/A\nNOAA\nNoach/M\nNoah/M\nNoak/M\nNoami/M\nNoam/M\nNobelist/SM\nnobelium/MS\nNobel/M\nNobe/M\nNobie/M\nnobility/MS\nNoble/M\nnobleman/M\nnoblemen\nnobleness/SM\nnoblesse/M\nnoble/TPSR\nnoblewoman\nnoblewomen\nnob/MY\nnobody/MS\nNoby/M\nnocturnal/SY\nnocturne/SM\nnodal/Y\nnodded\nnodding\nnoddle/MSDG\nnoddy/M\nnode/MS\nNoDoz/M\nnod/SM\nnodular\nnodule/SM\nNoelani/M\nNoella/M\nNoelle/M\nNoell/M\nNoellyn/M\nNoel/MS\nnoel/S\nNoelyn/M\nNoe/M\nNoemi/M\nnoes/S\nnoggin/SM\nnohow\nnoise/GMSD\nnoiselessness/SM\nnoiseless/YP\nnoisemaker/M\nnoisemake/ZGR\nnoisily\nnoisiness/MS\nnoisome\nnoisy/TPR\nNola/M\nNolana/M\nNoland/M\nNolan/M\nNolie/M\nNollie/M\nNoll/M\nNolly/M\nNo/M\nnomadic\nnomad/SM\nNome/M\nnomenclature/MS\nNomi/M\nnominalized\nnominal/K\nnominally\nnominals\nnominate/CDSAXNG\nnomination/MAC\nnominative/SY\nnominator/CSM\nnominee/MS\nnon\nnonabrasive\nnonabsorbent/S\nnonacademic/S\nnonacceptance/MS\nnonacid/MS\nnonactive\nnonadaptive\nnonaddictive\nnonadhesive\nnonadjacent\nnonadjustable\nnonadministrative\nnonage/MS\nnonagenarian/MS\nnonaggression/SM\nnonagricultural\nNonah/M\nnonalcoholic/S\nnonaligned\nnonalignment/SM\nnonallergic\nNona/M\nnonappearance/MS\nnonassignable\nnonathletic\nnonattendance/SM\nnonautomotive\nnonavailability/SM\nnonbasic\nnonbeliever/SM\nnonbelligerent/S\nnonblocking\nnonbreakable\nnonburnable\nnonbusiness\nnoncaloric\nnoncancerous\nnoncarbohydrate/M\nnonce/MS\nnonchalance/SM\nnonchalant/YP\nnonchargeable\nnonclerical/S\nnonclinical\nnoncollectable\nnoncombatant/MS\nnoncombustible/S\nnoncommercial/S\nnoncommissioned\nnoncommittal/Y\nnoncom/MS\nnoncommunicable\nnoncompeting\nnoncompetitive\nnoncompliance/MS\nnoncomplying/S\nnoncomprehending\nnonconducting\nnonconductor/MS\nnonconforming\nnonconformist/SM\nnonconformity/SM\nnonconsecutive\nnonconservative\nnonconstructive\nnoncontagious\nnoncontiguous\nnoncontinuous\nnoncontributing\nnoncontributory\nnoncontroversial\nnonconvertible\nnoncooperation/SM\nnoncorroding/S\nnoncorrosive\nnoncredit\nnoncriminal/S\nnoncritical\nnoncrystalline\nnoncumulative\nnoncustodial\nnoncyclic\nnondairy\nnondecreasing\nnondeductible\nnondelivery/MS\nnondemocratic\nnondenominational\nnondepartmental\nnondepreciating\nnondescript/YS\nnondestructive/Y\nnondetachable\nnondeterminacy\nnondeterminate/Y\nnondeterminism\nnondeterministic\nnondeterministically\nnondisciplinary\nnondisclosure/SM\nnondiscrimination/SM\nnondiscriminatory\nnondramatic\nnondrinker/SM\nnondrying\nnondurable\nnoneconomic\nnoneducational\nnoneffective/S\nnonelastic\nnonelectrical\nnonelectric/S\nnonemergency\nnonempty\nnonenforceable\nnonentity/MS\nnonequivalence/M\nnonequivalent/S\nnone/S\nnones/M\nnonessential/S\nnonesuch/SM\nnonetheless\nnonevent/MS\nnonexchangeable\nnonexclusive\nnonexempt\nnonexistence/MS\nnonexistent\nnonexplosive/S\nnonextensible\nnonfactual\nnonfading\nnonfat\nnonfatal\nnonfattening\nnonferrous\nnonfictional\nnonfiction/SM\nnonflammable\nnonflowering\nnonfluctuating\nnonflying\nnonfood/M\nnonfreezing\nnonfunctional\nnongovernmental\nnongranular\nnonhazardous\nnonhereditary\nnonhuman\nnonidentical\nNonie/M\nNoni/M\nnoninclusive\nnonindependent\nnonindustrial\nnoninfectious\nnoninflammatory\nnoninflationary\nnoninflected\nnonintellectual/S\nnoninteracting\nnoninterchangeable\nnoninterference/MS\nnonintervention/SM\nnonintoxicating\nnonintuitive\nnoninvasive\nnonionic\nnonirritating\nnonjudgmental\nnonjudicial\nnonlegal\nnonlethal\nnonlinearity/MS\nnonlinear/Y\nnonlinguistic\nnonliterary\nnonliving\nnonlocal\nnonmagical\nnonmagnetic\nnonmalignant\nnonmember/SM\nnonmetallic\nnonmetal/MS\nnonmigratory\nnonmilitant/S\nnonmilitary\nNonnah/M\nNonna/M\nnonnarcotic/S\nnonnative/S\nnonnegative\nnonnegotiable\nnonnuclear\nnonnumerical/S\nnonobjective\nnonobligatory\nnonobservance/MS\nnonobservant\nnonoccupational\nnonoccurence\nnonofficial\nnonogenarian\nnonoperational\nnonoperative\nnonorthogonal\nnonorthogonality\nnonparallel/S\nnonparametric\nnonpareil/SM\nnonparticipant/SM\nnonparticipating\nnonpartisan/S\nnonpaying\nnonpayment/SM\nnonperformance/SM\nnonperforming\nnonperishable/S\nnonperson/S\nnonperturbing\nnonphysical/Y\nnonplus/S\nnonplussed\nnonplussing\nnonpoisonous\nnonpolitical\nnonpolluting\nnonporous\nnonpracticing\nnonprejudicial\nnonprescription\nnonprocedural/Y\nnonproductive\nnonprofessional/S\nnonprofit/SB\nnonprogrammable\nnonprogrammer\nnonproliferation/SM\nnonpublic\nnonpunishable\nnonracial\nnonradioactive\nnonrandom\nnonreactive\nnonreciprocal/S\nnonreciprocating\nnonrecognition/SM\nnonrecoverable\nnonrecurring\nnonredeemable\nnonreducing\nnonrefillable\nnonrefundable\nnonreligious\nnonrenewable\nnonrepresentational\nnonresidential\nnonresident/SM\nnonresidual\nnonresistance/SM\nnonresistant/S\nnonrespondent/S\nnonresponse\nnonrestrictive\nnonreturnable/S\nnonrhythmic\nnonrigid\nnonsalaried\nnonscheduled\nnonscientific\nnonscoring\nnonseasonal\nnonsectarian\nnonsecular\nnonsegregated\nnonsense/MS\nnonsensicalness/M\nnonsensical/PY\nnonsensitive\nnonsexist\nnonsexual\nnonsingular\nnonskid\nnonslip\nnonsmoker/SM\nnonsmoking\nnonsocial\nnonspeaking\nnonspecialist/MS\nnonspecializing\nnonspecific\nnonspiritual/S\nnonstaining\nnonstandard\nnonstarter/SM\nnonstick\nnonstop\nnonstrategic\nnonstriking\nnonstructural\nnonsuccessive\nnonsupervisory\nnonsupport/GS\nnonsurgical\nnonsustaining\nnonsympathizer/M\nnontarnishable\nnontaxable/S\nnontechnical/Y\nnontenured\nnonterminal/MS\nnonterminating\nnontermination/M\nnontheatrical\nnonthinking/S\nnonthreatening\nnontoxic\nnontraditional\nnontransferable\nnontransparent\nnontrivial\nnontropical\nnonuniform\nnonunion/S\nnonuser/SM\nnonvenomous\nnonverbal/Y\nnonveteran/MS\nnonviable\nnonviolence/SM\nnonviolent/Y\nnonvirulent\nnonvocal\nnonvocational\nnonvolatile\nnonvolunteer/S\nnonvoter/MS\nnonvoting\nnonwhite/SM\nnonworking\nnonyielding\nnonzero\nnoodle/GMSD\nnook/MS\nnoonday/MS\nnoon/GDMS\nnooning/M\nnoontide/MS\nnoontime/MS\nnoose/SDGM\nnope/S\nNORAD/M\nnoradrenalin\nnoradrenaline/M\nNorah/M\nNora/M\nNorbert/M\nNorberto/M\nNorbie/M\nNorby/M\nNordhoff/M\nNordic/S\nNordstrom/M\nNorean/M\nNoreen/M\nNorene/M\nNorfolk/M\nnor/H\nNorina/M\nNorine/M\nnormalcy/MS\nnormality/SM\nnormalization/A\nnormalizations\nnormalization\'s\nnormalized/AU\nnormalizes/AU\nnormalize/SRDZGB\nnormal/SY\nNorma/M\nNormand/M\nNormandy/M\nNorman/SM\nnormativeness/M\nnormative/YP\nNormie/M\nnorm/SMGD\nNormy/M\nNorplant\nNorrie/M\nNorri/SM\nNorristown/M\nNorry/M\nNorse\nNorseman/M\nNorsemen\nNorthampton/M\nnorthbound\nnortheastern\nnortheaster/YM\nNortheast/SM\nnortheastward/S\nnortheast/ZSMR\nnortherly/S\nnorther/MY\nNortherner/M\nnorthernmost\nnorthern/RYZS\nNorthfield/M\nnorthing/M\nnorthland\nNorth/M\nnorthmen\nnorth/MRGZ\nNorthrop/M\nNorthrup/M\nnorths\nNorths\nNorthumberland/M\nnorthward/S\nnorthwestern\nnorthwester/YM\nnorthwest/MRZS\nNorthwest/MS\nnorthwestward/S\nNorton/M\nNorwalk/M\nNorway/M\nNorwegian/S\nNorwich/M\nNorw/M\nnosebag/M\nnosebleed/SM\nnosecone/S\nnosedive/DSG\nnosed/V\nnosegay/MS\nnose/M\nNosferatu/M\nnos/GDS\nnosh/MSDG\nnosily\nnosiness/MS\nnosing/M\nnostalgia/SM\nnostalgically\nnostalgic/S\nNostradamus/M\nNostrand/M\nnostril/SM\nnostrum/SM\nnosy/SRPMT\nnotability/SM\nnotableness/M\nnotable/PS\nnotably\nnotarial\nnotarization/S\nnotarize/DSG\nnotary/MS\nnotate/VGNXSD\nnotational/CY\nnotation/CMSF\nnotative/CF\nnotch/MSDG\nnot/DRGB\nnotebook/MS\nnote/CSDFG\nnotedness/M\nnoted/YP\nnotepad/S\nnotepaper/MS\nnote\'s\nnoteworthiness/SM\nnoteworthy/P\nnothingness/SM\nnothing/PS\nnoticeable/U\nnoticeably\nnoticeboard/S\nnoticed/U\nnotice/MSDG\nnotifiable\nnotification/M\nnotifier/M\nnotify/NGXSRDZ\nnotional/Y\nnotion/MS\nnotoriety/S\nnotoriousness/M\nnotorious/YP\nNotre/M\nNottingham/M\nnotwithstanding\nNouakchott/M\nnougat/MS\nNoumea/M\nnoun/SMK\nnourish/DRSGL\nnourished/U\nnourisher/M\nnourishment/SM\nnous/M\nnouveau\nnouvelle\nnovae\nNovak/M\nNova/M\nnova/MS\nnovelette/SM\nNovelia/M\nnovelist/SM\nnovelization/S\nnovelize/GDS\nNovell/SM\nnovella/SM\nnovel/SM\nnovelty/MS\nNovember/SM\nnovena/SM\nnovene\nNovgorod/M\nnovice/MS\nnovitiate/MS\nNov/M\nNovocaine/M\nNovocain/S\nNovokuznetsk/M\nNovosibirsk/M\nNOW\nnowadays\nnoway/S\nNowell/M\nnowhere/S\nnowise\nnow/S\nnoxiousness/M\nnoxious/PY\nNoyce/M\nNoyes/M\nnozzle/MS\nNp\nNP\nNRA\nnroff/M\nN\'s\nNS\nn\'s/CI\nNSF\nn/T\nNT\nnth\nnuance/SDM\nnubbin/SM\nnubby/RT\nNubia/M\nNubian/M\nnubile\nnub/MS\nnuclear/K\nnuclease/M\nnucleated/A\nnucleate/DSXNG\nnucleation/M\nnucleic\nnuclei/M\nnucleoli\nnucleolus/M\nnucleon/MS\nnucleotide/MS\nnucleus/M\nnuclide/M\nnude/CRS\nnudely\nnudeness/M\nnudest\nnudge/GSRD\nnudger/M\nnudism/MS\nnudist/MS\nnudity/MS\nnugatory\nNugent/M\nnugget/SM\nnuisance/MS\nnuke/DSMG\nNukualofa\nnull/DSG\nnullification/M\nnullifier/M\nnullify/RSDXGNZ\nnullity/SM\nnu/M\nnumbered/UA\nnumberer/M\nnumberless\nnumberplate/M\nnumber/RDMGJ\nnumbers/A\nNumbers/M\nnumbing/Y\nnumbness/MS\nnumb/SGZTYRDP\nnumbskull\'s\nnumerable/IC\nnumeracy/SI\nnumeral/YMS\nnumerate/SDNGX\nnumerates/I\nnumeration/M\nnumerator/MS\nnumerical/Y\nnumeric/S\nnumerological\nnumerologist/S\nnumerology/MS\nnumerousness/M\nnumerous/YP\nnuminous/S\nnumismatic/S\nnumismatics/M\nnumismatist/MS\nnumskull/SM\nNunavut/M\nnuncio/SM\nNunez/M\nNunki/M\nnun/MS\nnunnery/MS\nnuptial/S\nNuremberg/M\nNureyev/M\nnursemaid/MS\nnurser/M\nnurseryman/M\nnurserymen\nnursery/MS\nnurse/SRDJGMZ\nnursling/M\nnurturer/M\nnurture/SRDGZM\nnus\nnutate/NGSD\nnutation/M\nnutcracker/M\nnutcrack/RZ\nnuthatch/SM\nnutmeat/SM\nnutmegged\nnutmegging\nnutmeg/MS\nnut/MS\nnutpick/MS\nNutrasweet/M\nnutria/SM\nnutrient/MS\nnutriment/MS\nnutritional/Y\nnutritionist/MS\nnutrition/SM\nnutritiousness/MS\nnutritious/PY\nnutritive/Y\nnutshell/MS\nnutted\nnuttiness/SM\nnutting\nnutty/TRP\nnuzzle/GZRSD\nNV\nNW\nNWT\nNY\nNyasa/M\nNYC\nNydia/M\nNye/M\nNyerere/M\nnylon/SM\nnymphet/MS\nnymph/M\nnympholepsy/M\nnymphomaniac/S\nnymphomania/MS\nnymphs\nNyquist/M\nNYSE\nNyssa/M\nNZ\no\nO\noafishness/S\noafish/PY\noaf/MS\nOahu/M\nOakland/M\nOakley/M\nOakmont/M\noak/SMN\noakum/MS\noakwood\noar/GSMD\noarlock/MS\noarsman/M\noarsmen\noarswoman\noarswomen\nOAS\noases\noasis/M\noatcake/MS\noater/M\nOates/M\noath/M\noaths\noatmeal/SM\noat/SMNR\nOaxaca/M\nob\nOB\nObadiah/M\nObadias/M\nobbligato/S\nobduracy/S\nobdurateness/S\nobdurate/PDSYG\nObediah/M\nobedience/EMS\nobedient/EY\nObed/M\nobeisance/MS\nobeisant/Y\nobelisk/SM\nOberlin/M\nOberon/M\nobese\nobesity/MS\nobey/EDRGS\nobeyer/EM\nobfuscate/SRDXGN\nobfuscation/M\nobfuscatory\nObidiah/M\nObie/M\nobi/MDGS\nobit/SMR\nobituary/SM\nobj\nobjectify/GSDXN\nobjectionableness/M\nobjectionable/U\nobjectionably\nobjection/SMB\nobjectiveness/MS\nobjective/PYS\nobjectivity/MS\nobjector/SM\nobject/SGVMD\nobjurgate/GNSDX\nobjurgation/M\noblate/NYPSX\noblation/M\nobligate/NGSDXY\nobligational\nobligation/M\nobligatorily\nobligatory\nobliged/E\nobliger/M\nobliges/E\noblige/SRDG\nobligingness/M\nobliging/PY\noblique/DSYGP\nobliqueness/S\nobliquity/MS\nobliterate/VNGSDX\nobliteration/M\nobliterative/Y\noblivion/MS\nobliviousness/MS\noblivious/YP\noblongness/M\noblong/SYP\nobloquies\nobloquy/M\nOb/MD\nobnoxiousness/MS\nobnoxious/YP\noboe/SM\noboist/S\nobos\nO\'Brien/M\nobs\nobscene/RYT\nobscenity/MS\nobscurantism/MS\nobscurantist/MS\nobscuration\nobscureness/M\nobscure/YTPDSRGL\nobscurity/MS\nobsequies\nobsequiousness/S\nobsequious/YP\nobsequy\nobservability/M\nobservable/SU\nobservably\nobservance/MS\nobservantly\nobservants\nobservant/U\nobservational/Y\nobservation/MS\nobservatory/MS\nobserved/U\nobserver/M\nobserve/ZGDSRB\nobserving/Y\nobsess/GVDS\nobsessional\nobsession/MS\nobsessiveness/S\nobsessive/PYS\nobsidian/SM\nobsolesce/GSD\nobsolescence/S\nobsolescent/Y\nobsolete/GPDSY\nobsoleteness/M\nobstacle/SM\nobstetrical\nobstetrician/SM\nobstetric/S\nobstetrics/M\nobstinacy/SM\nobstinateness/M\nobstinate/PY\nobstreperousness/SM\nobstreperous/PY\nobstructed/U\nobstructer/M\nobstructionism/SM\nobstructionist/MS\nobstruction/SM\nobstructiveness/MS\nobstructive/PSY\nobstruct/RDVGS\nobtainable/U\nobtainably\nobtain/LSGDRB\nobtainment/S\nobtrude/DSRG\nobtruder/M\nobtrusion/S\nobtrusiveness/MSU\nobtrusive/UPY\nobtuseness/S\nobtuse/PRTY\nobverse/YS\nobviate/XGNDS\nobviousness/SM\nobvious/YP\nOby/M\nocarina/MS\nO\'Casey\nOccam/M\noccasional/Y\noccasion/MDSJG\nOccidental/S\noccidental/SY\noccident/M\nOccident/SM\noccipital/Y\nocclude/GSD\nocclusion/MS\nocclusive/S\nocculter/M\noccultism/SM\noccult/SRDYG\noccupancy/SM\noccupant/MS\noccupational/Y\noccupation/SAM\noccupied/AU\noccupier/M\noccupies/A\noccupy/RSDZG\noccur/AS\noccurred/A\noccurrence/SM\noccurring/A\noceanfront/MS\noceangoing\nOceania/M\noceanic\nocean/MS\noceanographer/SM\noceanographic\noceanography/SM\noceanology/MS\noceanside\nOceanside/M\nOceanus/M\nocelot/SM\nocher/DMGS\nOchoa/M\no\'clock\nO\'Clock\nO\'Connell/M\nO\'Connor/M\nOconomowoc/M\nOCR\noctagonal/Y\noctagon/SM\noctahedral\noctahedron/M\noctal/S\noctane/MS\noctant/M\noctave/MS\nOctavia/M\nOctavian/M\nOctavio/M\nOctavius/M\noctavo/MS\noctennial\noctet/SM\noctile\noctillion/M\nOct/M\nOctober/MS\noctogenarian/MS\noctopus/SM\noctoroon/M\nocular/S\noculist/SM\nOD\nodalisque/SM\noddball/SM\noddity/MS\noddment/MS\noddness/MS\nodd/TRYSPL\nOdele/M\nOdelia/M\nOdelinda/M\nOdella/M\nOdelle/M\nOdell/M\nO\'Dell/M\node/MDRS\nOde/MR\nOderberg/MS\nOder/M\nOdessa/M\nOdets/M\nOdetta/M\nOdette/M\nOdey/M\nOdie/M\nOdilia/M\nOdille/M\nOdin/M\nodiousness/MS\nodious/PY\nOdis/M\nodium/MS\nOdo/M\nodometer/SM\nOdom/M\nO\'Donnell/M\nodor/DMS\nodoriferous\nodorless\nodorous/YP\nODs\nO\'Dwyer/M\nOdy/M\nOdysseus/M\nOdyssey/M\nodyssey/S\nOE\nOED\noedipal\nOedipal/Y\nOedipus/M\nOEM/M\nOEMS\noenology/MS\noenophile/S\no\'er\nO\'Er\nOersted/M\noesophagi\noeuvre/SM\nOfelia/M\nOfella/M\noffal/MS\noffbeat/MS\noffcuts\nOffenbach/M\noffender/M\noffend/SZGDR\noffense/MSV\noffensively/I\noffensiveness/MSI\noffensive/YSP\nofferer/M\noffering/M\noffer/RDJGZ\noffertory/SM\noffhand/D\noffhandedness/S\noffhanded/YP\nofficeholder/SM\nofficemate/S\nofficer/GMD\nofficership/S\noffice/SRMZ\nofficialdom/SM\nofficialism/SM\nofficially/U\nofficial/PSYM\nofficiant/SM\nofficiate/XSDNG\nofficiation/M\nofficiator/MS\nofficio\nofficiousness/MS\nofficious/YP\noffing/M\noffish\noffload/GDS\noffprint/GSDM\nofframp\noffset/SM\noffsetting\noffshoot/MS\noffshore\noffside/RS\noffspring/M\noffstage/S\noff/SZGDRJ\nofftrack\nOfilia/M\nof/K\noften/RT\noftentimes\noft/NRT\nofttimes\nOgbomosho/M\nOgdan/M\nOgden/M\nOgdon/M\nOgilvy/M\nogive/M\nOglethorpe/M\nogle/ZGDSR\nogreish\nogre/MS\nogress/S\noh\nOH\nO\'Hara\nO\'Hare/M\nO\'Higgins\nOhioan/S\nOhio/M\nohmic\nohmmeter/MS\nohm/SM\noho/S\nohs\nOHSA/M\noilcloth/M\noilcloths\noiler/M\noilfield/MS\noiliness/SM\noilman/M\noil/MDRSZG\noilmen\noilseed/SM\noilskin/MS\noily/TPR\noink/GDS\nointment/SM\nOise/M\nOJ\nOjibwa/SM\nOkamoto/M\nokapi/SM\nOkayama/M\nokay/M\nOkeechobee/M\nO\'Keeffe\nOkefenokee\nOkhotsk/M\nOkinawa/M\nOkinawan/S\nOklahoma/M\nOklahoman/SM\nOkla/M\nOK/MDG\nokra/MS\nOKs\nOktoberfest\nOlaf/M\nOlag/M\nOla/M\nOlav/M\nOldenburg/M\nolden/DG\nOldfield/M\noldie/MS\noldish\noldness/S\nOldsmobile/M\noldster/SM\nOlduvai/M\nold/XTNRPS\nol�\noleaginous\noleander/SM\nO\'Leary/M\nolefin/M\nOleg/M\nOle/MV\nOlenek/M\nOlenka/M\nOlen/M\nOlenolin/M\noleomargarine/SM\noleo/S\noles\nolfactory\nOlga/M\nOlia/M\noligarchic\noligarchical\noligarch/M\noligarchs\noligarchy/SM\nOligocene\noligopolistic\noligopoly/MS\nOlimpia/M\nOlin/M\nolive/MSR\nOlive/MZR\nOliver/M\nOlivero/M\nOlivette/M\nOlivetti/M\nOlivia/M\nOlivier/M\nOlivie/RM\nOliviero/M\nOliy/M\nOllie/M\nOlly/M\nOlmec\nOlmsted/M\nOlsen/M\nOlson/M\nOlva/M\nOlvan/M\nOlwen/M\nOlympe/M\nOlympiad/MS\nOlympian/S\nOlympia/SM\nOlympic/S\nOlympie/M\nOlympus/M\nOmaha/SM\nOman/M\nOmar/M\nombudsman/M\nombudsmen\nOmdurman/M\nomega/MS\nomelet/SM\nomelette\'s\nomen/DMG\nOmero/M\nomicron/MS\nominousness/SM\nominous/YP\nomission/MS\nomit/S\nomitted\nomitting\nomnibus/MS\nomni/M\nomnipotence/SM\nOmnipotent\nomnipotent/SY\nomnipresence/MS\nomnipresent/Y\nomniscience/SM\nomniscient/YS\nomnivore/MS\nomnivorousness/MS\nomnivorous/PY\noms\nOmsk/M\nom/XN\nON\nonanism/M\nOnassis/M\noncer/M\nonce/SR\noncogene/S\noncologist/S\noncology/SM\noncoming/S\nOndrea/M\nOneal/M\nOnega/M\nOnegin/M\nOneida/SM\nO\'Neil\nO\'Neill\noneness/MS\none/NPMSX\noner/M\nonerousness/SM\nonerous/YP\noneself\nonetime\noneupmanship\nOnfre/M\nOnfroi/M\nongoing/S\nOnida/M\nonion/GDM\nonionskin/MS\nonlooker/MS\nonlooking\nonly/TP\nOnofredo/M\nOno/M\nonomatopoeia/SM\nonomatopoeic\nonomatopoetic\nOnondaga/MS\nonrush/GMS\non/RY\nons\nOnsager/M\nonset/SM\nonsetting\nonshore\nonside\nonslaught/MS\nOntarian/S\nOntario/M\nOnt/M\nonto\nontogeny/SM\nontological/Y\nontology/SM\nonus/SM\nonward/S\nonyx/MS\noodles\nooh/GD\noohs\noolitic\nOona/M\nOOo/M\noops/S\nOort/M\nooze/GDS\noozy/RT\nopacity/SM\nopalescence/S\nopalescent/Y\nOpalina/M\nOpaline/M\nOpal/M\nopal/SM\nopaque/GTPYRSD\nopaqueness/SM\nopcode/MS\nOPEC\nOpel/M\nopencast\nopened/AU\nopener/M\nopenhandedness/SM\nopenhanded/P\nopenhearted\nopening/M\nopenness/S\nOpenOffice.org/M\nopens/A\nopenwork/MS\nopen/YRDJGZTP\noperable/I\noperandi\noperand/SM\noperant/YS\nopera/SM\noperate/XNGVDS\noperatically\noperatic/S\noperationalization/S\noperationalize/D\noperational/Y\noperation/M\noperative/IP\noperatively\noperativeness/MI\noperatives\noperator/SM\noperetta/MS\nope/S\nOphelia/M\nOphelie/M\nOphiuchus/M\nophthalmic/S\nophthalmologist/SM\nophthalmology/MS\nopiate/GMSD\nopine/XGNSD\nopinionatedness/M\nopinionated/PY\nopinion/M\nopioid\nopium/MS\nopossum/SM\nopp\nOppenheimer/M\nopponent/MS\nopportune/IY\nopportunism/SM\nopportunistic\nopportunistically\nopportunist/SM\nopportunity/MS\noppose/BRSDG\nopposed/U\nopposer/M\noppositeness/M\nopposite/SXYNP\noppositional\nopposition/M\noppress/DSGV\noppression/MS\noppressiveness/MS\noppressive/YP\noppressor/MS\nopprobrious/Y\nopprobrium/SM\nOprah/M\nops\nopt/DSG\nopthalmic\nopthalmologic\nopthalmology\noptical/Y\noptician/SM\noptic/S\noptics/M\noptima\noptimality\noptimal/Y\noptimise\'s\noptimism/SM\noptimistic\noptimistically\noptimist/SM\noptimization/SM\noptimize/DRSZG\noptimized/U\noptimizer/M\noptimizes/U\noptimum/SM\noptionality/M\noptional/YS\noption/GDMS\noptoelectronic\noptometric\noptometrist/MS\noptometry/SM\nopulence/SM\nopulent/Y\nopus/SM\nop/XGDN\nOR\noracle/GMSD\noracular\nOralee/M\nOralia/M\nOralie/M\nOralla/M\nOralle/M\noral/YS\nOra/M\norangeade/MS\nOrange/M\norange/MS\norangery/SM\norangutan/MS\nOranjestad/M\nOran/M\norate/SDGNX\noration/M\noratorical/Y\noratorio/MS\norator/MS\noratory/MS\nOrazio/M\nOrbadiah/M\norbicular\norbiculares\norbital/MYS\norbit/MRDGZS\norb/SMDG\norchard/SM\norchestral/Y\norchestra/MS\norchestrate/GNSDX\norchestrater\'s\norchestration/M\norchestrator/M\norchid/SM\nordainer/M\nordainment/MS\nordain/SGLDR\nordeal/SM\norder/AESGD\nordered/U\norderer\nordering/S\norderless\norderliness/SE\norderly/PS\norder\'s/E\nordinal/S\nordinance/MS\nordinarily\nordinariness/S\nordinary/RSPT\nordinated\nordinate/I\nordinates\nordinate\'s\nordinating\nordination/SM\nordnance/SM\nOrdovician\nordure/MS\noregano/SM\nOreg/M\nOregonian/S\nOregon/M\nOrelee/M\nOrelia/M\nOrelie/M\nOrella/M\nOrelle/M\nOrel/M\nOren/M\nOre/NM\nore/NSM\nOreo\nOrestes\norgandie\'s\norgandy/MS\norganelle/MS\norganically/I\norganic/S\norganismic\norganism/MS\norganist/MS\norganizable/UMS\norganizational/MYS\norganization/MEAS\norganize/AGZDRS\norganized/UE\norganizer/MA\norganizes/E\norganizing/E\norgan/MS\norganometallic\norganza/SM\norgasm/GSMD\norgasmic\norgiastic\norgy/SM\nOriana/M\noriel/MS\norientable\nOriental/S\noriental/SY\norientated/A\norientate/ESDXGN\norientates/A\norientation/AMES\norienteering/M\norienter\norient/GADES\norient\'s\nOrient/SM\norifice/MS\norig\norigami/MS\noriginality/SM\noriginally\noriginal/US\noriginate/VGNXSD\norigination/M\noriginative/Y\noriginator/SM\norigin/MS\nOrin/M\nOrinoco/M\noriole/SM\nOrion/M\norison/SM\nOriya/M\nOrizaba/M\nOrkney/M\nOrland/M\nOrlando/M\nOrlan/M\nOrleans\nOrlick/M\nOrlon/SM\nOrly/M\normolu/SM\nor/MY\nornamental/SY\nornamentation/SM\nornament/GSDM\nornateness/SM\nornate/YP\norneriness/SM\nornery/PRT\nornithological\nornithologist/SM\nornithology/MS\norographic/M\norography/M\nOrono/M\norotund\norotundity/MS\norphanage/MS\norphanhood/M\norphan/SGDM\nOrpheus/M\nOrphic\nOrran/M\nOrren/M\nOrrin/M\norris/SM\nOrr/MN\nors\nOrsa/M\nOrsola/M\nOrson/M\nOrtega/M\nOrtensia/M\northodontia/S\northodontic/S\northodontics/M\northodontist/MS\northodoxies\northodoxly/U\nOrthodox/S\northodoxy\'s\northodox/YS\northodoxy/U\northogonality/M\northogonalization/M\northogonalized\northogonal/Y\northographic\northographically\northography/MS\northonormal\northopedic/S\northopedics/M\northopedist/SM\northophosphate/MS\northorhombic\nOrtiz/M\nOrton/M\nOrval/M\nOrville/M\nOrv/M\nOrwellian\nOrwell/M\no\'s\nOsage/SM\nOsaka/M\nOsbert/M\nOsborne/M\nOsborn/M\nOsbourne/M\nOsbourn/M\nOscar/SM\nOsceola/M\noscillate/SDXNG\noscillation/M\noscillator/SM\noscillatory\noscilloscope/SM\nosculate/XDSNG\nosculation/M\nOsgood/M\nOSHA\nOshawa/M\nO\'Shea/M\nOshkosh/M\nosier/MS\nOsiris/M\nOslo/M\nOs/M\nOS/M\nOsman/M\nosmium/MS\nOsmond/M\nosmoses\nosmosis/M\nosmotic\nOsmund/M\nosprey/SM\nosseous/Y\nOssie/M\nossification/M\nossify/NGSDX\nostensible\nostensibly\nostentation/MS\nostentatiousness/M\nostentatious/PY\nosteoarthritides\nosteoarthritis/M\nosteology/M\nosteopathic\nosteopath/M\nosteopaths\nosteopathy/MS\nosteoporoses\nosteoporosis/M\nostracise\'s\nostracism/MS\nostracize/GSD\nOstrander/M\nostrich/MS\nOstrogoth/M\nOstwald/M\nO\'Sullivan/M\nOsvaldo/M\nOswald/M\nOswell/M\nOT\nOTB\nOTC\nOtes\nOtha/M\nOthelia/M\nOthella/M\nOthello/M\notherness/M\nother/SMP\notherwise\notherworldly/P\notherworld/Y\nOthilia/M\nOthilie/M\nOtho/M\notiose\nOtis/M\nOTOH\nOttawa/MS\notter/DMGS\nOttilie/M\nOtto/M\nOttoman\nottoman/MS\nOuagadougou/M\noubliette/SM\nouch/SDG\noughtn\'t\nought/SGD\nOuija/MS\nounce/MS\nour/S\nourself\nourselves\nouster/M\noust/RDGZS\noutage/MS\noutargue/GDS\noutback/MRS\noutbalance/GDS\noutbidding\noutbid/S\noutboard/S\noutboast/GSD\noutbound/S\noutbreak/SMG\noutbroke\noutbroken\noutbuilding/SM\noutburst/MGS\noutcast/GSM\noutclass/SDG\noutcome/SM\noutcropped\noutcropping/S\noutcrop/SM\noutcry/MSDG\noutdated/P\noutdid\noutdistance/GSD\noutdoes\noutdo/G\noutdone\noutdoor/S\noutdoorsy\noutdraw/GS\noutdrawn\noutdrew\noutermost\nouterwear/M\noutface/SDG\noutfall/MS\noutfielder/M\noutfield/RMSZ\noutfight/SG\noutfit/MS\noutfitted\noutfitter/MS\noutfitting\noutflank/SGD\noutflow/SMDG\noutfought\noutfox/GSD\noutgeneraled\noutgoes\noutgo/GJ\noutgoing/P\noutgrew\noutgrip\noutgrow/GSH\noutgrown\noutgrowth/M\noutgrowths\noutguess/SDG\nouthit/S\nouthitting\nouthouse/SM\nouting/M\noutlaid\noutlander/M\noutlandishness/MS\noutlandish/PY\noutland/ZR\noutlast/GSD\noutlawry/M\noutlaw/SDMG\noutlay/GSM\noutlet/SM\noutliers\noutline/SDGM\noutlive/GSD\noutlook/MDGS\noutlying\noutmaneuver/GSD\noutmatch/SDG\noutmigration\noutmoded\noutness/M\noutnumber/GDS\noutpaced\noutpatient/SM\noutperform/DGS\nout/PJZGSDR\noutplacement/S\noutplay/GDS\noutpoint/GDS\noutpost/SM\noutpouring/M\noutpour/MJG\noutproduce/GSD\noutput/SM\noutputted\noutputting\noutrace/GSD\noutrage/GSDM\noutrageousness/M\noutrageous/YP\noutran\noutrank/GSD\noutr�\noutreach/SDG\noutrider/MS\noutrigger/SM\noutright/Y\noutrunning\noutrun/S\noutscore/GDS\noutsell/GS\noutset/MS\noutsetting\noutshine/SG\noutshone\noutshout/GDS\noutsider/PM\noutside/ZSR\noutsize/S\noutskirt/SM\noutsmart/SDG\noutsold\noutsource/SDJG\noutspend/SG\noutspent\noutspoke\noutspokenness/SM\noutspoken/YP\noutspread/SG\noutstanding/Y\noutstate/NX\noutstation/M\noutstay/SDG\noutstretch/GSD\noutstripped\noutstripping\noutstrip/S\nouttake/S\noutvote/GSD\noutwardness/M\noutward/SYP\noutwear/SG\noutweigh/GD\noutweighs\noutwit/S\noutwitted\noutwitting\noutwore\noutwork/SMDG\noutworn\nouzo/SM\noval/MYPS\novalness/M\nova/M\novarian\novary/SM\novate/SDGNX\novation/GMD\novenbird/SM\noven/MS\noverabundance/MS\noverabundant\noverachieve/SRDGZ\noveract/DGVS\noverage/S\noveraggressive\noverallocation\noverall/SM\noverambitious\noveranxious\noverarching\noverarm/GSD\noverate\noverattentive\noverawe/GDS\noverbalance/DSG\noverbear/GS\noverbearingness/M\noverbearing/YP\noverbidding\noverbid/S\noverbite/MS\noverblown\noverboard\noverbold\noverbook/SDG\noverbore\noverborne\noverbought\noverbuild/GS\noverbuilt\noverburdening/Y\noverburden/SDG\noverbuy/GS\novercame\novercapacity/M\novercapitalize/DSG\novercareful\novercast/GS\novercasting/M\novercautious\novercerebral\novercharge/DSG\novercloud/DSG\novercoating/M\novercoat/SMG\novercomer/M\novercome/RSG\novercommitment/S\novercompensate/XGNDS\novercompensation/M\novercomplexity/M\novercomplicated\noverconfidence/MS\noverconfident/Y\noverconscientious\noverconsumption/M\novercook/SDG\novercooled\novercorrection\novercritical\novercrowd/DGS\novercurious\noverdecorate/SDG\noverdependent\noverdetermined\noverdevelop/SDG\noverdid\noverdoes\noverdo/G\noverdone\noverdose/DSMG\noverdraft/SM\noverdraw/GS\noverdrawn\noverdress/GDS\noverdrew\noverdrive/GSM\noverdriven\noverdrove\noverdubbed\noverdubbing\noverdub/S\noverdue\novereagerness/M\novereager/PY\novereater/M\novereat/GNRS\novereducated\noveremotional\noveremphases\noveremphasis/M\noveremphasize/GZDSR\noverenthusiastic\noverestimate/DSXGN\noverestimation/M\noverexcite/DSG\noverexercise/SDG\noverexert/GDS\noverexertion/SM\noverexploitation\noverexploited\noverexpose/GDS\noverexposure/SM\noverextend/DSG\noverextension\noverfall/M\noverfed\noverfeed/GS\noverfill/GDS\noverfishing\noverflew\noverflight/SM\noverflow/DGS\noverflown\noverfly/GS\noverfond\noverfull\novergeneralize/GDS\novergenerous\novergraze/SDG\novergrew\noverground\novergrow/GSH\novergrown\novergrowth/M\novergrowths\noverhand/DGS\noverhang/GS\noverhasty\noverhaul/GRDJS\noverhead/S\noverheard\noverhearer/M\noverhear/SRG\noverheat/SGD\noverhung\noverincredulous\noverindulgence/SM\noverindulgent\noverindulge/SDG\noverinflated\noverjoy/SGD\noverkill/SDMG\noverladed\noverladen\noverlaid\noverlain\noverland/S\noverlap/MS\noverlapped\noverlapping\noverlarge\noverlay/GS\noverleaf\noverlie\noverload/SDG\noverlong\noverlook/DSG\noverlord/DMSG\noverloud\noverly/GRS\novermanning\novermaster/GSD\novermatching\novermodest\novermuch/S\novernice\novernight/SDRGZ\noveroptimism/SM\noveroptimistic\noverpaid\noverparticular\noverpass/GMSD\noverpay/LSG\noverpayment/M\noverplay/SGD\noverpopulate/DSNGX\noverpopulation/M\noverpopulous\noverpower/GSD\noverpowering/Y\noverpraise/DSG\noverprecise\noverpressure\noverprice/SDG\noverprint/DGS\noverproduce/SDG\noverproduction/S\noverprotect/GVDS\noverprotection/M\noverqualified\noverran\noverrate/DSG\noverreach/DSRG\noverreaction/SM\noverreact/SGD\noverred\noverrefined\noverrepresented\noverridden\noverrider/M\noverride/RSG\noverripe\noverrode\noverrule/GDS\noverrunning\noverrun/S\noversample/DG\noversaturate\noversaw\noversea/S\noverseeing\noverseen\noverseer/M\noversee/ZRS\noversell/SG\noversensitiveness/S\noversensitive/P\noversensitivity\noversexed\novershadow/GSD\novershoe/SM\novershoot/SG\novershot/S\noversight/SM\noversimple\noversimplification/M\noversimplify/GXNDS\noversize/GS\noversleep/GS\noverslept\noversoftness/M\noversoft/P\noversold\noverspecialization/MS\noverspecialize/GSD\noverspend/SG\noverspent\noverspill/DMSG\noverspread/SG\noverstaffed\noverstatement/SM\noverstate/SDLG\noverstay/GSD\noverstepped\noverstepping\noverstep/S\noverstimulate/DSG\noverstock/SGD\noverstraining\noverstressed\noverstretch/D\noverstrict\noverstrike/GS\noverstrung\noverstuffed\noversubscribe/SDG\noversubtle\noversupply/MDSG\noversuspicious\novertaken\novertake/RSZG\novertax/DSG\noverthrew\noverthrow/GS\noverthrown\novertightened\novertime/MGDS\novertire/DSG\novertone/MS\novertook\novert/PY\noverture/DSMG\noverturn/SDG\noveruse/DSG\novervalue/GSD\noverview/MS\noverweening\noverweight/GSD\noverwhelm/GDS\noverwhelming/Y\noverwinter/SDG\noverwork/GSD\noverwrap\noverwrite/SG\noverwritten\noverwrote\noverwrought\nover/YGS\noverzealousness/M\noverzealous/P\nOvid/M\noviduct/SM\noviform\noviparous\novoid/S\novular\novulate/GNXDS\novulatory\novule/MS\novum/MS\now/DYG\nOwen/MS\nowe/S\nowlet/SM\nowl/GSMDR\nowlishness/M\nowlish/PY\nowned/U\nown/EGDS\nownership/MS\nowner/SM\noxalate/M\noxalic\noxaloacetic\noxblood/S\noxbow/SM\noxcart/MS\noxen/M\noxford/MS\nOxford/MS\noxidant/SM\noxidate/NVX\noxidation/M\noxidative/Y\noxide/SM\noxidization/MS\noxidized/U\noxidize/JDRSGZ\noxidizer/M\noxidizes/A\nox/MNS\nOxnard\nOxonian\noxtail/M\nOxus/M\noxyacetylene/MS\noxygenate/XSDMGN\noxygenation/M\noxygen/MS\noxyhydroxides\noxymora\noxymoron/M\noyster/GSDM\noystering/M\noz\nOzark/SM\nOz/M\nozone/SM\nOzymandias/M\nOzzie/M\nOzzy/M\nP\nPA\nPablo/M\nPablum/M\npablum/S\nPabst/M\npabulum/SM\nPAC\npace/DRSMZG\nPace/M\npacemaker/SM\npacer/M\npacesetter/MS\npacesetting\nPacheco/M\npachyderm/MS\npachysandra/MS\npacific\npacifically\npacification/M\nPacific/M\npacifier/M\npacifism/MS\npacifistic\npacifist/MS\npacify/NRSDGXZ\npackage/ARSDG\npackaged/U\npackager/S\npackage\'s\npackages/U\npackaging/SM\nPackard/SM\npacked/AU\npacker/MUS\npacket/MSDG\npack/GZSJDRMB\npackhorse/M\npackinghouse/S\npacking/M\npacksaddle/SM\nPackston/M\npacks/UA\nPackwood/M\nPaco/M\nPacorro/M\npact/SM\nPadang/M\npadded/U\nPaddie/M\npadding/SM\npaddle/MZGRSD\npaddler/M\npaddock/SDMG\nPaddy/M\npaddy/SM\nPadget/M\nPadgett/M\nPadilla/M\npadlock/SGDM\npad/MS\nPadraic/M\nPadraig/M\npadre/MS\nPadrewski/M\nPadriac/M\npaean/MS\npaediatrician/MS\npaediatrics/M\npaedophilia\'s\npaella/SM\npaeony/M\nPaganini/M\npaganism/MS\npagan/SM\npageantry/SM\npageant/SM\npageboy/SM\npaged/U\npageful\nPage/M\npage/MZGDRS\npager/M\npaginate/DSNGX\nPaglia/M\npagoda/MS\nPahlavi/M\npaid/AU\nPaige/M\npailful/SM\nPail/M\npail/SM\nPaine/M\npainfuller\npainfullest\npainfulness/MS\npainful/YP\npain/GSDM\npainkiller/MS\npainkilling\npainlessness/S\npainless/YP\npainstaking/SY\npaint/ADRZGS\npaintbox/M\npaintbrush/SM\npainted/U\npainterly/P\npainter/YM\npainting/SM\npaint\'s\npaintwork\npaired/UA\npair/JSDMG\npairs/A\npairwise\npaisley/MS\npajama/MDS\nPakistani/S\nPakistan/M\npalace/MS\npaladin/MS\npalaeolithic\npalaeontologists\npalaeontology/M\npalanquin/MS\npalatability/M\npalatableness/M\npalatable/P\npalatalization/MS\npalatalize/SDG\npalatal/YS\npalate/BMS\npalatial/Y\npalatinate/SM\nPalatine\npalatine/S\npalaver/GSDM\npaleface/SM\nPalembang/M\npaleness/S\nPaleocene\nPaleogene\npaleographer/SM\npaleography/SM\npaleolithic\nPaleolithic\npaleontologist/S\npaleontology/MS\nPaleozoic\nPalermo/M\npale/SPY\nPalestine/M\nPalestinian/S\nPalestrina/M\npalette/MS\nPaley/M\npalfrey/MS\npalimony/S\npalimpsest/MS\npalindrome/MS\npalindromic\npaling/M\npalisade/MGSD\nPalisades/M\npalish\nPalladio/M\npalladium/SM\npallbearer/SM\npalletized\npallet/SMGD\npall/GSMD\npalliate/SDVNGX\npalliation/M\npalliative/SY\npallidness/MS\npallid/PY\nPall/M\npallor/MS\npalmate\npalmer/M\nPalmer/M\nPalmerston/M\npalmetto/MS\npalm/GSMDR\npalmist/MS\npalmistry/MS\nPalm/MR\nPalmolive/M\npalmtop/S\nPalmyra/M\npalmy/RT\nPalo/M\nPaloma/M\nPalomar/M\npalomino/MS\npalpable\npalpably\npalpate/SDNGX\npalpation/M\npalpitate/NGXSD\npalpitation/M\npal/SJMDRYTG\npalsy/GSDM\npaltriness/SM\npaltry/TRP\npaludal\nPa/M\nPamela/M\nPamelina/M\nPamella/M\npa/MH\nPamirs\nPam/M\nPammie/M\nPammi/M\nPammy/M\npampas/M\npamperer/M\npamper/RDSG\nPampers\npamphleteer/DMSG\npamphlet/SM\npanacea/MS\npanache/MS\nPanama/MS\nPanamanian/S\npanama/S\npancake/MGSD\nPanchito/M\nPancho/M\npanchromatic\npancreas/MS\npancreatic\npanda/SM\npandemic/S\npandemonium/SM\npander/ZGRDS\nPandora/M\npanegyric/SM\npane/KMS\npaneling/M\npanelist/MS\npanelization\npanelized\npanel/JSGDM\nPangaea/M\npang/GDMS\npangolin/M\npanhandle/RSDGMZ\npanicked\npanicking\npanicky/RT\npanic/SM\npanier\'s\npanjandrum/M\nPankhurst/M\nPan/M\nPanmunjom/M\npanned\npannier/SM\npanning\npanoply/MSD\npanorama/MS\npanoramic\npanpipes\nPansie/M\npan/SMD\nPansy/M\npansy/SM\nPantagruel/M\nPantaloon/M\npantaloons\npant/GDS\npantheism/MS\npantheistic\npantheist/S\npantheon/MS\npanther/SM\npantie/SM\npantiled\npantograph/M\npantomime/SDGM\npantomimic\npantomimist/SM\npantry/SM\npantsuit/SM\npantyhose\npantyliner\npantywaist/SM\nPanza/M\nPaola/M\nPaoli/M\nPaolina/M\nPaolo/M\npapacy/SM\nPapagena/M\nPapageno/M\npapal/Y\npapa/MS\npaparazzi\npapaw/SM\npapaya/MS\npaperback/GDMS\npaperboard/MS\npaperboy/SM\npaperer/M\npapergirl/SM\npaper/GJMRDZ\npaperhanger/SM\npaperhanging/SM\npaperiness/M\npaperless\npaperweight/MS\npaperwork/SM\npapery/P\npapillae\npapilla/M\npapillary\npapist/MS\npapoose/SM\nPappas/M\npapped\npapping\npappy/RST\npaprika/MS\npap/SZMNR\npapyri\npapyrus/M\nPaquito/M\nparable/MGSD\nparabola/MS\nparabolic\nparaboloidal/M\nparaboloid/MS\nParacelsus/M\nparacetamol/M\nparachuter/M\nparachute/RSDMG\nparachutist/MS\nParaclete/M\nparader/M\nparade/RSDMZG\nparadigmatic\nparadigm/SM\nparadisaic\nparadisaical\nParadise/M\nparadise/MS\nparadoxic\nparadoxicalness/M\nparadoxical/YP\nparadox/MS\nparaffin/GSMD\nparagon/SGDM\nparagrapher/M\nparagraph/MRDG\nparagraphs\nParaguayan/S\nParaguay/M\nparakeet/MS\nparalegal/S\nparalinguistic\nparallax/SM\nparallel/DSG\nparalleled/U\nparallelepiped/MS\nparallelism/SM\nparallelization/MS\nparallelize/ZGDSR\nparallelogram/MS\nparalysis/M\nparalytically\nparalytic/S\nparalyzedly/S\nparalyzed/Y\nparalyzer/M\nparalyze/ZGDRS\nparalyzingly/S\nparalyzing/Y\nparamagnetic\nparamagnet/M\nParamaribo/M\nparamecia\nparamecium/M\nparamedical/S\nparamedic/MS\nparameterization/SM\nparameterize/BSDG\nparameterized/U\nparameterless\nparameter/SM\nparametric\nparametrically\nparametrization\nparametrize/DS\nparamilitary/S\nparamount/S\nparamour/MS\npara/MS\nParamus/M\nParan�\nparanoiac/S\nparanoia/SM\nparanoid/S\nparanormal/SY\nparapet/SMD\nparaphernalia\nparaphrase/GMSRD\nparaphraser/M\nparaplegia/MS\nparaplegic/S\nparaprofessional/SM\nparapsychologist/S\nparapsychology/MS\nparaquat/S\nparasite/SM\nparasitically\nparasitic/S\nparasitism/SM\nparasitologist/M\nparasitology/M\nparasol/SM\nparasympathetic/S\nparathion/SM\nparathyroid/S\nparatrooper/M\nparatroop/RSZ\nparatyphoid/S\nparboil/DSG\nparceled/U\nparceling/M\nparcel/SGMD\nParcheesi/M\nparch/GSDL\nparchment/SM\nPARC/M\npardonableness/M\npardonable/U\npardonably/U\npardoner/M\npardon/ZBGRDS\nparegoric/SM\nparentage/MS\nparental/Y\nparenteral\nparentheses\nparenthesis/M\nparenthesize/GSD\nparenthetic\nparenthetical/Y\nparenthood/MS\nparent/MDGJS\npare/S\nparesis/M\npares/S\nPareto/M\nparfait/SM\npariah/M\npariahs\nparietal/S\nparimutuel/S\nparing/M\nparishioner/SM\nparish/MS\nParisian/SM\nParis/M\nparity/ESM\nparka/MS\nParke/M\nParker/M\nParkersburg/M\npark/GJZDRMS\nParkhouse/M\nparking/M\nParkinson/M\nparkish\nparkland/M\nparklike\nParkman\nPark/RMS\nparkway/MS\nparlance/SM\nparlay/DGS\nparley/MDSG\nparliamentarian/SM\nparliamentary/U\nparliament/MS\nParliament/MS\nparlor/SM\nparlous\nParmesan/S\nparmigiana\nParnassus/SM\nParnell/M\nparochialism/SM\nparochiality\nparochial/Y\nparodied/U\nparodist/SM\nparody/SDGM\nparolee/MS\nparole/MSDG\nparoxysmal\nparoxysm/MS\nparquetry/SM\nparquet/SMDG\nparrakeet\'s\nparred\nparricidal\nparricide/MS\nparring\nParrish/M\nParr/M\nParrnell/M\nparrot/GMDS\nparrotlike\nparry/GSD\nParry/M\nparse\nparsec/SM\nparsed/U\nParsee\'s\nparser/M\nParsifal/M\nparsimonious/Y\nparsimony/SM\npars/JDSRGZ\nparsley/MS\nparsnip/MS\nparsonage/MS\nparson/MS\nParsons/M\npartaken\npartaker/M\npartake/ZGSR\npart/CDGS\nparterre/MS\nparter/S\nparthenogeneses\nparthenogenesis/M\nParthenon/M\nParthia/M\npartiality/MS\npartial/SY\nparticipant/MS\nparticipate/NGVDSX\nparticipation/M\nparticipator/S\nparticipatory\nparticipial/Y\nparticiple/MS\nparticleboard/S\nparticle/MS\nparticolored\nparticularistic\nparticularity/SM\nparticularization/MS\nparticularize/GSD\nparticular/SY\nparticulate/S\nparting/MS\npartisanship/SM\npartisan/SM\npartition/AMRDGS\npartitioned/U\npartitioner/M\npartitive/S\npartizan\'s\npartly\npartner/DMGS\npartnership/SM\npartook\npartridge/MS\npart\'s\nparturition/SM\npartway\nparty/RSDMG\nparvenu/SM\npar/ZGSJBMDR\nPasadena/M\nPASCAL\nPascale/M\nPascal/M\npascal/SM\npaschal/S\npasha/MS\nPaso/M\nPasquale/M\npas/S\npassably\npassage/MGSD\npassageway/MS\nPassaic/M\npassband\npassbook/MS\npassel/MS\npass�/M\npassenger/MYS\npasserby\npasser/M\npassersby\npassim\npassing/Y\npassionated\npassionate/EYP\npassionateness/EM\npassionates\npassionating\npassioned\npassionflower/MS\npassioning\npassionless\npassion/SEM\nPassion/SM\npassivated\npassiveness/S\npassive/SYP\npassivity/S\npass/JGVBZDSR\npasskey/SM\npassmark\npassover\nPassover/MS\npassport/SM\npassword/SDM\npasta/MS\npasteboard/SM\npasted/UA\npastel/MS\npaste/MS\nPasternak/M\npastern/SM\npasteup\npasteurization/MS\npasteurized/U\npasteurizer/M\npasteurize/RSDGZ\nPasteur/M\npastiche/MS\npastille/SM\npastime/SM\npastiness/SM\npastoralization/M\npastoral/SPY\npastorate/MS\npastor/GSDM\npast/PGMDRS\npastrami/MS\npastry/SM\npast\'s/A\npasts/A\npasturage/SM\npasture/MGSRD\npasturer/M\npasty/PTRS\nPatagonia/M\nPatagonian/S\npatch/EGRSD\npatcher/EM\npatchily\npatchiness/S\npatch\'s\npatchwork/RMSZ\npatchy/PRT\npatellae\npatella/MS\nPatel/M\nPate/M\npaten/M\nPaten/M\npatentee/SM\npatent/ZGMRDYSB\npaterfamilias/SM\npater/M\npaternalism/MS\npaternalist\npaternalistic\npaternal/Y\npaternity/SM\npaternoster/SM\nPaterson/M\npate/SM\npathetic\npathetically\npathfinder/MS\npathless/P\npath/M\npathname/SM\npathogenesis/M\npathogenic\npathogen/SM\npathologic\npathological/Y\npathologist/MS\npathology/SM\npathos/SM\npaths\npathway/MS\nPatience/M\npatience/SM\npatient/MRYTS\npatient\'s/I\npatients/I\npatina/SM\npatine\nPatin/M\npatio/MS\nPat/MN\npat/MNDRS\nPatna/M\npatois/M\nPaton/M\npatresfamilias\npatriarchal\npatriarchate/MS\npatriarch/M\npatriarchs\npatriarchy/MS\nPatrica/M\nPatrice/M\nPatricia/M\npatrician/MS\npatricide/MS\nPatricio/M\nPatrick/M\nPatric/M\npatrimonial\npatrimony/SM\npatriotically\npatriotic/U\npatriotism/SM\npatriot/SM\npatristic/S\nPatrizia/M\nPatrizio/M\nPatrizius/M\npatrolled\npatrolling\npatrolman/M\npatrolmen\npatrol/MS\npatrolwoman\npatrolwomen\npatronage/MS\npatroness/S\npatronization\npatronized/U\npatronize/GZRSDJ\npatronizer/M\npatronizes/A\npatronizing\'s/U\npatronizing/YM\npatronymically\npatronymic/S\npatron/YMS\npatroon/MS\npatsy/SM\nPatsy/SM\npatted\nPatten/M\npatten/MS\npatterer/M\npattern/GSDM\npatternless\npatter/RDSGJ\nPatterson/M\nPattie/M\nPatti/M\npatting\nPattin/M\nPatton/M\nPatty/M\npatty/SM\npaucity/SM\nPaula/M\nPaule/M\nPauletta/M\nPaulette/M\nPaulie/M\nPauli/M\nPaulina/M\nPauline\nPauling/M\nPaulita/M\nPaul/MG\nPaulo/M\nPaulsen/M\nPaulson/M\nPaulus/M\nPauly/M\npaunch/GMSD\npaunchiness/M\npaunchy/RTP\npauperism/SM\npauperize/SDG\npauper/SGDM\npause/DSG\nPavarotti\npaved/UA\npave/GDRSJL\nPavel/M\npavement/SGDM\npaver/M\npaves/A\nPavia/M\npavilion/SMDG\npaving/A\npaving\'s\nPavla/M\nPavlova/MS\nPavlovian\nPavlov/M\npawl/SM\npaw/MDSG\npawnbroker/SM\npawnbroking/S\nPawnee/SM\npawner/M\npawn/GSDRM\npawnshop/MS\npawpaw\'s\nPawtucket/M\npaxes\nPaxon/M\nPaxton/M\npayable/S\npay/AGSLB\npayback/S\npaycheck/SM\npayday/MS\npayed\npayee/SM\npayer/SM\npayload/SM\npaymaster/SM\npayment/ASM\nPayne/SM\npayoff/MS\npayola/MS\npayout/S\npayroll/MS\npayslip/S\nPayson/M\nPayton/M\nPaz/M\nPb/M\nPBS\nPBX\nPCB\nPC/M\nPCP\nPCs\npct\npd\nPD\nPd/M\nPDP\nPDQ\nPDT\nPE\nPeabody/M\npeaceableness/M\npeaceable/P\npeaceably\npeacefuller\npeacefullest\npeacefulness/S\npeaceful/PY\npeace/GMDS\npeacekeeping/S\nPeace/M\npeacemaker/MS\npeacemaking/MS\npeacetime/MS\npeach/GSDM\nPeachtree/M\npeachy/RT\npeacock/SGMD\nPeadar/M\npeafowl/SM\npeahen/MS\npeaked/P\npeakiness/M\npeak/SGDM\npeaky/P\npealed/A\nPeale/M\npeal/MDSG\npeals/A\npea/MS\npeanut/SM\nPearce/M\nPearla/M\nPearle/M\npearler/M\nPearlie/M\nPearline/M\nPearl/M\npearl/SGRDM\npearly/TRS\nPearson/M\npear/SYM\npeartrees\nPeary/M\npeasanthood\npeasantry/SM\npeasant/SM\npeashooter/MS\npeats/A\npeat/SM\npeaty/TR\npebble/MGSD\npebbling/M\npebbly/TR\nPebrook/M\npecan/SM\npeccadilloes\npeccadillo/M\npeccary/MS\nPechora/M\npecker/M\npeck/GZSDRM\nPeckinpah/M\nPeck/M\nPecos/M\npectic\npectin/SM\npectoral/S\npeculate/NGDSX\npeculator/S\npeculiarity/MS\npeculiar/SY\npecuniary\npedagogical/Y\npedagogic/S\npedagogics/M\npedagogue/SDGM\npedagogy/MS\npedal/SGRDM\npedantic\npedantically\npedantry/MS\npedant/SM\npeddler/M\npeddle/ZGRSD\npederast/SM\npederasty/SM\nPeder/M\npedestal/GDMS\npedestrianization\npedestrianize/GSD\npedestrian/MS\npediatrician/SM\npediatric/S\npedicab/SM\npedicure/DSMG\npedicurist/SM\npedigree/DSM\npediment/DMS\npedlar\'s\npedometer/MS\npedophile/S\npedophilia\nPedro/M\npeduncle/MS\npeeing\npeekaboo/SM\npeek/GSD\npeeler/M\npeeling/M\nPeel/M\npeel/SJGZDR\npeen/GSDM\npeeper/M\npeephole/SM\npeep/SGZDR\npeepshow/MS\npeepy\npeerage/MS\npeer/DMG\npeeress/MS\npeerlessness/M\npeerless/PY\npeeve/GZMDS\npeevers/M\npeevishness/SM\npeevish/YP\npeewee/S\npee/ZDRS\nPegasus/MS\npegboard/SM\nPegeen/M\npegged\nPeggie/M\nPeggi/M\npegging\nPeggy/M\nPeg/M\npeg/MS\npeignoir/SM\nPei/M\nPeiping/M\nPeirce/M\npejoration/SM\npejorative/SY\npeke/MS\nPekinese\'s\npekingese\nPekingese/SM\nPeking/SM\npekoe/SM\npelagic\nPelee/M\nPele/M\npelf/SM\nPelham/M\npelican/SM\npellagra/SM\npellet/SGMD\npellucid\nPeloponnese/M\npelter/M\npelt/GSDR\npelvic/S\npelvis/SM\nPembroke/M\npemmican/SM\npenalization/SM\npenalized/U\npenalize/SDG\npenalty/MS\npenal/Y\nPena/M\npenance/SDMG\npence/M\npenchant/MS\npencil/SGJMD\npendant/SM\npend/DCGS\npendent/CS\nPenderecki/M\nPendleton/M\npendulous\npendulum/MS\nPenelopa/M\nPenelope/M\npenetrability/SM\npenetrable\npenetrate/SDVGNX\npenetrating/Y\npenetration/M\npenetrativeness/M\npenetrative/PY\npenetrator/MS\npenguin/MS\npenicillin/SM\npenile\npeninsular\npeninsula/SM\npenis/MS\npenitence/MS\npenitential/YS\npenitentiary/MS\npenitent/SY\npenknife/M\npenknives\npenlight/MS\npen/M\nPen/M\npenman/M\npenmanship/MS\npenmen\nPenna\npennant/SM\npenned\nPenney/M\nPennie/M\npenniless\nPenni/M\npenning\nPennington/M\npennis\nPenn/M\npennon/SM\nPennsylvania/M\nPennsylvanian/S\nPenny/M\npenny/SM\npennyweight/SM\npennyworth/M\npenologist/MS\npenology/MS\nPenrod/M\nPensacola/M\npensioner/M\npension/ZGMRDBS\npensiveness/S\npensive/PY\npens/V\npentacle/MS\npentagonal/SY\nPentagon/M\npentagon/SM\npentagram/MS\npentameter/SM\npent/AS\nPentateuch/M\npentathlete/S\npentathlon/MS\npentatonic\npentecostal\nPentecostalism/S\nPentecostal/S\nPentecost/SM\npenthouse/SDGM\nPentium/M\npenuche/SM\npenultimate/SY\npenumbrae\npenumbra/MS\npenuriousness/MS\npenurious/YP\npenury/SM\npeonage/MS\npeon/MS\npeony/SM\npeople/SDMG\nPeoria/M\nPepe/M\nPepillo/M\nPepi/M\nPepin/M\nPepita/M\nPepito/M\npepped\npeppercorn/MS\npepperer/M\npeppergrass/M\npeppermint/MS\npepperoni/S\npepper/SGRDM\npeppery\npeppiness/SM\npepping\npeppy/PRT\nPepsico/M\nPepsiCo/M\nPepsi/M\npepsin/SM\npep/SM\npeptic/S\npeptidase/SM\npeptide/SM\npeptizing\nPepys/M\nPequot/M\nperadventure/S\nperambulate/DSNGX\nperambulation/M\nperambulator/MS\npercale/MS\nperceivably\nperceive/DRSZGB\nperceived/U\nperceiver/M\npercentage/MS\npercentile/SM\npercent/MS\nperceptible\nperceptibly\nperceptional\nperception/MS\nperceptiveness/MS\nperceptive/YP\nperceptual/Y\npercept/VMS\nPerceval/M\nperchance\nperch/GSDM\nperchlorate/M\nperchlorination\npercipience/MS\npercipient/S\nPercival/M\npercolate/NGSDX\npercolation/M\npercolator/MS\npercuss/DSGV\npercussionist/MS\npercussion/SAM\npercussiveness/M\npercussive/PY\npercutaneous/Y\nPercy/M\nperdition/MS\nperdurable\nperegrinate/XSDNG\nperegrination/M\nperegrine/S\nPerelman/M\nperemptorily\nperemptory/P\nperennial/SY\np�res\nperestroika/S\nPerez/M\nperfecta/S\nperfect/DRYSTGVP\nperfecter/M\nperfectibility/MS\nperfectible\nperfectionism/MS\nperfectionist/MS\nperfection/MS\nperfectiveness/M\nperfective/PY\nperfectness/MS\nperfidiousness/M\nperfidious/YP\nperfidy/MS\nperforated/U\nperforate/XSDGN\nperforation/M\nperforce\nperformance/MS\nperformed/U\nperformer/M\nperform/SDRZGB\nperfumer/M\nperfumery/SM\nperfume/ZMGSRD\nperfunctorily\nperfunctoriness/M\nperfunctory/P\nperfused\nperfusion/M\nPergamon/M\npergola/SM\nperhaps/S\nPeria/M\npericardia\npericardium/M\nPerice/M\nPericlean\nPericles/M\nperigee/SM\nperihelia\nperihelion/M\nperil/GSDM\nPerilla/M\nperilousness/M\nperilous/PY\nPeri/M\nperimeter/MS\nperinatal\nperinea\nperineum/M\nperiodic\nperiodical/YMS\nperiodicity/MS\nperiod/MS\nperiodontal/Y\nperiodontics/M\nperiodontist/S\nperipatetic/S\nperipheral/SY\nperiphery/SM\nperiphrases\nperiphrasis/M\nperiphrastic\nperiscope/SDMG\nperishable/SM\nperish/BZGSRD\nperishing/Y\nperistalses\nperistalsis/M\nperistaltic\nperistyle/MS\nperitoneal\nperitoneum/SM\nperitonitis/MS\nperiwigged\nperiwigging\nperiwig/MS\nperiwinkle/SM\nperjurer/M\nperjure/SRDZG\nperjury/MS\nper/K\nperk/GDS\nperkily\nperkiness/S\nPerkin/SM\nperky/TRP\nPerla/M\nPerle/M\nPerl/M\npermafrost/MS\npermalloy/M\nPermalloy/M\npermanence/SM\npermanency/MS\npermanentness/M\npermanent/YSP\npermeability/SM\npermeableness/M\npermeable/P\npermeate/NGVDSX\nPermian\npermissibility/M\npermissibleness/M\npermissible/P\npermissibly\npermission/SM\npermissiveness/MS\npermissive/YP\npermit/SM\npermitted\npermitting\nPerm/M\nperm/MDGS\npermutation/MS\npermute/SDG\nPernell/M\nperniciousness/MS\npernicious/PY\nPernod/M\nPeron/M\nperoration/SM\nPerot/M\nperoxidase/M\nperoxide/MGDS\nperpend/DG\nperpendicularity/SM\nperpendicular/SY\nperpetrate/NGXSD\nperpetration/M\nperpetrator/SM\nperpetual/SY\nperpetuate/NGSDX\nperpetuation/M\nperpetuity/MS\nperplex/DSG\nperplexed/Y\nperplexity/MS\nperquisite/SM\nPerren/M\nPerri/M\nPerrine/M\nPerry/MR\npersecute/XVNGSD\npersecution/M\npersecutor/MS\npersecutory\nPerseid/M\nPersephone/M\nPerseus/M\nperseverance/MS\npersevere/GSD\npersevering/Y\nPershing/M\nPersia/M\nPersian/S\npersiflage/MS\npersimmon/SM\nPersis/M\npersist/DRSG\npersistence/SM\npersistent/Y\npersnickety\npersonableness/M\npersonable/P\npersonae\npersonage/SM\npersonality/SM\npersonalization/CMS\npersonalize/CSDG\npersonalized/U\npersonalty/MS\npersonal/YS\npersona/M\nperson/BMS\npersonification/M\npersonifier/M\npersonify/XNGDRS\npersonnel/SM\nperson\'s/U\npersons/U\nperspective/YMS\nperspex\nperspicaciousness/M\nperspicacious/PY\nperspicacity/S\nperspicuity/SM\nperspicuousness/M\nperspicuous/YP\nperspiration/MS\nperspire/DSG\npersuaded/U\npersuader/M\npersuade/ZGDRSB\npersuasion/SM\npersuasively\npersuasiveness/MS\npersuasive/U\npertain/GSD\nPerth/M\npertinaciousness/M\npertinacious/YP\npertinacity/MS\npertinence/S\npertinent/YS\npertness/MS\nperturbation/MS\nperturbed/U\nperturb/GDS\npertussis/SM\npert/YRTSP\nperuke/SM\nPeru/M\nperusal/SM\nperuser/M\nperuse/RSDZG\nPeruvian/S\npervade/SDG\npervasion/M\npervasiveness/MS\npervasive/PY\nperverseness/SM\nperverse/PXYNV\nperversion/M\nperversity/MS\npervert/DRSG\nperverted/YP\nperverter/M\nperviousness\npeseta/SM\nPeshawar/M\npeskily\npeskiness/S\npesky/RTP\npeso/MS\npessimal/Y\npessimism/SM\npessimistic\npessimistically\npessimist/SM\npester/DG\npesticide/MS\npestiferous\npestilence/SM\npestilential/Y\npestilent/Y\npestle/SDMG\npesto/S\npest/RZSM\nPET\nP�tain/M\npetal/SDM\nPeta/M\npetard/MS\npetcock/SM\nPete/M\npeter/GD\nPeter/M\nPetersburg/M\nPetersen/M\nPeters/N\nPeterson/M\nPeterus/M\nPetey/M\npethidine/M\npetiole/SM\npetiteness/M\npetite/XNPS\npetitioner/M\npetition/GZMRD\npetition\'s/A\npetitions/A\npetits\nPetkiewicz/M\nPet/MRZ\nPetra/M\nPetrarch/M\npetrel/SM\npetri\npetrifaction/SM\npetrify/NDSG\nPetrina/M\nPetr/M\npetrochemical/SM\npetrodollar/MS\npetroglyph/M\npetrolatum/MS\npetroleum/MS\npetrolled\npetrolling\npetrol/MS\npetrologist/MS\npetrology/MS\nPetronella/M\nPetronia/M\nPetronilla/M\nPetronille/M\npet/SMRZ\npetted\npetter/MS\nPettibone/M\npetticoat/SMD\npettifogged\npettifogger/SM\npettifogging\npettifog/S\npettily\npettiness/S\npetting\npettis\npettishness/M\npettish/YP\nPetty/M\npetty/PRST\npetulance/MS\npetulant/Y\nPetunia/M\npetunia/SM\nPeugeot/M\nPewaukee/M\npewee/MS\npewit/MS\npew/SM\npewter/SRM\npeyote/SM\nPeyter/M\nPeyton/M\npf\nPfc\nPFC\npfennig/SM\nPfizer/M\npg\nPG\nPhaedra/M\nPhaethon/M\nphaeton/MS\nphage/M\nphagocyte/SM\nPhaidra/M\nphalanger/MS\nphalanges\nphalanx/SM\nphalli\nphallic\nphallus/M\nPhanerozoic\nphantasmagoria/SM\nphantasmal\nphantasm/SM\nphantasy\'s\nphantom/MS\npharaoh\nPharaoh/M\npharaohs\nPharaohs\npharisaic\nPharisaic\nPharisaical\npharisee/S\nPharisee/SM\npharmaceutical/SY\npharmaceutic/S\npharmaceutics/M\npharmacist/SM\npharmacological/Y\npharmacologist/SM\npharmacology/SM\npharmacopoeia/SM\npharmacy/SM\npharyngeal/S\npharynges\npharyngitides\npharyngitis/M\npharynx/M\nphase/DSRGZM\nphaseout/S\nPhD\npheasant/SM\nPhebe/M\nPhedra/M\nPhekda/M\nPhelia/M\nPhelps/M\nphenacetin/MS\nphenobarbital/SM\nphenolic\nphenol/MS\nphenolphthalein/M\nphenomenal/Y\nphenomena/SM\nphenomenological/Y\nphenomenology/MS\nphenomenon/SM\nphenotype/MS\nphenylalanine/M\nphenyl/M\npheromone/MS\nphew/S\nphialled\nphialling\nphial/MS\nPhidias/M\nPhiladelphia/M\nphilanderer/M\nphilander/SRDGZ\nphilanthropic\nphilanthropically\nphilanthropist/MS\nphilanthropy/SM\nphilatelic\nphilatelist/MS\nphilately/SM\nPhilbert/M\nPhilco/M\nphilharmonic/S\nPhilipa/M\nPhilip/M\nPhilippa/M\nPhilippe/M\nPhilippians/M\nphilippic/SM\nPhilippine/SM\nPhilis/M\nphilistine/S\nPhilistine/SM\nphilistinism/S\nPhillida/M\nPhillie/M\nPhillipa/M\nPhillipe/M\nPhillip/MS\nPhillipp/M\nPhillis/M\nPhilly/SM\nPhil/MY\nphilodendron/MS\nphilological/Y\nphilologist/MS\nphilology/MS\nPhilomena/M\nphilosopher/MS\nphilosophic\nphilosophical/Y\nphilosophized/U\nphilosophizer/M\nphilosophizes/U\nphilosophize/ZDRSG\nphilosophy/MS\nphilter/SGDM\nphiltre/DSMG\nPhineas/M\nPhip/M\nPhipps/M\nphi/SM\nphlebitides\nphlebitis/M\nphlegmatic\nphlegmatically\nphlegm/SM\nphloem/MS\nphlox/M\npH/M\nPh/M\nphobia/SM\nphobic/S\nPhobos/M\nPhoebe/M\nphoebe/SM\nPhoenicia/M\nPhoenician/SM\nPhoenix/M\nphoenix/MS\nphone/DSGM\nphoneme/SM\nphonemically\nphonemic/S\nphonemics/M\nphonetically\nphonetician/SM\nphonetic/S\nphonetics/M\nphonically\nphonic/S\nphonics/M\nphoniness/MS\nphonographer/M\nphonographic\nphonograph/RM\nphonographs\nphonologic\nphonological/Y\nphonologist/MS\nphonology/MS\nphonon/M\nphony/PTRSDG\nphooey/S\nphosphatase/M\nphosphate/MS\nphosphide/M\nphosphine/MS\nphosphoresce\nphosphorescence/SM\nphosphorescent/Y\nphosphoric\nphosphor/MS\nphosphorous\nphosphorus/SM\nphotocell/MS\nphotochemical/Y\nphotochemistry/M\nphotocopier/M\nphotocopy/MRSDZG\nphotoelectric\nphotoelectrically\nphotoelectronic\nphotoelectrons\nphotoengraver/M\nphotoengrave/RSDJZG\nphotoengraving/M\nphotofinishing/MS\nphotogenic\nphotogenically\nphotograph/AGD\nphotographer/SM\nphotographic\nphotographically\nphotograph\'s\nphotographs/A\nphotography/MS\nphotojournalism/SM\nphotojournalist/SM\nphotoluminescence/M\nphotolysis/M\nphotolytic\nphotometer/SM\nphotometric\nphotometrically\nphotometry/M\nphotomicrograph/M\nphotomicrography/M\nphotomultiplier/M\nphoton/MS\nphotorealism\nphotosensitive\nphoto/SGMD\nphotosphere/M\nphotostatic\nPhotostat/MS\nPhotostatted\nPhotostatting\nphotosyntheses\nphotosynthesis/M\nphotosynthesize/DSG\nphotosynthetic\nphototypesetter\nphototypesetting/M\nphrasal\nphrase/AGDS\nphrasebook\nphrasemaking\nphraseology/MS\nphrase\'s\nphrasing/SM\nphrenological/Y\nphrenologist/MS\nphrenology/MS\nphylactery/MS\nphylae\nphyla/M\nPhylis/M\nPhyllida/M\nPhyllis/M\nPhyllys/M\nphylogeny/MS\nphylum/M\nPhylys/M\nphys\nphysicality/M\nphysical/PYS\nphysician/SM\nphysicist/MS\nphysicked\nphysicking\nphysic/SM\nphysiochemical\nphysiognomy/SM\nphysiography/MS\nphysiologic\nphysiological/Y\nphysiologist/SM\nphysiology/MS\nphysiotherapist/MS\nphysiotherapy/SM\nphysique/MSD\nphytoplankton/M\nPiaf/M\nPiaget/M\nPia/M\npianism/M\npianissimo/S\npianistic\npianist/SM\npianoforte/MS\npianola\nPianola/M\npiano/SM\npiaster/MS\npiazza/SM\npibroch/M\npibrochs\npicador/MS\npicaresque/S\npica/SM\nPicasso/M\npicayune/S\nPiccadilly/M\npiccalilli/MS\npiccolo/MS\npickaback\'s\npickaxe\'s\npickax/GMSD\npickerel/MS\nPickering/M\npicker/MG\npicketer/M\npicket/MSRDZG\nPickett/M\nPickford/M\npick/GZSJDR\npickle/SDMG\nPickman/M\npickoff/S\npickpocket/GSM\npickup/SM\nPickwick/M\npicky/RT\npicnicked\npicnicker/MS\npicnicking\npicnic/SM\npicofarad/MS\npicojoule\npicoseconds\npicot/DMGS\nPict/M\npictograph/M\npictographs\npictorialness/M\npictorial/PYS\npicture/MGSD\npicturesqueness/SM\npicturesque/PY\npiddle/GSD\npiddly\npidgin/SM\npiebald/S\npiece/GMDSR\npiecemeal\npiecer/M\npiecewise\npieceworker/M\npiecework/ZSMR\npiedmont\nPiedmont/M\npieing\npie/MS\nPierce/M\npiercer/M\npierce/RSDZGJ\npiercing/Y\nPierette/M\npier/M\nPier/M\nPierre/M\nPierrette/M\nPierrot/M\nPierson/M\nPieter/M\nPietra/M\nPietrek/M\nPietro/M\npiety/SM\npiezoelectric\npiezoelectricity/M\npiffle/MGSD\npigeon/DMGS\npigeonhole/SDGM\npigged\npiggery/M\npigging\npiggishness/SM\npiggish/YP\npiggyback/MSDG\nPiggy/M\npiggy/RSMT\npigheadedness/S\npigheaded/YP\npiglet/MS\npigmentation/MS\npigment/MDSG\npig/MLS\nPigmy\'s\npigpen/SM\npigroot\npigskin/MS\npigsty/SM\npigswill/M\npigtail/SMD\nPike/M\npike/MZGDRS\npiker/M\npikestaff/MS\npilaf/MS\npilaster/SM\nPilate/M\npilau\'s\npilchard/SM\nPilcomayo/M\npile/JDSMZG\npileup/MS\npilferage/SM\npilferer/M\npilfer/ZGSRD\nPilgrim\npilgrimage/DSGM\npilgrim/MS\npiling/M\npillage/RSDZG\npillar/DMSG\npillbox/MS\npill/GSMD\npillion/DMGS\npillory/MSDG\npillowcase/SM\npillow/GDMS\npillowslip/S\nPillsbury/M\npilot/DMGS\npilothouse/SM\npiloting/M\npimento/MS\npimiento/SM\npimpernel/SM\npimp/GSMYD\npimple/SDM\npimplike\npimply/TRM\nPIN\npinafore/MS\npi�ata/S\nPinatubo/M\npinball/MS\nPincas/M\npincer/GSD\nPinchas/M\npincher/M\npinch/GRSD\npincushion/SM\nPincus/M\nPindar/M\npineapple/MS\npined/A\nPinehurst/M\npine/MNGXDS\npines/A\npinfeather/SM\nping/GDRM\npinheaded/P\npinhead/SMD\npinhole/SM\npining/A\npinion/DMG\nPinkerton/M\npinkeye/MS\npink/GTYDRMPS\npinkie/SM\npinkish/P\npinkness/S\npinko/MS\npinky\'s\npinnacle/MGSD\npinnate\npinned/U\npinning/S\nPinocchio/M\nPinochet/M\npinochle/SM\npi�on/S\npinpoint/SDG\npinprick/MDSG\npin\'s\npinsetter/SM\nPinsky/M\npinstripe/SDM\npintail/SM\nPinter/M\npint/MRS\npinto/S\npinup/MS\npin/US\npinwheel/DMGS\npinyin\nPinyin\npiny/RT\npioneer/SDMG\npion/M\nPiotr/M\npiousness/MS\npious/YP\npipeline/DSMG\npipe/MS\npiper/M\nPiper/M\nPipestone/M\npipet\'s\npipette/MGSD\npipework\npiping/YM\npipit/MS\npip/JSZMGDR\nPip/MR\nPippa/M\npipped\npipping\npippin/SM\nPippo/M\nPippy/M\npipsqueak/SM\npiquancy/MS\npiquantness/M\npiquant/PY\npique/GMDS\npiracy/MS\nPiraeus/M\nPirandello/M\npiranha/SM\npirate/MGSD\npiratical/Y\npirogi\npirogies\npirouette/MGSD\npis\nPisa/M\npiscatorial\nPisces/M\nPisistratus/M\npismire/SM\nPissaro/M\npiss/DSRG!\npistachio/MS\npiste/SM\npistillate\npistil/MS\npistoleers\npistole/M\npistol/SMGD\npiston/SM\npitapat/S\npitapatted\npitapatting\npita/SM\nPitcairn/M\npitchblende/SM\npitcher/M\npitchfork/GDMS\npitching/M\npitchman/M\npitchmen\npitch/RSDZG\npitchstone/M\npiteousness/SM\npiteous/YP\npitfall/SM\npithily\npithiness/SM\npith/MGDS\npiths\npithy/RTP\npitiableness/M\npitiable/P\npitiably\npitier/M\npitifuller\npitifullest\npitifulness/M\npitiful/PY\npitilessness/SM\npitiless/PY\npitman/M\npit/MS\nPitney/M\npiton/SM\npittance/SM\npitted\npitting\nPittman/M\nPittsburgh/ZM\nPittsfield/M\nPitt/SM\nPittston/M\npituitary/SM\npitying/Y\npity/ZDSRMG\nPius/M\npivotal/Y\npivot/DMSG\npivoting/M\npix/DSG\npixel/SM\npixie/MS\npixiness\npixmap/SM\nPizarro/M\npizazz/S\npi/ZGDRH\npizza/SM\npizzeria/SM\npizzicati\npizzicato\npj\'s\nPJ\'s\npk\npkg\npkt\npkwy\nPkwy\npl\nplacard/DSMG\nplacate/NGVXDRS\nplacatory\nplaceable/A\nplacebo/SM\nplaced/EAU\nplace/DSRJLGZM\nplaceholder/S\nplacekick/DGS\nplaceless/Y\nplacement/AMES\nplacental/S\nplacenta/SM\nplacer/EM\nplaces/EA\nplacidity/SM\nplacidness/M\nplacid/PY\nplacing/AE\nplacket/SM\nplagiarism/MS\nplagiarist/MS\nplagiarize/GZDSR\nplagiary/SM\nplagued/U\nplague/MGRSD\nplaguer/M\nplaice/M\nplaid/DMSG\nplainclothes\nplainclothesman\nplainclothesmen\nPlainfield/M\nplainness/MS\nplainsman/M\nplainsmen\nplainsong/SM\nplainspoken\nplain/SPTGRDY\nplaintiff/MS\nplaintiveness/M\nplaintive/YP\nplaint/VMS\nPlainview/M\nplaiting/M\nplait/SRDMG\nplanar\nplanarity\nPlanck/M\nplan/DRMSGZ\nplaneload\nplaner/M\nplane\'s\nplane/SCGD\nplanetarium/MS\nplanetary\nplanetesimal/M\nplanet/MS\nplanetoid/SM\nplangency/S\nplangent\nplanking/M\nplank/SJMDG\nplankton/MS\nplanned/U\nplanner/SM\nplanning\nPlano\nplanoconcave\nplanoconvex\nPlantagenet/M\nplantain/MS\nplantar\nplantation/MS\nplanter/MS\nplanting/S\nplantlike\nplant\'s\nplant/SADG\nplaque/MS\nplash/GSDM\nplasma/MS\nplasmid/S\nplasm/M\nplasterboard/MS\nplasterer/M\nplastering/M\nplaster/MDRSZG\nplasterwork/M\nplastically\nplasticine\nPlasticine/M\nplasticity/SM\nplasticize/GDS\nplastic/MYS\nplateau/GDMS\nplateful/S\nplatelet/SM\nplaten/M\nplater/M\nplate/SM\nplatform/SGDM\nPlath/M\nplating/M\nplatinize/GSD\nplatinum/MS\nplatitude/SM\nplatitudinous/Y\nplat/JDNRSGXZ\nPlato/M\nplatonic\nPlatonic\nPlatonism/M\nPlatonist\nplatoon/MDSG\nplatted\nPlatte/M\nplatter/MS\nPlatteville/M\nplatting\nplatypus/MS\nplatys\nplaty/TR\nplaudit/MS\nplausibility/S\nplausible/P\nplausibly\nPlautus/M\nplayability/U\nplayable/U\nplayacting/M\nplayact/SJDG\nplayback/MS\nplaybill/SM\nPlayboy/M\nplayboy/SM\nplay/DRSEBG\nplayed/A\nplayer\'s/E\nplayer/SM\nplayfellow/S\nplayfulness/MS\nplayful/PY\nplaygirl/SM\nplaygoer/MS\nplayground/MS\nplaygroup/S\nplayhouse/SM\nplaying/S\nplaymate/MS\nplayoff/S\nplaypen/SM\nplayroom/SM\nplays/A\nPlaytex/M\nplaything/MS\nplaytime/SM\nplaywright/SM\nplaywriting/M\nplaza/SM\npleader/MA\npleading/MY\nplead/ZGJRDS\npleasanter\npleasantest\npleasantness/SMU\npleasantry/MS\npleasant/UYP\npleased/EU\npleaser/M\npleases/E\nplease/Y\npleasingness/M\npleasing/YP\nplea/SM\npleas/RSDJG\npleasurableness/M\npleasurable/P\npleasurably\npleasureful\npleasure/MGBDS\npleasure\'s/E\npleasures/E\npleater/M\npleat/RDMGS\nplebeian/SY\nplebe/MS\nplebiscite/SM\nplectra\nplectrum/SM\npledger/M\npledge/RSDMG\nPleiads\nPleistocene\nplenary/S\nplenipotentiary/S\nplenitude/MS\nplenteousness/M\nplenteous/PY\nplentifulness/M\nplentiful/YP\nplenty/SM\nplenum/M\npleonasm/MS\nplethora/SM\npleurae\npleural\npleura/M\npleurisy/SM\nPlexiglas/MS\nplexus/SM\npliability/MS\npliableness/M\npliable/P\npliancy/MS\npliantness/M\npliant/YP\nplication/MA\nplier/MA\nplight/GMDRS\nplimsolls\nplinker/M\nplink/GRDS\nplinth/M\nplinths\nPliny/M\nPliocene/S\nPLO\nplodded\nplodder/SM\nplodding/SY\nplod/S\nplopped\nplopping\nplop/SM\nplosive\nplot/SM\nplotted/A\nplotter/MDSG\nplotting\nplover/MS\nplowed/U\nplower/M\nplowman/M\nplowmen\nplow/SGZDRM\nplowshare/MS\nploy\'s\nploy/SCDG\nplucker/M\npluckily\npluckiness/SM\npluck/SGRD\nplucky/TPR\npluggable\nplugged/UA\nplugging/AU\nplughole\nplug\'s\nplug/US\nplumage/DSM\nplumbago/M\nplumbed/U\nplumber/M\nplumbing/M\nplumb/JSZGMRD\nplume/SM\nplummer\nplummest\nplummet/DSG\nplummy\nplumper/M\nplumpness/S\nplump/RDNYSTGP\nplum/SMDG\nplumy/TR\nplunder/GDRSZ\nplunger/M\nplunge/RSDZG\nplunker/M\nplunk/ZGSRD\npluperfect/S\npluralism/MS\npluralistic\npluralist/S\nplurality/SM\npluralization/MS\npluralize/GZRSD\npluralizer/M\nplural/SY\nplushness/MS\nplush/RSYMTP\nplushy/RPT\nplus/S\nplussed\nplussing\nPlutarch/M\nplutocracy/MS\nplutocratic\nplutocrat/SM\nPluto/M\nplutonium/SM\npluvial/S\nply/AZNGRSD\nPlymouth/M\nplywood/MS\npm\nPM\nPm/M\nPMS\npneumatically\npneumatic/S\npneumatics/M\npneumonia/MS\nPO\npoacher/M\npoach/ZGSRD\nPocahontas/M\npocketbook/SM\npocketful/SM\npocketing/M\npocketknife/M\npocketknives\npocket/MSRDG\npock/GDMS\npockmark/MDSG\nPocono/MS\npodded\npodding\npodge/ZR\nPodgorica/M\npodiatrist/MS\npodiatry/MS\npodium/MS\npod/SM\nPodunk/M\nPoe/M\npoem/MS\npoesy/GSDM\npoetaster/MS\npoetess/MS\npoetically\npoeticalness\npoetical/U\npoetic/S\npoetics/M\npoet/MS\npoetry/SM\npogo\nPogo/M\npogrom/GMDS\npoignancy/MS\npoignant/Y\nPoincar�/M\npoinciana/SM\nPoindexter/M\npoinsettia/SM\npointblank\npointedness/M\npointed/PY\npointer/M\npointillism/SM\npointillist/SM\npointing/M\npointlessness/SM\npointless/YP\npoint/RDMZGS\npointy/TR\npoise/M\npois/GDS\npoi/SM\npoisoner/M\npoisoning/M\npoisonous/PY\npoison/RDMZGSJ\nPoisson/M\npoke/DRSZG\nPokemon/M\npokerface/D\npoker/M\npoky/SRT\nPoland/M\nPolanski/M\npolarimeter/SM\npolarimetry\npolariscope/M\nPolaris/M\npolarity/MS\npolarization/CMS\npolarized/UC\npolarize/RSDZG\npolarizes/C\npolarizing/C\npolarogram/SM\npolarograph\npolarography/M\nPolaroid/SM\npolar/S\npolecat/SM\npolemical/Y\npolemicist/S\npolemic/S\npolemics/M\npole/MS\nPole/MS\npoler/M\npolestar/S\npoleward/S\npol/GMDRS\npoliceman/M\npolicemen/M\npolice/MSDG\npolicewoman/M\npolicewomen\npolicyholder/MS\npolicymaker/S\npolicymaking\npolicy/SM\npoliomyelitides\npoliomyelitis/M\npolio/SM\nPolish\npolished/U\npolisher/M\npolish/RSDZGJ\npolis/M\nPolitburo/M\npolitburo/S\npoliteness/MS\npolite/PRTY\npolitesse/SM\npolitically\npolitical/U\npolitician/MS\npoliticization/S\npoliticize/CSDG\npoliticked\npoliticking/SM\npolitico/SM\npolitic/S\npolitics/M\npolity/MS\npolka/SDMG\nPolk/M\npollack/SM\nPollard/M\npolled/U\npollen/GDM\npollinate/XSDGN\npollination/M\npollinator/MS\npolliwog/SM\npoll/MDNRSGX\npollock\'s\nPollock/SM\npollster/MS\npollutant/MS\npolluted/U\npolluter/M\npollute/RSDXZVNG\npollution/M\nPollux/M\nPollyanna/M\nPolly/M\npollywog\'s\nPol/MY\nPolo/M\npolo/MS\npolonaise/MS\npolonium/MS\npoltergeist/SM\npoltroon/MS\npolyandrous\npolyandry/MS\npolyatomic\npolybutene/MS\npolycarbonate\npolychemicals\npolychrome\npolyclinic/MS\npolycrystalline\npolyelectrolytes\npolyester/SM\npolyether/S\npolyethylene/SM\npolygamist/MS\npolygamous/Y\npolygamy/MS\npolyglot/S\npolygonal/Y\npolygon/MS\npolygraph/MDG\npolygraphs\npolygynous\npolyhedral\npolyhedron/MS\nPolyhymnia/M\npolyisobutylene\npolyisocyanates\npolymath/M\npolymaths\npolymerase/S\npolymeric\npolymerization/SM\npolymerize/SDG\npolymer/MS\npolymorphic\npolymorphism/MS\npolymorph/M\npolymyositis\nPolynesia/M\nPolynesian/S\npolynomial/YMS\nPolyphemus/M\npolyphonic\npolyphony/MS\npolyphosphate/S\npolyp/MS\npolypropylene/MS\npolystyrene/SM\npolysyllabic\npolysyllable/SM\npolytechnic/MS\npolytheism/SM\npolytheistic\npolytheist/SM\npolythene/M\npolytonal/Y\npolytopes\npolyunsaturated\npolyurethane/SM\npolyvinyl/MS\nPo/M\npomade/MGSD\npomander/MS\npomegranate/SM\nPomerania/M\nPomeranian\npommel/GSMD\nPomona/M\nPompadour/M\npompadour/MDS\npompano/SM\nPompeian/S\nPompeii/M\nPompey/M\npompom/SM\npompon\'s\npomposity/MS\npompousness/S\npompous/YP\npomp/SM\nponce/M\nPonce/M\nPonchartrain/M\nponcho/MS\nponderer/M\nponderousness/MS\nponderous/PY\nponder/ZGRD\npond/SMDRGZ\npone/SM\npongee/MS\nponiard/GSDM\npons/M\nPontchartrain/M\nPontiac/M\nPontianak/M\npontiff/MS\npontifical/YS\npontificate/XGNDS\npontoon/SMDG\npony/DSMG\nponytail/SM\npooch/GSDM\npoodle/MS\npoof/MS\npooh/DG\nPooh/M\npoohs\nPoole/M\npool/MDSG\npoolroom/MS\npoolside\nPoona/M\npoop/MDSG\npoorboy\npoorhouse/MS\npoorness/MS\npoor/TYRP\npopcorn/MS\nPopek/MS\npope/SM\nPope/SM\nPopeye/M\npopgun/SM\npopinjay/MS\npoplar/SM\npoplin/MS\nPopocatepetl/M\npopover/SM\npoppa/MS\npopped\nPopper/M\npopper/SM\npoppet/M\npopping\nPoppins/M\npoppycock/MS\nPoppy/M\npoppy/SDM\npoppyseed\nPopsicle/MS\npop/SM\npopulace/MS\npopularism\npopularity/UMS\npopularization/SM\npopularize/A\npopularized\npopularizer/MS\npopularizes/U\npopularizing\npopular/YS\npopulate/CXNGDS\npopulated/UA\npopulates/A\npopulating/A\npopulation/MC\npopulism/S\npopulist/SM\npopulousness/MS\npopulous/YP\nporcelain/SM\nporch/SM\nporcine\nporcupine/MS\npore/ZGDRS\nPorfirio/M\nporgy/SM\nporing/Y\nporker/M\nporky/TSR\npork/ZRMS\npornographer/SM\npornographic\npornographically\npornography/SM\nporno/S\nporn/S\nporosity/SM\nporousness/MS\nporous/PY\nporphyritic\nporphyry/MS\nporpoise/DSGM\nporridge/MS\nPorrima/M\nporringer/MS\nPorsche/M\nportability/S\nportables\nportable/U\nportably\nport/ABSGZMRD\nportage/ASM\nportaged\nportaging\nportal/SM\nportamento/M\nportcullis/MS\nported/CE\nPorte/M\nportend/SDG\nportentousness/M\nportentous/PY\nportent/SM\nporterage/M\nporter/DMG\nporterhouse/SM\nPorter/M\nporter\'s/A\nportfolio/MS\nporthole/SM\nPortia/M\nporticoes\nportico/M\nPortie/M\nporti�re/SM\nporting/E\nportion/KGSMD\nPortland/M\nportliness/SM\nportly/PTR\nportmanteau/SM\nPort/MR\nP�rto/M\nportraitist/SM\nportrait/MS\nportraiture/MS\nportrayal/SM\nportrayer/M\nportray/GDRS\nports/CE\nPortsmouth/M\nPortugal/M\nPortuguese/M\nportulaca/MS\nPorty/M\nposed/CA\nPoseidon/M\nposer/KME\nposes/CA\nposeur/MS\npose/ZGKDRSE\nposh/DSRGT\nposing/CA\npositifs\npositionable\npositional/KY\nposition/KGASMD\nposition\'s/EC\npositions/EC\npositiveness/S\npositive/RSPYT\npositivism/M\npositivist/S\npositivity\npositron/SM\nposit/SCGD\nPosner/M\nposse/M\npossess/AGEDS\npossessed/PY\npossession/AEMS\npossessional\npossessiveness/MS\npossessive/PSMY\npossessor/MS\npossibility/SM\npossible/TRS\npossibly\nposs/S\npossum/MS\npostage/MS\npostal/S\npost/ASDRJG\npostbag/M\npostbox/SM\npostcard/SM\npostcode/SM\npostcondition/S\npostconsonantal\npostdate/DSG\npostdoctoral\nposteriori\nposterior/SY\nposterity/SM\nposter/MS\npostfix/GDS\npostgraduate/SM\nposthaste/S\nposthumousness/M\nposthumous/YP\nposthypnotic\npostilion/MS\npostindustrial\nposting/M\npostlude/MS\nPost/M\npostman/M\npostmarital\npostmark/GSMD\npostmaster/SM\npostmen\npostmeridian\npostmistress/MS\npostmodern\npostmodernist\npostmortem/S\npostnasal\npostnatal\npostoperative/Y\npostorder\npostpaid\npostpartum\npostpone/GLDRS\npostponement/S\npostpositions\npostprandial\npost\'s\npostscript/SM\npostsecondary\npostulate/XGNSD\npostulation/M\npostural\nposture/MGSRD\nposturer/M\npostvocalic\npostwar\nposy/SM\npotability/SM\npotableness/M\npotable/SP\npotage/M\npotash/MS\npotassium/MS\npotatoes\npotato/M\npotbelly/MSD\npotboiler/M\npotboil/ZR\npot/CMS\nPotemkin/M\npotency/MS\npotentate/SM\npotentiality/MS\npotential/SY\npotentiating\npotentiometer/SM\npotent/YS\npotful/SM\npothead/MS\npotherb/MS\npother/GDMS\npotholder/MS\npothole/SDMG\npotholing/M\npothook/SM\npotion/SM\npotlatch/SM\npotluck/MS\nPotomac/M\npotpie/SM\npotpourri/SM\nPotsdam/M\npotsherd/MS\npotshot/S\npottage/SM\nPottawatomie/M\npotted\nPotter/M\npotter/RDMSG\npottery/MS\npotting\nPotts/M\npotty/SRT\npouch/SDMG\nPoughkeepsie/M\nPoul/M\npoulterer/MS\npoultice/DSMG\npoultry/MS\npounce/SDG\npoundage/MS\npounder/MS\npound/KRDGS\nPound/M\npour/DSG\npourer\'s\nPoussin/MS\npouter/M\npout/GZDRS\npoverty/MS\nPOW\npowderpuff\npowder/RDGMS\npowdery\nPowell/M\npowerboat/MS\npowerfulness/M\npowerful/YP\npower/GMD\npowerhouse/MS\npowerlessness/SM\npowerless/YP\nPowers\nPowhatan/M\npow/RZ\npowwow/GDMS\npox/GMDS\nPoznan/M\npp\nPP\nppm\nppr\nPPS\npr\nPR\npracticability/S\npracticable/P\npracticably\npracticality/SM\npracticalness/M\npractical/YPS\npractice/BDRSMG\npracticed/U\npracticer/M\npracticum/SM\npractitioner/SM\nPradesh/M\nPrado/M\nPraetorian\npraetorian/S\npraetor/MS\npragmatical/Y\npragmatic/S\npragmatics/M\npragmatism/MS\npragmatist/MS\nPrague/M\nPraia\nprairie/MS\npraise/ESDG\npraiser/S\npraise\'s\npraiseworthiness/MS\npraiseworthy/P\npraising/Y\nPrakrit/M\npraline/MS\npram/MS\nprancer/M\nprance/ZGSRD\nprancing/Y\nprank/SMDG\nprankster/SM\npraseodymium/SM\nPratchett/M\nprate/DSRGZ\nprater/M\npratfall/MS\nprating/Y\nprattle/DRSGZ\nprattler/M\nprattling/Y\nPratt/M\nPrattville/M\nPravda/M\nprawn/MDSG\npraxes\npraxis/M\nPraxiteles/M\npray/DRGZS\nprayerbook\nprayerfulness/M\nprayerful/YP\nprayer/M\nPRC\npreach/DRSGLZJ\npreacher/M\npreaching/Y\npreachment/MS\npreachy/RT\npreadolescence/S\nPreakness/M\npreallocate/XGNDS\npreallocation/M\npreallocator/S\npreamble/MGDS\npreamp\npreamplifier/M\nprearrange/LSDG\nprearrangement/SM\npreassign/SDG\npreauthorize\nprebendary/M\nPrecambrian\nprecancel/DGS\nprecancerous\nprecariousness/MS\nprecarious/PY\nprecautionary\nprecaution/SGDM\nprecede/DSG\nprecedence/SM\nprecedented/U\nprecedent/SDM\npreceptive/Y\npreceptor/MS\nprecept/SMV\nprecess/DSG\nprecession/M\nprecinct/MS\npreciosity/MS\npreciousness/S\nprecious/PYS\nprecipice/MS\nprecipitable\nprecipitant/S\nprecipitateness/M\nprecipitate/YNGVPDSX\nprecipitation/M\nprecipitousness/M\nprecipitous/YP\npreciseness/SM\nprecise/XYTRSPN\nprecision/M\npr�cis/MDG\npreclude/GDS\npreclusion/S\nprecociousness/MS\nprecocious/YP\nprecocity/SM\nprecode/D\nprecognition/SM\nprecognitive\nprecollege/M\nprecolonial\nprecomputed\npreconceive/GSD\npreconception/SM\nprecondition/GMDS\npreconscious\nprecook/GDS\nprecursor/SM\nprecursory\nprecut\npredate/NGDSX\npredation/CMS\npredator/SM\npredatory\npredecease/SDG\npredecessor/MS\npredeclared\npredecline\npredefine/GSD\npredefinition/SM\npredesignate/GDS\npredestination/SM\npredestine/SDG\npredetermination/MS\npredeterminer/M\npredetermine/ZGSRD\npredicable/S\npredicament/SM\npredicate/VGNXSD\npredication/M\npredicator\npredictability/UMS\npredictable/U\npredictably/U\npredict/BSDGV\npredicted/U\nprediction/MS\npredictive/Y\npredictor/MS\npredigest/GDS\npredilect\npredilection/SM\npredispose/SDG\npredisposition/MS\npredoctoral\npredominance/SM\npredominant/Y\npredominate/YSDGN\npredomination/M\npreemie/MS\npreeminence/SM\npreeminent/Y\npreemployment/M\npreempt/GVSD\npreemption/SM\npreemptive/Y\npreemptor/M\npreener/M\npreen/SRDG\npreexist/DSG\npreexistence/SM\npreexistent\nprefabbed\nprefabbing\nprefab/MS\nprefabricate/XNGDS\nprefabrication/M\npreface/DRSGM\nprefacer/M\nprefatory\nprefect/MS\nprefecture/MS\npreferableness/M\npreferable/P\npreferably\nprefer/BL\npreference/MS\npreferential/Y\npreferment/SM\npreferred\npreferring\nprefiguration/M\nprefigure/SDG\nprefix/MDSG\npreflight/SGDM\npreform/DSG\npref/RZ\npregnancy/SM\npregnant/Y\npreheat/GDS\nprehensile\nprehistoric\nprehistorical/Y\nprehistory/SM\npreindustrial\npreinitialize/SDG\npreinterview/M\npreisolated\nprejudge/DRSG\nprejudger/M\nprejudgment/SM\nprejudiced/U\nprejudice/MSDG\nprejudicial/PY\nprekindergarten/MS\nprelacy/MS\nprelate/SM\npreliminarily\npreliminary/S\npreliterate/S\npreloaded\nprelude/GMDRS\npreluder/M\npremarital/Y\npremarket\nprematureness/M\npremature/SPY\nprematurity/M\npremedical\npremeditated/Y\npremeditate/XDSGNV\npremeditation/M\npremed/S\npremenstrual\npremiere/MS\npremier/GSDM\npremiership/SM\nPreminger/M\npremise/GMDS\npremiss\'s\npremium/MS\npremix/GDS\npremolar/S\npremonition/SM\npremonitory\nprenatal/Y\nPren/M\nPrenticed/M\nPrentice/MGD\nPrenticing/M\nPrentiss/M\nPrent/M\nprenuptial\npreoccupation/MS\npreoccupy/DSG\npreoperative\npreordain/DSLG\nprepackage/GSD\nprepaid\npreparation/SM\npreparative/SYM\npreparatory\npreparedly\npreparedness/USM\nprepared/UP\nprepare/ZDRSG\nprepay/GLS\nprepayment/SM\nprepender/S\nprepends\npreplanned\npreponderance/SM\npreponderant/Y\npreponderate/DSYGN\nprepositional/Y\npreposition/SDMG\nprepossess/GSD\nprepossessing/U\nprepossession/MS\npreposterousness/M\npreposterous/PY\nprepped\nprepping\npreppy/RST\npreprepared\npreprint/SGDM\npreprocessed\npreprocessing\npreprocessor/S\npreproduction\npreprogrammed\nprep/SM\nprepubescence/S\nprepubescent/S\nprepublication/M\nprepuce/SM\nprequel/S\npreradiation\nprerecord/DGS\npreregister/DSG\npreregistration/MS\nprerequisite/SM\nprerogative/SDM\nPres\npresage/GMDRS\npresager/M\npresbyopia/MS\npresbyterian\nPresbyterianism/S\nPresbyterian/S\npresbyter/MS\npresbytery/MS\npreschool/RSZ\nprescience/SM\nprescient/Y\nPrescott/M\nprescribed/U\nprescriber/M\nprescribe/RSDG\nprescription/SM\nprescriptive/Y\nprescript/SVM\npreselect/SGD\npresence/SM\npresentableness/M\npresentable/P\npresentably/A\npresentational/A\npresentation/AMS\npresented/A\npresenter/A\npresentiment/MS\npresentment/SM\npresents/A\npresent/SLBDRYZGP\npreservationist/S\npreservation/SM\npreservative/SM\npreserve/DRSBZG\npreserved/U\npreserver/M\npreset/S\npresetting\npreshrank\npreshrink/SG\npreshrunk\npreside/DRSG\npresidency/MS\npresidential/Y\npresident/SM\npresider/M\npresidia\npresidium/M\nPresley/M\npresoaks\npresort/GDS\npres/S\npress/ACDSG\npressed/U\npresser/MS\npressingly/C\npressing/YS\npressman/M\npressmen\npressure/DSMG\npressurization/MS\npressurize/DSRGZ\npressurized/U\nprestidigitate/NX\nprestidigitation/M\nprestidigitatorial\nprestidigitator/M\nprestige/MS\nprestigious/PY\nPreston/M\npresto/S\npresumably\npresume/BGDRS\npresumer/M\npresuming/Y\npresumption/MS\npresumptive/Y\npresumptuousness/SM\npresumptuous/YP\npresuppose/GDS\npresupposition/S\npretax\npreteen/S\npretended/Y\npretender/M\npretending/U\npretend/SDRZG\npretense/MNVSX\npretension/GDM\npretentiousness/S\npretentious/UYP\npreterite\'s\npreterit/SM\npreternatural/Y\npretest/SDG\npretext/SMDG\nPretoria/M\npretreated\npretreatment/S\npretrial\nprettify/SDG\nprettily\nprettiness/SM\npretty/TGPDRS\npretzel/SM\nprevailing/Y\nprevail/SGD\nprevalence/MS\nprevalent/SY\nprevaricate/DSXNG\nprevaricator/MS\npreventable/U\npreventably\npreventative/S\nprevent/BSDRGV\npreventer/M\nprevention/MS\npreventiveness/M\npreventive/SPY\npreview/ZGSDRM\nprevious/Y\nprevision/SGMD\nprewar\nprexes\npreyer\'s\nprey/SMDG\nPriam/M\npriapic\nPribilof/M\nprice/AGSD\npriced/U\npriceless\nPrice/M\npricer/MS\nprice\'s\npricey\npricier\npriciest\npricker/M\npricking/M\nprickle/GMDS\nprickliness/S\nprickly/RTP\nprick/RDSYZG\nprideful/Y\npride/GMDS\nprier/M\npriestess/MS\npriesthood/SM\nPriestley/M\npriestliness/SM\npriestly/PTR\npriest/SMYDG\nprigged\nprigging\npriggishness/S\npriggish/PYM\nprig/SM\nprimacy/MS\nprimal\nprimarily\nprimary/MS\nprimate/MS\nprimed/U\nprimely/M\nprimeness/M\nprime/PYS\nprimer/M\nPrime\'s\nprimeval/Y\npriming/M\nprimitiveness/SM\nprimitive/YPS\nprimitivism/M\nprimmed\nprimmer\nprimmest\nprimming\nprimness/MS\nprimogenitor/MS\nprimogeniture/MS\nprimordial/YS\nprimp/DGS\nprimrose/MGSD\nprim/SPJGZYDR\nprincedom/MS\nprinceliness/SM\nprincely/PRT\nPrince/M\nprince/SMY\nprincess/MS\nPrinceton/M\nprincipality/MS\nprincipal/SY\nPrincipe/M\nPrincipia/M\nprincipled/U\nprinciple/SDMG\nprintable/U\nprintably\nprint/AGDRS\nprinted/U\nprinter/AM\nprinters\nprinting/SM\nprintmaker/M\nprintmake/ZGR\nprintmaking/M\nprintout/S\nPrinz/M\nprioress/MS\npriori\nprioritize/DSRGZJ\npriority/MS\nprior/YS\npriory/SM\nPris\nPrisca/M\nPriscella/M\nPriscilla/M\nprised\nprise/GMAS\nprismatic\nprism/MS\nprison/DRMSGZ\nprisoner/M\nPrissie/M\nprissily\nprissiness/SM\nprissy/RSPT\npristine/Y\nprithee/S\nprivacy/MS\nprivateer/SMDG\nprivateness/M\nprivate/NVYTRSXP\nprivation/MCS\nprivative/Y\nprivatization/S\nprivatize/GSD\nprivet/SM\nprivileged/U\nprivilege/SDMG\nprivily\nprivy/SRMT\nprized/A\nprize/DSRGZM\nprizefighter/M\nprizefighting/M\nprizefight/SRMGJZ\nprizewinner/S\nprizewinning\nPr/MN\nPRO\nproactive\nprobabilist\nprobabilistic\nprobabilistically\nprobability/SM\nprobable/S\nprobably\nprobated/A\nprobate/NVMX\nprobates/A\nprobating/A\nprobational\nprobationary/S\nprobationer/M\nprobation/MRZ\nprobation\'s/A\nprobative/A\nprober/M\nprobity/SM\nproblematical/UY\nproblematic/S\nproblem/SM\nproboscis/MS\nprob/RBJ\nprocaine/MS\nprocedural/SY\nprocedure/MS\nproceeder/M\nproceeding/M\nproceed/JRDSG\nprocess/BSDMG\nprocessed/UA\nprocesses/A\nprocessional/YS\nprocession/GD\nprocessor/MS\nproclamation/MS\nproclivity/MS\nproconsular\nprocrastinate/XNGDS\nprocrastination/M\nprocrastinator/MS\nprocreational\nprocreatory\nprocrustean\nProcrustean\nProcrustes/M\nproctor/GSDM\nproctorial\nprocurable/U\nprocure/L\nprocurement/MS\nProcyon/M\nprodded\nprodding\nprodigality/S\nprodigal/SY\nprodigiousness/M\nprodigious/PY\nprodigy/MS\nprod/S\nproduce/AZGDRS\nproducer/AM\nproducible/A\nproduction/ASM\nproductively/UA\nproductiveness/MS\nproductive/PY\nproductivities\nproductivity/A\nproductivity\'s\nproductize/GZRSD\nproduct/V\nProf\nprofanation/S\nprofaneness/MS\nprofane/YPDRSG\nprofanity/MS\nprofessed/Y\nprofessionalism/SM\nprofessionalize/GSD\nprofessional/USY\nprofession/SM\nprofessorial/Y\nprofessorship/SM\nprofessor/SM\nproffer/GSD\nproficiency/SM\nproficient/YS\nprofitability/MS\nprofitableness/MU\nprofitable/UP\nprofitably/U\nprofiteer/GSMD\nprofiterole/MS\nprofit/GZDRB\nprofitless\nprofligacy/S\nprofligate/YS\nproforma/S\nprofoundity\nprofoundness/SM\nprofound/PTYR\nprof/S\nprofundity/MS\nprofuseness/MS\nprofuse/YP\nprogenitor/SM\nprogeny/M\nprogesterone/SM\nprognathous\nprognoses\nprognosis/M\nprognosticate/NGVXDS\nprognostication/M\nprognosticator/S\nprognostic/S\nprogram/CSA\nprogramed\nprograming\nprogrammability\nprogrammable/S\nprogrammed/CA\nprogrammer/ASM\nprogramming/CA\nprogrammings\nprogression/SM\nprogressiveness/SM\nprogressive/SPY\nprogressivism\nprogress/MSDVG\nprohibiter/M\nprohibitionist/MS\nprohibition/MS\nProhibition/MS\nprohibitiveness/M\nprohibitive/PY\nprohibitory\nprohibit/VGSRD\nprojected/AU\nprojectile/MS\nprojectionist/MS\nprojection/MS\nprojective/Y\nproject/MDVGS\nprojector/SM\nProkofieff/M\nProkofiev/M\nprolegomena\nproletarianization/M\nproletarianized\nproletarian/S\nproletariat/SM\nproliferate/GNVDSX\nproliferation/M\nprolifically\nprolific/P\nprolixity/MS\nprolix/Y\nprologize\nprologue/MGSD\nprologuize\nprolongate/NGSDX\nprolongation/M\nprolonger/M\nprolong/G\npromenade/GZMSRD\npromenader/M\nPromethean\nPrometheus/M\npromethium/SM\nprominence/MS\nprominent/Y\npromiscuity/MS\npromiscuousness/M\npromiscuous/PY\npromise/GD\npromising/UY\npromissory\npromontory/MS\npromote/GVZBDR\npromoter/M\npromotiveness/M\npromotive/P\nprompted/U\nprompter/M\npromptitude/SM\npromptness/MS\nprompt/SGJTZPYDR\npro/MS\npromulgate/NGSDX\npromulgation/M\npromulgator/MS\npron\nproneness/MS\nprone/PY\npronghorn/SM\nprong/SGMD\npronominalization\npronominalize\npronounceable/U\npronouncedly\npronounced/U\npronounce/GLSRD\npronouncement/SM\npronouncer/M\npronto\npronunciation/SM\nproofed/A\nproofer\nproofing/M\nproofreader/M\nproofread/GZSR\nproof/SEAM\npropaganda/SM\npropagandistic\npropagandist/SM\npropagandize/DSG\npropagated/U\npropagate/SDVNGX\npropagation/M\npropagator/MS\npropellant/MS\npropelled\npropeller/MS\npropelling\npropel/S\npropensity/MS\nproperness/M\nproper/PYRT\npropertied/U\nproperty/SDM\nprophecy/SM\nprophesier/M\nprophesy/GRSDZ\nprophetess/S\nprophetic\nprophetical/Y\nprophet/SM\nprophylactic/S\nprophylaxes\nprophylaxis/M\npropinquity/MS\npropionate/M\npropitiate/GNXSD\npropitiatory\npropitiousness/M\npropitious/YP\nproponent/MS\nproportionality/M\nproportional/SY\nproportionate/YGESD\nproportioner/M\nproportion/ESGDM\nproportionment/M\nproposal/SM\npropped\npropping\nproprietary/S\nproprietorial\nproprietorship/SM\nproprietor/SM\nproprietress/MS\npropriety/MS\nproprioception\nproprioceptive\nprop/SZ\npropulsion/MS\npropulsive\npropylene/M\nprorogation/SM\nprorogue\nprosaic\nprosaically\nproscenium/MS\nprosciutti\nprosciutto/SM\nproscription/SM\nproscriptive\npros/DSRG\nprosecute/SDBXNG\nprosecution/M\nprosecutor/MS\nproselyte/SDGM\nproselytism/MS\nproselytize/ZGDSR\nprose/M\nproser/M\nProserpine/M\nprosodic/S\nprosody/MS\nprospect/DMSVG\nprospection/SM\nprospectiveness/M\nprospective/SYP\nprospector/MS\nprospectus/SM\nprosper/GSD\nprosperity/MS\nprosperousness/M\nprosperous/PY\nprostate\nprostheses\nprosthesis/M\nprosthetic/S\nprosthetics/M\nprostitute/DSXNGM\nprostitution/M\nprostrate/SDXNG\nprostration/M\nprosy/RT\nprotactinium/MS\nprotagonist/SM\nProtagoras/M\nprotean/S\nprotease/M\nprotect/DVGS\nprotected/UY\nprotectionism/MS\nprotectionist/MS\nprotection/MS\nprotectiveness/S\nprotective/YPS\nprotectorate/SM\nprotector/MS\nprot�g�es\nprot�g�/SM\nprotein/MS\nproteolysis/M\nproteolytic\nProterozoic/M\nprotestantism\nProtestantism/MS\nprotestant/S\nProtestant/SM\nprotestation/MS\nprotest/G\nprotesting/Y\nProteus/M\nprotocol/DMGS\nprotoplasmic\nprotoplasm/MS\nprototype/SDGM\nprototypic\nprototypical/Y\nprotozoa\nprotozoan/MS\nprotozoic\nprotozoon\'s\nprotract/DG\nprotrude/SDG\nprotrusile\nprotrusion/MS\nprotrusive/PY\nprotuberance/S\nprotuberant\nProudhon/M\nproud/TRY\nProust/M\nprovabilities\nprovability\'s\nprovability/U\nprovableness/M\nprovable/P\nprovably\nprov/DRGZB\nproved/U\nproven/U\nprove/ESDAG\nprovenance/SM\nProven�al\nProvencals\nProvence/M\nprovender/SDG\nprovenience/SM\nprovenly\nproverb/DG\nproverbial/Y\nProverbs/M\nprover/M\nprovide/DRSBGZ\nprovided/U\nprovidence/SM\nProvidence/SM\nprovidential/Y\nprovident/Y\nprovider/M\nprovince/SM\nprovincialism/SM\nprovincial/SY\nprovisional/YS\nprovisioner/M\nprovision/R\nproviso/MS\nprovocateur/S\nprovocativeness/SM\nprovocative/P\nprovoked/U\nprovoke/GZDRS\nprovoking/Y\nprovolone/SM\nProvo/M\nprovost/MS\nprowess/SM\nprowler/M\nprowl/RDSZG\nprow/TRMS\nproximal/Y\nproximateness/M\nproximate/PY\nproximity/MS\nProxmire/M\nproxy/SM\nProzac\nprude/MS\nPrudence/M\nprudence/SM\nPrudential/M\nprudential/SY\nprudent/Y\nprudery/MS\nPrudi/M\nprudishness/SM\nprudish/YP\nPrudy/M\nPrue/M\nPruitt/M\nPru/M\nprune/DSRGZM\npruner/M\nprurience/MS\nprurient/Y\nPrussia/M\nPrussian/S\nprussic\nPrut/M\nPryce/M\npry/DRSGTZ\npryer\'s\nprying/Y\nP\'s\nPS\np\'s/A\npsalmist/SM\npsalm/SGDM\nPsalms/M\npsalter\nPsalter/SM\npsaltery/MS\npsephologist/M\npseudonymous\npseudonym/SM\npseudopod\npseudo/S\npseudoscience/S\npshaw/SDG\npsi/S\npsittacoses\npsittacosis/M\npsoriases\npsoriasis/M\npsst/S\nPST\npsychedelically\npsychedelic/S\npsyche/M\nPsyche/M\npsychiatric\npsychiatrist/SM\npsychiatry/MS\npsychical/Y\npsychic/MS\npsychoacoustic/S\npsychoacoustics/M\npsychoactive\npsychoanalysis/M\npsychoanalyst/S\npsychoanalytic\npsychoanalytical\npsychoanalyze/SDG\npsychobabble/S\npsychobiology/M\npsychocultural\npsychodrama/MS\npsychogenic\npsychokinesis/M\npsycholinguistic/S\npsycholinguistics/M\npsycholinguists\npsychological/Y\npsychologist/MS\npsychology/MS\npsychometric/S\npsychometrics/M\npsychometry/M\npsychoneuroses\npsychoneurosis/M\npsychopathic/S\npsychopath/M\npsychopathology/M\npsychopaths\npsychopathy/SM\npsychophysical/Y\npsychophysic/S\npsychophysics/M\npsychophysiology/M\npsychosis/M\npsycho/SM\npsychosocial/Y\npsychosomatic/S\npsychosomatics/M\npsychos/S\npsychotherapeutic/S\npsychotherapist/MS\npsychotherapy/SM\npsychotically\npsychotic/S\npsychotropic/S\npsychs\npsych/SDG\nPT\nPTA\nPtah/M\nptarmigan/MS\npt/C\npterodactyl/SM\nPt/M\nPTO\nPtolemaic\nPtolemaists\nPtolemy/MS\nptomaine/MS\nPu\npubbed\npubbing\npubertal\npuberty/MS\npubes\npubescence/S\npubescent\npubic\npubis/M\npublican/AMS\npublication/AMS\npublicist/SM\npublicity/SM\npublicized/U\npublicize/SDG\npublicness/M\npublics/A\npublic/YSP\npublishable/U\npublished/UA\npublisher/ASM\npublishes/A\npublishing/M\npublish/JDRSBZG\npub/MS\nPuccini/M\npuce/SM\npucker/DG\nPuckett/M\npuck/GZSDRM\npuckishness/S\npuckish/YP\nPuck/M\npudding/MS\npuddle/JMGRSD\npuddler/M\npuddling/M\npuddly\npudenda\npudendum/M\npudginess/SM\npudgy/PRT\nPuebla/M\nPueblo/MS\npueblo/SM\npuerile/Y\npuerility/SM\npuerperal\npuers\nPuerto/M\npuffball/SM\npuffer/M\npuffery/M\npuffiness/S\npuffin/SM\nPuff/M\npuff/SGZDRM\npuffy/PRT\nPuget/M\npugged\npugging\nPugh/M\npugilism/SM\npugilistic\npugilist/S\npug/MS\npugnaciousness/MS\npugnacious/YP\npugnacity/SM\npuissant/Y\npuke/GDS\npukka\nPulaski/SM\npulchritude/SM\npulchritudinous/M\npule/GDS\nPulitzer/SM\npullback/S\npull/DRGZSJ\npullet/SM\npulley/SM\nPullman/MS\npullout/S\npullover/SM\npulmonary\npulpiness/S\npulpit/MS\npulp/MDRGS\npulpwood/MS\npulpy/PTR\npulsar/MS\npulsate/NGSDX\npulsation/M\npulse/ADSG\npulser\npulse\'s\npulverable\npulverization/MS\npulverized/U\npulverize/GZSRD\npulverizer/M\npulverizes/UA\npuma/SM\npumice/SDMG\npummel/SDG\npumpernickel/SM\npump/GZSMDR\npumping/M\npumpkin/MS\npunchbowl/M\npunched/U\npuncheon/MS\npuncher/M\npunch/GRSDJBZ\npunchline/S\nPunch/M\npunchy/RT\npunctilio/SM\npunctiliousness/SM\npunctilious/PY\npunctualities\npunctuality/UM\npunctualness/M\npunctual/PY\npunctuate/SDXNG\npunctuational\npunctuation/M\npuncture/SDMG\npunditry/S\npundit/SM\npungency/MS\npungent/Y\nPunic\npuniness/MS\npunished/U\npunisher/M\npunishment/MS\npunish/RSDGBL\npunitiveness/M\npunitive/YP\nPunjabi/M\nPunjab/M\npunk/TRMS\npunky/PRS\npun/MS\npunned\npunning\npunster/SM\npunter/M\npunt/GZMDRS\npuny/PTR\npupae\npupal\npupa/M\npupate/NGSD\npupillage/M\npupil/SM\npup/MS\npupped\npuppeteer/SM\npuppetry/MS\npuppet/SM\npupping\npuppy/GSDM\npuppyish\npurblind\nPurcell/M\npurchasable\npurchase/GASD\npurchaser/MS\npurdah/M\npurdahs\nPurdue/M\npurebred/S\npuree/DSM\npureeing\npureness/MS\npure/PYTGDR\npurgation/M\npurgative/MS\npurgatorial\npurgatory/SM\npurge/GZDSR\npurger/M\npurify/GSRDNXZ\nPurim/SM\nPurina/M\npurine/SM\npurism/MS\npuristic\npurist/MS\npuritanic\npuritanical/Y\nPuritanism/MS\npuritanism/S\npuritan/SM\nPuritan/SM\npurity/SM\npurlieu/SM\npurl/MDGS\npurloin/DRGS\npurloiner/M\npurple/MTGRSD\npurplish\npurport/DRSZG\npurported/Y\npurposefulness/S\npurposeful/YP\npurposelessness/M\npurposeless/PY\npurpose/SDVGYM\npurposiveness/M\npurposive/YP\npurr/DSG\npurring/Y\npurse/DSRGZM\npurser/M\npursuance/MS\npursuant\npursuer/M\npursue/ZGRSD\npursuit/MS\npurulence/MS\npurulent\nPurus\npurveyance/MS\npurvey/DGS\npurveyor/MS\npurview/SM\nPusan/M\nPusey/M\npushbutton/S\npushcart/SM\npushchair/SM\npushdown\npush/DSRBGZ\npusher/M\npushily\npushiness/MS\nPushkin/M\npushover/SM\nPushtu/M\npushy/PRT\npusillanimity/MS\npusillanimous/Y\npus/SM\npuss/S\npussycat/S\npussyfoot/DSG\npussy/TRSM\npustular\npustule/MS\nputative/Y\nPutin/M\nput/IS\nPutnam/M\nPutnem/M\nputout/S\nputrefaction/SM\nputrefactive\nputrefy/DSG\nputrescence/MS\nputrescent\nputridity/M\nputridness/M\nputrid/YP\nputsch/S\nputted/I\nputtee/MS\nputter/RDMGZ\nputting/I\nputt/SGZMDR\nputtying/M\nputty/SDMG\npuzzle/JRSDZLG\npuzzlement/MS\npuzzler/M\nPVC\npvt\nPvt/M\nPW\nPX\np/XTGJ\nPygmalion/M\npygmy/SM\nPygmy/SM\nPyhrric/M\npyknotic\nPyle/M\npylon/SM\npylori\npyloric\npylorus/M\nPym/M\nPynchon/M\nPyongyang/M\npyorrhea/SM\nPyotr/M\npyramidal/Y\npyramid/GMDS\npyre/MS\nPyrenees\nPyrex/SM\npyridine/M\npyrimidine/SM\npyrite/MS\npyroelectric\npyroelectricity/SM\npyrolysis/M\npyrolyze/RSM\npyromaniac/SM\npyromania/MS\npyrometer/MS\npyrometry/M\npyrophosphate/M\npyrotechnical\npyrotechnic/S\npyrotechnics/M\npyroxene/M\npyroxenite/M\nPyrrhic\nPythagoras/M\nPythagorean/S\nPythias\nPython/M\npython/MS\npyx/MDSG\nq\nQ\nQA\nQaddafi/M\nQantas/M\nQatar/M\nQB\nQC\nQED\nQingdao\nQiqihar/M\nQM\nQom/M\nqr\nq\'s\nQ\'s\nqt\nqty\nqua\nQuaalude/M\nquackery/MS\nquackish\nquack/SDG\nquadded\nquadding\nquadrangle/MS\nquadrangular/M\nquadrant/MS\nquadraphonic/S\nquadrapole\nquadratical/Y\nquadratic/SM\nquadrature/MS\nquadrennial/SY\nquadrennium/MS\nquadric\nquadriceps/SM\nquadrilateral/S\nquadrille/XMGNSD\nquadrillion/MH\nquadripartite/NY\nquadriplegia/SM\nquadriplegic/SM\nquadrivia\nquadrivium/M\nquadrupedal\nquadruped/MS\nquadruple/GSD\nquadruplet/SM\nquadruplicate/GDS\nquadruply/NX\nquadrupole\nquad/SM\nquadword/MS\nquaffer/M\nquaff/SRDG\nquagmire/DSMG\nquahog/MS\nquail/GSDM\nquaintness/MS\nquaint/PTYR\nquake/GZDSR\nQuakeress/M\nQuakerism/S\nQuaker/SM\nquaky/RT\nqualification/ME\nqualified/UY\nqualifier/SM\nqualify/EGXSDN\nqualitative/Y\nquality/MS\nqualmish\nqualm/SM\nquandary/MS\nquangos\nquanta/M\nQuantico/M\nquantifiable/U\nquantified/U\nquantifier/M\nquantify/GNSRDZX\nquantile/S\nquantitativeness/M\nquantitative/PY\nquantity/MS\nquantization/MS\nquantizer/M\nquantize/ZGDRS\nquantum/M\nquarantine/DSGM\nquark/SM\nquarreler/M\nquarrellings\nquarrelsomeness/MS\nquarrelsome/PY\nquarrel/SZDRMG\nquarrier/M\nquarryman/M\nquarrymen\nquarry/RSDGM\nquarterback/SGMD\nquarterdeck/MS\nquarterer/M\nquarterfinal/MS\nquartering/M\nquarterly/S\nquartermaster/MS\nquarter/MDRYG\nquarterstaff/M\nquarterstaves\nquartet/SM\nquartic/S\nquartile/SM\nquarto/SM\nquart/RMSZ\nquartzite/M\nquartz/SM\nquasar/SM\nquash/GSD\nquasi\nquasilinear\nQuasimodo/M\nQuaternary\nquaternary/S\nquaternion/SM\nquatrain/SM\nquaver/GDS\nquavering/Y\nquavery\nQuayle/M\nquayside/M\nquay/SM\nqueasily\nqueasiness/SM\nqueasy/TRP\nQuebec/M\nQuechua/M\nQueenie/M\nqueenly/RT\nqueen/SGMDY\nQueensland/M\nQueen/SM\nqueerness/S\nqueer/STGRDYP\nqueller/M\nquell/SRDG\nQue/M\nquenchable/U\nquenched/U\nquencher/M\nquench/GZRSDB\nquenchless\nQuentin/M\nQuent/M\nQuerida/M\nquern/M\nquerulousness/S\nquerulous/YP\nquery/MGRSD\nquested/A\nquester/AS\nquester\'s\nquest/FSIM\nquesting\nquestionableness/M\nquestionable/P\nquestionably/U\nquestioned/UA\nquestioner/M\nquestioning/UY\nquestionnaire/MS\nquestion/SMRDGBZJ\nquests/A\nQuetzalcoatl/M\nqueued/C\nqueue/GZMDSR\nqueuer/M\nqueues/C\nqueuing/C\nQuezon/M\nquibble/GZRSD\nquibbler/M\nquiche/SM\nquicken/RDG\nquickie/MS\nquicklime/SM\nquickness/MS\nquick/RNYTXPS\nquicksand/MS\nquicksilver/GDMS\nquickstep/SM\nquid/SM\nquiesce/D\nquiescence/MS\nquiescent/YP\nquieted/E\nquieten/SGD\nquieter/E\nquieter\'s\nquieting/E\nquietly/E\nquietness/MS\nquiets/E\nquietude/IEMS\nquietus/MS\nquiet/UTGPSDRY\nQuillan/M\nquill/GSDM\nQuill/M\nquilter/M\nquilting/M\nquilt/SZJGRDM\nquincentenary/M\nquince/SM\nQuincey/M\nquincy/M\nQuincy/M\nquinine/MS\nQuinlan/M\nQuinn/M\nquinquennial/Y\nquinsy/SM\nQuinta/M\nQuintana/M\nquintessence/SM\nquintessential/Y\nquintet/SM\nquintic\nquintile/SM\nQuintilian/M\nQuintilla/M\nquintillion/MH\nquintillionth/M\nQuintina/M\nQuintin/M\nQuint/M\nquint/MS\nQuinton/M\nquintuple/SDG\nquintuplet/MS\nQuintus/M\nquip/MS\nquipped\nquipper\nquipping\nquipster/SM\nquired/AI\nquire/MDSG\nquires/AI\nQuirinal/M\nquiring/IA\nquirkiness/SM\nquirk/SGMD\nquirky/PTR\nquirt/SDMG\nQuisling/M\nquisling/SM\nquitclaim/GDMS\nquit/DGS\nquite/SADG\nQuito/M\nquittance/SM\nquitter/SM\nquitting\nquiver/GDS\nquivering/Y\nquivery\nQuixote/M\nquixotic\nquixotically\nQuixotism/M\nquiz/M\nquizzed\nquizzer/SM\nquizzes\nquizzical/Y\nquizzing\nquo/H\nquoin/SGMD\nquoit/GSDM\nquondam\nquonset\nQuonset\nquorate/I\nquorum/MS\nquotability/S\nquota/MS\nquotation/SM\nquoter/M\nquote/UGSD\nquot/GDRB\nquotidian/S\nquotient/SM\nqwerty\nqwertys\nRabat/M\nrabbet/GSMD\nRabbi/M\nrabbi/MS\nrabbinate/MS\nrabbinic\nrabbinical/Y\nrabbiter/M\nrabbit/MRDSG\nrabble/GMRSD\nrabbler/M\nRabelaisian\nRabelais/M\nrabidness/SM\nrabid/YP\nrabies\nRabi/M\nRabin/M\nrabis\nRab/M\nraccoon/SM\nracecourse/MS\nracegoers\nracehorse/SM\nraceme/MS\nrace/MZGDRSJ\nracer/M\nracetrack/SMR\nraceway/SM\nRachael/M\nRachele/M\nRachelle/M\nRachel/M\nRachmaninoff/M\nracialism/MS\nracialist/MS\nracial/Y\nracily\nRacine/M\nraciness/MS\nracism/S\nracist/MS\nracketeer/MDSJG\nracket/SMDG\nrackety\nrack/GDRMS\nraconteur/SM\nracoon\'s\nracquetball/S\nracquet\'s\nracy/RTP\nradarscope/MS\nradar/SM\nRadcliffe/M\nradded\nradder\nraddest\nRaddie/M\nradding\nRaddy/M\nradial/SY\nradiance/SM\nradian/SM\nradiant/YS\nradiate/XSDYVNG\nradiation/M\nradiative/Y\nradiator/MS\nradicalism/MS\nradicalization/S\nradicalize/GSD\nradicalness/M\nradical/SPY\nradices\'s\nradii/M\nradioactive/Y\nradioactivity/MS\nradioastronomical\nradioastronomy\nradiocarbon/MS\nradiochemical/Y\nradiochemistry/M\nradiogalaxy/S\nradiogram/SM\nradiographer/MS\nradiographic\nradiography/MS\nradioisotope/SM\nradiologic\nradiological/Y\nradiologist/MS\nradiology/MS\nradioman/M\nradiomen\nradiometer/SM\nradiometric\nradiometry/MS\nradionics\nradionuclide/M\nradiopasteurization\nradiophone/MS\nradiophysics\nradioscopy/SM\nradio/SMDG\nradiosonde/SM\nradiosterilization\nradiosterilized\nradiotelegraph\nradiotelegraphs\nradiotelegraphy/MS\nradiotelephone/SM\nradiotherapist/SM\nradiotherapy/SM\nradish/MS\nradium/MS\nradius/M\nradix/SM\nRad/M\nradon/SM\nrad/S\nRaeann/M\nRae/M\nRAF\nRafaela/M\nRafaelia/M\nRafaelita/M\nRafaellle/M\nRafaello/M\nRafael/M\nRafa/M\nRafe/M\nRaffaello/M\nRaffarty/M\nRafferty/M\nraffia/SM\nraffishness/SM\nraffish/PY\nraffle/MSDG\nRaff/M\nRafi/M\nRaf/M\nrafter/DM\nraft/GZSMDR\nraga/MS\nragamuffin/MS\nragbag/SM\nrage/MS\nraggedness/SM\nragged/PRYT\nraggedy/TR\nragging\nrag/GSMD\nraging/Y\nraglan/MS\nRagnar/M\nRagnar�k\nragout/SMDG\nragtag/MS\nragtime/MS\nragweed/MS\nragwort/M\nRahal/M\nrah/DG\nRahel/M\nrahs\nraider/M\nraid/MDRSGZ\nrailbird/S\nrail/CDGS\nrailer/SM\nrailhead/SM\nrailing/MS\nraillery/MS\nrailroader/M\nrailroading/M\nrailroad/SZRDMGJ\nrail\'s\nrailwaymen\nrailway/MS\nraiment/SM\nRaimondo/M\nRaimund/M\nRaimundo/M\nRaina/M\nrainbow/MS\nraincloud/S\nraincoat/SM\nraindrop/SM\nRaine/MR\nRainer/M\nrainfall/SM\nrainforest\'s\nrain/GSDM\nRainier/M\nrainless\nrainmaker/SM\nrainmaking/MS\nrainproof/GSD\nrainstorm/SM\nrainwater/MS\nrainy/RT\nraise/DSRGZ\nraiser/M\nraising/M\nraisin/MS\nrajah/M\nrajahs\nRajive/M\nraj/M\nRakel/M\nrake/MGDRS\nraker/M\nrakishness/MS\nrakish/PY\nRaleigh/M\nRalf/M\nRalina/M\nrally/GSD\nRalph/M\nRalston/M\nRa/M\nRamada/M\nRamadan/SM\nRamakrishna/M\nRama/M\nRaman/M\nRamayana/M\nramble/JRSDGZ\nrambler/M\nrambling/Y\nRambo/M\nrambunctiousness/S\nrambunctious/PY\nramekin/SM\nramie/MS\nramification/M\nramify/XNGSD\nRamirez/M\nRamiro/M\nramjet/SM\nRam/M\nrammed\nramming\nRamo/MS\nRamona/M\nRamonda/M\nRamon/M\nrampage/SDG\nrampancy/S\nrampant/Y\nrampart/SGMD\nramp/GMDS\nramrodded\nramrodding\nramrod/MS\nRAM/S\nRamsay/M\nRamses/M\nRamsey/M\nramshackle\nram/SM\nrams/S\nran/A\nRana/M\nRancell/M\nRance/M\nrancher/M\nrancho/SM\nranch/ZRSDMJG\nrancidity/MS\nrancidness/SM\nrancid/P\nrancorous/Y\nrancor/SM\nRandall/M\nRandal/M\nRanda/M\nRandee/M\nRandell/M\nRandene/M\nRandie/M\nRandi/M\nrandiness/S\nRand/M\nrand/MDGS\nRandolf/M\nRandolph/M\nrandomization/SM\nrandomize/SRDG\nrandomness/SM\nrandom/PYS\nRandy/M\nrandy/PRST\nRanee/M\nranee/SM\nranged/C\nrangeland/S\nranger/M\nranges/C\nrange/SM\nrang/GZDR\nranginess/S\nranging/C\nRangoon/M\nrangy/RPT\nRania/M\nRanice/M\nRanier/M\nRani/MR\nRanique/M\nrani\'s\nranked/U\nranker/M\nrank/GZTYDRMPJS\nRankine/M\nranking/M\nRankin/M\nrankle/SDG\nrankness/MS\nRanna/M\nransacker/M\nransack/GRDS\nRansell/M\nransomer/M\nRansom/M\nransom/ZGMRDS\nranter/M\nrant/GZDRJS\nranting/Y\nRaoul/M\nrapaciousness/MS\nrapacious/YP\nrapacity/MS\nrapeseed/M\nrape/SM\nRaphaela/M\nRaphael/M\nrapidity/MS\nrapidness/S\nrapid/YRPST\nrapier/SM\nrapine/SM\nrapist/MS\nrap/MDRSZG\nrapped\nrappelled\nrappelling\nrappel/S\nrapper/SM\nrapping/M\nrapporteur/SM\nrapport/SM\nrapprochement/SM\nrapscallion/MS\nraptness/S\nrapture/MGSD\nrapturousness/M\nrapturous/YP\nrapt/YP\nRapunzel/M\nRaquela/M\nRaquel/M\nrarebit/MS\nrarefaction/MS\nrarefy/GSD\nrareness/MS\nrare/YTPGDRS\nrarity/SM\nRasalgethi/M\nRasalhague/M\nrascal/SMY\nrasher/M\nrashness/S\nrash/PZTYSR\nRasia/M\nRasla/M\nRasmussen/M\nraspberry/SM\nrasper/M\nrasping/Y\nrasp/SGJMDR\nRasputin/M\nraspy/RT\nRastaban/M\nRastafarian/M\nraster/MS\nRastus/M\nratchet/MDSG\nrateable\nrated/U\nrate/KNGSD\nratepayer/SM\nrater/M\nrate\'s\nRatfor/M\nrather\nRather/M\nrathskeller/SM\nratifier/M\nratify/ZSRDGXN\nrating/M\nratiocinate/VNGSDX\nratiocination/M\nratio/MS\nrationale/SM\nrationalism/SM\nrationalistic\nrationalist/S\nrationality/MS\nrationalization/SM\nrationalizer/M\nrationalize/ZGSRD\nrationalness/M\nrational/YPS\nration/DSMG\nRatliff/M\nratlike\nratline/SM\nrat/MDRSJZGB\nrattail\nrattan/MS\nratted\nratter/MS\nratting\nrattlebrain/DMS\nrattle/RSDJGZ\nrattlesnake/MS\nrattletrap/MS\nrattling/Y\nrattly/TR\nrattrap/SM\nratty/RT\nraucousness/SM\nraucous/YP\nRaul/M\nraunchily\nraunchiness/S\nraunchy/RTP\nravage/GZRSD\nravager/M\nraveling/S\nRavel/M\nravel/UGDS\nraven/JGMRDS\nRaven/M\nravenous/YP\nraver/M\nrave/ZGDRSJ\nRavid/M\nRavi/M\nravine/SDGM\nravioli/SM\nravisher/M\nravishing/Y\nravish/LSRDZG\nravishment/SM\nRaviv/M\nRawalpindi/M\nrawboned\nrawhide/SDMG\nRawley/M\nRawlings/M\nRawlins/M\nRawlinson/M\nrawness/SM\nraw/PSRYT\nRawson/M\nRayburn/M\nRaychel/M\nRaye/M\nray/GSMD\nRayleigh/M\nRay/M\nRaymond/M\nRaymondville/M\nRaymund/M\nRaymundo/M\nRayna/M\nRaynard/M\nRaynell/M\nRayner/M\nRaynor/M\nrayon/SM\nRayshell/M\nRaytheon/M\nraze/DRSG\nrazer/M\nrazorback/SM\nrazorblades\nrazor/MDGS\nrazz/GDS\nrazzmatazz/S\nRb\nRBI/S\nRC\nRCA\nrcpt\nRCS\nrd\nRD\nRDA\nRd/M\nreabbreviate\nreachability\nreachable/U\nreachably\nreached/U\nreacher/M\nreach/GRB\nreacquisition\nreactant/SM\nreacted/U\nreaction\nreactionary/SM\nreactivity\nreadability/MS\nreadable/P\nreadably\nreaddress/G\nReade/M\nreader/M\nreadership/MS\nRead/GM\nreadied\nreadies\nreadily\nreadinesses\nreadiness/UM\nreading/M\nReading/M\nread/JGZBR\nreadopt/G\nreadout/MS\nreads/A\nreadying\nready/TUPR\nReagan/M\nReagen/M\nrealisms\nrealism\'s\nrealism/U\nrealistically/U\nrealistic/U\nrealist/SM\nreality/USM\nrealizability/MS\nrealizableness/M\nrealizable/SMP\nrealizably/S\nrealization/MS\nrealized/U\nrealize/JRSDBZG\nrealizer/M\nrealizes/U\nrealizing/MY\nrealm/M\nrealness/S\nrealpolitik/SM\nreal/RSTP\nrealtor\'s\nRealtor/S\nrealty/SM\nRea/M\nreamer/M\nream/MDRGZ\nReamonn/M\nreanimate\nreaper/M\nreappraise/G\nreap/SGZ\nrear/DRMSG\nrearguard/MS\nrearmost\nrearrange/L\nrearward/S\nreasonableness/SMU\nreasonable/UP\nreasonably/U\nReasoner/M\nreasoner/SM\nreasoning/MS\nreasonless\nreasons\nreason/UBDMG\nreassess/GL\nreassuringly/U\nreattach/GSL\nreawakening/M\nReba/M\nrebate/M\nRebbecca/M\nRebeca/M\nRebecca\'s\nRebecka/M\nRebekah/M\nRebeka/M\nRebekkah/M\nrebeller\nrebellion/SM\nrebelliousness/MS\nrebellious/YP\nrebel/MS\nRebe/M\nrebid\nrebidding\nrebind/G\nrebirth\nreboil/G\nrebook\nreboot/ZR\nrebound/G\nrebroadcast/MG\nrebuke/RSDG\nrebuking/Y\nrebus\nrebuttal/SM\nrebutting\nrec\nrecalcitrance/SM\nrecalcitrant/S\nrecalibrate/N\nrecantation/S\nrecant/G\nrecap\nrecappable\nrecapping\nrecast/G\nrecd\nrec\'d\nrecede\nreceipt/SGDM\nreceivable/S\nreceived/U\nreceiver/M\nreceivership/SM\nreceive/ZGRSDB\nrecency/M\nrecension/M\nrecentness/SM\nrecent/YPT\nreceptacle/SM\nreceptionist/MS\nreception/MS\nreceptiveness/S\nreceptive/YP\nreceptivity/S\nreceptor/MS\nrecessional/S\nrecessionary\nrecessiveness/M\nrecessive/YPS\nrecess/SDMVG\nrechargeable\nrecheck/G\nrecherch�\nrecherches\nrecidivism/MS\nrecidivist/MS\nRecife/M\nrecipe/MS\nrecipiency\nrecipient/MS\nreciprocal/SY\nreciprocate/NGXVDS\nreciprocation/M\nreciprocity/MS\nrecitalist/S\nrecital/MS\nrecitative/MS\nreciter/M\nrecite/ZR\nrecked\nrecking\nrecklessness/S\nreckless/PY\nreckoner/M\nreckoning/M\nreckon/SGRDJ\nreclaim/B\nreclamation/SM\nrecliner/M\nrecline/RSDZG\nrecluse/MVNS\nreclusion/M\nrecode/G\nrecognizability\nrecognizable/U\nrecognizably\nrecognize/BZGSRD\nrecognizedly/S\nrecognized/U\nrecognizer/M\nrecognizingly/S\nrecognizing/UY\nrecoilless\nrecoinage\nrecolor/GD\nrecombinant\nrecombine\nrecommended/U\nrecompense/GDS\nrecompute/B\nreconciled/U\nreconciler/M\nreconcile/SRDGB\nreconditeness/M\nrecondite/YP\nreconfigurability\nreconfigure/R\nreconnaissance/MS\nreconnect/R\nreconnoiter/GSD\nreconquer/G\nreconsecrate\nreconstitute\nreconstructed/U\nReconstruction/M\nreconsult/G\nrecontact/G\nrecontaminate/N\nrecontribute\nrecook/G\nrecopy/G\nrecorded/AU\nrecords/A\nrecord/ZGJ\nrecourse\nrecoverability\nrecoverable/U\nrecover/B\nrecovery/MS\nrecreant/S\nrecreational\nrecriminate/GNVXDS\nrecrimination/M\nrecriminatory\nrecross/G\nrecrudesce/GDS\nrecrudescence/MS\nrecrudescent\nrecruiter/M\nrecruitment/MS\nrecruit/ZSGDRML\nrecrystallize\nrectal/Y\nrectangle/SM\nrectangular/Y\nrecta\'s\nrectifiable\nrectification/M\nrectifier/M\nrectify/DRSGXZN\nrectilinear/Y\nrectitude/MS\nrecto/MS\nrector/SM\nrectory/MS\nrectum/SM\nrecumbent/Y\nrecuperate/VGNSDX\nrecuperation/M\nrecur\nrecurrence/MS\nrecurrent\nrecurse/NX\nrecursion/M\nrecusant/M\nrecuse\nrecyclable/S\nrecycle/BZ\nredact/DGS\nredaction/SM\nredactor/MS\nredbird/SM\nredbreast/SM\nredbrick/M\nredbud/M\nredcap/MS\nredcoat/SM\nredcurrant/M\nredden/DGS\nredder\nreddest\nredding\nreddish/P\nRedd/M\nredeclaration\nredecorate\nredeemable/U\nredeem/BRZ\nredeemed/U\nredeemer/M\nRedeemer/M\nredemptioner/M\nredemption/RMS\nredemptive\nredeposit/M\nredetermination\nRedford/M\nRedgrave/M\nredhead/DRMS\nRedhook/M\nredial/G\nredirect/G\nredirection\nredlining/S\nRedmond/M\nredneck/SMD\nredness/MS\nredo/G\nredolence/MS\nredolent\nRedondo/M\nredouble/S\nredoubtably\nredound/GDS\nred/PYS\nredshift/S\nredskin/SM\nRedstone/M\nreduced/U\nreducer/M\nreduce/RSDGZ\nreducibility/M\nreducible\nreducibly\nreductionism/M\nreductionist/S\nreduction/SM\nreduct/V\nredundancy/SM\nredundant/Y\nredwood/SM\nredye\nredyeing\nReeba/M\nReebok/M\nReece/M\nreecho/G\nreed/GMDR\nreediness/SM\nreeding/M\nReed/M\nReedville/M\nreedy/PTR\nreefer/M\nreef/GZSDRM\nreeker/M\nreek/GSR\nreeler/M\nreel\'s\nreel/USDG\nRee/MDS\nReena/M\nreenforcement\nreentrant\nReese/M\nreestimate/M\nReeta/M\nReeva/M\nreeve/G\nReeves\nreexamine\nrefection/SM\nrefectory/SM\nrefer/B\nrefereed/U\nrefereeing\nreferee/MSD\nreference/CGSRD\nreferenced/U\nreference\'s\nreferencing/U\nreferendum/MS\nreferentiality\nreferential/YM\nreferent/SM\nreferral/SM\nreferred\nreferrer/S\nreferring\nreffed\nreffing\nrefile\nrefinance\nrefined/U\nrefine/LZ\nrefinement/MS\nrefinish/G\nrefit\nreflectance/M\nreflected/U\nreflectional\nreflection/SM\nreflectiveness/M\nreflective/YP\nreflectivity/M\nreflector/MS\nreflect/SDGV\nreflexion/MS\nreflexiveness/M\nreflexive/PSY\nreflexivity/M\nreflex/YV\nreflooring\nrefluent\nreflux/G\nrefocus/G\nrefold/G\nreforestation\nreforge/G\nreformatory/SM\nreform/B\nreformed/U\nreformer/M\nreformism/M\nreformist/S\nrefract/DGVS\nrefractiveness/M\nrefractive/PY\nrefractometer/MS\nrefractoriness/M\nrefractory/PS\nrefrain/DGS\nrefreshed/U\nrefreshing/Y\nrefresh/LB\nrefreshment/MS\nrefrigerant/MS\nrefrigerated/U\nrefrigerate/XDSGN\nrefrigeration/M\nrefrigerator/MS\nrefrozen\nrefry/GS\nrefugee/MS\nrefuge/SDGM\nRefugio/M\nrefulgence/SM\nrefulgent\nrefund/B\nrefunder/M\nrefurbish/L\nrefurbishment/S\nrefusal/SM\nrefuse/R\nrefuser/M\nrefutation/MS\nrefute/GZRSDB\nrefuter/M\nref/ZS\nreg\nregale/L\nregalement/S\nregal/GYRD\nregalia/M\nRegan/M\nregard/EGDS\nregardless/PY\nregather/G\nregatta/MS\nregency/MS\nregeneracy/MS\nregenerately\nregenerateness/M\nregenerate/U\nRegen/M\nreggae/SM\nReggie/M\nReggi/MS\nReggy/M\nregicide/SM\nregime/MS\nregimen/MS\nregimental/S\nregimentation/MS\nregiment/SDMG\nReginae\nReginald/M\nRegina/M\nReginauld/M\nRegine/M\nregionalism/MS\nregional/SY\nregion/SM\nRegis/M\nregister\'s\nregister/UDSG\nregistrable\nregistrant/SM\nregistrar/SM\nregistration/AM\nregistrations\nregistry/MS\nReg/MN\nregnant\nRegor/M\nregress/DSGV\nregression/MS\nregressiveness/M\nregressive/PY\nregressors\nregretfulness/M\nregretful/PY\nregret/S\nregrettable\nregrettably\nregretted\nregretting\nreground\nregroup/G\nregrow/G\nregularity/MS\nregularization/MS\nregularize/SDG\nregular/YS\nregulate/CSDXNG\nregulated/U\nregulation/M\nregulative\nregulator/SM\nregulatory\nRegulus/M\nregurgitate/XGNSD\nregurgitation/M\nrehabbed\nrehabbing\nrehabilitate/SDXVGN\nrehabilitation/M\nrehab/S\nrehang/G\nrehear/GJ\nrehearsal/SM\nrehearse\nrehearsed/U\nrehearser/M\nrehears/R\nreheat/G\nreheating/M\nRehnquist\nrehydrate\nReichenberg/M\nReich/M\nReichstags\nReichstag\'s\nReidar/M\nReider/M\nReid/MR\nreign/MDSG\nReiko/M\nReilly/M\nreimburse/GSDBL\nreimbursement/MS\nReinald/M\nReinaldo/MS\nReina/M\nreindeer/M\nReine/M\nreinforced/U\nreinforce/GSRDL\nreinforcement/MS\nreinforcer/M\nrein/GDM\nReinhard/M\nReinhardt/M\nReinhold/M\nReinold/M\nreinstate/L\nreinstatement/MS\nreinsurance\nReinwald/M\nreissue\nREIT\nreiterative/SP\nrejecter/M\nrejecting/Y\nrejection/SM\nrejector/MS\nreject/RDVGS\nrejigger\nrejoice/RSDJG\nrejoicing/Y\nrejoinder/SM\nrejuvenate/NGSDX\nrejuvenatory\nrelapse\nrelatedly\nrelatedness/MS\nrelated/U\nrelater/M\nrelate/XVNGSZ\nrelational/Y\nrelation/M\nrelationship/MS\nrelativeness/M\nrelative/SPY\nrelativism/M\nrelativistic\nrelativistically\nrelativist/MS\nrelativity/MS\nrelator\'s\nrelaxant/SM\nrelaxation/MS\nrelaxedness/M\nrelaxed/YP\nrelax/GZD\nrelaxing/Y\nrelay/GDM\nrelearn/G\nreleasable/U\nrelease/B\nreleased/U\nrelenting/U\nrelentlessness/SM\nrelentless/PY\nrelent/SDG\nrelevance/SM\nrelevancy/MS\nrelevant/Y\nreliability/UMS\nreliables\nreliable/U\nreliably/U\nreliance/MS\nreliant/Y\nrelicense/R\nrelic/MS\nrelict/C\nrelict\'s\nrelief/M\nrelievedly\nrelieved/U\nreliever/M\nrelieve/RSDZG\nreligionists\nreligion/SM\nreligiosity/M\nreligiousness/MS\nreligious/PY\nrelink/G\nrelinquish/GSDL\nrelinquishment/SM\nreliquary/MS\nrelish/GSD\nrelive/GB\nreload/GR\nrelocate/B\nreluctance/MS\nreluctant/Y\nrel/V\nrely/DG\nrem\nRe/M\nremade/S\nremainder/SGMD\nremain/GD\nremake/M\nremand/DGS\nremap\nremapping\nremarkableness/S\nremarkable/U\nremarkably\nremark/BG\nremarked/U\nRemarque/M\nrematch/G\nRembrandt/M\nremeasure/D\nremediableness/M\nremediable/P\nremedy/SDMG\nremembered/U\nrememberer/M\nremember/GR\nremembrance/MRS\nremembrancer/M\nRemington/M\nreminisce/GSD\nreminiscence/SM\nreminiscent/Y\nremissness/MS\nremiss/YP\nremit/S\nremittance/MS\nremitted\nremitting/U\nRem/M\nremnant/MS\nremodel/G\nremolding\nremonstrant/MS\nremonstrate/SDXVNG\nremonstration/M\nremonstrative/Y\nremorsefulness/M\nremorseful/PY\nremorselessness/MS\nremorseless/YP\nremorse/SM\nremoteness/MS\nremote/RPTY\nremoulds\nremoval/MS\nREM/S\nremunerated/U\nremunerate/VNGXSD\nremuneration/M\nremunerativeness/M\nremunerative/YP\nRemus/M\nRemy/M\nRenado/M\nRenae/M\nrenaissance/S\nRenaissance/SM\nrenal\nRenaldo/M\nRena/M\nRenard/M\nRenascence/SM\nRenata/M\nRenate/M\nRenato/M\nrenaturation\nRenaud/M\nRenault/MS\nrend\nrenderer/M\nrender/GJRD\nrendering/M\nrendezvous/DSMG\nrendition/GSDM\nrend/RGZS\nRenee/M\nrenegade/SDMG\nrenege/GZRSD\nreneger/M\nRenelle/M\nRenell/M\nRene/M\nrenewal/MS\nrenew/BG\nrenewer/M\nRenie/M\nrennet/MS\nRennie/M\nrennin/SM\nRenoir/M\nReno/M\nrenounce/LGRSD\nrenouncement/MS\nrenouncer/M\nrenovate/NGXSD\nrenovation/M\nrenovator/SM\nrenown/SGDM\nRensselaer/M\nrentaller\nrental/SM\nrenter/M\nrent/GZMDRS\nrenumber/G\nrenumeration\nrenunciate/VNX\nrenunciation/M\nRenville/M\nreoccupy/G\nreopen/G\nreorganized/U\nrepack/G\nrepairable/U\nrepair/BZGR\nrepairer/M\nrepairman/M\nrepairmen\nrepairs/E\nrepaper\nreparable\nreparation/SM\nreparteeing\nrepartee/MDS\nrepartition/Z\nrepast/G\nrepatriate/SDXNG\nrepave\nrepealer/M\nrepeal/GR\nrepeatability/M\nrepeatable/U\nrepeatably\nrepeated/Y\nrepeater/M\nrepeat/RDJBZG\nrepelled\nrepellent/SY\nrepelling/Y\nrepel/S\nrepentance/SM\nrepentant/SY\nrepent/RDG\nrepertoire/SM\nrepertory/SM\nrepetition\nrepetitiousness/S\nrepetitious/YP\nrepetitiveness/MS\nrepetitive/PY\nrepine/R\nrepiner/M\nreplace/RL\nreplay/GM\nreplenish/LRSDG\nreplenishment/S\nrepleteness/MS\nreplete/SDPXGN\nrepletion/M\nreplica/SM\nreplicate/SDVG\nreplicator/S\nreplug\nreply/X\nRep/M\nrepopulate\nreported/Y\nreportorial/Y\nreposeful\nrepose/M\nrepository/MS\nreprehend/GDS\nreprehensibility/MS\nreprehensibleness/M\nreprehensible/P\nreprehensibly\nreprehension/MS\nrepresentable/U\nrepresentational/Y\nrepresentativeness/M\nRepresentative/S\nrepresentative/SYMP\nrepresentativity\nrepresented/U\nrepresent/GB\nrepression/SM\nrepressiveness/M\nrepressive/YP\nrepress/V\nreprieve/GDS\nreprimand/SGMD\nreprint/M\nreprisal/MS\nreproacher/M\nreproachfulness/M\nreproachful/YP\nreproach/GRSDB\nreproaching/Y\nreprobate/N\nreprocess/G\nreproducibility/MS\nreproducible/S\nreproducibly\nreproductive/S\nreproof/G\nreprove/R\nreproving/Y\nrep/S\nreptile/SM\nreptilian/S\nRepublicanism/S\nrepublicanism/SM\nRepublican/S\nrepublic/M\nrepublish/G\nrepudiate/XGNSD\nrepudiation/M\nrepudiator/S\nrepugnance/MS\nrepugnant/Y\nrepulse/VNX\nrepulsion/M\nrepulsiveness/MS\nrepulsive/PY\nreputability/SM\nreputably/E\nreputation/SM\nreputed/Y\nrepute/ESB\nreputing\nrequested/U\nrequest/G\nRequiem/MS\nrequiem/SM\nrequire/LR\nrequirement/MS\nrequisiteness/M\nrequisite/PNXS\nrequisitioner/M\nrequisition/GDRM\nrequital/MS\nrequited/U\nrequiter/M\nrequite/RZ\nreread/G\nrerecord/G\nrerouteing\nrerunning\nres/C\nrescale\nrescind/SDRG\nrescission/SM\nrescue/GZRSD\nreseal/BG\nresearch/MB\nreselect/G\nresemblant\nresemble/DSG\nresend/G\nresent/DSLG\nresentfulness/SM\nresentful/PY\nresentment/MS\nreserpine/MS\nreservation/MS\nreservednesses\nreservedness/UM\nreserved/UYP\nreservist/SM\nreservoir/MS\nreset/RDG\nresettle/L\nreshipping\nreshow/G\nreshuffle/M\nreside/G\nresidence/MS\nresidency/SM\nresidential/Y\nresident/SM\nresider/M\nresidua\nresidual/YS\nresiduary\nresidue/SM\nresiduum/M\nresignation/MS\nresigned/YP\nresilience/MS\nresiliency/S\nresilient/Y\nresin/D\nresinlike\nresinous\nresiny\nresistance/SM\nResistance/SM\nresistantly\nresistants\nresistant/U\nresisted/U\nresistible\nresistibly\nresisting/U\nresistiveness/M\nresistive/PY\nresistivity/M\nresistless\nresistor/MS\nresist/RDZVGS\nresize/G\nresold\nresole/G\nresoluble\nresoluteness/MS\nresolute/PYTRV\nresolvability/M\nresolvable/U\nresolved/U\nresolvent\nresonance/SM\nresonant/YS\nresonate/DSG\nresonator/MS\nresorption/MS\nresort/R\nresound/G\nresourcefulness/SM\nresourceful/PY\nresp\nrespectability/SM\nrespectable/SP\nrespectably\nrespect/BSDRMZGV\nrespected/E\nrespectful/EY\nrespectfulness/SM\nrespecting/E\nrespectiveness/M\nrespective/PY\nrespect\'s/E\nrespects/E\nrespell/G\nrespiration/MS\nrespirator/SM\nrespiratory/M\nresplendence/MS\nresplendent/Y\nrespondent/MS\nrespond/SDRZG\nresponser/M\nresponse/RSXMV\nresponsibility/MS\nresponsibleness/M\nresponsible/P\nresponsibly\nresponsiveness/MSU\nresponsive/YPU\nrespray/G\nrestart/B\nrestate/L\nrestaurant/SM\nrestaurateur/SM\nrest/DRSGVM\nrested/U\nrester/M\nrestfuller\nrestfullest\nrestfulness/MS\nrestful/YP\nrestitution/SM\nrestiveness/SM\nrestive/PY\nrestlessness/MS\nrestless/YP\nrestorability\nRestoration/M\nrestoration/MS\nrestorative/PYS\nrestorer/M\nrestore/Z\nrestrained/UY\nrestraint/MS\nrestrict/DVGS\nrestricted/YU\nrestriction/SM\nrestrictively\nrestrictiveness/MS\nrestrictives\nrestrictive/U\nrestroom/SM\nrestructurability\nrestructure\nrest\'s/U\nrests/U\nrestudy/M\nrestyle\nresubstitute\nresultant/YS\nresult/SGMD\nresume/SDBG\nresumption/MS\nresurface\nresurgence/MS\nresurgent\nresurrect/GSD\nresurrection/SM\nresurvey/G\nresuscitate/XSDVNG\nresuscitation/M\nresuscitator/MS\nretail/Z\nretainer/M\nretain/LZGSRD\nretake\nretaliate/VNGXSD\nretaliation/M\nretaliatory\nReta/M\nretardant/SM\nretardation/SM\nretarder/M\nretard/ZGRDS\nretch/SDG\nretention/SM\nretentiveness/S\nretentive/YP\nretentivity/M\nretest/G\nRetha/M\nrethought\nreticence/S\nreticent/Y\nreticle/SM\nreticular\nreticulate/GNYXSD\nreticulation/M\nreticule/MS\nreticulum/M\nretinal/S\nretina/SM\nretinue/MS\nretiredness/M\nretiree/MS\nretire/L\nretirement/SM\nretiring/YP\nretort/GD\nretract/DG\nretractile\nretrench/L\nretrenchment/MS\nretributed\nretribution/MS\nretributive\nretrieval/SM\nretriever/M\nretrieve/ZGDRSB\nretroactive/Y\nretrofire/GMSD\nretrofit/S\nretrofitted\nretrofitting\nretroflection\nretroflex/D\nretroflexion/M\nretrogradations\nretrograde/GYDS\nretrogression/MS\nretrogressive/Y\nretrogress/SDVG\nretrorocket/MS\nretro/SM\nretrospection/MS\nretrospective/SY\nretrospect/SVGMD\nretrovirus/S\nretrovision\nretry/G\nretsina/SM\nreturnable/S\nreturned/U\nreturnee/SM\nretype\nReube/M\nReuben/M\nReub/NM\nReunion/M\nreuse/B\nReuters\nReuther/M\nreutilization\nReuven/M\nReva/M\nrevanchist\nrevealed/U\nrevealingly\nrevealing/U\nreveal/JBG\nreveille/MS\nrevelation/MS\nRevelation/MS\nrevelatory\nrevelry/MS\nrevel/SJRDGZ\nrevenge/MGSRD\nrevenger/M\nrevenuer/M\nrevenue/ZR\nreverberant\nreverberate/XVNGSD\nreverberation/M\nrevere/GSD\nRevere/M\nreverencer/M\nreverence/SRDGM\nReverend\nreverend/SM\nreverential/Y\nreverent/Y\nreverie/SM\nreversal/MS\nreverser/M\nreverse/Y\nreversibility/M\nreversible/S\nreversibly\nreversioner/M\nreversion/R\nrevers/M\nreverter/M\nrevertible\nrevert/RDVGS\nrevet/L\nrevetment/SM\nreview/G\nrevile/GZSDL\nrevilement/MS\nreviler/M\nrevise/BRZ\nrevised/U\nrevisionary\nrevisionism/SM\nrevisionist/SM\nrevitalize/ZR\nrevivalism/MS\nrevivalist/MS\nrevival/SM\nreviver/M\nrevive/RSDG\nrevivification/M\nrevivify/X\nRevkah/M\nRevlon/M\nRev/M\nrevocable\nrevoke/GZRSD\nrevolter/M\nrevolt/GRD\nrevolting/Y\nrevolutionariness/M\nrevolutionary/MSP\nrevolutionist/MS\nrevolutionize/GDSRZ\nrevolutionizer/M\nrevolution/SM\nrevolve/BSRDZJG\nrevolver/M\nrevue/MS\nrevulsion/MS\nrevved\nrevving\nrev/ZM\nrewarded/U\nrewarding/Y\nrewarm/G\nreweave\nrewedding\nreweigh/G\nrewind/BGR\nrewire/G\nrework/G\nrexes\nRex/M\nReyes\nReykjavik/M\nre/YM\nRey/M\nReynaldo/M\nReyna/M\nReynard/M\nReynold/SM\nrezone\nRf\nRF\nRFC\nRFD\nR/G\nrhapsodic\nrhapsodical\nrhapsodize/GSD\nrhapsody/SM\nRhea/M\nrhea/SM\nRheba/M\nRhee/M\nRheims/M\nRheinholdt/M\nRhenish\nrhenium/MS\nrheology/M\nrheostat/MS\nrhesus/S\nRheta/M\nrhetorical/YP\nrhetorician/MS\nrhetoric/MS\nRhetta/M\nRhett/M\nrheumatically\nrheumatic/S\nrheumatics/M\nrheumatism/SM\nrheumatoid\nrheum/MS\nrheumy/RT\nRhiamon/M\nRhianna/M\nRhiannon/M\nRhianon/M\nRhinelander/M\nRhineland/RM\nRhine/M\nrhinestone/SM\nrhinitides\nrhinitis/M\nrhinoceros/MS\nrhino/MS\nrhinotracheitis\nrhizome/MS\nRh/M\nRhoda/M\nRhodes\nRhodesia/M\nRhodesian/S\nRhodia/M\nRhodie/M\nrhodium/MS\nrhododendron/SM\nrhodolite/M\nrhodonite/M\nRhody/M\nrhombic\nrhomboidal\nrhomboid/SM\nrhombus/SM\nrho/MS\nRhona/M\nRhonda/M\nRhone\nrhubarb/MS\nrhyme/DSRGZM\nrhymester/MS\nRhys/M\nrhythmical/Y\nrhythmic/S\nrhythmics/M\nrhythm/MS\nRI\nrial/MS\nRiane/M\nRiannon/M\nRianon/M\nribaldry/MS\nribald/S\nribbed\nRibbentrop/M\nribber/S\nribbing/M\nribbon/DMSG\nribcage\nrib/MS\nriboflavin/MS\nribonucleic\nribosomal\nribosome/MS\nRica/M\nRican/SM\nRicard/M\nRicardo/M\nRicca/M\nRiccardo/M\nrice/DRSMZG\nRice/M\nricer/M\nRichard/MS\nRichardo/M\nRichardson/M\nRichart/M\nRichelieu/M\nrichen/DG\nRichey/M\nRichfield/M\nRichie/M\nRichland/M\nRich/M\nRichmond/M\nRichmound/M\nrichness/MS\nRichter/M\nRichthofen/M\nRichy/M\nrich/YNSRPT\nRici/M\nRickard/M\nRickenbacker/M\nRickenbaugh/M\nRickert/M\nrickets/M\nrickety/RT\nRickey/M\nrick/GSDM\nRickie/M\nRicki/M\nRick/M\nRickover/M\nrickrack/MS\nrickshaw/SM\nRicky/M\nRic/M\nricochet/GSD\nRico/M\nRicoriki/M\nricotta/MS\nriddance/SM\nridden\nridding\nriddle/GMRSD\nRiddle/M\nride/CZSGR\nRide/M\nrider/CM\nriderless\nridership/S\nridge/DSGM\nRidgefield/M\nridgepole/SM\nRidgway/M\nridgy/RT\nridicule/MGDRS\nridiculer/M\nridiculousness/MS\nridiculous/PY\nriding/M\nrid/ZGRJSB\nRiemann/M\nRiesling/SM\nrife/RT\nriff/GSDM\nriffle/SDG\nriffraff/SM\nrifled/U\nrifle/GZMDSR\nrifleman/M\nriflemen\nrifler/M\nrifling/M\nrift/GSMD\nRiga/M\nrigamarole\'s\nrigatoni/M\nRigel/M\nrigged\nrigger/SM\nrigging/MS\nRiggs/M\nrighteousnesses/U\nrighteousness/MS\nrighteous/PYU\nrightfulness/MS\nrightful/PY\nrightism/SM\nrightist/S\nrightmost\nrightness/MS\nRight/S\nright/SGTPYRDN\nrightsize/SDG\nrights/M\nrightward/S\nrigidify/S\nrigidity/S\nrigidness/S\nrigid/YP\nrigmarole/MS\nrig/MS\nRigoberto/M\nRigoletto/M\nrigor/MS\nrigorousness/S\nrigorous/YP\nRiki/M\nRikki/M\nRik/M\nrile/DSG\nRiley/M\nRilke/M\nrill/GSMD\nRimbaud/M\nrime/MS\nrimer/M\nrim/GSMDR\nrimless\nrimmed\nrimming\nRinaldo/M\nRina/M\nrind/MDGS\nRinehart/M\nringer/M\nring/GZJDRM\nringing/Y\nringleader/MS\nringlet/SM\nringlike\nRingling/M\nRing/M\nringmaster/MS\nRingo/M\nringside/ZMRS\nringworm/SM\nrink/GDRMS\nrinse/DSRG\nRiobard/M\nRio/MS\nRiordan/M\nrioter/M\nriotousness/M\nriotous/PY\nriot/SMDRGZJ\nRIP\nriparian/S\nripcord/SM\nripened/U\nripenesses\nripeness/UM\nripen/RDG\nripe/PSY\nriper/U\nripest/U\nRipley/M\nRip/M\nrip/NDRSXTG\nripoff/S\nriposte/SDMG\nripped\nripper/SM\nripping\nrippler/M\nripple/RSDGM\nripply/TR\nripsaw/GDMS\nriptide/SM\nRisa/M\nRISC\nrisen\nriser/M\nrise/RSJZG\nrisibility/SM\nrisible/S\nrising/M\nrisker/M\nrisk/GSDRM\nriskily\nriskiness/MS\nrisky/RTP\nrisotto/SM\nrisqu�\nrissole/M\nRitalin\nRita/M\nRitchie/M\nrite/DSM\nRitter/M\nritualism/SM\nritualistic\nritualistically\nritualized\nritual/MSY\nRitz/M\nritzy/TR\nrivaled/U\nRivalee/M\nrivalry/MS\nrival/SGDM\nRiva/MS\nrive/CSGRD\nRivera/M\nriverbank/SM\nriverbed/S\nriverboat/S\nriver/CM\nriverfront\nriverine\nRivers\nRiverside/M\nriverside/S\nRiverview/M\nriveter/M\nrivet/GZSRDM\nriveting/Y\nRiviera/MS\nRivi/M\nRivkah/M\nrivulet/SM\nRivy/M\nriv/ZGNDR\nRiyadh/M\nriyal/SM\nrm\nRMS\nRN\nRNA\nRn/M\nroach/GSDM\nRoach/M\nroadbed/MS\nroadblock/SMDG\nroadhouse/SM\nroadie/S\nroadkill/S\nroad/MIS\nroadrunner/MS\nroadshow/S\nroadside/S\nroadsigns\nroadster/SM\nroadsweepers\nroadway/SM\nroadwork/SM\nroadworthy\nroam/DRGZS\nRoana/M\nRoanna/M\nRoanne/M\nRoanoke/M\nroan/S\nroar/DRSJGZ\nroarer/M\nroaring/T\nRoarke/M\nroaster/M\nroast/SGJZRD\nrobbed\nrobber/SM\nRobbert/M\nrobbery/SM\nRobbie/M\nRobbi/M\nrobbing\nRobbin/MS\nRobb/M\nRobby/M\nRobbyn/M\nrobe/ESDG\nRobena/M\nRobenia/M\nRobers/M\nRoberson/M\nRoberta/M\nRobert/MS\nRoberto/M\nRobertson/SM\nrobe\'s\nRobeson/M\nRobespierre/M\nRobina/M\nRobinet/M\nRobinetta/M\nRobinette/M\nRobinett/M\nRobinia/M\nRobin/M\nrobin/MS\nRobinson/M\nRobinsonville/M\nRobles/M\nRob/MZ\nrobotic/S\nrobotism\nrobotize/GDS\nrobot/MS\nrob/SDG\nRobson/M\nRobt/M\nrobustness/SM\nrobust/RYPT\nRoby/M\nRobyn/M\nRocco/M\nRocha/M\nRochambeau/M\nRochella/M\nRochelle/M\nRochell/M\nRoche/M\nRochester/M\nRochette/M\nRoch/M\nrockabilly/MS\nrockabye\nRockaway/MS\nrockbound\nRockefeller/M\nrocker/M\nrocketry/MS\nrocket/SMDG\nRockey/M\nrockfall/S\nRockford/M\nrock/GZDRMS\nRockie/M\nrockiness/MS\nRockland/M\nRock/M\nRockne/M\nRockville/M\nRockwell/M\nRocky/SM\nrocky/SRTP\nrococo/MS\nRoda/M\nrodded\nRoddenberry/M\nrodder\nRoddie/M\nrodding\nRodd/M\nRoddy/M\nrodent/MS\nrodeo/SMDG\nRoderich/M\nRoderick/M\nRoderic/M\nRoderigo/M\nrode/S\nRodger/M\nRodge/ZMR\nRodie/M\nRodi/M\nRodina/M\nRodin/M\nRod/M\nRodney/M\nRodolfo/M\nRodolphe/M\nRodolph/M\nRodrick/M\nRodrigo/M\nRodriguez/M\nRodrique/M\nRodriquez/M\nrod/SGMD\nroebuck/SM\nRoentgen\'s\nroentgen/SM\nroe/SM\nROFL\nRogelio/M\nroger/GSD\nRogerio/M\nRoger/M\nRoget/M\nRog/MRZ\nrogued/K\nrogue/GMDS\nroguery/MS\nrogues/K\nroguing/K\nroguishness/SM\nroguish/PY\nroil/SGD\nRoi/SM\nroisterer/M\nroister/SZGRD\nRojas/M\nRoland/M\nRolando/M\nRoldan/M\nrole/MS\nRoley/M\nRolfe/M\nRolf/M\nRolland/M\nrollback/SM\nrolled/A\nRollerblade/S\nrollerskating\nroller/SM\nrollick/DGS\nrollicking/Y\nRollie/M\nrolling/S\nRollin/SM\nRollo/M\nrollover/S\nroll/UDSG\nRolodex\nRolph/M\nRolvaag/M\nROM\nromaine/MS\nRomain/M\nRoma/M\nromancer/M\nromance/RSDZMG\nRomanesque/S\nRomania/M\nRomanian/SM\nRomano/MS\nRomanov/M\nroman/S\nRomansh/M\nRomans/M\nRoman/SM\nromantically/U\nromanticism/MS\nRomanticism/S\nromanticist/S\nromanticize/SDG\nromantic/MS\nRomany/SM\nRomeo/MS\nromeo/S\nRomero/M\nRome/SM\nRommel/M\nRomney/M\nRomola/M\nRomona/M\nRomonda/M\nromper/M\nromp/GSZDR\nRom/SM\nRomulus/M\nRomy/M\nRonalda/M\nRonald/M\nRona/M\nRonda/M\nrondo/SM\nRonica/M\nRon/M\nRonna/M\nRonnica/M\nRonnie/M\nRonni/M\nRonny/M\nRonstadt/M\nRontgen\nRoobbie/M\nrood/MS\nroof/DRMJGZS\nroofer/M\nroofgarden\nroofing/M\nroofless\nrooftop/S\nrookery/MS\nrook/GDMS\nrookie/SRMT\nroomer/M\nroomette/SM\nroomful/MS\nroominess/MS\nroommate/SM\nroom/MDRGZS\nroomy/TPSR\nRooney/M\nRooseveltian\nRoosevelt/M\nrooster/M\nroost/SGZRDM\nrooted/P\nrooter/M\nrootlessness/M\nrootless/P\nrootlet/SM\nRoot/M\nroot/MGDRZS\nrootstock/M\nrope/DRSMZG\nroper/M\nroping/M\nRoquefort/MS\nRoquemore/M\nRora/M\nRorie/M\nRori/M\nRorke/M\nRorschach\nRory/M\nRosabella/M\nRosabelle/M\nRosabel/M\nRosaleen/M\nRosales/M\nRosalia/M\nRosalie/M\nRosalinda/M\nRosalinde/M\nRosalind/M\nRosaline/M\nRosalynd/M\nRosalyn/M\nRosa/M\nRosamond/M\nRosamund/M\nRosana/M\nRosanna/M\nRosanne/M\nRosario/M\nrosary/SM\nRoscoe/M\nRosco/M\nRoseanna/M\nRoseanne/M\nRoseann/M\nroseate/Y\nRoseau\nrosebud/MS\nrosebush/SM\nRosecrans/M\nRoseland/M\nRoselia/M\nRoseline/M\nRoselin/M\nRosella/M\nRoselle/M\nRose/M\nRosemaria/M\nRosemarie/M\nRosemary/M\nrosemary/MS\nrose/MGDS\nRosemonde/M\nRosenberg/M\nRosenblum/M\nRosendo/M\nRosene/M\nRosen/M\nRosenthal/M\nRosenzweig/M\nRosetta/M\nRosette/M\nrosette/SDMG\nrosewater\nrosewood/SM\nRoshelle/M\nRosicrucian/M\nRosie/M\nrosily\nRosina/M\nrosiness/MS\nrosin/SMDG\nRosita/M\nRoslyn/M\nRosmunda/M\nRos/N\nRoss\nRossetti/M\nRossie/M\nRossi/M\nRossini/M\nRossy/M\nRostand/M\nroster/DMGS\nRostov/M\nrostra\'s\nrostrum/SM\nRoswell/M\nRosy/M\nrosy/RTP\nrota/MS\nRotarian/SM\nrotary/S\nrotated/U\nrotate/VGNXSD\nrotational/Y\nrotation/M\nrotative/Y\nrotator/SM\nrotatory\nROTC\nrote/MS\nrotgut/MS\nRoth/M\nRothschild/M\nrotisserie/MS\nrotogravure/SM\nrotor/MS\nrototill/RZ\nrot/SDG\nrotted\nrottenness/S\nrotten/RYSTP\nRotterdam/M\nrotter/M\nrotting\nrotunda/SM\nrotundity/S\nrotundness/S\nrotund/SDYPG\nRouault/M\nrou�/MS\nrouge/GMDS\nroughage/SM\nroughen/DG\nrougher/M\nroughhouse/GDSM\nroughish\nroughneck/MDSG\nroughness/MS\nroughs\nroughshod\nrough/XPYRDNGT\nroulette/MGDS\nroundabout/PSM\nroundedness/M\nrounded/P\nroundelay/SM\nroundels\nrounder/M\nroundhead/D\nroundheadedness/M\nroundheaded/P\nroundhouse/SM\nroundish\nroundness/MS\nroundoff\nroundup/MS\nroundworm/MS\nround/YRDSGPZT\nRourke/M\nrouse/DSRG\nrouser/M\nRousseau/M\nroustabout/SM\nroust/SGD\nroute/ASRDZGJ\nrouter/M\nroute\'s\nrout/GZJMDRS\nroutine/SYM\nrouting/M\nroutinize/GSD\nRouvin/M\nrover/M\nRover/M\nrove/ZGJDRS\nroving/M\nRowan/M\nrowboat/SM\nrowdily\nrowdiness/MS\nrowdyism/MS\nrowdy/PTSR\nrowel/DMSG\nRowe/M\nRowena/M\nrowen/M\nRowen/M\nrower/M\nRowland/M\nRowley/M\nRow/MN\nRowney/M\nrow/SJZMGNDR\nRoxana/M\nRoxane/M\nRoxanna/M\nRoxanne/M\nRoxie/M\nRoxi/M\nRoxine/M\nRoxy/M\nroyalist/SM\nRoyall/M\nRoyal/M\nroyal/SY\nroyalty/MS\nRoyce/M\nRoy/M\nRozalie/M\nRozalin/M\nRozamond/M\nRozanna/M\nRozanne/M\nRozele/M\nRozella/M\nRozelle/M\nRoze/M\nRozina/M\nRoz/M\nRP\nrpm\nRPM\nrps\nRR\nRriocard/M\nrs\nr\'s\nR\'s\nRSFSR\nRSI\nRSV\nRSVP\nRSX\nrt\nrte\nRte\nRTFM\nr/TGVJ\nRubaiyat/M\nrubato/MS\nrubbed\nrubberize/GSD\nrubberneck/DRMGSZ\nrubber/SDMG\nrubbery/TR\nrubbing/M\nrubbish/DSMG\nrubbishy\nrubble/GMSD\nrubdown/MS\nrubella/MS\nRube/M\nRuben/MS\nrube/SM\nRubetta/M\nRubia/M\nRubicon/SM\nrubicund\nrubidium/SM\nRubie/M\nRubik/M\nRubi/M\nRubina/M\nRubin/M\nRubinstein/M\nruble/MS\nrubout\nrubric/MS\nrub/S\nRuby/M\nruby/MTGDSR\nRuchbah/M\nruck/M\nrucksack/SM\nruckus/SM\nruction/SM\nrudderless\nrudder/MS\nRuddie/M\nruddiness/MS\nRudd/M\nRuddy/M\nruddy/PTGRSD\nrudeness/MS\nrude/PYTR\nRudie/M\nRudiger/M\nrudimentariness/M\nrudimentary/P\nrudiment/SM\nRudolf/M\nRudolfo/M\nRudolph/M\nRudyard/M\nRudy/M\nruefulness/S\nrueful/PY\nrue/GDS\nRufe/M\nruff/GSYDM\nruffian/GSMDY\nruffled/U\nruffler/M\nruffle/RSDG\nruffly/TR\nRufus/M\nRugby\'s\nrugby/SM\nruggedness/S\nrugged/PYRT\nRuggiero/M\nrugging\nrug/MS\nRuhr/M\nruination/MS\nruiner/M\nruin/MGSDR\nruinousness/M\nruinous/YP\nRuiz/M\nrulebook/S\nruled/U\nrule/MZGJDRS\nruler/GMD\nruling/M\nRumanian\'s\nRumania\'s\nrumba/GDMS\nrumble/JRSDG\nrumbler/M\nrumbustious\nrumen/M\nRumford/M\nRu/MH\nruminant/YMS\nruminate/VNGXSD\nruminative/Y\nrummage/GRSD\nrummager/M\nRummel/M\nrummer\nrummest\nrummy/TRSM\nrumored/U\nrumorer/M\nrumormonger/SGMD\nrumor/ZMRDSG\nRumpelstiltskin/M\nrump/GMYDS\nrumple/SDG\nrumply/TR\nrumpus/SM\nrum/XSMN\nrunabout/SM\nrunaround/S\nrun/AS\nrunaway/S\nrundown/SM\nrune/MS\nRunge/M\nrung/MS\nrunic\nrunlet/SM\nrunnable\nrunnel/SM\nrunner/MS\nrunning/S\nRunnymede/M\nrunny/RT\nrunoff/MS\nruntime\nruntiness/M\nrunt/MS\nrunty/RPT\nrunway/MS\nRunyon/M\nrupee/MS\nRuperta/M\nRupert/M\nRuperto/M\nrupiah/M\nrupiahs\nRuppert/M\nRuprecht/M\nrupture/GMSD\nrurality/M\nrural/Y\nRurik/M\nruse/MS\nRushdie/M\nrush/DSRGZ\nrusher/M\nrushes/I\nrushing/M\nRush/M\nRushmore/M\nrushy/RT\nRuskin/M\nrusk/MS\nRussell/M\nRussel/M\nrusset/MDS\nrussetting\nRussia/M\nRussian/SM\nRusso/M\nRuss/S\nRustbelt/M\nrustically\nrusticate/GSD\nrustication/M\nrusticity/S\nrustic/S\nRustie/M\nrustiness/MS\nRustin/M\nrustler/M\nrustle/RSDGZ\nrust/MSDG\nrustproof/DGS\nRusty/M\nrusty/XNRTP\nrutabaga/SM\nRutger/SM\nRuthanne/M\nRuthann/M\nRuthe/M\nruthenium/MS\nrutherfordium/SM\nRutherford/M\nRuthie/M\nRuthi/M\nruthlessness/MS\nruthless/YP\nRuth/M\nRuthy/M\nRutland/M\nRutledge/M\nrut/MS\nrutted\nRutter/M\nRuttger/M\nrutting\nrutty/RT\nRuy/M\nRV\nRVs\nRwandan/S\nRwanda/SM\nRwy/M\nRx/M\nRyan/M\nRyann/M\nRycca/M\nRydberg/M\nRyder/M\nrye/MS\nRyley/M\nRy/M\nRyon/M\nRyukyu/M\nRyun/M\nS\nSA\nSaab/M\nSaar/M\nSaba/M\nsabbath\nSabbath/M\nSabbaths\nsabbatical/S\nsabered/U\nsaber/GSMD\nSabik/M\nSabina/M\nSabine/M\nSabin/M\nsable/GMDS\nsabotage/DSMG\nsaboteur/SM\nsabot/MS\nSabra/M\nsabra/MS\nSabrina/M\nSAC\nSacajawea/M\nsaccharides\nsaccharine\nsaccharin/MS\nSacco/M\nsacerdotal\nSacha/M\nsachem/MS\nsachet/SM\nSachs/M\nsackcloth/M\nsackcloths\nsacker/M\nsackful/MS\nsack/GJDRMS\nsacking/M\nsacral\nsacra/L\nsacramental/S\nsacrament/DMGS\nSacramento/M\nsacredness/S\nsacred/PY\nsacrificer/M\nsacrifice/RSDZMG\nsacrificial/Y\nsacrilege/MS\nsacrilegious/Y\nsacristan/SM\nsacristy/MS\nsacroiliac/S\nsacrosanctness/MS\nsacrosanct/P\nsacrum/M\nsac/SM\nSada/M\nSadat/M\nSaddam/M\nsadden/DSG\nsadder\nsaddest\nsaddlebag/SM\nsaddler/M\nsaddle\'s\nsaddle/UGDS\nSadducee/M\nSadella/M\nSade/M\nsades\nSadie/M\nsadism/MS\nsadistic\nsadistically\nsadist/MS\nsadness/SM\nsadomasochism/MS\nsadomasochistic\nsadomasochist/S\nsad/PY\nSadr/M\nSadye/M\nsafari/GMDS\nsafeguard/MDSG\nsafekeeping/MS\nsafeness/MS\nsafeness\'s/U\nsafes\nsafety/SDMG\nsafe/URPTY\nsafflower/SM\nsaffron/MS\nsagaciousness/M\nsagacious/YP\nsagacity/MS\nsaga/MS\nSagan/M\nsagebrush/SM\nsage/MYPS\nsagged\nsagger\nsagging\nsaggy/RT\nSaginaw/M\nSagittarius/MS\nsago/MS\nsag/TSR\nsaguaro/SM\nSahara/M\nSaharan/M\nSahel\nsahib/MS\nSaidee/M\nsaids\nsaid/U\nSaigon/M\nsailboard/DGS\nsailboat/SRMZG\nsailcloth/M\nsailcloths\nsailer/M\nsailfish/SM\nsail/GJMDRS\nsailing/M\nsailor/YMS\nsailplane/SDMG\nsainthood/MS\nsaintlike\nsaintliness/MS\nsaintly/RTP\nsaint/YDMGS\nSaiph/M\nsaith\nsaiths\nSakai/M\nsake/MRS\nsaker/M\nSakhalin/M\nSakharov/M\nSaki/M\nsaki\'s\nsalaam/GMDS\nsalable/U\nsalaciousness/MS\nsalacious/YP\nsalacity/MS\nSaladin/M\nSalado/M\nsalad/SM\nSalaidh/M\nsalamander/MS\nsalami/MS\nsalary/SDMG\nSalas/M\nSalazar/M\nsaleability/M\nsale/ABMS\nSaleem/M\nSalem/M\nSalerno/M\nsalesclerk/SM\nsalesgirl/SM\nsaleslady/S\nsalesman/M\nsalesmanship/SM\nsalesmen\nsalespeople/M\nsalesperson/MS\nsalesroom/M\nsaleswoman\nsaleswomen\nsalience/MS\nsaliency\nsalient/SY\nSalim/M\nSalina/MS\nsaline/S\nsalinger\nSalinger/M\nsalinity/MS\nSalisbury/M\nSalish/M\nsaliva/MS\nsalivary\nsalivate/XNGSD\nsalivation/M\nSalk/M\nSallee/M\nSalle/M\nSallie/M\nSalli/M\nsallowness/MS\nsallow/TGRDSP\nSallust/M\nSallyanne/M\nSallyann/M\nsally/GSDM\nSally/M\nsalmonellae\nsalmonella/M\nSalmon/M\nsalmon/SM\nSal/MY\nSaloma/M\nSalome/M\nSalomi/M\nSalomo/M\nSalomone/M\nSalomon/M\nSalonika/M\nsalon/SM\nsaloonkeeper\nsaloon/MS\nsalsa/MS\nsalsify/M\nSALT\nsaltcellar/SM\nsalted/UC\nsalter/M\nsalt/GZTPMDRS\nsaltine/MS\nsaltiness/SM\nsaltness/M\nSalton/M\nsaltpeter/SM\nsalts/C\nsaltshaker/S\nsaltwater\nsalty/RSPT\nsalubriousness/M\nsalubrious/YP\nsalubrity/M\nsalutariness/M\nsalutary/P\nsalutation/SM\nsalutatory/S\nsaluter/M\nsalute/RSDG\nSalvadoran/S\nSalvadorian/S\nSalvador/M\nsalvageable\nsalvage/MGRSD\nsalvager/M\nsalvation/MS\nSalvatore/M\nsalve/GZMDSR\nsalver/M\nSalvidor/M\nsalvo/GMDS\nSalween/M\nSalyut/M\nSalz/M\nSAM\nSamantha/M\nSamara/M\nSamaria/M\nSamaritan/MS\nsamarium/MS\nSamarkand/M\nsamba/GSDM\nsameness/MS\nsame/SP\nSam/M\nSammie/M\nSammy/M\nSamoa\nSamoan/S\nSamoset/M\nsamovar/SM\nSamoyed/M\nsampan/MS\nsampler/M\nsample/RSDJGMZ\nsampling/M\nSampson/M\nSamsonite/M\nSamson/M\nSamuele/M\nSamuel/SM\nSamuelson/M\nsamurai/M\nSan\'a\nSana/M\nsanatorium/MS\nSanborn/M\nSanchez/M\nSancho/M\nsanctification/M\nsanctifier/M\nsanctify/RSDGNX\nsanctimoniousness/MS\nsanctimonious/PY\nsanctimony/MS\nsanctioned/U\nsanction/SMDG\nsanctity/SM\nsanctuary/MS\nsanctum/SM\nsandal/MDGS\nsandalwood/SM\nsandbagged\nsandbagging\nsandbag/MS\nsandbank/SM\nsandbar/S\nsandblaster/M\nsandblast/GZSMRD\nsandbox/MS\nSandburg/M\nsandcastle/S\nSande/M\nSanderling/M\nsander/M\nSander/M\nSanderson/M\nsandhill\nsandhog/SM\nSandia/M\nSandie/M\nSandi/M\nsandiness/S\nSandinista\nsandlot/SM\nsandlotter/S\nsandman/M\nsandmen\nSand/MRZ\nSandor/M\nSandoval/M\nsandpaper/DMGS\nsandpile\nsandpiper/MS\nsandpit/M\nSandra/M\nSandro/M\nsand/SMDRGZ\nsandstone/MS\nsandstorm/SM\nSandusky/M\nsandwich/SDMG\nSandye/M\nSandy/M\nsandy/PRT\nsaned\nsane/IRYTP\nsaneness/MS\nsaneness\'s/I\nsanes\nSanford/M\nSanforized\nSanger/M\nsangfroid/S\nsangria/SM\nSang/RM\nsang/S\nsanguinary\nsanguined\nsanguine/F\nsanguinely\nsanguineness/M\nsanguineous/F\nsanguines\nsanguining\nSanhedrin/M\nsaning\nsanitarian/S\nsanitarium/SM\nsanitary/S\nsanitate/NX\nsanitation/M\nsanitizer/M\nsanitize/RSDZG\nsanity/SIM\nsank\nSankara/M\nSan/M\nsans\nsanserif\nSanskritic\nSanskritize/M\nSanskrit/M\nSansone/M\nSanson/M\nSanta/M\nSantana/M\nSantayana/M\nSanteria\nSantiago/M\nSanto/MS\nsapience/MS\nsapient\nsapless\nsapling/SM\nsap/MS\nsapped\nsapper/SM\nSapphira/M\nSapphire/M\nsapphire/MS\nSappho/M\nsappiness/SM\nsapping\nSapporo/M\nsappy/RPT\nsaprophyte/MS\nsaprophytic\nsapsucker/SM\nsapwood/SM\nSaraann/M\nSaracen/MS\nSaragossa/M\nSarah/M\nSarajane/M\nSarajevo/M\nSara/M\nSaran/M\nsaran/SM\nsarape\'s\nSarasota/M\nSaratoga/M\nSaratov/M\nSarawak/M\nsarcasm/MS\nsarcastic\nsarcastically\nsarcoma/MS\nsarcophagi\nsarcophagus/M\nsardine/SDMG\nSardinia/M\nsardonic\nsardonically\nSaree/M\nSarena/M\nSarene/M\nSarette/M\nSargasso/M\nSarge/M\nSargent/M\nsarge/SM\nSargon/M\nSari/M\nsari/MS\nSarina/M\nSarine/M\nSarita/M\nSarnoff/M\nsarong/MS\nSaroyan/M\nsarsaparilla/MS\nSarto/M\nsartorial/Y\nsartorius/M\nSartre/M\nSascha/M\nSASE\nSasha/M\nsashay/GDS\nSashenka/M\nsash/GMDS\nSaskatchewan/M\nSaskatoon/M\nSask/M\nsassafras/MS\nsass/GDSM\nSassoon/M\nsassy/TRS\nSAT\nsatanic\nsatanical/Y\nSatanism/M\nsatanism/S\nSatanist/M\nsatanist/S\nSatan/M\nsatchel/SM\nsat/DG\nsateen/MS\nsatellite/GMSD\nsate/S\nsatiable/I\nsatiate/GNXSD\nsatiation/M\nsatiety/MS\nsatin/MDSG\nsatinwood/MS\nsatiny\nsatire/SM\nsatiric\nsatirical/Y\nsatirist/SM\nsatirize/DSG\nsatirizes/U\nsatisfaction/ESM\nsatisfactorily/U\nsatisfactoriness/MU\nsatisfactory/UP\nsatisfiability/U\nsatisfiable/U\nsatisfied/UE\nsatisfier/M\nsatisfies/E\nsatisfy/GZDRS\nsatisfying/EU\nsatisfyingly\nSat/M\nsatori/SM\nsatrap/SM\nsaturated/CUA\nsaturater/M\nsaturates/A\nsaturate/XDRSNG\nsaturation/M\nSaturday/MS\nsaturnalia\nSaturnalia/M\nsaturnine/Y\nSaturn/M\nSatyanarayanan/M\nsatyriases\nsatyriasis/M\nsatyric\nsatyr/MS\nsauce/DSRGZM\nsaucepan/SM\nsaucer/M\nsaucily\nsauciness/S\nsaucy/TRP\nSaudi/S\nSaud/M\nSaudra/M\nsauerkraut/SM\nSaukville/M\nSaul/M\nSault/M\nsauna/DMSG\nSauncho/M\nSaunder/SM\nSaunderson/M\nSaundra/M\nsaunter/DRSG\nsaurian/S\nsauropod/SM\nsausage/MS\nSaussure/M\nsaut�/DGS\nSauternes/M\nSauveur/M\nsavage/GTZYPRSD\nSavage/M\nsavageness/SM\nsavagery/MS\nSavannah/M\nsavanna/MS\nsavant/SM\nsaved/U\nsaveloy/M\nsaver/M\nsave/ZGJDRSB\nSavina/M\nSavior/M\nsavior/SM\nSaviour/M\nSavonarola/M\nsavored/U\nsavorer/M\nsavorier\nsavoriest\nsavoriness/S\nsavoringly/S\nsavoring/Y\nsavor/SMRDGZ\nsavory/UMPS\nSavoyard/M\nSavoy/M\nsavoy/SM\nsavvy/GTRSD\nsawbones/M\nsawbuck/SM\nsawdust/MDSG\nsawer/M\nsawfly/SM\nsawhorse/MS\nSaw/M\nsawmill/SM\nsaw/SMDRG\nsawtooth\nSawyere/M\nSawyer/M\nsawyer/MS\nSaxe/M\nsaxifrage/SM\nSax/M\nsax/MS\nSaxon/SM\nSaxony/M\nsaxophone/MS\nsaxophonist/SM\nSaxton/M\nSayer/M\nsayer/SM\nsayest\nsaying/MS\nSayre/MS\nsays/M\nsay/USG\nSay/ZMR\nSBA\nSb/M\nSC\nscabbard/SGDM\nscabbed\nscabbiness/SM\nscabbing\nscabby/RTP\nscabies/M\nscabrousness/M\nscabrous/YP\nscab/SM\nscad/SM\nscaffolding/M\nscaffold/JGDMS\nscalability\nScala/M\nscalar/SM\nscalawag/SM\nscald/GJRDS\nscaled/AU\nscale/JGZMBDSR\nscaleless\nscalene\nscaler/M\nscales/A\nscaliness/MS\nscaling/A\nscallion/MS\nscalloper/M\nscallop/GSMDR\nscalloping/M\nscalpel/SM\nscalper/M\nscalp/GZRDMS\nscalping/M\nscaly/TPR\nscammed\nscamming\nscamper/GD\nscampi/M\nscamp/RDMGZS\nscam/SM\nScan\nscan/AS\nscandal/GMDS\nscandalized/U\nscandalize/GDS\nscandalmonger/SM\nscandalousness/M\nscandalous/YP\nScandinavia/M\nScandinavian/S\nscandium/MS\nscanned/A\nscanner/SM\nscanning/A\nscansion/SM\nscant/CDRSG\nscantest\nscantily\nscantiness/MS\nscantly\nscantness/MS\nscanty/TPRS\nscapegoat/SGDM\nscapegrace/MS\nscape/M\nscapulae\nscapula/M\nscapular/S\nscarab/SM\nScaramouch/M\nScarborough/M\nscarceness/SM\nscarce/RTYP\nscarcity/MS\nscar/DRMSG\nscarecrow/MS\nscaremongering/M\nscaremonger/SGM\nscarer/M\nscare/S\nscarface\nScarface/M\nscarf/SDGM\nscarification/M\nscarify/DRSNGX\nscarily\nscariness/S\nscarlatina/MS\nScarlatti/M\nScarlet/M\nscarlet/MDSG\nScarlett/M\nscarp/SDMG\nscarred\nscarring\nscarves/M\nscary/PTR\nscathe/DG\nscathed/U\nscathing/Y\nscatological\nscatology/SM\nscat/S\nscatted\nscatterbrain/MDS\nscatter/DRJZSG\nscatterer/M\nscattergun\nscattering/YM\nscatting\nscavenge/GDRSZ\nscavenger/M\nSCCS\nscenario/SM\nscenarist/MS\nscene/GMDS\nscenery/SM\nscenically\nscenic/S\nscented/U\nscent/GDMS\nscentless\nscent\'s/C\nscents/C\nscepter/DMSG\nscepters/U\nsceptically\nsch\nSchaefer/M\nSchaeffer/M\nSchafer/M\nSchaffner/M\nSchantz/M\nSchapiro/M\nScheat/M\nSchedar/M\nschedule/ADSRG\nscheduled/U\nscheduler/MS\nschedule\'s\nScheherazade/M\nScheherezade/M\nSchelling/M\nschema/M\nschemata\nschematically\nschematic/S\nscheme/JSRDGMZ\nschemer/M\nschemta\nSchenectady/M\nscherzo/MS\nSchick/M\nSchiller/M\nschilling/SM\nschismatic/S\nschism/SM\nschist/SM\nschizoid/S\nschizomycetes\nschizophrenia/SM\nschizophrenically\nschizophrenic/S\nschizo/S\nschlemiel/MS\nschlepped\nschlepping\nschlep/S\nSchlesinger/M\nSchliemann/M\nSchlitz/M\nschlock/SM\nschlocky/TR\nSchloss/M\nschmaltz/MS\nschmaltzy/TR\nSchmidt/M\nSchmitt/M\nschmoes\nschmo/M\nschmooze/GSD\nschmuck/MS\nSchnabel/M\nschnapps/M\nschnauzer/MS\nSchneider/M\nschnitzel/MS\nschnook/SM\nschnoz/S\nschnozzle/MS\nSchoenberg/M\nSchofield/M\nscholarship/MS\nscholar/SYM\nscholastically\nscholastic/S\nschoolbag/SM\nschoolbook/SM\nschoolboy/MS\nschoolchild/M\nschoolchildren\nschooldays\nschooled/U\nschoolfellow/S\nschoolfriend\nschoolgirlish\nschoolgirl/MS\nschoolhouse/MS\nschooling/M\nschoolmarmish\nschoolmarm/MS\nschoolmaster/SGDM\nschoolmate/MS\nschoolmistress/MS\nschoolroom/SM\nschoolteacher/MS\nschoolwork/SM\nschoolyard/SM\nschool/ZGMRDJS\nschooner/SM\nSchopenhauer/M\nSchottky/M\nSchrieffer/M\nSchr�dinger/M\nSchroeder/M\nSchroedinger/M\nSchubert/M\nSchultz/M\nSchulz/M\nSchumacher/M\nSchuman/M\nSchumann/M\nschussboomer/S\nschuss/SDMG\nSchuster/M\nSchuyler/M\nSchuylkill/M\nSchwab/M\nSchwartzkopf/M\nSchwartz/M\nSchwarzenegger/M\nschwa/SM\nSchweitzer/M\nSchweppes/M\nSchwinger/M\nSchwinn/M\nsci\nsciatica/SM\nsciatic/S\nscience/FMS\nscientifically/U\nscientific/U\nscientist/SM\nScientology/M\nscimitar/SM\nscintilla/MS\nscintillate/GNDSX\nscintillation/M\nscintillator/SM\nscion/SM\nScipio/M\nscissor/SGD\nscleroses\nsclerosis/M\nsclerotic/S\nSc/M\nscoffer/M\nscofflaw/MS\nscoff/RDGZS\nscolder/M\nscold/GSJRD\nscolioses\nscoliosis/M\nscollop\'s\nsconce/SDGM\nscone/SM\nscooper/M\nscoop/SRDMG\nscooter/M\nscoot/SRDGZ\nscope/DSGM\nScopes/M\nscops\nscorbutic\nscorcher/M\nscorching/Y\nscorch/ZGRSD\nscoreboard/MS\nscorecard/MS\nscored/M\nscorekeeper/SM\nscoreless\nscoreline\nscore/ZMDSRJG\nscorner/M\nscornfulness/M\nscornful/PY\nscorn/SGZMRD\nscorpion/SM\nScorpio/SM\nScorpius/M\nScorsese/M\nScotchgard/M\nScotchman/M\nScotchmen\nscotch/MSDG\nscotchs\nScotch/S\nScotchwoman\nScotchwomen\nScotia/M\nScotian/M\nScotland/M\nScot/MS\nScotsman/M\nScotsmen\nScotswoman\nScotswomen\nScottie/SM\nScotti/M\nScottish\nScott/M\nScottsdale/M\nScotty\'s\nscoundrel/YMS\nscourer/M\nscourge/MGRSD\nscourger/M\nscouring/M\nscour/SRDGZ\nscouter/M\nscouting/M\nscoutmaster/SM\nScout\'s\nscout/SRDMJG\nscow/DMGS\nscowler/M\nscowl/SRDG\nscrabble/DRSZG\nscrabbler/M\nScrabble/SM\nscragged\nscragging\nscraggly/TR\nscraggy/TR\nscrag/SM\nscrambler/MS\nscrambler\'s/U\nscramble/UDSRG\nscrammed\nscramming\nscram/S\nScranton/M\nscrapbook/SM\nscraper/M\nscrape/S\nscrapheap/SM\nscrapped\nscrapper/SM\nscrapping\nscrappy/RT\nscrap/SGZJRDM\nscrapyard/S\nscratched/U\nscratcher/M\nscratches/M\nscratchily\nscratchiness/S\nscratch/JDRSZG\nscratchy/TRP\nscrawler/M\nscrawl/GRDS\nscrawly/RT\nscrawniness/MS\nscrawny/TRP\nscreamer/M\nscreaming/Y\nscream/ZGSRD\nscreecher/M\nscreech/GMDRS\nscreechy/TR\nscreed/MS\nscree/DSM\nscreened/U\nscreening/M\nscreenplay/MS\nscreen/RDMJSG\nscreenwriter/MS\nscrewball/SM\nscrewdriver/SM\nscrewer/M\nscrew/GUSD\nscrewiness/S\nscrew\'s\nscrewup\nscrewworm/MS\nscrewy/RTP\nScriabin/M\nscribal\nscribble/JZDRSG\nscribbler/M\nscribe/CDRSGIK\nscriber/MKIC\nscribe\'s\nScribner/MS\nscrimmager/M\nscrimmage/RSDMG\nscrimp/DGS\nscrimshaw/GSDM\nscrim/SM\nScripps/M\nscrip/SM\nscripted/U\nscript/FGMDS\nscriptural/Y\nscripture/MS\nScripture/MS\nscriptwriter/SM\nscriptwriting/M\nscrivener/M\nscriven/ZR\nscrod/M\nscrofula/MS\nscrofulous\nscrollbar/SM\nscroll/GMDSB\nScrooge/MS\nscrooge/SDMG\nscrota\nscrotal\nscrotum/M\nscrounge/ZGDRS\nscroungy/TR\nscrubbed\nscrubber/MS\nscrubbing\nscrubby/TR\nscrub/S\nscruffily\nscruffiness/S\nscruff/SM\nscruffy/PRT\nScruggs/M\nscrummage/MG\nscrum/MS\nscrumptious/Y\nscrunch/DSG\nscrunchy/S\nscruple/SDMG\nscrupulosity/SM\nscrupulousness\'s\nscrupulousness/US\nscrupulous/UPY\nscrutable/I\nscrutinized/U\nscrutinizer/M\nscrutinize/RSDGZ\nscrutinizingly/S\nscrutinizing/UY\nscrutiny/MS\nSCSI\nscuba/SDMG\nscudded\nscudding\nScud/M\nscud/S\nscuff/GSD\nscuffle/SDG\nsculler/M\nscullery/MS\nSculley/M\nscullion/MS\nscull/SRDMGZ\nsculptor/MS\nsculptress/MS\nsculpt/SDG\nsculptural/Y\nsculpture/SDGM\nscumbag/S\nscummed\nscumming\nscum/MS\nscummy/TR\nscupper/SDMG\nscurf/MS\nscurfy/TR\nscurrility/MS\nscurrilousness/MS\nscurrilous/PY\nscurry/GJSD\nscurvily\nscurviness/M\nscurvy/SRTP\nscutcheon/SM\nscuttlebutt/MS\nscuttle/MGSD\nscuzzy/RT\nScylla/M\nscythe/SDGM\nScythia/M\nSD\nSDI\nSE\nseabed/S\nseabird/S\nseaboard/MS\nSeaborg/M\nseaborne\nSeabrook/M\nseacoast/MS\nseafare/JRZG\nseafarer/M\nseafood/MS\nseafront/MS\nSeagate/M\nseagoing\nSeagram/M\nseagull/S\nseahorse/S\nsealant/MS\nsealed/AU\nsealer/M\nseal/MDRSGZ\nsealskin/SM\nseals/UA\nseamail\nseamanship/SM\nseaman/YM\nseamer/M\nseaminess/M\nseamlessness/M\nseamless/PY\nseam/MNDRGS\nseams/I\nseamstress/MS\nSeamus/M\nsea/MYS\nseamy/TRP\nSeana/M\ns�ance/SM\nSean/M\nseaplane/SM\nseaport/SM\nseaquake/M\nSeaquarium/M\nsearcher/AM\nsearching/YS\nsearchlight/SM\nsearch/RSDAGZ\nsear/DRSJGT\nsearing/Y\nSears/M\nseascape/SM\nseashell/MS\nseashore/SM\nseasickness/SM\nseasick/P\nseaside/SM\nseasonableness/M\nseasonable/UP\nseasonably/U\nseasonality\nseasonal/Y\nseasoned/U\nseasoner/M\nseasoning/M\nseason/JRDYMBZSG\nseatbelt\nseated/A\nseater/M\nseating/SM\nSEATO\nseat\'s\nSeattle/M\nseat/UDSG\nseawall/S\nseaward/S\nseawater/S\nseaway/MS\nseaweed/SM\nseaworthinesses\nseaworthiness/MU\nseaworthy/TRP\nsebaceous\nSebastian/M\nSebastiano/M\nSebastien/M\nseborrhea/SM\nSEC\nsecant/SM\nsecede/GRSD\nsecessionist/MS\nsecession/MS\nsecludedness/M\nsecluded/YP\nseclude/GSD\nseclusion/SM\nseclusive\nSeconal\nsecondarily\nsecondary/PS\nseconder/M\nsecondhand\nsecond/RDYZGSL\nsecrecy/MS\nsecretarial\nsecretariat/MS\nsecretaryship/MS\nsecretary/SM\nsecrete/XNS\nsecretion/M\nsecretiveness/S\nsecretive/PY\nsecretory\nsecret/TVGRDYS\nsec/S\nsectarianism/MS\nsectarian/S\nsectary/MS\nsectionalism/MS\nsectionalized\nsectional/SY\nsection/ASEM\nsectioned\nsectioning\nsect/ISM\nsectoral\nsectored\nsector/EMS\nsectoring\nsects/E\nsecularism/MS\nsecularist/MS\nsecularity/M\nsecularization/MS\nsecularized/U\nsecularize/GSD\nsecular/SY\nsecured/U\nsecurely/I\nsecure/PGTYRSDJ\nsecurity/MSI\nsecy\nsec\'y\nsedan/SM\nsedateness/SM\nsedate/PXVNGTYRSD\nsedation/M\nsedative/S\nsedentary\nSeder/SM\nsedge/SM\nSedgwick/M\nsedgy/RT\nsedimentary\nsedimentation/SM\nsediment/SGDM\nsedition/SM\nseditiousness/M\nseditious/PY\nseducer/M\nseduce/RSDGZ\nseduction/MS\nseductiveness/MS\nseductive/YP\nseductress/SM\nsedulous/Y\nSeebeck/M\nseed/ADSG\nseedbed/MS\nseedcase/SM\nseeded/U\nseeder/MS\nseediness/MS\nseeding/S\nseedless\nseedling/SM\nseedpod/S\nseed\'s\nseedy/TPR\nseeings\nseeing\'s\nseeing/U\nseeker/M\nseek/GZSR\nseeking/Y\nSeeley/M\nSee/M\nseem/GJSYD\nseeming/Y\nseemliness\'s\nseemliness/US\nseemly/UTPR\nseen/U\nseepage/MS\nseep/GSD\nseer/SM\nseersucker/MS\nsees\nseesaw/DMSG\nseethe/SDGJ\nsee/U\nsegmental/Y\nsegmentation/SM\nsegmented/U\nsegment/SGDM\nSegovia/M\nsegregant\nsegregated/U\nsegregate/XCNGSD\nsegregation/CM\nsegregationist/SM\nsegregative\nSegre/M\nsegue/DS\nsegueing\nSegundo/M\nSe/H\nSeidel/M\nseigneur/MS\nseignior/SM\nSeiko/M\nseine/GZMDSR\nSeine/M\nseiner/M\nSeinfeld/M\nseismic\nseismically\nseismographer/M\nseismographic\nseismographs\nseismography/SM\nseismograph/ZMR\nseismologic\nseismological\nseismologist/MS\nseismology/SM\nseismometer/S\nseize/BJGZDSR\nseizer/M\nseizing/M\nseizin/MS\nseizor/MS\nseizure/MS\nSeka/M\nSela/M\nSelassie/M\nSelby/M\nseldom\nselected/UAC\nselectional\nselection/MS\nselectiveness/M\nselective/YP\nselectivity/MS\nselectman/M\nselectmen\nselectness/SM\nselector/SM\nselect/PDSVGB\nSelectric/M\nselects/A\nSelena/M\nselenate/M\nSelene/M\nselenite/M\nselenium/MS\nselenographer/SM\nselenography/MS\nSelestina/M\nSeleucid/M\nSeleucus/M\nself/GPDMS\nselfishness/SU\nselfish/PUY\nselflessness/MS\nselfless/YP\nselfness/M\nSelfridge/M\nselfsameness/M\nselfsame/P\nSelia/M\nSelie/M\nSelig/M\nSelim/M\nSelina/M\nSelinda/M\nSeline/M\nSeljuk/M\nSelkirk/M\nSella/M\nsell/AZGSR\nseller/AM\nSellers/M\nSelle/ZM\nsellout/MS\nSelma/M\nseltzer/S\nselvage/MGSD\nselves/M\nSelznick/M\nsemantical/Y\nsemanticist/SM\nsemantic/S\nsemantics/M\nsemaphore/GMSD\nSemarang/M\nsemblance/ASME\nsemen/SM\nsemester/SM\nsemiannual/Y\nsemiarid\nsemiautomated\nsemiautomatic/S\nsemicircle/SM\nsemicircular\nsemicolon/MS\nsemiconductor/SM\nsemiconscious\nsemidefinite\nsemidetached\nsemidrying/M\nsemifinalist/MS\nsemifinal/MS\nsemilogarithmic\nsemimonthly/S\nseminal/Y\nseminarian/MS\nseminar/SM\nseminary/MS\nSeminole/SM\nsemiofficial\nsemioticians\nsemiotic/S\nsemiotics/M\nsemipermanent/Y\nsemipermeable\nsemiprecious\nsemiprivate\nsemiprofessional/YS\nsemipublic\nsemiquantitative/Y\nSemiramis/M\nsemiretired\nsemisecret\nsemiskilled\nsemi/SM\nsemisolid/S\nsemistructured\nsemisweet\nSemite/SM\nSemitic/MS\nsemitic/S\nsemitone/SM\nsemitrailer/SM\nsemitrance\nsemitransparent\nsemitropical\nsemivowel/MS\nsemiweekly/S\nsemiyearly\nsemolina/SM\nsempiternal\nsempstress/SM\nSemtex\nsen\nSen\nSena/M\nsenate/MS\nSenate/MS\nsenatorial\nsenator/MS\nSendai/M\nsender/M\nsends/A\nsend/SRGZ\nSeneca/MS\nSenegalese\nSenegal/M\nsenescence/SM\nsenescent\nsenile/SY\nsenility/MS\nseniority/SM\nsenior/MS\nSenior/S\nSennacherib/M\nsenna/MS\nSennett/M\nSe�ora/M\nsenora/S\nsenorita/S\nsenor/MS\nsensately/I\nsensate/YNX\nsensationalism/MS\nsensationalist/S\nsensationalize/GSD\nsensational/Y\nsensation/M\nsens/DSG\nsenselessness/SM\nsenseless/PY\nsense/M\nsensibility/ISM\nsensibleness/MS\nsensible/PRST\nsensibly/I\nsensitiveness/MS\nsensitiveness\'s/I\nsensitives\nsensitive/YIP\nsensitivity/ISM\nsensitization/CSM\nsensitized/U\nsensitizers\nsensitize/SDCG\nsensor/MS\nsensory\nsensualist/MS\nsensuality/MS\nsensual/YF\nsensuousness/S\nsensuous/PY\nSensurround/M\nsentence/SDMG\nsentential/Y\nsententious/Y\nsentience/ISM\nsentient/YS\nsentimentalism/SM\nsentimentalist/SM\nsentimentality/SM\nsentimentalization/SM\nsentimentalize/RSDZG\nsentimentalizes/U\nsentimental/Y\nsentiment/MS\nsentinel/GDMS\nsentry/SM\nsent/UFEA\nSeoul/M\nsepal/SM\nseparability/MSI\nseparableness/MI\nseparable/PI\nseparably/I\nseparateness/MS\nseparates/M\nseparate/YNGVDSXP\nseparation/M\nseparatism/SM\nseparatist/SM\nseparator/SM\nSephardi/M\nSephira/M\nsepia/MS\nSepoy/M\nsepses\nsepsis/M\nsepta/M\nseptate/N\nSeptember/MS\nseptennial/Y\nseptet/MS\nsepticemia/SM\nsepticemic\nseptic/S\nseptillion/M\nsept/M\nSept/M\nseptuagenarian/MS\nSeptuagint/MS\nseptum/M\nsepulcher/MGSD\nsepulchers/UA\nsepulchral/Y\nseq\nsequel/MS\nsequenced/A\nsequence/DRSJZMG\nsequencer/M\nsequence\'s/F\nsequences/F\nsequent/F\nsequentiality/FM\nsequentialize/DSG\nsequential/YF\nsequester/SDG\nsequestrate/XGNDS\nsequestration/M\nsequin/SDMG\nsequitur\nSequoia/M\nsequoia/MS\nSequoya/M\nSerafin/M\nseraglio/SM\nserape/S\nseraphic\nseraphically\nseraphim\'s\nseraph/M\nseraphs\nsera\'s\nSerbia/M\nSerbian/S\nSerb/MS\nSerbo/M\nserenade/MGDRS\nserenader/M\nSerena/M\nserendipitous/Y\nserendipity/MS\nserene/GTYRSDP\nSerene/M\nsereneness/SM\nSerengeti/M\nserenity/MS\nsere/TGDRS\nserfdom/MS\nserf/MS\nSergeant/M\nsergeant/SM\nserge/DSGM\nSergei/M\nSerge/M\nSergent/M\nSergio/M\nserialization/MS\nserialize/GSD\nserial/MYS\nseries/M\nserif/SMD\nserigraph/M\nserigraphs\nseriousness/SM\nserious/PY\nsermonize/GSD\nsermon/SGDM\nserological/Y\nserology/MS\nserons\nserous\nSerpens/M\nserpent/GSDM\nserpentine/GYS\nSerra/M\nSerrano/M\nserrate/GNXSD\nserration/M\nserried\nserum/MS\nservant/SDMG\nserve/AGCFDSR\nserved/U\nserver/MCF\nservers\nserviceability/SM\nserviceableness/M\nserviceable/P\nserviced/U\nserviceman/M\nservicemen\nservice/MGSRD\nservice\'s/E\nservices/E\nservicewoman\nservicewomen\nserviette/MS\nservilely\nservileness/M\nserviles\nservile/U\nservility/SM\nserving/SM\nservitor/SM\nservitude/MS\nservomechanism/MS\nservomotor/MS\nservo/S\nsesame/MS\nsesquicentennial/S\nsessile\nsession/SM\nsetback/S\nSeth/M\nSet/M\nSeton/M\nset\'s\nsetscrew/SM\nset/SIA\nsettable/A\nsett/BJGZSMR\nsettee/MS\nsetter/M\nsetting/AS\nsetting\'s\nsettle/AUDSG\nsettlement/ASM\nsettler/MS\nsettling/S\nsetup/MS\nSeumas/M\nSeurat/M\nSeuss/M\nSevastopol/M\nsevenfold\nsevenpence\nseven/SMH\nseventeen/HMS\nseventeenths\nsevenths\nseventieths\nseventy/MSH\nseveralfold\nseveralty/M\nseveral/YS\nseverance/SM\nsevered/E\nsevereness/SM\nsevere/PY\nsevering/E\nseverity/MS\nSevern/M\nsevers/E\nsever/SGTRD\nSeverus/M\nSeville/M\nsewage/MS\nSeward/M\nsewerage/SM\nsewer/GSMD\nsewing/SM\nsewn\nsew/SAGD\nsexagenarian/MS\nsex/GMDS\nsexily\nsexiness/MS\nsexism/SM\nsexist/SM\nsexless\nsexologist/SM\nsexology/MS\nsexpot/SM\nSextans/M\nsextant/SM\nsextet/SM\nsextillion/M\nSexton/M\nsexton/MS\nsextuple/MDG\nsextuplet/MS\nsexuality/MS\nsexualized\nsexual/Y\nsexy/RTP\nSeychelles\nSeyfert\nSeymour/M\nsf\nSF\nSgt\nshabbily\nshabbiness/SM\nshabby/RTP\nshack/GMDS\nshackler/M\nshackle\'s\nShackleton/M\nshackle/UGDS\nshad/DRJGSM\nshaded/U\nshadeless\nshade/SM\nshadily\nshadiness/MS\nshading/M\nshadowbox/SDG\nshadower/M\nshadow/GSDRM\nshadowiness/M\nShadow/M\nshadowy/TRP\nshady/TRP\nShae/M\nShafer/M\nShaffer/M\nshafting/M\nshaft/SDMG\nshagged\nshagginess/SM\nshagging\nshaggy/TPR\nshag/MS\nshah/M\nshahs\nShaina/M\nShaine/M\nshakable/U\nshakably/U\nshakeable\nshakedown/S\nshaken/U\nshakeout/SM\nshaker/M\nShaker/S\nShakespearean/S\nShakespeare/M\nShakespearian\nshake/SRGZB\nshakeup/S\nshakily\nshakiness/S\nshaking/M\nshaky/TPR\nshale/SM\nshall\nshallot/SM\nshallowness/SM\nshallow/STPGDRY\nShalna/M\nShalne/M\nshalom\nShalom/M\nshalt\nshamanic\nshaman/SM\nshamble/DSG\nshambles/M\nshamefaced/Y\nshamefulness/S\nshameful/YP\nshamelessness/SM\nshameless/PY\nshame/SM\nsham/MDSG\nshammed\nshammer\nshamming\nshammy\'s\nshampoo/DRSMZG\nshampooer/M\nshamrock/SM\nShamus/M\nShana/M\nShanan/M\nShanda/M\nShandee/M\nShandeigh/M\nShandie/M\nShandra/M\nshandy/M\nShandy/M\nShane/M\nShanghai/GM\nShanghaiing/M\nshanghai/SDG\nShanie/M\nShani/M\nshank/SMDG\nShannah/M\nShanna/M\nShannan/M\nShannen/M\nShannon/M\nShanon/M\nshan\'t\nShanta/M\nShantee/M\nshantis\nShantung/M\nshantung/MS\nshanty/SM\nshantytown/SM\nshape/AGDSR\nshaped/U\nshapelessness/SM\nshapeless/PY\nshapeliness/S\nshapely/RPT\nshaper/S\nshape\'s\nShapiro/M\nsharable/U\nSharai/M\nShara/M\nshard/SM\nshareable\nsharecropped\nsharecropper/MS\nsharecropping\nsharecrop/S\nshare/DSRGZMB\nshared/U\nshareholder/MS\nshareholding/S\nsharer/M\nshareware/S\nShari\'a\nSharia/M\nsharia/SM\nShari/M\nSharity/M\nshark/SGMD\nsharkskin/SM\nSharla/M\nSharleen/M\nSharlene/M\nSharline/M\nSharl/M\nSharona/M\nSharon/M\nSharpe/M\nsharpen/ASGD\nsharpened/U\nsharpener/S\nsharper/M\nsharpie/SM\nSharp/M\nsharpness/MS\nsharp/SGTZXPYRDN\nsharpshooter/M\nsharpshooting/M\nsharpshoot/JRGZ\nsharpy\'s\nSharron/M\nSharyl/M\nShasta/M\nshat\nshatter/DSG\nshattering/Y\nshatterproof\nShaughn/M\nShaula/M\nShauna/M\nShaun/M\nshave/DSRJGZ\nshaved/U\nshaver/M\nShavian\nshaving/M\nShavuot/M\nShawano/M\nshawl/SDMG\nshaw/M\nShaw/M\nShawna/M\nShawnee/SM\nShawn/M\nShaylah/M\nShayla/M\nShaylyn/M\nShaylynn/M\nShay/M\nshay/MS\nShayna/M\nShayne/M\nShcharansky/M\nsh/DRS\nsheaf/MDGS\nShea/M\nshearer/M\nshear/RDGZS\nsheather/M\nsheathe/UGSD\nsheath/GJMDRS\nsheathing/M\nsheaths\nsheave/SDG\nsheaves/M\nSheba/M\nshebang/MS\nShebeli/M\nSheboygan/M\nshe\'d\nshedding\nShedir/M\nsheds\nshed\'s\nshed/U\nSheelagh/M\nSheelah/M\nSheela/M\nSheena/M\nsheen/MDGS\nsheeny/TRSM\nsheepdog/SM\nsheepfold/MS\nsheepherder/MS\nsheepishness/SM\nsheepish/YP\nsheep/M\nsheepskin/SM\nSheeree/M\nsheerness/S\nsheer/PGTYRDS\nsheeting/M\nsheetlike\nsheet/RDMJSG\nSheetrock\nSheffielder/M\nSheffield/RMZ\nSheffie/M\nSheff/M\nSheffy/M\nsheikdom/SM\nsheikh\'s\nsheik/SM\nSheilah/M\nSheila/M\nshekel/MS\nShelagh/M\nShela/M\nShelba/M\nShelbi/M\nShelby/M\nShelden/M\nSheldon/M\nshelf/MDGS\nShelia/M\nshe\'ll\nshellacked\nshellacking/MS\nshellac/S\nshelled/U\nShelley/M\nshellfire/SM\nshellfish/SM\nShellie/M\nShelli/M\nShell/M\nshell/RDMGS\nShelly/M\nShel/MY\nshelter/DRMGS\nsheltered/U\nshelterer/M\nShelton/M\nshelve/JRSDG\nshelver/M\nshelves/M\nshelving/M\nshe/M\nShem/M\nShena/M\nShenandoah/M\nshenanigan/SM\nShenyang/M\nSheol/M\nShepard/M\nshepherd/DMSG\nshepherdess/S\nShepherd/M\nShep/M\nSheppard/M\nShepperd/M\nSheratan/M\nSheraton/M\nsherbet/MS\nsherd\'s\nSheree/M\nSheridan/M\nSherie/M\nsheriff/SM\nSherill/M\nSherilyn/M\nSheri/M\nSherline/M\nSherlocke/M\nsherlock/M\nSherlock/M\nSher/M\nSherman/M\nShermie/M\nSherm/M\nShermy/M\nSherpa/SM\nSherrie/M\nSherri/M\nSherry/M\nsherry/MS\nSherwin/M\nSherwood/M\nSherwynd/M\nSherye/M\nSheryl/M\nShetland/S\nShevardnadze/M\nshew/GSD\nshewn\nshh\nshiatsu/S\nshibboleth/M\nshibboleths\nshielded/U\nshielder/M\nshield/MDRSG\nShields/M\nshiftily\nshiftiness/SM\nshiftlessness/S\nshiftless/PY\nshift/RDGZS\nshifty/TRP\nShi\'ite\nShiite/SM\nShijiazhuang\nShikoku/M\nshill/DJSG\nshillelagh/M\nshillelaghs\nshilling/M\nShillong/M\nShiloh/M\nshimmed\nshimmer/DGS\nshimmery\nshimming\nshimmy/DSMG\nshim/SM\nShina/M\nshinbone/SM\nshindig/MS\nshiner/M\nshine/S\nshingle/MDRSG\nshingler/M\nshinguard\nshininess/MS\nshining/Y\nshinned\nshinning\nshinny/GDSM\nshin/SGZDRM\nshinsplints\nShintoism/S\nShintoist/MS\nShinto/MS\nshiny/PRT\nshipboard/MS\nshipborne\nshipbuilder/M\nshipbuild/RGZJ\nshipload/SM\nshipman/M\nshipmate/SM\nshipmen\nshipment/AMS\nshipowner/MS\nshippable\nshipped/A\nshipper/SM\nshipping/MS\nship\'s\nshipshape\nship/SLA\nshipwreck/GSMD\nshipwright/MS\nshipyard/MS\nShiraz/M\nshire/MS\nshirker/M\nshirk/RDGZS\nShirlee/M\nShirleen/M\nShirlene/M\nShirley/M\nShirline/M\nShirl/M\nShir/M\nshirr/GJDS\nshirtfront/S\nshirting/M\nshirt/JDMSG\nshirtless\nshirtmake/R\nshirtmaker/M\nshirtsleeve/MS\nshirttail/S\nshirtwaist/SM\nshit/S!\nshitting/!\nshitty/RT!\nShiva/M\nshiverer/M\nshiver/GDR\nshivery\nshiv/SZRM\nshivved\nshivving\nshlemiel\'s\nShmuel/M\nshoal/SRDMGT\nshoat/SM\nshocker/M\nshocking/Y\nShockley/M\nshockproof\nshock/SGZRD\nshoddily\nshoddiness/SM\nshoddy/RSTP\nshod/U\nshoehorn/GSMD\nshoeing\nshoelace/MS\nshoemaker/M\nshoemake/RZ\nshoe/MS\nshoer\'s\nshoeshine/MS\nshoestring/MS\nshoetree/MS\nshogunate/SM\nshogun/MS\nShoji/M\nSholom/M\nshone\nshoo/DSG\nshoofly\nshook/SM\nshooter/M\nshootout/MS\nshoot/SJRGZ\nshopkeeper/M\nshopkeep/RGZ\nshoplifter/M\nshoplifting/M\nshoplift/SRDGZ\nshop/MS\nshopped/M\nshopper/M\nshoppe/RSDGZJ\nshopping/M\nshoptalk/SM\nshopworn\nshorebird/S\nshore/DSRGMJ\nshoreline/SM\nShorewood/M\nshoring/M\nshortage/MS\nshortbread/MS\nshortcake/SM\nshortchange/DSG\nshortcoming/MS\nshortcrust\nshortcut/MS\nshortcutting\nshortener/M\nshortening/M\nshorten/RDGJ\nshortfall/SM\nshorthand/DMS\nShorthorn/M\nshorthorn/MS\nshortie\'s\nshortish\nshortlist/GD\nShort/M\nshortness/MS\nshort/SGTXYRDNP\nshortsightedness/S\nshortsighted/YP\nshortstop/MS\nshortwave/SM\nshorty/SM\nShoshana/M\nShoshanna/M\nShoshone/SM\nShostakovitch/M\nshotgunned\nshotgunner\nshotgunning\nshotgun/SM\nshot/MS\nshotted\nshotting\nshoulder/GMD\nshouldn\'t\nshould/TZR\nshout/SGZRDM\nshove/DSRG\nshoveler/M\nshovelful/MS\nshovel/MDRSZG\nshover/M\nshowbiz\nshowbizzes\nshowboat/SGDM\nshowcase/MGSD\nshowdown/MS\nshower/GDM\nshowery/TR\nshow/GDRZJS\nshowgirl/SM\nshowily\nshowiness/MS\nshowing/M\nshowman/M\nshowmanship/SM\nshowmen\nshown\nshowoff/S\nshowpiece/SM\nshowplace/SM\nshowroom/MS\nshowy/RTP\nshpt\nshrank\nshrapnel/SM\nshredded\nshredder/MS\nshredding\nshred/MS\nShreveport/M\nshrewdness/SM\nshrewd/RYTP\nshrew/GSMD\nshrewishness/M\nshrewish/PY\nshrieker/M\nshriek/SGDRMZ\nshrift/SM\nshrike/SM\nshrill/DRTGPS\nshrillness/MS\nshrilly\nshrimp/MDGS\nshrine/SDGM\nshrinkage/SM\nshrinker/M\nshrinking/U\nshrink/SRBG\nshrivel/GSD\nshriven\nshrive/RSDG\nShropshire/M\nshroud/GSMD\nshrubbed\nshrubbery/SM\nshrubbing\nshrubby/TR\nshrub/SM\nshrugged\nshrugging\nshrug/S\nshrunk/N\nshtick/S\nshucker/M\nshuck/SGMRD\nshucks/S\nshudder/DSG\nshuddery\nshuffleboard/MS\nshuffled/A\nshuffle/GDSRZ\nshuffles/A\nshuffling/A\nShulman/M\nShu/M\nshunned\nshunning\nshun/S\nshunter/M\nshunt/GSRD\nShurlocke/M\nShurlock/M\nShurwood/M\nshush/SDG\nshutdown/MS\nshuteye/SM\nshutoff/M\nshutout/SM\nshut/S\nshutterbug/S\nshutter/DMGS\nshuttering/M\nshutting\nshuttlecock/MDSG\nshuttle/MGDS\nshy/DRSGTZY\nshyer\nshyest\nShylockian/M\nShylock/M\nshyness/SM\nshyster/SM\nSiamese/M\nSiam/M\nSiana/M\nSianna/M\nSian\'s\nSibbie/M\nSibby/M\nSibeal/M\nSibelius/M\nSibella/M\nSibelle/M\nSibel/M\nSiberia/M\nSiberian/S\nsibilance/M\nsibilancy/M\nsibilant/SY\nSibilla/M\nSibley/M\nsibling/SM\nSib/M\nSibylla/M\nSibylle/M\nsibylline\nSibyl/M\nsibyl/SM\nSiciliana/M\nSicilian/S\nSicily/M\nsickbay/M\nsickbed/S\nsickener/M\nsickening/Y\nsicken/JRDG\nsicker/Y\nsick/GXTYNDRSP\nsickie/SM\nsickish/PY\nsickle/SDGM\nsickliness/M\nsickly/TRSDPG\nsickness/MS\nsicko/S\nsickout/S\nsickroom/SM\nsic/S\nsidearm/S\nsideband/MS\nsidebar/MS\nsideboard/SM\nsideburns\nsidecar/MS\nsided/A\nsidedness\nside/ISRM\nsidekick/MS\nsidelight/SM\nsideline/MGDRS\nsidelong\nsideman/M\nsidemen\nsidepiece/S\nsidereal\nsider/FA\nsides/A\nsidesaddle/MS\nsideshow/MS\nsidesplitting\nsidestepped\nsidestepping\nsidestep/S\nsidestroke/GMSD\nsideswipe/GSDM\nsidetrack/SDG\nsidewalk/MS\nsidewall/MS\nsidewards\nsideway/SM\nsidewinder/SM\nsiding/SM\nsidle/DSG\nSid/M\nSidnee/M\nSidney/M\nSidoney/M\nSidonia/M\nSidonnie/M\nSIDS\nsiege/GMDS\nSiegel/M\nSiegfried/M\nSieglinda/M\nSiegmund/M\nSiemens/M\nSiena/M\nsienna/SM\nSierpinski/M\nsierra/SM\nsiesta/MS\nsieve/GZMDS\nSiffre/M\nsifted/UA\nsifter/M\nsift/GZJSDR\nSigfrid/M\nSigfried/M\nSIGGRAPH/M\nsigh/DRG\nsigher/M\nsighs\nsighted/P\nsighter/M\nsighting/S\nsight/ISM\nsightless/Y\nsightliness/UM\nsightly/TURP\nsightread\nsightseeing/S\nsightsee/RZ\nSigismond/M\nSigismondo/M\nSigismund/M\nSigismundo/M\nSig/M\nsigma/SM\nsigmoid\nSigmund/M\nsignal/A\nsignaled\nsignaler/S\nsignaling\nsignalization/S\nsignalize/GSD\nsignally\nsignalman/M\nsignalmen\nsignals\nsignal\'s\nsignatory/SM\nsignature/MS\nsignboard/MS\nsigned/FU\nsigner/SC\nsignet/SGMD\nsign/GARDCS\nsignificance/IMS\nsignificantly/I\nsignificant/YS\nsignification/M\nsignify/DRSGNX\nsigning/S\nSignora/M\nsignora/SM\nsignore/M\nsignori\nsignories\nsignorina/SM\nsignorine\nSignor/M\nsignor/SFM\nsignpost/DMSG\nsign\'s\nsigns/F\nSigrid/M\nSigurd/M\nSigvard/M\nSihanouk/M\nSikhism/MS\nSikh/MS\nSikhs\nSikkimese\nSikkim/M\nSikorsky/M\nsilage/GMSD\nSilas/M\nSileas/M\nsiled\nSile/M\nsilence/MZGRSD\nsilencer/M\nsilentness/M\nsilent/TSPRY\nSilesia/M\nsilhouette/GMSD\nsilica/SM\nsilicate/SM\nsiliceous\nsilicide/M\nsilicone/SM\nsilicon/MS\nsilicoses\nsilicosis/M\nsilken/DG\nsilk/GXNDMS\nsilkily\nsilkiness/SM\nsilkscreen/SM\nsilkworm/MS\nsilky/RSPT\nsilliness/SM\nsill/MS\nsilly/PRST\nsilo/GSM\nsiltation/M\nsilt/MDGS\nsiltstone/M\nsilty/RT\nSilurian/S\nSilvain/M\nSilva/M\nSilvana/M\nSilvan/M\nSilvano/M\nSilvanus/M\nsilverer/M\nsilverfish/MS\nSilverman/M\nsilver/RDYMGS\nsilversmith/M\nsilversmiths\nSilverstein/M\nsilverware/SM\nsilvery/RTP\nSilvester/M\nSilvia/M\nSilvie/M\nSilvio/M\nSi/M\nSIMD\nSimenon/M\nSimeon/M\nsimian/S\nsimilar/EY\nsimilarity/EMS\nsimile/SM\nsimilitude/SME\nSimla/M\nsimmer/GSD\nSimmonds/M\nSimmons/M\nSimmonsville/M\nSim/MS\nSimms/M\nSimona/M\nSimone/M\nSimonette/M\nsimonize/SDG\nSimon/M\nSimonne/M\nsimony/MS\nsimpatico\nsimper/GDS\nsimpleminded/YP\nsimpleness/S\nsimple/RSDGTP\nsimpleton/SM\nsimplex/S\nsimplicity/MS\nsimplified/U\nsimplify/ZXRSDNG\nsimplistic\nsimplistically\nsimply\nSimpson/M\nsimulacrum/M\nSimula/M\nSIMULA/M\nsimulate/XENGSD\nsimulation/ME\nsimulative\nsimulator/SEM\nsimulcast/GSD\nsimultaneity/SM\nsimultaneousness/M\nsimultaneous/YP\nSinai/M\nSinatra/M\nsince\nsincere/IY\nsincereness/M\nsincerer\nsincerest\nsincerity/MIS\nSinclair/M\nSinclare/M\nSindbad/M\nSindee/M\nSindhi/M\nsinecure/MS\nsinecurist/M\nsine/SM\nsinew/SGMD\nsinewy\nsinfulness/SM\nsinful/YP\nSingaporean/S\nSingapore/M\nsing/BGJZYDR\nSingborg/M\nsingeing\nsinger/M\nSinger/M\nsinge/S\nsinging/Y\nsinglehanded/Y\nsingleness/SM\nsingle/PSDG\nSingleton/M\nsingleton/SM\nsingletree/SM\nsinglet/SM\nsingsong/GSMD\nsingularity/SM\nsingularization/M\nsingular/SY\nSinhalese/M\nsinisterness/M\nsinister/YP\nsinistral/Y\nsinkable/U\nsinker/M\nsink/GZSDRB\nsinkhole/SM\nSinkiang/M\nsinking/M\nsinlessness/M\nsinless/YP\nsin/MAGS\nsinned\nsinner/MS\nsinning\nsinter/DM\nsinuosity/MS\nsinuousities\nsinuousness/M\nsinuous/PY\nsinusitis/SM\nsinus/MS\nsinusoidal/Y\nsinusoid/MS\nSiobhan/M\nSiouxie/M\nSioux/M\nsiphon/DMSG\nsiphons/U\nsipped\nsipper/SM\nsipping\nsip/S\nsired/C\nsire/MS\nsiren/M\nsires/C\nsiring/C\nSirius/M\nsirloin/MS\nSir/MS\nsirocco/MS\nsirred\nsirring\nsirup\'s\nsir/XGMNDS\nsisal/MS\nSisely/M\nSisile/M\nsis/S\nSissie/M\nsissified\nSissy/M\nsissy/TRSM\nsister/GDYMS\nsisterhood/MS\nsisterliness/MS\nsisterly/P\nsister\'s/A\nSistine\nSisyphean\nSisyphus/M\nsit/AG\nsitarist/SM\nsitar/SM\nsitcom/SM\nsite/DSJM\nsits\nsitter/MS\nsitting/SM\nsituate/GNSDX\nsituational/Y\nsituationist\nsituation/M\nsitu/S\nsitus/M\nSiusan/M\nSiva/M\nSiward/M\nsixfold\nsixgun\nsix/MRSH\nsixpence/MS\nsixpenny\nsixshooter\nsixteen/HRSM\nsixteenths\nsixths\nsixth/Y\nsixtieths\nsixty/SMH\nsizableness/M\nsizable/P\nsized/UA\nsize/GJDRSBMZ\nsizer/M\nsizes/A\nsizing/M\nsizzler/M\nsizzle/RSDG\nSJ\nSjaelland/M\nSK\nska/S\nskateboard/SJGZMDR\nskater/M\nskate/SM\nskat/JMDRGZ\nskedaddle/GSD\nskeet/RMS\nskein/MDGS\nskeletal/Y\nskeleton/MS\nSkell/M\nSkelly/M\nskeptical/Y\nskepticism/MS\nskeptic/SM\nsketchbook/SM\nsketcher/M\nsketchily\nsketchiness/MS\nsketch/MRSDZG\nsketchpad\nsketchy/PRT\nskew/DRSPGZ\nskewer/GDM\nskewing/M\nskewness/M\nskidded\nskidding\nskid/S\nskiff/GMDS\nskiing/M\nskilfully\nskill/DMSG\nskilled/U\nskillet/MS\nskillfulnesses\nskillfulness/MU\nskillful/YUP\nskilling/M\nskimmed\nskimmer/MS\nskimming/SM\nski/MNJSG\nskimp/GDS\nskimpily\nskimpiness/MS\nskimpy/PRT\nskim/SM\nskincare\nskindive/G\nskinflint/MS\nskinhead/SM\nskinless\nskinned\nSkinner/M\nskinner/SM\nskinniness/MS\nskinning\nskinny/TRSP\nskin/SM\nskintight\nSkip/M\nskipped\nSkipper/M\nskipper/SGDM\nSkippie/M\nskipping\nSkipp/RM\nSkippy/M\nskip/S\nSkipton/M\nskirmisher/M\nskirmish/RSDMZG\nskirter/M\nskirting/M\nskirt/RDMGS\nskit/GSMD\nskitter/SDG\nskittishness/SM\nskittish/YP\nskittle/SM\nskivvy/GSDM\nskoal/SDG\nSkopje/M\nskulduggery/MS\nskulker/M\nskulk/SRDGZ\nskullcap/MS\nskullduggery\'s\nskull/SDM\nskunk/GMDS\nskycap/MS\nskydiver/SM\nskydiving/MS\nSkye/M\nskyhook\nskyjacker/M\nskyjack/ZSGRDJ\nSkylab/M\nskylarker/M\nskylark/SRDMG\nSkylar/M\nSkyler/M\nskylight/MS\nskyline/MS\nSky/M\nsky/MDRSGZ\nskyrocket/GDMS\nskyscraper/M\nskyscrape/RZ\nskyward/S\nskywave\nskyway/M\nskywriter/MS\nskywriting/MS\nslabbed\nslabbing\nslab/MS\nslacken/DG\nslacker/M\nslackness/MS\nslack/SPGTZXYRDN\nSlade/M\nslagged\nslagging\nslag/MS\nslain\nslake/DSG\nslaked/U\nslalom/SGMD\nslammed\nslammer/S\nslamming\nslam/S\nslander/MDRZSG\nslanderousness/M\nslanderous/PY\nslang/SMGD\nslangy/TR\nslanting/Y\nslant/SDG\nslantwise\nslapdash/S\nslaphappy/TR\nslap/MS\nslapped\nslapper\nslapping\nslapstick/MS\nslash/GZRSD\nslashing/Y\nslater/M\nSlater/M\nslate/SM\nslather/SMDG\nslating/M\nslat/MDRSGZ\nslatted\nslattern/MYS\nslatting\nslaughterer/M\nslaughterhouse/SM\nslaughter/SJMRDGZ\nslave/DSRGZM\nslaveholder/SM\nslaver/GDM\nslavery/SM\nSlavic/M\nslavishness/SM\nslavish/YP\nSlav/MS\nSlavonic/M\nslaw/MS\nslay/RGZS\nsleaze/S\nsleazily\nsleaziness/SM\nsleazy/RTP\nsledded\nsledder/S\nsledding\nsledgehammer/MDGS\nsledge/SDGM\nsled/SM\nsleekness/S\nsleek/PYRDGTS\nsleeper/M\nsleepily\nsleepiness/SM\nsleeping/M\nsleeplessness/SM\nsleepless/YP\nsleepover/S\nsleep/RMGZS\nsleepwalker/M\nsleepwalk/JGRDZS\nsleepwear/M\nsleepyhead/MS\nsleepy/PTR\nsleet/DMSG\nsleety/TR\nsleeveless\nsleeve/SDGM\nsleeving/M\nsleigh/GMD\nsleighs\nsleight/SM\nsleken/DG\nslenderize/DSG\nslenderness/MS\nslender/RYTP\nslept\nSlesinger/M\nsleuth/GMD\nsleuths\nslew/DGS\nslice/DSRGZM\nsliced/U\nslicer/M\nslicker/M\nslickness/MS\nslick/PSYRDGTZ\nslider/M\nslide/S\nslid/GZDR\nslight/DRYPSTG\nslighter/M\nslighting/Y\nslightness/S\nslime/SM\nsliminess/S\nslimline\nslimmed\nslimmer/S\nslimmest\nslimming/S\nslimness/S\nslim/SPGYD\nslimy/PTR\nsling/GMRS\nslingshot/MS\nslings/U\nslink/GS\nslinky/RT\nslipcase/MS\nslipcover/GMDS\nslipknot/SM\nslippage/SM\nslipped\nslipper/GSMD\nslipperiness/S\nslippery/PRT\nslipping\nslipshod\nslip/SM\nslipstream/MDGS\nslipway/SM\nslither/DSG\nslithery\nslit/SM\nslitted\nslitter/S\nslitting\nsliver/GSDM\nslivery\nSloane/M\nSloan/M\nslobber/SDG\nslobbery\nslob/MS\nSlocum/M\nsloe/MS\nsloganeer/MG\nslogan/MS\nslogged\nslogging\nslog/S\nsloop/SM\nslop/DRSGZ\nsloped/U\nslope/S\nslopped\nsloppily\nsloppiness/SM\nslopping\nsloppy/RTP\nslosh/GSDM\nslothfulness/MS\nslothful/PY\nsloth/GDM\nsloths\nslot/MS\nslotted\nslotting\nslouch/DRSZG\nsloucher/M\nslouchy/RT\nslough/GMD\nsloughs\nSlovakia/M\nSlovakian/S\nSlovak/S\nSlovene/S\nSlovenia/M\nSlovenian/S\nslovenliness/SM\nslovenly/TRP\nsloven/YMS\nslowcoaches\nslowdown/MS\nslowish\nslowness/MS\nslow/PGTYDRS\nslowpoke/MS\nSLR\nsludge/SDGM\nsludgy/TR\nslue/MGDS\nsluggard/MS\nslugged\nslugger/SM\nslugging\nsluggishness/SM\nsluggish/YP\nslug/MS\nsluice/SDGM\nslumberer/M\nslumber/MDRGS\nslumberous\nslumlord/MS\nslummed\nslummer\nslumming\nslum/MS\nslummy/TR\nslump/DSG\nslung/U\nslunk\nslur/MS\nslurp/GSD\nslurred\nslurried/M\nslurring\nslurrying/M\nslurry/MGDS\nslushiness/SM\nslush/SDMG\nslushy/RTP\nslut/MS\nsluttish\nslutty/TR\nSly/M\nslyness/MS\nsly/RTY\nsmacker/M\nsmack/SMRDGZ\nsmallholders\nsmallholding/MS\nsmallish\nSmall/M\nsmallness/S\nsmallpox/SM\nsmall/SGTRDP\nsmalltalk\nsmalltime\nSmallwood/M\nsmarmy/RT\nsmarten/GD\nsmartness/S\nsmartypants\nsmart/YRDNSGTXP\nsmasher/M\nsmash/GZRSD\nsmashing/Y\nsmashup/S\nsmattering/SM\nsmearer/M\nsmear/GRDS\nsmeary/TR\nsmeller/M\nsmelliness/MS\nsmell/SBRDG\nsmelly/TRP\nsmelter/M\nsmelt/SRDGZ\nSmetana/M\nsmidgen/MS\nsmilax/MS\nsmile/GMDSR\nsmiley/M\nsmilies\nsmiling/UY\nsmirch/SDG\nsmirk/GSMD\nSmirnoff/M\nsmite/GSR\nsmiter/M\nsmith/DMG\nsmithereens\nSmithfield/M\nSmith/M\nsmiths\nSmithsonian/M\nSmithson/M\nSmithtown/M\nsmithy/SM\nsmitten\nSmitty/M\nSm/M\nsmocking/M\nsmock/SGMDJ\nsmoggy/TR\nsmog/SM\nsmoke/GZMDSRBJ\nsmokehouse/MS\nsmokeless\nsmoker/M\nsmokescreen/S\nsmokestack/MS\nSmokey/M\nsmokiness/S\nsmoking/M\nsmoky/RSPT\nsmoldering/Y\nsmolder/SGD\nSmolensk/M\nSmollett/M\nsmooch/SDG\nsmoothen/DG\nsmoother/M\nsmoothie/SM\nsmoothness/MS\nsmooths\nsmooth/TZGPRDNY\nsm�rg�sbord/SM\nsmote\nsmother/GSD\nSMSA/MS\nSMTP\nSmucker/M\nsmudge/GSD\nsmudginess/M\nsmudgy/TRP\nsmugged\nsmugger\nsmuggest\nsmugging\nsmuggle/JZGSRD\nsmuggler/M\nsmugness/MS\nsmug/YSP\nsmut/SM\nSmuts/M\nsmutted\nsmuttiness/SM\nsmutting\nsmutty/TRP\nSmyrna/M\nsnack/SGMD\nsnaffle/GDSM\nsnafu/DMSG\nsnagged\nsnagging\nsnag/MS\nsnail/GSDM\nSnake\nsnakebird/M\nsnakebite/MS\nsnake/DSGM\nsnakelike\nsnakeroot/M\nsnaky/TR\nsnapback/M\nsnapdragon/MS\nsnapped/U\nsnapper/SM\nsnappily\nsnappiness/SM\nsnapping/U\nsnappishness/SM\nsnappish/PY\nsnappy/PTR\nsnapshot/MS\nsnapshotted\nsnapshotting\nsnap/US\nsnare/DSRGM\nsnarer/M\nsnarf/JSGD\nsnarler/M\nsnarling/Y\nsnarl/UGSD\nsnarly/RT\nsnatch/DRSZG\nsnatcher/M\nsnazzily\nsnazzy/TR\nSnead/M\nsneaker/MD\nsneakily\nsneakiness/SM\nsneaking/Y\nsneak/RDGZS\nsneaky/PRT\nSneed/M\nsneerer/M\nsneer/GMRDJS\nsneering/Y\nsneeze/SRDG\nSnell/M\nsnicker/GMRD\nsnick/MRZ\nsnideness/M\nSnider/M\nsnide/YTSRP\nsniffer/M\nsniff/GZSRD\nsniffle/GDRS\nsniffler/M\nsniffles/M\nsnifter/MDSG\nsnigger\'s\nsniper/M\nsnipe/SM\nsnipped\nsnipper/SM\nsnippet/SM\nsnipping\nsnippy/RT\nsnip/SGDRZ\nsnitch/GDS\nsnit/SM\nsniveler/M\nsnivel/JSZGDR\nSn/M\nsnobbery/SM\nsnobbishness/S\nsnobbish/YP\nsnobby/RT\nsnob/MS\nSnodgrass/M\nsnood/SGDM\nsnooker/GMD\nsnook/SMRZ\nsnooper/M\nsnoop/SRDGZ\nSnoopy/M\nsnoopy/RT\nsnootily\nsnootiness/MS\nsnoot/SDMG\nsnooty/TRP\nsnooze/GSD\nsnore/DSRGZ\nsnorkel/ZGSRDM\nsnorter/M\nsnort/GSZRD\nsnot/MS\nsnotted\nsnottily\nsnottiness/SM\nsnotting\nsnotty/TRP\nsnout/SGDM\nsnowball/SDMG\nsnowbank/SM\nSnowbelt/SM\nsnowbird/SM\nsnowblower/S\nsnowboard/GZDRJS\nsnowbound\nsnowcapped\nsnowdrift/MS\nsnowdrop/MS\nsnowfall/MS\nsnowfield/MS\nsnowflake/MS\nsnow/GDMS\nsnowily\nsnowiness/MS\nSnow/M\nsnowman/M\nsnowmen\nsnowmobile/GMDRS\nsnowplough/M\nsnowploughs\nsnowplow/SMGD\nsnowshed\nsnowshoeing\nsnowshoe/MRS\nsnowshoer/M\nsnowstorm/MS\nsnowsuit/S\nsnowy/RTP\nsnubbed\nsnubber\nsnubbing\nsnub/SP\nsnuffbox/SM\nsnuffer/M\nsnuff/GZSYRD\nsnuffle/GDSR\nsnuffler/M\nsnuffly/RT\nsnugged\nsnugger\nsnuggest\nsnugging\nsnuggle/GDS\nsnuggly\nsnugness/MS\nsnug/SYP\nSnyder/M\nso\nSO\nsoaker/M\nsoak/GDRSJ\nsoapbox/DSMG\nsoapiness/S\nsoap/MDRGS\nsoapstone/MS\nsoapsud/S\nsoapy/RPT\nsoar/DRJSG\nsoarer/M\nsoaring/Y\nsobbed\nsobbing/Y\nsoberer/M\nsoberness/SM\nsober/PGTYRD\nsobriety/SIM\nsobriquet/MS\nsob/SZR\nSoc\nsoccer/MS\nsociabilities\nsociability/IM\nsociable/S\nsociably/IU\nsocialism/SM\nsocialistic\nsocialist/SM\nsocialite/SM\nsociality/M\nsocialization/SM\nsocialized/U\nsocializer/M\nsocialize/RSDG\nsocially/U\nsocial/SY\nsocietal/Y\nsociety/MS\nsocio\nsociobiology/M\nsociocultural/Y\nsociodemographic\nsocioeconomically\nsocioeconomic/S\nsociolinguistics/M\nsociological/MY\nsociologist/SM\nsociology/SM\nsociometric\nsociometry/M\nsociopath/M\nsociopaths\nsocket/SMDG\nsock/GDMS\nSocorro/M\nSocrates/M\nSocratic/S\nsoc/S\nsoda/SM\nsodded\nsodden/DYPSG\nsoddenness/M\nsodding\nSoddy/M\nsodium/MS\nsod/MS\nsodomite/MS\nsodomize/GDS\nSodom/M\nsodomy/SM\nsoever\nsofa/SM\nSofia/M\nSofie/M\nsoftball/MS\nsoftbound\nsoftener/M\nsoften/ZGRD\nsofthearted\nsoftie\'s\nsoftness/MS\nsoft/SPXTYNR\nsoftware/MS\nsoftwood/SM\nsofty/SM\nsoggily\nsogginess/S\nsoggy/RPT\nSoho/M\nsoign�\nsoiled/U\nsoil/SGMD\nsoir�e/SM\nsojourn/RDZGSM\nsolace/GMSRD\nsolacer/M\nsolaria\nsolarium/M\nsolar/S\nsolder/RDMSZG\nsoldier/MDYSG\nsoldiery/MS\nsold/RU\nsolecism/MS\nsoled/FA\nsolemness\nsolemnify/GSD\nsolemnity/MS\nsolemnization/SM\nsolemnize/GSD\nsolemnness/SM\nsolemn/PTRY\nsolenoid/MS\nsoler/F\nsoles/IFA\nsole/YSP\nsol/GSMDR\nsolicitation/S\nsolicited/U\nsolicitor/MS\nsolicitousness/S\nsolicitous/YP\nsolicit/SDG\nsolicitude/MS\nsolidarity/MS\nsolidi\nsolidification/M\nsolidify/NXSDG\nsolidity/S\nsolidness/SM\nsolid/STYRP\nsolidus/M\nsoliloquies\nsoliloquize/DSG\nsoliloquy/M\nsoling/NM\nsolipsism/MS\nsolipsist/S\nSolis/M\nsolitaire/SM\nsolitary/SP\nsolitude/SM\nSollie/M\nSolly/M\nSol/MY\nsolo/DMSG\nsoloist/SM\nSolomon/SM\nSolon/M\nSoloviev/M\nsolstice/SM\nsolubility/IMS\nsoluble/SI\nsolute/ENAXS\nsolute\'s\nsolution/AME\nsolvable/UI\nsolvating\nsolve/ABSRDZG\nsolved/EU\nsolvency/IMS\nsolvent/IS\nsolvently\nsolvent\'s\nsolver/MEA\nsolves/E\nsolving/E\nSolzhenitsyn/M\nSomalia/M\nSomalian/S\nSomali/MS\nsoma/M\nsomatic\nsomberness/SM\nsomber/PY\nsombre\nsombrero/SM\nsomebody\'ll\nsomebody/SM\nsomeday\nsomehow\nsomeone\'ll\nsomeone/SM\nsomeplace/M\nsomersault/DSGM\nSomerset/M\nsomerset/S\nsomersetted\nsomersetting\nSomerville/M\nsomething/S\nsometime/S\nsomeway/S\nsomewhat/S\nsomewhere/S\nsome/Z\nsommelier/SM\nSomme/M\nsomnambulism/SM\nsomnambulist/SM\nsomnolence/MS\nsomnolent/Y\nSomoza/M\nsonar/SM\nsonata/MS\nsonatina/SM\nSondheim/M\nSondra/M\nSonenberg/M\nsongbag\nsongbird/SM\nsongbook/S\nsongfest/MS\nsongfulness/M\nsongful/YP\nSonghai/M\nSonghua/M\nsong/MS\nsongster/MS\nsongstress/SM\nsongwriter/SM\nsongwriting\nSonia/M\nsonic/S\nSonja/M\nSon/M\nsonnet/MDSG\nSonnie/M\nSonni/M\nSonnnie/M\nSonny/M\nsonny/SM\nSonoma/M\nSonora/M\nsonority/S\nsonorousness/SM\nsonorous/PY\nson/SMY\nSontag/M\nsonuvabitch\nSonya/M\nSony/M\nsoonish\nsoon/TR\nsoothe\nsoother/M\nsooth/GZTYSRDMJ\nsoothingness/M\nsoothing/YP\nsooths\nsoothsayer/M\nsoothsay/JGZR\nsoot/MGDS\nsooty/RT\nSOP\nSophey/M\nSophia/SM\nSophie/M\nSophi/M\nsophism/SM\nsophister/M\nsophistical\nsophisticatedly\nsophisticated/U\nsophisticate/XNGDS\nsophistication/MU\nsophistic/S\nsophist/RMS\nsophistry/SM\nSophoclean\nSophocles/M\nsophomore/SM\nsophomoric\nSophronia/M\nsoporifically\nsoporific/SM\nsopped\nsopping/S\nsoppy/RT\nsoprano/SM\nsop/SM\nSopwith/M\nsorbet/SM\nSorbonne/M\nsorcerer/MS\nsorceress/S\nsorcery/MS\nSorcha/M\nsordidness/SM\nsordid/PY\nsorehead/SM\nsoreness/S\nSorensen/M\nSorenson/M\nsore/PYTGDRS\nsorghum/MS\nsorority/MS\nsorrel/SM\nSorrentine/M\nsorrily\nsorriness/SM\nsorrower/M\nsorrowfulness/SM\nsorrowful/YP\nsorrow/GRDMS\nsorry/PTSR\nsorta\nsortable\nsorted/U\nsorter/MS\nsort/FSAGD\nsortieing\nsortie/MSD\nsort\'s\nsos\nSOS\nSosa/M\nSosanna/M\nSoto/M\nsot/SM\nsottish\nsoubriquet\'s\nsouffl�/MS\nsough/DG\nsoughs\nsought/U\nsoulfulness/MS\nsoulful/YP\nsoulless/Y\nsoul/MDS\nsound/AUD\nsoundboard/MS\nsounders\nsounder\'s\nsounder/U\nsoundest\nsounding/AY\nsoundings\nsounding\'s\nsoundless/Y\nsoundly/U\nsoundness/UMS\nsoundproof/GSD\nsoundproofing/M\nsound\'s\nsounds/A\nsoundtrack/MS\nsoup�on/SM\nsoup/GMDS\nSouphanouvong/M\nsoupy/RT\nsource/ASDMG\nsourceless\nsourdough\nsourdoughs\nsourish\nsourness/MS\nsourpuss/MS\nsour/TYDRPSG\nSousa/M\nsousaphone/SM\nsous/DSG\nsouse\nsou/SMH\nSouthampton/M\nsouthbound\nsoutheastern\nsoutheaster/YM\nSoutheast/MS\nsoutheast/RZMS\nsoutheastward/S\nsoutherly/S\nsouther/MY\nsoutherner/M\nSoutherner/MS\nsouthernisms\nsouthernmost\nsouthern/PZSYR\nSouthey/M\nSouthfield/M\nsouthing/M\nsouthland/M\nSouth/M\nsouthpaw/MS\nsouth/RDMG\nsouths\nSouths\nsouthward/S\nsouthwestern\nsouthwester/YM\nSouthwest/MS\nsouthwest/RMSZ\nsouthwestward/S\nsouvenir/SM\nsou\'wester\nsovereignty/MS\nsovereign/YMS\nsoviet/MS\nSoviet/S\nsow/ADGS\nsowbelly/M\nsowens/M\nsower/DS\nSoweto/M\nsown/A\nsox\'s\nsoybean/MS\nSoyinka/M\nsoy/MS\nSoyuz/M\nSpaatz/M\nspacecraft/MS\nspace/DSRGZMJ\nspaceflight/S\nspaceman/M\nspacemen\nspaceport/SM\nspacer/M\nspaceship/MS\nspacesuit/MS\nspacewalk/GSMD\nSpacewar/M\nspacewoman\nspacewomen\nspacey\nspacial\nspacier\nspaciest\nspaciness\nspacing/M\nspaciousness/SM\nspacious/PY\nSpackle\nspade/DSRGM\nspadeful/SM\nspader/M\nspadework/SM\nspadices\nspadix/M\nSpafford/M\nspaghetti/SM\nSpahn/M\nSpain/M\nspake\nSpalding/M\nSpam/M\nspa/MS\nSpan\nspandex/MS\nspandrels\nspangle/GMDS\nSpanglish/S\nSpaniard/SM\nspanielled\nspanielling\nspaniel/SM\nSpanish/M\nspanker/M\nspanking/M\nspank/SRDJG\nspan/MS\nspanned/U\nspanner/SM\nspanning\nSPARC/M\nSPARCstation/M\nspar/DRMGTS\nspareness/MS\nspare/PSY\nspareribs\nsparer/M\nsparing/UY\nsparker/M\nsparkle/DRSGZ\nsparkler/M\nSparkman/M\nSparks\nspark/SGMRD\nsparky/RT\nsparling/SM\nsparred\nsparrer\nsparring/U\nsparrow/MS\nsparseness/S\nsparse/YP\nsparsity/S\nspars/TR\nSpartacus/M\nSparta/M\nspartan\nSpartan/S\nspasm/GSDM\nspasmodic\nspasmodically\nspastic/S\nspate/SM\nspathe/MS\nspatiality/M\nspatial/Y\nspat/MS\nspatted\nspatter/DGS\nspatterdock/M\nspatting\nspatula/SM\nspavin/DMS\nspawner/M\nspawn/MRDSG\nspay/DGS\nSPCA\nspeakable/U\nspeakeasy/SM\nspeaker/M\nSpeaker\'s\nspeakership/M\nspeaking/U\nspeak/RBGZJS\nspearer/M\nspearfish/SDMG\nspearhead/GSDM\nspearmint/MS\nspear/MRDGS\nSpears\nspec\'d\nspecialism/MS\nspecialist/MS\nspecialization/SM\nspecialized/U\nspecialize/GZDSR\nspecializing/U\nspecial/SRYP\nspecialty/MS\nspecie/MS\nspecif\nspecifiability\nspecifiable\nspecifiably\nspecifically\nspecification/SM\nspecificity/S\nspecific/SP\nspecified/U\nspecifier/SM\nspecifies\nspecify/AD\nspecifying\nspecimen/SM\nspec\'ing\nspeciousness/SM\nspecious/YP\nspeck/GMDS\nspeckle/GMDS\nspec/SM\nspectacle/MSD\nspectacular/SY\nspectator/SM\nspecter/DMS\nspecter\'s/A\nspectralness/M\nspectral/YP\nspectra/M\nspectrogram/MS\nspectrographically\nspectrograph/M\nspectrography/M\nspectrometer/MS\nspectrometric\nspectrometry/M\nspectrophotometer/SM\nspectrophotometric\nspectrophotometry/M\nspectroscope/SM\nspectroscopic\nspectroscopically\nspectroscopy/SM\nspectrum/M\nspecularity\nspecular/Y\nspeculate/VNGSDX\nspeculation/M\nspeculative/Y\nspeculator/SM\nsped\nspeech/GMDS\nspeechlessness/SM\nspeechless/YP\nspeedboat/GSRM\nspeedboating/M\nspeeder/M\nspeedily\nspeediness/SM\nspeedometer/MS\nspeed/RMJGZS\nspeedster/SM\nspeedup/MS\nspeedway/SM\nspeedwell/MS\nspeedy/PTR\nspeer/M\nspeleological\nspeleologist/S\nspeleology/MS\nspellbinder/M\nspellbind/SRGZ\nspellbound\nspelldown/MS\nspelled/A\nspeller/M\nspelling/M\nspell/RDSJGZ\nspells/A\nspelunker/MS\nspelunking/S\nSpencerian\nSpencer/M\nSpence/RM\nspender/M\nspend/SBJRGZ\nspendthrift/MS\nSpenglerian\nSpengler/M\nSpense/MR\nSpenserian\nSpenser/M\nspent/U\nspermatophyte/M\nspermatozoa\nspermatozoon/M\nspermicidal\nspermicide/MS\nsperm/SM\nSperry/M\nspew/DRGZJS\nspewer/M\nSPF\nsphagnum/SM\nsphere/SDGM\nspherical/Y\nspheric/S\nspherics/M\nspheroidal/Y\nspheroid/SM\nspherule/MS\nsphincter/SM\nSphinx/M\nsphinx/MS\nSpica/M\nspic/DGM\nspicebush/M\nspice/SM\nspicily\nspiciness/SM\nspicule/MS\nspicy/PTR\nspider/SM\nspiderweb/S\nspiderwort/M\nspidery/TR\nSpiegel/M\nSpielberg/M\nspiel/GDMS\nspier/M\nspiffy/TDRSG\nspigot/MS\nspike/GMDSR\nSpike/M\nspiker/M\nspikiness/SM\nspiky/PTR\nspillage/SM\nSpillane/M\nspillover/SM\nspill/RDSG\nspillway/SM\nspinach/MS\nspinal/YS\nspindle/JGMDRS\nspindly/RT\nspinelessness/M\nspineless/YP\nspine/MS\nspinet/SM\nspininess/M\nspinnability/M\nspinnaker/SM\nspinneret/MS\nspinner/SM\nspinning/SM\nSpinoza/M\nspin/S\nspinsterhood/SM\nspinsterish\nspinster/MS\nspiny/PRT\nspiracle/SM\nspiraea\'s\nspiral/YDSG\nspire/AIDSGF\nspirea/MS\nspire\'s\nspiritedness/M\nspirited/PY\nspirit/GMDS\nspiritless\nspirits/I\nspiritualism/SM\nspiritualistic\nspiritualist/SM\nspirituality/SM\nspiritual/SYP\nspirituous\nspirochete/SM\nSpiro/M\nspiry/TR\nspitball/SM\nspite/CSDAG\nspitefuller\nspitefullest\nspitefulness/MS\nspiteful/PY\nspite\'s/A\nspitfire/SM\nspit/SGD\nspitted\nspitting\nspittle/SM\nspittoon/SM\nSpitz/M\nsplashdown/MS\nsplasher/M\nsplash/GZDRS\nsplashily\nsplashiness/MS\nsplashy/RTP\nsplat/SM\nsplatted\nsplatter/DSG\nsplatting\nsplayfeet\nsplayfoot/MD\nsplay/SDG\nspleen/SM\nsplendidness/M\nsplendid/YRPT\nsplendorous\nsplendor/SM\nsplenetic/S\nsplicer/M\nsplice/RSDGZJ\nspline/MSD\nsplinter/GMD\nsplintery\nsplint/SGZMDR\nsplits/M\nsplit/SM\nsplittable\nsplitter/MS\nsplitting/S\nsplodge/SM\nsplotch/MSDG\nsplotchy/RT\nsplurge/GMDS\nsplutterer/M\nsplutter/RDSG\nSp/M\nSpock/M\nspoilables\nspoilage/SM\nspoil/CSZGDR\nspoiled/U\nspoiler/MC\nspoilsport/SM\nSpokane/M\nspoke/DSG\nspoken/U\nspokeshave/MS\nspokesman/M\nspokesmen\nspokespeople\nspokesperson/S\nspokeswoman/M\nspokeswomen\nspoliation/MCS\nspongecake\nsponge/GMZRSD\nsponger/M\nsponginess/S\nspongy/TRP\nsponsor/DGMS\nsponsorship/S\nspontaneity/SM\nspontaneousness/M\nspontaneous/PY\nspoof/SMDG\nspookiness/MS\nspook/SMDG\nspooky/PRT\nspool/SRDMGZ\nspoonbill/SM\nspoonerism/SM\nspoonful/MS\nspoon/GSMD\nspoor/GSMD\nsporadically\nsporadic/Y\nspore/DSGM\nsporran/MS\nsportiness/SM\nsporting/Y\nsportiveness/M\nsportive/PY\nsportscast/RSGZM\nsportsmanlike/U\nsportsman/MY\nsportsmanship/MS\nsportsmen\nsportswear/M\nsportswoman/M\nsportswomen\nsportswriter/S\nsport/VGSRDM\nsporty/PRT\nSposato/M\nspotlessness/MS\nspotless/YP\nspotlight/GDMS\nspotlit\nspot/MSC\nspotted/U\nspotter/MS\nspottily\nspottiness/SM\nspotting/M\nspotty/RTP\nspousal/MS\nspouse/GMSD\nspouter/M\nspout/SGRD\nsprain/SGD\nsprang/S\nsprat/SM\nsprawl/GSD\nsprayed/UA\nsprayer/M\nspray/GZSRDM\nsprays/A\nspreadeagled\nspreader/M\nspread/RSJGZB\nspreadsheet/S\nspreeing\nspree/MDS\nsprigged\nsprigging\nsprightliness/MS\nsprightly/PRT\nsprig/MS\nspringboard/MS\nspringbok/MS\nspringeing\nspringer/M\nSpringfield/M\nspringily\nspringiness/SM\nspringing/M\nspringlike\nspring/SGZR\nSpringsteen/M\nspringtime/MS\nspringy/TRP\nsprinkle/DRSJZG\nsprinkler/DM\nsprinkling/M\nSprint/M\nsprint/SGZMDR\nsprite/SM\nspritz/GZDSR\nsprocket/DMGS\nsprocketed/U\nSproul/M\nsprout/GSD\nspruce/GMTYRSDP\nspruceness/SM\nsprue/M\nsprung/U\nspryness/S\nspry/TRY\nSPSS\nspudded\nspudding\nspud/MS\nSpuds/M\nspume/DSGM\nspumone\'s\nspumoni/S\nspumy/TR\nspun\nspunk/GSMD\nspunky/SRT\nspurge/MS\nspuriousness/SM\nspurious/PY\nspur/MS\nspurn/RDSG\nspurred\nspurring\nspurt/SGD\nsputa\nSputnik\nsputnik/MS\nsputter/DRGS\nsputum/M\nspy/DRSGM\nspyglass/MS\nsq\nsqq\nsqrt\nsquabbed\nsquabber\nsquabbest\nsquabbing\nsquabbler/M\nsquabble/ZGDRS\nsquab/SM\nsquadded\nsquadding\nsquadron/MDGS\nsquad/SM\nsqualidness/SM\nsqualid/PRYT\nsqualler/M\nsquall/GMRDS\nsqually/RT\nsqualor/SM\nsquamous/Y\nsquander/GSRD\nSquanto\nsquare/GMTYRSDP\nsquareness/SM\nsquarer/M\nSquaresville/M\nsquarish\nsquash/GSRD\nsquashiness/M\nsquashy/RTP\nsquatness/MS\nsquat/SPY\nsquatted\nsquatter/SMDG\nsquattest\nsquatting\nsquawker/M\nsquawk/GRDMZS\nsquaw/SM\nsqueaker/M\nsqueakily\nsqueakiness/S\nsqueak/RDMGZS\nsqueaky/RPT\nsquealer/M\nsqueal/MRDSGZ\nsqueamishness/SM\nsqueamish/YP\nsqueegee/DSM\nsqueegeeing\nsqueeze/GZSRDB\nsqueezer/M\nsquelcher/M\nsquelch/GDRS\nsquelchy/RT\nsquibbed\nSquibb/GM\nsquibbing\nSquibbing/M\nsquib/SM\nsquidded\nsquidding\nsquid/SM\nsquiggle/MGDS\nsquiggly/RT\nsquinter/M\nsquint/GTSRD\nsquinting/Y\nsquirehood\nsquire/SDGM\nsquirm/SGD\nsquirmy/TR\nsquirrel/SGYDM\nsquirter/M\nsquirt/GSRD\nsquish/GSD\nsquishy/RTP\nSr\nSrinagar/M\nSRO\nS\'s\nSS\nSSA\nSSE\nssh\ns\'s/KI\nSSS\nSST\nSSW\nST\nstabbed\nstabber/S\nstabbing/S\nstability/ISM\nstabilizability\nstabilization/CS\nstabilization\'s\nstabilize/CGSD\nstabilizer/MS\nstableman/M\nstablemate\nstablemen\nstableness/UM\nstable/RSDGMTP\nstabler/U\nstable\'s/F\nstables/F\nstablest/U\nstabling/M\nstably/U\nstab/YS\nstaccato/S\nStacee/M\nStace/M\nStacey/M\nStacia/M\nStacie/M\nStaci/M\nstackable\nstacker/M\nstack\'s\nstack/USDG\nStacy/M\nstadias\nstadia\'s\nstadium/MS\nStael/M\nStafani/M\nstaff/ADSG\nStaffard/M\nstaffer/MS\nStafford/M\nStaffordshire/M\nstaffroom\nstaff\'s\nStaford/M\nstag/DRMJSGZ\nstagecoach/MS\nstagecraft/MS\nstagehand/MS\nstager/M\nstage/SM\nstagestruck\nstagflation/SM\nstagged\nstaggerer/M\nstagger/GSJDR\nstaggering/Y\nstaggers/M\nstagging\nstaginess/M\nstaging/M\nstagnancy/SM\nstagnant/Y\nstagnate/NGDSX\nstagnation/M\nstagy/PTR\nStahl/M\nstaidness/MS\nstaid/YRTP\nstained/U\nstainer/M\nstainless/YS\nstain/SGRD\nstaircase/SM\nstair/MS\nstairway/SM\nstairwell/MS\nstake/DSGM\nstakeholder/S\nstakeout/SM\nstalactite/SM\nstalag/M\nstalagmite/SM\nstalemate/SDMG\nstaleness/MS\nstale/PGYTDSR\nStaley/M\nStalingrad/M\nStalinist\nStalin/SM\nstalker/M\nstalk/MRDSGZJ\nstall/DMSJG\nstalled/I\nstallholders\nstallion/SM\nStallone/M\nstalls/I\nstalwartness/M\nstalwart/PYS\nSta/M\nstamen/MS\nStamford/M\nstamina/SM\nstaminate\nstammer/DRSZG\nstammerer/M\nstammering/Y\nstampede/MGDRS\nstampeder/M\nstamped/U\nstamper/M\nstamp/RDSGZJ\nstance/MIS\nstancher/M\nstanch/GDRST\nstanchion/SGMD\nstandalone\nstandardization/AMS\nstandardized/U\nstandardize/GZDSR\nstandardizer/M\nstandardizes/A\nstandard/YMS\nstandby\nstandbys\nstandee/MS\nStandford/M\nstanding/M\nStandish/M\nstandoffish\nstandoff/SM\nstandout/MS\nstandpipe/MS\nstandpoint/SM\nstand/SJGZR\nstandstill/SM\nStanfield/M\nStanford/M\nStanislas/M\nStanislaus/M\nStanislavsky/M\nStanislaw/M\nstank/S\nStanleigh/M\nStanley/M\nStanly/M\nstannic\nstannous\nStanton/M\nStanwood/M\nStan/YMS\nstanza/MS\nstaph/M\nstaphs\nstaphylococcal\nstaphylococci\nstaphylococcus/M\nstapled/U\nstapler/M\nStapleton/M\nstaple/ZRSDGM\nstarboard/SDMG\nstarchily\nstarchiness/MS\nstarch/MDSG\nstarchy/TRP\nstardom/MS\nstar/DRMGZS\nstardust/MS\nstare/S\nstarfish/SM\nStargate/M\nstargaze/ZGDRS\nstaring/U\nStarkey/M\nStark/M\nstarkness/MS\nstark/SPGTYRD\nStarla/M\nStarlene/M\nstarless\nstarlet/MS\nstarlight/MS\nstarling/MS\nStarlin/M\nstarlit\nStar/M\nstarred\nstarring\nStarr/M\nstarry/TR\nstarship\nstarstruck\nstart/ASGDR\nstarter/MS\nstartle/GDS\nstartling/PY\nstartup/SM\nstarvation/MS\nstarveling/M\nstarver/M\nstarve/RSDG\nstash/GSD\nstasis/M\nstat/DRSGV\nstatecraft/MS\nstated/U\nstatehood/MS\nstatehouse/S\nStatehouse\'s\nstate/IGASD\nstatelessness/MS\nstateless/P\nstateliness/MS\nstately/PRT\nstatement/MSA\nStaten/M\nstater/M\nstateroom/SM\nstateside\nstate\'s/K\nstates/K\nstatesmanlike\nstatesman/MY\nstatesmanship/SM\nstatesmen\nstateswoman\nstateswomen\nstatewide\nstatical/Y\nstatic/S\nstatics/M\nstationarity\nstationary/S\nstationer/M\nstationery/MS\nstationmaster/M\nstation/SZGMDR\nstatistical/Y\nstatistician/MS\nstatistic/MS\nStatler/M\nstator/SM\nstatuary/SM\nstatue/MSD\nstatuesque/YP\nstatuette/MS\nstature/MS\nstatus/SM\nstatute/SM\nstatutorily\nstatutory/P\nStauffer/M\nstaunchness/S\nstaunch/PDRSYTG\nstave/DGM\nStavro/MS\nstay/DRGZS\nstayer/M\nstd\nSTD\nstdio\nsteadfastness/MS\nsteadfast/PY\nsteadily/U\nsteadiness\'s\nsteadiness/US\nsteading/M\nstead/SGDM\nsteady/DRSUTGP\nsteakhouse/SM\nsteak/SM\nstealer/M\nstealing/M\nsteal/SRHG\nstealthily\nstealthiness/MS\nstealth/M\nstealths\nstealthy/PTR\nsteamboat/MS\nsteamer/MDG\nsteamfitter/S\nsteamfitting/S\nsteamily\nsteaminess/SM\nsteamroller/DMG\nsteamroll/GZRDS\nsteam/SGZRDMJ\nsteamship/SM\nsteamy/RSTP\nStearne/M\nStearn/SM\nsteed/SM\nSteele/M\nsteeliness/SM\nsteelmaker/M\nsteel/SDMGZ\nsteelworker/M\nsteelwork/ZSMR\nsteelyard/MS\nsteely/TPRS\nSteen/M\nsteepen/GD\nsteeper/M\nsteeplebush/M\nsteeplechase/GMSD\nsteeplejack/MS\nsteeple/MS\nsteepness/S\nsteep/SYRNDPGTX\nsteerage/MS\nsteerer/M\nsteer/SGBRDJ\nsteersman/M\nsteersmen\nsteeves\nStefa/M\nStefania/M\nStefanie/M\nStefan/M\nStefano/M\nSteffane/M\nSteffen/M\nSteffie/M\nSteffi/M\nstegosauri\nstegosaurus/S\nSteinbeck/SM\nSteinberg/M\nSteinem/M\nSteiner/M\nSteinmetz/M\nStein/RM\nstein/SGZMRD\nSteinway/M\nStella/M\nstellar\nstellated\nSte/M\nstemless\nstemmed/U\nstemming\nstem/MS\nstemware/MS\nstench/GMDS\nstenciler/M\nstencil/GDRMSZ\nstencillings\nStendhal/M\nStendler/M\nStengel/M\nstenographer/SM\nstenographic\nstenography/SM\nsteno/SM\nstenotype/M\nstentorian\nstepbrother/MS\nstepchild/M\nstepchildren\nstepdaughter/MS\nstepfather/SM\nStepha/M\nStephana/M\nStephanie/M\nStephani/M\nStephan/M\nStephannie/M\nStephanus/M\nStephenie/M\nStephen/MS\nStephenson/M\nStephie/M\nStephi/M\nStephine/M\nstepladder/SM\nstep/MIS\nstepmother/SM\nstepparent/SM\nstepper/M\nsteppe/RSDGMZ\nsteppingstone/S\nstepsister/SM\nstepson/SM\nstepwise\nstereographic\nstereography/M\nstereo/GSDM\nstereophonic\nstereoscope/MS\nstereoscopic\nstereoscopically\nstereoscopy/M\nstereotype/GMZDRS\nstereotypic\nstereotypical/Y\nsterile\nsterility/SM\nsterilization/SM\nsterilized/U\nsterilize/RSDGZ\nsterilizes/A\nSterling/M\nsterling/MPYS\nsterlingness/M\nsternal\nSternberg/M\nSterne/M\nStern/M\nsternness/S\nSterno\nstern/SYRDPGT\nsternum/SM\nsteroidal\nsteroid/MS\nstertorous\nStesha/M\nstethoscope/SM\nstet/MS\nstetson/MS\nStetson/SM\nstetted\nstetting\nSteuben/M\nStevana/M\nstevedore/GMSD\nSteve/M\nStevena/M\nSteven/MS\nStevenson/M\nStevie/M\nStevy/M\nsteward/DMSG\nstewardess/SM\nSteward/M\nstewardship/MS\nStewart/M\nstew/GDMS\nst/GBJ\nsticker/M\nstickily\nstickiness/SM\nstickleback/MS\nstickle/GZDR\nstickler/M\nstick/MRDSGZ\nstickpin/SM\nstickup/SM\nsticky/GPTDRS\nStieglitz/M\nstiffen/JZRDG\nstiff/GTXPSYRND\nstiffness/MS\nstifle/GJRSD\nstifler/M\nstifling/Y\nstigma/MS\nstigmata\nstigmatic/S\nstigmatization/C\nstigmatizations\nstigmatization\'s\nstigmatize/DSG\nstigmatized/U\nstile/GMDS\nstiletto/MDSG\nstillbirth/M\nstillbirths\nstillborn/S\nstiller/MI\nstillest\nStillman/M\nStillmann/M\nstillness/MS\nstill/RDIGS\nStillwell/M\nstilted/PY\nstilt/GDMS\nStilton/MS\nStimson/M\nstimulant/MS\nstimulated/U\nstimulate/SDVGNX\nstimulation/M\nstimulative/S\nstimulator/M\nstimulatory\nstimuli/M\nstimulus/MS\nStine/M\nstinger/M\nsting/GZR\nstingily\nstinginess/MS\nstinging/Y\nstingray/MS\nstingy/RTP\nstinkbug/S\nstinker/M\nstink/GZRJS\nstinking/Y\nstinkpot/M\nStinky/M\nstinky/RT\nstinter/M\nstinting/U\nstint/JGRDMS\nstipendiary\nstipend/MS\nstipple/JDRSG\nstippler/M\nstipulate/XNGSD\nstipulation/M\nStirling/M\nstirred/U\nstirrer/SM\nstirring/YS\nstirrup/SM\nstir/S\nstitch/ASDG\nstitcher/M\nstitchery/S\nstitching/MS\nstitch\'s\nSt/M\nstoat/SM\nstochastic\nstochastically\nstochasticity\nstockade/SDMG\nstockbreeder/SM\nstockbroker/MS\nstockbroking/S\nstocker/SM\nStockhausen/M\nstockholder/SM\nStockholm/M\nstockily\nstockiness/SM\nstockinet\'s\nstockinette/S\nstocking/MDS\nstockist/MS\nstockpile/GRSD\nstockpiler/M\nstockpot/MS\nstockroom/MS\nstock\'s\nstock/SGAD\nstocktaking/MS\nStockton/M\nstockyard/SM\nstocky/PRT\nStoddard/M\nstodge/M\nstodgily\nstodginess/S\nstodgy/TRP\nstogy/SM\nstoical/Y\nstoichiometric\nstoichiometry/M\nstoicism/SM\nStoicism/SM\nstoic/MS\nStoic/MS\nstoke/DSRGZ\nstoker/M\nstokes/M\nStokes/M\nSTOL\nstole/MDS\nstolen\nstolidity/S\nstolidness/S\nstolid/PTYR\nstolon/SM\nstomachache/MS\nstomacher/M\nstomach/RSDMZG\nstomachs\nstomp/DSG\nstonecutter/SM\nstone/DSRGM\nStonehenge/M\nstoneless\nStone/M\nstonemason/MS\nstoner/M\nstonewall/GDS\nstoneware/MS\nstonewashed\nstonework/SM\nstonewort/M\nstonily\nstoniness/MS\nstony/TPR\nstood\nstooge/SDGM\nstool/SDMG\nstoop/SDG\nstopcock/MS\nstopgap/SM\nstoplight/SM\nstopover/MS\nstoppable/U\nstoppage/MS\nStoppard/M\nstopped/U\nstopper/GMDS\nstopping/M\nstopple/GDSM\nstop\'s\nstops/M\nstop/US\nstopwatch/SM\nstorage/SM\nstore/ADSRG\nstorefront/SM\nstorehouse/MS\nstorekeeper/M\nstorekeep/ZR\nstoreroom/SM\nstore\'s\nstork/SM\nstormbound\nstormer/M\nStormie/M\nstormily\nStormi/M\nstorminess/S\nStorm/M\nstorm/SRDMGZ\nstormtroopers\nStormy/M\nstormy/PTR\nstoryboard/MDSG\nstorybook/MS\nstory/GSDM\nstoryline\nstoryteller/SM\nstorytelling/MS\nStouffer/M\nstoup/SM\nstouten/DG\nstouthearted\nStout/M\nstoutness/MS\nstout/STYRNP\nstove/DSRGM\nstovepipe/SM\nstover/M\nstowage/SM\nstowaway/MS\nStowe/M\nstow/GDS\nStrabo/M\nstraddler/M\nstraddle/ZDRSG\nStradivari/SM\nStradivarius/M\nstrafe/GRSD\nstrafer/M\nstraggle/GDRSZ\nstraggly/RT\nstraightaway/S\nstraightedge/MS\nstraightener/M\nstraighten/ZGDR\nstraightforwardness/MS\nstraightforward/SYP\nstraightjacket\'s\nstraightness/MS\nstraight/RNDYSTXGP\nstraightway/S\nstrain/ASGZDR\nstrained/UF\nstrainer/MA\nstraining/F\nstrains/F\nstraiten/DG\nstraitjacket/GDMS\nstraitlaced\nstraitness/M\nstrait/XTPSMGYDNR\nstranded/P\nstrand/SDRG\nstrangeness/SM\nstrange/PYZTR\nstranger/GMD\nstranglehold/MS\nstrangle/JDRSZG\nstrangles/M\nstrangulate/NGSDX\nstrangulation/M\nstrapless/S\nstrapped/U\nstrapping/S\nstrap\'s\nstrap/US\nStrasbourg/M\nstratagem/SM\nstrata/MS\nstrategical/Y\nstrategic/S\nstrategics/M\nstrategist/SM\nstrategy/SM\nStratford/M\nstrati\nstratification/M\nstratified/U\nstratify/NSDGX\nstratigraphic\nstratigraphical\nstratigraphy/M\nstratosphere/SM\nstratospheric\nstratospherically\nstratum/M\nstratus/M\nStrauss\nStravinsky/M\nstrawberry/SM\nstrawflower/SM\nstraw/SMDG\nstrayer/M\nstray/GSRDM\nstreak/DRMSGZ\nstreaker/M\nstreaky/TR\nstreamed/U\nstreamer/M\nstream/GZSMDR\nstreaming/M\nstreamline/SRDGM\nstreetcar/MS\nstreetlight/SM\nstreet/SMZ\nstreetwalker/MS\nstreetwise\nStreisand/M\nstrengthen/AGDS\nstrengthener/MS\nstrength/NMX\nstrengths\nstrenuousness/SM\nstrenuous/PY\nstrep/MS\nstreptococcal\nstreptococci\nstreptococcus/M\nstreptomycin/SM\nstress/DSMG\nstressed/U\nstressful/YP\nstretchability/M\nstretchable/U\nstretch/BDRSZG\nstretcher/DMG\nstretchy/TRP\nstrew/GDHS\nstrewn\nstriae\nstria/M\nstriate/DSXGN\nstriated/U\nstriation/M\nstricken\nStrickland/M\nstrict/AF\nstricter\nstrictest\nstrictly\nstrictness/S\nstricture/SM\nstridden\nstridency/S\nstrident/Y\nstrider/M\nstride/RSGM\nstrife/SM\nstrikebreaker/M\nstrikebreaking/M\nstrikebreak/ZGR\nstrikeout/S\nstriker/M\nstrike/RSGZJ\nstriking/Y\nStrindberg/M\nstringed\nstringency/S\nstringent/Y\nstringer/MS\nstringiness/SM\nstringing/M\nstring\'s\nstring/SAG\nstringy/RTP\nstriper/M\nstripe/SM\nstrip/GRDMS\nstripling/M\nstripped/U\nstripper/MS\nstripping\nstripteaser/M\nstriptease/SRDGZM\nstripy/RT\nstrive/JRSG\nstriven\nstriver/M\nstrobe/SDGM\nstroboscope/SM\nstroboscopic\nstrode\nstroke/ZRSDGM\nstroking/M\nstroller/M\nstroll/GZSDR\nStromberg/M\nStromboli/M\nStrom/M\nstrongbow\nstrongbox/MS\nStrongheart/M\nstronghold/SM\nstrongish\nStrong/M\nstrongman/M\nstrongmen\nstrongroom/MS\nstrong/YRT\nstrontium/SM\nstrophe/MS\nstrophic\nstropped\nstropping\nstrop/SM\nstrove\nstruck\nstructuralism/M\nstructuralist/SM\nstructural/Y\nstructured/AU\nstructureless\nstructures/A\nstructure/SRDMG\nstructuring/A\nstrudel/MS\nstruggle/GDRS\nstruggler/M\nstrummed\nstrumming\nstrumpet/GSDM\nstrum/S\nstrung/UA\nstrut/S\nstrutted\nstrutter/M\nstrutting\nstrychnine/MS\nStuart/MS\nstubbed/M\nstubbing\nStubblefield/MS\nstubble/SM\nstubbly/RT\nstubbornness/SM\nstubborn/SGTYRDP\nstubby/SRT\nstub/MS\nstuccoes\nstucco/GDM\nstuck/U\nstudbook/SM\nstudded\nstudding/SM\nStudebaker/M\nstudentship/MS\nstudent/SM\nstudiedness/M\nstudied/PY\nstudier/SM\nstudio/MS\nstudiousness/SM\nstudious/PY\nstud/MS\nstudy/AGDS\nstuffily\nstuffiness/SM\nstuffing/M\nstuff/JGSRD\nstuffy/TRP\nstultify/NXGSD\nStu/M\nstumble/GZDSR\nstumbling/Y\nstumpage/M\nstumper/M\nstump/RDMSG\nstumpy/RT\nstung\nstunk\nstunned\nstunner/M\nstunning/Y\nstun/S\nstunted/P\nstunt/GSDM\nstupefaction/SM\nstupefy/DSG\nstupendousness/M\nstupendous/PY\nstupidity/SM\nstupidness/M\nstupid/PTYRS\nstupor/MS\nsturdily\nsturdiness/SM\nsturdy/SRPT\nsturgeon/SM\nSturm/M\nstutter/DRSZG\nStuttgart/M\nStuyvesant/M\nsty/DSGM\nStygian\nstyled/A\nstyle/GZMDSR\nstyles/A\nstyli\nstyling/A\nstylishness/S\nstylish/PY\nstylistically\nstylistic/S\nstylist/MS\nstylites\nstylization/MS\nstylize/DSG\nstylos\nstylus/SM\nstymieing\nstymie/SD\nstymy\'s\nstyptic/S\nstyrene/MS\nStyrofoam/S\nStyx/M\nsuable\nSuarez/M\nsuasion/EMS\nsuaveness/S\nsuave/PRYT\nsuavity/SM\nsubaltern/SM\nsubarctic/S\nsubareas\nSubaru/M\nsubassembly/M\nsubatomic/S\nsubbasement/SM\nsubbed\nsubbing\nsubbranch/S\nsubcaste/M\nsubcategorizing\nsubcategory/SM\nsubchain\nsubclassifications\nsubclass/MS\nsubclauses\nsubcommand/S\nsubcommittee/SM\nsubcompact/S\nsubcomponent/MS\nsubcomputation/MS\nsubconcept\nsubconsciousness/SM\nsubconscious/PSY\nsubconstituent\nsubcontinental\nsubcontinent/MS\nsubcontractor/SM\nsubcontract/SMDG\nsubcultural\nsubculture/GMDS\nsubcutaneous/Y\nsubdirectory/S\nsubdistrict/M\nsubdivide/SRDG\nsubdivision/SM\nsubdued/Y\nsubdue/GRSD\nsubduer/M\nsubexpression/MS\nsubfamily/SM\nsubfield/MS\nsubfile/SM\nsubfreezing\nsubgoal/SM\nsubgraph\nsubgraphs\nsubgroup/SGM\nsubharmonic/S\nsubheading/M\nsubhead/MGJS\nsubhuman/S\nsubindex/M\nsubinterval/MS\nsubj\nsubject/GVDMS\nsubjection/SM\nsubjectiveness/M\nsubjective/PSY\nsubjectivist/S\nsubjectivity/SM\nsubjoin/DSG\nsubjugate/NGXSD\nsubjugation/M\nsubjunctive/S\nsublayer\nsublease/DSMG\nsublet/S\nsubletting\nsublimate/GNSDX\nsublimation/M\nsublime/GRSDTYP\nsublimeness/M\nsublimer/M\nsubliminal/Y\nsublimity/SM\nsublist/SM\nsubliterary\nsublunary\nsubmachine\nsubmarginal\nsubmarine/MZGSRD\nsubmariner/M\nsubmerge/DSG\nsubmergence/SM\nsubmerse/XNGDS\nsubmersible/S\nsubmersion/M\nsubmicroscopic\nsubmission/SAM\nsubmissiveness/MS\nsubmissive/PY\nsubmit/SA\nsubmittable\nsubmittal\nsubmitted/A\nsubmitter/S\nsubmitting/A\nsubmode/S\nsubmodule/MS\nsub/MS\nsubnational\nsubnet/SM\nsubnetwork/SM\nsubnormal/SY\nsuboptimal\nsuborbital\nsuborder/MS\nsubordinately/I\nsubordinates/I\nsubordinate/YVNGXPSD\nsubordination/IMS\nsubordinator\nsubornation/SM\nsuborn/GSD\nsubpage\nsubparagraph/M\nsubpart/MS\nsubplot/MS\nsubpoena/GSDM\nsubpopulation/MS\nsubproblem/SM\nsubprocess/SM\nsubprofessional/S\nsubprogram/SM\nsubproject\nsubproof/SM\nsubquestion/MS\nsubrange/SM\nsubregional/Y\nsubregion/MS\nsubrogation/M\nsubroutine/SM\nsubsample/MS\nsubschema/MS\nsubscribe/ASDG\nsubscriber/SM\nsubscripted/U\nsubscription/MS\nsubscript/SGD\nsubsection/SM\nsubsegment/SM\nsubsentence\nsubsequence/MS\nsubsequent/SYP\nsubservience/SM\nsubservient/SY\nsubset/MS\nsubsidence/MS\nsubside/SDG\nsubsidiarity\nsubsidiary/MS\nsubsidization/MS\nsubsidized/U\nsubsidizer/M\nsubsidize/ZRSDG\nsubsidy/MS\nsubsistence/MS\nsubsistent\nsubsist/SGD\nsubsocietal\nsubsoil/DRMSG\nsubsonic\nsubspace/MS\nsubspecies/M\nsubstance/MS\nsubstandard\nsubstantially/IU\nsubstantialness/M\nsubstantial/PYS\nsubstantiated/U\nsubstantiate/VGNSDX\nsubstantiation/MFS\nsubstantiveness/M\nsubstantive/PSYM\nsubstantivity\nsubstation/MS\nsubsterilization\nsubstitutability\nsubstituted/U\nsubstitute/NGVBXDRS\nsubstitutionary\nsubstitution/M\nsubstitutive/Y\nsubstrata\nsubstrate/MS\nsubstratum/M\nsubstring/S\nsubstructure/SM\nsubsume/SDG\nsubsurface/S\nsubsystem/MS\nsubtable/S\nsubtask/SM\nsubteen/SM\nsubtenancy/MS\nsubtenant/SM\nsubtend/DS\nsubterfuge/SM\nsubterranean/SY\nsubtest\nsubtext/SM\nsubtitle/DSMG\nsubtleness/M\nsubtle/RPT\nsubtlety/MS\nsubtly/U\nsubtopic/SM\nsubtotal/GSDM\nsubtracter/M\nsubtraction/MS\nsubtract/SRDZVG\nsubtrahend/SM\nsubtree/SM\nsubtropical\nsubtropic/S\nsubtype/MS\nsubunit/SM\nsuburbanite/MS\nsuburbanization/MS\nsuburbanized\nsuburbanizing\nsuburban/S\nsuburbia/SM\nsuburb/MS\nsubvention/MS\nsubversion/SM\nsubversiveness/MS\nsubversive/SPY\nsubverter/M\nsubvert/SGDR\nsubway/MDGS\nsubzero\nsucceeder/M\nsucceed/GDRS\nsuccessfulness/M\nsuccessful/UY\nsuccession/SM\nsuccessiveness/M\nsuccessive/YP\nsuccess/MSV\nsuccessor/MS\nsuccessorship\nsuccinctness/SM\nsuccinct/RYPT\nsuccored/U\nsuccorer/M\nsuccor/SGZRDM\nsuccotash/SM\nsuccubus/M\nsucculence/SM\nsucculency/MS\nsucculent/S\nsuccumb/SDG\nsuch\nsuchlike\nsucker/DMG\nsuck/GZSDRB\nsuckle/SDJG\nsuckling/M\nSucre/M\nsucrose/MS\nsuction/SMGD\nSudanese/M\nSudanic/M\nSudan/M\nsuddenness/SM\nsudden/YPS\nSudetenland/M\nsud/S\nsuds/DSRG\nsudsy/TR\nsued/DG\nsuede/SM\nSuellen/M\nSue/M\nsuer/M\nsuet/MS\nSuetonius/M\nsuety\nsue/ZGDRS\nSuez/M\nsufferance/SM\nsufferer/M\nsuffering/M\nsuffer/SJRDGZ\nsuffice/GRSD\nsufficiency/SIM\nsufficient/IY\nsuffixation/S\nsuffixed/U\nsuffix/GMRSD\nsuffocate/XSDVGN\nsuffocating/Y\nSuffolk/M\nsuffragan/S\nsuffrage/MS\nsuffragette/MS\nsuffragist/SM\nsuffuse/VNGSDX\nsuffusion/M\nSufi/M\nSufism/M\nsugarcane/S\nsugarcoat/GDS\nsugarless\nsugarplum/MS\nsugar/SJGMD\nsugary/TR\nsuggest/DRZGVS\nsuggester/M\nsuggestibility/SM\nsuggestible\nsuggestion/MS\nsuggestiveness/MS\nsuggestive/PY\nsugillate\nSuharto/M\nsuicidal/Y\nsuicide/GSDM\nSui/M\nsuitability/SU\nsuitableness/S\nsuitable/P\nsuitably/U\nsuitcase/MS\nsuited/U\nsuite/SM\nsuiting/M\nsuit/MDGZBJS\nsuitor/SM\nSukarno/M\nSukey/M\nSuki/M\nsukiyaki/SM\nSukkoth\'s\nSukkot/S\nSula/M\nSulawesi/M\nSuleiman/M\nsulfaquinoxaline\nsulfa/S\nsulfate/MSDG\nsulfide/S\nsulfite/M\nsulfonamide/SM\nsulfur/DMSG\nsulfuric\nsulfurousness/M\nsulfurous/YP\nsulk/GDS\nsulkily\nsulkiness/S\nsulky/RSPT\nSulla/M\nsullenness/MS\nsullen/TYRP\nsullied/U\nSullivan/M\nsully/GSD\nSully/M\nsulphate/SM\nsulphide/MS\nsulphuric\nsultana/SM\nsultanate/MS\nsultan/SM\nsultrily\nsultriness/SM\nsultry/PRT\nSulzberger/M\nsumach\'s\nsumac/SM\nSumatra/M\nSumatran/S\nsumer/F\nSumeria/M\nSumerian/M\nsummability/M\nsummable\nsummand/MS\nsummarily\nsummarization/MS\nsummarized/U\nsummarize/GSRDZ\nsummarizer/M\nsummary/MS\nsummation/FMS\nsummed\nSummerdale/M\nsummerhouse/MS\nsummer/SGDM\nSummer/SM\nsummertime/MS\nsummery/TR\nsumming\nsummit/GMDS\nsummitry/MS\nsummoner/M\nsummon/JSRDGZ\nsummons/MSDG\nsum/MRS\nSumner/M\nsumo/SM\nsump/SM\nsumptuousness/SM\nsumptuous/PY\nSumter/M\nSun\nsunbaked\nsunbathe\nsunbather/M\nsunbathing/M\nsunbaths\nsunbath/ZRSDG\nsunbeam/MS\nSunbelt/M\nsunblock/S\nsunbonnet/MS\nsunburn/GSMD\nsunburst/MS\nsuncream\nsundae/MS\nSundanese/M\nSundas\nSunday/MS\nsunder/SDG\nsundial/MS\nsundowner/M\nsundown/MRDSZG\nsundris\nsundry/S\nsunfish/SM\nsunflower/MS\nsunglass/MS\nSung/M\nsung/U\nsunk/SN\nsunlamp/S\nsunless\nsunlight/MS\nsunlit\nsun/MS\nsunned\nSunni/MS\nsunniness/SM\nsunning\nSunnite/SM\nSunny/M\nsunny/RSTP\nSunnyvale/M\nsunrise/GMS\nsunroof/S\nsunscreen/S\nsunset/MS\nsunsetting\nsunshade/MS\nSunshine/M\nsunshine/MS\nsunshiny\nsunspot/SM\nsunstroke/MS\nsuntanned\nsuntanning\nsuntan/SM\nsunup/MS\nsuperabundance/MS\nsuperabundant\nsuperannuate/GNXSD\nsuperannuation/M\nsuperbness/M\nsuperb/YRPT\nsupercargoes\nsupercargo/M\nsupercharger/M\nsupercharge/SRDZG\nsuperciliousness/SM\nsupercilious/PY\nsupercity/S\nsuperclass/M\nsupercomputer/MS\nsupercomputing\nsuperconcept\nsuperconducting\nsuperconductivity/SM\nsuperconductor/SM\nsupercooled\nsupercooling\nsupercritical\nsuperdense\nsuper/DG\nsuperego/SM\nsupererogation/MS\nsupererogatory\nsuperficiality/S\nsuperficial/SPY\nsuperfine\nsuperfix/M\nsuperfluity/MS\nsuperfluousness/S\nsuperfluous/YP\nsuperheat/D\nsuperheroes\nsuperhero/SM\nsuperhighway/MS\nsuperhumanness/M\nsuperhuman/YP\nsuperimpose/SDG\nsuperimposition/MS\nsuperintendence/S\nsuperintendency/SM\nsuperintendent/SM\nsuperintend/GSD\nsuperiority/MS\nSuperior/M\nsuperior/SMY\nsuperlativeness/M\nsuperlative/PYS\nsuperlunary\nsupermachine\nsuperman/M\nSuperman/M\nsupermarket/SM\nsupermen\nsupermodel\nsupermom/S\nsupernal\nsupernatant\nsupernaturalism/M\nsupernaturalness/M\nsupernatural/SPY\nsupernormal/Y\nsupernovae\nsupernova/MS\nsupernumerary/S\nsuperordinate\nsuperpose/BSDG\nsuperposition/MS\nsuperpower/MS\nsuperpredicate\nsupersaturate/XNGDS\nsupersaturation/M\nsuperscribe/GSD\nsuperscript/DGS\nsuperscription/SM\nsuperseder/M\nsupersede/SRDG\nsupersensitiveness/M\nsupersensitive/P\nsuperset/MS\nsupersonically\nsupersonic/S\nsupersonics/M\nsuperstar/SM\nsuperstition/SM\nsuperstitious/YP\nsuperstore/S\nsuperstructural\nsuperstructure/SM\nsupertanker/SM\nsupertitle/MSDG\nsuperuser/MS\nsupervene/GSD\nsupervention/S\nsupervised/U\nsupervise/SDGNX\nsupervision/M\nsupervisor/SM\nsupervisory\nsuperwoman/M\nsuperwomen\nsupineness/M\nsupine/PSY\nsupper/DMG\nsupplanter/M\nsupplant/SGRD\nsupplemental/S\nsupplementary/S\nsupplementation/S\nsupplementer/M\nsupplement/SMDRG\nsuppleness/SM\nsupple/SPLY\nsuppliant/S\nsupplicant/MS\nsupplicate/NGXSD\nsupplication/M\nsupplier/AM\nsuppl/RDGT\nsupply/MAZGSRD\nsupportability/M\nsupportable/UI\nsupported/U\nsupporter/M\nsupporting/Y\nsupportive/Y\nsupport/ZGVSBDR\nsupposed/Y\nsuppose/SRDBJG\nsupposition/MS\nsuppository/MS\nsuppressant/S\nsuppressed/U\nsuppressible/I\nsuppression/SM\nsuppressive/P\nsuppressor/S\nsuppress/VGSD\nsuppurate/NGXSD\nsuppuration/M\nsupp/YDRGZ\nsupra\nsupranational\nsupranationalism/M\nsuprasegmental\nsupremacist/SM\nsupremacy/SM\nsupremal\nsupremeness/M\nsupreme/PSRTY\nsupremo/M\nsup/RSZ\nsupt\nSupt/M\nSurabaya/M\nSurat/M\nsurcease/DSMG\nsurcharge/MGSD\nsurcingle/MGSD\nsurd/M\nsured/I\nsurefire\nsurefooted\nsurely\nsureness/MS\nsureness\'s/U\nsure/PU\nsurer/I\nsurest\nsurety/SM\nsurfaced/UA\nsurface/GSRDPZM\nsurfacer/AMS\nsurfaces/A\nsurfacing/A\nsurfactant/SM\nsurfboard/MDSG\nsurfeit/SDRMG\nsurfer/M\nsurfing/M\nsurf/SJDRGMZ\nsurged/A\nsurge/GYMDS\nsurgeon/MS\nsurgery/MS\nsurges/A\nsurgical/Y\nSuriname\nSurinamese\nSurinam\'s\nsurliness/SM\nsurly/TPR\nsurmiser/M\nsurmise/SRDG\nsurmountable/IU\nsurmount/DBSG\nsurname/GSDM\nsurpassed/U\nsurpass/GDS\nsurpassing/Y\nsurplice/SM\nsurplus/MS\nsurplussed\nsurplussing\nsurprised/U\nsurprise/MGDRSJ\nsurpriser/M\nsurprising/YU\nsurrealism/MS\nsurrealistic\nsurrealistically\nsurrealist/S\nsurreality\nsurreal/S\nsurrender/DRSG\nsurrenderer/M\nsurreptitiousness/S\nsurreptitious/PY\nsurrey/SM\nsurrogacy/S\nsurrogate/SDMNG\nsurrogation/M\nsurrounding/M\nsurround/JGSD\nsurtax/SDGM\nsurveillance/SM\nsurveillant\nsurveyed/A\nsurveying/M\nsurvey/JDSG\nsurveyor/MS\nsurveys/A\nsurvivability/M\nsurvivable/U\nsurvivalist/S\nsurvival/MS\nsurvive/SRDBG\nsurvivor/MS\nsurvivorship/M\nSurya/M\nSus\nSusana/M\nSusanetta/M\nSusan/M\nSusannah/M\nSusanna/M\nSusanne/M\nSusann/M\nsusceptibilities\nsusceptibility/IM\nsusceptible/I\nSusette/M\nsushi/SM\nSusie/M\nSusi/M\nsuspected/U\nsuspecter/M\nsuspect/GSDR\nsuspecting/U\nsuspend/DRZGS\nsuspended/UA\nsuspender/M\nsuspenseful\nsuspense/MXNVS\nsuspension/AM\nsuspensive/Y\nsuspensor/M\nsuspicion/GSMD\nsuspiciousness/M\nsuspicious/YP\nSusquehanna/M\nSussex/M\nsustainability\nsustainable/U\nsustain/DRGLBS\nsustainer/M\nsustainment/M\nsustenance/MS\nSusy/M\nSutherland/M\nSutherlan/M\nsutler/MS\nSutton/M\nsuture/GMSD\nSUV\nSuva/M\nSuwanee/M\nSuzanna/M\nSuzanne/M\nSuzann/M\nsuzerain/SM\nsuzerainty/MS\nSuzette/M\nSuzhou/M\nSuzie/M\nSuzi/M\nSuzuki/M\nSuzy/M\nSvalbard/M\nsvelte/RPTY\nSvend/M\nSvengali\nSven/M\nSverdlovsk/M\nSvetlana/M\nSW\nswabbed\nswabbing\nswabby/S\nSwabian/SM\nswab/MS\nswaddle/SDG\nswagged\nswagger/GSDR\nswagging\nswag/GMS\nSwahili/MS\nswain/SM\nSWAK\nswallower/M\nswallow/GDRS\nswallowtail/SM\nswam\nswami/SM\nswamper/M\nswampland/MS\nswamp/SRDMG\nswampy/RPT\nSwanee/M\nswankily\nswankiness/MS\nswank/RDSGT\nswanky/PTRS\nswanlike\nswan/MS\nswanned\nswanning\nSwansea/M\nSwanson/M\nswappable/U\nswapped\nswapper/SM\nswapping\nswap/S\nsward/MSGD\nswarmer/M\nswarm/GSRDM\nswarthiness/M\nSwarthmore/M\nswarthy/RTP\nswart/P\nSwartz/M\nswashbuckler/SM\nswashbuckling/S\nswash/GSRD\nswastika/SM\nSWAT\nswatch/MS\nswathe\nswather/M\nswaths\nswath/SRDMGJ\nswat/S\nswatted\nswatter/MDSG\nswatting\nswayback/SD\nsway/DRGS\nswayer/M\nSwaziland/M\nSwazi/SM\nswearer/M\nswear/SGZR\nswearword/SM\nsweatband/MS\nsweater/M\nsweatily\nsweatiness/M\nsweatpants\nsweat/SGZRM\nsweatshirt/S\nsweatshop/MS\nsweaty/TRP\nSwedenborg/M\nSweden/M\nswede/SM\nSwede/SM\nSwedish\nSwed/MN\nSweeney/SM\nsweeper/M\nsweepingness/M\nsweeping/PY\nsweep/SBRJGZ\nsweeps/M\nsweepstakes\nsweepstake\'s\nsweetbread/SM\nsweetbrier/SM\nsweetcorn\nsweetened/U\nsweetener/M\nsweetening/M\nsweeten/ZDRGJ\nsweetheart/MS\nsweetie/MS\nsweeting/M\nsweetish/Y\nSweet/M\nsweetmeat/MS\nsweetness/MS\nsweetshop\nsweet/TXSYRNPG\nswellhead/DS\nswelling/M\nswell/SJRDGT\nswelter/DJGS\nsweltering/Y\nSwen/M\nSwenson/M\nswept\nsweptback\nswerve/GSD\nswerving/U\nswifter/M\nswift/GTYRDPS\nSwift/M\nswiftness/MS\nswigged\nswigging\nswig/SM\nswill/SDG\nswimmer/MS\nswimming/MYS\nswim/S\nswimsuit/MS\nSwinburne/M\nswindle/GZRSD\nswindler/M\nswineherd/MS\nswine/SM\nswingeing\nswinger/M\nswinging/Y\nswing/SGRZJB\nswingy/R\nswinishness/M\nswinish/PY\nSwink/M\nswipe/DSG\nswirling/Y\nswirl/SGRD\nswirly/TR\nswish/GSRD\nswishy/R\nswiss\nSwiss/S\nswitchback/GDMS\nswitchblade/SM\nswitchboard/MS\nswitcher/M\nswitch/GBZMRSDJ\nswitchgear\nswitchman/M\nswitchmen/M\nswitchover/M\nSwitzerland/M\nSwitzer/M\nSwitz/MR\nswivel/GMDS\nswizzle/RDGM\nswob\'s\nswollen\nswoon/GSRD\nswooning/Y\nswoop/RDSG\nswoosh/GSD\nswop\'s\nsword/DMSG\nswordfish/SM\nswordplayer/M\nswordplay/RMS\nswordsman/M\nswordsmanship/SM\nswordsmen\nswordtail/M\nswore\nsworn\nswot/S\nswum\nswung\ns/XJBG\nsybarite/MS\nsybaritic\nSybila/M\nSybilla/M\nSybille/M\nSybil/M\nSybyl/M\nsycamore/SM\nsycophancy/S\nsycophantic\nsycophantically\nsycophant/SYM\nSydelle/M\nSydel/M\nSyd/M\nSydney/M\nSykes/M\nSylas/M\nsyllabicate/GNDSX\nsyllabication/M\nsyllabicity\nsyllabic/S\nsyllabification/M\nsyllabify/GSDXN\nsyllabi\'s\nsyllable/SDMG\nsyllabub/M\nsyllabus/MS\nsyllabusss\nsyllogism/MS\nsyllogistic\nSylow/M\nsylphic\nsylphlike\nsylph/M\nsylphs\nSylvania/M\nSylvan/M\nsylvan/S\nSylvester/M\nSylvia/M\nSylvie/M\nSyman/M\nsymbiont/M\nsymbioses\nsymbiosis/M\nsymbiotic\nsymbol/GMDS\nsymbolical/Y\nsymbolics/M\nsymbolic/SM\nsymbolism/MS\nsymbolist/MS\nsymbolization/MAS\nsymbolized/U\nsymbolize/GZRSD\nsymbolizes/A\nSymington/M\nsymmetric\nsymmetrically/U\nsymmetricalness/M\nsymmetrical/PY\nsymmetrization/M\nsymmetrizing\nsymmetry/MS\nSymon/M\nsympathetically/U\nsympathetic/S\nsympathized/U\nsympathizer/M\nsympathize/SRDJGZ\nsympathizing/MYUS\nsympathy/MS\nsymphonic\nsymphonists\nsymphony/MS\nsymposium/MS\nsymptomatic\nsymptomatically\nsymptomatology/M\nsymptom/MS\nsyn\nsynagogal\nsynagogue/SM\nsynapse/SDGM\nsynaptic\nsynchronism/M\nsynchronization\'s\nsynchronization/SA\nsynchronize/AGCDS\nsynchronized/U\nsynchronizer/MS\nsynchronousness/M\nsynchronous/YP\nsynchrony\nsynchrotron/M\nsyncopate/VNGXSD\nsyncopation/M\nsyncope/MS\nsync/SGD\nsyndicalist\nsyndicate/XSDGNM\nsyndic/SM\nsyndrome/SM\nsynergism/SM\nsynergistic\nsynergy/MS\nsynfuel/S\nSynge/M\nsynod/SM\nsynonymic\nsynonymous/Y\nsynonym/SM\nsynonymy/MS\nsynopses\nsynopsis/M\nsynopsized\nsynopsizes\nsynopsizing\nsynoptic/S\nsyntactical/Y\nsyntactics/M\nsyntactic/SY\nsyntax/MS\nsyntheses\nsynthesis/M\nsynthesized/U\nsynthesize/GZSRD\nsynthesizer/M\nsynthesizes/A\nsynthetically\nsynthetic/S\nsyphilis/MS\nsyphilitic/S\nsyphilized\nsyphilizing\nSyracuse/M\nSyriac/M\nSyria/M\nSyrian/SM\nsyringe/GMSD\nsyrup/DMSG\nsyrupy\nsys\nsystematical/Y\nsystematics/M\nsystematic/SP\nsystematization/SM\nsystematized/U\nsystematizer/M\nsystematize/ZDRSG\nsystematizing/U\nsystemically\nsystemic/S\nsystemization/SM\nsystem/MS\nsystole/MS\nsystolic\nSzilard/M\nSzymborska/M\nTA\nTabasco/MS\nTabatha/M\nTabbatha/M\ntabbed\nTabbie/M\nTabbi/M\ntabbing\nTabbitha/M\nTabb/M\ntabbouleh\ntabboulehs\ntabby/GSD\nTabby/M\nTaber/M\nTabernacle/S\ntabernacle/SDGM\nTabina/M\nTabitha/M\ntabla/MS\ntableau/M\ntableaux\ntablecloth/M\ntablecloths\ntable/GMSD\ntableland/SM\ntablespoonful/MS\ntablespoon/SM\ntablet/MDGS\ntabletop/MS\ntableware/SM\ntabling/M\ntabloid/MS\nTab/MR\ntaboo/GSMD\nTabor/M\ntabor/MDGS\nTabriz/SM\ntab/SM\ntabula\ntabular/Y\ntabulate/XNGDS\ntabulation/M\ntabulator/MS\ntachometer/SM\ntachometry\ntachycardia/MS\ntachyon/SM\ntacitness/MS\ntaciturnity/MS\ntaciturn/Y\nTacitus/M\ntacit/YP\ntacker/M\ntack/GZRDMS\ntackiness/MS\ntackler/M\ntackle/RSDMZG\ntackling/M\ntacky/RSTP\nTacoma/M\ntaco/MS\ntact/FSM\ntactfulness/S\ntactful/YP\ntactical/Y\ntactician/MS\ntactic/SM\ntactile/Y\ntactility/S\ntactlessness/SM\ntactless/PY\ntactual/Y\nTaddeo/M\nTaddeusz/M\nTadd/M\nTadeas/M\nTadeo/M\nTades\nTadio/M\nTad/M\ntadpole/MS\ntad/SM\nTadzhikistan\'s\nTadzhikstan/M\nTaegu/M\nTaejon/M\ntaffeta/MS\ntaffrail/SM\nTaffy/M\ntaffy/SM\nTaft/M\nTagalog/SM\ntagged/U\ntagger/S\ntagging\nTagore/M\ntag/SM\nTagus/M\nTahitian/S\nTahiti/M\nTahoe/M\nTaichung/M\ntaiga/MS\ntailback/MS\ntail/CMRDGAS\ntailcoat/S\ntailer/AM\ntailgate/MGRSD\ntailgater/M\ntailing/MS\ntaillessness/M\ntailless/P\ntaillight/MS\ntailor/DMJSGB\nTailor/M\ntailpipe/SM\ntailspin/MS\ntailwind/SM\nTainan/M\nTaine/M\ntaint/DGS\ntainted/U\nTaipei/M\nTaite/M\nTait/M\nTaiwanese\nTaiwan/M\nTaiyuan/M\nTajikistan\ntakeaway/S\ntaken/A\ntakeoff/SM\ntakeout/S\ntakeover/SM\ntaker/M\ntake/RSHZGJ\ntakes/IA\ntaking/IA\nTaklamakan/M\nTalbert/M\nTalbot/M\ntalcked\ntalcking\ntalc/SM\ntalcum/S\ntalebearer/SM\ntalented/M\ntalentless\ntalent/SMD\ntaler/M\ntale/RSMN\ntali\nTalia/M\nTaliesin/M\ntalion/M\ntalismanic\ntalisman/SM\ntalkativeness/MS\ntalkative/YP\ntalker/M\ntalk/GZSRD\ntalkie/M\ntalky/RST\nTalladega/M\nTallahassee/M\nTallahatchie/M\nTallahoosa/M\ntallboy/MS\nTallchief/M\nTalley/M\nTalleyrand/M\nTallia/M\nTallie/M\nTallinn/M\ntallish\ntallness/MS\nTallou/M\ntallow/DMSG\ntallowy\ntall/TPR\nTallulah/M\ntally/GRSDZ\ntallyho/DMSG\nTally/M\nTalmudic\nTalmudist/MS\nTalmud/MS\ntalon/SMD\ntalus/MS\nTalyah/M\nTalya/M\nTa/M\ntamable/M\ntamale/SM\ntamarack/SM\nTamarah/M\nTamara/M\ntamarind/MS\nTamar/M\nTamarra/M\nTamas\ntambourine/MS\ntamed/U\nTameka/M\ntameness/S\nTamera/M\nTamerlane/M\ntame/SYP\nTamika/M\nTamiko/M\nTamil/MS\nTami/M\nTam/M\nTamma/M\nTammany/M\nTammara/M\ntam/MDRSTZGB\nTammie/M\nTammi/M\nTammy/M\nTampa/M\nTampax/M\ntampered/U\ntamperer/M\ntamper/ZGRD\ntampon/DMSG\ntamp/SGZRD\nTamqrah/M\nTamra/M\ntanager/MS\nTanaka/M\nTana/M\nTananarive/M\ntanbark/SM\nTancred/M\ntandem/SM\nTandie/M\nTandi/M\ntandoori/S\nTandy/M\nTaney/M\nT\'ang\nTanganyika/M\ntangelo/SM\ntangency/M\ntangential/Y\ntangent/SM\ntangerine/MS\ntang/GSYDM\ntangibility/MIS\ntangible/IPS\ntangibleness\'s/I\ntangibleness/SM\ntangibly/I\nTangier/M\ntangle\'s\ntangle/UDSG\ntango/MDSG\nTangshan/M\ntangy/RST\nTanhya/M\nTania/M\nTani/M\nTanisha/M\nTanitansy/M\ntankard/MS\ntanker/M\ntankful/MS\ntank/GZSRDM\nTan/M\ntan/MS\ntanned/U\nTannenbaum/M\nTanner/M\ntanner/SM\ntannery/MS\ntannest\nTanney/M\nTannh�user/M\nTannie/M\ntanning/SM\ntannin/SM\nTann/RM\nTanny/M\nTansy/M\ntansy/SM\ntantalization/SM\ntantalized/U\ntantalize/GZSRD\ntantalizingly/S\ntantalizingness/S\ntantalizing/YP\ntantalum/MS\nTantalus/M\ntantamount\ntantra/S\ntantrum/SM\nTanya/M\nTanzania/M\nTanzanian/S\ntaoism\nTaoism/MS\nTaoist/MS\ntaoist/S\nTao/M\ntao/S\nTapdance/M\ntaped/U\ntapeline/S\ntaperer/M\ntaper/GRD\ntape/SM\ntapestry/GMSD\ntapeworm/MS\ntapioca/MS\ntapir/MS\ntap/MSDRJZG\ntapped/U\ntapper/MS\ntappet/MS\ntapping/M\ntaproom/MS\ntaproot/SM\ntaps/M\nTarah/M\nTara/M\ntarantella/MS\ntarantula/MS\nTarawa/M\nTarazed/M\nTarbell/M\ntardily\ntardiness/S\ntardy/TPRS\ntare/MS\ntarget/GSMD\ntar/GSMD\ntariff/DMSG\nTarim/M\nTarkington/M\ntarmacked\ntarmacking\ntarmac/S\ntarnished/U\ntarnish/GDS\ntarn/MS\ntaro/MS\ntarot/MS\ntarpapered\ntarpaulin/MS\ntarp/MS\ntarpon/MS\ntarragon/SM\nTarrah/M\nTarra/M\nTarrance/M\ntarred/M\ntarring/M\ntarry/TGRSD\nTarrytown/M\ntarsal/S\ntarsi\ntarsus/M\ntartan/MS\ntartaric\nTartar\'s\ntartar/SM\nTartary/M\ntartness/MS\ntart/PMYRDGTS\nTartuffe/M\nTaryn/M\nTarzan/M\nTasha/M\nTashkent/M\nTasia/M\ntask/GSDM\ntaskmaster/SM\ntaskmistress/MS\nTasmania/M\nTasmanian/S\ntassellings\ntassel/MDGS\nTass/M\ntasted/EU\ntastefulness/SME\ntasteful/PEY\ntaste/GZMJSRD\ntastelessness/SM\ntasteless/YP\ntaster/M\ntaste\'s/E\ntastes/E\ntastily\ntastiness/MS\ntasting/E\ntasty/RTP\ntatami/MS\nTatar/SM\nTate/M\ntater/M\nTatiana/M\nTatiania/M\ntat/SRZ\ntatted\ntatterdemalion/SM\ntattered/M\ntatter/GDS\ntatting/SM\ntattler/M\ntattle/RSDZG\ntattletale/SM\ntattooer/M\ntattooist/MS\ntattoo/ZRDMGS\ntatty/R\nTatum/M\ntaught/AU\ntaunter/M\ntaunting/Y\ntaunt/ZGRDS\ntaupe/SM\nTaurus/SM\ntau/SM\ntauten/GD\ntautness/S\ntautological/Y\ntautologous\ntautology/SM\ntaut/PGTXYRDNS\ntaverner/M\ntavern/RMS\ntawdrily\ntawdriness/SM\ntawdry/SRTP\nTawney/M\nTawnya/M\ntawny/RSMPT\nTawsha/M\ntaxable/S\ntaxably\ntaxation/MS\ntaxed/U\ntaxicab/MS\ntaxidermist/SM\ntaxidermy/MS\ntaxi/MDGS\ntaximeter/SM\ntaxing/Y\ntaxiway/MS\ntaxonomic\ntaxonomically\ntaxonomist/SM\ntaxonomy/SM\ntaxpayer/MS\ntaxpaying/M\ntax/ZGJMDRSB\nTaylor/SM\nTb\nTB\nTBA\nTbilisi/M\ntbs\ntbsp\nTchaikovsky/M\nTc/M\nTCP\nTD\nTDD\nTe\nteabag/S\nteacake/MS\nteacart/M\nteachable/P\nteach/AGS\nteacher/MS\nteaching/SM\nteacloth\nteacupful/MS\nteacup/MS\nTeador/M\nteahouse/SM\nteakettle/SM\nteak/SM\nteakwood/M\ntealeaves\nteal/MS\ntea/MDGS\nteammate/MS\nteam/MRDGS\nteamster/MS\nteamwork/SM\nteapot/MS\ntearaway\nteardrop/MS\ntearer/M\ntearfulness/M\ntearful/YP\nteargas/S\nteargassed\nteargassing\ntearjerker/S\ntearoom/MS\ntear/RDMSG\nteary/RT\nTeasdale/M\ntease/KS\nteasel/DGSM\nteaser/M\nteashop/SM\nteasing/Y\nteaspoonful/MS\nteaspoon/MS\nteas/SRDGZ\nteatime/MS\nteat/MDS\ntech/D\ntechnetium/SM\ntechnicality/MS\ntechnicalness/M\ntechnical/YSP\ntechnician/MS\nTechnicolor/MS\nTechnion/M\ntechnique/SM\ntechnocracy/MS\ntechnocratic\ntechnocrat/S\ntechnological/Y\ntechnologist/MS\ntechnology/MS\ntechnophobia\ntechnophobic\ntechs\ntectonically\ntectonic/S\ntectonics/M\nTecumseh/M\nTedda/M\nTeddie/M\nTeddi/M\nTedd/M\nTeddy/M\nteddy/SM\nTedie/M\nTedi/M\ntediousness/SM\ntedious/YP\ntedium/MS\nTed/M\nTedman/M\nTedmund/M\nTedra/M\ntee/DRSMH\nteeing\nteem/GSD\nteemingness/M\nteeming/PY\nteenager/M\nteenage/RZ\nTeena/M\nteen/SR\nteenybopper/SM\nteeny/RT\nteepee\'s\nteeshirt/S\nteeter/GDS\nteethe\nteether/M\nteething/M\nteethmarks\nteeth/RSDJMG\nteetotaler/M\nteetotalism/MS\nteetotal/SRDGZ\nTEFL\nTeflon/MS\nTegucigalpa/M\nTeheran\'s\nTehran\nTEirtza/M\ntektite/SM\nTektronix/M\ntelecast/SRGZ\ntelecommunicate/NX\ntelecommunication/M\ntelecommute/SRDZGJ\ntelecoms\nteleconference/GMJSD\nTeledyne/M\nTelefunken/M\ntelegenic\ntelegrammed\ntelegramming\ntelegram/MS\ntelegraphic\ntelegraphically\ntelegraphist/MS\ntelegraph/MRDGZ\ntelegraphs\ntelegraphy/MS\ntelekineses\ntelekinesis/M\ntelekinetic\nTelemachus/M\nTelemann/M\ntelemarketer/S\ntelemarketing/S\ntelemeter/DMSG\ntelemetric\ntelemetry/MS\nteleological/Y\nteleology/M\ntelepathic\ntelepathically\ntelepathy/SM\ntelephone/SRDGMZ\ntelephonic\ntelephonist/SM\ntelephony/MS\ntelephotography/MS\ntelephoto/S\nteleprinter/MS\nteleprocessing/S\nteleprompter\nTelePrompter/M\nTelePrompTer/S\ntelescope/GSDM\ntelescopic\ntelescopically\nteletext/S\ntelethon/MS\nteletype/SM\nTeletype/SM\nteletypewriter/SM\ntelevangelism/S\ntelevangelist/S\ntelevise/SDXNG\ntelevision/M\ntelevisor/MS\ntelevisual\ntelex/GSDM\nTelex/M\ntell/AGS\nTeller/M\nteller/SDMG\ntelling/YS\nTell/MR\ntelltale/MS\ntellurium/SM\ntelly/SM\nTelnet/M\nTELNET/M\ntelnet/S\ntelomeric\ntel/SY\nTelugu/M\ntemblor/SM\ntemerity/MS\nTempe/M\ntemperamental/Y\ntemperament/SM\ntemperance/IMS\ntempera/SLM\ntemperately/I\ntemperateness\'s/I\ntemperateness/SM\ntemperate/SDGPY\ntemperature/MS\ntempered/UE\ntemper/GRDM\ntempering/E\ntemper\'s/E\ntempers/E\ntempest/DMSG\ntempestuousness/SM\ntempestuous/PY\ntemplate/FS\ntemplate\'s\nTemple/M\nTempleman/M\ntemple/SDM\nTempleton/M\nTemp/M\ntempoes\ntempo/MS\ntemporal/YS\ntemporarily\ntemporarinesses\ntemporariness/FM\ntemporary/SFP\ntemporize/GJZRSD\ntemporizer/M\ntemporizings/U\ntemporizing/YM\ntemp/SGZTMRD\ntemptation/MS\ntempted\ntempter/S\ntempt/FS\ntempting/YS\ntemptress/MS\ntempura/SM\ntenabilities\ntenability/UM\ntenableness/M\ntenable/P\ntenably\ntenaciousness/S\ntenacious/YP\ntenacity/S\ntenancy/MS\ntenanted/U\ntenant/MDSG\ntenantry/MS\ntench/M\ntended/UE\ntendency/MS\ntendentiousness/SM\ntendentious/PY\ntendered\ntenderer\ntenderest\ntenderfoot/MS\ntender/FS\ntenderheartedness/MS\ntenderhearted/YP\ntendering\ntenderizer/M\ntenderize/SRDGZ\ntenderloin/SM\ntenderly\ntenderness/SM\ntending/E\ntendinitis/S\ntend/ISFRDG\ntendon/MS\ntendril/SM\ntends/E\ntenebrous\ntenement/MS\ntenet/SM\nTenex/M\nTENEX/M\ntenfold/S\nten/MHB\nTenneco/M\ntenner\nTennessean/S\nTennessee/M\nTenney/M\ntennis/SM\nTenn/M\nTennyson/M\nTenochtitlan/M\ntenon/GSMD\ntenor/MS\ntenpin/SM\ntense/IPYTNVR\ntenseness\'s/I\ntenseness/SM\ntensile\ntensional/I\ntension/GMRDS\ntensionless\ntensions/E\ntension\'s/I\ntensity/IMS\ntensorial\ntensor/MS\ntenspot\ntens/SRDVGT\ntentacle/MSD\ntentativeness/S\ntentative/SPY\ntented/UF\ntenterhook/MS\ntenter/M\ntent/FSIM\ntenths\ntenth/SY\ntenting/F\ntenuity/S\ntenuousness/SM\ntenuous/YP\ntenure/SDM\nTeodoor/M\nTeodora/M\nTeodorico/M\nTeodor/M\nTeodoro/M\ntepee/MS\ntepidity/S\ntepidness/S\ntepid/YP\ntequila/SM\nTera/M\nteratogenic\nteratology/MS\nterbium/SM\ntercel/M\ntercentenary/S\ntercentennial/S\nTerence/M\nTerencio/M\nTeresa/M\nTerese/M\nTereshkova/M\nTeresina/M\nTeresita/M\nTeressa/M\nTeriann/M\nTeri/M\nTerkel/M\ntermagant/SM\ntermcap\ntermer/M\nterminable/CPI\nterminableness/IMC\nterminal/SYM\nterminate/CXNV\nterminated/U\nterminates\nterminating\ntermination/MC\nterminative/YC\nterminator/SM\ntermini\nterminological/Y\nterminology/MS\nterminus/M\ntermite/SM\nterm/MYRDGS\nternary/S\ntern/GIDS\ntern\'s\nterpsichorean\nTerpsichore/M\nterrace/MGSD\nterracing/M\nterracotta\nterrain/MS\nTerra/M\nterramycin\nTerrance/M\nTerran/M\nterrapin/MS\nterrarium/MS\nterrazzo/SM\nTerrell/M\nTerrel/M\nTerre/M\nTerrence/M\nterrestrial/YMS\nterribleness/SM\nterrible/P\nterribly\nTerrie/M\nterrier/M\nterrifically\nterrific/Y\nterrify/GDS\nterrifying/Y\nTerrijo/M\nTerrill/M\nTerri/M\nterrine/M\nterritoriality/M\nTerritorial/SM\nterritorial/SY\nTerritory\'s\nterritory/SM\nterrorism/MS\nterroristic\nterrorist/MS\nterrorized/U\nterrorizer/M\nterrorize/RSDZG\nterror/MS\nterr/S\nterrycloth\nTerrye/M\nTerry/M\nterry/ZMRS\nterseness/SM\nterse/RTYP\nTersina/M\ntertian\nTertiary\ntertiary/S\nTerza/M\nTESL\nTesla/M\nTESOL\nTessa/M\ntessellate/XDSNG\ntessellation/M\ntesseral\nTessie/M\nTessi/M\nTess/M\nTessy/M\ntestability/M\ntestable/U\ntestamentary\ntestament/SM\ntestate/IS\ntestator/MS\ntestatrices\ntestatrix\ntestbed/S\ntestcard\ntested/AKU\ntester/MFCKS\ntestes/M\ntesticle/SM\ntesticular\ntestifier/M\ntestify/GZDRS\ntestily\ntestimonial/SM\ntestimony/SM\ntestiness/S\ntesting/S\ntestis/M\ntestosterone/SM\ntest/RDBFZGSC\ntests/AK\ntest\'s/AKF\ntesty/RTP\ntetanus/MS\ntetchy/TR\ntether/DMSG\ntethered/U\nTethys/M\nTetons\ntetrachloride/M\ntetracycline/SM\ntetrafluoride\ntetragonal/Y\ntetrahalides\ntetrahedral/Y\ntetrahedron/SM\ntetrameron\ntetrameter/SM\ntetra/MS\ntetrasodium\ntetravalent\nTeutonic\nTeuton/SM\nTexaco/M\nTexan/S\nTexas/MS\nTex/M\nTeX/M\ntextbook/SM\ntext/FSM\ntextile/SM\nTextron/M\ntextual/FY\ntextural/Y\ntextured/U\ntexture/MGSD\nT/G\nThacher/M\nThackeray/M\nThaddeus/M\nThaddus/M\nThadeus/M\nThad/M\nThailand/M\nThaine/M\nThain/M\nThai/S\nthalami\nthalamus/M\nThales/M\nThalia/M\nthalidomide/MS\nthallium/SM\nthallophyte/M\nThames\nthan\nThane/M\nthane/SM\nThanh/M\nthanker/M\nthankfuller\nthankfullest\nthankfulness/SM\nthankful/YP\nthanklessness/SM\nthankless/PY\nthanksgiving/MS\nThanksgiving/S\nthank/SRDG\nThant/M\nThar/M\nThatcher/M\nthatching/M\nthatch/JMDRSZG\nThatch/MR\nthat\'d\nthat\'ll\nthat/MS\nthaumaturge/M\nthaw/DGS\nThaxter/M\nThayer/M\nThayne/M\nTHC\nthe\nTheadora/M\nThea/M\ntheatergoer/MS\ntheatergoing/MS\ntheater/SM\ntheatricality/SM\ntheatrical/YS\ntheatric/S\ntheatrics/M\nThebault/M\nThebes\nTheda/M\nThedrick/M\nThedric/M\nthee/DS\ntheeing\ntheft/MS\nTheiler/M\ntheir/MS\ntheism/SM\ntheistic\ntheist/SM\nThekla/M\nThelma/M\nthemas\nthematically\nthematics\nthematic/U\ntheme/MS\nthem/GD\nThemistocles/M\nthemselves\nthence\nthenceforth\nthenceforward/S\nTheobald/M\ntheocracy/SM\ntheocratic\nTheocritus/M\ntheodolite/MS\nTheodora/M\nTheodore/M\nTheodoric/M\nTheodor/M\nTheodosia/M\nTheodosian\nTheodosius/M\ntheologian/SM\ntheological/Y\ntheologists\ntheology/MS\nTheo/M\ntheorem/MS\ntheoretical/Y\ntheoretician/MS\ntheoretic/S\ntheoretics/M\ntheorist/SM\ntheorization/SM\ntheorize/ZGDRS\ntheory/MS\ntheosophic\ntheosophical\ntheosophist/MS\nTheosophy\ntheosophy/SM\ntherapeutically\ntherapeutic/S\ntherapeutics/M\ntherapist/MS\ntherapy/MS\nTheravada/M\nthereabout/S\nthereafter\nthereat\nthereby\nthere\'d\ntherefor\ntherefore\ntherefrom\ntherein\nthere\'ll\nthere/MS\nthereof\nthereon\nTheresa/M\nTherese/M\nTheresina/M\nTheresita/M\nTheressa/M\nthereto\ntheretofore\nthereunder\nthereunto\nthereupon\ntherewith\nTherine/M\nthermal/YS\nthermionic/S\nthermionics/M\nthermistor/MS\ntherm/MS\nthermocouple/MS\nthermodynamical/Y\nthermodynamic/S\nthermodynamics/M\nthermoelastic\nthermoelectric\nthermoformed\nthermoforming\nthermogravimetric\nthermoluminescence/M\nthermometer/MS\nthermometric\nthermometry/M\nthermonuclear\nthermopile/M\nthermoplastic/S\nthermopower\nthermo/S\nthermosetting\nthermos/S\nThermos/SM\nthermostable\nthermostatically\nthermostatic/S\nthermostatics/M\nthermostat/SM\nthermostatted\nthermostatting\nTheron/M\nthesauri\nthesaurus/MS\nthese/S\nTheseus/M\nthesis/M\nthespian/S\nThespian/S\nThespis/M\nThessalonian\nThessalon�ki/M\nThessaly/M\ntheta/MS\nthew/SM\nthey\nthey\'d\nthey\'ll\nthey\'re\nthey\'ve\nth/GNJX\nThia/M\nthiamine/MS\nThibaud/M\nThibaut/M\nthickener/M\nthickening/M\nthicken/RDJZG\nthicket/SMD\nthickheaded/M\nthickish\nthickness/MS\nthickset/S\nthick/TXPSRNY\nthief/M\nThiensville/M\nThieu/M\nthievery/MS\nthieve/SDJG\nthievishness/M\nthievish/P\nthighbone/SM\nthigh/DM\nthighs\nthimble/DSMG\nthimbleful/MS\nThimbu/M\nThimphu\nthine\nthingamabob/MS\nthingamajig/SM\nthing/MP\nthinkableness/M\nthinkable/U\nthinkably/U\nthink/AGRS\nthinker/MS\nthinkingly/U\nthinking/SMYP\nthinned\nthinner/MS\nthinness/MS\nthinnest\nthinning\nthinnish\nthin/STPYR\nthiocyanate/M\nthiouracil/M\nthird/DYGS\nthirster/M\nthirst/GSMDR\nthirstily\nthirstiness/S\nthirsty/TPR\nthirteen/MHS\nthirteenths\nthirtieths\nthirty/HMS\nthis\nthis\'ll\nthistledown/MS\nthistle/SM\nthither\nTh/M\ntho\nthole/GMSD\nThomasa/M\nThomasina/M\nThomasine/M\nThomasin/M\nThoma/SM\nThomism/M\nThomistic\nThom/M\nThompson/M\nThomson/M\nthong/SMD\nthoracic\nthorax/MS\nThorazine\nThoreau/M\nthoriate/D\nThorin/M\nthorium/MS\nThor/M\nThornburg/M\nThorndike/M\nThornie/M\nthorniness/S\nThorn/M\nthorn/SMDG\nThornton/M\nThorny/M\nthorny/PTR\nthoroughbred/S\nthoroughfare/MS\nthoroughgoing\nthoroughness/SM\nthorough/PTYR\nThorpe/M\nThorstein/M\nThorsten/M\nThorvald/M\nthose\nThoth/M\nthou/DSG\nthough\nthoughtfully\nthoughtfulness/S\nthoughtful/U\nthoughtlessness/MS\nthoughtless/YP\nthought/MS\nthousandfold\nthousand/SHM\nthousandths\nThrace/M\nThracian/M\nthralldom/S\nthrall/GSMD\nthrash/DSRZGJ\nthrasher/M\nthrashing/M\nthreadbare/P\nthreader/M\nthreading/A\nthreadlike\nthread/MZDRGS\nthready/RT\nthreatener/M\nthreaten/GJRD\nthreatening/Y\nthreat/MDNSXG\nthreefold\nthree/MS\nthreepence/M\nthreepenny\nthreescore/S\nthreesome/SM\nthrenody/SM\nthresh/DSRZG\nthresher/M\nthreshold/MDGS\nthrew\nthrice\nthriftily\nthriftiness/S\nthriftless\nthrift/SM\nthrifty/PTR\nthriller/M\nthrilling/Y\nthrill/ZMGDRS\nthriver/M\nthrive/RSDJG\nthriving/Y\nthroatily\nthroatiness/MS\nthroat/MDSG\nthroaty/PRT\nthrobbed\nthrobbing\nthrob/S\nthroeing\nthroe/SDM\nthrombi\nthromboses\nthrombosis/M\nthrombotic\nthrombus/M\nThroneberry/M\nthrone/CGSD\nthrone\'s\nthrong/GDSM\nthrottle/DRSZMG\nthrottler/M\nthroughout\nthroughput/SM\nthroughway\'s\nthrough/Y\nthrowaway/SM\nthrowback/MS\nthrower/M\nthrown\nthrowout\nthrow/SZGR\nthrummed\nthrumming\nthrum/S\nthrush/MS\nthruster/M\nthrust/ZGSR\nThruway/MS\nthruway/SM\nThunderbird/M\nThu\nThucydides/M\nthudded\nthudding\nthud/MS\nthuggee/M\nthuggery/SM\nthuggish\nthug/MS\nThule/M\nthulium/SM\nthumbnail/MS\nthumbscrew/SM\nthumb/SMDG\nthumbtack/GMDS\nthump/RDMSG\nthunderbolt/MS\nthunderclap/SM\nthundercloud/SM\nthunderer/M\nthunderhead/SM\nthundering/Y\nthunderous/Y\nthundershower/MS\nthunderstorm/MS\nthunderstruck\nthundery\nthunder/ZGJDRMS\nthunk\nThurber/M\nThurman/M\nThur/MS\nThursday/SM\nThurstan/M\nThurston/M\nthus/Y\nthwack/DRSZG\nthwacker/M\nthwarter/M\nthwart/GSDRY\nthy\nthyme/SM\nthymine/MS\nthymus/SM\nthyratron/M\nthyristor/MS\nthyroglobulin\nthyroidal\nthyroid/S\nthyronine\nthyrotoxic\nthyrotrophic\nthyrotrophin\nthyrotropic\nthyrotropin/M\nthyroxine/M\nthyself\nTia/M\nTianjin\ntiara/MS\nTiberius/M\nTiber/M\nTibetan/S\nTibet/M\ntibiae\ntibial\ntibia/M\nTibold/M\nTiburon/M\nticker/M\nticket/SGMD\ntick/GZJRDMS\nticking/M\ntickler/M\ntickle/RSDZG\nticklishness/MS\nticklish/PY\nticktacktoe/S\nticktock/SMDG\ntic/MS\nTiconderoga/M\ntidal/Y\ntidbit/MS\ntiddlywinks/M\ntide/GJDS\ntideland/MS\ntidewater/SM\ntideway/SM\ntidily/U\ntidiness/USM\ntidying/M\ntidy/UGDSRPT\ntie/AUDS\ntieback/MS\nTiebold/M\nTiebout/M\ntiebreaker/SM\nTieck/M\nTiena/M\nTienanmen/M\nTientsin\'s\ntier/DGM\nTierney/M\nTiertza/M\nTiffanie/M\nTiffani/M\ntiffany/M\nTiffany/M\ntiff/GDMS\nTiffie/M\nTiffi/M\nTiff/M\nTiffy/M\ntigerish\ntiger/SM\ntightener/M\ntighten/JZGDR\ntightfisted\ntightness/MS\ntightrope/SM\ntight/STXPRNY\ntightwad/MS\ntigress/SM\nTigris/M\nTijuana/M\ntike\'s\nTilda/M\ntilde/MS\nTildie/M\nTildi/M\nTildy/M\ntile/DRSJMZG\ntiled/UE\nTiler/M\ntiles/U\ntiling/M\ntillable\ntillage/SM\ntill/EGSZDR\ntiller/GDM\ntiller\'s/E\nTillich/M\nTillie/M\nTillman/M\nTilly/M\ntilth/M\ntilt/RDSGZ\nTi/M\ntimber/DMSG\ntimbering/M\ntimberland/SM\ntimberline/S\ntimbrel/SM\ntimbre/MS\nTimbuktu/M\nti/MDRZ\ntimebase\ntime/DRSJMYZG\ntimekeeper/MS\ntimekeeping/SM\ntimelessness/S\ntimeless/PY\ntimeliness/SMU\ntimely/UTRP\ntimeout/S\ntimepiece/MS\ntimer/M\ntimescale/S\ntimeserver/MS\ntimeserving/S\ntimeshare/SDG\ntimespan\ntimestamped\ntimestamps\ntimetable/GMSD\ntimeworn\nTimex/M\ntimezone/S\ntimidity/SM\ntimidness/MS\ntimid/RYTP\nTimi/M\ntiming/M\nTimmie/M\nTimmi/M\nTim/MS\nTimmy/M\nTimofei/M\nTimon/M\ntimorousness/MS\ntimorous/YP\nTimoteo/M\nTimothea/M\nTimothee/M\nTimotheus/M\nTimothy/M\ntimothy/MS\ntimpani\ntimpanist/S\nTimur/M\nTina/M\ntincture/SDMG\ntinderbox/MS\ntinder/MS\nTine/M\ntine/SM\ntinfoil/MS\ntingeing\ntinge/S\nting/GYDM\ntingle/SDG\ntingling/Y\ntingly/TR\nTing/M\ntinily\ntininess/MS\ntinker/SRDMZG\nTinkertoy\ntinkle/SDG\ntinkling/M\ntinkly\ntin/MDGS\ntinned\ntinner/M\ntinnily\ntinniness/SM\ntinning/M\ntinnitus/MS\ntinny/RSTP\ntinplate/S\ntinsel/GMDYS\nTinseltown/M\ntinsmith/M\ntinsmiths\ntinter/M\ntintinnabulation/MS\nTintoretto/M\ntint/SGMRDB\ntintype/SM\ntinware/MS\ntiny/RPT\nTioga/M\nTiphanie/M\nTiphani/M\nTiphany/M\ntipi\'s\ntip/MS\ntipoff\nTippecanoe/M\ntipped\nTipperary/M\ntipper/MS\ntippet/MS\ntipping\ntippler/M\ntipple/ZGRSD\ntippy/R\ntipsily\ntipsiness/SM\ntipster/SM\ntipsy/TPR\ntiptoeing\ntiptoe/SD\ntiptop/S\ntirade/SM\nTirana\'s\nTirane\ntired/AYP\ntireder\ntiredest\ntiredness/S\ntirelessness/SM\ntireless/PY\ntire/MGDSJ\ntires/A\nTiresias/M\ntiresomeness/S\ntiresome/PY\ntiring/AU\nTirolean/S\nTirol/M\ntiro\'s\nTirrell/M\ntis\nTisha/M\nTish/M\ntissue/MGSD\ntitanate/M\nTitania/M\ntitanic\ntitanically\nTitanic/M\ntitanium/SM\ntitan/SM\nTitan/SM\ntitbit\'s\ntiter/M\ntither/M\ntithe/SRDGZM\ntithing/M\nTitian/M\ntitian/S\nTiticaca/M\ntitillate/XSDVNG\ntitillating/Y\ntitillation/M\ntitivate/NGDSX\ntitivation/M\ntitled/AU\ntitle/GMSRD\ntitleholder/SM\ntitling/A\ntitmice\ntitmouse/M\ntit/MRZS\nTito/SM\ntitrate/SDGN\ntitration/M\ntitted\ntitter/GDS\ntitting\ntittle/SDMG\ntitular/SY\nTitus/M\ntizzy/SM\nTKO\nTlaloc/M\nTLC\nTlingit/M\nTl/M\nTM\nTm/M\ntn\nTN\ntnpk\nTNT\ntoad/SM\ntoadstool/SM\ntoady/GSDM\ntoadyism/M\ntoaster/M\ntoastmaster/MS\ntoastmistress/S\ntoast/SZGRDM\ntoasty/TRS\ntobacconist/SM\ntobacco/SM\ntobaggon/SM\nTobago/M\nTobe/M\nTobey/M\nTobiah/M\nTobias/M\nTobie/M\nTobi/M\nTobin/M\nTobit/M\ntoboggan/MRDSZG\nTobye/M\nToby/M\nTocantins/M\ntoccata/M\nTocqueville\ntocsin/MS\nto/D\ntoday\'ll\ntoday/SM\nToddie/M\ntoddler/M\ntoddle/ZGSRD\nTodd/M\nToddy/M\ntoddy/SM\nTod/M\ntoecap/SM\ntoeclip/S\nTOEFL\ntoehold/MS\ntoeing\ntoe/MS\ntoenail/DMGS\ntoffee/SM\ntofu/S\ntoga/SMD\ntoge\ntogetherness/MS\ntogether/P\ntogged\ntogging\ntoggle/SDMG\nTogolese/M\nTogo/M\ntog/SMG\nToiboid/M\ntoilet/GMDS\ntoiletry/MS\ntoilette/SM\ntoil/SGZMRD\ntoilsomeness/M\ntoilsome/PY\nToinette/M\nTojo/M\ntokamak\nTokay/M\ntoke/GDS\ntokenism/SM\ntokenized\ntoken/SMDG\nTokugawa/M\nTokyoite/MS\nTokyo/M\nToland/M\ntold/AU\nToledo/SM\ntole/MGDS\ntolerability/IM\ntolerable/I\ntolerably/I\ntolerance/SIM\ntolerant/IY\ntolerate/XVNGSD\ntoleration/M\nTolkien\ntollbooth/M\ntollbooths\ntoll/DGS\nTolley/M\ntollgate/MS\ntollhouse/M\ntollway/S\nTolstoy/M\ntoluene/MS\nTolyatti/M\ntomahawk/SGMD\nTomasina/M\nTomasine/M\nToma/SM\nTomaso/M\ntomatoes\ntomato/M\nTombaugh/M\ntomb/GSDM\nTombigbee/M\ntomblike\ntombola/M\ntomboyish\ntomboy/MS\ntombstone/MS\ntomcat/SM\ntomcatted\ntomcatting\nTome/M\ntome/SM\ntomfoolery/MS\ntomfool/M\nTomi/M\nTomkin/M\nTomlin/M\nTom/M\ntommed\nTommie/M\nTommi/M\ntomming\ntommy/M\nTommy/M\ntomographic\ntomography/MS\ntomorrow/MS\nTompkins/M\nTomsk/M\ntom/SM\ntomtit/SM\ntonality/MS\ntonal/Y\ntonearm/S\ntone/ISRDZG\ntonelessness/M\ntoneless/YP\ntoner/IM\ntone\'s\nTonga/M\nTongan/SM\ntong/GRDS\ntongueless\ntongue/SDMG\ntonguing/M\nTonia/M\ntonic/SM\nTonie/M\ntonight/MS\nToni/M\nTonio/M\ntonk/MS\ntonnage/SM\ntonne/MS\nTonnie/M\ntonsillectomy/MS\ntonsillitis/SM\ntonsil/SM\nton/SKM\ntonsorial\ntonsure/SDGM\nTonto/M\nTonya/M\nTonye/M\nTony/M\ntony/RT\ntoodle\ntoo/H\ntook/A\ntool/AGDS\ntoolbox/SM\ntooler/SM\ntooling/M\ntoolkit/SM\ntoolmaker/M\ntoolmake/ZRG\ntoolmaking/M\ntool\'s\ntoolsmith\nToomey/M\ntooter/M\ntoot/GRDZS\ntoothache/SM\ntoothbrush/MSG\ntooth/DMG\ntoothily\ntoothless\ntoothmarks\ntoothpaste/SM\ntoothpick/MS\ntooths\ntoothsome\ntoothy/TR\ntootle/SRDG\ntootsie\nTootsie/M\ntoots/M\ntootsy/MS\ntopaz/MS\ntopcoat/MS\ntopdressing/S\nTopeka/M\ntoper/M\ntopflight\ntopgallant/M\ntopiary/S\ntopicality/MS\ntopical/Y\ntopic/MS\ntopknot/MS\ntopless\ntopmast/MS\ntopmost\ntopnotch/R\ntopocentric\ntopographer/SM\ntopographic\ntopographical/Y\ntopography/MS\ntopological/Y\ntopologist/MS\ntopology/MS\ntopped\ntopper/MS\ntopping/MS\ntopple/GSD\ntopsail/MS\ntopside/SRM\ntop/SMDRG\ntopsoil/GDMS\ntopspin/MS\nTopsy/M\ntoque/MS\nTorah/M\nTorahs\ntorchbearer/SM\ntorchlight/S\ntorch/SDMG\ntoreador/SM\nTore/M\ntore/S\nTorey/M\nTorie/M\ntori/M\nTori/M\nTorin/M\ntorment/GSD\ntormenting/Y\ntormentor/MS\ntorn\ntornadoes\ntornado/M\ntoroidal/Y\ntoroid/MS\nToronto/M\ntorpedoes\ntorpedo/GMD\ntorpidity/S\ntorpid/SY\ntorpor/MS\nTorquemada/M\ntorque/MZGSRD\nTorrance/M\nTorre/MS\ntorrence\nTorrence/M\nTorrens/M\ntorrential\ntorrent/MS\nTorrey/M\nTorricelli/M\ntorridity/SM\ntorridness/SM\ntorrid/RYTP\nTorrie/M\nTorrin/M\nTorr/XM\nTorry/M\ntorsional/Y\ntorsion/IAM\ntorsions\ntorsi\'s\ntor/SLM\ntorso/SM\ntors/S\ntort/ASFE\ntortellini/MS\ntorte/MS\ntorten\ntortilla/MS\ntortoiseshell/SM\ntortoise/SM\nTortola/M\ntortoni/MS\ntort\'s\nTortuga/M\ntortuousness/MS\ntortuous/PY\ntorture/ZGSRD\ntorturous\ntorus/MS\nTory/SM\nTosca/M\nToscanini/M\nToshiba/M\ntoss/SRDGZ\ntossup/MS\ntotaler/M\ntotalistic\ntotalitarianism/SM\ntotalitarian/S\ntotality/MS\ntotalizator/S\ntotalizing\ntotal/ZGSRDYM\ntotemic\ntotem/MS\ntoter/M\ntote/S\ntoting/M\ntot/MDRSG\nToto/M\ntotted\ntotterer/M\ntottering/Y\ntotter/ZGRDS\ntotting\ntoucan/MS\ntouchable/U\ntouch/ASDG\ntouchdown/SM\ntouch�\ntouched/U\ntoucher/M\ntouchily\ntouchiness/SM\ntouching/SY\ntouchline/M\ntouchscreen\ntouchstone/SM\ntouchy/TPR\ntoughen/DRZG\ntoughener/M\ntoughness/SM\ntoughs\ntough/TXGRDNYP\nToulouse/M\ntoupee/SM\ntoured/CF\ntourer/M\ntour/GZSRDM\ntouring/F\ntourism/SM\ntouristic\ntourist/SM\ntouristy\ntourmaline/SM\ntournament/MS\ntourney/GDMS\ntourniquet/MS\ntour\'s/CF\ntours/CF\ntousle/GSD\ntouter/M\ntout/SGRD\nTova/M\nTove/M\ntowardliness/M\ntowardly/P\ntowards\ntoward/YU\ntowboat/MS\ntow/DRSZG\ntowelette/S\ntowel/GJDMS\ntoweling/M\ntower/GMD\ntowering/Y\ntowhead/MSD\ntowhee/SM\ntowline/MS\ntowner/M\nTownes\nTowney/M\ntownhouse/S\nTownie/M\ntownie/S\nTownley/M\nTown/M\nTownsend/M\ntownsfolk\ntownship/MS\ntownsman/M\ntownsmen\ntownspeople/M\ntown/SRM\ntownswoman/M\ntownswomen\nTowny/M\ntowpath/M\ntowpaths\ntowrope/MS\nTowsley/M\ntoxemia/MS\ntoxicity/MS\ntoxicological\ntoxicologist/SM\ntoxicology/MS\ntoxic/S\ntoxin/MS\ntoyer/M\ntoymaker\ntoy/MDRSG\nToynbee/M\nToyoda/M\nToyota/M\ntoyshop\ntr\ntraceability/M\ntraceableness/M\ntraceable/P\ntrace/ASDG\ntraceback/MS\ntraced/U\nTracee/M\ntraceless/Y\nTrace/M\ntracepoint/SM\ntracer/MS\ntracery/MDS\ntrace\'s\nTracey/M\ntracheae\ntracheal/M\ntrachea/M\ntracheotomy/SM\nTracie/M\nTraci/M\ntracing/SM\ntrackage\ntrackball/S\ntrackbed\ntracked/U\ntracker/M\ntrackless\ntracksuit/SM\ntrack/SZGMRD\ntractability/SI\ntractable/I\ntractably/I\ntract/ABS\nTractarians\ntraction/KSCEMAF\ntractive/KFE\ntractor/FKMASC\ntract\'s\ntracts/CEFK\nTracy/M\ntrademark/GSMD\ntrader/M\ntradesman/M\ntradesmen\ntradespeople\ntradespersons\ntrade/SRDGZM\ntradeswoman/M\ntradeswomen\ntraditionalism/MS\ntraditionalistic\ntraditionalist/MS\ntraditionalized\ntraditionally\ntraditional/U\ntradition/SM\ntraduce/DRSGZ\nTrafalgar/M\ntrafficked\ntrafficker/MS\ntrafficking/S\ntraffic/SM\ntragedian/SM\ntragedienne/MS\ntragedy/MS\ntragically\ntragicomedy/SM\ntragicomic\ntragic/S\ntrailblazer/MS\ntrailblazing/S\ntrailer/GDM\ntrails/F\ntrailside\ntrail/SZGJRD\ntrainable\ntrain/ASDG\ntrained/U\ntrainee/MS\ntraineeships\ntrainer/MS\ntraining/SM\ntrainman/M\ntrainmen\ntrainspotter/S\ntraipse/DSG\ntrait/MS\ntraitorous/Y\ntraitor/SM\nTrajan/M\ntrajectory/MS\ntrammed\ntrammeled/U\ntrammel/GSD\ntramming\ntram/MS\ntrample/DGRSZ\ntrampler/M\ntrampoline/GMSD\ntramp/RDSZG\ntramway/M\ntrance/MGSD\ntranche/SM\nTran/M\ntranquility/S\ntranquilized/U\ntranquilize/JGZDSR\ntranquilizer/M\ntranquilizes/A\ntranquilizing/YM\ntranquillize/GRSDZ\ntranquillizer/M\ntranquilness/M\ntranquil/PTRY\ntransact/GSD\ntransactional\ntransaction/MS\ntransactor/SM\ntransalpine\ntransaminase\ntransatlantic\nTranscaucasia/M\ntransceiver/SM\ntranscendence/MS\ntranscendentalism/SM\ntranscendentalist/SM\ntranscendental/YS\ntranscendent/Y\ntranscend/SDG\ntransconductance\ntranscontinental\ntranscribe/DSRGZ\ntranscriber/M\ntranscription/SM\ntranscript/SM\ntranscultural\ntransducer/SM\ntransduction/M\ntransect/DSG\ntransept/SM\ntransferability/M\ntransferal/MS\ntransfer/BSMD\ntransferee/M\ntransference/SM\ntransferor/MS\ntransferral/SM\ntransferred\ntransferrer/SM\ntransferring\ntransfiguration/SM\ntransfigure/SDG\ntransfinite/Y\ntransfix/SDG\ntransformational\ntransformation/MS\ntransform/DRZBSG\ntransformed/U\ntransformer/M\ntransfuse/XSDGNB\ntransfusion/M\ntransgression/SM\ntransgressor/S\ntransgress/VGSD\ntrans/I\ntransience/SM\ntransiency/S\ntransient/YS\ntransistorize/GDS\ntransistor/SM\nTransite/M\ntransitional/Y\ntransition/MDGS\ntransitivenesses\ntransitiveness/IM\ntransitive/PIY\ntransitivity/MS\ntransitoriness/M\ntransitory/P\ntransit/SGVMD\ntransl\ntranslatability/M\ntranslatable/U\ntranslated/AU\ntranslate/VGNXSDB\ntranslational\ntranslation/M\ntranslator/SM\ntransliterate/XNGSD\ntranslucence/SM\ntranslucency/MS\ntranslucent/Y\ntransmigrate/XNGSD\ntransmissible\ntransmission/MSA\ntransmissive\ntransmit/AS\ntransmittable\ntransmittal/SM\ntransmittance/MS\ntransmitted/A\ntransmitter/SM\ntransmitting/A\ntransmogrification/M\ntransmogrify/GXDSN\ntransmutation/SM\ntransmute/GBSD\ntransnational/S\ntransoceanic\ntransom/SM\ntransonic\ntranspacific\ntransparency/MS\ntransparentness/M\ntransparent/YP\ntranspiration/SM\ntranspire/GSD\ntransplantation/S\ntransplant/GRDBS\ntranspolar\ntransponder/MS\ntransportability\ntransportable/U\ntransportation/SM\ntransport/BGZSDR\ntranspose/BGSD\ntransposed/U\ntransposition/SM\nTransputer/M\ntranssexualism/MS\ntranssexual/SM\ntransship/LS\ntransshipment/SM\ntransshipped\ntransshipping\ntransubstantiation/MS\nTransvaal/M\ntransversal/YM\ntransverse/GYDS\ntransvestism/SM\ntransvestite/SM\ntransvestitism\nTransylvania/M\ntrapdoor/S\ntrapeze/DSGM\ntrapezium/MS\ntrapezoidal\ntrapezoid/MS\ntrap/MS\ntrappable/U\ntrapped\ntrapper/SM\ntrapping/S\nTrappist/MS\ntrapshooting/SM\ntrashcan/SM\ntrashiness/SM\ntrash/SRDMG\ntrashy/TRP\nTrastevere/M\ntrauma/MS\ntraumatic\ntraumatically\ntraumatize/SDG\ntravail/SMDG\ntraveled/U\ntraveler/M\ntravelog\'s\ntravelogue/S\ntravel/SDRGZJ\nTraver/MS\ntraversal/SM\ntraverse/GBDRS\ntraverser/M\ntravertine/M\ntravesty/SDGM\nTravis/M\nTravus/M\ntrawler/M\ntrawl/RDMSZG\ntray/SM\ntreacherousness/SM\ntreacherous/PY\ntreachery/SM\ntreacle/DSGM\ntreacly\ntreader/M\ntreadle/GDSM\ntreadmill/MS\ntread/SAGD\nTreadwell/M\ntreas\ntreason/BMS\ntreasonous\ntreasure/DRSZMG\ntreasurer/M\ntreasurership\ntreasury/SM\nTreasury/SM\ntreatable\ntreated/U\ntreater/S\ntreatise/MS\ntreatment/MS\ntreat\'s\ntreat/SAGDR\ntreaty/MS\ntreble/SDG\nTreblinka/M\ntreeing\ntreeless\ntreelike\ntree/MDS\ntreetop/SM\ntrefoil/SM\nTrefor/M\ntrekked\ntrekker/MS\nTrekkie/M\ntrekking\ntrek/MS\ntrellis/GDSM\nTremaine/M\nTremain/M\ntrematode/SM\nTremayne/M\ntremble/JDRSG\ntrembler/M\ntrembles/M\ntrembly\ntremendousness/M\ntremendous/YP\ntremolo/MS\ntremor/MS\ntremulousness/SM\ntremulous/YP\ntrenchancy/MS\ntrenchant/Y\ntrencherman/M\ntrenchermen\ntrencher/SM\ntrench/GASD\ntrench\'s\ntrendily\ntrendiness/S\ntrend/SDMG\ntrendy/PTRS\nTrenna/M\nTrent/M\nTrenton/M\ntrepanned\ntrepidation/MS\nTresa/M\nTrescha/M\ntrespasser/M\ntrespass/ZRSDG\nTressa/M\ntressed/E\ntresses/E\ntressing/E\ntress/MSDG\ntrestle/MS\nTrevar/M\nTrevelyan/M\nTrever/M\nTrevino/M\nTrevor/M\nTrev/RM\nTrey/M\ntrey/MS\ntriableness/M\ntriable/P\ntriadic\ntriad/MS\ntriage/SDMG\ntrial/ASM\ntrialization\ntrialled\ntrialling\ntriamcinolone\ntriangle/SM\ntriangulable\ntriangularization/S\ntriangular/Y\ntriangulate/YGNXSD\ntriangulation/M\nTriangulum/M\nTrianon/M\nTriassic\ntriathlon/S\ntriatomic\ntribalism/MS\ntribal/Y\ntribe/MS\ntribesman/M\ntribesmen\ntribeswoman\ntribeswomen\ntribulate/NX\ntribulation/M\ntribunal/MS\ntribune/SM\ntributary/MS\ntribute/EGSF\ntribute\'s\ntrice/GSDM\ntricentennial/S\ntriceps/SM\ntriceratops/M\ntrichinae\ntrichina/M\ntrichinoses\ntrichinosis/M\ntrichloroacetic\ntrichloroethane\ntrichotomy/M\ntrichromatic\nTricia/M\ntrickery/MS\ntrick/GMSRD\ntrickily\ntrickiness/SM\ntrickle/DSG\ntrickster/MS\ntricky/RPT\ntricolor/SMD\ntricycle/SDMG\ntrident/SM\ntridiagonal\ntried/UA\ntriennial/SY\ntrier/AS\ntrier\'s\ntries/A\nTrieste/M\ntriffid/S\ntrifle/MZGJSRD\ntrifler/M\ntrifluoride/M\ntrifocals\ntrigged\ntrigger/GSDM\ntriggest\ntrigging\ntriglyceride/MS\ntrigonal/Y\ntrigonometric\ntrigonometrical\ntrigonometry/MS\ntrigram/S\ntrig/S\ntrihedral\ntrike/GMSD\ntrilateral/S\ntrilby/SM\ntrilingual\ntrillion/SMH\ntrillionth/M\ntrillionths\ntrillium/SM\ntrill/RDMGS\ntrilobite/MS\ntrilogy/MS\ntrimaran/MS\nTrimble/M\ntrimer/M\ntrimester/MS\ntrimmed/U\ntrimmer/MS\ntrimmest\ntrimming/MS\ntrimness/S\ntrimodal\ntrimonthly\ntrim/PSYR\nTrimurti/M\nTrina/M\nTrinidad/M\ntrinitarian/S\ntrinitrotoluene/SM\ntrinity/MS\nTrinity/MS\ntrinketer/M\ntrinket/MRDSG\ntriode/MS\ntrio/SM\ntrioxide/M\ntripartite/N\ntripartition/M\ntripe/MS\ntriphenylarsine\ntriphenylphosphine\ntriphenylstibine\ntriphosphopyridine\ntriple/GSD\ntriplet/SM\ntriplex/S\ntriplicate/SDG\ntriplication/M\ntriply/GDSN\nTrip/M\ntripodal\ntripod/MS\ntripoli/M\nTripoli/M\ntripolyphosphate\ntripos/SM\ntripped\nTrippe/M\ntripper/MS\ntripping/Y\nTripp/M\ntrip/SMY\ntriptych/M\ntriptychs\ntripwire/MS\ntrireme/SM\nTris\ntrisect/GSD\ntrisection/S\ntrisector\nTrisha/M\nTrish/M\ntrisodium\nTrista/M\nTristam/M\nTristan/M\ntristate\ntrisyllable/M\ntritely/F\ntriteness/SF\ntrite/SRPTY\ntritium/MS\ntriton/M\nTriton/M\ntriumphal\ntriumphalism\ntriumphant/Y\ntriumph/GMD\ntriumphs\ntriumvirate/MS\ntriumvir/MS\ntriune\ntrivalent\ntrivet/SM\ntrivia\ntriviality/MS\ntrivialization/MS\ntrivialize/DSG\ntrivial/Y\ntrivium/M\nTrixie/M\nTrixi/M\nTrix/M\nTrixy/M\nTrobriand/M\ntrochaic/S\ntrochee/SM\ntrod/AU\ntrodden/UA\ntrodes\ntroff/MR\ntroglodyte/MS\ntroika/SM\nTrojan/MS\ntroll/DMSG\ntrolled/F\ntrolleybus/S\ntrolley/SGMD\ntrolling/F\ntrollish\nTrollope/M\ntrollop/GSMD\ntrolly\'s\ntrombone/MS\ntrombonist/SM\ntromp/DSG\nTrondheim/M\ntrooper/M\ntroopship/SM\ntroop/SRDMZG\ntrope/SM\nTropez/M\ntrophic\ntrophy/MGDS\ntropical/SY\ntropic/MS\ntropism/SM\ntropocollagen\ntroposphere/MS\ntropospheric\ntroth/GDM\ntroths\ntrot/S\nTrotsky/M\ntrotted\ntrotter/SM\ntrotting\ntroubadour/SM\ntroubled/U\ntrouble/GDRSM\ntroublemaker/MS\ntroubler/M\ntroubleshooter/M\ntroubleshoot/SRDZG\ntroubleshot\ntroublesomeness/M\ntroublesome/YP\ntrough/M\ntroughs\ntrounce/GZDRS\ntrouncer/M\ntroupe/MZGSRD\ntrouper/M\ntrouser/DMGS\ntrousseau/M\ntrousseaux\nTroutman/M\ntrout/SM\ntrove/SM\ntroweler/M\ntrowel/SMDRGZ\ntrow/SGD\nTroyes\nTroy/M\ntroy/S\nTrstram/M\ntruancy/MS\ntruant/SMDG\ntruce/SDGM\nTruckee/M\ntrucker/M\ntrucking/M\ntruckle/GDS\ntruckload/MS\ntruck/SZGMRDJ\ntruculence/SM\ntruculent/Y\nTruda/M\nTrudeau/M\nTrude/M\nTrudey/M\ntrudge/SRDG\nTrudie/M\nTrudi/M\nTrudy/M\ntrue/DRSPTG\ntruelove/MS\nTrueman/M\ntrueness/M\ntruer/U\ntruest/U\ntruffle/MS\ntruism/SM\nTrujillo/M\nTrula/M\ntruly/U\nTrumaine/M\nTruman/M\nTrumann/M\nTrumbull/M\ntrump/DMSG\ntrumpery/SM\ntrumpeter/M\ntrumpet/MDRZGS\nTrump/M\ntruncate/NGDSX\ntruncation/M\ntruncheon/MDSG\ntrundle/GZDSR\ntrundler/M\ntrunk/GSMD\ntrunnion/SM\ntrusser/M\ntrussing/M\ntruss/SRDG\ntrusted/EU\ntrusteeing\ntrustee/MDS\ntrusteeship/SM\ntruster/M\ntrustful/EY\ntrustfulness/SM\ntrustiness/M\ntrusting/Y\ntrust/RDMSG\ntrusts/E\ntrustworthier\ntrustworthiest\ntrustworthiness/MS\ntrustworthy/UP\ntrusty/PTMSR\nTruth\ntruthfulness/US\ntruthful/UYP\ntruths/U\ntruth/UM\nTRW\ntrying/Y\ntry/JGDRSZ\ntryout/MS\ntrypsin/M\ntryst/GDMS\nts\nT\'s\ntsarevich\ntsarina\'s\ntsarism/M\ntsarist\ntsetse/S\nTsimshian/M\nTsiolkovsky/M\nTsitsihar/M\ntsp\ntsunami/MS\nTsunematsu/M\nTswana/M\nTTL\ntty/M\nttys\nTuamotu/M\nTuareg/M\ntubae\ntubal\ntuba/SM\ntubbed\ntubbing\ntubby/TR\ntubeless\ntubercle/MS\ntubercular/S\ntuberculin/MS\ntuberculoses\ntuberculosis/M\ntuberculous\ntuber/M\ntuberose/SM\ntuberous\ntube/SM\ntubing/M\ntub/JMDRSZG\nTubman/M\ntubular/Y\ntubule/SM\ntucker/GDM\nTucker/M\ntuck/GZSRD\nTuckie/M\nTuck/RM\nTucky/M\nTucson/M\nTucuman/M\nTudor/MS\nTue/S\nTuesday/SM\ntufter/M\ntuft/GZSMRD\ntufting/M\ntugboat/MS\ntugged\ntugging\ntug/S\ntuition/ISM\nTulane/M\ntularemia/S\ntulip/SM\ntulle/SM\nTulley/M\nTull/M\nTully/M\nTulsa/M\ntum\ntumbledown\ntumbler/M\ntumbleweed/MS\ntumble/ZGRSDJ\ntumbrel/SM\ntumescence/S\ntumescent\ntumidity/MS\ntumid/Y\ntummy/SM\ntumor/MDS\ntumorous\nTums/M\ntumult/SGMD\ntumultuousness/M\ntumultuous/PY\ntumulus/M\ntunableness/M\ntunable/P\ntuna/SM\ntundra/SM\ntun/DRJZGBS\ntune/CSDG\ntunefulness/MS\ntuneful/YP\ntuneless/Y\ntuner/M\ntune\'s\ntuneup/S\ntung\ntungstate/M\ntungsten/SM\nTunguska/M\nTungus/M\ntunic/MS\ntuning/A\ntuning\'s\nTunisia/M\nTunisian/S\nTunis/M\ntunned\ntunneler/M\ntunnel/MRDSJGZ\ntunning\ntunny/SM\ntupelo/M\nTupi/M\ntuple/SM\ntuppence/M\nTupperware\nTupungato/M\nturban/SDM\nturbid\nturbidity/SM\nturbinate/SD\nturbine/SM\nturbocharged\nturbocharger/SM\nturbofan/MS\nturbojet/MS\nturboprop/MS\nturbo/SM\nturbot/MS\nturbulence/SM\nturbulent/Y\nturd/MS\ntureen/MS\nturf/DGSM\nturfy/RT\nTurgenev/M\nturgidity/SM\nturgidness/M\nturgid/PY\nTuring/M\nTurin/M\nTurkestan/M\nTurkey/M\nturkey/SM\nTurkic/SM\nTurkish\nTurkmenistan/M\nturk/S\nTurk/SM\nturmeric/MS\nturmoil/SDMG\nturnabout/SM\nturnaround/MS\nturn/AZGRDBS\nturnbuckle/SM\nturncoat/SM\nturned/U\nturner/M\nTurner/M\nturning/MS\nturnip/SMDG\nturnkey/MS\nturnoff/MS\nturnout/MS\nturnover/SM\nturnpike/MS\nturnround/MS\nturnstile/SM\nturnstone/M\nturntable/SM\nturpentine/GMSD\nTurpin/M\nturpitude/SM\nturquoise/SM\nturret/SMD\nturtleback/MS\nturtledove/MS\nturtleneck/SDM\nturtle/SDMG\nturves\'s\nturvy\nTuscaloosa/M\nTuscan\nTuscany/M\nTuscarora/M\nTuscon/M\ntush/SDG\nTuskegee/M\ntusker/M\ntusk/GZRDMS\ntussle/GSD\ntussock/MS\ntussocky\nTussuad/M\nTutankhamen/M\ntutelage/MS\ntutelary/S\nTut/M\ntutored/U\ntutorial/MS\ntutor/MDGS\ntutorship/S\ntut/S\nTutsi\ntutted\ntutting\ntutti/S\nTuttle/M\ntutu/SM\nTuvalu\ntuxedo/SDM\ntux/S\nTVA\nTV/M\nTVs\ntwaddle/GZMRSD\ntwaddler/M\nTwain/M\ntwain/S\nTWA/M\ntwang/MDSG\ntwangy/TR\ntwas\ntweak/SGRD\ntweediness/M\nTweedledee/M\nTweedledum/M\nTweed/M\ntwee/DP\ntweed/SM\ntweedy/PTR\ntween\ntweeter/M\ntweet/ZSGRD\ntweezer/M\ntweeze/ZGRD\ntwelfth\ntwelfths\ntwelvemonth/M\ntwelvemonths\ntwelve/MS\ntwentieths\ntwenty/MSH\ntwerp/MS\ntwice/R\ntwiddle/GRSD\ntwiddler/M\ntwiddly/RT\ntwigged\ntwigging\ntwiggy/RT\ntwig/SM\nTwila/M\ntwilight/MS\ntwilit\ntwill/SGD\ntwiner/M\ntwine/SM\ntwinge/SDMG\nTwinkie\ntwinkler/M\ntwinkle/RSDG\ntwinkling/M\ntwinkly\ntwinned\ntwinning\ntwin/RDMGZS\ntwirler/M\ntwirling/Y\ntwirl/SZGRD\ntwirly/TR\ntwisted/U\ntwister/M\ntwists/U\ntwist/SZGRD\ntwisty\ntwitch/GRSD\ntwitchy/TR\ntwit/S\ntwitted\ntwitterer/M\ntwitter/SGRD\ntwittery\ntwitting\ntwixt\ntwofer/MS\ntwofold/S\ntwo/MS\ntwopence/SM\ntwopenny/S\ntwosome/MS\ntwp\nTwp\nTWX\nTwyla/M\nTX\nt/XTJBG\nTybalt/M\nTybie/M\nTybi/M\ntycoon/MS\ntyeing\nTye/M\ntying/UA\ntyke/SM\nTylenol/M\nTyler/M\nTy/M\nTymon/M\nTymothy/M\ntympani\ntympanist/SM\ntympanum/SM\nTynan/M\nTyndale/M\nTyndall/M\nTyne/M\ntypeahead\ntypecast/SG\ntyped/AU\ntypedef/S\ntypeface/MS\ntypeless\ntype/MGDRSJ\ntypes/A\ntypescript/SM\ntypeset/S\ntypesetter/MS\ntypesetting/SM\ntypewriter/M\ntypewrite/SRJZG\ntypewriting/M\ntypewritten\ntypewrote\ntyphoid/SM\nTyphon/M\ntyphoon/SM\ntyphus/SM\ntypicality/MS\ntypically\ntypicalness/M\ntypical/U\ntypification/M\ntypify/SDNXG\ntyping/A\ntypist/MS\ntypographer/SM\ntypographic\ntypographical/Y\ntypography/MS\ntypological/Y\ntypology/MS\ntypo/MS\ntyrannic\ntyrannicalness/M\ntyrannical/PY\ntyrannicide/M\ntyrannizer/M\ntyrannize/ZGJRSD\ntyrannizing/YM\ntyrannosaur/MS\ntyrannosaurus/S\ntyrannous\ntyranny/MS\ntyrant/MS\nTyree/M\ntyreo\nTyrolean/S\nTyrol\'s\nTyrone/M\ntyrosine/M\ntyro/SM\nTyrus/M\nTyson/M\ntzarina\'s\ntzar\'s\nTzeltal/M\nu\nU\nUAR\nUART\nUAW\nUbangi/M\nubiquitous/YP\nubiquity/S\nUcayali/M\nUccello/M\nUCLA/M\nUdale/M\nUdall/M\nudder/SM\nUdell/M\nUfa/M\nufologist/S\nufology/MS\nUFO/S\nUganda/M\nUgandan/S\nugh\nughs\nuglification\nugliness/MS\nuglis\nugly/PTGSRD\nUgo/M\nuh\nUHF\nUighur\nUjungpandang/M\nUK\nukase/SM\nUkraine/M\nUkrainian/S\nukulele/SM\nUL\nUla/M\nUlberto/M\nulcerate/NGVXDS\nulceration/M\nulcer/MDGS\nulcerous\nUlick/M\nUlises/M\nUlla/M\nUllman/M\nulnae\nulna/M\nulnar\nUlrica/M\nUlrich/M\nUlrick/M\nUlric/M\nUlrika/M\nUlrikaumeko/M\nUlrike/M\nUlster/M\nulster/MS\nult\nulterior/Y\nultimas\nultimate/DSYPG\nultimateness/M\nultimatum/MS\nultimo\nultracentrifugally\nultracentrifugation\nultracentrifuge/M\nultraconservative/S\nultrafast\nultrahigh\nultralight/S\nultramarine/SM\nultramodern\nultramontane\nultra/S\nultrashort\nultrasonically\nultrasonic/S\nultrasonics/M\nultrasound/SM\nultrastructure/M\nUltrasuede\nultraviolet/SM\nUltrix/M\nULTRIX/M\nululate/DSXGN\nululation/M\nUlyanovsk/M\nUlysses/M\num\numbel/MS\number/GMDS\nUmberto/M\numbilical/S\numbilici\numbilicus/M\numbrage/MGSD\numbrageous\numbra/MS\numbrella/GDMS\nUmbriel/M\nUmeko/M\numiak/MS\numlaut/GMDS\numpire/MGSD\nump/MDSG\numpteen/H\nUN\nunabated/Y\nunabridged/S\nunacceptability\nunacceptable\nunaccepted\nunaccommodating\nunaccountability\nunaccustomed/Y\nunadapted\nunadulterated/Y\nunadventurous\nunalienability\nunalterableness/M\nunalterable/P\nunalterably\nUna/M\nunambiguity\nunambiguous\nunambitious\nunamused\nunanimity/SM\nunanimous/Y\nunanticipated/Y\nunapologetic\nunapologizing/M\nunappeasable\nunappeasably\nunappreciative\nunary\nunassailableness/M\nunassailable/P\nunassertive\nunassumingness/M\nunassuming/PY\nunauthorized/PY\nunavailing/PY\nunaware/SPY\nunbalanced/P\nunbar\nunbarring\nunbecoming/P\nunbeknown\nunbelieving/Y\nunbiased/P\nunbid\nunbind/G\nunblessed\nunblinking/Y\nunbodied\nunbolt/G\nunbreakability\nunbred\nunbroken\nunbuckle\nunbudging/Y\nunburnt\nuncap\nuncapping\nuncatalogued\nuncauterized/MS\nunceasing/Y\nuncelebrated\nuncertain/P\nunchallengeable\nunchangingness/M\nunchanging/PY\nuncharacteristic\nuncharismatic\nunchastity\nunchristian\nuncial/S\nuncivilized/Y\nunclassified\nuncle/MSD\nunclouded/Y\nuncodable\nuncollected\nuncoloredness/M\nuncolored/PY\nuncombable\nuncommunicative\nuncompetitive\nuncomplicated\nuncomprehending/Y\nuncompromisable\nunconcerned/P\nunconcern/M\nunconfirmed\nunconfused\nunconscionableness/M\nunconscionable/P\nunconscionably\nunconstitutional\nunconsumed\nuncontentious\nuncontrollability\nunconvertible\nuncool\nuncooperative\nuncork/G\nuncouple/G\nuncouthness/M\nuncouth/YP\nuncreate/V\nuncritical\nuncross/GB\nuncrowded\nunction/IM\nunctions\nunctuousness/MS\nunctuous/PY\nuncustomary\nuncut\nundated/I\nundaunted/Y\nundeceive\nundecided/S\nundedicated\nundefinability\nundefinedness/M\nundefined/P\nundelete\nundeliverability\nundeniableness/M\nundeniable/P\nundeniably\nundependable\nunderachiever/M\nunderachieve/SRDGZ\nunderact/GDS\nunderadjusting\nunderage/S\nunderarm/DGS\nunderbedding\nunderbelly/MS\nunderbidding\nunderbid/S\nunderbracing\nunderbrush/MSDG\nundercarriage/MS\nundercharge/GSD\nunderclassman\nunderclassmen\nunderclass/S\nunderclothes\nunderclothing/MS\nundercoating/M\nundercoat/JMDGS\nunderconsumption/M\nundercooked\nundercount/S\nundercover\nundercurrent/SM\nundercut/S\nundercutting\nunderdeveloped\nunderdevelopment/MS\nunderdog/MS\nunderdone\nundereducated\nunderemphasis\nunderemployed\nunderemployment/SM\nunderenumerated\nunderenumeration\nunderestimate/NGXSD\nunderexploited\nunderexpose/SDG\nunderexposure/SM\nunderfed\nunderfeed/SG\nunderfloor\nunderflow/GDMS\nunderfoot\nunderfund/DG\nunderfur/MS\nundergarment/SM\nundergirding\nundergoes\nundergo/G\nundergone\nundergrad/MS\nundergraduate/MS\nunderground/RMS\nundergrowth/M\nundergrowths\nunderhand/D\nunderhandedness/MS\nunderhanded/YP\nunderheat\nunderinvestment\nunderlaid\nunderlain/S\nunderlay/GS\nunderlie\nunderline/GSDJ\nunderling/MS\nunderlip/SM\nunderloaded\nunderly/GS\nundermanned\nundermentioned\nundermine/SDG\nundermost\nunderneath\nunderneaths\nundernourished\nundernourishment/SM\nunderpaid\nunderpants\nunderpart/MS\nunderpass/SM\nunderpay/GSL\nunderpayment/SM\nunderperformed\nunderpinned\nunderpinning/MS\nunderpin/S\nunderplay/SGD\nunderpopulated\nunderpopulation/M\nunderpowered\nunderpricing\nunderprivileged\nunderproduction/MS\nunderrate/GSD\nunderregistration/M\nunderreported\nunderreporting\nunderrepresentation/M\nunderrepresented\nunderscore/SDG\nundersealed\nundersea/S\nundersecretary/SM\nundersell/SG\nundersexed\nundershirt/SM\nundershoot/SG\nundershorts\nundershot\nunderside/SM\nundersigned/M\nundersign/SGD\nundersized\nundersizes\nundersizing\nunderskirt/MS\nundersold\nunderspecification\nunderspecified\nunderspend/G\nunderstaffed\nunderstandability/M\nunderstandably\nunderstanding/YM\nunderstand/RGSJB\nunderstate/GSDL\nunderstatement/MS\nunderstocked\nunderstood\nunderstrength\nunderstructure/SM\nunderstudy/GMSD\nundertaken\nundertaker/M\nundertake/SRGZJ\nundertaking/M\nunderthings\nundertone/SM\nundertook\nundertow/MS\nunderused\nunderusing\nunderutilization/M\nunderutilized\nundervaluation/S\nundervalue/SDG\nunderwater/S\nunderway\nunderwear/M\nunderweight/S\nunderwent\nunderwhelm/DGS\nunderwood/M\nUnderwood/M\nunderworld/MS\nunderwrite/GZSR\nunderwriter/M\nunderwritten\nunderwrote\nunder/Y\nundeserving\nundesigned\nundeviating/Y\nundialyzed/SM\nundiplomatic\nundiscerning\nundiscriminating\nundo/GJ\nundoubted/Y\nundramatic\nundramatized/SM\nundress/G\nundrinkability\nundrinkable\nundroppable\nundue\nundulant\nundulate/XDSNG\nundulation/M\nunearthliness/S\nunearthly/P\nunearth/YG\nunease\nuneconomic\nuneducated\nunemployed/S\nunencroachable\nunending/Y\nunendurable/P\nunenergized/MS\nunenforced\nunenterprising\nUNESCO\nunethical\nuneulogized/SM\nunexacting\nunexceptionably\nunexcited\nunexpectedness/MS\nunfading/Y\nunfailingness/M\nunfailing/P\nunfamiliar\nunfashionable\nunfathomably\nunfavored\nunfeeling\nunfeigned/Y\nunfelt\nunfeminine\nunfertile\nunfetchable\nunflagging\nunflappability/S\nunflappable\nunflappably\nunflinching/Y\nunfold/LG\nunfoldment/M\nunforced\nunforgeable\nunfossilized/MS\nunfraternizing/SM\nunfrozen\nunfulfillable\nunfunny\nunfussy\nungainliness/MS\nungainly/PRT\nUngava/M\nungenerous\nungentle\nunglamorous\nungrammaticality\nungrudging\nunguent/MS\nungulate/MS\nunharmonious\nunharness/G\nunhistorical\nunholy/TP\nunhook/DG\nunhydrolyzed/SM\nunhygienic\nUnibus/M\nunicameral\nUNICEF\nunicellular\nUnicode/M\nunicorn/SM\nunicycle/MGSD\nunicyclist/MS\nunideal\nunidimensional\nunidiomatic\nunidirectionality\nunidirectional/Y\nunidolized/MS\nunifiable\nunification/MA\nunifier/MS\nunifilar\nuniformity/MS\nuniformness/M\nuniform/TGSRDYMP\nunify/AXDSNG\nunilateralism/M\nunilateralist\nunilateral/Y\nunimodal\nunimpeachably\nunimportance\nunimportant\nunimpressive\nunindustrialized/MS\nuninhibited/YP\nuninominal\nuninsured\nunintellectual\nunintended\nuninteresting\nuninterruptedness/M\nuninterrupted/YP\nunintuitive\nuninviting\nunion/AEMS\nunionism/SM\nunionist/SM\nUnionist/SM\nunionize\nUnion/MS\nUniPlus/M\nunipolar\nuniprocessor/SM\nuniqueness/S\nunique/TYSRP\nUniroyal/M\nunisex/S\nUniSoft/M\nunison/MS\nUnisys/M\nunitarianism/M\nUnitarianism/SM\nunitarian/MS\nUnitarian/MS\nunitary\nunite/AEDSG\nunited/Y\nuniter/M\nunitize/GDS\nunit/VGRD\nunity/SEM\nuniv\nUnivac/M\nunivalent/S\nunivalve/MS\nunivariate\nuniversalism/M\nuniversalistic\nuniversality/SM\nuniversalize/DSRZG\nuniversalizer/M\nuniversal/YSP\nuniverse/MS\nuniversity/MS\nUnix/M\nUNIX/M\nunjam\nunkempt\nunkind/TP\nunkink\nunknightly\nunknowable/S\nunknowing\nunlabored\nunlace/G\nunlearn/G\nunlikeable\nunlikeliness/S\nunlimber/G\nunlimited\nunlit\nunliterary\nunloose/G\nunlucky/TP\nunmagnetized/MS\nunmanageably\nunmannered/Y\nunmask/G\nunmeaning\nunmeasured\nunmeetable\nunmelodious\nunmemorable\nunmemorialized/MS\nunmentionable/S\nunmerciful\nunmeritorious\nunmethodical\nunmineralized/MS\nunmissable\nunmistakably\nunmitigated/YP\nunmnemonic\nunmobilized/SM\nunmoral\nunmount/B\nunmovable\nunmoving\nunnaturalness/M\nunnavigable\nunnerving/Y\nunobliging\nunoffensive\nunofficial\nunorganized/YP\nunorthodox\nunpack/G\nunpaintable\nunpalatability\nunpalatable\nunpartizan\nunpatronizing\nunpeople\nunperceptive\nunperson\nunperturbed/Y\nunphysical\nunpick/G\nunpicturesque\nunpinning\nunpleasing\nunploughed\nunpolarized/SM\nunpopular\nunpractical\nunprecedented/Y\nunpredictable/S\nunpreemphasized\nunpremeditated\nunpretentiousness/M\nunprincipled/P\nunproblematic\nunproductive\nunpropitious\nunprovable\nunproven\nunprovocative\nunpunctual\nunquestionable\nunraisable\nunravellings\nunreadability\nunread/B\nunreal\nunrealizable\nunreasoning/Y\nunreceptive\nunrecordable\nunreflective\nunrelenting/Y\nunremitting/Y\nunrepeatability\nunrepeated\nunrepentant\nunreported\nunrepresentative\nunreproducible\nunrest/G\nunrestrained/P\nunrewarding\nunriddle\nunripe/P\nunromantic\nunruliness/SM\nunruly/PTR\nunsaleable\nunsanitary\nunsavored/YP\nunsavoriness/M\nunseal/GB\nunsearchable\nunseasonal\nunseeing/Y\nunseen/S\nunselfconsciousness/M\nunselfconscious/P\nunselfishness/M\nunsellable\nunsentimental\nunset\nunsettledness/M\nunsettled/P\nunsettling/Y\nunshapely\nunshaven\nunshorn\nunsighted\nunsightliness/S\nunskilful\nunsociability\nunsociable/P\nunsocial\nunsound/PT\nunspeakably\nunspecific\nunspectacular\nunspoilt\nunspoke\nunsporting\nunstable/P\nunstigmatized/SM\nunstilted\nunstinting/Y\nunstopping\nunstrapping\nunstudied\nunstuffy\nunsubdued\nunsubstantial\nunsubtle\nunsuitable\nunsuspecting/Y\nunswerving/Y\nunsymmetrical\nunsympathetic\nunsystematic\nunsystematized/Y\nuntactful\nuntalented\nuntaxing\nunteach/B\nuntellable\nuntenable\nunthinking\nuntil/G\nuntiring/Y\nunto\nuntouchable/MS\nuntowardness/M\nuntoward/P\nuntraceable\nuntrue\nuntruthfulness/M\nuntwist/G\nUnukalhai/M\nunusualness/M\nunutterable\nunutterably\nunvocalized/MS\nunvulcanized/SM\nunwaivering\nunwarrantable\nunwarrantably\nunwashed/PS\nunwearable\nunwearied/Y\nunwed\nunwedge\nunwelcome\nunwell/M\nunwieldiness/MS\nunwieldy/TPR\nunwind/B\nunwomanly\nunworkable/S\nunworried\nunwrap\nunwrapping\nunyielding/Y\nunyoke\nunzip\nup\nUpanishads\nuparrow\nupbeat/SM\nupbraid/GDRS\nupbringing/M\nupbring/JG\nUPC\nupchuck/SDG\nupcome/G\nupcountry/S\nupdatability\nupdater/M\nupdate/RSDG\nUpdike/M\nupdraft/SM\nupend/SDG\nupfield\nupfront\nupgradeable\nupgrade/DSJG\nupheaval/MS\nupheld\nuphill/S\nupholder/M\nuphold/RSGZ\nupholster/ADGS\nupholsterer/SM\nupholstery/MS\nUPI\nupkeep/SM\nuplander/M\nupland/MRS\nuplifter/M\nuplift/SJDRG\nupload/GSD\nupmarket\nupon\nupped\nuppercase/GSD\nupperclassman/M\nupperclassmen\nuppercut/S\nuppercutting\nuppermost\nupper/S\nupping\nuppish\nuppity\nupraise/GDS\nuprated\nuprating\nuprear/DSG\nupright/DYGSP\nuprightness/S\nuprise/RGJ\nuprising/M\nupriver/S\nuproariousness/M\nuproarious/PY\nuproar/MS\nuproot/DRGS\nuprooter/M\nups\nUPS\nupscale/GDS\nupset/S\nupsetting/MS\nupshot/SM\nupside/MS\nupsilon/MS\nupslope\nupstage/DSRG\nupstairs\nupstandingness/M\nupstanding/P\nupstart/MDGS\nupstate/SR\nupstream/DSG\nupstroke/MS\nupsurge/DSG\nupswing/GMS\nupswung\nuptake/SM\nupthrust/GMS\nuptight\nuptime\nUpton/M\nuptown/RS\nuptrend/M\nupturn/GDS\nupwardness/M\nupward/SYP\nupwelling\nupwind/S\nuracil/MS\nUral/MS\nUrania/M\nuranium/MS\nUranus/M\nuranyl/M\nUrbain/M\nUrbana/M\nurbane/Y\nurbanism/M\nurbanite/SM\nurbanity/SM\nurbanization/MS\nurbanize/DSG\nUrban/M\nurbanologist/S\nurbanology/S\nUrbano/M\nurban/RT\nUrbanus/M\nurchin/SM\nUrdu/M\nurea/SM\nuremia/MS\nuremic\nureter/MS\nurethane/MS\nurethrae\nurethral\nurethra/M\nurethritis/M\nUrey/M\nurge/GDRSJ\nurgency/SM\nurgent/Y\nurger/M\nUriah/M\nuric\nUriel/M\nurinal/MS\nurinalyses\nurinalysis/M\nurinary/MS\nurinate/XDSNG\nurination/M\nurine/MS\nUri/SM\nURL\nUr/M\nurning/M\nurn/MDGS\nurogenital\nurological\nurologist/S\nurology/MS\nUrquhart/M\nUrsala/M\nUrsa/M\nursine\nUrsola/M\nUrson/M\nUrsula/M\nUrsulina/M\nUrsuline/M\nurticaria/MS\nUruguayan/S\nUruguay/M\nUrumqi\nUS\nUSA\nusability/S\nusable/U\nusably/U\nUSAF\nusage/SM\nUSART\nUSCG\nUSC/M\nUSDA\nus/DRSBZG\nused/U\nuse/ESDAG\nusefulness/SM\nuseful/YP\nuselessness/MS\nuseless/PY\nUsenet/M\nUsenix/M\nuser/M\nUSG/M\nusherette/SM\nusher/SGMD\nUSIA\nUSMC\nUSN\nUSO\nUSP\nUSPS\nUSS\nUSSR\nUstinov/M\nusu\nusuals\nusual/UPY\nusurer/SM\nusuriousness/M\nusurious/PY\nusurpation/MS\nusurper/M\nusurp/RDZSG\nusury/SM\nUT\nUtahan/SM\nUtah/M\nUta/M\nUte/M\nutensil/SM\nuteri\nuterine\nuterus/M\nUtica/M\nutile/I\nutilitarianism/MS\nutilitarian/S\nutility/MS\nutilization/MS\nutilization\'s/A\nutilize/GZDRS\nutilizer/M\nutilizes/A\nutmost/S\nUtopia/MS\nutopianism/M\nutopian\'s\nUtopian/S\nutopia/S\nUtrecht/M\nUtrillo/M\nutterance/MS\nuttered/U\nutterer/M\nuttermost/S\nutter/TRDYGS\nuucp/M\nUV\nuvula/MS\nuvular/S\nuxorious\nUzbekistan\nUzbek/M\nUzi/M\nV\nVA\nvacancy/MS\nvacantness/M\nvacant/PY\nvacate/NGXSD\nvacationist/SM\nvacationland\nvacation/MRDZG\nvaccinate/NGSDX\nvaccination/M\nvaccine/SM\nvaccinial\nvaccinia/M\nVachel/M\nvacillate/XNGSD\nvacillating/Y\nvacillation/M\nvacillator/SM\nVaclav/M\nvacua\'s\nvacuity/MS\nvacuo\nvacuolated/U\nvacuolate/SDGN\nvacuole/SM\nvacuolization/SM\nvacuousness/MS\nvacuous/PY\nvacuum/GSMD\nVader/M\nVaduz/M\nvagabondage/MS\nvagabond/DMSG\nvagarious\nvagary/MS\nvaginae\nvaginal/Y\nvagina/M\nvagrancy/MS\nvagrant/SMY\nvagueing\nvagueness/MS\nvague/TYSRDP\nVail/M\nvaingloriousness/M\nvainglorious/YP\nvainglory/MS\nvain/TYRP\nval\nvalance/SDMG\nValaree/M\nValaria/M\nValarie/M\nValdemar/M\nValdez/M\nValeda/M\nvalediction/MS\nvaledictorian/MS\nvaledictory/MS\nVale/M\nvalence/SM\nValencia/MS\nvalency/MS\nValene/M\nValenka/M\nValentia/M\nValentijn/M\nValentina/M\nValentine/M\nvalentine/SM\nValentin/M\nValentino/M\nValenzuela/M\nValera/M\nValeria/M\nValerian/M\nValerie/M\nValerye/M\nVal�ry/M\nvale/SM\nvalet/GDMS\nvaletudinarianism/MS\nvaletudinarian/MS\nValhalla/M\nvaliance/S\nvaliantness/M\nvaliant/SPY\nValida/M\nvalidated/AU\nvalidate/INGSDX\nvalidates/A\nvalidation/AMI\nvalidity/IMS\nvalidnesses\nvalidness/MI\nvalid/PIY\nValina/M\nvalise/MS\nValium/S\nValkyrie/SM\nVallejo\nValle/M\nValletta/M\nvalley/SM\nVallie/M\nValli/M\nVally/M\nValma/M\nVal/MY\nValois/M\nvalor/MS\nvalorous/Y\nValparaiso/M\nValry/M\nvaluable/IP\nvaluableness/IM\nvaluables\nvaluably/I\nvaluate/NGXSD\nvaluation/CSAM\nvaluator/SM\nvalue/CGASD\nvalued/U\nvaluelessness/M\nvalueless/P\nvaluer/SM\nvalue\'s\nvalues/E\nvalve/GMSD\nvalveless\nvalvular\nVa/M\nvamoose/GSD\nvamp/ADSG\nvamper\nvampire/MGSD\nvamp\'s\nvanadium/MS\nVance/M\nVancouver/M\nvandalism/MS\nvandalize/GSD\nvandal/MS\nVandal/MS\nVanda/M\nVandenberg/M\nVanderbilt/M\nVanderburgh/M\nVanderpoel/M\nVandyke/SM\nvane/MS\nVanessa/M\nVang/M\nvanguard/MS\nVania/M\nvanilla/MS\nvanisher/M\nvanish/GRSDJ\nvanishing/Y\nvanity/SM\nVan/M\nVanna/M\nvanned\nVannie/M\nVanni/M\nvanning\nVanny/M\nvanquisher/M\nvanquish/RSDGZ\nvan/SMD\nvantage/MS\nVanuatu\nVanya/M\nVanzetti/M\nvapidity/MS\nvapidness/SM\nvapid/PY\nvaporer/M\nvaporing/MY\nvaporisation\nvaporise/DSG\nvaporization/AMS\nvaporize/DRSZG\nvaporizer/M\nvapor/MRDJGZS\nvaporous\nvapory\nvaquero/SM\nVAR\nVaranasi/M\nVarese/M\nVargas/M\nvariability/IMS\nvariableness/IM\nvariable/PMS\nvariables/I\nvariably/I\nvariance/I\nvariances\nvariance\'s\nVarian/M\nvariant/ISY\nvariate/MGNSDX\nvariational\nvariation/M\nvaricolored/MS\nvaricose/S\nvariedly\nvaried/U\nvariegate/NGXSD\nvariegation/M\nvarier/M\nvarietal/S\nvariety/MS\nvarious/PY\nvaristor/M\nVarityping/M\nvarlet/MS\nvarmint/SM\nvarnished/U\nvarnisher/M\nvarnish/ZGMDRS\nvar/S\nvarsity/MS\nvarying/UY\nvary/SRDJG\nvascular\nvasectomy/SM\nVaseline/DSMG\nvase/SM\nVasili/MS\nVasily/M\nvasomotor\nVasquez/M\nvassalage/MS\nvassal/GSMD\nVassar/M\nVassili/M\nVassily/M\nvastness/MS\nvast/PTSYR\nv/ASV\nVAT\nVatican/M\nvat/SM\nvatted\nvatting\nvaudeville/SM\nvaudevillian/SM\nVaudois\nVaughan/M\nVaughn/M\nvaulter/M\nvaulting/M\nvault/ZSRDMGJ\nvaunter/M\nvaunt/GRDS\nVAXes\nVax/M\nVAX/M\nVazquez/M\nvb\nVCR\nVD\nVDT\nVDU\nvealed/A\nvealer/MA\nveal/MRDGS\nveals/A\nVeblen/M\nvectorial\nvectorization\nvectorized\nvectorizing\nvector\'s/F\nvector/SGDM\nVeda/MS\nVedanta/M\nveejay/S\nveep/S\nveer/DSG\nveering/Y\nvegan/SM\nVega/SM\nVegemite/M\nveges\nvegetable/MS\nvegetarianism/MS\nvegetarian/SM\nvegetate/DSNGVX\nvegetation/M\nvegetative/PY\nvegged\nveggie/S\nvegging\nveg/M\nvehemence/MS\nvehemency/S\nvehement/Y\nvehicle/SM\nvehicular\nveiling/MU\nveil\'s\nveil/UGSD\nvein/GSRDM\nveining/M\nvela/M\nVela/M\nvelarize/SDG\nvelar/S\nVel�squez/M\nVel�zquez\nVelcro/SM\nveld/SM\nveldt\'s\nVelez/M\nVella/M\nvellum/MS\nVelma/M\nvelocipede/SM\nvelocity/SM\nvelor/S\nvelour\'s\nvelum/M\nVelveeta/M\nvelveteen/MS\nvelvet/GSMD\nVelvet/M\nvelvety/RT\nvenality/MS\nvenal/Y\nvenation/SM\nvend/DSG\nvender\'s/K\nvendetta/MS\nvendible/S\nvendor/MS\nveneerer/M\nveneer/GSRDM\nveneering/M\nvenerability/S\nvenerable/P\nvenerate/XNGSD\nveneration/M\nvenereal\nvenetian\nVenetian/SM\nVenezuela/M\nVenezuelan/S\nvengeance/MS\nvengeful/APY\nvengefulness/AM\nvenialness/M\nvenial/YP\nVenice/M\nvenireman/M\nveniremen\nvenison/SM\nVenita/M\nVenn/M\nvenomousness/M\nvenomous/YP\nvenom/SGDM\nvenous/Y\nventer/M\nventilated/U\nventilate/XSDVGN\nventilation/M\nventilator/MS\nvent/ISGFD\nventral/YS\nventricle/MS\nventricular\nventriloquies\nventriloquism/MS\nventriloquist/MS\nventriloquy\nvent\'s/F\nVentura/M\nventure/RSDJZG\nventuresomeness/SM\nventuresome/YP\nventuri/S\nventurousness/MS\nventurous/YP\nvenue/MAS\nVenusian/S\nVenus/S\nveraciousness/M\nveracious/YP\nveracities\nveracity/IM\nVeracruz/M\nVeradis\nVera/M\nverandahed\nveranda/SDM\nverbalization/MS\nverbalized/U\nverbalizer/M\nverbalize/ZGRSD\nverballed\nverballing\nverbal/SY\nverbatim\nverbena/MS\nverbiage/SM\nverb/KSM\nverbose/YP\nverbosity/SM\nverboten\nverdant/Y\nVerde/M\nVerderer/M\nverdict/SM\nverdigris/GSDM\nVerdi/M\nverdure/SDM\nVere/M\nVerena/M\nVerene/M\nverge/FGSD\nVerge/M\nverger/SM\nverge\'s\nVergil\'s\nveridical/Y\nVeriee/M\nverifiability/M\nverifiableness/M\nverifiable/U\nverification/S\nverified/U\nverifier/MS\nverify/GASD\nVerile/M\nverily\nVerina/M\nVerine/M\nverisimilitude/SM\nveritableness/M\nveritable/P\nveritably\nverity/MS\nVerlag/M\nVerlaine/M\nVerla/M\nVermeer/M\nvermicelli/MS\nvermiculite/MS\nvermiform\nvermilion/MS\nvermin/M\nverminous\nVermonter/M\nVermont/ZRM\nvermouth/M\nvermouths\nvernacular/YS\nvernal/Y\nVerna/M\nVerne/M\nVernen/M\nVerney/M\nVernice/M\nvernier/SM\nVern/NM\nVernon/M\nVernor/M\nVerona/M\nVeronese/M\nVeronica/M\nveronica/SM\nVeronika/M\nVeronike/M\nVeronique/M\nverrucae\nverruca/MS\nversa\nVersailles/M\nVersatec/M\nversatileness/M\nversatile/YP\nversatility/SM\nversed/UI\nverse\'s\nverses/I\nverse/XSRDAGNF\nversicle/M\nversification/M\nversifier/M\nversify/GDRSZXN\nversing/I\nversion/MFISA\nverso/SM\nversus\nvertebrae\nvertebral/Y\nvertebra/M\nvertebrate/IMS\nvertebration/M\nvertex/SM\nvertical/YPS\nvertices\'s\nvertiginous\nvertigoes\nvertigo/M\nverve/SM\nvery/RT\nVesalius/M\nvesicle/SM\nvesicular/Y\nvesiculate/GSD\nVespasian/M\nvesper/SM\nVespucci/M\nvessel/MS\nvestal/YS\nVesta/M\nvest/DIGSL\nvestibular\nvestibule/SDM\nvestige/SM\nvestigial/Y\nvesting/SM\nvestment/ISM\nvestryman/M\nvestrymen\nvestry/MS\nvest\'s\nvesture/SDMG\nVesuvius/M\nvetch/SM\nveteran/SM\nveterinarian/MS\nveterinary/S\nveter/M\nveto/DMG\nvetoes\nvet/SMR\nvetted\nvetting/A\nVevay/M\nvexation/SM\nvexatiousness/M\nvexatious/PY\nvexed/Y\nvex/GFSD\nVF\nVFW\nVG\nVGA\nvhf\nVHF\nVHS\nVI\nvia\nviability/SM\nviable/I\nviably\nviaduct/MS\nViagra/M\nvial/MDGS\nviand/SM\nvibe/S\nvibraharp/MS\nvibrancy/MS\nvibrant/YS\nvibraphone/MS\nvibraphonist/SM\nvibrate/XNGSD\nvibrational/Y\nvibration/M\nvibrato/MS\nvibrator/SM\nvibratory\nvibrio/M\nvibrionic\nviburnum/SM\nvicarage/SM\nvicariousness/MS\nvicarious/YP\nvicar/SM\nvice/CMS\nviced\nvicegerent/MS\nvicennial\nVicente/M\nviceregal\nviceroy/SM\nVichy/M\nvichyssoise/MS\nvicing\nvicinity/MS\nviciousness/S\nvicious/YP\nvicissitude/MS\nVickers/M\nVickie/M\nVicki/M\nVicksburg/M\nVicky/M\nVick/ZM\nVic/M\nvictimization/SM\nvictimized/U\nvictimizer/M\nvictimize/SRDZG\nvictim/SM\nVictoir/M\nVictoria/M\nVictorianism/S\nVictorian/S\nvictoriousness/M\nvictorious/YP\nVictor/M\nvictor/SM\nvictory/MS\nVictrola/SM\nvictualer/M\nvictual/ZGSDR\nvicu�a/S\nVidal/M\nVida/M\nvidelicet\nvideocassette/S\nvideoconferencing\nvideodisc/S\nvideodisk/SM\nvideo/GSMD\nvideophone/SM\nvideotape/SDGM\nVidovic/M\nVidovik/M\nVienna/M\nViennese/M\nVientiane/M\nvier/M\nvie/S\nVietcong/M\nViet/M\nVietminh/M\nVietnamese/M\nVietnam/M\nviewed/A\nviewer/AS\nviewer\'s\nviewfinder/MS\nviewgraph/SM\nviewing/M\nviewless/Y\nview/MBGZJSRD\nviewpoint/SM\nviews/A\nvigesimal\nvigilance/MS\nvigilante/SM\nvigilantism/MS\nvigilantist\nvigilant/Y\nvigil/SM\nvignette/MGDRS\nvignetter/M\nvignetting/M\nvignettist/MS\nvigor/MS\nvigorousness/M\nvigorous/YP\nvii\nviii\nVijayawada/M\nViki/M\nViking/MS\nviking/S\nVikki/M\nVikky/M\nVikram/M\nVila\nvile/AR\nvilely\nvileness/MS\nvilest\nVilhelmina/M\nvilification/M\nvilifier/M\nvilify/GNXRSD\nvillager/M\nvillage/RSMZ\nvillainousness/M\nvillainous/YP\nvillain/SM\nvillainy/MS\nVilla/M\nvilla/MS\nVillarreal/M\nville\nvilleinage/SM\nvillein/MS\nvilli\nVillon/M\nvillus/M\nVilma/M\nVilnius/M\nVilyui/M\nVi/M\nvi/MDR\nvim/MS\nvinaigrette/MS\nVina/M\nVince/M\nVincent/MS\nVincenty/M\nVincenz/M\nvincible/I\nVinci/M\nVindemiatrix/M\nvindicate/XSDVGN\nvindication/M\nvindicator/SM\nvindictiveness/MS\nvindictive/PY\nvinegar/DMSG\nvinegary\nvine/MGDS\nvineyard/SM\nVinita/M\nVin/M\nVinnie/M\nVinni/M\nVinny/M\nvino/MS\nvinous\nVinson/M\nvintage/MRSDG\nvintager/M\nvintner/MS\nvinyl/SM\nviolable/I\nViola/M\nViolante/M\nviola/SM\nviolate/VNGXSD\nviolator/MS\nViole/M\nviolence/SM\nviolent/Y\nViolet/M\nviolet/SM\nVioletta/M\nViolette/M\nviolinist/SM\nviolin/MS\nviolist/MS\nviol/MSB\nvioloncellist/S\nvioloncello/MS\nviper/MS\nviperous\nVIP/S\nviragoes\nvirago/M\nviral/Y\nvireo/SM\nVirge/M\nVirgie/M\nVirgilio/M\nVirgil/M\nvirginal/YS\nVirgina/M\nVirginia/M\nVirginian/S\nVirginie/M\nvirginity/SM\nvirgin/SM\nVirgo/MS\nvirgule/MS\nvirile\nvirility/MS\nvirologist/S\nvirology/SM\nvirtual/Y\nvirtue/SM\nvirtuosity/MS\nvirtuosoes\nvirtuoso/MS\nvirtuousness/SM\nvirtuous/PY\nvirulence/SM\nvirulent/Y\nvirus/MS\nvisage/MSD\nVisakhapatnam\'s\nVisa/M\nvisa/SGMD\nVisayans\nviscera\nvisceral/Y\nviscid/Y\nviscoelastic\nviscoelasticity\nviscometer/SM\nviscose/MS\nviscosity/MS\nviscountcy/MS\nviscountess/SM\nviscount/MS\nviscousness/M\nviscous/PY\nviscus/M\nvise/CAXNGSD\nviselike\nvise\'s\nVishnu/M\nvisibility/ISM\nvisible/PI\nvisibly/I\nVisigoth/M\nVisigoths\nvisionariness/M\nvisionary/PS\nvision/KMDGS\nvision\'s/A\nvisitable/U\nvisitant/SM\nvisitation/SM\nvisited/U\nvisit/GASD\nvisitor/MS\nvis/MDSGV\nvisor/SMDG\nVISTA\nvista/GSDM\nVistula/M\nvisualization/AMS\nvisualized/U\nvisualizer/M\nvisualizes/A\nvisualize/SRDZG\nvisual/SY\nvitae\nvitality/MS\nvitalization/AMS\nvitalize/ASDGC\nvital/SY\nvita/M\nVita/M\nvitamin/SM\nVite/M\nVitia/M\nvitiate/XGNSD\nvitiation/M\nviticulture/SM\nviticulturist/S\nVitim/M\nVito/M\nVitoria/M\nvitreous/YSP\nvitrifaction/S\nvitrification/M\nvitrify/XDSNG\nvitrine/SM\nvitriolic\nvitriol/MDSG\nvitro\nvittles\nVittoria/M\nVittorio/M\nvituperate/SDXVGN\nvituperation/M\nvituperative/Y\nVitus/M\nvivace/S\nvivaciousness/MS\nvivacious/YP\nvivacity/SM\nviva/DGS\nVivaldi\nViva/M\nvivaria\nvivarium/MS\nvivaxes\nVivekananda/M\nvive/Z\nVivia/M\nViviana/M\nVivian/M\nVivianna/M\nVivianne/M\nvividness/SM\nvivid/PTYR\nVivie/M\nViviene/M\nVivien/M\nVivienne/M\nvivifier\nvivify/NGASD\nVivi/MN\nviviparous\nvivisect/DGS\nvivisectional\nvivisectionist/SM\nvivisection/MS\nViviyan/M\nViv/M\nvivo\nVivyan/M\nVivyanne/M\nvixenish/Y\nvixen/SM\nviz\nvizier/MS\nvizor\'s\nVJ\nVladamir/M\nVladimir/M\nVladivostok/M\nVlad/M\nVLF\nVLSI\nVMS/M\nVOA\nvocable/SM\nvocab/S\nvocabularian\nvocabularianism\nvocabulary/MS\nvocalic/S\nvocalise\'s\nvocalism/M\nvocalist/MS\nvocalization/SM\nvocalized/U\nvocalizer/M\nvocalize/ZGDRS\nvocal/SY\nvocation/AKMISF\nvocational/Y\nvocative/KYS\nvociferate/NGXSD\nvociferation/M\nvociferousness/MS\nvociferous/YP\nvocoded\nvocoder\nvodka/MS\nvoe/S\nVogel/M\nvogue/GMSRD\nvogueing\nvoguish\nvoiceband\nvoiced/CU\nvoice/IMGDS\nvoicelessness/SM\nvoiceless/YP\nvoicer/S\nvoices/C\nvoicing/C\nvoidable\nvoid/C\nvoided\nvoider/M\nvoiding\nvoidness/M\nvoids\nvoil�\nvoile/MS\nvolar\nvolatileness/M\nvolatile/PS\nvolatility/MS\nvolatilization/MS\nvolatilize/SDG\nvolcanically\nvolcanic/S\nvolcanism/M\nvolcanoes\nvolcano/M\nvole/MS\nVolga/M\nVolgograd/M\nvol/GSD\nvolitionality\nvolitional/Y\nvolition/MS\nVolkswagen/SM\nvolleyball/MS\nvolleyer/M\nvolley/SMRDG\nVol/M\nVolstead/M\nvoltage/SM\nvoltaic\nVoltaire/M\nVolta/M\nvolt/AMS\nVolterra/M\nvoltmeter/MS\nvolubility/S\nvoluble/P\nvolubly\nvolume/SDGM\nvolumetric\nvolumetrically\nvoluminousness/MS\nvoluminous/PY\nvoluntarily/I\nvoluntariness/MI\nvoluntarism/MS\nvoluntary/PS\nvolunteer/DMSG\nvoluptuary/SM\nvoluptuousness/S\nvoluptuous/YP\nvolute/S\nVolvo/M\nvomit/GRDS\nVonda/M\nVon/M\nVonnegut/M\nVonnie/M\nVonni/M\nVonny/M\nvoodoo/GDMS\nvoodooism/S\nvoraciousness/MS\nvoracious/YP\nvoracity/MS\nVoronezh/M\nVorster/M\nvortex/SM\nvortices\'s\nvorticity/M\nvotary/MS\nvote/CSDG\nvoter/SM\nvote\'s\nvotive/YP\nvoucher/GMD\nvouchsafe/SDG\nvouch/SRDGZ\nvowelled\nvowelling\nvowel/MS\nvower/M\nvow/SMDRG\nvoyage/GMZJSRD\nvoyager/M\nvoyageur/SM\nvoyeurism/MS\nvoyeuristic\nvoyeur/MS\nVP\nvs\nV\'s\nVT\nVt/M\nVTOL\nvulcanization/SM\nvulcanized/U\nvulcanize/SDG\nVulcan/M\nvulgarian/MS\nvulgarism/MS\nvulgarity/MS\nvulgarization/S\nvulgarize/GZSRD\nvulgar/TSYR\nVulgate/SM\nVulg/M\nvulnerability/SI\nvulnerable/IP\nvulnerably/I\nvulpine\nvulturelike\nvulture/SM\nvulturous\nvulvae\nvulva/M\nvying\nVyky/M\nWA\nWaals\nWabash/M\nWAC\nWacke/M\nwackes\nwackiness/MS\nwacko/MS\nwacky/RTP\nWaco/M\nWac/S\nwadded\nwadding/SM\nwaddle/GRSD\nWade/M\nwader/M\nwade/S\nwadi/SM\nwad/MDRZGS\nWadsworth/M\nwafer/GSMD\nwaffle/GMZRSD\nWafs\nwafter/M\nwaft/SGRD\nwag/DRZGS\nwaged/U\nwager/GZMRD\nwage/SM\nwagged\nwaggery/MS\nwagging\nwaggishness/SM\nwaggish/YP\nwaggle/SDG\nwaggly\nWagnerian\nWagner/M\nwagoner/M\nwagon/SGZMRD\nwagtail/SM\nWahl/M\nwaif/SGDM\nWaikiki/M\nwailer/M\nwail/SGZRD\nwain/GSDM\nWain/M\nwainscot/SGJD\nWainwright/M\nwainwright/SM\nwaistband/MS\nwaistcoat/GDMS\nwaister/M\nwaist/GSRDM\nwaistline/MS\nWaite/M\nwaiter/DMG\nWaiter/M\nwait/GSZJRD\nWait/MR\nwaitpeople\nwaitperson/S\nwaitress/GMSD\nwaiver/MB\nwaive/SRDGZ\nWakefield/M\nwakefulness/MS\nwakeful/PY\nWake/M\nwake/MGDRSJ\nwaken/SMRDG\nwaker/M\nwakeup\nWaksman/M\nWalbridge/M\nWalcott/M\nWaldemar/M\nWalden/M\nWaldensian\nWaldheim/M\nWald/MN\nWaldo/M\nWaldon/M\nWaldorf/M\nwale/DRSMG\nWales\nWalesa/M\nWalford/M\nWalgreen/M\nwaling/M\nwalkabout/M\nwalkaway/SM\nwalker/M\nWalker/M\nwalk/GZSBJRD\nwalkie\nWalkman/S\nwalkout/SM\nwalkover/SM\nwalkway/MS\nwallaby/MS\nWallace/M\nWallache/M\nwallah/M\nWallas/M\nwallboard/MS\nWallenstein/M\nWaller/M\nwallet/SM\nwalleye/MSD\nwallflower/MS\nWallie/M\nWallis\nWalliw/M\nWalloon/SM\nwalloper/M\nwalloping/M\nwallop/RDSJG\nwallower/M\nwallow/RDSG\nwallpaper/DMGS\nwall/SGMRD\nWall/SMR\nWally/M\nwally/S\nwalnut/SM\nWalpole/M\nWalpurgisnacht\nwalrus/SM\nWalsh/M\nWalter/M\nWalther/M\nWalton/M\nwaltzer/M\nWalt/ZMR\nwaltz/MRSDGZ\nWalworth/M\nWaly/M\nwampum/SM\nWanamaker/M\nWanda/M\nwanderer/M\nwander/JZGRD\nwanderlust/SM\nWandie/M\nWandis/M\nwand/MRSZ\nwane/S\nWaneta/M\nwangler/M\nwangle/RSDGZ\nWang/M\nWanids/M\nWankel/M\nwanna\nwannabe/S\nwanned\nwanner\nwanness/S\nwannest\nwanning\nwan/PGSDY\nWansee/M\nWansley/M\nwanted/U\nwanter/M\nwant/GRDSJ\nwantonness/S\nwanton/PGSRDY\nwapiti/MS\nwarble/GZRSD\nwarbler/M\nwarbonnet/S\nward/AGMRDS\nWarde/M\nwarden/DMGS\nWarden/M\nwarder/DMGS\nWard/MN\nwardrobe/MDSG\nwardroom/MS\nwardship/M\nwards/I\nwarehouseman/M\nwarehouse/MGSRD\nWare/MG\nware/MS\nwarfare/SM\nWarfield/M\nwar/GSMD\nwarhead/MS\nWarhol/M\nwarhorse/SM\nwarily/U\nwarinesses/U\nwariness/MS\nWaring/M\nwarless\nwarlike\nwarlock/SM\nwarlord/MS\nwarmblooded\nwarmed/A\nwarmer/M\nwarmheartedness/SM\nwarmhearted/PY\nwarmish\nwarmness/MS\nwarmongering/M\nwarmonger/JGSM\nwarms/A\nwarmth/M\nwarmths\nwarm/YRDHPGZTS\nwarned/U\nwarner/M\nWarner/M\nwarn/GRDJS\nwarning/YM\nWarnock/M\nwarpaint\nwarpath/M\nwarpaths\nwarper/M\nwarplane/MS\nwarp/MRDGS\nwarranted/U\nwarranter/M\nwarrant/GSMDR\nwarranty/SDGM\nwarred/M\nwarrener/M\nWarren/M\nwarren/SZRM\nwarring/M\nwarrior/MS\nWarsaw/M\nwars/C\nwarship/MS\nwarthog/S\nwartime/SM\nwart/MDS\nwarty/RT\nWarwick/M\nwary/URPT\nWasatch/M\nwashable/S\nwash/AGSD\nwashbasin/SM\nwashboard/SM\nwashbowl/SM\nWashburn/M\nwashcloth/M\nwashcloths\nwashday/M\nwashed/U\nwasher/GDMS\nwasherwoman/M\nwasherwomen\nwashing/SM\nWashingtonian/S\nWashington/M\nWash/M\nWashoe/M\nwashout/SM\nwashrag/SM\nwashroom/MS\nwashstand/SM\nwashtub/MS\nwashy/RT\nwasn\'t\nWASP\nwaspishness/SM\nwaspish/PY\nWasp\'s\nwasp/SM\nwas/S\nwassail/GMDS\nWasserman/M\nWassermann/M\nwastage/SM\nwastebasket/SM\nwastefulness/S\nwasteful/YP\nwasteland/MS\nwastepaper/MS\nwaster/DG\nwaste/S\nwastewater\nwast/GZSRD\nwasting/Y\nwastrel/MS\nWatanabe/M\nwatchable/U\nwatchband/SM\nwatchdogged\nwatchdogging\nwatchdog/SM\nwatched/U\nwatcher/M\nwatchfulness/MS\nwatchful/PY\nwatch/JRSDGZB\nwatchmake/JRGZ\nwatchmaker/M\nwatchman/M\nwatchmen\nwatchpoints\nwatchtower/MS\nwatchword/MS\nwaterbird/S\nwaterborne\nWaterbury/M\nwatercolor/DMGS\nwatercolorist/SM\nwatercourse/SM\nwatercraft/M\nwatercress/SM\nwaterer/M\nwaterfall/SM\nwaterfowl/M\nwaterfront/SM\nWatergate/M\nwaterhole/S\nWaterhouse/M\nwateriness/SM\nwatering/M\nwater/JGSMRD\nwaterless\nwaterlily/S\nwaterline/S\nwaterlogged\nwaterloo\nWaterloo/SM\nwaterman/M\nwatermark/GSDM\nwatermelon/SM\nwatermill/S\nwaterproof/PGRDSJ\nwatershed/SM\nwaterside/MSR\nwatersider/M\nWaters/M\nwaterspout/MS\nwatertightness/M\nwatertight/P\nWatertown/M\nwaterway/MS\nwaterwheel/S\nwaterworks/M\nwatery/PRT\nWatkins\nWATS\nWatson/M\nwattage/SM\nWatteau/M\nWattenberg/M\nWatterson/M\nwattle/SDGM\nWatt/MS\nwatt/TMRS\nWatusi/M\nWat/ZM\nWaugh/M\nWaukesha/M\nWaunona/M\nWaupaca/M\nWaupun/M\nWausau/M\nWauwatosa/M\nwaveband/MS\nwaveform/SM\nwavefront/MS\nwaveguide/MS\nWaveland/M\nwavelength/M\nwavelengths\nwavelet/SM\nwavelike\nwavenumber\nwaver/GZRD\nwavering/YU\nWaverley/M\nWaverly/M\nWave/S\nwave/ZGDRS\nwavily\nwaviness/MS\nwavy/SRTP\nwaxer/M\nwaxiness/MS\nwax/MNDRSZG\nwaxwing/MS\nwaxwork/MS\nwaxy/PRT\nwayfarer/MS\nwayfaring/S\nwaylaid\nWayland/M\nWaylan/M\nwaylayer/M\nwaylay/GRSZ\nwayleave/MS\nWaylen/M\nWaylin/M\nWaylon/M\nWay/M\nwaymarked\nway/MS\nWayne/M\nWaynesboro/M\nwayside/MS\nwaywardness/S\nwayward/YP\nWC\nwe\nweakener/M\nweaken/ZGRD\nweakfish/SM\nweakish\nweakliness/M\nweakling/SM\nweakly/RTP\nweakness/MS\nweak/TXPYRN\nweal/MHS\nwealthiness/MS\nwealth/M\nwealths\nwealthy/PTR\nweaner/M\nweanling/M\nwean/RDGS\nweapon/GDMS\nweaponless\nweaponry/MS\nwearable/S\nwearer/M\nwearied/U\nwearily\nweariness/MS\nwearing/Y\nwearisomeness/M\nwearisome/YP\nwear/RBSJGZ\nwearying/Y\nweary/TGPRSD\nweasel/SGMDY\nweatherbeaten\nweathercock/SDMG\nweatherer/M\nWeatherford/M\nweathering/M\nweatherize/GSD\nweatherman/M\nweather/MDRYJGS\nweathermen\nweatherperson/S\nweatherproof/SGPD\nweatherstripped\nweatherstripping/S\nweatherstrip/S\nweaver/M\nWeaver/M\nweaves/A\nweave/SRDGZ\nweaving/A\nwebbed\nWebber/M\nwebbing/MS\nWebb/RM\nweber/M\nWeber/M\nWebern/M\nwebfeet\nwebfoot/M\nWeb/MR\nwebsite/S\nweb/SMR\nWebster/MS\nWebsterville/M\nwe\'d\nwedded/A\nWeddell/M\nwedder\nwedding/SM\nwedge/SDGM\nwedgie/RST\nWedgwood/M\nwedlock/SM\nWed/M\nWednesday/SM\nwed/SA\nweeder/M\nweediness/M\nweedkiller/M\nweedless\nwee/DRST\nweed/SGMRDZ\nweedy/TRP\nweeing\nweekday/MS\nweekender/M\nweekend/SDRMG\nweekly/S\nweeknight/SM\nWeeks/M\nweek/SYM\nweenie/M\nween/SGD\nweeny/RSMT\nweeper/M\nweep/SGZJRD\nweepy/RST\nweevil/MS\nweft/SGMD\nWehr/M\nWeibull/M\nWeidar/M\nWeider/M\nWeidman/M\nWeierstrass/M\nweighed/UA\nweigher/M\nweigh/RDJG\nweighs/A\nweighted/U\nweighter/M\nweightily\nweightiness/SM\nweighting/M\nweight/JMSRDG\nweightlessness/SM\nweightless/YP\nweightlifter/S\nweightlifting/MS\nweighty/TPR\nWeill/M\nWei/M\nWeinberg/M\nWeiner/M\nWeinstein/M\nweirdie/SM\nweirdness/MS\nweirdo/SM\nweird/YRDPGTS\nweir/SDMG\nWeisenheimer/M\nWeiss/M\nWeissman/M\nWeissmuller/M\nWeizmann/M\nWelbie/M\nWelby/M\nWelcher/M\nWelches\nwelcomeness/M\nwelcome/PRSDYG\nwelcoming/U\nwelder/M\nWeldon/M\nweld/SBJGZRD\nWeldwood/M\nwelfare/SM\nwelkin/SM\nwe\'ll\nWelland/M\nwellbeing/M\nWeller/M\nWellesley/M\nWelles/M\nwellhead/SM\nWellington/MS\nwellington/S\nWellman/M\nwellness/MS\nwell/SGPD\nWells/M\nwellspring/SM\nWellsville/M\nWelmers/M\nWelsh\nwelsher/M\nWelshman/M\nWelshmen\nwelsh/RSDGZ\nWelshwoman/M\nWelshwomen\nwelter/GD\nwelterweight/MS\nwelt/GZSMRD\nwencher/M\nwench/GRSDM\nWendall/M\nWenda/M\nwend/DSG\nWendeline/M\nWendell/M\nWendel/M\nWendie/M\nWendi/M\nWendye/M\nWendy/M\nwen/M\nWenonah/M\nWenona/M\nwent\nWentworth/M\nwept/U\nwere\nwe\'re\nweren\'t\nwerewolf/M\nwerewolves\nWerner/M\nWernher/M\nWerther/M\nwerwolf\'s\nWes\nWesleyan\nWesley/M\nWessex/M\nWesson/M\nwestbound\nWestbrooke/M\nWestbrook/M\nWestchester/M\nwester/DYG\nwesterly/S\nwesterner/M\nwesternization/MS\nwesternize/GSD\nwesternmost\nWestern/ZRS\nwestern/ZSR\nWestfield/M\nWesthampton/M\nWestinghouse/M\nwesting/M\nWestleigh/M\nWestley/M\nWestminster/M\nWestmore/M\nWest/MS\nWeston/M\nWestphalia/M\nWestport/M\nwest/RDGSM\nwestward/S\nWestwood/M\nwetback/MS\nwetland/S\nwetness/MS\nwet/SPY\nwettable\nwetter/S\nwettest\nwetting\nwe\'ve\nWeyden/M\nWeyerhauser/M\nWeylin/M\nWezen/M\nWFF\nwhacker/M\nwhack/GZRDS\nwhaleboat/MS\nwhalebone/SM\nwhale/GSRDZM\nWhalen/M\nwhaler/M\nwhaling/M\nwhammed\nwhamming/M\nwham/MS\nwhammy/S\nwharf/SGMD\nWharton/M\nwharves\nwhatchamacallit/MS\nwhat\'d\nwhatever\nwhat/MS\nwhatnot/MS\nwhat\'re\nwhatsoever\nwheal/MS\nwheatgerm\nWheaties/M\nWheatland/M\nwheat/NMXS\nWheaton/M\nWheatstone/M\nwheedle/ZDRSG\nwheelbarrow/GSDM\nwheelbase/MS\nwheelchair/MS\nwheeler/M\nWheeler/M\nwheelhouse/SM\nwheelie/MS\nwheeling/M\nWheeling/M\nWheelock/M\nwheel/RDMJSGZ\nwheelwright/MS\nwhee/S\nwheeze/SDG\nwheezily\nwheeziness/SM\nwheezy/PRT\nWhelan/M\nwhelk/MDS\nWheller/M\nwhelm/DGS\nwhelp/DMGS\nwhence/S\nwhenever\nwhen/S\nwhensoever\nwhereabout/S\nwhereas/S\nwhereat\nwhereby\nwhere\'d\nwherefore/MS\nwherein\nwhere/MS\nwhereof\nwhereon\nwhere\'re\nwheresoever\nwhereto\nwhereupon\nwherever\nwherewith\nwherewithal/SM\nwherry/DSGM\nwhether\nwhet/S\nwhetstone/MS\nwhetted\nwhetting\nwhew/GSD\nwhey/MS\nwhich\nwhichever\nwhiff/GSMD\nwhiffle/DRSG\nwhiffler/M\nwhiffletree/SM\nwhig/S\nWhig/SM\nwhile/GSD\nwhilom\nwhilst\nwhimmed\nwhimming\nwhimper/DSG\nwhimsey\'s\nwhimsicality/MS\nwhimsical/YP\nwhim/SM\nwhimsy/TMDRS\nwhine/GZMSRD\nwhining/Y\nwhinny/GTDRS\nwhiny/RT\nwhipcord/SM\nwhiplash/SDMG\nWhippany/M\nwhipped\nwhipper/MS\nwhippersnapper/MS\nwhippet/MS\nwhipping/SM\nWhipple/M\nwhippletree/SM\nwhippoorwill/SM\nwhipsaw/GDMS\nwhips/M\nwhip/SM\nwhirligig/MS\nwhirlpool/MS\nwhirl/RDGS\nwhirlwind/MS\nwhirlybird/MS\nwhirly/MS\nwhirred\nwhirring\nwhir/SY\nwhisker/DM\nwhiskery\nwhiskey/SM\nwhisk/GZRDS\nwhisperer/M\nwhisper/GRDJZS\nwhispering/YM\nwhist/GDMS\nwhistleable\nwhistle/DRSZG\nwhistler/M\nWhistler/M\nwhistling/M\nWhitaker/M\nWhitby/M\nWhitcomb/M\nwhitebait/M\nwhitecap/MS\nwhiteface/M\nWhitefield/M\nwhitefish/SM\nWhitehall/M\nWhitehead/M\nwhitehead/S\nWhitehorse/M\nWhiteleaf/M\nWhiteley/M\nWhite/MS\nwhitener/M\nwhiteness/MS\nwhitening/M\nwhiten/JZDRG\nwhiteout/S\nwhite/PYS\nwhitespace\nwhitetail/S\nwhitewall/SM\nwhitewash/GRSDM\nwhitewater\nWhitewater/M\nwhitey/MS\nWhitfield/M\nwhither/DGS\nwhitier\nwhitiest\nwhiting/M\nwhitish\nWhitley/M\nWhitlock/M\nWhit/M\nWhitman/M\nWhitney/M\nwhit/SJGTXMRND\nWhitsunday/MS\nWhittaker/M\nwhitter\nWhittier\nwhittle/JDRSZG\nwhittler/M\nwhiz\nwhizkid\nwhizzbang/S\nwhizzed\nwhizzes\nwhizzing\nWHO\nwhoa/S\nwho\'d\nwhodunit/SM\nwhoever\nwholegrain\nwholeheartedness/MS\nwholehearted/PY\nwholemeal\nwholeness/S\nwholesale/GZMSRD\nwholesaler/M\nwholesomeness/USM\nwholesome/UYP\nwhole/SP\nwholewheat\nwho\'ll\nwholly\nwhom\nwho/M\nwhomever\nwhomsoever\nwhoopee/S\nwhooper/M\nwhoop/SRDGZ\nwhoosh/DSGM\nwhop\nwhopper/MS\nwhopping/S\nwho\'re\nwhorehouse/SM\nwhoreish\nwhore/SDGM\nwhorish\nwhorl/SDM\nwhose\nwhoso\nwhosoever\nwho\'ve\nwhy\nwhys\nWI\nWiatt/M\nWichita/M\nwickedness/MS\nwicked/RYPT\nwicker/M\nwickerwork/MS\nwicketkeeper/SM\nwicket/SM\nwick/GZRDMS\nwicking/M\nwidemouthed\nwidener/M\nwideness/S\nwiden/SGZRD\nwide/RSYTP\nwidespread\nwidgeon\'s\nwidget/SM\nwidower/M\nwidowhood/S\nwidow/MRDSGZ\nwidth/M\nwidths\nwidthwise\nWieland/M\nwielder/M\nwield/GZRDS\nWiemar/M\nwiener/SM\nwienie/SM\nWier/M\nWiesel/M\nwife/DSMYG\nwifeless\nwifely/RPT\nwigeon/MS\nwigged\nwigging/M\nWiggins\nwiggler/M\nwiggle/RSDGZ\nwiggly/RT\nwight/SGDM\nwiglet/S\nwigmaker\nwig/MS\nWigner/M\nwigwagged\nwigwagging\nwigwag/S\nwigwam/MS\nWilberforce/M\nWilbert/M\nWilbur/M\nWilburn/M\nWilburt/M\nWilcox/M\nWilda/M\nwildcat/SM\nwildcatted\nwildcatter/MS\nwildcatting\nwildebeest/SM\nWilde/MR\nWilden/M\nWilder/M\nwilderness/SM\nwilder/P\nwildfire/MS\nwildflower/S\nwildfowl/M\nwilding/M\nwildlife/M\nwildness/MS\nWildon/M\nwild/SPGTYRD\nwile/DSMG\nWileen/M\nWilek/M\nWiley/M\nWilford/M\nWilfred/M\nWilfredo/M\nWilfrid/M\nwilfulness\'s\nWilhelmina/M\nWilhelmine/M\nWilhelm/M\nWilie/M\nwilily\nwiliness/MS\nWilkerson/M\nWilkes/M\nWilkins/M\nWilkinson/M\nWillabella/M\nWilla/M\nWillamette/M\nWillamina/M\nWillard/M\nWillcox/M\nWilldon/M\nwilled/U\nWillem/M\nWillemstad/M\nwiller/M\nWilletta/M\nWillette/M\nWilley/M\nwillfulness/S\nwillful/YP\nWilliamsburg/M\nWilliam/SM\nWilliamson/M\nWillied/M\nWillie/M\nwillies\nWilli/MS\nwillinger\nwillingest\nwillingness\'s\nwillingness/US\nwilling/UYP\nWillisson/M\nwilliwaw/MS\nWill/M\nWilloughby/M\nwillower/M\nWillow/M\nwillow/RDMSG\nwillowy/TR\nwillpower/MS\nwill/SGJRD\nWilly/SDM\nWillyt/M\nWilma/M\nWilmar/M\nWilmer/M\nWilmette/M\nWilmington/M\nWilona/M\nWilone/M\nWilow/M\nWilshire/M\nWilsonian\nWilson/M\nwilt/DGS\nWilt/M\nWilton/M\nwily/PTR\nWimbledon/M\nwimp/GSMD\nwimpish\nwimple/SDGM\nwimpy/RT\nwince/SDG\nWinchell/M\nwincher/M\nwinchester/M\nWinchester/MS\nwinch/GRSDM\nwindbag/SM\nwindblown\nwindbreak/MZSR\nwindburn/GSMD\nwinded\nwinder/UM\nwindfall/SM\nwindflower/MS\nWindham/M\nWindhoek/M\nwindily\nwindiness/SM\nwinding/MS\nwindjammer/SM\nwindlass/GMSD\nwindless/YP\nwindmill/GDMS\nwindow/DMGS\nwindowless\nwindowpane/SM\nWindows\nwindowsill/SM\nwindpipe/SM\nwindproof\nwindrow/GDMS\nwind\'s\nwinds/A\nwindscreen/MS\nwindshield/SM\nwindsock/MS\nWindsor/MS\nwindstorm/MS\nwindsurf/GZJSRD\nwindswept\nwindup/MS\nwind/USRZG\nWindward/M\nwindward/SY\nWindy/M\nwindy/TPR\nwineglass/SM\nwinegrower/SM\nWinehead/M\nwinemake\nwinemaster\nwine/MS\nwinery/MS\nWinesap/M\nwineskin/M\nWinfield/M\nWinfred/M\nWinfrey/M\nwingback/M\nwingding/MS\nwingeing\nwinger/M\nwing/GZRDM\nwingless\nwinglike\nwingman\nwingmen\nwingspan/SM\nwingspread/MS\nwingtip/S\nWinifield/M\nWinifred/M\nWini/M\nwinker/M\nwink/GZRDS\nwinking/U\nWinkle/M\nwinkle/SDGM\nwinless\nWin/M\nwinnable\nWinnah/M\nWinna/M\nWinnebago/M\nWinne/M\nwinner/MS\nWinnetka/M\nWinnie/M\nWinnifred/M\nWinni/M\nwinning/SY\nWinnipeg/M\nWinn/M\nwinnow/SZGRD\nWinny/M\nWinograd/M\nwino/MS\nWinonah/M\nWinona/M\nWinooski/M\nWinsborough/M\nWinsett/M\nWinslow/M\nwinsomeness/SM\nwinsome/PRTY\nWinston/M\nwinterer/M\nwintergreen/SM\nwinterize/GSD\nWinters\nwinter/SGRDYM\nwintertime/MS\nWinthrop/M\nwintriness/M\nwintry/TPR\nwiny/RT\nwin/ZGDRS\nwipe/DRSZG\nwiper/M\nwirehair/MS\nwireless/MSDG\nwireman/M\nwiremen\nwirer/M\nwire\'s\nwires/A\nwiretap/MS\nwiretapped\nwiretapper/SM\nwiretapping\nwire/UDA\nwiriness/S\nwiring/SM\nwiry/RTP\nWisc\nWisconsinite/SM\nWisconsin/M\nwisdoms\nwisdom/UM\nwiseacre/MS\nwisecrack/GMRDS\nwised\nwisely/TR\nWise/M\nwiseness\nwisenheimer/M\nWisenheimer/M\nwises\nwise/URTY\nwishbone/MS\nwishfulness/M\nwishful/PY\nwish/GZSRD\nwishy\nwising\nWis/M\nwisp/MDGS\nwispy/RT\nwist/DGS\nwisteria/SM\nwistfulness/MS\nwistful/PY\nwitchcraft/SM\nwitchdoctor/S\nwitchery/MS\nwitch/SDMG\nwithal\nwithdrawal/MS\nwithdrawer/M\nwithdrawnness/M\nwithdrawn/P\nwithdraw/RGS\nwithdrew\nwithe/M\nwither/GDJ\nwithering/Y\nWitherspoon/M\nwith/GSRDZ\nwithheld\nwithholder/M\nwithhold/SJGZR\nwithin/S\nwithout/S\nwiths\nwithstand/SG\nwithstood\nwitlessness/MS\nwitless/PY\nWit/M\nwitness/DSMG\nwitnessed/U\nwit/PSM\nwitted\nwitter/G\nWittgenstein/M\nwitticism/MS\nWittie/M\nwittily\nwittiness/SM\nwittings\nwitting/UY\nWitt/M\nWitty/M\nwitty/RTP\nWitwatersrand/M\nwive/GDS\nwives/M\nwizard/MYS\nwizardry/MS\nwizen/D\nwiz\'s\nwk/Y\nWm/M\nWNW\nwoad/MS\nwobble/GSRD\nwobbler/M\nwobbliness/S\nwobbly/PRST\nWodehouse/M\nwoebegone/P\nwoefuller\nwoefullest\nwoefulness/SM\nwoeful/PY\nwoe/PSM\nwoke\nwok/SMN\nWolcott/M\nwold/MS\nWolfe/M\nwolfer/M\nWolff/M\nWolfgang/M\nwolfhound/MS\nWolfie/M\nwolfishness/M\nwolfish/YP\nWolf/M\nwolfram/MS\nwolf/RDMGS\nWolfy/M\nWollongong/M\nWollstonecraft/M\nWolsey/M\nWolverhampton/M\nwolverine/SM\nWolverton/M\nwolves/M\nwoman/GSMYD\nwomanhood/MS\nwomanish\nwomanized/U\nwomanizer/M\nwomanize/RSDZG\nwomanizes/U\nwomankind/M\nwomanlike\nwomanliness/SM\nwomanly/PRT\nwombat/MS\nwomb/SDM\nwomenfolk/MS\nwomen/MS\nwonderer/M\nwonderfulness/SM\nwonderful/PY\nwonder/GLRDMS\nwondering/Y\nwonderland/SM\nwonderment/SM\nwondrousness/M\nwondrous/YP\nWong/M\nwonk/S\nwonky/RT\nwonned\nwonning\nwon/SG\nwon\'t\nwontedness/MU\nwonted/PUY\nwont/SGMD\nWoodard/M\nWoodberry/M\nwoodbine/SM\nwoodblock/S\nWoodbury/M\nwoodcarver/S\nwoodcarving/MS\nwoodchopper/SM\nwoodchuck/MS\nwoodcock/MS\nwoodcraft/MS\nwoodcut/SM\nwoodcutter/MS\nwoodcutting/MS\nwoodenness/SM\nwooden/TPRY\nwoodgrain/G\nwoodhen\nWoodhull/M\nWoodie/M\nwoodiness/MS\nwoodland/SRM\nWoodlawn/M\nwoodlice\nwoodlot/S\nwoodlouse/M\nwoodman/M\nWoodman/M\nwoodmen\nwoodpecker/SM\nwoodpile/SM\nWoodrow/M\nwoodruff/M\nwoo/DRZGS\nwoodshedded\nwoodshedding\nwoodshed/SM\nwoodside\nWood/SM\nwoodsman/M\nwoodsmen\nwood/SMNDG\nwoodsmoke\nwoods/R\nWoodstock/M\nwoodsy/TRP\nWoodward/MS\nwoodwind/S\nwoodworker/M\nwoodworking/M\nwoodwork/SMRGZJ\nwoodworm/M\nwoodyard\nWoody/M\nwoody/TPSR\nwoofer/M\nwoof/SRDMGZ\nWoolf/M\nwoolgatherer/M\nwoolgathering/M\nwoolgather/RGJ\nwoolliness/MS\nwoolly/RSPT\nWoolongong/M\nwool/SMYNDX\nWoolworth/M\nWoonsocket/M\nWooster/M\nWooten/M\nwoozily\nwooziness/MS\nwoozy/RTP\nwop/MS!\nWorcestershire/M\nWorcester/SM\nwordage/SM\nword/AGSJD\nwordbook/MS\nWorden/M\nwordily\nwordiness/SM\nwording/AM\nwordless/Y\nwordplay/SM\nword\'s\nWordsworth/M\nwordy/TPR\nwore\nworkability\'s\nworkability/U\nworkableness/M\nworkable/U\nworkably\nworkaday\nworkaholic/S\nworkaround/SM\nworkbench/MS\nworkbook/SM\nworkday/SM\nworked/A\nworker/M\nworkfare/S\nworkforce/S\nwork/GZJSRDMB\nworkhorse/MS\nworkhouse/SM\nworking/M\nworkingman/M\nworkingmen\nworkingwoman/M\nworkingwomen\nworkload/SM\nworkmanlike\nWorkman/M\nworkman/MY\nworkmanship/MS\nworkmate/S\nworkmen/M\nworkout/SM\nworkpiece/SM\nworkplace/SM\nworkroom/MS\nworks/A\nworksheet/S\nworkshop/MS\nworkspace/S\nworkstation/MS\nworktable/SM\nworktop/S\nworkup/S\nworkweek/SM\nworldlier\nworldliest\nworldliness/USM\nworldly/UP\nworldwide\nworld/ZSYM\nwormer/M\nwormhole/SM\nworm/SGMRD\nWorms/M\nwormwood/SM\nwormy/RT\nworn/U\nworried/Y\nworrier/M\nworriment/MS\nworrisome/YP\nworrying/Y\nworrywart/SM\nworry/ZGSRD\nworsen/GSD\nworse/SR\nworshiper/M\nworshipfulness/M\nworshipful/YP\nworship/ZDRGS\nworsted/MS\nworst/SGD\nworth/DG\nworthily/U\nworthinesses/U\nworthiness/SM\nWorthington/M\nworthlessness/SM\nworthless/PY\nWorth/M\nworths\nworthwhile/P\nWorthy/M\nworthy/UTSRP\nwort/SM\nwost\nwot\nWotan/M\nwouldn\'t\nwould/S\nwouldst\nwould\'ve\nwound/AU\nwounded/U\nwounder\nwounding\nwounds\nwound\'s\nwove/A\nwoven/AU\nwovens\nwow/SDG\nWozniak/M\nWP\nwpm\nwrack/SGMD\nwraith/M\nwraiths\nWrangell/M\nwrangle/GZDRS\nwrangler/M\nwraparound/S\nwrap/MS\nwrapped/U\nwrapper/MS\nwrapping/SM\nwraps/U\nwrasse/SM\nwrathful/YP\nwrath/GDM\nwraths\nwreak/SDG\nwreathe\nwreath/GMDS\nwreaths\nwreckage/MS\nwrecker/M\nwreck/GZRDS\nwrenching/Y\nwrench/MDSG\nwren/MS\nWren/MS\nWrennie/M\nwrester/M\nwrestle/JGZDRS\nwrestler/M\nwrestling/M\nwrest/SRDG\nwretchedness/SM\nwretched/TPYR\nwretch/MDS\nwriggle/DRSGZ\nwriggler/M\nwriggly/RT\nWright/M\nwright/MS\nWrigley/M\nwringer/M\nwring/GZRS\nwrinkled/U\nwrinkle/GMDS\nwrinkly/RST\nwristband/SM\nwrist/MS\nwristwatch/MS\nwritable/U\nwrite/ASBRJG\nwriter/MA\nwriteup\nwrithe/SDG\nwriting/M\nwrit/MRSBJGZ\nwritten/UA\nWroclaw\nwrongdoer/MS\nwrongdoing/MS\nwronger/M\nwrongfulness/MS\nwrongful/PY\nwrongheadedness/MS\nwrongheaded/PY\nwrongness/MS\nwrong/PSGTYRD\nWronskian/M\nwrote/A\nwroth\nwrought/I\nwrung\nwry/DSGY\nwryer\nwryest\nwryness/SM\nW\'s\nWSW\nwt\nW/T\nWuhan/M\nWu/M\nWurlitzer/M\nwurst/SM\nwuss/S\nwussy/TRS\nWV\nWW\nWWI\nWWII\nWWW\nw/XTJGV\nWY\nWyatan/M\nWyatt/M\nWycherley/M\nWycliffe/M\nWye/MH\nWyeth/M\nWylie/M\nWylma/M\nWyman/M\nWyndham/M\nWyn/M\nWynne/M\nWynnie/M\nWynn/M\nWynny/M\nWyo/M\nWyomingite/SM\nWyoming/M\nWYSIWYG\nx\nX\nXanadu\nXanthippe/M\nXanthus/M\nXaviera/M\nXavier/M\nXebec/M\nXe/M\nXEmacs/M\nXenakis/M\nXena/M\nXenia/M\nXenix/M\nxenon/SM\nxenophobe/MS\nxenophobia/SM\nxenophobic\nXenophon/M\nXenos\nxerographic\nxerography/MS\nxerox/GSD\nXerox/MGSD\nXerxes/M\nXever/M\nXhosa/M\nXi\'an\nXian/S\nXiaoping/M\nxii\nxiii\nxi/M\nXimenes/M\nXimenez/M\nXimian/SM\nXingu/M\nxis\nxiv\nxix\nXL\nXmas/SM\nXML\nXochipilli/M\nXOR\nX\'s\nXS\nxterm/M\nXuzhou/M\nxv\nxvi\nxvii\nxviii\nxx\nXXL\nxylem/SM\nxylene/M\nXylia/M\nXylina/M\nxylophone/MS\nxylophonist/S\nXymenes/M\nY\nya\nyacc/M\nYacc/M\nyachting/M\nyachtsman\nyachtsmen\nyachtswoman/M\nyachtswomen\nyacht/ZGJSDM\nyack\'s\nYagi/M\nyahoo/MS\nYahweh/M\nYakima/M\nyakked\nyakking\nyak/SM\nYakut/M\nYakutsk/M\nYale/M\nYalies/M\ny\'all\nYalonda/M\nYalow/M\nYalta/M\nYalu/M\nYamaha/M\nyammer/RDZGS\nYamoussoukro\nyam/SM\nYanaton/M\nYance/M\nYancey/M\nYancy/M\nYang/M\nYangon\nyang/S\nYangtze/M\nYankee/SM\nyank/GDS\nYank/MS\nYaounde/M\nyapped\nyapping\nyap/S\nYaqui/M\nyardage/SM\nyardarm/SM\nYardley/M\nYard/M\nyardman/M\nyardmaster/S\nyardmen\nyard/SMDG\nyardstick/SM\nyarmulke/SM\nyarn/SGDM\nYaroslavl/M\nyarrow/MS\nYasmeen/M\nYasmin/M\nYates\nyaw/DSG\nyawl/SGMD\nyawner/M\nyawn/GZSDR\nyawning/Y\nYb/M\nyd\nYeager/M\nyeah\nyeahs\nyearbook/SM\nyearling/M\nyearlong\nyearly/S\nyearner/M\nyearning/MY\nyearn/JSGRD\nyear/YMS\nyea/S\nyeastiness/M\nyeast/SGDM\nyeasty/PTR\nYeats/M\nyecch\nyegg/MS\nYehudi/M\nYehudit/M\nYekaterinburg/M\nYelena/M\nyell/GSDR\nyellowhammers\nyellowish\nYellowknife/M\nyellowness/MS\nYellowstone/M\nyellow/TGPSRDM\nyellowy\nyelper/M\nyelp/GSDR\nYeltsin\nYemeni/S\nYemenite/SM\nYemen/M\nYenisei/M\nyenned\nyenning\nyen/SM\nYentl/M\nyeomanry/MS\nyeoman/YM\nyeomen\nyep/S\nYerevan/M\nYerkes/M\nYesenia/M\nyeshiva/SM\nyes/S\nyessed\nyessing\nyesterday/MS\nyesteryear/SM\nyet\nye/T\nyeti/SM\nYetta/M\nYettie/M\nYetty/M\nYevette/M\nYevtushenko/M\nyew/SM\ny/F\nYggdrasil/M\nYiddish/M\nyielded/U\nyielding/U\nyield/JGRDS\nyikes\nyin/S\nyipe/S\nyipped\nyippee/S\nyipping\nyip/S\nYMCA\nYMHA\nYmir/M\nYMMV\nYnes/M\nYnez/M\nyo\nYoda/M\nyodeler/M\nyodel/SZRDG\nYoder/M\nyoga/MS\nyoghurt\'s\nyogi/MS\nyogurt/SM\nyoke/DSMG\nyoked/U\nyokel/SM\nyokes/U\nyoking/U\nYoknapatawpha/M\nYokohama/M\nYoko/M\nYolanda/M\nYolande/M\nYolane/M\nYolanthe/M\nyolk/DMS\nyon\nyonder\nYong/M\nYonkers/M\nyore/MS\nYorgo/MS\nYorick/M\nYorke/M\nYorker/M\nyorker/SM\nYorkshire/MS\nYorktown/M\nYork/ZRMS\nYoruba/M\nYosemite/M\nYoshiko/M\nYoshi/M\nYost/M\nyou\'d\nyou\'ll\nyoungish\nYoung/M\nyoungster/MS\nYoungstown/M\nyoung/TRYP\nyou\'re\nyour/MS\nyourself\nyourselves\nyou/SH\nyouthfulness/SM\nyouthful/YP\nyouths\nyouth/SM\nyou\'ve\nYovonnda/M\nyow\nyowl/GSD\nYpres/M\nYpsilanti/M\nyr\nyrs\nY\'s\nYsabel/M\nYT\nytterbium/MS\nyttrium/SM\nyuan/M\nYuba/M\nYucatan\nyucca/MS\nyuck/GSD\nyucky/RT\nYugo/M\nYugoslavia/M\nYugoslavian/S\nYugoslav/M\nYuh/M\nYuki/M\nyukked\nyukking\nYukon/M\nyuk/S\nyule/MS\nYule/MS\nyuletide/MS\nYuletide/S\nYul/M\nYulma/M\nyum\nYuma/M\nyummy/TRS\nYunnan/M\nyuppie/SM\nyup/S\nYurik/M\nYuri/M\nyurt/SM\nYves/M\nYvette/M\nYvon/M\nYvonne/M\nYvor/M\nYWCA\nYWHA\nZabrina/M\nZaccaria/M\nZachariah/M\nZacharia/SM\nZacharie/M\nZachary/M\nZacherie/M\nZachery/M\nZach/M\nZackariah/M\nZack/M\nzagging\nZagreb/M\nzag/S\nZahara/M\nZaire/M\nZairian/S\nZak/M\nZambezi/M\nZambia/M\nZambian/S\nZamboni\nZamenhof/M\nZamora/M\nZandra/M\nZane/M\nZaneta/M\nzaniness/MS\nZan/M\nZanuck/M\nzany/PDSRTG\nZanzibar/M\nZapata/M\nZaporozhye/M\nZappa/M\nzapped\nzapper/S\nzapping\nzap/S\nZarah/M\nZara/M\nZared/M\nZaria/M\nZarla/M\nZealand/M\nzeal/MS\nzealot/MS\nzealotry/MS\nzealousness/SM\nzealous/YP\nZea/M\nZebadiah/M\nZebedee/M\nZeb/M\nzebra/MS\nZebulen/M\nZebulon/M\nzebu/SM\nZechariah/M\nZedekiah/M\nZed/M\nZedong/M\nzed/SM\nZeffirelli/M\nZeiss/M\nzeitgeist/S\nZeke/M\nZelda/M\nZelig/M\nZellerbach/M\nZelma/M\nZena/M\nZenger/M\nZenia/M\nzenith/M\nzeniths\nZen/M\nZennist/M\nZeno/M\nZephaniah/M\nzephyr/MS\nZephyrus/M\nZeppelin\'s\nzeppelin/SM\nZerk/M\nzeroed/M\nzeroing/M\nzero/SDHMG\nzestfulness/MS\nzestful/YP\nzest/MDSG\nzesty/RT\nzeta/SM\nzeugma/M\nZeus/M\nZhdanov/M\nZhengzhou\nZhivago/M\nZhukov/M\nZia/M\nZibo/M\nZiegfeld/MS\nZiegler/M\nzig\nzigged\nzigging\nZiggy/M\nzigzagged\nzigzagger\nzigzagging\nzigzag/MS\nzilch/S\nzillion/MS\nZilvia/M\nZimbabwean/S\nZimbabwe/M\nZimmerman/M\nzincked\nzincking\nzinc/MS\nzing/GZDRM\nzingy/RT\nzinnia/SM\nZionism/MS\nZionist/MS\nZion/SM\nzip/MS\nzipped/U\nzipper/GSDM\nzipping/U\nzippy/RT\nzips/U\nzirconium/MS\nzircon/SM\nZita/M\nZitella/M\nzither/SM\nzit/S\nzloty/SM\nZn/M\nzodiacal\nzodiac/SM\nZoe/M\nZola/M\nZollie/M\nZolly/M\nZomba/M\nzombie/SM\nzombi\'s\nzonal/Y\nZonda/M\nZondra/M\nzoned/A\nzone/MYDSRJG\nzones/A\nzoning/A\nzonked\nZonnya/M\nzookeepers\nzoological/Y\nzoologist/SM\nzoology/MS\nzoom/DGS\nzoophyte/SM\nzoophytic\nzoo/SM\nZorah/M\nZora/M\nZorana/M\nZorina/M\nZorine/M\nZorn/M\nZoroaster/M\nZoroastrianism/MS\nZoroastrian/S\nZorro/M\nZosma/M\nzounds/S\nZr/M\nZs\nZsazsa/M\nZsigmondy/M\nz/TGJ\nZubenelgenubi/M\nZubeneschamali/M\nzucchini/SM\nZukor/M\nZulema/M\nZululand/M\nZulu/MS\nZuni/S\nZ�rich/M\nZuzana/M\nzwieback/MS\nZwingli/M\nZworykin/M\nZ/X\nzydeco/S\nzygote/SM\nzygotic\nzymurgy/S\n';});

define('text!dictionaries/en_US.aff',[],function () { return 'SET ISO8859-1\nTRY esianrtolcdugmphbyfvkwzESIANRTOLCDUGMPHBYFVKWZ\'\nNOSUGGEST !\n\n# ordinal numbers\nCOMPOUNDMIN 1\n# only in compounds: 1th, 2th, 3th\nONLYINCOMPOUND c\n# compound rules:\n# 1. [0-9]*1[0-9]th (10th, 11th, 12th, 56714th, etc.)\n# 2. [0-9]*[02-9](1st|2nd|3rd|[4-9]th) (21st, 22nd, 123rd, 1234th, etc.)\nCOMPOUNDRULE 2\nCOMPOUNDRULE n*1t\nCOMPOUNDRULE n*mp\nWORDCHARS 0123456789\n\nPFX A Y 1\nPFX A   0     re         .\n\nPFX I Y 1\nPFX I   0     in         .\n\nPFX U Y 1\nPFX U   0     un         .\n\nPFX C Y 1\nPFX C   0     de          .\n\nPFX E Y 1\nPFX E   0     dis         .\n\nPFX F Y 1\nPFX F   0     con         .\n\nPFX K Y 1\nPFX K   0     pro         .\n\nSFX V N 2\nSFX V   e     ive        e\nSFX V   0     ive        [^e]\n\nSFX N Y 3\nSFX N   e     ion        e\nSFX N   y     ication    y \nSFX N   0     en         [^ey] \n\nSFX X Y 3\nSFX X   e     ions       e\nSFX X   y     ications   y\nSFX X   0     ens        [^ey]\n\nSFX H N 2\nSFX H   y     ieth       y\nSFX H   0     th         [^y] \n\nSFX Y Y 1\nSFX Y   0     ly         .\n\nSFX G Y 2\nSFX G   e     ing        e\nSFX G   0     ing        [^e] \n\nSFX J Y 2\nSFX J   e     ings       e\nSFX J   0     ings       [^e]\n\nSFX D Y 4\nSFX D   0     d          e\nSFX D   y     ied        [^aeiou]y\nSFX D   0     ed         [^ey]\nSFX D   0     ed         [aeiou]y\n\nSFX T N 4\nSFX T   0     st         e\nSFX T   y     iest       [^aeiou]y\nSFX T   0     est        [aeiou]y\nSFX T   0     est        [^ey]\n\nSFX R Y 4\nSFX R   0     r          e\nSFX R   y     ier        [^aeiou]y\nSFX R   0     er         [aeiou]y\nSFX R   0     er         [^ey]\n\nSFX Z Y 4\nSFX Z   0     rs         e\nSFX Z   y     iers       [^aeiou]y\nSFX Z   0     ers        [aeiou]y\nSFX Z   0     ers        [^ey]\n\nSFX S Y 4\nSFX S   y     ies        [^aeiou]y\nSFX S   0     s          [aeiou]y\nSFX S   0     es         [sxzh]\nSFX S   0     s          [^sxzhy]\n\nSFX P Y 3\nSFX P   y     iness      [^aeiou]y\nSFX P   0     ness       [aeiou]y\nSFX P   0     ness       [^y]\n\nSFX M Y 1\nSFX M   0     \'s         .\n\nSFX B Y 3\nSFX B   0     able       [^aeiou]\nSFX B   0     able       ee\nSFX B   e     able       [^aeiou]e\n\nSFX L Y 1\nSFX L   0     ment       .\n\nREP 88\nREP a ei\nREP ei a\nREP a ey\nREP ey a\nREP ai ie\nREP ie ai\nREP are air\nREP are ear\nREP are eir\nREP air are\nREP air ere\nREP ere air\nREP ere ear\nREP ere eir\nREP ear are\nREP ear air\nREP ear ere\nREP eir are\nREP eir ere\nREP ch te\nREP te ch\nREP ch ti\nREP ti ch\nREP ch tu\nREP tu ch\nREP ch s\nREP s ch\nREP ch k\nREP k ch\nREP f ph\nREP ph f\nREP gh f\nREP f gh\nREP i igh\nREP igh i\nREP i uy\nREP uy i\nREP i ee\nREP ee i\nREP j di\nREP di j\nREP j gg\nREP gg j\nREP j ge\nREP ge j\nREP s ti\nREP ti s\nREP s ci\nREP ci s\nREP k cc\nREP cc k\nREP k qu\nREP qu k\nREP kw qu\nREP o eau\nREP eau o\nREP o ew\nREP ew o\nREP oo ew\nREP ew oo\nREP ew ui\nREP ui ew\nREP oo ui\nREP ui oo\nREP ew u\nREP u ew\nREP oo u\nREP u oo\nREP u oe\nREP oe u\nREP u ieu\nREP ieu u\nREP ue ew\nREP ew ue\nREP uff ough\nREP oo ieu\nREP ieu oo\nREP ier ear\nREP ear ier\nREP ear air\nREP air ear\nREP w qu\nREP qu w\nREP z ss\nREP ss z\nREP shun tion\nREP shun sion\nREP shun cion\n';});

define('extensions/spellCheck',[
    "jquery",
    "underscore",
    "crel",
    "utils",
    "classes/Extension",
    "typo-js",
    "xregexp",
    "text!bower-libs/Typo.js/typo/typo.js",
    "text!workers/spellCheckWorker.js",
    "text!dictionaries/en_US.dic",
    "text!dictionaries/en_US.aff",
    "text!html/tocSettingsBlock.html",
    ], function($, _, crel, utils, Extension, Typo, XRegExp, typoJS, spellCheckWorkerJS, dic, aff, tocSettingsBlockHTML) {

    var spellCheck = new Extension("spellCheck", "Spell Check", true, true, true);
    spellCheck.settingsBlock = tocSettingsBlockHTML;

    // Create a web worker
    var worker = new Worker('res/worker.js');
    worker.postMessage(spellCheckWorkerJS);
    worker.postMessage(JSON.stringify(['init', typoJS, 'en_US', aff, dic]));

    var aceEditor = undefined;
    var wordRegExp = XRegExp('\\p{L}+(?:\'\\p{L}+)*', 'g');
    var markers = [];
    var timeoutId = undefined;
    
    var currentRowCheck = undefined;
    function rowCheck(rowIndex) {
        var tokens = aceEditor.session.getTokens(rowIndex).slice();
        var tokenOffset = 0;
        var self = this;
        self.checkToken = function() {
            if (tokens.length === 0) {
                !timeoutId && (timeoutId = setTimeout(check, 5));
                return;
            }
            var token = tokens.shift();
            var words = [];
            if (!/code|code_block|reference|markup\.underline/.test(token.type)) {
                token.value.replace(wordRegExp, function(word, offset) {
                    words.push({
                        value: word,
                        offset: offset + tokenOffset
                    });
                });
            }
            tokenOffset += token.value.length;
            if (words.length === 0) {
                self.checkToken();
                return;
            }
            worker.onmessage = function(e) {
                var message = JSON.parse(e.data);
                if(message[0] != 'check') {
                    return;
                }
                var checkedWords = message[1];
                if (self.stopped) {
                    return;
                }
                var Range = require('ace/range').Range;
                _.each(checkedWords, function(word) {
                    if (!word.check) {
                        var range = new Range(rowIndex, word.offset, rowIndex, word.offset + word.value.length);
                        var markerId = aceEditor.session.addMarker(range, "misspelled", "typo", true);
                        var marker = aceEditor.session.getMarkers(true)[markerId];
                        markers.push(marker);
                    }
                });
                self.checkToken();
            };
            worker.postMessage(JSON.stringify(['check', words]));
        };
    }

    var rowIndex = 0;

    function check() {
        timeoutId = undefined;
        currentRowCheck && (currentRowCheck.stopped = true);
        currentRowCheck = new rowCheck(rowIndex++);
        currentRowCheck.checkToken();
    }

    function stop() {
        currentRowCheck && (currentRowCheck.stopped = true);
        timeoutId && clearTimeout(timeoutId);
        timeoutId = undefined;
    }

    function start() {
        var savedMarkers = [];
        _.each(markers, function(marker) {
            if (marker.range.start.row < rowIndex) {
                savedMarkers.push(marker);
            }
            else {
                aceEditor.session.removeMarker(marker.id);
            }
        });
        markers = savedMarkers;
        timeoutId = setTimeout(check, 700);
    }
    
    var dropdownElt = undefined;
    var $dropdownElt = undefined;
    var liEltTmpl = [
        '<li>',
        '   <a href="#">',
        '       <%= suggestion %>',
        '   </a>',
        '</li>'
        ].join('');

    var currentWordSuggest = undefined;
    function wordSuggest(marker) {
        var word = aceEditor.session.getTextRange(marker.range);
        var self = this;
        self.run = function() {
            worker.onmessage = function(e) {
                var message = JSON.parse(e.data);
                if(message[0] != 'suggest') {
                    return;
                }
                var suggestions = message[1];
                if (self.stopped) {
                    return;
                }
                console.log(suggestions);
                var liListHtml = _.reduce(suggestions, function(result, suggestion) {
                    return result + _.template(liEltTmpl, {
                        suggestion: suggestion,
                    });
                }, '');
                dropdownElt.innerHTML = liListHtml;
                $(dropdownElt).dropdown('toggle');
            };
            worker.postMessage(JSON.stringify(['suggest', word]));
        };
    }

    var fileOpen = false;
    spellCheck.onFileClose = function() {
        stop();
        fileOpen = false;
    };

    spellCheck.onFileOpen = function() {
        fileOpen = true;
        rowIndex = 0;
        stop();
        start();
    };


    spellCheck.onAceCreated = function(aceEditorParam) {
        aceEditor = aceEditorParam;
        aceEditor.session.on('change', function(e) {
            if (fileOpen === true) {
                var modifiedRowIndex = e.data.range.start.row;
                if (modifiedRowIndex < rowIndex) {
                    rowIndex = modifiedRowIndex;
                }
                stop();
                start();
            }
        });

        // Suggestions are disabled. Too much CPU consumption.
        /*
        aceEditor.on("click", function(ev) {
            var screenCoordinates = aceEditor.renderer.pixelToScreenCoordinates(ev.x, ev.y);
            var documentPosition = aceEditor.session.screenToDocumentPosition(screenCoordinates.row, screenCoordinates.column);
            _.each(markers, function(marker) {
                if (marker.range.contains(documentPosition.row, documentPosition.column)) {
                    currentWordSuggest && (currentWordSuggest.stopped = true);
                    currentWordSuggest = new wordSuggest(marker);
                    currentWordSuggest.run();
                }
            });
        });
    };

    spellCheck.onReady = function() {
        dropdownElt = crel('ul', {
            class: 'dropdown-menu dropdown-spell-checker'
        });
        document.querySelector('.ui-layout-resizer-north').appendChild(crel('div', crel('div', {
            'data-toggle': 'dropdown'
        }), dropdownElt));
        $dropdownElt = $(dropdownElt).dropdown();
        */
    };

    return spellCheck;
});
define('text!html/userCustomSettingsBlock.html',[],function () { return '<p>Allows users to implement their own extension.</p>\n<div class="form-horizontal">\n\t<div class="form-group">\n\t\t<label class="col-lg-4 control-label" for="textarea-usercustom-code">JavaScript code\n\t\t\t<a href="#" class="tooltip-usercustom-extension">(?)</a>\n\t\t</label>\n\t\t<div class="col-lg-7">\n\t\t\t<textarea id="textarea-usercustom-code" class="form-control"></textarea>\n\t\t</div>\n\t</div>\n</div>\n<span class="help-block pull-right"><a target="_blank" href="https://github.com/benweet/stackedit/blob/master/doc/developer-guide.md#architecture">More info</a></span>';});

define('extensions/userCustom',[
    "jquery",
    "underscore",
    "utils",
    "classes/Extension",
    "fileSystem",
    "settings",
    "text!html/userCustomSettingsBlock.html",
], function($, _, utils, Extension, fileSystem, settings, userCustomSettingsBlockHTML) {

    var userCustom = new Extension("userCustom", "UserCustom extension", true);
    userCustom.settingsBlock = userCustomSettingsBlockHTML;
    userCustom.defaultConfig = {
        code: "",
    };

    var fileMgr = undefined;
    userCustom.onFileMgrCreated = function(fileMgrParameter) {
        fileMgr = fileMgrParameter;
    };

    var synchronizer = undefined;
    userCustom.onSynchronizerCreated = function(synchronizerParameter) {
        synchronizer = synchronizerParameter;
    };

    var publisher = undefined;
    userCustom.onPublisherCreated = function(publisherParameter) {
        publisher = publisherParameter;
    };

    var eventMgr = undefined;
    userCustom.onEventMgrCreated = function(eventMgrParameter) {
        eventMgr = eventMgrParameter;
    };

    userCustom.onLoadSettings = function() {
        utils.setInputValue("#textarea-usercustom-code", userCustom.config.code);
    };

    userCustom.onSaveSettings = function(newConfig, event) {
        newConfig.code = utils.getInputValue("#textarea-usercustom-code");
        try {
            eval(newConfig.code);
        }
        catch(e) {
            eventMgr.onError(e);
            // Mark the textarea as error
            utils.getInputTextValue("#textarea-usercustom-code", event, /^$/);
        }
    };

    userCustom.onInit = function() {
        try {
            eval(userCustom.config.code);
        }
        catch(e) {
            console.error(e);
        }
    };

    return userCustom;
});
/*
 * waitForImages 1.4.2
 * -------------------
 * Provides a callback when all images have loaded in your given selector.
 * https://github.com/alexanderdickson/waitForImages
 *
 * Copyright (c) 2013 Alex Dickson
 * Licensed under the MIT license.
 */
(function ($) {
    // Namespace all events.
    var eventNamespace = 'waitForImages';

    // CSS properties which contain references to images.
    $.waitForImages = {
        hasImageProperties: ['backgroundImage', 'listStyleImage', 'borderImage', 'borderCornerImage']
    };

    // Custom selector to find `img` elements that have a valid `src` attribute and have not already loaded.
    $.expr[':'].uncached = function (obj) {
        // Ensure we are dealing with an `img` element with a valid `src` attribute.
        if (!$(obj).is('img[src!=""]')) {
            return false;
        }

        // Firefox's `complete` property will always be `true` even if the image has not been downloaded.
        // Doing it this way works in Firefox.
        var img = new Image();
        img.src = obj.src;
        return !img.complete;
    };

    $.fn.waitForImages = function (finishedCallback, eachCallback, waitForAll) {

        var allImgsLength = 0;
        var allImgsLoaded = 0;

        // Handle options object.
        if ($.isPlainObject(arguments[0])) {
            waitForAll = arguments[0].waitForAll;
            eachCallback = arguments[0].each;
			// This must be last as arguments[0]
			// is aliased with finishedCallback.
            finishedCallback = arguments[0].finished;
        }

        // Handle missing callbacks.
        finishedCallback = finishedCallback || $.noop;
        eachCallback = eachCallback || $.noop;

        // Convert waitForAll to Boolean
        waitForAll = !! waitForAll;

        // Ensure callbacks are functions.
        if (!$.isFunction(finishedCallback) || !$.isFunction(eachCallback)) {
            throw new TypeError('An invalid callback was supplied.');
        }

        return this.each(function () {
            // Build a list of all imgs, dependent on what images will be considered.
            var obj = $(this);
            var allImgs = [];
            // CSS properties which may contain an image.
            var hasImgProperties = $.waitForImages.hasImageProperties || [];
            // To match `url()` references.
            // Spec: http://www.w3.org/TR/CSS2/syndata.html#value-def-uri
            var matchUrl = /url\(\s*(['"]?)(.*?)\1\s*\)/g;

            if (waitForAll) {

                // Get all elements (including the original), as any one of them could have a background image.
                obj.find('*').andSelf().each(function () {
                    var element = $(this);

                    // If an `img` element, add it. But keep iterating in case it has a background image too.
                    if (element.is('img:uncached')) {
                        allImgs.push({
                            src: element.attr('src'),
                            element: element[0]
                        });
                    }

                    $.each(hasImgProperties, function (i, property) {
                        var propertyValue = element.css(property);
                        var match;

                        // If it doesn't contain this property, skip.
                        if (!propertyValue) {
                            return true;
                        }

                        // Get all url() of this element.
                        while (match = matchUrl.exec(propertyValue)) {
                            allImgs.push({
                                src: match[2],
                                element: element[0]
                            });
                        }
                    });
                });
            } else {
                // For images only, the task is simpler.
                obj.find('img:uncached')
                    .each(function () {
                    allImgs.push({
                        src: this.src,
                        element: this
                    });
                });
            }

            allImgsLength = allImgs.length;
            allImgsLoaded = 0;

            // If no images found, don't bother.
            if (allImgsLength === 0) {
                finishedCallback.call(obj[0]);
            }

            $.each(allImgs, function (i, img) {

                var image = new Image();

                // Handle the image loading and error with the same callback.
                $(image).bind('load.' + eventNamespace + ' error.' + eventNamespace, function (event) {
                    allImgsLoaded++;

                    // If an error occurred with loading the image, set the third argument accordingly.
                    eachCallback.call(img.element, allImgsLoaded, allImgsLength, event.type == 'load');

                    if (allImgsLoaded == allImgsLength) {
                        finishedCallback.call(obj[0]);
                        return false;
                    }

                });

                image.src = img.src;
            });
        });
    };
}(jQuery));

define("jquery-waitforimages", function(){});

define('eventMgr',[
    "jquery",
    "underscore",
    "crel",
    "utils",
    "classes/Extension",
    "settings",
    "text!html/settingsExtensionsAccordion.html",
    "extensions/yamlFrontMatterParser",
    "extensions/markdownSectionParser",
    "extensions/partialRendering",
    "extensions/buttonMarkdownSyntax",
    "extensions/googleAnalytics",
    "extensions/dialogAbout",
    "extensions/dialogManagePublication",
    "extensions/dialogManageSynchronization",
    "extensions/dialogOpenHarddrive",
    "extensions/documentTitle",
    "extensions/documentSelector",
    "extensions/documentPanel",
    "extensions/documentManager",
    "extensions/workingIndicator",
    "extensions/notifications",
    "extensions/markdownExtra",
    "extensions/toc",
    "extensions/mathJax",
    "extensions/emailConverter",
    "extensions/scrollLink",
    "extensions/buttonFocusMode",
    "extensions/buttonSync",
    "extensions/buttonPublish",
    "extensions/buttonShare",
    "extensions/buttonStat",
    "extensions/buttonHtmlCode",
    "extensions/buttonViewer",
    "extensions/welcomeTour",
    "extensions/spellCheck",
    "extensions/userCustom",
    "bootstrap",
    "jquery-waitforimages"
], function($, _, crel, utils, Extension, settings, settingsExtensionsAccordionHTML) {

    var eventMgr = {};

    // Create a list of extensions from module arguments
    var extensionList = _.chain(arguments).map(function(argument) {
        return argument instanceof Extension && argument;
    }).compact().value();

    // Configure extensions
    extensionSettings = settings.extensionSettings || {};
    _.each(extensionList, function(extension) {
        // Set the extension.config attribute from settings or default
        // configuration
        extension.config = _.extend({}, extension.defaultConfig, extensionSettings[extension.extensionId]);
        if(viewerMode === true && extension.disableInViewer === true) {
            // Skip enabling the extension if we are in the viewer and extension
            // doesn't support it
            extension.enabled = false;
        }
        else if(lightMode === true && extension.disableInLight === true) {
            // Same for light mode
            extension.enabled = false;
        }
        else {
            // Enable the extension if it's not optional or it has not been
            // disabled by the user
            extension.enabled = !extension.isOptional || extension.config.enabled === undefined || extension.config.enabled === true;
        }
    });

    // Returns all listeners with the specified name that are implemented in the
    // enabled extensions
    function getExtensionListenerList(eventName) {
        return _.chain(extensionList).map(function(extension) {
            return extension.enabled && extension[eventName];
        }).compact().value();
    }

    // Returns a function that calls every listeners with the specified name
    // from all enabled extensions
    var eventListenerListMap = {};
    function createEventHook(eventName) {
        eventListenerListMap[eventName] = getExtensionListenerList(eventName);
        return function() {
            logger.log(eventName, arguments);
            var eventArguments = arguments;
            _.each(eventListenerListMap[eventName], function(listener) {
                // Use try/catch in case userCustom listener contains error
                try {
                    listener.apply(null, eventArguments);
                }
                catch(e) {
                    console.error(_.isObject(e) ? e.stack : e);
                }
            });
        };
    }

    // Add a Hook to the eventMgr that we can fire using eventMgr.eventName()
    function addEventHook(eventName) {
        eventMgr[eventName] = createEventHook(eventName);
    }

    // Used by external modules (not extensions) to listen to events
    eventMgr.addListener = function(eventName, listener) {
        try {
            eventListenerListMap[eventName].push(listener);
        }
        catch(e) {
            console.error('No event listener called ' + eventName);
        }
    };

    // Call every onInit listeners (extensions only)
    createEventHook("onInit")();

    // Load/Save extension config from/to settings
    eventMgr["onLoadSettings"] = function() {
        logger.log("onLoadSettings");
        _.each(extensionList, function(extension) {
            utils.setInputChecked("#input-enable-extension-" + extension.extensionId, extension.enabled === true);
            var onLoadSettingsListener = extension.onLoadSettings;
            onLoadSettingsListener && onLoadSettingsListener();
        });
    };
    eventMgr["onSaveSettings"] = function(newExtensionSettings, event) {
        logger.log("onSaveSettings");
        _.each(extensionList, function(extension) {
            var newExtensionConfig = _.extend({}, extension.defaultConfig);
            newExtensionConfig.enabled = utils.getInputChecked("#input-enable-extension-" + extension.extensionId);
            var onSaveSettingsListener = extension.onSaveSettings;
            onSaveSettingsListener && onSaveSettingsListener(newExtensionConfig, event);
            newExtensionSettings[extension.extensionId] = newExtensionConfig;
        });
    };

    addEventHook("onMessage");
    addEventHook("onError");
    addEventHook("onOfflineChanged");
    addEventHook("onUserActive");
    addEventHook("onAsyncRunning");
    addEventHook("onPeriodicRun");

    // To access modules that are loaded after extensions
    addEventHook("onFileMgrCreated");
    addEventHook("onSynchronizerCreated");
    addEventHook("onPublisherCreated");
    addEventHook("onEventMgrCreated");

    // Operations on files
    addEventHook("onFileCreated");
    addEventHook("onFileDeleted");
    addEventHook("onFileSelected");
    addEventHook("onFileOpen");
    addEventHook("onFileClosed");
    addEventHook("onContentChanged");
    addEventHook("onTitleChanged");

    // Operations on folders
    addEventHook("onFoldersChanged");

    // Sync events
    addEventHook("onSyncRunning");
    addEventHook("onSyncSuccess");
    addEventHook("onSyncImportSuccess");
    addEventHook("onSyncExportSuccess");
    addEventHook("onSyncRemoved");

    // Publish events
    addEventHook("onPublishRunning");
    addEventHook("onPublishSuccess");
    addEventHook("onNewPublishSuccess");
    addEventHook("onPublishRemoved");

    // Operations on Layout
    addEventHook("onLayoutConfigure");
    addEventHook("onLayoutCreated");
    addEventHook("onLayoutResize");

    // Operations on PageDown
    addEventHook("onPagedownConfigure");
    addEventHook("onSectionsCreated");
    addEventHook("onMarkdownTrim");
    addEventHook("onExtraExtensions");
    
    // Operation on ACE
    addEventHook("onAceCreated");

    var onPreviewFinished = createEventHook("onPreviewFinished");
    var onAsyncPreviewListenerList = getExtensionListenerList("onAsyncPreview");
    var previewContentsElt = undefined;
    var $previewContentsElt = undefined;
    eventMgr["onAsyncPreview"] = function() {
        logger.log("onAsyncPreview");
        logger.log("Conversion time: " + (new Date() - eventMgr.previewStartTime));
        function recursiveCall(callbackList) {
            var callback = callbackList.length ? callbackList.shift() : function() {
                logger.log("Preview time: " + (new Date() - eventMgr.previewStartTime));
                _.defer(function() {
                    var html = "";
                    _.each(previewContentsElt.children, function(elt) {
                        html += elt.innerHTML;
                    });
                    onPreviewFinished(utils.trim(html));
                });
            };
            callback(function() {
                recursiveCall(callbackList);
            });
        }
        recursiveCall(onAsyncPreviewListenerList.concat([function(callback) {
            // We assume some images are loading asynchronously after the preview
            $previewContentsElt.waitForImages(callback);
        }]));
    };

    var onReady = createEventHook("onReady");
    eventMgr["onReady"] = function() {
        previewContentsElt = document.getElementById('preview-contents');
        $previewContentsElt = $(previewContentsElt);

        if(viewerMode === false) {
            // Create accordion in settings dialog
            var accordionHtml = _.chain(extensionList).sortBy(function(extension) {
                return extension.extensionName.toLowerCase();
            }).reduce(function(html, extension) {
                return html + (extension.settingsBlock ? _.template(settingsExtensionsAccordionHTML, {
                    extensionId: extension.extensionId,
                    extensionName: extension.extensionName,
                    isOptional: extension.isOptional,
                    settingsBlock: extension.settingsBlock
                }) : "");
            }, "").value();
            document.querySelector('.accordion-extensions').innerHTML = accordionHtml;

            // Create a button from an extension listener
            function createBtn(listener) {
                var buttonGrpElt = crel('div', {
                    class: 'btn-group'
                });
                var btnElt = listener();
                if(_.isString(btnElt)) {
                    buttonGrpElt.innerHTML = btnElt;
                }
                else if(_.isElement(btnElt)) {
                    buttonGrpElt.appendChild(btnElt);
                }
                return buttonGrpElt;
            }

            // Create extension buttons
            logger.log("onCreateButton");
            var onCreateButtonListenerList = getExtensionListenerList("onCreateButton");
            var extensionButtonsFragment = document.createDocumentFragment();
            _.each(onCreateButtonListenerList, function(listener) {
                extensionButtonsFragment.appendChild(createBtn(listener));
            });
            document.getElementById('extension-buttons').appendChild(extensionButtonsFragment);

            // Create extension editor buttons
            logger.log("onCreateEditorButton");
            var onCreateEditorButtonListenerList = getExtensionListenerList("onCreateEditorButton");
            var extensionEditorButtonsFragment = document.createDocumentFragment();
            _.each(onCreateEditorButtonListenerList, function(listener) {
                extensionEditorButtonsFragment.appendChild(createBtn(listener));
            });
            var editorButtonsElt = document.querySelector('.extension-editor-buttons');
            editorButtonsElt.appendChild(extensionEditorButtonsFragment);
        }

        // Create extension preview buttons
        logger.log("onCreatePreviewButton");
        var onCreatePreviewButtonListenerList = getExtensionListenerList("onCreatePreviewButton");
        var extensionPreviewButtonsFragment = document.createDocumentFragment();
        _.each(onCreatePreviewButtonListenerList, function(listener) {
            extensionPreviewButtonsFragment.appendChild(createBtn(listener));
        });
        var previewButtonsElt = document.querySelector('.extension-preview-buttons');
        previewButtonsElt.appendChild(extensionPreviewButtonsFragment);

        // A bit of jQuery...
        var $previewButtonsElt = $(previewButtonsElt);
        var previewButtonsWidth = $previewButtonsElt.width();
        $previewButtonsElt.find('.btn-group').each(function() {
            var $btnGroupElt = $(this);
            // Align dropdown to the left of the screen
            $btnGroupElt.find('.dropdown-menu').css({
                right: -previewButtonsWidth + $btnGroupElt.width() + $btnGroupElt.position().left
            });
        });
        
        // Call onReady listeners
        onReady();
    };

    // For extensions that need to call other extensions
    eventMgr.onEventMgrCreated(eventMgr);
    return eventMgr;
});
define('text!html/settingsShortcutEntry.html',[],function () { return '<div class="form-group">\n\t<label class="col-lg-4 control-label"\n\t\tfor="input-settings-shortcut-<%= shortcut.name %>"><%= shortcut.title %></label>\n\t<div class="col-lg-8 form-inline">\n\t\t<input type="text" id="input-settings-shortcut-<%= shortcut.name %>"\n\t\t\tclass="form-control col-lg-4">\n\t\t<label class="col-lg-2 control-label"\n\t\t    for="input-settings-shortcut-<%= shortcut.name %>-mac">Mac</label>\n        <input type="text"\n\t\t\tid="input-settings-shortcut-<%= shortcut.name %>-mac"\n\t\t\tclass="form-control col-lg-4">\n\t</div>\n</div>\n';});

define('shortcutMgr',[
    "underscore",
    "eventMgr",
    "settings",
    "utils",
    "text!html/settingsShortcutEntry.html",
    ], function(_, eventMgr, settings, utils, settingsShortcutEntryHTML) {

    var shortcutMgr = {};

    var shortcuts = {
        'bold': {
            title: 'Strong',
            defaultKey: {
                win: 'Ctrl-B',
                mac: 'Command-B|Ctrl-B',
            },
            isPageDown: true
        },
        'italic': {
            title: 'Emphasis',
            defaultKey: {
                win: 'Ctrl-I',
                mac: 'Command-I|Ctrl-I',
            },
            isPageDown: true
        },
        'link': {
            title: 'Hyperlink',
            defaultKey: {
                win: 'Ctrl-L',
                mac: 'Command-L|Ctrl-L',
            },
            isPageDown: true
        },
        'quote': {
            title: 'Blockquote',
            defaultKey: {
                win: 'Ctrl-Q',
                mac: 'Command-Q|Ctrl-Q',
            },
            isPageDown: true
        },
        'code': {
            title: 'Code Sample',
            defaultKey: {
                win: 'Ctrl-K',
                mac: 'Command-K|Ctrl-K',
            },
            isPageDown: true
        },
        'image': {
            title: 'Image',
            defaultKey: {
                win: 'Ctrl-G',
                mac: 'Command-G|Ctrl-G',
            },
            isPageDown: true
        },
        'olist': {
            title: 'Numbered List',
            defaultKey: {
                win: 'Ctrl-O',
                mac: 'Command-O|Ctrl-O',
            },
            isPageDown: true
        },
        'ulist': {
            title: 'Bulleted List',
            defaultKey: {
                win: 'Ctrl-U',
                mac: 'Command-U|Ctrl-U',
            },
            isPageDown: true
        },
        'heading': {
            title: 'Heading',
            defaultKey: {
                win: 'Ctrl-H',
                mac: 'Command-H|Ctrl-H',
            },
            isPageDown: true
        },
        'hr': {
            title: 'Horizontal Rule',
            defaultKey: {
                win: 'Ctrl-R',
                mac: 'Command-R|Ctrl-R',
            },
            isPageDown: true
        },
        'undo': {
            title: 'Undo',
            defaultKey: {
                win: 'Ctrl-Z',
                mac: 'Command-Z',
            },
            exec: function(editor) {
                editor.undo();
            },
            isPageDown: true
        },
        'redo': {
            title: 'Redo',
            defaultKey: {
                win: 'Ctrl-Y|Ctrl-Shift-Z',
                mac: 'Command-Y|Command-Shift-Z',
            },
            exec: function(editor) {
                editor.redo();
            },
            isPageDown: true
        },
        'selectall': {
            title: 'Select All',
            defaultKey: {
                win: 'Ctrl-A',
                mac: 'Command-A',
            },
            exec: function(editor) {
                editor.selectAll();
            },
            readOnly: true
        },
        'removeline': {
            title: 'Remove Line',
            defaultKey: {
                win: 'Ctrl-D',
                mac: 'Command-D',
            },
            exec: function(editor) {
                editor.removeLines();
            },
            multiSelectAction: "forEachLine"
        },
        'duplicateSelection': {
            title: 'Duplicate Selection',
            defaultKey: {
                win: 'Ctrl-Shift-D',
                mac: 'Command-Shift-D',
            },
            exec: function(editor) {
                editor.duplicateSelection();
            },
            multiSelectAction: "forEach"
        },
        'sortlines': {
            title: 'Sort Lines',
            defaultKey: {
                win: 'Ctrl-Alt-S',
                mac: 'Command-Alt-S',
            },
            exec: function(editor) {
                editor.sortLines();
            },
            multiSelectAction: "forEachLine"
        },
        'modifyNumberUp': {
            title: 'Number Up',
            defaultKey: {
                win: 'Ctrl-Shift-Up',
                mac: 'Alt-Shift-Up',
            },
            exec: function(editor) {
                editor.modifyNumber(1);
            },
            multiSelectAction: "forEach"
        },
        'modifyNumberDown': {
            title: 'Number Down',
            defaultKey: {
                win: 'Ctrl-Shift-Down',
                mac: 'Alt-Shift-Down',
            },
            exec: function(editor) {
                editor.modifyNumber(-1);
            },
            multiSelectAction: "forEach"
        },
        'find': {
            title: 'Find',
            defaultKey: {
                win: 'Ctrl-F',
                mac: 'Command-F',
            },
            exec: function(editor) {
                var config = require("ace/config");
                config.loadModule("ace/ext/searchbox", function(e) {
                    e.Search(editor);
                });
            },
            readOnly: true
        },
        'replace': {
            title: 'Replace',
            defaultKey: {
                win: 'Ctrl-Shift-F',
                mac: 'Command-Option-F',
            },
            exec: function(editor) {
                var config = require("ace/config");
                config.loadModule("ace/ext/searchbox", function(e) {
                    e.Search(editor, true);
                });
            },
            readOnly: true
        },
        'findnext': {
            title: 'Find Next',
            defaultKey: {
                win: 'Ctrl-P',
                mac: 'Command-P',
            },
            exec: function(editor) {
                editor.findNext();
            },
            readOnly: true
        },
        'findprevious': {
            title: 'Find Previous',
            defaultKey: {
                win: 'Ctrl-Shift-P',
                mac: 'Command-Shift-P',
            },
            exec: function(editor) {
                editor.findPrevious();
            },
            readOnly: true
        },
        'togglerecording': {
            title: 'Toggle Recording',
            defaultKey: {
                win: 'Ctrl-Alt-E',
                mac: 'Command-Option-E',
            },
            exec: function(editor) {
                editor.commands.toggleRecording(editor);
            },
            readOnly: true
        },
        'replaymacro': {
            title: 'Replay Macro',
            defaultKey: {
                win: 'Ctrl-Shift-E',
                mac: 'Command-Shift-E',
            },
            exec: function(editor) {
                editor.commands.replay(editor);
            },
            readOnly: true
        },
    };

    _.each(shortcuts, function(shortcut, key) {
        shortcut.name = key;
        shortcut.bindKey = settings.shortcuts[key] || shortcut.defaultKey;
    });

    shortcutMgr.configureAce = function(aceEditor) {
        _.each(shortcuts, function(shortcut) {
            shortcut.exec && aceEditor.commands.addCommand(_.pick(shortcut, 'name', 'bindKey', 'exec', 'readOnly', 'multiSelectAction'));
        });
    };

    shortcutMgr.addSettingEntries = function() {
        var shortcutEntries = _.reduce(shortcuts, function(result, shortcut) {
            return result + _.template(settingsShortcutEntryHTML, {
                shortcut: shortcut
            });
        }, '');
        var settingsFormElement = document.querySelector('#tabpane-settings-shortcuts .form-horizontal');
        settingsFormElement && (settingsFormElement.innerHTML = shortcutEntries);
    };

    shortcutMgr.loadSettings = function() {
        _.each(shortcuts, function(shortcut) {
            utils.setInputValue("#input-settings-shortcut-" + shortcut.name, shortcut.bindKey.win);
            utils.setInputValue("#input-settings-shortcut-" + shortcut.name + '-mac', shortcut.bindKey.mac);
        });
    };

    return shortcutMgr;
});
define('text!html/bodyIndex.html',[],function () { return '<div class="navbar navbar-default ui-layout-north">\n\t<div class="navbar-inner">\n\t\t<div class="nav left-space"></div>\n\t\t<div class="nav right-space pull-right"></div>\n\t\t<ul class="nav">\n\t\t\t<li class="wmd-button-group1 btn-group"></li>\n\t\t</ul>\n\t\t<ul class="nav">\n\t\t\t<li class="wmd-button-group2 btn-group"></li>\n\t\t</ul>\n\t\t<ul class="nav">\n\t\t\t<li class="wmd-button-group3 btn-group"></li>\n\t\t</ul>\n\t\t<ul class="nav">\n\t\t\t<li class="wmd-button-group4 btn-group"></li>\n\t\t</ul>\n\t\t<ul class="nav pull-right">\n\t\t\t<li class="btn-group"><button\n\t\t\t\t\tclass="btn btn-success action-create-file" title="New document">\n\t\t\t\t\t<i class="icon-file"></i>\n\t\t\t\t</button>\n\t\t\t\t<button class="btn btn-success" title="Delete current document"\n\t\t\t\t\tdata-toggle="modal" data-target=".modal-remove-file-confirm">\n\t\t\t\t\t<i class="icon-trash"></i>\n\t\t\t\t</button></li>\n\t\t</ul>\n\t\t<ul class="nav pull-right">\n\t\t\t<li id="extension-buttons"></li>\n\t\t</ul>\n\t\t<ul class="nav pull-right">\n\t\t\t<li><a class="btn btn-success file-title-navbar" href="#"\n\t\t\t\ttitle="Rename current document"> </a></li>\n\t\t\t<li><input type="text"\n\t\t\t\tclass="col-lg-4 form-control hide input-file-title"\n\t\t\t\tplaceholder="Document title" /></li>\n\t\t</ul>\n\t\t<ul class="nav pull-right">\n\t\t\t<li><i class="working-indicator icon-none"></i></li>\n\t\t</ul>\n\t</div>\n</div>\n<div id="wmd-input" class="ui-layout-center"></div>\n<div class="ui-layout-east preview-container"></div>\n<div class="ui-layout-south preview-container"></div>\n<div id="wmd-button-bar" class="hide"></div>\n\n<div class="menu-panel collapse width">\n\t<button class="btn btn-success collapse-button" data-toggle="collapse"\n\t\tdata-target=".menu-panel" title="Menu">\n\t\t<i class="icon-left-open"></i> <img\n\t\t\tdata-stackedit-src="stackedit-64.png" width="32" height="32" />\n\t</button>\n\t<div class="panel-content">\n\t\t<div class="list-group">\n\t\t\t<a href="viewer.html" title="StackEdit Viewer"\n\t\t\t\tclass="list-group-item"><i class="icon-resize-full"></i>\n\t\t\t\tStackEdit Viewer</a> <a href="#" data-toggle="collapse"\n\t\t\t\tdata-target=".collapse-open-from" class="list-group-item"><i\n\t\t\t\tclass="icon-hdd"></i> Open from...</a>\n\t\t\t<div class="sub-menu collapse collapse-open-from clearfix">\n\t\t\t\t<ul class="nav">\n\t\t\t\t\t<li><a data-toggle="modal" data-target=".modal-import-url"\n\t\t\t\t\t\tclass="action-reset-input" href="#">Open from URL</a></li>\n\t\t\t\t\t<li><a data-toggle="modal"\n\t\t\t\t\t\tdata-target=".modal-import-harddrive-markdown"\n\t\t\t\t\t\tclass="action-reset-input" href="#">Import from hard drive</a></li>\n\t\t\t\t\t<li><a data-toggle="modal"\n\t\t\t\t\t\tdata-target=".modal-import-harddrive-html"\n\t\t\t\t\t\tclass="action-reset-input" href="#">Convert HTML to Markdown</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t<a href="#" data-toggle="collapse" data-target=".collapse-save-as"\n\t\t\t\tclass="list-group-item"><i class="icon-hdd"></i> Save as...</a>\n\t\t\t<div class="sub-menu collapse collapse-save-as clearfix">\n\t\t\t\t<ul class="nav">\n\t\t\t\t\t<li><a class="action-download-md" href="#">Save as\n\t\t\t\t\t\t\tMarkdown</a></li>\n\t\t\t\t\t<li><a class="action-download-html" href="#">Save as HTML</a></li>\n\t\t\t\t\t<li><a class="action-download-template" href="#">Save\n\t\t\t\t\t\t\tusing template</a></li>\n\t\t\t\t\t<li><a class="action-download-pdf" href="#">Save as PDF</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=dropdown-header>SYNCHRONIZE</div>\n\t\t<div class="list-group">\n\t\t\t<a href="#" data-toggle="collapse"\n\t\t\t\tdata-target=".collapse-sync-gdrive" class="list-group-item"><i\n\t\t\t\tclass="icon-provider-gdrive"></i> Google Drive</a>\n\t\t\t<div class="sub-menu collapse collapse-sync-gdrive clearfix">\n\t\t\t\t<ul class="nav">\n\t\t\t\t\t<li><a href="#" class="action-sync-import-gdrive"\n\t\t\t\t\t\tdata-toggle="collapse" data-target=".menu-panel">Import from\n\t\t\t\t\t\t\tGoogle Drive</a></li>\n\t\t\t\t\t<li><a href="#" class="action-sync-export-dialog-gdrive">Export\n\t\t\t\t\t\t\tto Google Drive</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<a href="#" data-toggle="collapse"\n\t\t\t\tdata-target=".collapse-sync-dropbox" class="list-group-item"><i\n\t\t\t\tclass="icon-provider-dropbox"></i> Dropbox</a>\n\t\t\t<div class="sub-menu collapse collapse-sync-dropbox clearfix">\n\t\t\t\t<ul class="nav">\n\t\t\t\t\t<li><a class="action-sync-import-dropbox" href="#"\n\t\t\t\t\t\tdata-toggle="collapse" data-target=".menu-panel">Import from\n\t\t\t\t\t\t\tDropbox</a></li>\n\t\t\t\t\t<li><a href="#" class="action-sync-export-dialog-dropbox">Export\n\t\t\t\t\t\t\tto Dropbox</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<a href="#" data-toggle="modal" data-target=".modal-manage-sync"\n\t\t\t\tclass="action-reset-input list-group-item"><i\n\t\t\t\tclass="icon-refresh"></i> Manage synchronization</a>\n\t\t</div>\n\t\t<div class=dropdown-header>PUBLISH</div>\n\t\t<div class="list-group">\n\t\t\t<a href="#" data-toggle="collapse" data-target=".collapse-publish-on"\n\t\t\t\tclass="list-group-item"><i class="icon-share"></i> Publish on...</a>\n\t\t\t<div class="sub-menu collapse collapse-publish-on clearfix">\n\t\t\t\t<ul class="nav">\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<a href="#" data-toggle="modal" data-target=".modal-manage-publish"\n\t\t\t\tclass="action-reset-input list-group-item"><i class="icon-share"></i>\n\t\t\t\tManage publication</a>\n\t\t</div>\n\t\t<ul class="nav">\n\t\t\t<li><a href="#" data-toggle="modal"\n\t\t\t\tdata-target=".modal-settings" class="action-load-settings"><i\n\t\t\t\t\tclass="icon-cog"></i> Settings</a></li>\n\t\t\t<li><a href="#" data-toggle="modal" data-target=".modal-about"><i\n\t\t\t\t\tclass="icon-help-circled"></i> About</a></li>\n\t\t</ul>\n\n\t</div>\n</div>\n\n\n<div class="document-panel collapse width">\n\t<button class="btn btn-success collapse-button" data-toggle="collapse"\n\t\tdata-target=".document-panel" title="Select document">\n\t\t<i class="icon-folder-open"></i> <i class="icon-right-open"></i>\n\t</button>\n\t<div class="search-bar clearfix">\n\t\t<div class="input-group">\n\t\t\t<span class="input-group-addon"><i class="icon-search"></i></span><input\n\t\t\t\ttype="text" class="form-control"></input>\n\t\t\t<button type="button" class="close" title="clear">&times;</button>\n\t\t\t<div class="input-group-btn">\n\t\t\t\t<a data-toggle="modal" data-target=".modal-document-manager"\n\t\t\t\t\tclass="btn btn-link" title="Manage documents"><i\n\t\t\t\t\tclass="icon-layers"></i></a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="panel-content">\n\t\t<div class="list-group document-list"></div>\n\t\t<div class="list-group document-list-filtered hide"></div>\n\t</div>\n</div>\n\n\n<div class="modal modal-document-manager">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Manage documents</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<div></div>\n\t\t\t\t<ul class="nav nav-pills document-list">\n\t\t\t\t\t<li class="pull-right dropdown"><a href="#"\n\t\t\t\t\t\tdata-toggle="dropdown"><i class="icon-check"></i> Selection <b\n\t\t\t\t\t\t\tclass="caret"></b></a>\n\t\t\t\t\t\t<ul class="dropdown-menu">\n\t\t\t\t\t\t\t<li><a href="#" class="action-select-all"><i\n\t\t\t\t\t\t\t\t\tclass="icon-check"></i> Select all</a></li>\n\t\t\t\t\t\t\t<li><a href="#" class="action-unselect-all"><i\n\t\t\t\t\t\t\t\t\tclass="icon-check-empty"></i> Unselect all</a></li>\n\t\t\t\t\t\t\t<li class="divider"></li>\n\t\t\t\t\t\t\t<li><a href="#" class="action-move-items"><i\n\t\t\t\t\t\t\t\t\tclass="icon-forward"></i> Move to folder</a></li>\n\t\t\t\t\t\t\t<li><a href="#" class="action-delete-items"><i\n\t\t\t\t\t\t\t\t\tclass="icon-trash"></i> Delete</a></li>\n\t\t\t\t\t\t</ul></li>\n\t\t\t\t\t<li class="pull-right"><a href="#"\n\t\t\t\t\t\tclass="action-create-folder"> <i class="icon-folder"></i>\n\t\t\t\t\t\t\tCreate folder\n\t\t\t\t\t</a></li>\n\t\t\t\t\t<li class="disabled"><a><i class="icon-file"></i> <span\n\t\t\t\t\t\t\tclass="document-count"></span></a></li>\n\t\t\t\t\t<li class="disabled"><a><i class="icon-folder"></i> <span\n\t\t\t\t\t\t\tclass="folder-count"></span></a></li>\n\t\t\t\t</ul>\n\t\t\t\t<div class="list-group document-list"></div>\n\t\t\t\t<p class="confirm-delete hide">The following documents will be\n\t\t\t\t\tdeleted locally:</p>\n\t\t\t\t<p class="choose-folder hide">Please choose a destination\n\t\t\t\t\tfolder:</p>\n\t\t\t\t<div class="list-group selected-document-list hide"></div>\n\t\t\t\t<div class="list-group select-folder-list hide"></div>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#"\n\t\t\t\t\tclass="btn btn-default confirm-delete choose-folder action-cancel hide">Cancel</a>\n\t\t\t\t<a href="#"\n\t\t\t\t\tclass="btn btn-primary confirm-delete action-delete-items-confirm hide">OK</a>\n\t\t\t\t<a href="#" class="btn btn-primary document-list"\n\t\t\t\t\tdata-dismiss="modal">Close</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-insert-link">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Hyperlink</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>Please provide the link URL and an optional title:</p>\n\t\t\t\t<div class="input-group">\n\t\t\t\t\t<span class="input-group-addon"><i class="icon-globe"></i></span><input\n\t\t\t\t\t\tid="input-insert-link" type="text" class="col-lg-5 form-control"\n\t\t\t\t\t\tplaceholder=\'http://example.com/ "optional title"\'></input>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>\n\t\t\t\t<a href="#" class="btn btn-primary action-insert-link"\n\t\t\t\t\tdata-dismiss="modal">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-insert-image">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Image</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>Please provide the image URL and an optional title:</p>\n\t\t\t\t<div class="input-group">\n\t\t\t\t\t<span class="input-group-addon"><i class="icon-picture"></i></span><input\n\t\t\t\t\t\tid="input-insert-image" type="text" class="col-lg-5 form-control"\n\t\t\t\t\t\tplaceholder=\'http://example.com/image.jpg "optional title"\'></input>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default action-import-image-gplus"\n\t\t\t\t\tdata-dismiss="modal"><i class="icon-provider-gplus"></i> Import\n\t\t\t\t\tfrom Google+</a> <a href="#" class="btn btn-default"\n\t\t\t\t\tdata-dismiss="modal">Cancel</a> <a href="#"\n\t\t\t\t\tclass="btn btn-primary action-insert-image" data-dismiss="modal">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-import-image">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Google+ image import</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<div class="form-horizontal">\n\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-import-image-title">Title (optional)</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-import-image-title"\n\t\t\t\t\t\t\t\tplaceholder="Image title" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-import-image-size">Size limit (optional)</label>\n\t\t\t\t\t\t<div class="col-lg-7 form-inline">\n\t\t\t\t\t\t\t<input type="text" id="input-import-image-size" placeholder="123"\n\t\t\t\t\t\t\t\tclass="col-lg-3 form-control"> px\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>\n\t\t\t\t<a href="#" class="btn btn-primary action-import-image"\n\t\t\t\t\tdata-dismiss="modal">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-remove-file-confirm">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Delete</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>\n\t\t\t\t\tAre you sure you want to delete "<span class="file-title"></span>"?\n\t\t\t\t</p>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<b>NOTE:</b> This will not delete the file on synchronized\n\t\t\t\t\tlocations.\n\t\t\t\t</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>\n\t\t\t\t<a href="#" class="btn btn-primary action-remove-file"\n\t\t\t\t\tdata-dismiss="modal">Delete</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-import-url">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Open from URL</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>Please provide a link to a Markdown document.</p>\n\t\t\t\t<div class="form-horizontal">\n\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t<label class="col-lg-3 control-label" for="input-import-url">URL</label>\n\t\t\t\t\t\t<div class="col-lg-8">\n\t\t\t\t\t\t\t<input type="text" id="input-import-url"\n\t\t\t\t\t\t\t\tplaceholder="http://www.abc.com/xyz.md" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>\n\t\t\t\t<a href="#" data-dismiss="modal"\n\t\t\t\t\tclass="btn btn-primary action-import-url">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-import-harddrive-markdown">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Import from hard drive</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>Please select your Markdown files here:</p>\n\t\t\t\t<p>\n\t\t\t\t\t<input type="file" id="input-file-import-harddrive-markdown"\n\t\t\t\t\t\tmultiple class="form-control" />\n\t\t\t\t</p>\n\t\t\t\t<p>Or drag and drop your Markdown files here:</p>\n\t\t\t\t<p id="dropzone-import-harddrive-markdown" class="drop-zone">Drop\n\t\t\t\t\tfiles here</p>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-primary" data-dismiss="modal">Close</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-import-harddrive-html">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Convert HTML to Markdown</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>Please select your HTML files here:</p>\n\t\t\t\t<p>\n\t\t\t\t\t<input type="file" id="input-file-import-harddrive-html" multiple\n\t\t\t\t\t\tclass="form-control" />\n\t\t\t\t</p>\n\t\t\t\t<p>Or drag and drop your HTML files here:</p>\n\t\t\t\t<p id="dropzone-import-harddrive-html" class="drop-zone">Drop\n\t\t\t\t\tfiles here</p>\n\t\t\t\t<p>Or insert your HTML code here:</p>\n\t\t\t\t<textarea id="input-convert-html" class="form-control"></textarea>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Close</a> <a\n\t\t\t\t\thref="#" class="btn btn-primary action-convert-html"\n\t\t\t\t\tdata-dismiss="modal">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-upload-gdrive">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Export to Google Drive</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>\n\t\t\t\t\tThis will save "<span class="file-title"></span>" to your <i\n\t\t\t\t\t\tclass="icon-provider-gdrive"></i>\n\t\t\t\t\t<code>Google Drive</code>\n\t\t\t\t\taccount and keep it synchronized.\n\t\t\t\t</p>\n\t\t\t\t<div class="form-horizontal">\n\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t<label class="col-lg-3 control-label"\n\t\t\t\t\t\t\tfor="input-sync-export-gdrive-parentid">Folder ID\n\t\t\t\t\t\t\t(optional)</label>\n\t\t\t\t\t\t<div class="col-lg-8">\n\t\t\t\t\t\t\t<div class="input-group">\n\t\t\t\t\t\t\t\t<input type="text" id="input-sync-export-gdrive-parentid"\n\t\t\t\t\t\t\t\t\tplaceholder="FolderID" class="form-control">\n\t\t\t\t\t\t\t\t<div class="input-group-btn">\n\t\t\t\t\t\t\t\t\t<a class="btn btn-link export-gdrive-choose-folder"\n\t\t\t\t\t\t\t\t\t\ttitle="Choose folder" data-dismiss="modal"><i\n\t\t\t\t\t\t\t\t\t\tclass="icon-folder-open"></i></a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span class="help-block"> If no folder ID is supplied, the\n\t\t\t\t\t\t\t\tfile will be created in your root folder. </span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t<div class="col-lg-3 control-label"></div>\n\t\t\t\t\t\t<div class="col-lg-8">\n\t\t\t\t\t\t\t<label> <input id="input-sync-export-gdrive-realtime"\n\t\t\t\t\t\t\t\ttype="checkbox"> Create a real time collaborative\n\t\t\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t<label class="col-lg-3 control-label"\n\t\t\t\t\t\t\tfor="input-sync-export-gdrive-fileid">Existing file ID\n\t\t\t\t\t\t\t(optional)</label>\n\t\t\t\t\t\t<div class="col-lg-8">\n\t\t\t\t\t\t\t<input type="text" id="input-sync-export-gdrive-fileid"\n\t\t\t\t\t\t\t\tplaceholder="FileID" class="form-control"> <span\n\t\t\t\t\t\t\t\tclass="help-block"> This will overwrite the existing file\n\t\t\t\t\t\t\t\ton the server. </span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<b>NOTE:</b>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>You can move or rename the file afterwards within Google\n\t\t\t\t\t\t\tDrive.</li>\n\t\t\t\t\t\t<li>Real time collaborative documents can\'t be open outside\n\t\t\t\t\t\t\tStackEdit.</li>\n\t\t\t\t\t\t<li>Real time collaborative documents can\'t have multiple\n\t\t\t\t\t\t\tsynchronized locations.</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>\n\t\t\t\t<a href="#" data-dismiss="modal"\n\t\t\t\t\tclass="btn btn-primary action-sync-export-gdrive">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-upload-dropbox">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Export to Dropbox</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>\n\t\t\t\t\tThis will save "<span class="file-title"></span>" to your <i\n\t\t\t\t\t\tclass="icon-provider-dropbox"></i>\n\t\t\t\t\t<code>Dropbox</code>\n\t\t\t\t\taccount and keep it synchronized.\n\t\t\t\t</p>\n\t\t\t\t<div class="form-horizontal">\n\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t<label class="col-lg-3 control-label"\n\t\t\t\t\t\t\tfor="input-sync-export-dropbox-path">File path</label>\n\t\t\t\t\t\t<div class="col-lg-8">\n\t\t\t\t\t\t\t<input type="text" id="input-sync-export-dropbox-path"\n\t\t\t\t\t\t\t\tplaceholder="/path/to/My Document.md" class="form-control">\n\t\t\t\t\t\t\t<span class="help-block"> File path is composed of both\n\t\t\t\t\t\t\t\tfolder and filename. </span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<b>NOTE:</b>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Dropbox file path does not depend on document title.</li>\n\t\t\t\t\t\t<li>The title of your document will not be synchronized.</li>\n\t\t\t\t\t\t<li>Destination folder must exist.</li>\n\t\t\t\t\t\t<li>Any existing file at this location will be overwritten.</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>\n\t\t\t\t<a href="#" data-dismiss="modal"\n\t\t\t\t\tclass="btn btn-primary action-sync-export-dropbox">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-manage-sync">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Synchronization</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p class="msg-sync-list hide">\n\t\t\t\t\t"<span class="file-title"></span>" is synchronized with the\n\t\t\t\t\tfollowing location(s):\n\t\t\t\t</p>\n\t\t\t\t<div class="msg-sync-list sync-list hide"></div>\n\t\t\t\t<blockquote class="msg-sync-list hide">\n\t\t\t\t\t<b>NOTE:</b> Removing a synchronized location will not delete any\n\t\t\t\t\tfile.\n\t\t\t\t</blockquote>\n\t\t\t\t<blockquote class="msg-no-sync hide">\n\t\t\t\t\t"<span class="file-title"></span>" is not synchronized yet. <br />\n\t\t\t\t\t<br /> <b>NOTE:</b> You can add synchronized locations by\n\t\t\t\t\texporting your document using <i class="icon-provider-gdrive"></i>\n\t\t\t\t\t<code>Google Drive</code>\n\t\t\t\t\tor <i class="icon-provider-dropbox"></i>\n\t\t\t\t\t<code>Dropbox</code>\n\t\t\t\t\tsub-menu.\n\t\t\t\t</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-primary" data-dismiss="modal">Close</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-publish">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">\n\t\t\t\t\tPublish on <span class="publish-provider-name"></span>\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<div class="form-horizontal">\n\t\t\t\t\t<div class="form-group modal-publish-ssh">\n\t\t\t\t\t\t<label class="col-lg-4 control-label" for="input-publish-ssh-host">Host</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-ssh-host"\n\t\t\t\t\t\t\t\tplaceholder="host.name.or.ip" class="form-control"> <span\n\t\t\t\t\t\t\t\tclass="help-block"> Host must be accessible publicly,\n\t\t\t\t\t\t\t\tunless you are hosting your own <a target="_blank"\n\t\t\t\t\t\t\t\thref="https://github.com/benweet/stackedit-ssh-proxy">SSH\n\t\t\t\t\t\t\t\t\tproxy</a>.\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-ssh">\n\t\t\t\t\t\t<label class="col-lg-4 control-label" for="input-publish-ssh-port">Port\n\t\t\t\t\t\t\t(optional)</label>\n\t\t\t\t\t\t<div class="col-lg-2">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-ssh-port" placeholder="22"\n\t\t\t\t\t\t\t\tclass="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-ssh">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-ssh-username">Username</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-ssh-username"\n\t\t\t\t\t\t\t\tplaceholder="username" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-ssh">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-ssh-password">Password</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="password" id="input-publish-ssh-password"\n\t\t\t\t\t\t\t\tplaceholder="password" class="form-control"> <span\n\t\t\t\t\t\t\t\tclass="help-block"> Passwords are transmitted in clear,\n\t\t\t\t\t\t\t\tunless you are hosting your own <a target="_blank"\n\t\t\t\t\t\t\t\thref="https://github.com/benweet/stackedit-ssh-proxy">SSH\n\t\t\t\t\t\t\t\t\tproxy</a>.\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-github">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-github-reponame">Repository</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-github-reponame"\n\t\t\t\t\t\t\t\tplaceholder="repository-name" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-github">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-github-username">Username (optional)</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-github-username"\n\t\t\t\t\t\t\t\tplaceholder="username" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-github">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-github-branch">Branch</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-github-branch"\n\t\t\t\t\t\t\t\tplaceholder="branch-name" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-ssh modal-publish-github">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-file-path">File path</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-file-path"\n\t\t\t\t\t\t\t\tplaceholder="path/to/file.md" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-gist">\n\t\t\t\t\t\t<label class="col-lg-4 control-label" for="input-publish-filename">Filename</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-filename"\n\t\t\t\t\t\t\t\tplaceholder="filename" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-gist">\n\t\t\t\t\t\t<label class="col-lg-4 control-label" for="input-publish-gist-id">Existing\n\t\t\t\t\t\t\tID (optional)</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-gist-id"\n\t\t\t\t\t\t\t\tplaceholder="GistID" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-gist">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-gist-public">Public</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<div class="checkbox">\n\t\t\t\t\t\t\t\t<input type="checkbox" id="input-publish-gist-public"\n\t\t\t\t\t\t\t\t\tchecked="checked" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-blogger">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-blogger-url">Blog URL</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-blogger-url"\n\t\t\t\t\t\t\t\tplaceholder="http://exemple.blogger.com/" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-tumblr">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-tumblr-hostname">Blog hostname</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-tumblr-hostname"\n\t\t\t\t\t\t\t\tplaceholder="exemple.tumblr.com" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-wordpress">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-tumblr-hostname">WordPress site</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-wordpress-site"\n\t\t\t\t\t\t\t\tplaceholder="exemple.wordpress.com" class="form-control">\n\t\t\t\t\t\t\t<span class="help-block"> <a target="_blank"\n\t\t\t\t\t\t\t\thref="http://jetpack.me/">Jetpack plugin</a> is required for\n\t\t\t\t\t\t\t\tself-hosted sites.\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass="form-group modal-publish-blogger modal-publish-tumblr modal-publish-wordpress">\n\t\t\t\t\t\t<label class="col-lg-4 control-label" for="input-publish-postid">Update\n\t\t\t\t\t\t\texisting post ID (optional)</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-postid" placeholder="PostID"\n\t\t\t\t\t\t\t\tclass="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-dropbox">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-dropbox-path">File path</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-dropbox-path"\n\t\t\t\t\t\t\t\tplaceholder="/path/to/My Document.html" class="form-control">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-gdrive">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-gdrive-fileid">File ID (optional)</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-gdrive-fileid"\n\t\t\t\t\t\t\t\tplaceholder="FileID" class="form-control"> <span\n\t\t\t\t\t\t\t\tclass="help-block">If no file ID is supplied, a new file\n\t\t\t\t\t\t\t\twill be created in your Google Drive root folder. You can move\n\t\t\t\t\t\t\t\tthe file afterwards within Google Drive.</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="form-group modal-publish-gdrive">\n\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\tfor="input-publish-gdrive-filename">Force filename\n\t\t\t\t\t\t\t(optional)</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<input type="text" id="input-publish-gdrive-filename"\n\t\t\t\t\t\t\t\tplaceholder="Filename" class="form-control"> <span\n\t\t\t\t\t\t\t\tclass="help-block">If no file name is supplied, the\n\t\t\t\t\t\t\t\tdocument title will be used.</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t<label class="col-lg-4 control-label">Format</label>\n\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t<div class="radio">\n\t\t\t\t\t\t\t\t<label> <input type="radio" name="radio-publish-format"\n\t\t\t\t\t\t\t\t\tvalue="markdown"> Markdown\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="radio">\n\t\t\t\t\t\t\t\t<label> <input type="radio" name="radio-publish-format"\n\t\t\t\t\t\t\t\t\tvalue="html"> HTML\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="radio">\n\t\t\t\t\t\t\t\t<label> <input type="radio" name="radio-publish-format"\n\t\t\t\t\t\t\t\t\tvalue="template"> Template\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="collapse publish-custom-template-collapse">\n\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t<div class="col-lg-4"></div>\n\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t<div class="checkbox">\n\t\t\t\t\t\t\t\t\t<label> <input type="checkbox"\n\t\t\t\t\t\t\t\t\t\tid="checkbox-publish-custom-template"> Custom template\n\t\t\t\t\t\t\t\t\t</label> <a href="#" class="tooltip-template">(?)</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t<div class="col-lg-4"></div>\n\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t<textarea class="form-control"\n\t\t\t\t\t\t\t\t\tid="textarea-publish-custom-template"></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<blockquote class="front-matter-info modal-publish-blogger modal-publish-tumblr modal-publish-wordpress">\n                    <p><b>NOTE:</b> You can use a\n                    <a href="http://jekyllrb.com/docs/frontmatter/"\n                    target="_blank">YAML front matter</a> to specify the title and the tags/labels of your publication.</p>\n                    <p><b>Interpreted variables:</b> <i>title, categories/tags</i></p>\n\t\t\t\t</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>\n\t\t\t\t<a href="#" data-dismiss="modal"\n\t\t\t\t\tclass="btn btn-primary action-process-publish">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-manage-publish">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Publication</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p class="msg-publish-list hide">\n\t\t\t\t\t"<span class="file-title"></span>" is published on the following\n\t\t\t\t\tlocation(s):\n\t\t\t\t</p>\n\t\t\t\t<div class="msg-publish-list publish-list hide"></div>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<div class="msg-no-publish hide">\n\t\t\t\t\t\t"<span class="file-title"></span>" is not published yet. <br /> <br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<b>NOTE:</b> You can add publications using "Publish on" sub-menu.\n\t\t\t\t</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-primary" data-dismiss="modal">Close</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-settings">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<button type="button" class="close" data-dismiss="modal"\n\t\t\t\t\taria-hidden="true">&times;</button>\n\t\t\t\t<h3 class="modal-title">Settings</h3>\n\t\t\t\t<ul class="nav nav-tabs">\n\t\t\t\t\t<li class="active"><a class="action-load-settings"\n\t\t\t\t\t\thref="#tabpane-settings-editor" data-toggle="tab">Editor</a></li>\n\t\t\t\t\t<li><a class="action-load-settings"\n\t\t\t\t\t\thref="#tabpane-settings-services" data-toggle="tab">Services</a></li>\n\t\t\t\t\t<li><a class="action-load-settings"\n\t\t\t\t\t\thref="#tabpane-settings-extensions" data-toggle="tab">Extensions</a></li>\n\t\t\t\t\t<li><a class="action-load-settings"\n\t\t\t\t\t\thref="#tabpane-settings-shortcuts" data-toggle="tab">Shortcuts</a></li>\n\t\t\t\t\t<li><a class="action-load-settings"\n\t\t\t\t\t\thref="#tabpane-settings-utils" data-toggle="tab">Utils</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\n\t\t\t\t<div class="tab-content clearfix">\n\t\t\t\t\t<div class="tab-pane active" id="tabpane-settings-editor">\n\t\t\t\t\t\t<div class="form-horizontal">\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label">Layout orientation</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t\t<div class="radio">\n\t\t\t\t\t\t\t\t\t\t<label> <input type="radio"\n\t\t\t\t\t\t\t\t\t\t\tname="radio-layout-orientation" value="horizontal">\n\t\t\t\t\t\t\t\t\t\t\tHorizontal\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class="radio">\n\t\t\t\t\t\t\t\t\t\t<label> <input type="radio"\n\t\t\t\t\t\t\t\t\t\t\tname="radio-layout-orientation" value="vertical">\n\t\t\t\t\t\t\t\t\t\t\tVertical\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label" for="input-settings-theme">Theme</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t\t<select id="input-settings-theme" class="form-control">\n\t\t\t\t\t\t\t\t\t</select> <span class="help-block"><a target="_blank"\n\t\t\t\t\t\t\t\t\t\thref="https://github.com/benweet/stackedit/blob/master/doc/theming.md#stackedit-theming-guide">Create\n\t\t\t\t\t\t\t\t\t\t\tyour own theme...</a></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\t\t\tfor="input-settings-lazy-rendering">Lazy rendering <a\n\t\t\t\t\t\t\t\t\thref="#" class="tooltip-lazy-rendering">(?)</a>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t\t<div class="checkbox">\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" id="input-settings-lazy-rendering" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\t\t\tfor="input-settings-editor-font-family">Editor font</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-8 form-inline">\n\t\t\t\t\t\t\t\t\t<input type="text" id="input-settings-editor-font-family"\n\t\t\t\t\t\t\t\t\t\tclass="form-control col-lg-7"> <input type="text"\n\t\t\t\t\t\t\t\t\t\tid="input-settings-editor-font-size"\n\t\t\t\t\t\t\t\t\t\tclass="form-control col-lg-2"> px <span\n\t\t\t\t\t\t\t\t\t\tclass="help-block"> Only monospaced fonts are\n\t\t\t\t\t\t\t\t\t\tsupported.</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\t\t\tfor="input-settings-max-width">Max width</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-8 form-inline">\n\t\t\t\t\t\t\t\t\t<input type="text" id="input-settings-max-width"\n\t\t\t\t\t\t\t\t\t\tclass="form-control col-lg-3"> px\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\t\t\tfor="textarea-settings-default-content">Default content\n\t\t\t\t\t\t\t\t\t<a href="#" class="tooltip-default-content">(?)</a>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t\t<textarea id="textarea-settings-default-content"\n\t\t\t\t\t\t\t\t\t\tclass="form-control"></textarea>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="tab-pane" id="tabpane-settings-services">\n\t\t\t\t\t\t<div class="form-horizontal">\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label">Permission</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t\t<div class="checkbox">\n\t\t\t\t\t\t\t\t\t    <label>\n\t\t\t\t\t\t\t\t\t\t    <input type="checkbox" id="input-settings-gdrive-full-access" />\n\t\t\t\t\t\t\t\t\t\t    Allow StackEdit to open any document in Google Drive\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\t\t\tfor="textarea-settings-publish-template">Default\n\t\t\t\t\t\t\t\t\ttemplate <a href="#" class="tooltip-template">(?)</a>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t\t<textarea id="textarea-settings-publish-template"\n\t\t\t\t\t\t\t\t\t\tclass="form-control"></textarea>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\t\t\tfor="textarea-settings-publish-pdf-template">PDF\n\t\t\t\t\t\t\t\t\ttemplate <a href="#" class="tooltip-template">(?)</a>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t\t<textarea id="textarea-settings-publish-pdf-template"\n\t\t\t\t\t\t\t\t\t\tclass="form-control"></textarea>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\t\t\tfor="input-settings-publish-commit-msg">GitHub commit message</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t\t<input type="text" id="input-settings-publish-commit-msg"\n\t\t\t\t\t\t\t\t\t\tclass="form-control">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="form-group">\n\t\t\t\t\t\t\t\t<label class="col-lg-4 control-label"\n\t\t\t\t\t\t\t\t\tfor="input-settings-ssh-proxy">SSH proxy</label>\n\t\t\t\t\t\t\t\t<div class="col-lg-7">\n\t\t\t\t\t\t\t\t\t<input type="text" id="input-settings-ssh-proxy"\n\t\t\t\t\t\t\t\t\t\tclass="form-control">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="tab-pane" id="tabpane-settings-extensions">\n\t\t\t\t\t\t<div class="panel-group accordion-extensions"></div>\n\t\t\t\t\t\t<span class="help-block pull-right"><a target="_blank"\n\t\t\t\t\t\t\thref="https://github.com/benweet/stackedit/blob/master/doc/developer-guide.md#architecture">Create\n\t\t\t\t\t\t\t\tyour own extension...</a></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="tab-pane" id="tabpane-settings-shortcuts">\n\t\t\t\t\t\t<div class="form-horizontal">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="tab-pane" id="tabpane-settings-utils">\n\t\t\t\t\t\t<div class="tab-pane-button-container">\n\t\t\t\t\t\t\t<a href="#"\n\t\t\t\t\t\t\t\tclass="btn btn-block btn-primary action-import-settings"><i\n\t\t\t\t\t\t\t\tclass="icon-wrench icon-white"></i> Import settings</a> <a href="#"\n\t\t\t\t\t\t\t\tclass="btn btn-block btn-primary action-export-settings"\n\t\t\t\t\t\t\t\tdata-dismiss="modal"><i class="icon-wrench icon-white"></i>\n\t\t\t\t\t\t\t\tExport settings</a> <a href="#"\n\t\t\t\t\t\t\t\tclass="btn btn-block btn-primary action-default-settings"\n\t\t\t\t\t\t\t\tdata-dismiss="modal"><i class="icon-wrench icon-white"></i>\n\t\t\t\t\t\t\t\tLoad default settings</a> <input type="file"\n\t\t\t\t\t\t\t\tid="input-file-import-settings" class="hide">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="tab-pane-button-container">\n\t\t\t\t\t\t\t<a href="#" class="btn btn-block btn-primary action-welcome-file"\n\t\t\t\t\t\t\t\tdata-dismiss="modal"><i class="icon-help-circled icon-white"></i>\n\t\t\t\t\t\t\t\tWelcome document</a> <a href="#"\n\t\t\t\t\t\t\t\tclass="btn btn-block btn-primary action-welcome-tour"\n\t\t\t\t\t\t\t\tdata-dismiss="modal" data-dismiss="modal"><i\n\t\t\t\t\t\t\t\tclass="icon-help-circled icon-white"></i> Welcome tour</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="tab-pane-button-container">\n\t\t\t\t\t\t\t<a href="#" class="btn btn-block btn-primary"\n\t\t\t\t\t\t\t\tdata-dismiss="modal" data-toggle="modal"\n\t\t\t\t\t\t\t\tdata-target=".modal-app-reset"><i\n\t\t\t\t\t\t\t\tclass="icon-fire icon-white"></i> Reset application</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>\n\t\t\t\t<a href="#" class="btn btn-primary action-apply-settings"\n\t\t\t\t\tdata-dismiss="modal">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-non-unique">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<h3 class="modal-title">Ooops...</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>StackEdit has stopped because another instance was running in\n\t\t\t\t\tthe same browser.</p>\n\t\t\t\t<blockquote>If you want to reopen StackEdit, click on\n\t\t\t\t\t"Reload".</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="javascript:window.location.reload();"\n\t\t\t\t\tclass="btn btn-primary">Reload</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-oauth-redirect">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<h3 class="modal-title">Authorization</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<blockquote><b>NOTE:</b> You are being redirected to <span class="oauth-redirect-provider"></span> authorization page.</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a class="btn btn-primary action-oauth-redirect" data-dismiss="modal">Continue</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="modal modal-app-reset">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<h3 class="modal-title">Reset application</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>This will delete all your local documents.</p>\n\t\t\t\t<blockquote>Are you sure?</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>\n\t\t\t\t<a href="#" class="btn btn-primary action-app-reset"\n\t\t\t\t\tdata-dismiss="modal">OK</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<div class="lock-ui hide"></div>\n<div id="dropboxjs" data-app-key="x0k2l8puemfvg0o"></div>';});

define('text!html/bodyViewer.html',[],function () { return '\n<div class="navbar navbar-default ui-layout-north">\n\t<div class="navbar-inner">\n\t\t<div class="nav right-space pull-right"></div>\n\n\t\t<ul class="nav pull-right">\n\t\t\t<li class="btn-group">\n\t\t\t\t<button class="btn btn-success action-edit-document hide"\n\t\t\t\t\ttitle="Edit this document">\n\t\t\t\t\t<i class="icon-pencil"></i>\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t\t<li class="btn-group">\n\t\t\t\t<button class="btn btn-success dropdown-toggle"\n\t\t\t\t\tdata-toggle="dropdown" title="Save this document">\n\t\t\t\t\t<i class="icon-download"></i>\n\t\t\t\t</button>\n\t\t\t\t<ul class="dropdown-menu">\n\t\t\t\t\t<li><a class="action-download-md" href="#">Save as\n\t\t\t\t\t\t\tMarkdown</a></li>\n\t\t\t\t\t<li><a class="action-download-html" href="#">Save as HTML</a></li>\n\t\t\t\t\t<li><a class="action-download-template" href="#">Save\n\t\t\t\t\t\t\tusing template</a></li>\n\t\t\t\t\t<li><a class="action-download-pdf" href="#">Save as PDF</a></li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t\t<ul class="nav pull-right">\n\t\t\t<li><span class="file-title-navbar"></span></li>\n\t\t</ul>\n\t\t<ul class="nav pull-right">\n\t\t\t<li><i class="working-indicator icon-none"></i></li>\n\t\t</ul>\n\n\t</div>\n</div>\n<div id="wmd-button-bar" class="hide"></div>\n<div id="wmd-input" class="hide"></div>\n<div class="ui-layout-center preview-container"></div>\n\n<div class="menu-panel collapse width">\n\t<button class="btn btn-success collapse-button action-open-stackedit"\n\t\ttitle="Open StackEdit">\n\t\t<i class="icon-left-dir"></i> <img\n\t\t\tdata-stackedit-src="stackedit-64.png" width="32" height="32" />\n\t</button>\n</div>\n\n<div class="document-panel collapse width">\n\t<button class="btn btn-success collapse-button" data-toggle="collapse"\n\t\tdata-target=".document-panel" title="Select document">\n\t\t<i class="icon-folder-open"></i> <i class="icon-right-open"></i>\n\t</button>\n\t<div class="search-bar clearfix">\n\t\t<div class="input-group">\n\t\t\t<span class="input-group-addon"><i class="icon-search"></i></span><input\n\t\t\t\ttype="text" class="form-control"></input>\n\t\t\t<button type="button" class="close" title="clear">&times;</button>\n\t\t\t<div class="input-group-btn">\n\t\t\t\t<a data-toggle="modal" data-target=".modal-document-manager"\n\t\t\t\t\tclass="btn btn-link" title="Manage documents"><i\n\t\t\t\t\tclass="icon-layers"></i></a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class="panel-content">\n\t\t<div class="list-group document-list"></div>\n\t\t<div class="list-group document-list-filtered hide"></div>\n\t</div>\n</div>\n\n<div class="modal modal-non-unique">\n\t<div class="modal-dialog">\n\t\t<div class="modal-content">\n\n\t\t\t<div class="modal-header">\n\t\t\t\t<h3 class="modal-title">Ooops...</h3>\n\t\t\t</div>\n\t\t\t<div class="modal-body">\n\t\t\t\t<p>StackEdit has stopped because another instance was running in\n\t\t\t\t\tthe same browser.</p>\n\t\t\t\t<blockquote>If you want to reopen StackEdit, click on\n\t\t\t\t\t"Reload".</blockquote>\n\t\t\t</div>\n\t\t\t<div class="modal-footer">\n\t\t\t\t<a href="javascript:window.location.reload();"\n\t\t\t\t\tclass="btn btn-primary">Reload</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n';});

define('text!html/settingsTemplateTooltip.html',[],function () { return 'Available variables:\n<br>\n<ul>\n    <li>\n        <b>documentTitle</b>: document title</li>\n    <li>\n        <b>documentMarkdown</b>: document in Markdown format</li>\n    <li>\n        <b>documentHTML</b>: document in HTML format</li>\n    <li>\n        <b>frontMatter</b>: YAML front matter object (undefined if not present)</li>\n    <li>\n        <b>publishAttributes</b>: attributes of the publish location (undefined if\n        not publishing)</li>\n</ul>\n<b>Examples:</b>\n<br />&lt;title&gt;&lt;%= documentTitle %&gt;&lt;&#x2F;title&gt;\n<br />&lt;div&gt;&lt;%- documentHTML %&gt;&lt;&#x2F;div&gt;\n<br />&lt;%\n<br />if(publishAttributes.provider.providerId == &quot;github&quot;) print(documentMarkdown);\n<br\n/>%&gt;\n<br />\n<br />\n<a target="_blank" href="http://underscorejs.org/#template">More\n\tinfo</a>\n<br />\n<br />\n<b class="text-danger">\n    <i class="icon-attention"></i>Careful! Template is subject to malicious code. Don\'t copy/paste untrusted\n    content.</b>';});

define('text!html/settingsUserCustomExtensionTooltip.html',[],function () { return 'Extension variable name:\n<b>userCustom</b>\n<br>\n<br>\n<b>Example:</b>\n<br />\nuserCustom.onPreviewFinished = function() {\n<br />\n&nbsp;&nbsp;eventMgr.onMessage(&quot;Finished!&quot;);\n<br />\n};\n<br />\n<br />\n<a target="_blank"\n\thref="https://github.com/benweet/stackedit/blob/master/doc/developer-guide.md#architecture">More\n\tinfo</a>\n<br />\n<br />\n<b class="text-danger"><i class="icon-attention"></i> Careful! This is subject to malicious code. Don\'t copy/paste untrusted content.</b>';});

/*!
 * jQuery UI Core 1.10.3
 * http://jqueryui.com
 *
 * Copyright 2013 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */
(function( $, undefined ) {

var uuid = 0,
	runiqueId = /^ui-id-\d+$/;

// $.ui might exist from components with no dependencies, e.g., $.ui.position
$.ui = $.ui || {};

$.extend( $.ui, {
	version: "1.10.3",

	keyCode: {
		BACKSPACE: 8,
		COMMA: 188,
		DELETE: 46,
		DOWN: 40,
		END: 35,
		ENTER: 13,
		ESCAPE: 27,
		HOME: 36,
		LEFT: 37,
		NUMPAD_ADD: 107,
		NUMPAD_DECIMAL: 110,
		NUMPAD_DIVIDE: 111,
		NUMPAD_ENTER: 108,
		NUMPAD_MULTIPLY: 106,
		NUMPAD_SUBTRACT: 109,
		PAGE_DOWN: 34,
		PAGE_UP: 33,
		PERIOD: 190,
		RIGHT: 39,
		SPACE: 32,
		TAB: 9,
		UP: 38
	}
});

// plugins
$.fn.extend({
	focus: (function( orig ) {
		return function( delay, fn ) {
			return typeof delay === "number" ?
				this.each(function() {
					var elem = this;
					setTimeout(function() {
						$( elem ).focus();
						if ( fn ) {
							fn.call( elem );
						}
					}, delay );
				}) :
				orig.apply( this, arguments );
		};
	})( $.fn.focus ),

	scrollParent: function() {
		var scrollParent;
		if (($.ui.ie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) {
			scrollParent = this.parents().filter(function() {
				return (/(relative|absolute|fixed)/).test($.css(this,"position")) && (/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"));
			}).eq(0);
		} else {
			scrollParent = this.parents().filter(function() {
				return (/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"));
			}).eq(0);
		}

		return (/fixed/).test(this.css("position")) || !scrollParent.length ? $(document) : scrollParent;
	},

	zIndex: function( zIndex ) {
		if ( zIndex !== undefined ) {
			return this.css( "zIndex", zIndex );
		}

		if ( this.length ) {
			var elem = $( this[ 0 ] ), position, value;
			while ( elem.length && elem[ 0 ] !== document ) {
				// Ignore z-index if position is set to a value where z-index is ignored by the browser
				// This makes behavior of this function consistent across browsers
				// WebKit always returns auto if the element is positioned
				position = elem.css( "position" );
				if ( position === "absolute" || position === "relative" || position === "fixed" ) {
					// IE returns 0 when zIndex is not specified
					// other browsers return a string
					// we ignore the case of nested elements with an explicit value of 0
					// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
					value = parseInt( elem.css( "zIndex" ), 10 );
					if ( !isNaN( value ) && value !== 0 ) {
						return value;
					}
				}
				elem = elem.parent();
			}
		}

		return 0;
	},

	uniqueId: function() {
		return this.each(function() {
			if ( !this.id ) {
				this.id = "ui-id-" + (++uuid);
			}
		});
	},

	removeUniqueId: function() {
		return this.each(function() {
			if ( runiqueId.test( this.id ) ) {
				$( this ).removeAttr( "id" );
			}
		});
	}
});

// selectors
function focusable( element, isTabIndexNotNaN ) {
	var map, mapName, img,
		nodeName = element.nodeName.toLowerCase();
	if ( "area" === nodeName ) {
		map = element.parentNode;
		mapName = map.name;
		if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {
			return false;
		}
		img = $( "img[usemap=#" + mapName + "]" )[0];
		return !!img && visible( img );
	}
	return ( /input|select|textarea|button|object/.test( nodeName ) ?
		!element.disabled :
		"a" === nodeName ?
			element.href || isTabIndexNotNaN :
			isTabIndexNotNaN) &&
		// the element and all of its ancestors must be visible
		visible( element );
}

function visible( element ) {
	return $.expr.filters.visible( element ) &&
		!$( element ).parents().addBack().filter(function() {
			return $.css( this, "visibility" ) === "hidden";
		}).length;
}

$.extend( $.expr[ ":" ], {
	data: $.expr.createPseudo ?
		$.expr.createPseudo(function( dataName ) {
			return function( elem ) {
				return !!$.data( elem, dataName );
			};
		}) :
		// support: jQuery <1.8
		function( elem, i, match ) {
			return !!$.data( elem, match[ 3 ] );
		},

	focusable: function( element ) {
		return focusable( element, !isNaN( $.attr( element, "tabindex" ) ) );
	},

	tabbable: function( element ) {
		var tabIndex = $.attr( element, "tabindex" ),
			isTabIndexNaN = isNaN( tabIndex );
		return ( isTabIndexNaN || tabIndex >= 0 ) && focusable( element, !isTabIndexNaN );
	}
});

// support: jQuery <1.8
if ( !$( "<a>" ).outerWidth( 1 ).jquery ) {
	$.each( [ "Width", "Height" ], function( i, name ) {
		var side = name === "Width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ],
			type = name.toLowerCase(),
			orig = {
				innerWidth: $.fn.innerWidth,
				innerHeight: $.fn.innerHeight,
				outerWidth: $.fn.outerWidth,
				outerHeight: $.fn.outerHeight
			};

		function reduce( elem, size, border, margin ) {
			$.each( side, function() {
				size -= parseFloat( $.css( elem, "padding" + this ) ) || 0;
				if ( border ) {
					size -= parseFloat( $.css( elem, "border" + this + "Width" ) ) || 0;
				}
				if ( margin ) {
					size -= parseFloat( $.css( elem, "margin" + this ) ) || 0;
				}
			});
			return size;
		}

		$.fn[ "inner" + name ] = function( size ) {
			if ( size === undefined ) {
				return orig[ "inner" + name ].call( this );
			}

			return this.each(function() {
				$( this ).css( type, reduce( this, size ) + "px" );
			});
		};

		$.fn[ "outer" + name] = function( size, margin ) {
			if ( typeof size !== "number" ) {
				return orig[ "outer" + name ].call( this, size );
			}

			return this.each(function() {
				$( this).css( type, reduce( this, size, true, margin ) + "px" );
			});
		};
	});
}

// support: jQuery <1.8
if ( !$.fn.addBack ) {
	$.fn.addBack = function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	};
}

// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)
if ( $( "<a>" ).data( "a-b", "a" ).removeData( "a-b" ).data( "a-b" ) ) {
	$.fn.removeData = (function( removeData ) {
		return function( key ) {
			if ( arguments.length ) {
				return removeData.call( this, $.camelCase( key ) );
			} else {
				return removeData.call( this );
			}
		};
	})( $.fn.removeData );
}





// deprecated
$.ui.ie = !!/msie [\w.]+/.exec( navigator.userAgent.toLowerCase() );

$.support.selectstart = "onselectstart" in document.createElement( "div" );
$.fn.extend({
	disableSelection: function() {
		return this.bind( ( $.support.selectstart ? "selectstart" : "mousedown" ) +
			".ui-disableSelection", function( event ) {
				event.preventDefault();
			});
	},

	enableSelection: function() {
		return this.unbind( ".ui-disableSelection" );
	}
});

$.extend( $.ui, {
	// $.ui.plugin is deprecated. Use $.widget() extensions instead.
	plugin: {
		add: function( module, option, set ) {
			var i,
				proto = $.ui[ module ].prototype;
			for ( i in set ) {
				proto.plugins[ i ] = proto.plugins[ i ] || [];
				proto.plugins[ i ].push( [ option, set[ i ] ] );
			}
		},
		call: function( instance, name, args ) {
			var i,
				set = instance.plugins[ name ];
			if ( !set || !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) {
				return;
			}

			for ( i = 0; i < set.length; i++ ) {
				if ( instance.options[ set[ i ][ 0 ] ] ) {
					set[ i ][ 1 ].apply( instance.element, args );
				}
			}
		}
	},

	// only used by resizable
	hasScroll: function( el, a ) {

		//If overflow is hidden, the element might have extra content, but the user wants to hide it
		if ( $( el ).css( "overflow" ) === "hidden") {
			return false;
		}

		var scroll = ( a && a === "left" ) ? "scrollLeft" : "scrollTop",
			has = false;

		if ( el[ scroll ] > 0 ) {
			return true;
		}

		// TODO: determine which cases actually cause this to happen
		// if the element doesn't have the scroll set, see if it's possible to
		// set the scroll
		el[ scroll ] = 1;
		has = ( el[ scroll ] > 0 );
		el[ scroll ] = 0;
		return has;
	}
});

})( jQuery );

define("jquery-ui-core", function(){});

/*!
 * jQuery UI Widget 1.10.3
 * http://jqueryui.com
 *
 * Copyright 2013 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/jQuery.widget/
 */
(function( $, undefined ) {

var uuid = 0,
	slice = Array.prototype.slice,
	_cleanData = $.cleanData;
$.cleanData = function( elems ) {
	for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
		try {
			$( elem ).triggerHandler( "remove" );
		// http://bugs.jquery.com/ticket/8235
		} catch( e ) {}
	}
	_cleanData( elems );
};

$.widget = function( name, base, prototype ) {
	var fullName, existingConstructor, constructor, basePrototype,
		// proxiedPrototype allows the provided prototype to remain unmodified
		// so that it can be used as a mixin for multiple widgets (#8876)
		proxiedPrototype = {},
		namespace = name.split( "." )[ 0 ];

	name = name.split( "." )[ 1 ];
	fullName = namespace + "-" + name;

	if ( !prototype ) {
		prototype = base;
		base = $.Widget;
	}

	// create selector for plugin
	$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {
		return !!$.data( elem, fullName );
	};

	$[ namespace ] = $[ namespace ] || {};
	existingConstructor = $[ namespace ][ name ];
	constructor = $[ namespace ][ name ] = function( options, element ) {
		// allow instantiation without "new" keyword
		if ( !this._createWidget ) {
			return new constructor( options, element );
		}

		// allow instantiation without initializing for simple inheritance
		// must use "new" keyword (the code above always passes args)
		if ( arguments.length ) {
			this._createWidget( options, element );
		}
	};
	// extend with the existing constructor to carry over any static properties
	$.extend( constructor, existingConstructor, {
		version: prototype.version,
		// copy the object used to create the prototype in case we need to
		// redefine the widget later
		_proto: $.extend( {}, prototype ),
		// track widgets that inherit from this widget in case this widget is
		// redefined after a widget inherits from it
		_childConstructors: []
	});

	basePrototype = new base();
	// we need to make the options hash a property directly on the new instance
	// otherwise we'll modify the options hash on the prototype that we're
	// inheriting from
	basePrototype.options = $.widget.extend( {}, basePrototype.options );
	$.each( prototype, function( prop, value ) {
		if ( !$.isFunction( value ) ) {
			proxiedPrototype[ prop ] = value;
			return;
		}
		proxiedPrototype[ prop ] = (function() {
			var _super = function() {
					return base.prototype[ prop ].apply( this, arguments );
				},
				_superApply = function( args ) {
					return base.prototype[ prop ].apply( this, args );
				};
			return function() {
				var __super = this._super,
					__superApply = this._superApply,
					returnValue;

				this._super = _super;
				this._superApply = _superApply;

				returnValue = value.apply( this, arguments );

				this._super = __super;
				this._superApply = __superApply;

				return returnValue;
			};
		})();
	});
	constructor.prototype = $.widget.extend( basePrototype, {
		// TODO: remove support for widgetEventPrefix
		// always use the name + a colon as the prefix, e.g., draggable:start
		// don't prefix for widgets that aren't DOM-based
		widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix : name
	}, proxiedPrototype, {
		constructor: constructor,
		namespace: namespace,
		widgetName: name,
		widgetFullName: fullName
	});

	// If this widget is being redefined then we need to find all widgets that
	// are inheriting from it and redefine all of them so that they inherit from
	// the new version of this widget. We're essentially trying to replace one
	// level in the prototype chain.
	if ( existingConstructor ) {
		$.each( existingConstructor._childConstructors, function( i, child ) {
			var childPrototype = child.prototype;

			// redefine the child widget using the same prototype that was
			// originally used, but inherit from the new version of the base
			$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto );
		});
		// remove the list of existing child constructors from the old constructor
		// so the old child constructors can be garbage collected
		delete existingConstructor._childConstructors;
	} else {
		base._childConstructors.push( constructor );
	}

	$.widget.bridge( name, constructor );
};

$.widget.extend = function( target ) {
	var input = slice.call( arguments, 1 ),
		inputIndex = 0,
		inputLength = input.length,
		key,
		value;
	for ( ; inputIndex < inputLength; inputIndex++ ) {
		for ( key in input[ inputIndex ] ) {
			value = input[ inputIndex ][ key ];
			if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {
				// Clone objects
				if ( $.isPlainObject( value ) ) {
					target[ key ] = $.isPlainObject( target[ key ] ) ?
						$.widget.extend( {}, target[ key ], value ) :
						// Don't extend strings, arrays, etc. with objects
						$.widget.extend( {}, value );
				// Copy everything else by reference
				} else {
					target[ key ] = value;
				}
			}
		}
	}
	return target;
};

$.widget.bridge = function( name, object ) {
	var fullName = object.prototype.widgetFullName || name;
	$.fn[ name ] = function( options ) {
		var isMethodCall = typeof options === "string",
			args = slice.call( arguments, 1 ),
			returnValue = this;

		// allow multiple hashes to be passed on init
		options = !isMethodCall && args.length ?
			$.widget.extend.apply( null, [ options ].concat(args) ) :
			options;

		if ( isMethodCall ) {
			this.each(function() {
				var methodValue,
					instance = $.data( this, fullName );
				if ( !instance ) {
					return $.error( "cannot call methods on " + name + " prior to initialization; " +
						"attempted to call method '" + options + "'" );
				}
				if ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === "_" ) {
					return $.error( "no such method '" + options + "' for " + name + " widget instance" );
				}
				methodValue = instance[ options ].apply( instance, args );
				if ( methodValue !== instance && methodValue !== undefined ) {
					returnValue = methodValue && methodValue.jquery ?
						returnValue.pushStack( methodValue.get() ) :
						methodValue;
					return false;
				}
			});
		} else {
			this.each(function() {
				var instance = $.data( this, fullName );
				if ( instance ) {
					instance.option( options || {} )._init();
				} else {
					$.data( this, fullName, new object( options, this ) );
				}
			});
		}

		return returnValue;
	};
};

$.Widget = function( /* options, element */ ) {};
$.Widget._childConstructors = [];

$.Widget.prototype = {
	widgetName: "widget",
	widgetEventPrefix: "",
	defaultElement: "<div>",
	options: {
		disabled: false,

		// callbacks
		create: null
	},
	_createWidget: function( options, element ) {
		element = $( element || this.defaultElement || this )[ 0 ];
		this.element = $( element );
		this.uuid = uuid++;
		this.eventNamespace = "." + this.widgetName + this.uuid;
		this.options = $.widget.extend( {},
			this.options,
			this._getCreateOptions(),
			options );

		this.bindings = $();
		this.hoverable = $();
		this.focusable = $();

		if ( element !== this ) {
			$.data( element, this.widgetFullName, this );
			this._on( true, this.element, {
				remove: function( event ) {
					if ( event.target === element ) {
						this.destroy();
					}
				}
			});
			this.document = $( element.style ?
				// element within the document
				element.ownerDocument :
				// element is window or document
				element.document || element );
			this.window = $( this.document[0].defaultView || this.document[0].parentWindow );
		}

		this._create();
		this._trigger( "create", null, this._getCreateEventData() );
		this._init();
	},
	_getCreateOptions: $.noop,
	_getCreateEventData: $.noop,
	_create: $.noop,
	_init: $.noop,

	destroy: function() {
		this._destroy();
		// we can probably remove the unbind calls in 2.0
		// all event bindings should go through this._on()
		this.element
			.unbind( this.eventNamespace )
			// 1.9 BC for #7810
			// TODO remove dual storage
			.removeData( this.widgetName )
			.removeData( this.widgetFullName )
			// support: jquery <1.6.3
			// http://bugs.jquery.com/ticket/9413
			.removeData( $.camelCase( this.widgetFullName ) );
		this.widget()
			.unbind( this.eventNamespace )
			.removeAttr( "aria-disabled" )
			.removeClass(
				this.widgetFullName + "-disabled " +
				"ui-state-disabled" );

		// clean up events and states
		this.bindings.unbind( this.eventNamespace );
		this.hoverable.removeClass( "ui-state-hover" );
		this.focusable.removeClass( "ui-state-focus" );
	},
	_destroy: $.noop,

	widget: function() {
		return this.element;
	},

	option: function( key, value ) {
		var options = key,
			parts,
			curOption,
			i;

		if ( arguments.length === 0 ) {
			// don't return a reference to the internal hash
			return $.widget.extend( {}, this.options );
		}

		if ( typeof key === "string" ) {
			// handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
			options = {};
			parts = key.split( "." );
			key = parts.shift();
			if ( parts.length ) {
				curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );
				for ( i = 0; i < parts.length - 1; i++ ) {
					curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};
					curOption = curOption[ parts[ i ] ];
				}
				key = parts.pop();
				if ( value === undefined ) {
					return curOption[ key ] === undefined ? null : curOption[ key ];
				}
				curOption[ key ] = value;
			} else {
				if ( value === undefined ) {
					return this.options[ key ] === undefined ? null : this.options[ key ];
				}
				options[ key ] = value;
			}
		}

		this._setOptions( options );

		return this;
	},
	_setOptions: function( options ) {
		var key;

		for ( key in options ) {
			this._setOption( key, options[ key ] );
		}

		return this;
	},
	_setOption: function( key, value ) {
		this.options[ key ] = value;

		if ( key === "disabled" ) {
			this.widget()
				.toggleClass( this.widgetFullName + "-disabled ui-state-disabled", !!value )
				.attr( "aria-disabled", value );
			this.hoverable.removeClass( "ui-state-hover" );
			this.focusable.removeClass( "ui-state-focus" );
		}

		return this;
	},

	enable: function() {
		return this._setOption( "disabled", false );
	},
	disable: function() {
		return this._setOption( "disabled", true );
	},

	_on: function( suppressDisabledCheck, element, handlers ) {
		var delegateElement,
			instance = this;

		// no suppressDisabledCheck flag, shuffle arguments
		if ( typeof suppressDisabledCheck !== "boolean" ) {
			handlers = element;
			element = suppressDisabledCheck;
			suppressDisabledCheck = false;
		}

		// no element argument, shuffle and use this.element
		if ( !handlers ) {
			handlers = element;
			element = this.element;
			delegateElement = this.widget();
		} else {
			// accept selectors, DOM elements
			element = delegateElement = $( element );
			this.bindings = this.bindings.add( element );
		}

		$.each( handlers, function( event, handler ) {
			function handlerProxy() {
				// allow widgets to customize the disabled handling
				// - disabled as an array instead of boolean
				// - disabled class as method for disabling individual parts
				if ( !suppressDisabledCheck &&
						( instance.options.disabled === true ||
							$( this ).hasClass( "ui-state-disabled" ) ) ) {
					return;
				}
				return ( typeof handler === "string" ? instance[ handler ] : handler )
					.apply( instance, arguments );
			}

			// copy the guid so direct unbinding works
			if ( typeof handler !== "string" ) {
				handlerProxy.guid = handler.guid =
					handler.guid || handlerProxy.guid || $.guid++;
			}

			var match = event.match( /^(\w+)\s*(.*)$/ ),
				eventName = match[1] + instance.eventNamespace,
				selector = match[2];
			if ( selector ) {
				delegateElement.delegate( selector, eventName, handlerProxy );
			} else {
				element.bind( eventName, handlerProxy );
			}
		});
	},

	_off: function( element, eventName ) {
		eventName = (eventName || "").split( " " ).join( this.eventNamespace + " " ) + this.eventNamespace;
		element.unbind( eventName ).undelegate( eventName );
	},

	_delay: function( handler, delay ) {
		function handlerProxy() {
			return ( typeof handler === "string" ? instance[ handler ] : handler )
				.apply( instance, arguments );
		}
		var instance = this;
		return setTimeout( handlerProxy, delay || 0 );
	},

	_hoverable: function( element ) {
		this.hoverable = this.hoverable.add( element );
		this._on( element, {
			mouseenter: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-hover" );
			},
			mouseleave: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-hover" );
			}
		});
	},

	_focusable: function( element ) {
		this.focusable = this.focusable.add( element );
		this._on( element, {
			focusin: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-focus" );
			},
			focusout: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-focus" );
			}
		});
	},

	_trigger: function( type, event, data ) {
		var prop, orig,
			callback = this.options[ type ];

		data = data || {};
		event = $.Event( event );
		event.type = ( type === this.widgetEventPrefix ?
			type :
			this.widgetEventPrefix + type ).toLowerCase();
		// the original event may come from any element
		// so we need to reset the target on the new event
		event.target = this.element[ 0 ];

		// copy original event properties over to the new event
		orig = event.originalEvent;
		if ( orig ) {
			for ( prop in orig ) {
				if ( !( prop in event ) ) {
					event[ prop ] = orig[ prop ];
				}
			}
		}

		this.element.trigger( event, data );
		return !( $.isFunction( callback ) &&
			callback.apply( this.element[0], [ event ].concat( data ) ) === false ||
			event.isDefaultPrevented() );
	}
};

$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {
	$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {
		if ( typeof options === "string" ) {
			options = { effect: options };
		}
		var hasOptions,
			effectName = !options ?
				method :
				options === true || typeof options === "number" ?
					defaultEffect :
					options.effect || defaultEffect;
		options = options || {};
		if ( typeof options === "number" ) {
			options = { duration: options };
		}
		hasOptions = !$.isEmptyObject( options );
		options.complete = callback;
		if ( options.delay ) {
			element.delay( options.delay );
		}
		if ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {
			element[ method ]( options );
		} else if ( effectName !== method && element[ effectName ] ) {
			element[ effectName ]( options.duration, options.easing, callback );
		} else {
			element.queue(function( next ) {
				$( this )[ method ]();
				if ( callback ) {
					callback.call( element[ 0 ] );
				}
				next();
			});
		}
	};
});

})( jQuery );

define("jquery-ui-widget", function(){});

/*!
 * jQuery UI Mouse 1.10.3
 * http://jqueryui.com
 *
 * Copyright 2013 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/mouse/
 *
 * Depends:
 *	jquery.ui.widget.js
 */
(function( $, undefined ) {

var mouseHandled = false;
$( document ).mouseup( function() {
	mouseHandled = false;
});

$.widget("ui.mouse", {
	version: "1.10.3",
	options: {
		cancel: "input,textarea,button,select,option",
		distance: 1,
		delay: 0
	},
	_mouseInit: function() {
		var that = this;

		this.element
			.bind("mousedown."+this.widgetName, function(event) {
				return that._mouseDown(event);
			})
			.bind("click."+this.widgetName, function(event) {
				if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {
					$.removeData(event.target, that.widgetName + ".preventClickEvent");
					event.stopImmediatePropagation();
					return false;
				}
			});

		this.started = false;
	},

	// TODO: make sure destroying one instance of mouse doesn't mess with
	// other instances of mouse
	_mouseDestroy: function() {
		this.element.unbind("."+this.widgetName);
		if ( this._mouseMoveDelegate ) {
			$(document)
				.unbind("mousemove."+this.widgetName, this._mouseMoveDelegate)
				.unbind("mouseup."+this.widgetName, this._mouseUpDelegate);
		}
	},

	_mouseDown: function(event) {
		// don't let more than one widget handle mouseStart
		if( mouseHandled ) { return; }

		// we may have missed mouseup (out of window)
		(this._mouseStarted && this._mouseUp(event));

		this._mouseDownEvent = event;

		var that = this,
			btnIsLeft = (event.which === 1),
			// event.target.nodeName works around a bug in IE 8 with
			// disabled inputs (#7620)
			elIsCancel = (typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);
		if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
			return true;
		}

		this.mouseDelayMet = !this.options.delay;
		if (!this.mouseDelayMet) {
			this._mouseDelayTimer = setTimeout(function() {
				that.mouseDelayMet = true;
			}, this.options.delay);
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted = (this._mouseStart(event) !== false);
			if (!this._mouseStarted) {
				event.preventDefault();
				return true;
			}
		}

		// Click event may never have fired (Gecko & Opera)
		if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) {
			$.removeData(event.target, this.widgetName + ".preventClickEvent");
		}

		// these delegates are required to keep context
		this._mouseMoveDelegate = function(event) {
			return that._mouseMove(event);
		};
		this._mouseUpDelegate = function(event) {
			return that._mouseUp(event);
		};
		$(document)
			.bind("mousemove."+this.widgetName, this._mouseMoveDelegate)
			.bind("mouseup."+this.widgetName, this._mouseUpDelegate);

		event.preventDefault();

		mouseHandled = true;
		return true;
	},

	_mouseMove: function(event) {
		// IE mouseup check - mouseup happened when mouse was out of window
		if ($.ui.ie && ( !document.documentMode || document.documentMode < 9 ) && !event.button) {
			return this._mouseUp(event);
		}

		if (this._mouseStarted) {
			this._mouseDrag(event);
			return event.preventDefault();
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted =
				(this._mouseStart(this._mouseDownEvent, event) !== false);
			(this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));
		}

		return !this._mouseStarted;
	},

	_mouseUp: function(event) {
		$(document)
			.unbind("mousemove."+this.widgetName, this._mouseMoveDelegate)
			.unbind("mouseup."+this.widgetName, this._mouseUpDelegate);

		if (this._mouseStarted) {
			this._mouseStarted = false;

			if (event.target === this._mouseDownEvent.target) {
				$.data(event.target, this.widgetName + ".preventClickEvent", true);
			}

			this._mouseStop(event);
		}

		return false;
	},

	_mouseDistanceMet: function(event) {
		return (Math.max(
				Math.abs(this._mouseDownEvent.pageX - event.pageX),
				Math.abs(this._mouseDownEvent.pageY - event.pageY)
			) >= this.options.distance
		);
	},

	_mouseDelayMet: function(/* event */) {
		return this.mouseDelayMet;
	},

	// These are placeholder methods, to be overriden by extending plugin
	_mouseStart: function(/* event */) {},
	_mouseDrag: function(/* event */) {},
	_mouseStop: function(/* event */) {},
	_mouseCapture: function(/* event */) { return true; }
});

})(jQuery);

define("jquery-ui-mouse", function(){});

/*!
 * jQuery UI Draggable 1.10.3
 * http://jqueryui.com
 *
 * Copyright 2013 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/draggable/
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function( $, undefined ) {

$.widget("ui.draggable", $.ui.mouse, {
	version: "1.10.3",
	widgetEventPrefix: "drag",
	options: {
		addClasses: true,
		appendTo: "parent",
		axis: false,
		connectToSortable: false,
		containment: false,
		cursor: "auto",
		cursorAt: false,
		grid: false,
		handle: false,
		helper: "original",
		iframeFix: false,
		opacity: false,
		refreshPositions: false,
		revert: false,
		revertDuration: 500,
		scope: "default",
		scroll: true,
		scrollSensitivity: 20,
		scrollSpeed: 20,
		snap: false,
		snapMode: "both",
		snapTolerance: 20,
		stack: false,
		zIndex: false,

		// callbacks
		drag: null,
		start: null,
		stop: null
	},
	_create: function() {

		if (this.options.helper === "original" && !(/^(?:r|a|f)/).test(this.element.css("position"))) {
			this.element[0].style.position = "relative";
		}
		if (this.options.addClasses){
			this.element.addClass("ui-draggable");
		}
		if (this.options.disabled){
			this.element.addClass("ui-draggable-disabled");
		}

		this._mouseInit();

	},

	_destroy: function() {
		this.element.removeClass( "ui-draggable ui-draggable-dragging ui-draggable-disabled" );
		this._mouseDestroy();
	},

	_mouseCapture: function(event) {

		var o = this.options;

		// among others, prevent a drag on a resizable-handle
		if (this.helper || o.disabled || $(event.target).closest(".ui-resizable-handle").length > 0) {
			return false;
		}

		//Quit if we're not on a valid handle
		this.handle = this._getHandle(event);
		if (!this.handle) {
			return false;
		}

		$(o.iframeFix === true ? "iframe" : o.iframeFix).each(function() {
			$("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>")
			.css({
				width: this.offsetWidth+"px", height: this.offsetHeight+"px",
				position: "absolute", opacity: "0.001", zIndex: 1000
			})
			.css($(this).offset())
			.appendTo("body");
		});

		return true;

	},

	_mouseStart: function(event) {

		var o = this.options;

		//Create and append the visible helper
		this.helper = this._createHelper(event);

		this.helper.addClass("ui-draggable-dragging");

		//Cache the helper size
		this._cacheHelperProportions();

		//If ddmanager is used for droppables, set the global draggable
		if($.ui.ddmanager) {
			$.ui.ddmanager.current = this;
		}

		/*
		 * - Position generation -
		 * This block generates everything position related - it's the core of draggables.
		 */

		//Cache the margins of the original element
		this._cacheMargins();

		//Store the helper's css position
		this.cssPosition = this.helper.css( "position" );
		this.scrollParent = this.helper.scrollParent();
		this.offsetParent = this.helper.offsetParent();
		this.offsetParentCssPosition = this.offsetParent.css( "position" );

		//The element's absolute position on the page minus margins
		this.offset = this.positionAbs = this.element.offset();
		this.offset = {
			top: this.offset.top - this.margins.top,
			left: this.offset.left - this.margins.left
		};

		//Reset scroll cache
		this.offset.scroll = false;

		$.extend(this.offset, {
			click: { //Where the click happened, relative to the element
				left: event.pageX - this.offset.left,
				top: event.pageY - this.offset.top
			},
			parent: this._getParentOffset(),
			relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper
		});

		//Generate the original position
		this.originalPosition = this.position = this._generatePosition(event);
		this.originalPageX = event.pageX;
		this.originalPageY = event.pageY;

		//Adjust the mouse offset relative to the helper if "cursorAt" is supplied
		(o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));

		//Set a containment if given in the options
		this._setContainment();

		//Trigger event + callbacks
		if(this._trigger("start", event) === false) {
			this._clear();
			return false;
		}

		//Recache the helper size
		this._cacheHelperProportions();

		//Prepare the droppable offsets
		if ($.ui.ddmanager && !o.dropBehaviour) {
			$.ui.ddmanager.prepareOffsets(this, event);
		}


		this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position

		//If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)
		if ( $.ui.ddmanager ) {
			$.ui.ddmanager.dragStart(this, event);
		}

		return true;
	},

	_mouseDrag: function(event, noPropagation) {
		// reset any necessary cached properties (see #5009)
		if ( this.offsetParentCssPosition === "fixed" ) {
			this.offset.parent = this._getParentOffset();
		}

		//Compute the helpers position
		this.position = this._generatePosition(event);
		this.positionAbs = this._convertPositionTo("absolute");

		//Call plugins and callbacks and use the resulting position if something is returned
		if (!noPropagation) {
			var ui = this._uiHash();
			if(this._trigger("drag", event, ui) === false) {
				this._mouseUp({});
				return false;
			}
			this.position = ui.position;
		}

		if(!this.options.axis || this.options.axis !== "y") {
			this.helper[0].style.left = this.position.left+"px";
		}
		if(!this.options.axis || this.options.axis !== "x") {
			this.helper[0].style.top = this.position.top+"px";
		}
		if($.ui.ddmanager) {
			$.ui.ddmanager.drag(this, event);
		}

		return false;
	},

	_mouseStop: function(event) {

		//If we are using droppables, inform the manager about the drop
		var that = this,
			dropped = false;
		if ($.ui.ddmanager && !this.options.dropBehaviour) {
			dropped = $.ui.ddmanager.drop(this, event);
		}

		//if a drop comes from outside (a sortable)
		if(this.dropped) {
			dropped = this.dropped;
			this.dropped = false;
		}

		//if the original element is no longer in the DOM don't bother to continue (see #8269)
		if ( this.options.helper === "original" && !$.contains( this.element[ 0 ].ownerDocument, this.element[ 0 ] ) ) {
			return false;
		}

		if((this.options.revert === "invalid" && !dropped) || (this.options.revert === "valid" && dropped) || this.options.revert === true || ($.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped))) {
			$(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
				if(that._trigger("stop", event) !== false) {
					that._clear();
				}
			});
		} else {
			if(this._trigger("stop", event) !== false) {
				this._clear();
			}
		}

		return false;
	},

	_mouseUp: function(event) {
		//Remove frame helpers
		$("div.ui-draggable-iframeFix").each(function() {
			this.parentNode.removeChild(this);
		});

		//If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)
		if( $.ui.ddmanager ) {
			$.ui.ddmanager.dragStop(this, event);
		}

		return $.ui.mouse.prototype._mouseUp.call(this, event);
	},

	cancel: function() {

		if(this.helper.is(".ui-draggable-dragging")) {
			this._mouseUp({});
		} else {
			this._clear();
		}

		return this;

	},

	_getHandle: function(event) {
		return this.options.handle ?
			!!$( event.target ).closest( this.element.find( this.options.handle ) ).length :
			true;
	},

	_createHelper: function(event) {

		var o = this.options,
			helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : (o.helper === "clone" ? this.element.clone().removeAttr("id") : this.element);

		if(!helper.parents("body").length) {
			helper.appendTo((o.appendTo === "parent" ? this.element[0].parentNode : o.appendTo));
		}

		if(helper[0] !== this.element[0] && !(/(fixed|absolute)/).test(helper.css("position"))) {
			helper.css("position", "absolute");
		}

		return helper;

	},

	_adjustOffsetFromHelper: function(obj) {
		if (typeof obj === "string") {
			obj = obj.split(" ");
		}
		if ($.isArray(obj)) {
			obj = {left: +obj[0], top: +obj[1] || 0};
		}
		if ("left" in obj) {
			this.offset.click.left = obj.left + this.margins.left;
		}
		if ("right" in obj) {
			this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
		}
		if ("top" in obj) {
			this.offset.click.top = obj.top + this.margins.top;
		}
		if ("bottom" in obj) {
			this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
		}
	},

	_getParentOffset: function() {

		//Get the offsetParent and cache its position
		var po = this.offsetParent.offset();

		// This is a special case where we need to modify a offset calculated on start, since the following happened:
		// 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
		// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
		//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
		if(this.cssPosition === "absolute" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {
			po.left += this.scrollParent.scrollLeft();
			po.top += this.scrollParent.scrollTop();
		}

		//This needs to be actually done for all browsers, since pageX/pageY includes this information
		//Ugly IE fix
		if((this.offsetParent[0] === document.body) ||
			(this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && $.ui.ie)) {
			po = { top: 0, left: 0 };
		}

		return {
			top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"),10) || 0),
			left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"),10) || 0)
		};

	},

	_getRelativeOffset: function() {

		if(this.cssPosition === "relative") {
			var p = this.element.position();
			return {
				top: p.top - (parseInt(this.helper.css("top"),10) || 0) + this.scrollParent.scrollTop(),
				left: p.left - (parseInt(this.helper.css("left"),10) || 0) + this.scrollParent.scrollLeft()
			};
		} else {
			return { top: 0, left: 0 };
		}

	},

	_cacheMargins: function() {
		this.margins = {
			left: (parseInt(this.element.css("marginLeft"),10) || 0),
			top: (parseInt(this.element.css("marginTop"),10) || 0),
			right: (parseInt(this.element.css("marginRight"),10) || 0),
			bottom: (parseInt(this.element.css("marginBottom"),10) || 0)
		};
	},

	_cacheHelperProportions: function() {
		this.helperProportions = {
			width: this.helper.outerWidth(),
			height: this.helper.outerHeight()
		};
	},

	_setContainment: function() {

		var over, c, ce,
			o = this.options;

		if ( !o.containment ) {
			this.containment = null;
			return;
		}

		if ( o.containment === "window" ) {
			this.containment = [
				$( window ).scrollLeft() - this.offset.relative.left - this.offset.parent.left,
				$( window ).scrollTop() - this.offset.relative.top - this.offset.parent.top,
				$( window ).scrollLeft() + $( window ).width() - this.helperProportions.width - this.margins.left,
				$( window ).scrollTop() + ( $( window ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top
			];
			return;
		}

		if ( o.containment === "document") {
			this.containment = [
				0,
				0,
				$( document ).width() - this.helperProportions.width - this.margins.left,
				( $( document ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top
			];
			return;
		}

		if ( o.containment.constructor === Array ) {
			this.containment = o.containment;
			return;
		}

		if ( o.containment === "parent" ) {
			o.containment = this.helper[ 0 ].parentNode;
		}

		c = $( o.containment );
		ce = c[ 0 ];

		if( !ce ) {
			return;
		}

		over = c.css( "overflow" ) !== "hidden";

		this.containment = [
			( parseInt( c.css( "borderLeftWidth" ), 10 ) || 0 ) + ( parseInt( c.css( "paddingLeft" ), 10 ) || 0 ),
			( parseInt( c.css( "borderTopWidth" ), 10 ) || 0 ) + ( parseInt( c.css( "paddingTop" ), 10 ) || 0 ) ,
			( over ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) - ( parseInt( c.css( "borderRightWidth" ), 10 ) || 0 ) - ( parseInt( c.css( "paddingRight" ), 10 ) || 0 ) - this.helperProportions.width - this.margins.left - this.margins.right,
			( over ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) - ( parseInt( c.css( "borderBottomWidth" ), 10 ) || 0 ) - ( parseInt( c.css( "paddingBottom" ), 10 ) || 0 ) - this.helperProportions.height - this.margins.top  - this.margins.bottom
		];
		this.relative_container = c;
	},

	_convertPositionTo: function(d, pos) {

		if(!pos) {
			pos = this.position;
		}

		var mod = d === "absolute" ? 1 : -1,
			scroll = this.cssPosition === "absolute" && !( this.scrollParent[ 0 ] !== document && $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ? this.offsetParent : this.scrollParent;

		//Cache the scroll
		if (!this.offset.scroll) {
			this.offset.scroll = {top : scroll.scrollTop(), left : scroll.scrollLeft()};
		}

		return {
			top: (
				pos.top	+																// The absolute mouse position
				this.offset.relative.top * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.top * mod -										// The offsetParent's offset without borders (offset + border)
				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top ) * mod )
			),
			left: (
				pos.left +																// The absolute mouse position
				this.offset.relative.left * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.left * mod	-										// The offsetParent's offset without borders (offset + border)
				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left ) * mod )
			)
		};

	},

	_generatePosition: function(event) {

		var containment, co, top, left,
			o = this.options,
			scroll = this.cssPosition === "absolute" && !( this.scrollParent[ 0 ] !== document && $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ? this.offsetParent : this.scrollParent,
			pageX = event.pageX,
			pageY = event.pageY;

		//Cache the scroll
		if (!this.offset.scroll) {
			this.offset.scroll = {top : scroll.scrollTop(), left : scroll.scrollLeft()};
		}

		/*
		 * - Position constraining -
		 * Constrain the position to a mix of grid, containment.
		 */

		// If we are not dragging yet, we won't check for options
		if ( this.originalPosition ) {
			if ( this.containment ) {
				if ( this.relative_container ){
					co = this.relative_container.offset();
					containment = [
						this.containment[ 0 ] + co.left,
						this.containment[ 1 ] + co.top,
						this.containment[ 2 ] + co.left,
						this.containment[ 3 ] + co.top
					];
				}
				else {
					containment = this.containment;
				}

				if(event.pageX - this.offset.click.left < containment[0]) {
					pageX = containment[0] + this.offset.click.left;
				}
				if(event.pageY - this.offset.click.top < containment[1]) {
					pageY = containment[1] + this.offset.click.top;
				}
				if(event.pageX - this.offset.click.left > containment[2]) {
					pageX = containment[2] + this.offset.click.left;
				}
				if(event.pageY - this.offset.click.top > containment[3]) {
					pageY = containment[3] + this.offset.click.top;
				}
			}

			if(o.grid) {
				//Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)
				top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;
				pageY = containment ? ((top - this.offset.click.top >= containment[1] || top - this.offset.click.top > containment[3]) ? top : ((top - this.offset.click.top >= containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;

				left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;
				pageX = containment ? ((left - this.offset.click.left >= containment[0] || left - this.offset.click.left > containment[2]) ? left : ((left - this.offset.click.left >= containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;
			}

		}

		return {
			top: (
				pageY -																	// The absolute mouse position
				this.offset.click.top	-												// Click offset (relative to the element)
				this.offset.relative.top -												// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.top +												// The offsetParent's offset without borders (offset + border)
				( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top )
			),
			left: (
				pageX -																	// The absolute mouse position
				this.offset.click.left -												// Click offset (relative to the element)
				this.offset.relative.left -												// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.left +												// The offsetParent's offset without borders (offset + border)
				( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left )
			)
		};

	},

	_clear: function() {
		this.helper.removeClass("ui-draggable-dragging");
		if(this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {
			this.helper.remove();
		}
		this.helper = null;
		this.cancelHelperRemoval = false;
	},

	// From now on bulk stuff - mainly helpers

	_trigger: function(type, event, ui) {
		ui = ui || this._uiHash();
		$.ui.plugin.call(this, type, [event, ui]);
		//The absolute position has to be recalculated after plugins
		if(type === "drag") {
			this.positionAbs = this._convertPositionTo("absolute");
		}
		return $.Widget.prototype._trigger.call(this, type, event, ui);
	},

	plugins: {},

	_uiHash: function() {
		return {
			helper: this.helper,
			position: this.position,
			originalPosition: this.originalPosition,
			offset: this.positionAbs
		};
	}

});

$.ui.plugin.add("draggable", "connectToSortable", {
	start: function(event, ui) {

		var inst = $(this).data("ui-draggable"), o = inst.options,
			uiSortable = $.extend({}, ui, { item: inst.element });
		inst.sortables = [];
		$(o.connectToSortable).each(function() {
			var sortable = $.data(this, "ui-sortable");
			if (sortable && !sortable.options.disabled) {
				inst.sortables.push({
					instance: sortable,
					shouldRevert: sortable.options.revert
				});
				sortable.refreshPositions();	// Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).
				sortable._trigger("activate", event, uiSortable);
			}
		});

	},
	stop: function(event, ui) {

		//If we are still over the sortable, we fake the stop event of the sortable, but also remove helper
		var inst = $(this).data("ui-draggable"),
			uiSortable = $.extend({}, ui, { item: inst.element });

		$.each(inst.sortables, function() {
			if(this.instance.isOver) {

				this.instance.isOver = 0;

				inst.cancelHelperRemoval = true; //Don't remove the helper in the draggable instance
				this.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)

				//The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: "valid/invalid"
				if(this.shouldRevert) {
					this.instance.options.revert = this.shouldRevert;
				}

				//Trigger the stop of the sortable
				this.instance._mouseStop(event);

				this.instance.options.helper = this.instance.options._helper;

				//If the helper has been the original item, restore properties in the sortable
				if(inst.options.helper === "original") {
					this.instance.currentItem.css({ top: "auto", left: "auto" });
				}

			} else {
				this.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance
				this.instance._trigger("deactivate", event, uiSortable);
			}

		});

	},
	drag: function(event, ui) {

		var inst = $(this).data("ui-draggable"), that = this;

		$.each(inst.sortables, function() {

			var innermostIntersecting = false,
				thisSortable = this;

			//Copy over some variables to allow calling the sortable's native _intersectsWith
			this.instance.positionAbs = inst.positionAbs;
			this.instance.helperProportions = inst.helperProportions;
			this.instance.offset.click = inst.offset.click;

			if(this.instance._intersectsWith(this.instance.containerCache)) {
				innermostIntersecting = true;
				$.each(inst.sortables, function () {
					this.instance.positionAbs = inst.positionAbs;
					this.instance.helperProportions = inst.helperProportions;
					this.instance.offset.click = inst.offset.click;
					if (this !== thisSortable &&
						this.instance._intersectsWith(this.instance.containerCache) &&
						$.contains(thisSortable.instance.element[0], this.instance.element[0])
					) {
						innermostIntersecting = false;
					}
					return innermostIntersecting;
				});
			}


			if(innermostIntersecting) {
				//If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once
				if(!this.instance.isOver) {

					this.instance.isOver = 1;
					//Now we fake the start of dragging for the sortable instance,
					//by cloning the list group item, appending it to the sortable and using it as inst.currentItem
					//We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)
					this.instance.currentItem = $(that).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", true);
					this.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it
					this.instance.options.helper = function() { return ui.helper[0]; };

					event.target = this.instance.currentItem[0];
					this.instance._mouseCapture(event, true);
					this.instance._mouseStart(event, true, true);

					//Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes
					this.instance.offset.click.top = inst.offset.click.top;
					this.instance.offset.click.left = inst.offset.click.left;
					this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;
					this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;

					inst._trigger("toSortable", event);
					inst.dropped = this.instance.element; //draggable revert needs that
					//hack so receive/update callbacks work (mostly)
					inst.currentItem = inst.element;
					this.instance.fromOutside = inst;

				}

				//Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable
				if(this.instance.currentItem) {
					this.instance._mouseDrag(event);
				}

			} else {

				//If it doesn't intersect with the sortable, and it intersected before,
				//we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval
				if(this.instance.isOver) {

					this.instance.isOver = 0;
					this.instance.cancelHelperRemoval = true;

					//Prevent reverting on this forced stop
					this.instance.options.revert = false;

					// The out event needs to be triggered independently
					this.instance._trigger("out", event, this.instance._uiHash(this.instance));

					this.instance._mouseStop(event, true);
					this.instance.options.helper = this.instance.options._helper;

					//Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it's original size
					this.instance.currentItem.remove();
					if(this.instance.placeholder) {
						this.instance.placeholder.remove();
					}

					inst._trigger("fromSortable", event);
					inst.dropped = false; //draggable revert needs that
				}

			}

		});

	}
});

$.ui.plugin.add("draggable", "cursor", {
	start: function() {
		var t = $("body"), o = $(this).data("ui-draggable").options;
		if (t.css("cursor")) {
			o._cursor = t.css("cursor");
		}
		t.css("cursor", o.cursor);
	},
	stop: function() {
		var o = $(this).data("ui-draggable").options;
		if (o._cursor) {
			$("body").css("cursor", o._cursor);
		}
	}
});

$.ui.plugin.add("draggable", "opacity", {
	start: function(event, ui) {
		var t = $(ui.helper), o = $(this).data("ui-draggable").options;
		if(t.css("opacity")) {
			o._opacity = t.css("opacity");
		}
		t.css("opacity", o.opacity);
	},
	stop: function(event, ui) {
		var o = $(this).data("ui-draggable").options;
		if(o._opacity) {
			$(ui.helper).css("opacity", o._opacity);
		}
	}
});

$.ui.plugin.add("draggable", "scroll", {
	start: function() {
		var i = $(this).data("ui-draggable");
		if(i.scrollParent[0] !== document && i.scrollParent[0].tagName !== "HTML") {
			i.overflowOffset = i.scrollParent.offset();
		}
	},
	drag: function( event ) {

		var i = $(this).data("ui-draggable"), o = i.options, scrolled = false;

		if(i.scrollParent[0] !== document && i.scrollParent[0].tagName !== "HTML") {

			if(!o.axis || o.axis !== "x") {
				if((i.overflowOffset.top + i.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {
					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;
				} else if(event.pageY - i.overflowOffset.top < o.scrollSensitivity) {
					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;
				}
			}

			if(!o.axis || o.axis !== "y") {
				if((i.overflowOffset.left + i.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {
					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;
				} else if(event.pageX - i.overflowOffset.left < o.scrollSensitivity) {
					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;
				}
			}

		} else {

			if(!o.axis || o.axis !== "x") {
				if(event.pageY - $(document).scrollTop() < o.scrollSensitivity) {
					scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
				} else if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {
					scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);
				}
			}

			if(!o.axis || o.axis !== "y") {
				if(event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {
					scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);
				} else if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {
					scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);
				}
			}

		}

		if(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {
			$.ui.ddmanager.prepareOffsets(i, event);
		}

	}
});

$.ui.plugin.add("draggable", "snap", {
	start: function() {

		var i = $(this).data("ui-draggable"),
			o = i.options;

		i.snapElements = [];

		$(o.snap.constructor !== String ? ( o.snap.items || ":data(ui-draggable)" ) : o.snap).each(function() {
			var $t = $(this),
				$o = $t.offset();
			if(this !== i.element[0]) {
				i.snapElements.push({
					item: this,
					width: $t.outerWidth(), height: $t.outerHeight(),
					top: $o.top, left: $o.left
				});
			}
		});

	},
	drag: function(event, ui) {

		var ts, bs, ls, rs, l, r, t, b, i, first,
			inst = $(this).data("ui-draggable"),
			o = inst.options,
			d = o.snapTolerance,
			x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,
			y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;

		for (i = inst.snapElements.length - 1; i >= 0; i--){

			l = inst.snapElements[i].left;
			r = l + inst.snapElements[i].width;
			t = inst.snapElements[i].top;
			b = t + inst.snapElements[i].height;

			if ( x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d || !$.contains( inst.snapElements[ i ].item.ownerDocument, inst.snapElements[ i ].item ) ) {
				if(inst.snapElements[i].snapping) {
					(inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
				}
				inst.snapElements[i].snapping = false;
				continue;
			}

			if(o.snapMode !== "inner") {
				ts = Math.abs(t - y2) <= d;
				bs = Math.abs(b - y1) <= d;
				ls = Math.abs(l - x2) <= d;
				rs = Math.abs(r - x1) <= d;
				if(ts) {
					ui.position.top = inst._convertPositionTo("relative", { top: t - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
				}
				if(bs) {
					ui.position.top = inst._convertPositionTo("relative", { top: b, left: 0 }).top - inst.margins.top;
				}
				if(ls) {
					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l - inst.helperProportions.width }).left - inst.margins.left;
				}
				if(rs) {
					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r }).left - inst.margins.left;
				}
			}

			first = (ts || bs || ls || rs);

			if(o.snapMode !== "outer") {
				ts = Math.abs(t - y1) <= d;
				bs = Math.abs(b - y2) <= d;
				ls = Math.abs(l - x1) <= d;
				rs = Math.abs(r - x2) <= d;
				if(ts) {
					ui.position.top = inst._convertPositionTo("relative", { top: t, left: 0 }).top - inst.margins.top;
				}
				if(bs) {
					ui.position.top = inst._convertPositionTo("relative", { top: b - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
				}
				if(ls) {
					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l }).left - inst.margins.left;
				}
				if(rs) {
					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r - inst.helperProportions.width }).left - inst.margins.left;
				}
			}

			if(!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) {
				(inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
			}
			inst.snapElements[i].snapping = (ts || bs || ls || rs || first);

		}

	}
});

$.ui.plugin.add("draggable", "stack", {
	start: function() {
		var min,
			o = this.data("ui-draggable").options,
			group = $.makeArray($(o.stack)).sort(function(a,b) {
				return (parseInt($(a).css("zIndex"),10) || 0) - (parseInt($(b).css("zIndex"),10) || 0);
			});

		if (!group.length) { return; }

		min = parseInt($(group[0]).css("zIndex"), 10) || 0;
		$(group).each(function(i) {
			$(this).css("zIndex", min + i);
		});
		this.css("zIndex", (min + group.length));
	}
});

$.ui.plugin.add("draggable", "zIndex", {
	start: function(event, ui) {
		var t = $(ui.helper), o = $(this).data("ui-draggable").options;
		if(t.css("zIndex")) {
			o._zIndex = t.css("zIndex");
		}
		t.css("zIndex", o.zIndex);
	},
	stop: function(event, ui) {
		var o = $(this).data("ui-draggable").options;
		if(o._zIndex) {
			$(ui.helper).css("zIndex", o._zIndex);
		}
	}
});

})(jQuery);

define("jquery-ui-draggable", function(){});

/*!
 * jQuery UI Effects 1.10.3
 * http://jqueryui.com
 *
 * Copyright 2013 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/effects-core/
 */
(function($, undefined) {

var dataSpace = "ui-effects-";

$.effects = {
	effect: {}
};

/*!
 * jQuery Color Animations v2.1.2
 * https://github.com/jquery/jquery-color
 *
 * Copyright 2013 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * Date: Wed Jan 16 08:47:09 2013 -0600
 */
(function( jQuery, undefined ) {

	var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",

	// plusequals test for += 100 -= 100
	rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
	// a set of RE's that can match strings and generate color tuples.
	stringParsers = [{
			re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ],
					execResult[ 3 ],
					execResult[ 4 ]
				];
			}
		}, {
			re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ] * 2.55,
					execResult[ 2 ] * 2.55,
					execResult[ 3 ] * 2.55,
					execResult[ 4 ]
				];
			}
		}, {
			// this regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ], 16 )
				];
			}
		}, {
			// this regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ] + execResult[ 3 ], 16 )
				];
			}
		}, {
			re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
			space: "hsla",
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ] / 100,
					execResult[ 3 ] / 100,
					execResult[ 4 ]
				];
			}
		}],

	// jQuery.Color( )
	color = jQuery.Color = function( color, green, blue, alpha ) {
		return new jQuery.Color.fn.parse( color, green, blue, alpha );
	},
	spaces = {
		rgba: {
			props: {
				red: {
					idx: 0,
					type: "byte"
				},
				green: {
					idx: 1,
					type: "byte"
				},
				blue: {
					idx: 2,
					type: "byte"
				}
			}
		},

		hsla: {
			props: {
				hue: {
					idx: 0,
					type: "degrees"
				},
				saturation: {
					idx: 1,
					type: "percent"
				},
				lightness: {
					idx: 2,
					type: "percent"
				}
			}
		}
	},
	propTypes = {
		"byte": {
			floor: true,
			max: 255
		},
		"percent": {
			max: 1
		},
		"degrees": {
			mod: 360,
			floor: true
		}
	},
	support = color.support = {},

	// element for support tests
	supportElem = jQuery( "<p>" )[ 0 ],

	// colors = jQuery.Color.names
	colors,

	// local aliases of functions called often
	each = jQuery.each;

// determine rgba support immediately
supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
support.rgba = supportElem.style.backgroundColor.indexOf( "rgba" ) > -1;

// define cache name and alpha properties
// for rgba and hsla spaces
each( spaces, function( spaceName, space ) {
	space.cache = "_" + spaceName;
	space.props.alpha = {
		idx: 3,
		type: "percent",
		def: 1
	};
});

function clamp( value, prop, allowEmpty ) {
	var type = propTypes[ prop.type ] || {};

	if ( value == null ) {
		return (allowEmpty || !prop.def) ? null : prop.def;
	}

	// ~~ is an short way of doing floor for positive numbers
	value = type.floor ? ~~value : parseFloat( value );

	// IE will pass in empty strings as value for alpha,
	// which will hit this case
	if ( isNaN( value ) ) {
		return prop.def;
	}

	if ( type.mod ) {
		// we add mod before modding to make sure that negatives values
		// get converted properly: -10 -> 350
		return (value + type.mod) % type.mod;
	}

	// for now all property types without mod have min and max
	return 0 > value ? 0 : type.max < value ? type.max : value;
}

function stringParse( string ) {
	var inst = color(),
		rgba = inst._rgba = [];

	string = string.toLowerCase();

	each( stringParsers, function( i, parser ) {
		var parsed,
			match = parser.re.exec( string ),
			values = match && parser.parse( match ),
			spaceName = parser.space || "rgba";

		if ( values ) {
			parsed = inst[ spaceName ]( values );

			// if this was an rgba parse the assignment might happen twice
			// oh well....
			inst[ spaces[ spaceName ].cache ] = parsed[ spaces[ spaceName ].cache ];
			rgba = inst._rgba = parsed._rgba;

			// exit each( stringParsers ) here because we matched
			return false;
		}
	});

	// Found a stringParser that handled it
	if ( rgba.length ) {

		// if this came from a parsed string, force "transparent" when alpha is 0
		// chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
		if ( rgba.join() === "0,0,0,0" ) {
			jQuery.extend( rgba, colors.transparent );
		}
		return inst;
	}

	// named colors
	return colors[ string ];
}

color.fn = jQuery.extend( color.prototype, {
	parse: function( red, green, blue, alpha ) {
		if ( red === undefined ) {
			this._rgba = [ null, null, null, null ];
			return this;
		}
		if ( red.jquery || red.nodeType ) {
			red = jQuery( red ).css( green );
			green = undefined;
		}

		var inst = this,
			type = jQuery.type( red ),
			rgba = this._rgba = [];

		// more than 1 argument specified - assume ( red, green, blue, alpha )
		if ( green !== undefined ) {
			red = [ red, green, blue, alpha ];
			type = "array";
		}

		if ( type === "string" ) {
			return this.parse( stringParse( red ) || colors._default );
		}

		if ( type === "array" ) {
			each( spaces.rgba.props, function( key, prop ) {
				rgba[ prop.idx ] = clamp( red[ prop.idx ], prop );
			});
			return this;
		}

		if ( type === "object" ) {
			if ( red instanceof color ) {
				each( spaces, function( spaceName, space ) {
					if ( red[ space.cache ] ) {
						inst[ space.cache ] = red[ space.cache ].slice();
					}
				});
			} else {
				each( spaces, function( spaceName, space ) {
					var cache = space.cache;
					each( space.props, function( key, prop ) {

						// if the cache doesn't exist, and we know how to convert
						if ( !inst[ cache ] && space.to ) {

							// if the value was null, we don't need to copy it
							// if the key was alpha, we don't need to copy it either
							if ( key === "alpha" || red[ key ] == null ) {
								return;
							}
							inst[ cache ] = space.to( inst._rgba );
						}

						// this is the only case where we allow nulls for ALL properties.
						// call clamp with alwaysAllowEmpty
						inst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );
					});

					// everything defined but alpha?
					if ( inst[ cache ] && jQuery.inArray( null, inst[ cache ].slice( 0, 3 ) ) < 0 ) {
						// use the default of 1
						inst[ cache ][ 3 ] = 1;
						if ( space.from ) {
							inst._rgba = space.from( inst[ cache ] );
						}
					}
				});
			}
			return this;
		}
	},
	is: function( compare ) {
		var is = color( compare ),
			same = true,
			inst = this;

		each( spaces, function( _, space ) {
			var localCache,
				isCache = is[ space.cache ];
			if (isCache) {
				localCache = inst[ space.cache ] || space.to && space.to( inst._rgba ) || [];
				each( space.props, function( _, prop ) {
					if ( isCache[ prop.idx ] != null ) {
						same = ( isCache[ prop.idx ] === localCache[ prop.idx ] );
						return same;
					}
				});
			}
			return same;
		});
		return same;
	},
	_space: function() {
		var used = [],
			inst = this;
		each( spaces, function( spaceName, space ) {
			if ( inst[ space.cache ] ) {
				used.push( spaceName );
			}
		});
		return used.pop();
	},
	transition: function( other, distance ) {
		var end = color( other ),
			spaceName = end._space(),
			space = spaces[ spaceName ],
			startColor = this.alpha() === 0 ? color( "transparent" ) : this,
			start = startColor[ space.cache ] || space.to( startColor._rgba ),
			result = start.slice();

		end = end[ space.cache ];
		each( space.props, function( key, prop ) {
			var index = prop.idx,
				startValue = start[ index ],
				endValue = end[ index ],
				type = propTypes[ prop.type ] || {};

			// if null, don't override start value
			if ( endValue === null ) {
				return;
			}
			// if null - use end
			if ( startValue === null ) {
				result[ index ] = endValue;
			} else {
				if ( type.mod ) {
					if ( endValue - startValue > type.mod / 2 ) {
						startValue += type.mod;
					} else if ( startValue - endValue > type.mod / 2 ) {
						startValue -= type.mod;
					}
				}
				result[ index ] = clamp( ( endValue - startValue ) * distance + startValue, prop );
			}
		});
		return this[ spaceName ]( result );
	},
	blend: function( opaque ) {
		// if we are already opaque - return ourself
		if ( this._rgba[ 3 ] === 1 ) {
			return this;
		}

		var rgb = this._rgba.slice(),
			a = rgb.pop(),
			blend = color( opaque )._rgba;

		return color( jQuery.map( rgb, function( v, i ) {
			return ( 1 - a ) * blend[ i ] + a * v;
		}));
	},
	toRgbaString: function() {
		var prefix = "rgba(",
			rgba = jQuery.map( this._rgba, function( v, i ) {
				return v == null ? ( i > 2 ? 1 : 0 ) : v;
			});

		if ( rgba[ 3 ] === 1 ) {
			rgba.pop();
			prefix = "rgb(";
		}

		return prefix + rgba.join() + ")";
	},
	toHslaString: function() {
		var prefix = "hsla(",
			hsla = jQuery.map( this.hsla(), function( v, i ) {
				if ( v == null ) {
					v = i > 2 ? 1 : 0;
				}

				// catch 1 and 2
				if ( i && i < 3 ) {
					v = Math.round( v * 100 ) + "%";
				}
				return v;
			});

		if ( hsla[ 3 ] === 1 ) {
			hsla.pop();
			prefix = "hsl(";
		}
		return prefix + hsla.join() + ")";
	},
	toHexString: function( includeAlpha ) {
		var rgba = this._rgba.slice(),
			alpha = rgba.pop();

		if ( includeAlpha ) {
			rgba.push( ~~( alpha * 255 ) );
		}

		return "#" + jQuery.map( rgba, function( v ) {

			// default to 0 when nulls exist
			v = ( v || 0 ).toString( 16 );
			return v.length === 1 ? "0" + v : v;
		}).join("");
	},
	toString: function() {
		return this._rgba[ 3 ] === 0 ? "transparent" : this.toRgbaString();
	}
});
color.fn.parse.prototype = color.fn;

// hsla conversions adapted from:
// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021

function hue2rgb( p, q, h ) {
	h = ( h + 1 ) % 1;
	if ( h * 6 < 1 ) {
		return p + (q - p) * h * 6;
	}
	if ( h * 2 < 1) {
		return q;
	}
	if ( h * 3 < 2 ) {
		return p + (q - p) * ((2/3) - h) * 6;
	}
	return p;
}

spaces.hsla.to = function ( rgba ) {
	if ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {
		return [ null, null, null, rgba[ 3 ] ];
	}
	var r = rgba[ 0 ] / 255,
		g = rgba[ 1 ] / 255,
		b = rgba[ 2 ] / 255,
		a = rgba[ 3 ],
		max = Math.max( r, g, b ),
		min = Math.min( r, g, b ),
		diff = max - min,
		add = max + min,
		l = add * 0.5,
		h, s;

	if ( min === max ) {
		h = 0;
	} else if ( r === max ) {
		h = ( 60 * ( g - b ) / diff ) + 360;
	} else if ( g === max ) {
		h = ( 60 * ( b - r ) / diff ) + 120;
	} else {
		h = ( 60 * ( r - g ) / diff ) + 240;
	}

	// chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
	// otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
	if ( diff === 0 ) {
		s = 0;
	} else if ( l <= 0.5 ) {
		s = diff / add;
	} else {
		s = diff / ( 2 - add );
	}
	return [ Math.round(h) % 360, s, l, a == null ? 1 : a ];
};

spaces.hsla.from = function ( hsla ) {
	if ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {
		return [ null, null, null, hsla[ 3 ] ];
	}
	var h = hsla[ 0 ] / 360,
		s = hsla[ 1 ],
		l = hsla[ 2 ],
		a = hsla[ 3 ],
		q = l <= 0.5 ? l * ( 1 + s ) : l + s - l * s,
		p = 2 * l - q;

	return [
		Math.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),
		Math.round( hue2rgb( p, q, h ) * 255 ),
		Math.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),
		a
	];
};


each( spaces, function( spaceName, space ) {
	var props = space.props,
		cache = space.cache,
		to = space.to,
		from = space.from;

	// makes rgba() and hsla()
	color.fn[ spaceName ] = function( value ) {

		// generate a cache for this space if it doesn't exist
		if ( to && !this[ cache ] ) {
			this[ cache ] = to( this._rgba );
		}
		if ( value === undefined ) {
			return this[ cache ].slice();
		}

		var ret,
			type = jQuery.type( value ),
			arr = ( type === "array" || type === "object" ) ? value : arguments,
			local = this[ cache ].slice();

		each( props, function( key, prop ) {
			var val = arr[ type === "object" ? key : prop.idx ];
			if ( val == null ) {
				val = local[ prop.idx ];
			}
			local[ prop.idx ] = clamp( val, prop );
		});

		if ( from ) {
			ret = color( from( local ) );
			ret[ cache ] = local;
			return ret;
		} else {
			return color( local );
		}
	};

	// makes red() green() blue() alpha() hue() saturation() lightness()
	each( props, function( key, prop ) {
		// alpha is included in more than one space
		if ( color.fn[ key ] ) {
			return;
		}
		color.fn[ key ] = function( value ) {
			var vtype = jQuery.type( value ),
				fn = ( key === "alpha" ? ( this._hsla ? "hsla" : "rgba" ) : spaceName ),
				local = this[ fn ](),
				cur = local[ prop.idx ],
				match;

			if ( vtype === "undefined" ) {
				return cur;
			}

			if ( vtype === "function" ) {
				value = value.call( this, cur );
				vtype = jQuery.type( value );
			}
			if ( value == null && prop.empty ) {
				return this;
			}
			if ( vtype === "string" ) {
				match = rplusequals.exec( value );
				if ( match ) {
					value = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === "+" ? 1 : -1 );
				}
			}
			local[ prop.idx ] = value;
			return this[ fn ]( local );
		};
	});
});

// add cssHook and .fx.step function for each named hook.
// accept a space separated string of properties
color.hook = function( hook ) {
	var hooks = hook.split( " " );
	each( hooks, function( i, hook ) {
		jQuery.cssHooks[ hook ] = {
			set: function( elem, value ) {
				var parsed, curElem,
					backgroundColor = "";

				if ( value !== "transparent" && ( jQuery.type( value ) !== "string" || ( parsed = stringParse( value ) ) ) ) {
					value = color( parsed || value );
					if ( !support.rgba && value._rgba[ 3 ] !== 1 ) {
						curElem = hook === "backgroundColor" ? elem.parentNode : elem;
						while (
							(backgroundColor === "" || backgroundColor === "transparent") &&
							curElem && curElem.style
						) {
							try {
								backgroundColor = jQuery.css( curElem, "backgroundColor" );
								curElem = curElem.parentNode;
							} catch ( e ) {
							}
						}

						value = value.blend( backgroundColor && backgroundColor !== "transparent" ?
							backgroundColor :
							"_default" );
					}

					value = value.toRgbaString();
				}
				try {
					elem.style[ hook ] = value;
				} catch( e ) {
					// wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
				}
			}
		};
		jQuery.fx.step[ hook ] = function( fx ) {
			if ( !fx.colorInit ) {
				fx.start = color( fx.elem, hook );
				fx.end = color( fx.end );
				fx.colorInit = true;
			}
			jQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );
		};
	});

};

color.hook( stepHooks );

jQuery.cssHooks.borderColor = {
	expand: function( value ) {
		var expanded = {};

		each( [ "Top", "Right", "Bottom", "Left" ], function( i, part ) {
			expanded[ "border" + part + "Color" ] = value;
		});
		return expanded;
	}
};

// Basic color names only.
// Usage of any of the other color names requires adding yourself or including
// jquery.color.svg-names.js.
colors = jQuery.Color.names = {
	// 4.1. Basic color keywords
	aqua: "#00ffff",
	black: "#000000",
	blue: "#0000ff",
	fuchsia: "#ff00ff",
	gray: "#808080",
	green: "#008000",
	lime: "#00ff00",
	maroon: "#800000",
	navy: "#000080",
	olive: "#808000",
	purple: "#800080",
	red: "#ff0000",
	silver: "#c0c0c0",
	teal: "#008080",
	white: "#ffffff",
	yellow: "#ffff00",

	// 4.2.3. "transparent" color keyword
	transparent: [ null, null, null, 0 ],

	_default: "#ffffff"
};

})( jQuery );


/******************************************************************************/
/****************************** CLASS ANIMATIONS ******************************/
/******************************************************************************/
(function() {

var classAnimationActions = [ "add", "remove", "toggle" ],
	shorthandStyles = {
		border: 1,
		borderBottom: 1,
		borderColor: 1,
		borderLeft: 1,
		borderRight: 1,
		borderTop: 1,
		borderWidth: 1,
		margin: 1,
		padding: 1
	};

$.each([ "borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle" ], function( _, prop ) {
	$.fx.step[ prop ] = function( fx ) {
		if ( fx.end !== "none" && !fx.setAttr || fx.pos === 1 && !fx.setAttr ) {
			jQuery.style( fx.elem, prop, fx.end );
			fx.setAttr = true;
		}
	};
});

function getElementStyles( elem ) {
	var key, len,
		style = elem.ownerDocument.defaultView ?
			elem.ownerDocument.defaultView.getComputedStyle( elem, null ) :
			elem.currentStyle,
		styles = {};

	if ( style && style.length && style[ 0 ] && style[ style[ 0 ] ] ) {
		len = style.length;
		while ( len-- ) {
			key = style[ len ];
			if ( typeof style[ key ] === "string" ) {
				styles[ $.camelCase( key ) ] = style[ key ];
			}
		}
	// support: Opera, IE <9
	} else {
		for ( key in style ) {
			if ( typeof style[ key ] === "string" ) {
				styles[ key ] = style[ key ];
			}
		}
	}

	return styles;
}


function styleDifference( oldStyle, newStyle ) {
	var diff = {},
		name, value;

	for ( name in newStyle ) {
		value = newStyle[ name ];
		if ( oldStyle[ name ] !== value ) {
			if ( !shorthandStyles[ name ] ) {
				if ( $.fx.step[ name ] || !isNaN( parseFloat( value ) ) ) {
					diff[ name ] = value;
				}
			}
		}
	}

	return diff;
}

// support: jQuery <1.8
if ( !$.fn.addBack ) {
	$.fn.addBack = function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	};
}

$.effects.animateClass = function( value, duration, easing, callback ) {
	var o = $.speed( duration, easing, callback );

	return this.queue( function() {
		var animated = $( this ),
			baseClass = animated.attr( "class" ) || "",
			applyClassChange,
			allAnimations = o.children ? animated.find( "*" ).addBack() : animated;

		// map the animated objects to store the original styles.
		allAnimations = allAnimations.map(function() {
			var el = $( this );
			return {
				el: el,
				start: getElementStyles( this )
			};
		});

		// apply class change
		applyClassChange = function() {
			$.each( classAnimationActions, function(i, action) {
				if ( value[ action ] ) {
					animated[ action + "Class" ]( value[ action ] );
				}
			});
		};
		applyClassChange();

		// map all animated objects again - calculate new styles and diff
		allAnimations = allAnimations.map(function() {
			this.end = getElementStyles( this.el[ 0 ] );
			this.diff = styleDifference( this.start, this.end );
			return this;
		});

		// apply original class
		animated.attr( "class", baseClass );

		// map all animated objects again - this time collecting a promise
		allAnimations = allAnimations.map(function() {
			var styleInfo = this,
				dfd = $.Deferred(),
				opts = $.extend({}, o, {
					queue: false,
					complete: function() {
						dfd.resolve( styleInfo );
					}
				});

			this.el.animate( this.diff, opts );
			return dfd.promise();
		});

		// once all animations have completed:
		$.when.apply( $, allAnimations.get() ).done(function() {

			// set the final class
			applyClassChange();

			// for each animated element,
			// clear all css properties that were animated
			$.each( arguments, function() {
				var el = this.el;
				$.each( this.diff, function(key) {
					el.css( key, "" );
				});
			});

			// this is guarnteed to be there if you use jQuery.speed()
			// it also handles dequeuing the next anim...
			o.complete.call( animated[ 0 ] );
		});
	});
};

$.fn.extend({
	addClass: (function( orig ) {
		return function( classNames, speed, easing, callback ) {
			return speed ?
				$.effects.animateClass.call( this,
					{ add: classNames }, speed, easing, callback ) :
				orig.apply( this, arguments );
		};
	})( $.fn.addClass ),

	removeClass: (function( orig ) {
		return function( classNames, speed, easing, callback ) {
			return arguments.length > 1 ?
				$.effects.animateClass.call( this,
					{ remove: classNames }, speed, easing, callback ) :
				orig.apply( this, arguments );
		};
	})( $.fn.removeClass ),

	toggleClass: (function( orig ) {
		return function( classNames, force, speed, easing, callback ) {
			if ( typeof force === "boolean" || force === undefined ) {
				if ( !speed ) {
					// without speed parameter
					return orig.apply( this, arguments );
				} else {
					return $.effects.animateClass.call( this,
						(force ? { add: classNames } : { remove: classNames }),
						speed, easing, callback );
				}
			} else {
				// without force parameter
				return $.effects.animateClass.call( this,
					{ toggle: classNames }, force, speed, easing );
			}
		};
	})( $.fn.toggleClass ),

	switchClass: function( remove, add, speed, easing, callback) {
		return $.effects.animateClass.call( this, {
			add: add,
			remove: remove
		}, speed, easing, callback );
	}
});

})();

/******************************************************************************/
/*********************************** EFFECTS **********************************/
/******************************************************************************/

(function() {

$.extend( $.effects, {
	version: "1.10.3",

	// Saves a set of properties in a data storage
	save: function( element, set ) {
		for( var i=0; i < set.length; i++ ) {
			if ( set[ i ] !== null ) {
				element.data( dataSpace + set[ i ], element[ 0 ].style[ set[ i ] ] );
			}
		}
	},

	// Restores a set of previously saved properties from a data storage
	restore: function( element, set ) {
		var val, i;
		for( i=0; i < set.length; i++ ) {
			if ( set[ i ] !== null ) {
				val = element.data( dataSpace + set[ i ] );
				// support: jQuery 1.6.2
				// http://bugs.jquery.com/ticket/9917
				// jQuery 1.6.2 incorrectly returns undefined for any falsy value.
				// We can't differentiate between "" and 0 here, so we just assume
				// empty string since it's likely to be a more common value...
				if ( val === undefined ) {
					val = "";
				}
				element.css( set[ i ], val );
			}
		}
	},

	setMode: function( el, mode ) {
		if (mode === "toggle") {
			mode = el.is( ":hidden" ) ? "show" : "hide";
		}
		return mode;
	},

	// Translates a [top,left] array into a baseline value
	// this should be a little more flexible in the future to handle a string & hash
	getBaseline: function( origin, original ) {
		var y, x;
		switch ( origin[ 0 ] ) {
			case "top": y = 0; break;
			case "middle": y = 0.5; break;
			case "bottom": y = 1; break;
			default: y = origin[ 0 ] / original.height;
		}
		switch ( origin[ 1 ] ) {
			case "left": x = 0; break;
			case "center": x = 0.5; break;
			case "right": x = 1; break;
			default: x = origin[ 1 ] / original.width;
		}
		return {
			x: x,
			y: y
		};
	},

	// Wraps the element around a wrapper that copies position properties
	createWrapper: function( element ) {

		// if the element is already wrapped, return it
		if ( element.parent().is( ".ui-effects-wrapper" )) {
			return element.parent();
		}

		// wrap the element
		var props = {
				width: element.outerWidth(true),
				height: element.outerHeight(true),
				"float": element.css( "float" )
			},
			wrapper = $( "<div></div>" )
				.addClass( "ui-effects-wrapper" )
				.css({
					fontSize: "100%",
					background: "transparent",
					border: "none",
					margin: 0,
					padding: 0
				}),
			// Store the size in case width/height are defined in % - Fixes #5245
			size = {
				width: element.width(),
				height: element.height()
			},
			active = document.activeElement;

		// support: Firefox
		// Firefox incorrectly exposes anonymous content
		// https://bugzilla.mozilla.org/show_bug.cgi?id=561664
		try {
			active.id;
		} catch( e ) {
			active = document.body;
		}

		element.wrap( wrapper );

		// Fixes #7595 - Elements lose focus when wrapped.
		if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
			$( active ).focus();
		}

		wrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element

		// transfer positioning properties to the wrapper
		if ( element.css( "position" ) === "static" ) {
			wrapper.css({ position: "relative" });
			element.css({ position: "relative" });
		} else {
			$.extend( props, {
				position: element.css( "position" ),
				zIndex: element.css( "z-index" )
			});
			$.each([ "top", "left", "bottom", "right" ], function(i, pos) {
				props[ pos ] = element.css( pos );
				if ( isNaN( parseInt( props[ pos ], 10 ) ) ) {
					props[ pos ] = "auto";
				}
			});
			element.css({
				position: "relative",
				top: 0,
				left: 0,
				right: "auto",
				bottom: "auto"
			});
		}
		element.css(size);

		return wrapper.css( props ).show();
	},

	removeWrapper: function( element ) {
		var active = document.activeElement;

		if ( element.parent().is( ".ui-effects-wrapper" ) ) {
			element.parent().replaceWith( element );

			// Fixes #7595 - Elements lose focus when wrapped.
			if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
				$( active ).focus();
			}
		}


		return element;
	},

	setTransition: function( element, list, factor, value ) {
		value = value || {};
		$.each( list, function( i, x ) {
			var unit = element.cssUnit( x );
			if ( unit[ 0 ] > 0 ) {
				value[ x ] = unit[ 0 ] * factor + unit[ 1 ];
			}
		});
		return value;
	}
});

// return an effect options object for the given parameters:
function _normalizeArguments( effect, options, speed, callback ) {

	// allow passing all options as the first parameter
	if ( $.isPlainObject( effect ) ) {
		options = effect;
		effect = effect.effect;
	}

	// convert to an object
	effect = { effect: effect };

	// catch (effect, null, ...)
	if ( options == null ) {
		options = {};
	}

	// catch (effect, callback)
	if ( $.isFunction( options ) ) {
		callback = options;
		speed = null;
		options = {};
	}

	// catch (effect, speed, ?)
	if ( typeof options === "number" || $.fx.speeds[ options ] ) {
		callback = speed;
		speed = options;
		options = {};
	}

	// catch (effect, options, callback)
	if ( $.isFunction( speed ) ) {
		callback = speed;
		speed = null;
	}

	// add options to effect
	if ( options ) {
		$.extend( effect, options );
	}

	speed = speed || options.duration;
	effect.duration = $.fx.off ? 0 :
		typeof speed === "number" ? speed :
		speed in $.fx.speeds ? $.fx.speeds[ speed ] :
		$.fx.speeds._default;

	effect.complete = callback || options.complete;

	return effect;
}

function standardAnimationOption( option ) {
	// Valid standard speeds (nothing, number, named speed)
	if ( !option || typeof option === "number" || $.fx.speeds[ option ] ) {
		return true;
	}

	// Invalid strings - treat as "normal" speed
	if ( typeof option === "string" && !$.effects.effect[ option ] ) {
		return true;
	}

	// Complete callback
	if ( $.isFunction( option ) ) {
		return true;
	}

	// Options hash (but not naming an effect)
	if ( typeof option === "object" && !option.effect ) {
		return true;
	}

	// Didn't match any standard API
	return false;
}

$.fn.extend({
	effect: function( /* effect, options, speed, callback */ ) {
		var args = _normalizeArguments.apply( this, arguments ),
			mode = args.mode,
			queue = args.queue,
			effectMethod = $.effects.effect[ args.effect ];

		if ( $.fx.off || !effectMethod ) {
			// delegate to the original method (e.g., .show()) if possible
			if ( mode ) {
				return this[ mode ]( args.duration, args.complete );
			} else {
				return this.each( function() {
					if ( args.complete ) {
						args.complete.call( this );
					}
				});
			}
		}

		function run( next ) {
			var elem = $( this ),
				complete = args.complete,
				mode = args.mode;

			function done() {
				if ( $.isFunction( complete ) ) {
					complete.call( elem[0] );
				}
				if ( $.isFunction( next ) ) {
					next();
				}
			}

			// If the element already has the correct final state, delegate to
			// the core methods so the internal tracking of "olddisplay" works.
			if ( elem.is( ":hidden" ) ? mode === "hide" : mode === "show" ) {
				elem[ mode ]();
				done();
			} else {
				effectMethod.call( elem[0], args, done );
			}
		}

		return queue === false ? this.each( run ) : this.queue( queue || "fx", run );
	},

	show: (function( orig ) {
		return function( option ) {
			if ( standardAnimationOption( option ) ) {
				return orig.apply( this, arguments );
			} else {
				var args = _normalizeArguments.apply( this, arguments );
				args.mode = "show";
				return this.effect.call( this, args );
			}
		};
	})( $.fn.show ),

	hide: (function( orig ) {
		return function( option ) {
			if ( standardAnimationOption( option ) ) {
				return orig.apply( this, arguments );
			} else {
				var args = _normalizeArguments.apply( this, arguments );
				args.mode = "hide";
				return this.effect.call( this, args );
			}
		};
	})( $.fn.hide ),

	toggle: (function( orig ) {
		return function( option ) {
			if ( standardAnimationOption( option ) || typeof option === "boolean" ) {
				return orig.apply( this, arguments );
			} else {
				var args = _normalizeArguments.apply( this, arguments );
				args.mode = "toggle";
				return this.effect.call( this, args );
			}
		};
	})( $.fn.toggle ),

	// helper functions
	cssUnit: function(key) {
		var style = this.css( key ),
			val = [];

		$.each( [ "em", "px", "%", "pt" ], function( i, unit ) {
			if ( style.indexOf( unit ) > 0 ) {
				val = [ parseFloat( style ), unit ];
			}
		});
		return val;
	}
});

})();

/******************************************************************************/
/*********************************** EASING ***********************************/
/******************************************************************************/

(function() {

// based on easing equations from Robert Penner (http://www.robertpenner.com/easing)

var baseEasings = {};

$.each( [ "Quad", "Cubic", "Quart", "Quint", "Expo" ], function( i, name ) {
	baseEasings[ name ] = function( p ) {
		return Math.pow( p, i + 2 );
	};
});

$.extend( baseEasings, {
	Sine: function ( p ) {
		return 1 - Math.cos( p * Math.PI / 2 );
	},
	Circ: function ( p ) {
		return 1 - Math.sqrt( 1 - p * p );
	},
	Elastic: function( p ) {
		return p === 0 || p === 1 ? p :
			-Math.pow( 2, 8 * (p - 1) ) * Math.sin( ( (p - 1) * 80 - 7.5 ) * Math.PI / 15 );
	},
	Back: function( p ) {
		return p * p * ( 3 * p - 2 );
	},
	Bounce: function ( p ) {
		var pow2,
			bounce = 4;

		while ( p < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}
		return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - p, 2 );
	}
});

$.each( baseEasings, function( name, easeIn ) {
	$.easing[ "easeIn" + name ] = easeIn;
	$.easing[ "easeOut" + name ] = function( p ) {
		return 1 - easeIn( 1 - p );
	};
	$.easing[ "easeInOut" + name ] = function( p ) {
		return p < 0.5 ?
			easeIn( p * 2 ) / 2 :
			1 - easeIn( p * -2 + 2 ) / 2;
	};
});

})();

})(jQuery);

define("jquery-ui-effect", function(){});

/*!
 * jQuery UI Effects Slide 1.10.3
 * http://jqueryui.com
 *
 * Copyright 2013 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/slide-effect/
 *
 * Depends:
 *	jquery.ui.effect.js
 */
(function( $, undefined ) {

$.effects.effect.slide = function( o, done ) {

	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "width", "height" ],
		mode = $.effects.setMode( el, o.mode || "show" ),
		show = mode === "show",
		direction = o.direction || "left",
		ref = (direction === "up" || direction === "down") ? "top" : "left",
		positiveMotion = (direction === "up" || direction === "left"),
		distance,
		animation = {};

	// Adjust
	$.effects.save( el, props );
	el.show();
	distance = o.distance || el[ ref === "top" ? "outerHeight" : "outerWidth" ]( true );

	$.effects.createWrapper( el ).css({
		overflow: "hidden"
	});

	if ( show ) {
		el.css( ref, positiveMotion ? (isNaN(distance) ? "-" + distance : -distance) : distance );
	}

	// Animation
	animation[ ref ] = ( show ?
		( positiveMotion ? "+=" : "-=") :
		( positiveMotion ? "-=" : "+=")) +
		distance;

	// Animate
	el.animate( animation, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});
};

})(jQuery);

define("jquery-ui-effect-slide", function(){});

/**
 * @preserve
 * jquery.layout 1.3.0 - Release Candidate 30.79
 * $Date: 2013-01-12 08:00:00 (Sat, 12 Jan 2013) $
 * $Rev: 303007 $
 *
 * Copyright (c) 2013 Kevin Dalman (http://allpro.net)
 * Based on work by Fabrizio Balliano (http://www.fabrizioballiano.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * SEE: http://layout.jquery-dev.net/LICENSE.txt
 * 
 * Changelog: http://layout.jquery-dev.net/changelog.cfm#1.3.0.rc30.79
 *
 * Docs: http://layout.jquery-dev.net/documentation.html
 * Tips: http://layout.jquery-dev.net/tips.html
 * Help: http://groups.google.com/group/jquery-ui-layout
 */

/* JavaDoc Info: http://code.google.com/closure/compiler/docs/js-for-compiler.html
 * {!Object}	non-nullable type (never NULL)
 * {?string}	nullable type (sometimes NULL) - default for {Object}
 * {number=}	optional parameter
 * {*}			ALL types
 */
/*	TODO for jQ 2.0 
 *	change .andSelf() to .addBack()
 *	$.fn.disableSelection won't work
 */

// NOTE: For best readability, view with a fixed-width font and tabs equal to 4-chars

;(function ($) {

// alias Math methods - used a lot!
var	min		= Math.min
,	max		= Math.max
,	round	= Math.floor

,	isStr	=  function (v) { return $.type(v) === "string"; }

	/**
	* @param {!Object}			Instance
	* @param {Array.<string>}	a_fn
	*/
,	runPluginCallbacks = function (Instance, a_fn) {
		if ($.isArray(a_fn))
			for (var i=0, c=a_fn.length; i<c; i++) {
				var fn = a_fn[i];
				try {
					if (isStr(fn)) // 'name' of a function
						fn = eval(fn);
					if ($.isFunction(fn))
						g(fn)( Instance );
				} catch (ex) {}
			}
		function g (f) { return f; }; // compiler hack
	}
;

/*
 *	GENERIC $.layout METHODS - used by all layouts
 */
$.layout = {

	version:	"1.3.rc30.79"
,	revision:	0.033007 // 1.3.0 final = 1.0300 - major(n+).minor(nn)+patch(nn+)

	// $.layout.browser REPLACES $.browser
,	browser:	{} // set below

	// *PREDEFINED* EFFECTS & DEFAULTS 
	// MUST list effect here - OR MUST set an fxSettings option (can be an empty hash: {})
,	effects: {

	//	Pane Open/Close Animations
		slide: {
			all:	{ duration:  "fast"	} // eg: duration: 1000, easing: "easeOutBounce"
		,	north:	{ direction: "up"	}
		,	south:	{ direction: "down"	}
		,	east:	{ direction: "right"}
		,	west:	{ direction: "left"	}
		}
	,	drop: {
			all:	{ duration:  "slow"	}
		,	north:	{ direction: "up"	}
		,	south:	{ direction: "down"	}
		,	east:	{ direction: "right"}
		,	west:	{ direction: "left"	}
		}
	,	scale: {
			all:	{ duration:	"fast"	}
		}
	//	these are not recommended, but can be used
	,	blind:		{}
	,	clip:		{}
	,	explode:	{}
	,	fade:		{}
	,	fold:		{}
	,	puff:		{}

	//	Pane Resize Animations
	,	size: {
			all:	{ easing:	"swing"	}
		}
	}

	// INTERNAL CONFIG DATA - DO NOT CHANGE THIS!
,	config: {
		optionRootKeys:	"effects,panes,north,south,west,east,center".split(",")
	,	allPanes:		"north,south,west,east,center".split(",")
	,	borderPanes:	"north,south,west,east".split(",")
	,	oppositeEdge: {
			north:	"south"
		,	south:	"north"
		,	east: 	"west"
		,	west: 	"east"
		}
	//	offscreen data
	,	offscreenCSS:	{ left: "-99999px", right: "auto" } // used by hide/close if useOffscreenClose=true
	,	offscreenReset:	"offscreenReset" // key used for data
	//	CSS used in multiple places
	,	hidden:		{ visibility: "hidden" }
	,	visible:	{ visibility: "visible" }
	//	layout element settings
	,	resizers: {
			cssReq: {
				position: 	"absolute"
			,	padding: 	0
			,	margin: 	0
			,	fontSize:	"1px"
			,	textAlign:	"left"	// to counter-act "center" alignment!
			,	overflow: 	"hidden" // prevent toggler-button from overflowing
			//	SEE $.layout.defaults.zIndexes.resizer_normal
			}
		,	cssDemo: { // DEMO CSS - applied if: options.PANE.applyDemoStyles=true
				background: "#DDD"
			,	border:		"none"
			}
		}
	,	togglers: {
			cssReq: {
				position: 	"absolute"
			,	display: 	"block"
			,	padding: 	0
			,	margin: 	0
			,	overflow:	"hidden"
			,	textAlign:	"center"
			,	fontSize:	"1px"
			,	cursor: 	"pointer"
			,	zIndex: 	1
			}
		,	cssDemo: { // DEMO CSS - applied if: options.PANE.applyDemoStyles=true
				background: "#AAA"
			}
		}
	,	content: {
			cssReq: {
				position:	"relative" /* contain floated or positioned elements */
			}
		,	cssDemo: { // DEMO CSS - applied if: options.PANE.applyDemoStyles=true
				overflow:	"auto"
			,	padding:	"10px"
			}
		,	cssDemoPane: { // DEMO CSS - REMOVE scrolling from 'pane' when it has a content-div
				overflow:	"hidden"
			,	padding:	0
			}
		}
	,	panes: { // defaults for ALL panes - overridden by 'per-pane settings' below
			cssReq: {
				position: 	"absolute"
			,	margin:		0
			//	$.layout.defaults.zIndexes.pane_normal
			}
		,	cssDemo: { // DEMO CSS - applied if: options.PANE.applyDemoStyles=true
				padding:	"10px"
			,	background:	"#FFF"
			,	border:		"1px solid #BBB"
			,	overflow:	"auto"
			}
		}
	,	north: {
			side:			"top"
		,	sizeType:		"Height"
		,	dir:			"horz"
		,	cssReq: {
				top: 		0
			,	bottom: 	"auto"
			,	left: 		0
			,	right: 		0
			,	width: 		"auto"
			//	height: 	DYNAMIC
			}
		}
	,	south: {
			side:			"bottom"
		,	sizeType:		"Height"
		,	dir:			"horz"
		,	cssReq: {
				top: 		"auto"
			,	bottom: 	0
			,	left: 		0
			,	right: 		0
			,	width: 		"auto"
			//	height: 	DYNAMIC
			}
		}
	,	east: {
			side:			"right"
		,	sizeType:		"Width"
		,	dir:			"vert"
		,	cssReq: {
				left: 		"auto"
			,	right: 		0
			,	top: 		"auto" // DYNAMIC
			,	bottom: 	"auto" // DYNAMIC
			,	height: 	"auto"
			//	width: 		DYNAMIC
			}
		}
	,	west: {
			side:			"left"
		,	sizeType:		"Width"
		,	dir:			"vert"
		,	cssReq: {
				left: 		0
			,	right: 		"auto"
			,	top: 		"auto" // DYNAMIC
			,	bottom: 	"auto" // DYNAMIC
			,	height: 	"auto"
			//	width: 		DYNAMIC
			}
		}
	,	center: {
			dir:			"center"
		,	cssReq: {
				left: 		"auto" // DYNAMIC
			,	right: 		"auto" // DYNAMIC
			,	top: 		"auto" // DYNAMIC
			,	bottom: 	"auto" // DYNAMIC
			,	height: 	"auto"
			,	width: 		"auto"
			}
		}
	}

	// CALLBACK FUNCTION NAMESPACE - used to store reusable callback functions
,	callbacks: {}

,	getParentPaneElem: function (el) {
		// must pass either a container or pane element
		var $el = $(el)
		,	layout = $el.data("layout") || $el.data("parentLayout");
		if (layout) {
			var $cont = layout.container;
			// see if this container is directly-nested inside an outer-pane
			if ($cont.data("layoutPane")) return $cont;
			var $pane = $cont.closest("."+ $.layout.defaults.panes.paneClass);
			// if a pane was found, return it
			if ($pane.data("layoutPane")) return $pane;
		}
		return null;
	}

,	getParentPaneInstance: function (el) {
		// must pass either a container or pane element
		var $pane = $.layout.getParentPaneElem(el);
		return $pane ? $pane.data("layoutPane") : null;
	}

,	getParentLayoutInstance: function (el) {
		// must pass either a container or pane element
		var $pane = $.layout.getParentPaneElem(el);
		return $pane ? $pane.data("parentLayout") : null;
	}

,	getEventObject: function (evt) {
		return typeof evt === "object" && evt.stopPropagation ? evt : null;
	}
,	parsePaneName: function (evt_or_pane) {
		var evt = $.layout.getEventObject( evt_or_pane )
		,	pane = evt_or_pane;
		if (evt) {
			// ALWAYS stop propagation of events triggered in Layout!
			evt.stopPropagation();
			pane = $(this).data("layoutEdge");
		}
		if (pane && !/^(west|east|north|south|center)$/.test(pane)) {
			$.layout.msg('LAYOUT ERROR - Invalid pane-name: "'+ pane +'"');
			pane = "error";
		}
		return pane;
	}


	// LAYOUT-PLUGIN REGISTRATION
	// more plugins can added beyond this default list
,	plugins: {
		draggable:		!!$.fn.draggable // resizing
	,	effects: {
			core:		!!$.effects		// animimations (specific effects tested by initOptions)
		,	slide:		$.effects && ($.effects.slide || ($.effects.effect && $.effects.effect.slide)) // default effect
		}
	}

//	arrays of plugin or other methods to be triggered for events in *each layout* - will be passed 'Instance'
,	onCreate:	[]	// runs when layout is just starting to be created - right after options are set
,	onLoad:		[]	// runs after layout container and global events init, but before initPanes is called
,	onReady:	[]	// runs after initialization *completes* - ie, after initPanes completes successfully
,	onDestroy:	[]	// runs after layout is destroyed
,	onUnload:	[]	// runs after layout is destroyed OR when page unloads
,	afterOpen:	[]	// runs after setAsOpen() completes
,	afterClose:	[]	// runs after setAsClosed() completes

	/*
	*	GENERIC UTILITY METHODS
	*/

	// calculate and return the scrollbar width, as an integer
,	scrollbarWidth:		function () { return window.scrollbarWidth  || $.layout.getScrollbarSize('width'); }
,	scrollbarHeight:	function () { return window.scrollbarHeight || $.layout.getScrollbarSize('height'); }
,	getScrollbarSize:	function (dim) {
		var $c	= $('<div style="position: absolute; top: -10000px; left: -10000px; width: 100px; height: 100px; overflow: scroll;"></div>').appendTo("body");
		var d	= { width: $c.css("width") - $c[0].clientWidth, height: $c.height() - $c[0].clientHeight };
		$c.remove();
		window.scrollbarWidth	= d.width;
		window.scrollbarHeight	= d.height;
		return dim.match(/^(width|height)$/) ? d[dim] : d;
	}


	/**
	* Returns hash container 'display' and 'visibility'
	*
	* @see	$.swap() - swaps CSS, runs callback, resets CSS
	* @param  {!Object}		$E				jQuery element
	* @param  {boolean=}	[force=false]	Run even if display != none
	* @return {!Object}						Returns current style props, if applicable
	*/
,	showInvisibly: function ($E, force) {
		if ($E && $E.length && (force || $E.css("display") === "none")) { // only if not *already hidden*
			var s = $E[0].style
				// save ONLY the 'style' props because that is what we must restore
			,	CSS = { display: s.display || '', visibility: s.visibility || '' };
			// show element 'invisibly' so can be measured
			$E.css({ display: "block", visibility: "hidden" });
			return CSS;
		}
		return {};
	}

	/**
	* Returns data for setting size of an element (container or a pane).
	*
	* @see  _create(), onWindowResize() for container, plus others for pane
	* @return JSON  Returns a hash of all dimensions: top, bottom, left, right, outerWidth, innerHeight, etc
	*/
,	getElementDimensions: function ($E, inset) {
		var
		//	dimensions hash - start with current data IF passed
			d	= { css: {}, inset: {} }
		,	x	= d.css			// CSS hash
		,	i	= { bottom: 0 }	// TEMP insets (bottom = complier hack)
		,	N	= $.layout.cssNum
		,	off = $E.offset()
		,	b, p, ei			// TEMP border, padding
		;
		d.offsetLeft = off.left;
		d.offsetTop  = off.top;

		if (!inset) inset = {}; // simplify logic below

		$.each("Left,Right,Top,Bottom".split(","), function (idx, e) { // e = edge
			b = x["border" + e] = $.layout.borderWidth($E, e);
			p = x["padding"+ e] = $.layout.cssNum($E, "padding"+e);
			ei = e.toLowerCase();
			d.inset[ei] = inset[ei] >= 0 ? inset[ei] : p; // any missing insetX value = paddingX
			i[ei] = d.inset[ei] + b; // total offset of content from outer side
		});

		x.width		= $E.width();
		x.height	= $E.height();
		x.top		= N($E,"top",true);
		x.bottom	= N($E,"bottom",true);
		x.left		= N($E,"left",true);
		x.right		= N($E,"right",true);

		d.outerWidth	= $E.outerWidth();
		d.outerHeight	= $E.outerHeight();
		// calc the TRUE inner-dimensions, even in quirks-mode!
		d.innerWidth	= max(0, d.outerWidth  - i.left - i.right);
		d.innerHeight	= max(0, d.outerHeight - i.top  - i.bottom);
		// layoutWidth/Height is used in calcs for manual resizing
		// layoutW/H only differs from innerW/H when in quirks-mode - then is like outerW/H
		d.layoutWidth	= $E.innerWidth();
		d.layoutHeight	= $E.innerHeight();

		//if ($E.prop('tagName') === 'BODY') { debugData( d, $E.prop('tagName') ); } // DEBUG

		//d.visible	= $E.is(":visible");// && x.width > 0 && x.height > 0;

		return d;
	}

,	getElementStyles: function ($E, list) {
		var
			CSS	= {}
		,	style	= $E[0].style
		,	props	= list.split(",")
		,	sides	= "Top,Bottom,Left,Right".split(",")
		,	attrs	= "Color,Style,Width".split(",")
		,	p, s, a, i, j, k
		;
		for (i=0; i < props.length; i++) {
			p = props[i];
			if (p.match(/(border|padding|margin)$/))
				for (j=0; j < 4; j++) {
					s = sides[j];
					if (p === "border")
						for (k=0; k < 3; k++) {
							a = attrs[k];
							CSS[p+s+a] = style[p+s+a];
						}
					else
						CSS[p+s] = style[p+s];
				}
			else
				CSS[p] = style[p];
		};
		return CSS
	}

	/**
	* Return the innerWidth for the current browser/doctype
	*
	* @see  initPanes(), sizeMidPanes(), initHandles(), sizeHandles()
	* @param  {Array.<Object>}	$E  Must pass a jQuery object - first element is processed
	* @param  {number=}			outerWidth (optional) Can pass a width, allowing calculations BEFORE element is resized
	* @return {number}			Returns the innerWidth of the elem by subtracting padding and borders
	*/
,	cssWidth: function ($E, outerWidth) {
		// a 'calculated' outerHeight can be passed so borders and/or padding are removed if needed
		if (outerWidth <= 0) return 0;

		var bs	= !$.layout.browser.boxModel ? "border-box" : $.support.boxSizing ? $E.css("boxSizing") : "content-box"
		,	b	= $.layout.borderWidth
		,	n	= $.layout.cssNum
		,	W	= outerWidth
		;
		// strip border and/or padding from outerWidth to get CSS Width
		if (bs !== "border-box")
			W -= (b($E, "Left") + b($E, "Right"));
		if (bs === "content-box")
			W -= (n($E, "paddingLeft") + n($E, "paddingRight"));
		return max(0,W);
	}

	/**
	* Return the innerHeight for the current browser/doctype
	*
	* @see  initPanes(), sizeMidPanes(), initHandles(), sizeHandles()
	* @param  {Array.<Object>}	$E  Must pass a jQuery object - first element is processed
	* @param  {number=}			outerHeight  (optional) Can pass a width, allowing calculations BEFORE element is resized
	* @return {number}			Returns the innerHeight of the elem by subtracting padding and borders
	*/
,	cssHeight: function ($E, outerHeight) {
		// a 'calculated' outerHeight can be passed so borders and/or padding are removed if needed
		if (outerHeight <= 0) return 0;

		var bs	= !$.layout.browser.boxModel ? "border-box" : $.support.boxSizing ? $E.css("boxSizing") : "content-box"
		,	b	= $.layout.borderWidth
		,	n	= $.layout.cssNum
		,	H	= outerHeight
		;
		// strip border and/or padding from outerHeight to get CSS Height
		if (bs !== "border-box")
			H -= (b($E, "Top") + b($E, "Bottom"));
		if (bs === "content-box")
			H -= (n($E, "paddingTop") + n($E, "paddingBottom"));
		return max(0,H);
	}

	/**
	* Returns the 'current CSS numeric value' for a CSS property - 0 if property does not exist
	*
	* @see  Called by many methods
	* @param {Array.<Object>}	$E					Must pass a jQuery object - first element is processed
	* @param {string}			prop				The name of the CSS property, eg: top, width, etc.
	* @param {boolean=}			[allowAuto=false]	true = return 'auto' if that is value; false = return 0
	* @return {(string|number)}						Usually used to get an integer value for position (top, left) or size (height, width)
	*/
,	cssNum: function ($E, prop, allowAuto) {
		if (!$E.jquery) $E = $($E);
		var CSS = $.layout.showInvisibly($E)
		,	p	= $.css($E[0], prop, true)
		,	v	= allowAuto && p=="auto" ? p : Math.round(parseFloat(p) || 0);
		$E.css( CSS ); // RESET
		return v;
	}

,	borderWidth: function (el, side) {
		if (el.jquery) el = el[0];
		var b = "border"+ side.substr(0,1).toUpperCase() + side.substr(1); // left => Left
		return $.css(el, b+"Style", true) === "none" ? 0 : Math.round(parseFloat($.css(el, b+"Width", true)) || 0);
	}

	/**
	* Mouse-tracking utility - FUTURE REFERENCE
	*
	* init: if (!window.mouse) {
	*			window.mouse = { x: 0, y: 0 };
	*			$(document).mousemove( $.layout.trackMouse );
	*		}
	*
	* @param {Object}		evt
	*
,	trackMouse: function (evt) {
		window.mouse = { x: evt.clientX, y: evt.clientY };
	}
	*/

	/**
	* SUBROUTINE for preventPrematureSlideClose option
	*
	* @param {Object}		evt
	* @param {Object=}		el
	*/
,	isMouseOverElem: function (evt, el) {
		var
			$E	= $(el || this)
		,	d	= $E.offset()
		,	T	= d.top
		,	L	= d.left
		,	R	= L + $E.outerWidth()
		,	B	= T + $E.outerHeight()
		,	x	= evt.pageX	// evt.clientX ?
		,	y	= evt.pageY	// evt.clientY ?
		;
		// if X & Y are < 0, probably means is over an open SELECT
		return ($.layout.browser.msie && x < 0 && y < 0) || ((x >= L && x <= R) && (y >= T && y <= B));
	}

	/**
	* Message/Logging Utility
	*
	* @example $.layout.msg("My message");				// log text
	* @example $.layout.msg("My message", true);		// alert text
	* @example $.layout.msg({ foo: "bar" }, "Title");	// log hash-data, with custom title
	* @example $.layout.msg({ foo: "bar" }, true, "Title", { sort: false }); -OR-
	* @example $.layout.msg({ foo: "bar" }, "Title", { sort: false, display: true }); // alert hash-data
	*
	* @param {(Object|string)}			info			String message OR Hash/Array
	* @param {(Boolean|string|Object)=}	[popup=false]	True means alert-box - can be skipped
	* @param {(Object|string)=}			[debugTitle=""]	Title for Hash data - can be skipped
	* @param {Object=}					[debugOpts]		Extra options for debug output
	*/
,	msg: function (info, popup, debugTitle, debugOpts) {
		if ($.isPlainObject(info) && window.debugData) {
			if (typeof popup === "string") {
				debugOpts	= debugTitle;
				debugTitle	= popup;
			}
			else if (typeof debugTitle === "object") {
				debugOpts	= debugTitle;
				debugTitle	= null;
			}
			var t = debugTitle || "log( <object> )"
			,	o = $.extend({ sort: false, returnHTML: false, display: false }, debugOpts);
			if (popup === true || o.display)
				debugData( info, t, o );
			else if (window.console)
				console.log(debugData( info, t, o ));
		}
		else if (popup)
			alert(info);
		else if (window.console)
			console.log(info);
		else {
			var id	= "#layoutLogger"
			,	$l = $(id);
			if (!$l.length)
				$l = createLog();
			$l.children("ul").append('<li style="padding: 4px 10px; margin: 0; border-top: 1px solid #CCC;">'+ info.replace(/\</g,"&lt;").replace(/\>/g,"&gt;") +'</li>');
		}

		function createLog () {
			var pos = $.support.fixedPosition ? 'fixed' : 'absolute'
			,	$e = $('<div id="layoutLogger" style="position: '+ pos +'; top: 5px; z-index: 999999; max-width: 25%; overflow: hidden; border: 1px solid #000; border-radius: 5px; background: #FBFBFB; box-shadow: 0 2px 10px rgba(0,0,0,0.3);">'
				+	'<div style="font-size: 13px; font-weight: bold; padding: 5px 10px; background: #F6F6F6; border-radius: 5px 5px 0 0; cursor: move;">'
				+	'<span style="float: right; padding-left: 7px; cursor: pointer;" title="Remove Console" onclick="$(this).closest(\'#layoutLogger\').remove()">X</span>Layout console.log</div>'
				+	'<ul style="font-size: 13px; font-weight: none; list-style: none; margin: 0; padding: 0 0 2px;"></ul>'
				+ '</div>'
				).appendTo("body");
			$e.css('left', $(window).width() - $e.outerWidth() - 5)
			if ($.ui.draggable) $e.draggable({ handle: ':first-child' });
			return $e;
		};
	}

};


/*
 *	$.layout.browser REPLACES removed $.browser, with extra data
 *	Parsing code here adapted from jQuery 1.8 $.browse
 */
var u = navigator.userAgent.toLowerCase()
,	m = /(chrome)[ \/]([\w.]+)/.exec( u )
	||	/(webkit)[ \/]([\w.]+)/.exec( u )
	||	/(opera)(?:.*version|)[ \/]([\w.]+)/.exec( u )
	||	/(msie) ([\w.]+)/.exec( u )
	||	u.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( u )
	||	[]
,	b = m[1] || ""
,	v = m[2] || 0
,	ie = b === "msie"
;
$.layout.browser = {
	version:	v
,	safari:		b === "webkit"	// webkit (NOT chrome) = safari
,	webkit:		b === "chrome"	// chrome = webkit
,	msie:		ie
,	isIE6:		ie && v == 6
	// ONLY IE reverts to old box-model - update for older jQ onReady
,	boxModel:	!ie || $.support.boxModel !== false
};
if (b) $.layout.browser[b] = true; // set CURRENT browser
/*	OLD versions of jQuery only set $.support.boxModel after page is loaded
 *	so if this is IE, use support.boxModel to test for quirks-mode (ONLY IE changes boxModel) */
if (ie) $(function(){ $.layout.browser.boxModel = $.support.boxModel; });


// DEFAULT OPTIONS
$.layout.defaults = {
/*
 *	LAYOUT & LAYOUT-CONTAINER OPTIONS
 *	- none of these options are applicable to individual panes
 */
	name:						""			// Not required, but useful for buttons and used for the state-cookie
,	containerClass:				"ui-layout-container" // layout-container element
,	inset:						null		// custom container-inset values (override padding)
,	scrollToBookmarkOnLoad:		true		// after creating a layout, scroll to bookmark in URL (.../page.htm#myBookmark)
,	resizeWithWindow:			true		// bind thisLayout.resizeAll() to the window.resize event
,	resizeWithWindowDelay:		200			// delay calling resizeAll because makes window resizing very jerky
,	resizeWithWindowMaxDelay:	0			// 0 = none - force resize every XX ms while window is being resized
,	maskPanesEarly:				false		// true = create pane-masks on resizer.mouseDown instead of waiting for resizer.dragstart
,	onresizeall_start:			null		// CALLBACK when resizeAll() STARTS	- NOT pane-specific
,	onresizeall_end:			null		// CALLBACK when resizeAll() ENDS	- NOT pane-specific
,	onload_start:				null		// CALLBACK when Layout inits - after options initialized, but before elements
,	onload_end:					null		// CALLBACK when Layout inits - after EVERYTHING has been initialized
,	onunload_start:				null		// CALLBACK when Layout is destroyed OR onWindowUnload
,	onunload_end:				null		// CALLBACK when Layout is destroyed OR onWindowUnload
,	initPanes:					true		// false = DO NOT initialize the panes onLoad - will init later
,	showErrorMessages:			true		// enables fatal error messages to warn developers of common errors
,	showDebugMessages:			false		// display console-and-alert debug msgs - IF this Layout version _has_ debugging code!
//	Changing this zIndex value will cause other zIndex values to automatically change
,	zIndex:						null		// the PANE zIndex - resizers and masks will be +1
//	DO NOT CHANGE the zIndex values below unless you clearly understand their relationships
,	zIndexes: {								// set _default_ z-index values here...
		pane_normal:			0			// normal z-index for panes
	,	content_mask:			1			// applied to overlays used to mask content INSIDE panes during resizing
	,	resizer_normal:			2			// normal z-index for resizer-bars
	,	pane_sliding:			100			// applied to *BOTH* the pane and its resizer when a pane is 'slid open'
	,	pane_animate:			1000		// applied to the pane when being animated - not applied to the resizer
	,	resizer_drag:			10000		// applied to the CLONED resizer-bar when being 'dragged'
	}
,	errors: {
		pane:					"pane"		// description of "layout pane element" - used only in error messages
	,	selector:				"selector"	// description of "jQuery-selector" - used only in error messages
	,	addButtonError:			"Error Adding Button\nInvalid "
	,	containerMissing:		"UI Layout Initialization Error\nThe specified layout-container does not exist."
	,	centerPaneMissing:		"UI Layout Initialization Error\nThe center-pane element does not exist.\nThe center-pane is a required element."
	,	noContainerHeight:		"UI Layout Initialization Warning\nThe layout-container \"CONTAINER\" has no height.\nTherefore the layout is 0-height and hence 'invisible'!"
	,	callbackError:			"UI Layout Callback Error\nThe EVENT callback is not a valid function."
	}
/*
 *	PANE DEFAULT SETTINGS
 *	- settings under the 'panes' key become the default settings for *all panes*
 *	- ALL pane-options can also be set specifically for each panes, which will override these 'default values'
 */
,	panes: { // default options for 'all panes' - will be overridden by 'per-pane settings'
		applyDemoStyles: 		false		// NOTE: renamed from applyDefaultStyles for clarity
	,	closable:				true		// pane can open & close
	,	resizable:				true		// when open, pane can be resized 
	,	slidable:				true		// when closed, pane can 'slide open' over other panes - closes on mouse-out
	,	initClosed:				false		// true = init pane as 'closed'
	,	initHidden: 			false 		// true = init pane as 'hidden' - no resizer-bar/spacing
	//	SELECTORS
	//,	paneSelector:			""			// MUST be pane-specific - jQuery selector for pane
	,	contentSelector:		".ui-layout-content" // INNER div/element to auto-size so only it scrolls, not the entire pane!
	,	contentIgnoreSelector:	".ui-layout-ignore"	// element(s) to 'ignore' when measuring 'content'
	,	findNestedContent:		false		// true = $P.find(contentSelector), false = $P.children(contentSelector)
	//	GENERIC ROOT-CLASSES - for auto-generated classNames
	,	paneClass:				"ui-layout-pane"	// Layout Pane
	,	resizerClass:			"ui-layout-resizer"	// Resizer Bar
	,	togglerClass:			"ui-layout-toggler"	// Toggler Button
	,	buttonClass:			"ui-layout-button"	// CUSTOM Buttons	- eg: '[ui-layout-button]-toggle/-open/-close/-pin'
	//	ELEMENT SIZE & SPACING
	//,	size:					100			// MUST be pane-specific -initial size of pane
	,	minSize:				0			// when manually resizing a pane
	,	maxSize:				0			// ditto, 0 = no limit
	,	spacing_open:			6			// space between pane and adjacent panes - when pane is 'open'
	,	spacing_closed:			6			// ditto - when pane is 'closed'
	,	togglerLength_open:		50			// Length = WIDTH of toggler button on north/south sides - HEIGHT on east/west sides
	,	togglerLength_closed: 	50			// 100% OR -1 means 'full height/width of resizer bar' - 0 means 'hidden'
	,	togglerAlign_open:		"center"	// top/left, bottom/right, center, OR...
	,	togglerAlign_closed:	"center"	// 1 => nn = offset from top/left, -1 => -nn == offset from bottom/right
	,	togglerContent_open:	""			// text or HTML to put INSIDE the toggler
	,	togglerContent_closed:	""			// ditto
	//	RESIZING OPTIONS
	,	resizerDblClickToggle:	true		// 
	,	autoResize:				true		// IF size is 'auto' or a percentage, then recalc 'pixel size' whenever the layout resizes
	,	autoReopen:				true		// IF a pane was auto-closed due to noRoom, reopen it when there is room? False = leave it closed
	,	resizerDragOpacity:		1			// option for ui.draggable
	//,	resizerCursor:			""			// MUST be pane-specific - cursor when over resizer-bar
	,	maskContents:			false		// true = add DIV-mask over-or-inside this pane so can 'drag' over IFRAMES
	,	maskObjects:			false		// true = add IFRAME-mask over-or-inside this pane to cover objects/applets - content-mask will overlay this mask
	,	maskZindex:				null		// will override zIndexes.content_mask if specified - not applicable to iframe-panes
	,	resizingGrid:			false		// grid size that the resizers will snap-to during resizing, eg: [20,20]
	,	livePaneResizing:		false		// true = LIVE Resizing as resizer is dragged
	,	liveContentResizing:	false		// true = re-measure header/footer heights as resizer is dragged
	,	liveResizingTolerance:	1			// how many px change before pane resizes, to control performance
	//	SLIDING OPTIONS
	,	sliderCursor:			"pointer"	// cursor when resizer-bar will trigger 'sliding'
	,	slideTrigger_open:		"click"		// click, dblclick, mouseenter
	,	slideTrigger_close:		"mouseleave"// click, mouseleave
	,	slideDelay_open:		300			// applies only for mouseenter event - 0 = instant open
	,	slideDelay_close:		300			// applies only for mouseleave event (300ms is the minimum!)
	,	hideTogglerOnSlide:		false		// when pane is slid-open, should the toggler show?
	,	preventQuickSlideClose:	$.layout.browser.webkit // Chrome triggers slideClosed as it is opening
	,	preventPrematureSlideClose: false	// handle incorrect mouseleave trigger, like when over a SELECT-list in IE
	//	PANE-SPECIFIC TIPS & MESSAGES
	,	tips: {
			Open:				"Open"		// eg: "Open Pane"
		,	Close:				"Close"
		,	Resize:				"Resize"
		,	Slide:				"Slide Open"
		,	Pin:				"Pin"
		,	Unpin:				"Un-Pin"
		,	noRoomToOpen:		"Not enough room to show this panel."	// alert if user tries to open a pane that cannot
		,	minSizeWarning:		"Panel has reached its minimum size"	// displays in browser statusbar
		,	maxSizeWarning:		"Panel has reached its maximum size"	// ditto
		}
	//	HOT-KEYS & MISC
	,	showOverflowOnHover:	false		// will bind allowOverflow() utility to pane.onMouseOver
	,	enableCursorHotkey:		true		// enabled 'cursor' hotkeys
	//,	customHotkey:			""			// MUST be pane-specific - EITHER a charCode OR a character
	,	customHotkeyModifier:	"SHIFT"		// either 'SHIFT', 'CTRL' or 'CTRL+SHIFT' - NOT 'ALT'
	//	PANE ANIMATION
	//	NOTE: fxSss_open, fxSss_close & fxSss_size options (eg: fxName_open) are auto-generated if not passed
	,	fxName:					"slide" 	// ('none' or blank), slide, drop, scale -- only relevant to 'open' & 'close', NOT 'size'
	,	fxSpeed:				null		// slow, normal, fast, 200, nnn - if passed, will OVERRIDE fxSettings.duration
	,	fxSettings:				{}			// can be passed, eg: { easing: "easeOutBounce", duration: 1500 }
	,	fxOpacityFix:			true		// tries to fix opacity in IE to restore anti-aliasing after animation
	,	animatePaneSizing:		false		// true = animate resizing after dragging resizer-bar OR sizePane() is called
	/*  NOTE: Action-specific FX options are auto-generated from the options above if not specifically set:
		fxName_open:			"slide"		// 'Open' pane animation
		fnName_close:			"slide"		// 'Close' pane animation
		fxName_size:			"slide"		// 'Size' pane animation - when animatePaneSizing = true
		fxSpeed_open:			null
		fxSpeed_close:			null
		fxSpeed_size:			null
		fxSettings_open:		{}
		fxSettings_close:		{}
		fxSettings_size:		{}
	*/
	//	CHILD/NESTED LAYOUTS
	,	children:				null		// Layout-options for nested/child layout - even {} is valid as options
	,	containerSelector:		''			// if child is NOT 'directly nested', a selector to find it/them (can have more than one child layout!)
	,	initChildren:			true		// true = child layout will be created as soon as _this_ layout completes initialization
	,	destroyChildren:		true		// true = destroy child-layout if this pane is destroyed
	,	resizeChildren:			true		// true = trigger child-layout.resizeAll() when this pane is resized
	//	EVENT TRIGGERING
	,	triggerEventsOnLoad:	false		// true = trigger onopen OR onclose callbacks when layout initializes
	,	triggerEventsDuringLiveResize: true	// true = trigger onresize callback REPEATEDLY if livePaneResizing==true
	//	PANE CALLBACKS
	,	onshow_start:			null		// CALLBACK when pane STARTS to Show	- BEFORE onopen/onhide_start
	,	onshow_end:				null		// CALLBACK when pane ENDS being Shown	- AFTER  onopen/onhide_end
	,	onhide_start:			null		// CALLBACK when pane STARTS to Close	- BEFORE onclose_start
	,	onhide_end:				null		// CALLBACK when pane ENDS being Closed	- AFTER  onclose_end
	,	onopen_start:			null		// CALLBACK when pane STARTS to Open
	,	onopen_end:				null		// CALLBACK when pane ENDS being Opened
	,	onclose_start:			null		// CALLBACK when pane STARTS to Close
	,	onclose_end:			null		// CALLBACK when pane ENDS being Closed
	,	onresize_start:			null		// CALLBACK when pane STARTS being Resized ***FOR ANY REASON***
	,	onresize_end:			null		// CALLBACK when pane ENDS being Resized ***FOR ANY REASON***
	,	onsizecontent_start:	null		// CALLBACK when sizing of content-element STARTS
	,	onsizecontent_end:		null		// CALLBACK when sizing of content-element ENDS
	,	onswap_start:			null		// CALLBACK when pane STARTS to Swap
	,	onswap_end:				null		// CALLBACK when pane ENDS being Swapped
	,	ondrag_start:			null		// CALLBACK when pane STARTS being ***MANUALLY*** Resized
	,	ondrag_end:				null		// CALLBACK when pane ENDS being ***MANUALLY*** Resized
	}
/*
 *	PANE-SPECIFIC SETTINGS
 *	- options listed below MUST be specified per-pane - they CANNOT be set under 'panes'
 *	- all options under the 'panes' key can also be set specifically for any pane
 *	- most options under the 'panes' key apply only to 'border-panes' - NOT the the center-pane
 */
,	north: {
		paneSelector:			".ui-layout-north"
	,	size:					"auto"		// eg: "auto", "30%", .30, 200
	,	resizerCursor:			"n-resize"	// custom = url(myCursor.cur)
	,	customHotkey:			""			// EITHER a charCode (43) OR a character ("o")
	}
,	south: {
		paneSelector:			".ui-layout-south"
	,	size:					"auto"
	,	resizerCursor:			"s-resize"
	,	customHotkey:			""
	}
,	east: {
		paneSelector:			".ui-layout-east"
	,	size:					200
	,	resizerCursor:			"e-resize"
	,	customHotkey:			""
	}
,	west: {
		paneSelector:			".ui-layout-west"
	,	size:					200
	,	resizerCursor:			"w-resize"
	,	customHotkey:			""
	}
,	center: {
		paneSelector:			".ui-layout-center"
	,	minWidth:				0
	,	minHeight:				0
	}
};

$.layout.optionsMap = {
	// layout/global options - NOT pane-options
	layout: ("name,instanceKey,stateManagement,effects,inset,zIndexes,errors,"
	+	"zIndex,scrollToBookmarkOnLoad,showErrorMessages,maskPanesEarly,"
	+	"outset,resizeWithWindow,resizeWithWindowDelay,resizeWithWindowMaxDelay,"
	+	"onresizeall,onresizeall_start,onresizeall_end,onload,onload_start,onload_end,onunload,onunload_start,onunload_end").split(",")
//	borderPanes: [ ALL options that are NOT specified as 'layout' ]
	// default.panes options that apply to the center-pane (most options apply _only_ to border-panes)
,	center: ("paneClass,contentSelector,contentIgnoreSelector,findNestedContent,applyDemoStyles,triggerEventsOnLoad,"
	+	"showOverflowOnHover,maskContents,maskObjects,liveContentResizing,"
	+	"containerSelector,children,initChildren,resizeChildren,destroyChildren,"
	+	"onresize,onresize_start,onresize_end,onsizecontent,onsizecontent_start,onsizecontent_end").split(",")
	// options that MUST be specifically set 'per-pane' - CANNOT set in the panes (defaults) key
,	noDefault: ("paneSelector,resizerCursor,customHotkey").split(",")
};

/**
 * Processes options passed in converts flat-format data into subkey (JSON) format
 * In flat-format, subkeys are _currently_ separated with 2 underscores, like north__optName
 * Plugins may also call this method so they can transform their own data
 *
 * @param  {!Object}	hash			Data/options passed by user - may be a single level or nested levels
 * @param  {boolean=}	[addKeys=false]	Should the primary layout.options keys be added if they do not exist?
 * @return {Object}						Returns hash of minWidth & minHeight
 */
$.layout.transformData = function (hash, addKeys) {
	var	json = addKeys ? { panes: {}, center: {} } : {} // init return object
	,	branch, optKey, keys, key, val, i, c;

	if (typeof hash !== "object") return json; // no options passed

	// convert all 'flat-keys' to 'sub-key' format
	for (optKey in hash) {
		branch	= json;
		val		= hash[ optKey ];
		keys	= optKey.split("__"); // eg: west__size or north__fxSettings__duration
		c		= keys.length - 1;
		// convert underscore-delimited to subkeys
		for (i=0; i <= c; i++) {
			key = keys[i];
			if (i === c) {	// last key = value
				if ($.isPlainObject( val ))
					branch[key] = $.layout.transformData( val ); // RECURSE
				else
					branch[key] = val;
			}
			else {
				if (!branch[key])
					branch[key] = {}; // create the subkey
				// recurse to sub-key for next loop - if not done
				branch = branch[key];
			}
		}
	}
	return json;
};

// INTERNAL CONFIG DATA - DO NOT CHANGE THIS!
$.layout.backwardCompatibility = {
	// data used by renameOldOptions()
	map: {
	//	OLD Option Name:			NEW Option Name
		applyDefaultStyles:			"applyDemoStyles"
	//	CHILD/NESTED LAYOUTS
	,	childOptions:				"children"
	,	initChildLayout:			"initChildren"
	,	destroyChildLayout:			"destroyChildren"
	,	resizeChildLayout:			"resizeChildren"
	,	resizeNestedLayout:			"resizeChildren"
	//	MISC Options
	,	resizeWhileDragging:		"livePaneResizing"
	,	resizeContentWhileDragging:	"liveContentResizing"
	,	triggerEventsWhileDragging:	"triggerEventsDuringLiveResize"
	,	maskIframesOnResize:		"maskContents"
	//	STATE MANAGEMENT
	,	useStateCookie:				"stateManagement.enabled"
	,	"cookie.autoLoad":			"stateManagement.autoLoad"
	,	"cookie.autoSave":			"stateManagement.autoSave"
	,	"cookie.keys":				"stateManagement.stateKeys"
	,	"cookie.name":				"stateManagement.cookie.name"
	,	"cookie.domain":			"stateManagement.cookie.domain"
	,	"cookie.path":				"stateManagement.cookie.path"
	,	"cookie.expires":			"stateManagement.cookie.expires"
	,	"cookie.secure":			"stateManagement.cookie.secure"
	//	OLD Language options
	,	noRoomToOpenTip:			"tips.noRoomToOpen"
	,	togglerTip_open:			"tips.Close"	// open   = Close
	,	togglerTip_closed:			"tips.Open"		// closed = Open
	,	resizerTip:					"tips.Resize"
	,	sliderTip:					"tips.Slide"
	}

/**
* @param {Object}	opts
*/
,	renameOptions: function (opts) {
		var map = $.layout.backwardCompatibility.map
		,	oldData, newData, value
		;
		for (var itemPath in map) {
			oldData	= getBranch( itemPath );
			value	= oldData.branch[ oldData.key ];
			if (value !== undefined) {
				newData = getBranch( map[itemPath], true );
				newData.branch[ newData.key ] = value;
				delete oldData.branch[ oldData.key ];
			}
		}

		/**
		* @param {string}	path
		* @param {boolean=}	[create=false]	Create path if does not exist
		*/
		function getBranch (path, create) {
			var a = path.split(".") // split keys into array
			,	c = a.length - 1
			,	D = { branch: opts, key: a[c] } // init branch at top & set key (last item)
			,	i = 0, k, undef;
			for (; i<c; i++) { // skip the last key (data)
				k = a[i];
				if (D.branch[ k ] == undefined) { // child-key does not exist
					if (create) {
						D.branch = D.branch[ k ] = {}; // create child-branch
					}
					else // can't go any farther
						D.branch = {}; // branch is undefined
				}
				else
					D.branch = D.branch[ k ]; // get child-branch
			}
			return D;
		};
	}

/**
* @param {Object}	opts
*/
,	renameAllOptions: function (opts) {
		var ren = $.layout.backwardCompatibility.renameOptions;
		// rename root (layout) options
		ren( opts );
		// rename 'defaults' to 'panes'
		if (opts.defaults) {
			if (typeof opts.panes !== "object")
				opts.panes = {};
			$.extend(true, opts.panes, opts.defaults);
			delete opts.defaults;
		}
		// rename options in the the options.panes key
		if (opts.panes) ren( opts.panes );
		// rename options inside *each pane key*, eg: options.west
		$.each($.layout.config.allPanes, function (i, pane) {
			if (opts[pane]) ren( opts[pane] );
		});	
		return opts;
	}
};




/*	============================================================
 *	BEGIN WIDGET: $( selector ).layout( {options} );
 *	============================================================
 */
$.fn.layout = function (opts) {
	var

	// local aliases to global data
	browser	= $.layout.browser
,	_c		= $.layout.config

	// local aliases to utlity methods
,	cssW	= $.layout.cssWidth
,	cssH	= $.layout.cssHeight
,	elDims	= $.layout.getElementDimensions
,	styles	= $.layout.getElementStyles
,	evtObj	= $.layout.getEventObject
,	evtPane	= $.layout.parsePaneName

/**
 * options - populated by initOptions()
 */
,	options = $.extend(true, {}, $.layout.defaults)
,	effects	= options.effects = $.extend(true, {}, $.layout.effects)

/**
 * layout-state object
 */
,	state = {
		// generate unique ID to use for event.namespace so can unbind only events added by 'this layout'
		id:				"layout"+ $.now()	// code uses alias: sID
	,	initialized:	false
	,	paneResizing:	false
	,	panesSliding:	{}
	,	container:	{ 	// list all keys referenced in code to avoid compiler error msgs
			innerWidth:		0
		,	innerHeight:	0
		,	outerWidth:		0
		,	outerHeight:	0
		,	layoutWidth:	0
		,	layoutHeight:	0
		}
	,	north:		{ childIdx: 0 }
	,	south:		{ childIdx: 0 }
	,	east:		{ childIdx: 0 }
	,	west:		{ childIdx: 0 }
	,	center:		{ childIdx: 0 }
	}

/**
 * parent/child-layout pointers
 */
//,	hasParentLayout	= false	- exists ONLY inside Instance so can be set externally
,	children = {
		north:		null
	,	south:		null
	,	east:		null
	,	west:		null
	,	center:		null
	}

/*
 * ###########################
 *  INTERNAL HELPER FUNCTIONS
 * ###########################
 */

	/**
	* Manages all internal timers
	*/
,	timer = {
		data:	{}
	,	set:	function (s, fn, ms) { timer.clear(s); timer.data[s] = setTimeout(fn, ms); }
	,	clear:	function (s) { var t=timer.data; if (t[s]) {clearTimeout(t[s]); delete t[s];} }
	}

	/**
	* Alert or console.log a message - IF option is enabled.
	*
	* @param {(string|!Object)}	msg				Message (or debug-data) to display
	* @param {boolean=}			[popup=false]	True by default, means 'alert', false means use console.log
	* @param {boolean=}			[debug=false]	True means is a widget debugging message
	*/
,	_log = function (msg, popup, debug) {
		var o = options;
		if ((o.showErrorMessages && !debug) || (debug && o.showDebugMessages))
			$.layout.msg( o.name +' / '+ msg, (popup !== false) );
		return false;
	}

	/**
	* Executes a Callback function after a trigger event, like resize, open or close
	*
	* @param {string}				evtName					Name of the layout callback, eg "onresize_start"
	* @param {(string|boolean)=}	[pane=""]				This is passed only so we can pass the 'pane object' to the callback
	* @param {(string|boolean)=}	[skipBoundEvents=false]	True = do not run events bound to the elements - only the callbacks set in options
	*/
,	_runCallbacks = function (evtName, pane, skipBoundEvents) {
		var	hasPane	= pane && isStr(pane)
		,	s		= hasPane ? state[pane] : state
		,	o		= hasPane ? options[pane] : options
		,	lName	= options.name
			// names like onopen and onopen_end separate are interchangeable in options...
		,	lng		= evtName + (evtName.match(/_/) ? "" : "_end")
		,	shrt	= lng.match(/_end$/) ? lng.substr(0, lng.length - 4) : ""
		,	fn		= o[lng] || o[shrt]
		,	retVal	= "NC" // NC = No Callback
		,	args	= []
		,	$P
		;
		if ( !hasPane && $.type(pane) === 'boolean' ) {
			skipBoundEvents = pane; // allow pane param to be skipped for Layout callback
			pane = "";
		}

		// first trigger the callback set in the options
		if (fn) {
			try {
				// convert function name (string) to function object
				if (isStr( fn )) {
					if (fn.match(/,/)) {
						// function name cannot contain a comma, 
						// so must be a function name AND a parameter to pass
						args = fn.split(",")
						,	fn = eval(args[0]);
					}
					else // just the name of an external function?
						fn = eval(fn);
				}
				// execute the callback, if exists
				if ($.isFunction( fn )) {
					if (args.length)
						retVal = g(fn)(args[1]); // pass the argument parsed from 'list'
					else if ( hasPane )
						// pass data: pane-name, pane-element, pane-state, pane-options, and layout-name
						retVal = g(fn)( pane, $Ps[pane], s, o, lName );
					else // must be a layout/container callback - pass suitable info
						retVal = g(fn)( Instance, s, o, lName );
				}
			}
			catch (ex) {
				_log( options.errors.callbackError.replace(/EVENT/, $.trim((pane || "") +" "+ lng)), false );
				if ($.type(ex) === 'string' && string.length)
					_log('Exception:  '+ ex, false );
			}
		}

		// trigger additional events bound directly to the pane
		if (!skipBoundEvents && retVal !== false) {
			if ( hasPane ) { // PANE events can be bound to each pane-elements
				$P	= $Ps[pane];
				o	= options[pane];
				s	= state[pane];
				$P.triggerHandler('layoutpane'+ lng, [ pane, $P, s, o, lName ]);
				if (shrt)
					$P.triggerHandler('layoutpane'+ shrt, [ pane, $P, s, o, lName ]);
			}
			else { // LAYOUT events can be bound to the container-element
				$N.triggerHandler('layout'+ lng, [ Instance, s, o, lName ]);
				if (shrt)
					$N.triggerHandler('layout'+ shrt, [ Instance, s, o, lName ]);
			}
		}

		// ALWAYS resizeChildren after an onresize_end event - even during initialization
		// IGNORE onsizecontent_end event because causes child-layouts to resize TWICE
		if (hasPane && evtName === "onresize_end") // BAD: || evtName === "onsizecontent_end"
			resizeChildren(pane+"", true); // compiler hack -force string

		return retVal;

		function g (f) { return f; }; // compiler hack
	}


	/**
	* cure iframe display issues in IE & other browsers
	*/
,	_fixIframe = function (pane) {
		if (browser.mozilla) return; // skip FireFox - it auto-refreshes iframes onShow
		var $P = $Ps[pane];
		// if the 'pane' is an iframe, do it
		if (state[pane].tagName === "IFRAME")
			$P.css(_c.hidden).css(_c.visible); 
		else // ditto for any iframes INSIDE the pane
			$P.find('IFRAME').css(_c.hidden).css(_c.visible);
	}

	/**
	* @param  {string}		pane		Can accept ONLY a 'pane' (east, west, etc)
	* @param  {number=}		outerSize	(optional) Can pass a width, allowing calculations BEFORE element is resized
	* @return {number}		Returns the innerHeight/Width of el by subtracting padding and borders
	*/
,	cssSize = function (pane, outerSize) {
		var fn = _c[pane].dir=="horz" ? cssH : cssW;
		return fn($Ps[pane], outerSize);
	}

	/**
	* @param  {string}		pane		Can accept ONLY a 'pane' (east, west, etc)
	* @return {Object}		Returns hash of minWidth & minHeight
	*/
,	cssMinDims = function (pane) {
		// minWidth/Height means CSS width/height = 1px
		var	$P	= $Ps[pane]
		,	dir	= _c[pane].dir
		,	d	= {
				minWidth:	1001 - cssW($P, 1000)
			,	minHeight:	1001 - cssH($P, 1000)
			}
		;
		if (dir === "horz") d.minSize = d.minHeight;
		if (dir === "vert") d.minSize = d.minWidth;
		return d;
	}

	// TODO: see if these methods can be made more useful...
	// TODO: *maybe* return cssW/H from these so caller can use this info

	/**
	* @param {(string|!Object)}		el
	* @param {number=}				outerWidth
	* @param {boolean=}				[autoHide=false]
	*/
,	setOuterWidth = function (el, outerWidth, autoHide) {
		var $E = el, w;
		if (isStr(el)) $E = $Ps[el]; // west
		else if (!el.jquery) $E = $(el);
		w = cssW($E, outerWidth);
		$E.css({ width: w });
		if (w > 0) {
			if (autoHide && $E.data('autoHidden') && $E.innerHeight() > 0) {
				$E.show().data('autoHidden', false);
				if (!browser.mozilla) // FireFox refreshes iframes - IE does not
					// make hidden, then visible to 'refresh' display after animation
					$E.css(_c.hidden).css(_c.visible);
			}
		}
		else if (autoHide && !$E.data('autoHidden'))
			$E.hide().data('autoHidden', true);
	}

	/**
	* @param {(string|!Object)}		el
	* @param {number=}				outerHeight
	* @param {boolean=}				[autoHide=false]
	*/
,	setOuterHeight = function (el, outerHeight, autoHide) {
		var $E = el, h;
		if (isStr(el)) $E = $Ps[el]; // west
		else if (!el.jquery) $E = $(el);
		h = cssH($E, outerHeight);
		$E.css({ height: h, visibility: "visible" }); // may have been 'hidden' by sizeContent
		if (h > 0 && $E.innerWidth() > 0) {
			if (autoHide && $E.data('autoHidden')) {
				$E.show().data('autoHidden', false);
				if (!browser.mozilla) // FireFox refreshes iframes - IE does not
					$E.css(_c.hidden).css(_c.visible);
			}
		}
		else if (autoHide && !$E.data('autoHidden'))
			$E.hide().data('autoHidden', true);
	}


	/**
	* Converts any 'size' params to a pixel/integer size, if not already
	* If 'auto' or a decimal/percentage is passed as 'size', a pixel-size is calculated
	*
	/**
	* @param  {string}				pane
	* @param  {(string|number)=}	size
	* @param  {string=}				[dir]
	* @return {number}
	*/
,	_parseSize = function (pane, size, dir) {
		if (!dir) dir = _c[pane].dir;

		if (isStr(size) && size.match(/%/))
			size = (size === '100%') ? -1 : parseInt(size, 10) / 100; // convert % to decimal

		if (size === 0)
			return 0;
		else if (size >= 1)
			return parseInt(size, 10);

		var o = options, avail = 0;
		if (dir=="horz") // north or south or center.minHeight
			avail = sC.innerHeight - ($Ps.north ? o.north.spacing_open : 0) - ($Ps.south ? o.south.spacing_open : 0);
		else if (dir=="vert") // east or west or center.minWidth
			avail = sC.innerWidth - ($Ps.west ? o.west.spacing_open : 0) - ($Ps.east ? o.east.spacing_open : 0);

		if (size === -1) // -1 == 100%
			return avail;
		else if (size > 0) // percentage, eg: .25
			return round(avail * size);
		else if (pane=="center")
			return 0;
		else { // size < 0 || size=='auto' || size==Missing || size==Invalid
			// auto-size the pane
			var	dim	= (dir === "horz" ? "height" : "width")
			,	$P	= $Ps[pane]
			,	$C	= dim === 'height' ? $Cs[pane] : false
			,	vis	= $.layout.showInvisibly($P) // show pane invisibly if hidden
			,	szP	= $P.css(dim) // SAVE current pane size
			,	szC	= $C ? $C.css(dim) : 0 // SAVE current content size
			;
			$P.css(dim, "auto");
			if ($C) $C.css(dim, "auto");
			size = (dim === "height") ? $P.outerHeight() : $P.outerWidth(); // MEASURE
			$P.css(dim, szP).css(vis); // RESET size & visibility
			if ($C) $C.css(dim, szC);
			return size;
		}
	}

	/**
	* Calculates current 'size' (outer-width or outer-height) of a border-pane - optionally with 'pane-spacing' added
	*
	* @param  {(string|!Object)}	pane
	* @param  {boolean=}			[inclSpace=false]
	* @return {number}				Returns EITHER Width for east/west panes OR Height for north/south panes
	*/
,	getPaneSize = function (pane, inclSpace) {
		var 
			$P	= $Ps[pane]
		,	o	= options[pane]
		,	s	= state[pane]
		,	oSp	= (inclSpace ? o.spacing_open : 0)
		,	cSp	= (inclSpace ? o.spacing_closed : 0)
		;
		if (!$P || s.isHidden)
			return 0;
		else if (s.isClosed || (s.isSliding && inclSpace))
			return cSp;
		else if (_c[pane].dir === "horz")
			return $P.outerHeight() + oSp;
		else // dir === "vert"
			return $P.outerWidth() + oSp;
	}

	/**
	* Calculate min/max pane dimensions and limits for resizing
	*
	* @param  {string}		pane
	* @param  {boolean=}	[slide=false]
	*/
,	setSizeLimits = function (pane, slide) {
		if (!isInitialized()) return;
		var 
			o				= options[pane]
		,	s				= state[pane]
		,	c				= _c[pane]
		,	dir				= c.dir
		,	type			= c.sizeType.toLowerCase()
		,	isSliding		= (slide != undefined ? slide : s.isSliding) // only open() passes 'slide' param
		,	$P				= $Ps[pane]
		,	paneSpacing		= o.spacing_open
		//	measure the pane on the *opposite side* from this pane
		,	altPane			= _c.oppositeEdge[pane]
		,	altS			= state[altPane]
		,	$altP			= $Ps[altPane]
		,	altPaneSize		= (!$altP || altS.isVisible===false || altS.isSliding ? 0 : (dir=="horz" ? $altP.outerHeight() : $altP.outerWidth()))
		,	altPaneSpacing	= ((!$altP || altS.isHidden ? 0 : options[altPane][ altS.isClosed !== false ? "spacing_closed" : "spacing_open" ]) || 0)
		//	limitSize prevents this pane from 'overlapping' opposite pane
		,	containerSize	= (dir=="horz" ? sC.innerHeight : sC.innerWidth)
		,	minCenterDims	= cssMinDims("center")
		,	minCenterSize	= dir=="horz" ? max(options.center.minHeight, minCenterDims.minHeight) : max(options.center.minWidth, minCenterDims.minWidth)
		//	if pane is 'sliding', then ignore center and alt-pane sizes - because 'overlays' them
		,	limitSize		= (containerSize - paneSpacing - (isSliding ? 0 : (_parseSize("center", minCenterSize, dir) + altPaneSize + altPaneSpacing)))
		,	minSize			= s.minSize = max( _parseSize(pane, o.minSize), cssMinDims(pane).minSize )
		,	maxSize			= s.maxSize = min( (o.maxSize ? _parseSize(pane, o.maxSize) : 100000), limitSize )
		,	r				= s.resizerPosition = {} // used to set resizing limits
		,	top				= sC.inset.top
		,	left			= sC.inset.left
		,	W				= sC.innerWidth
		,	H				= sC.innerHeight
		,	rW				= o.spacing_open // subtract resizer-width to get top/left position for south/east
		;
		switch (pane) {
			case "north":	r.min = top + minSize;
							r.max = top + maxSize;
							break;
			case "west":	r.min = left + minSize;
							r.max = left + maxSize;
							break;
			case "south":	r.min = top + H - maxSize - rW;
							r.max = top + H - minSize - rW;
							break;
			case "east":	r.min = left + W - maxSize - rW;
							r.max = left + W - minSize - rW;
							break;
		};
	}

	/**
	* Returns data for setting the size/position of center pane. Also used to set Height for east/west panes
	*
	* @return JSON  Returns a hash of all dimensions: top, bottom, left, right, (outer) width and (outer) height
	*/
,	calcNewCenterPaneDims = function () {
		var d = {
			top:	getPaneSize("north", true) // true = include 'spacing' value for pane
		,	bottom:	getPaneSize("south", true)
		,	left:	getPaneSize("west", true)
		,	right:	getPaneSize("east", true)
		,	width:	0
		,	height:	0
		};

		// NOTE: sC = state.container
		// calc center-pane outer dimensions
		d.width		= sC.innerWidth - d.left - d.right;  // outerWidth
		d.height	= sC.innerHeight - d.bottom - d.top; // outerHeight
		// add the 'container border/padding' to get final positions relative to the container
		d.top		+= sC.inset.top;
		d.bottom	+= sC.inset.bottom;
		d.left		+= sC.inset.left;
		d.right		+= sC.inset.right;

		return d;
	}


	/**
	* @param {!Object}		el
	* @param {boolean=}		[allStates=false]
	*/
,	getHoverClasses = function (el, allStates) {
		var
			$El		= $(el)
		,	type	= $El.data("layoutRole")
		,	pane	= $El.data("layoutEdge")
		,	o		= options[pane]
		,	root	= o[type +"Class"]
		,	_pane	= "-"+ pane // eg: "-west"
		,	_open	= "-open"
		,	_closed	= "-closed"
		,	_slide	= "-sliding"
		,	_hover	= "-hover " // NOTE the trailing space
		,	_state	= $El.hasClass(root+_closed) ? _closed : _open
		,	_alt	= _state === _closed ? _open : _closed
		,	classes = (root+_hover) + (root+_pane+_hover) + (root+_state+_hover) + (root+_pane+_state+_hover)
		;
		if (allStates) // when 'removing' classes, also remove alternate-state classes
			classes += (root+_alt+_hover) + (root+_pane+_alt+_hover);

		if (type=="resizer" && $El.hasClass(root+_slide))
			classes += (root+_slide+_hover) + (root+_pane+_slide+_hover);

		return $.trim(classes);
	}
,	addHover	= function (evt, el) {
		var $E = $(el || this);
		if (evt && $E.data("layoutRole") === "toggler")
			evt.stopPropagation(); // prevent triggering 'slide' on Resizer-bar
		$E.addClass( getHoverClasses($E) );
	}
,	removeHover	= function (evt, el) {
		var $E = $(el || this);
		$E.removeClass( getHoverClasses($E, true) );
	}

,	onResizerEnter	= function (evt) { // ALSO called by toggler.mouseenter
		var pane	= $(this).data("layoutEdge")
		,	s		= state[pane]
		;
		// ignore closed-panes and mouse moving back & forth over resizer!
		// also ignore if ANY pane is currently resizing
		if ( s.isClosed || s.isResizing || state.paneResizing ) return;

		if ($.fn.disableSelection)
			$("body").disableSelection();
		if (options.maskPanesEarly)
			showMasks( pane, { resizing: true });
	}
,	onResizerLeave	= function (evt, el) {
		var	e		= el || this // el is only passed when called by the timer
		,	pane	= $(e).data("layoutEdge")
		,	name	= pane +"ResizerLeave"
		;
		timer.clear(pane+"_openSlider"); // cancel slideOpen timer, if set
		timer.clear(name); // cancel enableSelection timer - may re/set below
		// this method calls itself on a timer because it needs to allow
		// enough time for dragging to kick-in and set the isResizing flag
		// dragging has a 100ms delay set, so this delay must be >100
		if (!el) // 1st call - mouseleave event
			timer.set(name, function(){ onResizerLeave(evt, e); }, 200);
		// if user is resizing, then dragStop will enableSelection(), so can skip it here
		else if ( !state.paneResizing ) { // 2nd call - by timer
			if ($.fn.enableSelection)
				$("body").enableSelection();
			if (options.maskPanesEarly)
				hideMasks();
		}
	}

/*
 * ###########################
 *   INITIALIZATION METHODS
 * ###########################
 */

	/**
	* Initialize the layout - called automatically whenever an instance of layout is created
	*
	* @see  none - triggered onInit
	* @return  mixed	true = fully initialized | false = panes not initialized (yet) | 'cancel' = abort
	*/
,	_create = function () {
		// initialize config/options
		initOptions();
		var o = options
		,	s = state;

		// TEMP state so isInitialized returns true during init process
		s.creatingLayout = true;

		// init plugins for this layout, if there are any (eg: stateManagement)
		runPluginCallbacks( Instance, $.layout.onCreate );

		// options & state have been initialized, so now run beforeLoad callback
		// onload will CANCEL layout creation if it returns false
		if (false === _runCallbacks("onload_start"))
			return 'cancel';

		// initialize the container element
		_initContainer();

		// bind hotkey function - keyDown - if required
		initHotkeys();

		// bind window.onunload
		$(window).bind("unload."+ sID, unload);

		// init plugins for this layout, if there are any (eg: customButtons)
		runPluginCallbacks( Instance, $.layout.onLoad );

		// if layout elements are hidden, then layout WILL NOT complete initialization!
		// initLayoutElements will set initialized=true and run the onload callback IF successful
		if (o.initPanes) _initLayoutElements();

		delete s.creatingLayout;

		return state.initialized;
	}

	/**
	* Initialize the layout IF not already
	*
	* @see  All methods in Instance run this test
	* @return  boolean	true = layoutElements have been initialized | false = panes are not initialized (yet)
	*/
,	isInitialized = function () {
		if (state.initialized || state.creatingLayout) return true;	// already initialized
		else return _initLayoutElements();	// try to init panes NOW
	}

	/**
	* Initialize the layout - called automatically whenever an instance of layout is created
	*
	* @see  _create() & isInitialized
	* @param {boolean=}		[retry=false]	// indicates this is a 2nd try
	* @return  An object pointer to the instance created
	*/
,	_initLayoutElements = function (retry) {
		// initialize config/options
		var o = options;
		// CANNOT init panes inside a hidden container!
		if (!$N.is(":visible")) {
			// handle Chrome bug where popup window 'has no height'
			// if layout is BODY element, try again in 50ms
			// SEE: http://layout.jquery-dev.net/samples/test_popup_window.html
			if ( !retry && browser.webkit && $N[0].tagName === "BODY" )
				setTimeout(function(){ _initLayoutElements(true); }, 50);
			return false;
		}

		// a center pane is required, so make sure it exists
		if (!getPane("center").length) {
			return _log( o.errors.centerPaneMissing );
		}

		// TEMP state so isInitialized returns true during init process
		state.creatingLayout = true;

		// update Container dims
		$.extend(sC, elDims( $N, o.inset )); // passing inset means DO NOT include insetX values

		// initialize all layout elements
		initPanes();	// size & position panes - calls initHandles() - which calls initResizable()

		if (o.scrollToBookmarkOnLoad) {
			var l = self.location;
			if (l.hash) l.replace( l.hash ); // scrollTo Bookmark
		}

		// check to see if this layout 'nested' inside a pane
		if (Instance.hasParentLayout)
			o.resizeWithWindow = false;
		// bind resizeAll() for 'this layout instance' to window.resize event
		else if (o.resizeWithWindow)
			$(window).bind("resize."+ sID, windowResize);

		delete state.creatingLayout;
		state.initialized = true;

		// init plugins for this layout, if there are any
		runPluginCallbacks( Instance, $.layout.onReady );

		// now run the onload callback, if exists
		_runCallbacks("onload_end");

		return true; // elements initialized successfully
	}

	/**
	* Initialize nested layouts for a specific pane - can optionally pass layout-options
	*
	* @param {(string|Object)}	evt_or_pane	The pane being opened, ie: north, south, east, or west
	* @param {Object=}			[opts]		Layout-options - if passed, will OVERRRIDE options[pane].children
	* @return  An object pointer to the layout instance created - or null
	*/
,	createChildren = function (evt_or_pane, opts) {
		var	pane = evtPane.call(this, evt_or_pane)
		,	$P	= $Ps[pane]
		;
		if (!$P) return;
		var	$C	= $Cs[pane]
		,	s	= state[pane]
		,	o	= options[pane]
		,	sm	= options.stateManagement || {}
		,	cos = opts ? (o.children = opts) : o.children
		;
		if ( $.isPlainObject( cos ) )
			cos = [ cos ]; // convert a hash to a 1-elem array
		else if (!cos || !$.isArray( cos ))
			return;

		$.each( cos, function (idx, co) {
			if ( !$.isPlainObject( co ) ) return;

			// determine which element is supposed to be the 'child container'
			// if pane has a 'containerSelector' OR a 'content-div', use those instead of the pane
			var $containers = co.containerSelector ? $P.find( co.containerSelector ) : ($C || $P);

			$containers.each(function(){
				var $cont	= $(this)
				,	child	= $cont.data("layout") //	see if a child-layout ALREADY exists on this element
				;
				// if no layout exists, but children are set, try to create the layout now
				if (!child) {
					// TODO: see about moving this to the stateManagement plugin, as a method
					// set a unique child-instance key for this layout, if not already set
					setInstanceKey({ container: $cont, options: co }, s );
					// If THIS layout has a hash in stateManagement.autoLoad,
					// then see if it also contains state-data for this child-layout
					// If so, copy the stateData to child.options.stateManagement.autoLoad
					if ( sm.includeChildren && state.stateData[pane] ) {
						//	THIS layout's state was cached when its state was loaded
						var	paneChildren = state.stateData[pane].children || {}
						,	childState	= paneChildren[ co.instanceKey ]
						,	co_sm		= co.stateManagement || (co.stateManagement = { autoLoad: true })
						;
						// COPY the stateData into the autoLoad key
						if ( co_sm.autoLoad === true && childState ) {
							co_sm.autoSave			= false; // disable autoSave because saving handled by parent-layout
							co_sm.includeChildren	= true;  // cascade option - FOR NOW
							co_sm.autoLoad = $.extend(true, {}, childState); // COPY the state-hash
						}
					}

					// create the layout
					child = $cont.layout( co );

					// if successful, update data
					if (child) {
						// add the child and update all layout-pointers
						// MAY have already been done by child-layout calling parent.refreshChildren()
						refreshChildren( pane, child );
					}
				}
			});
		});
	}

,	setInstanceKey = function (child, parentPaneState) {
		// create a named key for use in state and instance branches
		var	$c	= child.container
		,	o	= child.options
		,	sm	= o.stateManagement
		,	key	= o.instanceKey || $c.data("layoutInstanceKey")
		;
		if (!key) key = (sm && sm.cookie ? sm.cookie.name : '') || o.name; // look for a name/key
		if (!key) key = "layout"+ (++parentPaneState.childIdx);	// if no name/key found, generate one
		else key = key.replace(/[^\w-]/gi, '_').replace(/_{2,}/g, '_');	 // ensure is valid as a hash key
		o.instanceKey = key;
		$c.data("layoutInstanceKey", key); // useful if layout is destroyed and then recreated
		return key;
	}

	/**
	* @param {string}		pane		The pane being opened, ie: north, south, east, or west
	* @param {Object=}		newChild	New child-layout Instance to add to this pane
	*/
,	refreshChildren = function (pane, newChild) {
		var	$P	= $Ps[pane]
		,	pC	= children[pane]
		,	s	= state[pane]
		,	o
		;
		// check for destroy()ed layouts and update the child pointers & arrays
		if ($.isPlainObject( pC )) {
			$.each( pC, function (key, child) {
				if (child.destroyed) delete pC[key]
			});
			// if no more children, remove the children hash
			if ($.isEmptyObject( pC ))
				pC = children[pane] = null; // clear children hash
		}

		// see if there is a directly-nested layout inside this pane
		// if there is, then there can be only ONE child-layout, so check that...
		if (!newChild && !pC) {
			newChild = $P.data("layout");
		}

		// if a newChild instance was passed, add it to children[pane]
		if (newChild) {
			// update child.state
			newChild.hasParentLayout = true; // set parent-flag in child
			// instanceKey is a key-name used in both state and children
			o = newChild.options;
			// set a unique child-instance key for this layout, if not already set
			setInstanceKey( newChild, s );
			// add pointer to pane.children hash
			if (!pC) pC = children[pane] = {}; // create an empty children hash
			pC[ o.instanceKey ] = newChild.container.data("layout"); // add childLayout instance
		}

		// ALWAYS refresh the pane.children alias, even if null
		Instance[pane].children = children[pane];

		// if newChild was NOT passed - see if there is a child layout NOW
		if (!newChild) {
			createChildren(pane); // MAY create a child and re-call this method
		}
	}

,	windowResize = function () {
		var	o = options
		,	delay = Number(o.resizeWithWindowDelay);
		if (delay < 10) delay = 100; // MUST have a delay!
		// resizing uses a delay-loop because the resize event fires repeatly - except in FF, but delay anyway
		timer.clear("winResize"); // if already running
		timer.set("winResize", function(){
			timer.clear("winResize");
			timer.clear("winResizeRepeater");
			var dims = elDims( $N, o.inset );
			// only trigger resizeAll() if container has changed size
			if (dims.innerWidth !== sC.innerWidth || dims.innerHeight !== sC.innerHeight)
				resizeAll();
		}, delay);
		// ALSO set fixed-delay timer, if not already running
		if (!timer.data["winResizeRepeater"]) setWindowResizeRepeater();
	}

,	setWindowResizeRepeater = function () {
		var delay = Number(options.resizeWithWindowMaxDelay);
		if (delay > 0)
			timer.set("winResizeRepeater", function(){ setWindowResizeRepeater(); resizeAll(); }, delay);
	}

,	unload = function () {
		var o = options;

		_runCallbacks("onunload_start");

		// trigger plugin callabacks for this layout (eg: stateManagement)
		runPluginCallbacks( Instance, $.layout.onUnload );

		_runCallbacks("onunload_end");
	}

	/**
	* Validate and initialize container CSS and events
	*
	* @see  _create()
	*/
,	_initContainer = function () {
		var
			N		= $N[0]	
		,	$H		= $("html")
		,	tag		= sC.tagName = N.tagName
		,	id		= sC.id = N.id
		,	cls		= sC.className = N.className
		,	o		= options
		,	name	= o.name
		,	props	= "position,margin,padding,border"
		,	css		= "layoutCSS"
		,	CSS		= {}
		,	hid		= "hidden" // used A LOT!
		//	see if this container is a 'pane' inside an outer-layout
		,	parent	= $N.data("parentLayout")	// parent-layout Instance
		,	pane	= $N.data("layoutEdge")		// pane-name in parent-layout
		,	isChild	= parent && pane
		,	num		= $.layout.cssNum
		,	$parent, n
		;
		// sC = state.container
		sC.selector = $N.selector.split(".slice")[0];
		sC.ref		= (o.name ? o.name +' layout / ' : '') + tag + (id ? "#"+id : cls ? '.['+cls+']' : ''); // used in messages
		sC.isBody	= (tag === "BODY");

		// try to find a parent-layout
		if (!isChild && !sC.isBody) {
			$parent = $N.closest("."+ $.layout.defaults.panes.paneClass);
			parent	= $parent.data("parentLayout");
			pane	= $parent.data("layoutEdge");
			isChild	= parent && pane;
		}

		$N	.data({
				layout: Instance
			,	layoutContainer: sID // FLAG to indicate this is a layout-container - contains unique internal ID
			})
			.addClass(o.containerClass)
		;
		var layoutMethods = {
			destroy:	''
		,	initPanes:	''
		,	resizeAll:	'resizeAll'
		,	resize:		'resizeAll'
		};
		// loop hash and bind all methods - include layoutID namespacing
		for (name in layoutMethods) {
			$N.bind("layout"+ name.toLowerCase() +"."+ sID, Instance[ layoutMethods[name] || name ]);
		}

		// if this container is another layout's 'pane', then set child/parent pointers
		if (isChild) {
			// update parent flag
			Instance.hasParentLayout = true;
			// set pointers to THIS child-layout (Instance) in parent-layout
			parent.refreshChildren( pane, Instance );
		}

		// SAVE original container CSS for use in destroy()
		if (!$N.data(css)) {
			// handle props like overflow different for BODY & HTML - has 'system default' values
			if (sC.isBody) {
				// SAVE <BODY> CSS
				$N.data(css, $.extend( styles($N, props), {
					height:		$N.css("height")
				,	overflow:	$N.css("overflow")
				,	overflowX:	$N.css("overflowX")
				,	overflowY:	$N.css("overflowY")
				}));
				// ALSO SAVE <HTML> CSS
				$H.data(css, $.extend( styles($H, 'padding'), {
					height:		"auto" // FF would return a fixed px-size!
				,	overflow:	$H.css("overflow")
				,	overflowX:	$H.css("overflowX")
				,	overflowY:	$H.css("overflowY")
				}));
			}
			else // handle props normally for non-body elements
				$N.data(css, styles($N, props+",top,bottom,left,right,width,height,overflow,overflowX,overflowY") );
		}

		try {
			// common container CSS
			CSS = {
				overflow:	hid
			,	overflowX:	hid
			,	overflowY:	hid
			};
			$N.css( CSS );

			if (o.inset && !$.isPlainObject(o.inset)) {
				// can specify a single number for equal outset all-around
				n = parseInt(o.inset, 10) || 0
				o.inset = {
					top:	n
				,	bottom:	n
				,	left:	n
				,	right:	n
				};
			}

			// format html & body if this is a full page layout
			if (sC.isBody) {
				// if HTML has padding, use this as an outer-spacing around BODY
				if (!o.outset) {
					// use padding from parent-elem (HTML) as outset
					o.outset = {
						top:	num($H, "paddingTop")
					,	bottom:	num($H, "paddingBottom")
					,	left:	num($H, "paddingLeft")
					,	right:	num($H, "paddingRight")
					};
				}
				else if (!$.isPlainObject(o.outset)) {
					// can specify a single number for equal outset all-around
					n = parseInt(o.outset, 10) || 0
					o.outset = {
						top:	n
					,	bottom:	n
					,	left:	n
					,	right:	n
					};
				}
				// HTML
				$H.css( CSS ).css({
					height:		"100%"
				,	border:		"none"	// no border or padding allowed when using height = 100%
				,	padding:	0		// ditto
				,	margin:		0
				});
				// BODY
				if (browser.isIE6) {
					// IE6 CANNOT use the trick of setting absolute positioning on all 4 sides - must have 'height'
					$N.css({
						width:		"100%"
					,	height:		"100%"
					,	border:		"none"	// no border or padding allowed when using height = 100%
					,	padding:	0		// ditto
					,	margin:		0
					,	position:	"relative"
					});
					// convert body padding to an inset option - the border cannot be measured in IE6!
					if (!o.inset) o.inset = elDims( $N ).inset;
				}
				else { // use absolute positioning for BODY to allow borders & padding without overflow
					$N.css({
						width:		"auto"
					,	height:		"auto"
					,	margin:		0
					,	position:	"absolute"	// allows for border and padding on BODY
					});
					// apply edge-positioning created above
					$N.css( o.outset );
				}
				// set current layout-container dimensions
				$.extend(sC, elDims( $N, o.inset )); // passing inset means DO NOT include insetX values
			}
			else {
				// container MUST have 'position'
				var	p = $N.css("position");
				if (!p || !p.match(/(fixed|absolute|relative)/))
					$N.css("position","relative");

				// set current layout-container dimensions
				if ( $N.is(":visible") ) {
					$.extend(sC, elDims( $N, o.inset )); // passing inset means DO NOT change insetX (padding) values
					if (sC.innerHeight < 1) // container has no 'height' - warn developer
						_log( o.errors.noContainerHeight.replace(/CONTAINER/, sC.ref) );
				}
			}

			// if container has min-width/height, then enable scrollbar(s)
			if ( num($N, "minWidth")  ) $N.parent().css("overflowX","auto");
			if ( num($N, "minHeight") ) $N.parent().css("overflowY","auto");

		} catch (ex) {}
	}

	/**
	* Bind layout hotkeys - if options enabled
	*
	* @see  _create() and addPane()
	* @param {string=}	[panes=""]	The edge(s) to process
	*/
,	initHotkeys = function (panes) {
		panes = panes ? panes.split(",") : _c.borderPanes;
		// bind keyDown to capture hotkeys, if option enabled for ANY pane
		$.each(panes, function (i, pane) {
			var o = options[pane];
			if (o.enableCursorHotkey || o.customHotkey) {
				$(document).bind("keydown."+ sID, keyDown); // only need to bind this ONCE
				return false; // BREAK - binding was done
			}
		});
	}

	/**
	* Build final OPTIONS data
	*
	* @see  _create()
	*/
,	initOptions = function () {
		var data, d, pane, key, val, i, c, o;

		// reprocess user's layout-options to have correct options sub-key structure
		opts = $.layout.transformData( opts, true ); // panes = default subkey

		// auto-rename old options for backward compatibility
		opts = $.layout.backwardCompatibility.renameAllOptions( opts );

		// if user-options has 'panes' key (pane-defaults), clean it...
		if (!$.isEmptyObject(opts.panes)) {
			// REMOVE any pane-defaults that MUST be set per-pane
			data = $.layout.optionsMap.noDefault;
			for (i=0, c=data.length; i<c; i++) {
				key = data[i];
				delete opts.panes[key]; // OK if does not exist
			}
			// REMOVE any layout-options specified under opts.panes
			data = $.layout.optionsMap.layout;
			for (i=0, c=data.length; i<c; i++) {
				key = data[i];
				delete opts.panes[key]; // OK if does not exist
			}
		}

		// MOVE any NON-layout-options from opts-root to opts.panes
		data = $.layout.optionsMap.layout;
		var rootKeys = $.layout.config.optionRootKeys;
		for (key in opts) {
			val = opts[key];
			if ($.inArray(key, rootKeys) < 0 && $.inArray(key, data) < 0) {
				if (!opts.panes[key])
					opts.panes[key] = $.isPlainObject(val) ? $.extend(true, {}, val) : val;
				delete opts[key]
			}
		}

		// START by updating ALL options from opts
		$.extend(true, options, opts);

		// CREATE final options (and config) for EACH pane
		$.each(_c.allPanes, function (i, pane) {

			// apply 'pane-defaults' to CONFIG.[PANE]
			_c[pane] = $.extend(true, {}, _c.panes, _c[pane]);

			d = options.panes;
			o = options[pane];

			// center-pane uses SOME keys in defaults.panes branch
			if (pane === 'center') {
				// ONLY copy keys from opts.panes listed in: $.layout.optionsMap.center
				data = $.layout.optionsMap.center;		// list of 'center-pane keys'
				for (i=0, c=data.length; i<c; i++) {	// loop the list...
					key = data[i];
					// only need to use pane-default if pane-specific value not set
					if (!opts.center[key] && (opts.panes[key] || !o[key]))
						o[key] = d[key]; // pane-default
				}
			}
			else {
				// border-panes use ALL keys in defaults.panes branch
				o = options[pane] = $.extend(true, {}, d, o); // re-apply pane-specific opts AFTER pane-defaults
				createFxOptions( pane );
				// ensure all border-pane-specific base-classes exist
				if (!o.resizerClass)	o.resizerClass	= "ui-layout-resizer";
				if (!o.togglerClass)	o.togglerClass	= "ui-layout-toggler";
			}
			// ensure we have base pane-class (ALL panes)
			if (!o.paneClass) o.paneClass = "ui-layout-pane";
		});

		// update options.zIndexes if a zIndex-option specified
		var zo	= opts.zIndex
		,	z	= options.zIndexes;
		if (zo > 0) {
			z.pane_normal		= zo;
			z.content_mask		= max(zo+1, z.content_mask);	// MIN = +1
			z.resizer_normal	= max(zo+2, z.resizer_normal);	// MIN = +2
		}

		// DELETE 'panes' key now that we are done - values were copied to EACH pane
		delete options.panes;


		function createFxOptions ( pane ) {
			var	o = options[pane]
			,	d = options.panes;
			// ensure fxSettings key to avoid errors
			if (!o.fxSettings) o.fxSettings = {};
			if (!d.fxSettings) d.fxSettings = {};

			$.each(["_open","_close","_size"], function (i,n) { 
				var
					sName		= "fxName"+ n
				,	sSpeed		= "fxSpeed"+ n
				,	sSettings	= "fxSettings"+ n
					// recalculate fxName according to specificity rules
				,	fxName = o[sName] =
						o[sName]	// options.west.fxName_open
					||	d[sName]	// options.panes.fxName_open
					||	o.fxName	// options.west.fxName
					||	d.fxName	// options.panes.fxName
					||	"none"		// MEANS $.layout.defaults.panes.fxName == "" || false || null || 0
				,	fxExists	= $.effects && ($.effects[fxName] || ($.effects.effect && $.effects.effect[fxName]))
				;
				// validate fxName to ensure is valid effect - MUST have effect-config data in options.effects
				if (fxName === "none" || !options.effects[fxName] || !fxExists)
					fxName = o[sName] = "none"; // effect not loaded OR unrecognized fxName

				// set vars for effects subkeys to simplify logic
				var	fx		= options.effects[fxName] || {}	// effects.slide
				,	fx_all	= fx.all	|| null				// effects.slide.all
				,	fx_pane	= fx[pane]	|| null				// effects.slide.west
				;
				// create fxSpeed[_open|_close|_size]
				o[sSpeed] =
					o[sSpeed]				// options.west.fxSpeed_open
				||	d[sSpeed]				// options.west.fxSpeed_open
				||	o.fxSpeed				// options.west.fxSpeed
				||	d.fxSpeed				// options.panes.fxSpeed
				||	null					// DEFAULT - let fxSetting.duration control speed
				;
				// create fxSettings[_open|_close|_size]
				o[sSettings] = $.extend(
					true
				,	{}
				,	fx_all					// effects.slide.all
				,	fx_pane					// effects.slide.west
				,	d.fxSettings			// options.panes.fxSettings
				,	o.fxSettings			// options.west.fxSettings
				,	d[sSettings]			// options.panes.fxSettings_open
				,	o[sSettings]			// options.west.fxSettings_open
				);
			});

			// DONE creating action-specific-settings for this pane,
			// so DELETE generic options - are no longer meaningful
			delete o.fxName;
			delete o.fxSpeed;
			delete o.fxSettings;
		}
	}

	/**
	* Initialize module objects, styling, size and position for all panes
	*
	* @see  _initElements()
	* @param {string}	pane		The pane to process
	*/
,	getPane = function (pane) {
		var sel = options[pane].paneSelector
		if (sel.substr(0,1)==="#") // ID selector
			// NOTE: elements selected 'by ID' DO NOT have to be 'children'
			return $N.find(sel).eq(0);
		else { // class or other selector
			var $P = $N.children(sel).eq(0);
			// look for the pane nested inside a 'form' element
			return $P.length ? $P : $N.children("form:first").children(sel).eq(0);
		}
	}

	/**
	* @param {Object=}		evt
	*/
,	initPanes = function (evt) {
		// stopPropagation if called by trigger("layoutinitpanes") - use evtPane utility 
		evtPane(evt);

		// NOTE: do north & south FIRST so we can measure their height - do center LAST
		$.each(_c.allPanes, function (idx, pane) {
			addPane( pane, true );
		});

		// init the pane-handles NOW in case we have to hide or close the pane below
		initHandles();

		// now that all panes have been initialized and initially-sized,
		// make sure there is really enough space available for each pane
		$.each(_c.borderPanes, function (i, pane) {
			if ($Ps[pane] && state[pane].isVisible) { // pane is OPEN
				setSizeLimits(pane);
				makePaneFit(pane); // pane may be Closed, Hidden or Resized by makePaneFit()
			}
		});
		// size center-pane AGAIN in case we 'closed' a border-pane in loop above
		sizeMidPanes("center");

		//	Chrome/Webkit sometimes fires callbacks BEFORE it completes resizing!
		//	Before RC30.3, there was a 10ms delay here, but that caused layout 
		//	to load asynchrously, which is BAD, so try skipping delay for now

		// process pane contents and callbacks, and init/resize child-layout if exists
		$.each(_c.allPanes, function (idx, pane) {
			afterInitPane(pane);
		});
	}

	/**
	* Add a pane to the layout - subroutine of initPanes()
	*
	* @see  initPanes()
	* @param {string}	pane			The pane to process
	* @param {boolean=}	[force=false]	Size content after init
	*/
,	addPane = function (pane, force) {
		if (!force && !isInitialized()) return;
		var
			o		= options[pane]
		,	s		= state[pane]
		,	c		= _c[pane]
		,	dir		= c.dir
		,	fx		= s.fx
		,	spacing	= o.spacing_open || 0
		,	isCenter = (pane === "center")
		,	CSS		= {}
		,	$P		= $Ps[pane]
		,	size, minSize, maxSize, child
		;
		// if pane-pointer already exists, remove the old one first
		if ($P)
			removePane( pane, false, true, false );
		else
			$Cs[pane] = false; // init

		$P = $Ps[pane] = getPane(pane);
		if (!$P.length) {
			$Ps[pane] = false; // logic
			return;
		}

		// SAVE original Pane CSS
		if (!$P.data("layoutCSS")) {
			var props = "position,top,left,bottom,right,width,height,overflow,zIndex,display,backgroundColor,padding,margin,border";
			$P.data("layoutCSS", styles($P, props));
		}

		// create alias for pane data in Instance - initHandles will add more
		Instance[pane] = {
			name:		pane
		,	pane:		$Ps[pane]
		,	content:	$Cs[pane]
		,	options:	options[pane]
		,	state:		state[pane]
		,	children:	children[pane]
		};

		// add classes, attributes & events
		$P	.data({
				parentLayout:	Instance		// pointer to Layout Instance
			,	layoutPane:		Instance[pane]	// NEW pointer to pane-alias-object
			,	layoutEdge:		pane
			,	layoutRole:		"pane"
			})
			.css(c.cssReq).css("zIndex", options.zIndexes.pane_normal)
			.css(o.applyDemoStyles ? c.cssDemo : {}) // demo styles
			.addClass( o.paneClass +" "+ o.paneClass+"-"+pane ) // default = "ui-layout-pane ui-layout-pane-west" - may be a dupe of 'paneSelector'
			.bind("mouseenter."+ sID, addHover )
			.bind("mouseleave."+ sID, removeHover )
			;
		var paneMethods = {
				hide:				''
			,	show:				''
			,	toggle:				''
			,	close:				''
			,	open:				''
			,	slideOpen:			''
			,	slideClose:			''
			,	slideToggle:		''
			,	size:				'sizePane'
			,	sizePane:			'sizePane'
			,	sizeContent:		''
			,	sizeHandles:		''
			,	enableClosable:		''
			,	disableClosable:	''
			,	enableSlideable:	''
			,	disableSlideable:	''
			,	enableResizable:	''
			,	disableResizable:	''
			,	swapPanes:			'swapPanes'
			,	swap:				'swapPanes'
			,	move:				'swapPanes'
			,	removePane:			'removePane'
			,	remove:				'removePane'
			,	createChildren:		''
			,	resizeChildren:		''
			,	resizeAll:			'resizeAll'
			,	resizeLayout:		'resizeAll'
			}
		,	name;
		// loop hash and bind all methods - include layoutID namespacing
		for (name in paneMethods) {
			$P.bind("layoutpane"+ name.toLowerCase() +"."+ sID, Instance[ paneMethods[name] || name ]);
		}

		// see if this pane has a 'scrolling-content element'
		initContent(pane, false); // false = do NOT sizeContent() - called later

		if (!isCenter) {
			// call _parseSize AFTER applying pane classes & styles - but before making visible (if hidden)
			// if o.size is auto or not valid, then MEASURE the pane and use that as its 'size'
			size	= s.size = _parseSize(pane, o.size);
			minSize	= _parseSize(pane,o.minSize) || 1;
			maxSize	= _parseSize(pane,o.maxSize) || 100000;
			if (size > 0) size = max(min(size, maxSize), minSize);
			s.autoResize = o.autoResize; // used with percentage sizes

			// state for border-panes
			s.isClosed  = false; // true = pane is closed
			s.isSliding = false; // true = pane is currently open by 'sliding' over adjacent panes
			s.isResizing= false; // true = pane is in process of being resized
			s.isHidden	= false; // true = pane is hidden - no spacing, resizer or toggler is visible!

			// array for 'pin buttons' whose classNames are auto-updated on pane-open/-close
			if (!s.pins) s.pins = [];
		}
		//	states common to ALL panes
		s.tagName	= $P[0].tagName;
		s.edge		= pane;		// useful if pane is (or about to be) 'swapped' - easy find out where it is (or is going)
		s.noRoom	= false;	// true = pane 'automatically' hidden due to insufficient room - will unhide automatically
		s.isVisible	= true;		// false = pane is invisible - closed OR hidden - simplify logic

		// init pane positioning
		setPanePosition( pane );

		// if pane is not visible, 
		if (dir === "horz") // north or south pane
			CSS.height = cssH($P, size);
		else if (dir === "vert") // east or west pane
			CSS.width = cssW($P, size);
		//else if (isCenter) {}

		$P.css(CSS); // apply size -- top, bottom & height will be set by sizeMidPanes
		if (dir != "horz") sizeMidPanes(pane, true); // true = skipCallback

		// if manually adding a pane AFTER layout initialization, then...
		if (state.initialized) {
			initHandles( pane );
			initHotkeys( pane );
		}

		// close or hide the pane if specified in settings
		if (o.initClosed && o.closable && !o.initHidden)
			close(pane, true, true); // true, true = force, noAnimation
		else if (o.initHidden || o.initClosed)
			hide(pane); // will be completely invisible - no resizer or spacing
		else if (!s.noRoom)
			// make the pane visible - in case was initially hidden
			$P.css("display","block");
		// ELSE setAsOpen() - called later by initHandles()

		// RESET visibility now - pane will appear IF display:block
		$P.css("visibility","visible");

		// check option for auto-handling of pop-ups & drop-downs
		if (o.showOverflowOnHover)
			$P.hover( allowOverflow, resetOverflow );

		// if manually adding a pane AFTER layout initialization, then...
		if (state.initialized) {
			afterInitPane( pane );
		}
	}

,	afterInitPane = function (pane) {
		var	$P	= $Ps[pane]
		,	s	= state[pane]
		,	o	= options[pane]
		;
		if (!$P) return;

		// see if there is a directly-nested layout inside this pane
		if ($P.data("layout"))
			refreshChildren( pane, $P.data("layout") );

		// process pane contents and callbacks, and init/resize child-layout if exists
		if (s.isVisible) { // pane is OPEN
			if (state.initialized) // this pane was added AFTER layout was created
				resizeAll(); // will also sizeContent
			else
				sizeContent(pane);

			if (o.triggerEventsOnLoad)
				_runCallbacks("onresize_end", pane);
			else // automatic if onresize called, otherwise call it specifically
				// resize child - IF inner-layout already exists (created before this layout)
				resizeChildren(pane, true); // a previously existing childLayout
		}

		// init childLayouts - even if pane is not visible
		if (o.initChildren && o.children)
			createChildren(pane);
	}

	/**
	* @param {string=}	panes		The pane(s) to process
	*/
,	setPanePosition = function (panes) {
		panes = panes ? panes.split(",") : _c.borderPanes;

		// create toggler DIVs for each pane, and set object pointers for them, eg: $R.north = north toggler DIV
		$.each(panes, function (i, pane) {
			var $P	= $Ps[pane]
			,	$R	= $Rs[pane]
			,	o	= options[pane]
			,	s	= state[pane]
			,	side =  _c[pane].side
			,	CSS	= {}
			;
			if (!$P) return; // pane does not exist - skip

			// set css-position to account for container borders & padding
			switch (pane) {
				case "north": 	CSS.top 	= sC.inset.top;
								CSS.left 	= sC.inset.left;
								CSS.right	= sC.inset.right;
								break;
				case "south": 	CSS.bottom	= sC.inset.bottom;
								CSS.left 	= sC.inset.left;
								CSS.right 	= sC.inset.right;
								break;
				case "west": 	CSS.left 	= sC.inset.left; // top, bottom & height set by sizeMidPanes()
								break;
				case "east": 	CSS.right 	= sC.inset.right; // ditto
								break;
				case "center":	// top, left, width & height set by sizeMidPanes()
			}
			// apply position
			$P.css(CSS); 

			// update resizer position
			if ($R && s.isClosed)
				$R.css(side, sC.inset[side]);
			else if ($R && !s.isHidden)
				$R.css(side, sC.inset[side] + getPaneSize(pane));
		});
	}

	/**
	* Initialize module objects, styling, size and position for all resize bars and toggler buttons
	*
	* @see  _create()
	* @param {string=}	[panes=""]	The edge(s) to process
	*/
,	initHandles = function (panes) {
		panes = panes ? panes.split(",") : _c.borderPanes;

		// create toggler DIVs for each pane, and set object pointers for them, eg: $R.north = north toggler DIV
		$.each(panes, function (i, pane) {
			var $P		= $Ps[pane];
			$Rs[pane]	= false; // INIT
			$Ts[pane]	= false;
			if (!$P) return; // pane does not exist - skip

			var	o		= options[pane]
			,	s		= state[pane]
			,	c		= _c[pane]
			,	paneId	= o.paneSelector.substr(0,1) === "#" ? o.paneSelector.substr(1) : ""
			,	rClass	= o.resizerClass
			,	tClass	= o.togglerClass
			,	spacing	= (s.isVisible ? o.spacing_open : o.spacing_closed)
			,	_pane	= "-"+ pane // used for classNames
			,	_state	= (s.isVisible ? "-open" : "-closed") // used for classNames
			,	I		= Instance[pane]
				// INIT RESIZER BAR
			,	$R		= I.resizer = $Rs[pane] = $("<div></div>")
				// INIT TOGGLER BUTTON
			,	$T		= I.toggler = (o.closable ? $Ts[pane] = $("<div></div>") : false)
			;

			//if (s.isVisible && o.resizable) ... handled by initResizable
			if (!s.isVisible && o.slidable)
				$R.attr("title", o.tips.Slide).css("cursor", o.sliderCursor);

			$R	// if paneSelector is an ID, then create a matching ID for the resizer, eg: "#paneLeft" => "paneLeft-resizer"
				.attr("id", paneId ? paneId +"-resizer" : "" )
				.data({
					parentLayout:	Instance
				,	layoutPane:		Instance[pane]	// NEW pointer to pane-alias-object
				,	layoutEdge:		pane
				,	layoutRole:		"resizer"
				})
				.css(_c.resizers.cssReq).css("zIndex", options.zIndexes.resizer_normal)
				.css(o.applyDemoStyles ? _c.resizers.cssDemo : {}) // add demo styles
				.addClass(rClass +" "+ rClass+_pane)
				.hover(addHover, removeHover) // ALWAYS add hover-classes, even if resizing is not enabled - handle with CSS instead
				.hover(onResizerEnter, onResizerLeave) // ALWAYS NEED resizer.mouseleave to balance toggler.mouseenter
				.appendTo($N) // append DIV to container
			;
			if (o.resizerDblClickToggle)
				$R.bind("dblclick."+ sID, toggle );

			if ($T) {
				$T	// if paneSelector is an ID, then create a matching ID for the resizer, eg: "#paneLeft" => "#paneLeft-toggler"
					.attr("id", paneId ? paneId +"-toggler" : "" )
					.data({
						parentLayout:	Instance
					,	layoutPane:		Instance[pane]	// NEW pointer to pane-alias-object
					,	layoutEdge:		pane
					,	layoutRole:		"toggler"
					})
					.css(_c.togglers.cssReq) // add base/required styles
					.css(o.applyDemoStyles ? _c.togglers.cssDemo : {}) // add demo styles
					.addClass(tClass +" "+ tClass+_pane)
					.hover(addHover, removeHover) // ALWAYS add hover-classes, even if toggling is not enabled - handle with CSS instead
					.bind("mouseenter", onResizerEnter) // NEED toggler.mouseenter because mouseenter MAY NOT fire on resizer
					.appendTo($R) // append SPAN to resizer DIV
				;
				// ADD INNER-SPANS TO TOGGLER
				if (o.togglerContent_open) // ui-layout-open
					$("<span>"+ o.togglerContent_open +"</span>")
						.data({
							layoutEdge:		pane
						,	layoutRole:		"togglerContent"
						})
						.data("layoutRole", "togglerContent")
						.data("layoutEdge", pane)
						.addClass("content content-open")
						.css("display","none")
						.appendTo( $T )
						//.hover( addHover, removeHover ) // use ui-layout-toggler-west-hover .content-open instead!
					;
				if (o.togglerContent_closed) // ui-layout-closed
					$("<span>"+ o.togglerContent_closed +"</span>")
						.data({
							layoutEdge:		pane
						,	layoutRole:		"togglerContent"
						})
						.addClass("content content-closed")
						.css("display","none")
						.appendTo( $T )
						//.hover( addHover, removeHover ) // use ui-layout-toggler-west-hover .content-closed instead!
					;
				// ADD TOGGLER.click/.hover
				enableClosable(pane);
			}

			// add Draggable events
			initResizable(pane);

			// ADD CLASSNAMES & SLIDE-BINDINGS - eg: class="resizer resizer-west resizer-open"
			if (s.isVisible)
				setAsOpen(pane);	// onOpen will be called, but NOT onResize
			else {
				setAsClosed(pane);	// onClose will be called
				bindStartSlidingEvents(pane, true); // will enable events IF option is set
			}

		});

		// SET ALL HANDLE DIMENSIONS
		sizeHandles();
	}


	/**
	* Initialize scrolling ui-layout-content div - if exists
	*
	* @see  initPane() - or externally after an Ajax injection
	* @param {string}	pane			The pane to process
	* @param {boolean=}	[resize=true]	Size content after init
	*/
,	initContent = function (pane, resize) {
		if (!isInitialized()) return;
		var 
			o	= options[pane]
		,	sel	= o.contentSelector
		,	I	= Instance[pane]
		,	$P	= $Ps[pane]
		,	$C
		;
		if (sel) $C = I.content = $Cs[pane] = (o.findNestedContent)
			? $P.find(sel).eq(0) // match 1-element only
			: $P.children(sel).eq(0)
		;
		if ($C && $C.length) {
			$C.data("layoutRole", "content");
			// SAVE original Content CSS
			if (!$C.data("layoutCSS"))
				$C.data("layoutCSS", styles($C, "height"));
			$C.css( _c.content.cssReq );
			if (o.applyDemoStyles) {
				$C.css( _c.content.cssDemo ); // add padding & overflow: auto to content-div
				$P.css( _c.content.cssDemoPane ); // REMOVE padding/scrolling from pane
			}
			// ensure no vertical scrollbar on pane - will mess up measurements
			if ($P.css("overflowX").match(/(scroll|auto)/)) {
				$P.css("overflow", "hidden");
			}
			state[pane].content = {}; // init content state
			if (resize !== false) sizeContent(pane);
			// sizeContent() is called AFTER init of all elements
		}
		else
			I.content = $Cs[pane] = false;
	}


	/**
	* Add resize-bars to all panes that specify it in options
	* -dependancy: $.fn.resizable - will skip if not found
	*
	* @see  _create()
	* @param {string=}	[panes=""]	The edge(s) to process
	*/
,	initResizable = function (panes) {
		var	draggingAvailable = $.layout.plugins.draggable
		,	side // set in start()
		;
		panes = panes ? panes.split(",") : _c.borderPanes;

		$.each(panes, function (idx, pane) {
			var o = options[pane];
			if (!draggingAvailable || !$Ps[pane] || !o.resizable) {
				o.resizable = false;
				return true; // skip to next
			}

			var s		= state[pane]
			,	z		= options.zIndexes
			,	c		= _c[pane]
			,	side	= c.dir=="horz" ? "top" : "left"
			,	$P 		= $Ps[pane]
			,	$R		= $Rs[pane]
			,	base	= o.resizerClass
			,	lastPos	= 0 // used when live-resizing
			,	r, live // set in start because may change
			//	'drag' classes are applied to the ORIGINAL resizer-bar while dragging is in process
			,	resizerClass		= base+"-drag"				// resizer-drag
			,	resizerPaneClass	= base+"-"+pane+"-drag"		// resizer-north-drag
			//	'helper' class is applied to the CLONED resizer-bar while it is being dragged
			,	helperClass			= base+"-dragging"			// resizer-dragging
			,	helperPaneClass		= base+"-"+pane+"-dragging" // resizer-north-dragging
			,	helperLimitClass	= base+"-dragging-limit"	// resizer-drag
			,	helperPaneLimitClass = base+"-"+pane+"-dragging-limit"	// resizer-north-drag
			,	helperClassesSet	= false 					// logic var
			;

			if (!s.isClosed)
				$R.attr("title", o.tips.Resize)
				  .css("cursor", o.resizerCursor); // n-resize, s-resize, etc

			$R.draggable({
				containment:	$N[0] // limit resizing to layout container
			,	axis:			(c.dir=="horz" ? "y" : "x") // limit resizing to horz or vert axis
			,	delay:			0
			,	distance:		1
			,	grid:			o.resizingGrid
			//	basic format for helper - style it using class: .ui-draggable-dragging
			,	helper:			"clone"
			,	opacity:		o.resizerDragOpacity
			,	addClasses:		false // avoid ui-state-disabled class when disabled
			//,	iframeFix:		o.draggableIframeFix // TODO: consider using when bug is fixed
			,	zIndex:			z.resizer_drag

			,	start: function (e, ui) {
					// REFRESH options & state pointers in case we used swapPanes
					o = options[pane];
					s = state[pane];
					// re-read options
					live = o.livePaneResizing;

					// ondrag_start callback - will CANCEL hide if returns false
					// TODO: dragging CANNOT be cancelled like this, so see if there is a way?
					if (false === _runCallbacks("ondrag_start", pane)) return false;

					s.isResizing		= true; // prevent pane from closing while resizing
					state.paneResizing	= pane; // easy to see if ANY pane is resizing
					timer.clear(pane+"_closeSlider"); // just in case already triggered

					// SET RESIZER LIMITS - used in drag()
					setSizeLimits(pane); // update pane/resizer state
					r = s.resizerPosition;
					lastPos = ui.position[ side ]

					$R.addClass( resizerClass +" "+ resizerPaneClass ); // add drag classes
					helperClassesSet = false; // reset logic var - see drag()

					// DISABLE TEXT SELECTION (probably already done by resizer.mouseOver)
					$('body').disableSelection(); 

					// MASK PANES CONTAINING IFRAMES, APPLETS OR OTHER TROUBLESOME ELEMENTS
					showMasks( pane, { resizing: true });
				}

			,	drag: function (e, ui) {
					if (!helperClassesSet) { // can only add classes after clone has been added to the DOM
						//$(".ui-draggable-dragging")
						ui.helper
							.addClass( helperClass +" "+ helperPaneClass ) // add helper classes
							.css({ right: "auto", bottom: "auto" })	// fix dir="rtl" issue
							.children().css("visibility","hidden")	// hide toggler inside dragged resizer-bar
						;
						helperClassesSet = true;
						// draggable bug!? RE-SET zIndex to prevent E/W resize-bar showing through N/S pane!
						if (s.isSliding) $Ps[pane].css("zIndex", z.pane_sliding);
					}
					// CONTAIN RESIZER-BAR TO RESIZING LIMITS
					var limit = 0;
					if (ui.position[side] < r.min) {
						ui.position[side] = r.min;
						limit = -1;
					}
					else if (ui.position[side] > r.max) {
						ui.position[side] = r.max;
						limit = 1;
					}
					// ADD/REMOVE dragging-limit CLASS
					if (limit) {
						ui.helper.addClass( helperLimitClass +" "+ helperPaneLimitClass ); // at dragging-limit
						window.defaultStatus = (limit>0 && pane.match(/(north|west)/)) || (limit<0 && pane.match(/(south|east)/)) ? o.tips.maxSizeWarning : o.tips.minSizeWarning;
					}
					else {
						ui.helper.removeClass( helperLimitClass +" "+ helperPaneLimitClass ); // not at dragging-limit
						window.defaultStatus = "";
					}
					// DYNAMICALLY RESIZE PANES IF OPTION ENABLED
					// won't trigger unless resizer has actually moved!
					if (live && Math.abs(ui.position[side] - lastPos) >= o.liveResizingTolerance) {
						lastPos = ui.position[side];
						resizePanes(e, ui, pane)
					}
				}

			,	stop: function (e, ui) {
					$('body').enableSelection(); // RE-ENABLE TEXT SELECTION
					window.defaultStatus = ""; // clear 'resizing limit' message from statusbar
					$R.removeClass( resizerClass +" "+ resizerPaneClass ); // remove drag classes from Resizer
					s.isResizing		= false;
					state.paneResizing	= false; // easy to see if ANY pane is resizing
					resizePanes(e, ui, pane, true); // true = resizingDone
				}

			});
		});

		/**
		* resizePanes
		*
		* Sub-routine called from stop() - and drag() if livePaneResizing
		*
		* @param {!Object}		evt
		* @param {!Object}		ui
		* @param {string}		pane
		* @param {boolean=}		[resizingDone=false]
		*/
		var resizePanes = function (evt, ui, pane, resizingDone) {
			var	dragPos	= ui.position
			,	c		= _c[pane]
			,	o		= options[pane]
			,	s		= state[pane]
			,	resizerPos
			;
			switch (pane) {
				case "north":	resizerPos = dragPos.top; break;
				case "west":	resizerPos = dragPos.left; break;
				case "south":	resizerPos = sC.layoutHeight - dragPos.top  - o.spacing_open; break;
				case "east":	resizerPos = sC.layoutWidth  - dragPos.left - o.spacing_open; break;
			};
			// remove container margin from resizer position to get the pane size
			var newSize = resizerPos - sC.inset[c.side];

			// Disable OR Resize Mask(s) created in drag.start
			if (!resizingDone) {
				// ensure we meet liveResizingTolerance criteria
				if (Math.abs(newSize - s.size) < o.liveResizingTolerance)
					return; // SKIP resize this time
				// resize the pane
				manualSizePane(pane, newSize, false, true); // true = noAnimation
				sizeMasks(); // resize all visible masks
			}
			else { // resizingDone
				// ondrag_end callback
				if (false !== _runCallbacks("ondrag_end", pane))
					manualSizePane(pane, newSize, false, true); // true = noAnimation
				hideMasks(true); // true = force hiding all masks even if one is 'sliding'
				if (s.isSliding) // RE-SHOW 'object-masks' so objects won't show through sliding pane
					showMasks( pane, { resizing: true });
			}
		};
	}

	/**
	*	sizeMask
	*
	*	Needed to overlay a DIV over an IFRAME-pane because mask CANNOT be *inside* the pane
	*	Called when mask created, and during livePaneResizing
	*/
,	sizeMask = function () {
		var $M		= $(this)
		,	pane	= $M.data("layoutMask") // eg: "west"
		,	s		= state[pane]
		;
		// only masks over an IFRAME-pane need manual resizing
		if (s.tagName == "IFRAME" && s.isVisible) // no need to mask closed/hidden panes
			$M.css({
				top:	s.offsetTop
			,	left:	s.offsetLeft
			,	width:	s.outerWidth
			,	height:	s.outerHeight
			});
		/* ALT Method...
		var $P = $Ps[pane];
		$M.css( $P.position() ).css({ width: $P[0].offsetWidth, height: $P[0].offsetHeight });
		*/
	}
,	sizeMasks = function () {
		$Ms.each( sizeMask ); // resize all 'visible' masks
	}

	/**
	* @param {string}	pane		The pane being resized, animated or isSliding
	* @param {Object=}	[args]		(optional) Options: which masks to apply, and to which panes
	*/
,	showMasks = function (pane, args) {
		var	c		= _c[pane]
		,	panes	=  ["center"]
		,	z		= options.zIndexes
		,	a		= $.extend({
						objectsOnly:	false
					,	animation:		false
					,	resizing:		true
					,	sliding:		state[pane].isSliding
					},	args )
		,	o, s
		;
		if (a.resizing)
			panes.push( pane );
		if (a.sliding)
			panes.push( _c.oppositeEdge[pane] ); // ADD the oppositeEdge-pane

		if (c.dir === "horz") {
			panes.push("west");
			panes.push("east");
		}

		$.each(panes, function(i,p){
			s = state[p];
			o = options[p];
			if (s.isVisible && ( o.maskObjects || (!a.objectsOnly && o.maskContents) )) {
				getMasks(p).each(function(){
					sizeMask.call(this);
					this.style.zIndex = s.isSliding ? z.pane_sliding+1 : z.pane_normal+1
					this.style.display = "block";
				});
			}
		});
	}

	/**
	* @param {boolean=}	force		Hide masks even if a pane is sliding
	*/
,	hideMasks = function (force) {
		// ensure no pane is resizing - could be a timing issue
		if (force || !state.paneResizing) {
			$Ms.hide(); // hide ALL masks
		}
		// if ANY pane is sliding, then DO NOT remove masks from panes with maskObjects enabled
		else if (!force && !$.isEmptyObject( state.panesSliding )) {
			var	i = $Ms.length - 1
			,	p, $M;
			for (; i >= 0; i--) {
				$M	= $Ms.eq(i);
				p	= $M.data("layoutMask");
				if (!options[p].maskObjects) {
					$M.hide();
				}
			}
		}
	}

	/**
	* @param {string}	pane
	*/
,	getMasks = function (pane) {
		var $Masks	= $([])
		,	$M, i = 0, c = $Ms.length
		;
		for (; i<c; i++) {
			$M = $Ms.eq(i);
			if ($M.data("layoutMask") === pane)
				$Masks = $Masks.add( $M );
		}
		if ($Masks.length)
			return $Masks;
		else
			return createMasks(pane);
	}

	/**
	* createMasks
	*
	* Generates both DIV (ALWAYS used) and IFRAME (optional) elements as masks
	* An IFRAME mask is created *under* the DIV when maskObjects=true, because a DIV cannot mask an applet
	*
	* @param {string}	pane
	*/
,	createMasks = function (pane) {
		var
			$P		= $Ps[pane]
		,	s		= state[pane]
		,	o		= options[pane]
		,	z		= options.zIndexes
		//,	objMask	= o.maskObjects && s.tagName != "IFRAME" // check for option
		,	$Masks	= $([])
		,	isIframe, el, $M, css, i
		;
		if (!o.maskContents && !o.maskObjects) return $Masks;
		// if o.maskObjects=true, then loop TWICE to create BOTH kinds of mask, else only create a DIV
		for (i=0; i < (o.maskObjects ? 2 : 1); i++) {
			isIframe = o.maskObjects && i==0;
			el = document.createElement( isIframe ? "iframe" : "div" );
			$M = $(el).data("layoutMask", pane); // add data to relate mask to pane
			el.className = "ui-layout-mask ui-layout-mask-"+ pane; // for user styling
			css = el.style;
			// styles common to both DIVs and IFRAMES
			css.display		= "block";
			css.position	= "absolute";
			css.background	= "#FFF";
			if (isIframe) { // IFRAME-only props
				el.frameborder = 0;
				el.src		= "about:blank";
				//el.allowTransparency = true; - for IE, but breaks masking ability!
				css.opacity	= 0;
				css.filter	= "Alpha(Opacity='0')";
				css.border	= 0;
			}
			// if pane is an IFRAME, then must mask the pane itself
			if (s.tagName == "IFRAME") {
				// NOTE sizing done by a subroutine so can be called during live-resizing
				css.zIndex	= z.pane_normal+1; // 1-higher than pane
				$N.append( el ); // append to LAYOUT CONTAINER
			}
			// otherwise put masks *inside the pane* to mask its contents
			else {
				$M.addClass("ui-layout-mask-inside-pane");
				css.zIndex	= o.maskZindex || z.content_mask; // usually 1, but customizable
				css.top		= 0;
				css.left	= 0;
				css.width	= "100%";
				css.height	= "100%";
				$P.append( el ); // append INSIDE pane element
			}
			// add to return object
			$Masks = $Masks.add( el );
			// add Mask to cached array so can be resized & reused
			$Ms = $Ms.add( el );
		}
		return $Masks;
	}


	/**
	* Destroy this layout and reset all elements
	*
	* @param {boolean=}	[destroyChildren=false]		Destory Child-Layouts first?
	*/
,	destroy = function (evt_or_destroyChildren, destroyChildren) {
		// UNBIND layout events and remove global object
		$(window).unbind("."+ sID);		// resize & unload
		$(document).unbind("."+ sID);	// keyDown (hotkeys)

		if (typeof evt_or_destroyChildren === "object")
			// stopPropagation if called by trigger("layoutdestroy") - use evtPane utility 
			evtPane(evt_or_destroyChildren);
		else // no event, so transfer 1st param to destroyChildren param
			destroyChildren = evt_or_destroyChildren;

		// need to look for parent layout BEFORE we remove the container data, else skips a level
		//var parentPane = Instance.hasParentLayout ? $.layout.getParentPaneInstance( $N ) : null;

		// reset layout-container
		$N	.clearQueue()
			.removeData("layout")
			.removeData("layoutContainer")
			.removeClass(options.containerClass)
			.unbind("."+ sID) // remove ALL Layout events
		;

		// remove all mask elements that have been created
		$Ms.remove();

		// loop all panes to remove layout classes, attributes and bindings
		$.each(_c.allPanes, function (i, pane) {
			removePane( pane, false, true, destroyChildren ); // true = skipResize
		});

		// do NOT reset container CSS if is a 'pane' (or 'content') in an outer-layout - ie, THIS layout is 'nested'
		var css = "layoutCSS";
		if ($N.data(css) && !$N.data("layoutRole")) // RESET CSS
			$N.css( $N.data(css) ).removeData(css);

		// for full-page layouts, also reset the <HTML> CSS
		if (sC.tagName === "BODY" && ($N = $("html")).data(css)) // RESET <HTML> CSS
			$N.css( $N.data(css) ).removeData(css);

		// trigger plugins for this layout, if there are any
		runPluginCallbacks( Instance, $.layout.onDestroy );

		// trigger state-management and onunload callback
		unload();

		// clear the Instance of everything except for container & options (so could recreate)
		// RE-CREATE: myLayout = myLayout.container.layout( myLayout.options );
		for (var n in Instance)
			if (!n.match(/^(container|options)$/)) delete Instance[ n ];
		// add a 'destroyed' flag to make it easy to check
		Instance.destroyed = true;

		// if this is a child layout, CLEAR the child-pointer in the parent
		/* for now the pointer REMAINS, but with only container, options and destroyed keys
		if (parentPane) {
			var layout	= parentPane.pane.data("parentLayout")
			,	key		= layout.options.instanceKey || 'error';
			// THIS SYNTAX MAY BE WRONG!
			parentPane.children[key] = layout.children[ parentPane.name ].children[key] = null;
		}
		*/

		return Instance; // for coding convenience
	}

	/**
	* Remove a pane from the layout - subroutine of destroy()
	*
	* @see  destroy()
	* @param {(string|Object)}	evt_or_pane			The pane to process
	* @param {boolean=}			[remove=false]		Remove the DOM element?
	* @param {boolean=}			[skipResize=false]	Skip calling resizeAll()?
	* @param {boolean=}			[destroyChild=true]	Destroy Child-layouts? If not passed, obeys options setting
	*/
,	removePane = function (evt_or_pane, remove, skipResize, destroyChild) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$P	= $Ps[pane]
		,	$C	= $Cs[pane]
		,	$R	= $Rs[pane]
		,	$T	= $Ts[pane]
		;
		// NOTE: elements can still exist even after remove()
		//		so check for missing data(), which is cleared by removed()
		if ($P && $.isEmptyObject( $P.data() )) $P = false;
		if ($C && $.isEmptyObject( $C.data() )) $C = false;
		if ($R && $.isEmptyObject( $R.data() )) $R = false;
		if ($T && $.isEmptyObject( $T.data() )) $T = false;

		if ($P) $P.stop(true, true);

		var	o	= options[pane]
		,	s	= state[pane]
		,	d	= "layout"
		,	css	= "layoutCSS"
		,	pC	= children[pane]
		,	hasChildren	= $.isPlainObject( pC ) && !$.isEmptyObject( pC )
		,	destroy		= destroyChild !== undefined ? destroyChild : o.destroyChildren
		;
		// FIRST destroy the child-layout(s)
		if (hasChildren && destroy) {
			$.each( pC, function (key, child) {
				if (!child.destroyed)
					child.destroy(true);// tell child-layout to destroy ALL its child-layouts too
				if (child.destroyed)	// destroy was successful
					delete pC[key];
			});
			// if no more children, remove the children hash
			if ($.isEmptyObject( pC )) {
				pC = children[pane] = null; // clear children hash
				hasChildren = false;
			}
		}

		// Note: can't 'remove' a pane element with non-destroyed children
		if ($P && remove && !hasChildren)
			$P.remove(); // remove the pane-element and everything inside it
		else if ($P && $P[0]) {
			//	create list of ALL pane-classes that need to be removed
			var	root	= o.paneClass // default="ui-layout-pane"
			,	pRoot	= root +"-"+ pane // eg: "ui-layout-pane-west"
			,	_open	= "-open"
			,	_sliding= "-sliding"
			,	_closed	= "-closed"
			,	classes	= [	root, root+_open, root+_closed, root+_sliding,		// generic classes
							pRoot, pRoot+_open, pRoot+_closed, pRoot+_sliding ]	// pane-specific classes
			;
			$.merge(classes, getHoverClasses($P, true)); // ADD hover-classes
			// remove all Layout classes from pane-element
			$P	.removeClass( classes.join(" ") ) // remove ALL pane-classes
				.removeData("parentLayout")
				.removeData("layoutPane")
				.removeData("layoutRole")
				.removeData("layoutEdge")
				.removeData("autoHidden")	// in case set
				.unbind("."+ sID) // remove ALL Layout events
				// TODO: remove these extra unbind commands when jQuery is fixed
				//.unbind("mouseenter"+ sID)
				//.unbind("mouseleave"+ sID)
			;
			// do NOT reset CSS if this pane/content is STILL the container of a nested layout!
			// the nested layout will reset its 'container' CSS when/if it is destroyed
			if (hasChildren && $C) {
				// a content-div may not have a specific width, so give it one to contain the Layout
				$C.width( $C.width() );
				$.each( pC, function (key, child) {
					child.resizeAll(); // resize the Layout
				});
			}
			else if ($C)
				$C.css( $C.data(css) ).removeData(css).removeData("layoutRole");
			// remove pane AFTER content in case there was a nested layout
			if (!$P.data(d))
				$P.css( $P.data(css) ).removeData(css);
		}

		// REMOVE pane resizer and toggler elements
		if ($T) $T.remove();
		if ($R) $R.remove();

		// CLEAR all pointers and state data
		Instance[pane] = $Ps[pane] = $Cs[pane] = $Rs[pane] = $Ts[pane] = false;
		s = { removed: true };

		if (!skipResize)
			resizeAll();
	}


/*
 * ###########################
 *	   ACTION METHODS
 * ###########################
 */

	/**
	* @param {string}	pane
	*/
,	_hidePane = function (pane) {
		var $P	= $Ps[pane]
		,	o	= options[pane]
		,	s	= $P[0].style
		;
		if (o.useOffscreenClose) {
			if (!$P.data(_c.offscreenReset))
				$P.data(_c.offscreenReset, { left: s.left, right: s.right });
			$P.css( _c.offscreenCSS );
		}
		else
			$P.hide().removeData(_c.offscreenReset);
	}

	/**
	* @param {string}	pane
	*/
,	_showPane = function (pane) {
		var $P	= $Ps[pane]
		,	o	= options[pane]
		,	off	= _c.offscreenCSS
		,	old	= $P.data(_c.offscreenReset)
		,	s	= $P[0].style
		;
		$P	.show() // ALWAYS show, just in case
			.removeData(_c.offscreenReset);
		if (o.useOffscreenClose && old) {
			if (s.left == off.left)
				s.left = old.left;
			if (s.right == off.right)
				s.right = old.right;
		}
	}


	/**
	* Completely 'hides' a pane, including its spacing - as if it does not exist
	* The pane is not actually 'removed' from the source, so can use 'show' to un-hide it
	*
	* @param {(string|Object)}	evt_or_pane			The pane being hidden, ie: north, south, east, or west
	* @param {boolean=}			[noAnimation=false]	
	*/
,	hide = function (evt_or_pane, noAnimation) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	o	= options[pane]
		,	s	= state[pane]
		,	$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		;
		if (!$P || s.isHidden) return; // pane does not exist OR is already hidden

		// onhide_start callback - will CANCEL hide if returns false
		if (state.initialized && false === _runCallbacks("onhide_start", pane)) return;

		s.isSliding = false; // just in case
		delete state.panesSliding[pane];

		// now hide the elements
		if ($R) $R.hide(); // hide resizer-bar
		if (!state.initialized || s.isClosed) {
			s.isClosed = true; // to trigger open-animation on show()
			s.isHidden  = true;
			s.isVisible = false;
			if (!state.initialized)
				_hidePane(pane); // no animation when loading page
			sizeMidPanes(_c[pane].dir === "horz" ? "" : "center");
			if (state.initialized || o.triggerEventsOnLoad)
				_runCallbacks("onhide_end", pane);
		}
		else {
			s.isHiding = true; // used by onclose
			close(pane, false, noAnimation); // adjust all panes to fit
		}
	}

	/**
	* Show a hidden pane - show as 'closed' by default unless openPane = true
	*
	* @param {(string|Object)}	evt_or_pane			The pane being opened, ie: north, south, east, or west
	* @param {boolean=}			[openPane=false]
	* @param {boolean=}			[noAnimation=false]
	* @param {boolean=}			[noAlert=false]
	*/
,	show = function (evt_or_pane, openPane, noAnimation, noAlert) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	o	= options[pane]
		,	s	= state[pane]
		,	$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		;
		if (!$P || !s.isHidden) return; // pane does not exist OR is not hidden

		// onshow_start callback - will CANCEL show if returns false
		if (false === _runCallbacks("onshow_start", pane)) return;

		s.isShowing = true; // used by onopen/onclose
		//s.isHidden  = false; - will be set by open/close - if not cancelled
		s.isSliding = false; // just in case
		delete state.panesSliding[pane];

		// now show the elements
		//if ($R) $R.show(); - will be shown by open/close
		if (openPane === false)
			close(pane, true); // true = force
		else
			open(pane, false, noAnimation, noAlert); // adjust all panes to fit
	}


	/**
	* Toggles a pane open/closed by calling either open or close
	*
	* @param {(string|Object)}	evt_or_pane		The pane being toggled, ie: north, south, east, or west
	* @param {boolean=}			[slide=false]
	*/
,	toggle = function (evt_or_pane, slide) {
		if (!isInitialized()) return;
		var	evt		= evtObj(evt_or_pane)
		,	pane	= evtPane.call(this, evt_or_pane)
		,	s		= state[pane]
		;
		if (evt) // called from to $R.dblclick OR triggerPaneEvent
			evt.stopImmediatePropagation();
		if (s.isHidden)
			show(pane); // will call 'open' after unhiding it
		else if (s.isClosed)
			open(pane, !!slide);
		else
			close(pane);
	}


	/**
	* Utility method used during init or other auto-processes
	*
	* @param {string}	pane   The pane being closed
	* @param {boolean=}	[setHandles=false]
	*/
,	_closePane = function (pane, setHandles) {
		var
			$P	= $Ps[pane]
		,	s	= state[pane]
		;
		_hidePane(pane);
		s.isClosed = true;
		s.isVisible = false;
		if (setHandles) setAsClosed(pane);
	}

	/**
	* Close the specified pane (animation optional), and resize all other panes as needed
	*
	* @param {(string|Object)}	evt_or_pane			The pane being closed, ie: north, south, east, or west
	* @param {boolean=}			[force=false]
	* @param {boolean=}			[noAnimation=false]
	* @param {boolean=}			[skipCallback=false]
	*/
,	close = function (evt_or_pane, force, noAnimation, skipCallback) {
		var	pane = evtPane.call(this, evt_or_pane);
		// if pane has been initialized, but NOT the complete layout, close pane instantly
		if (!state.initialized && $Ps[pane]) {
			_closePane(pane, true); // INIT pane as closed
			return;
		}
		if (!isInitialized()) return;

		var
			$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		,	$T	= $Ts[pane]
		,	o	= options[pane]
		,	s	= state[pane]
		,	c	= _c[pane]
		,	doFX, isShowing, isHiding, wasSliding;

		// QUEUE in case another action/animation is in progress
		$N.queue(function( queueNext ){

			if ( !$P
			||	(!o.closable && !s.isShowing && !s.isHiding)	// invalid request // (!o.resizable && !o.closable) ???
			||	(!force && s.isClosed && !s.isShowing)			// already closed
			) return queueNext();

			// onclose_start callback - will CANCEL hide if returns false
			// SKIP if just 'showing' a hidden pane as 'closed'
			var abort = !s.isShowing && false === _runCallbacks("onclose_start", pane);

			// transfer logic vars to temp vars
			isShowing	= s.isShowing;
			isHiding	= s.isHiding;
			wasSliding	= s.isSliding;
			// now clear the logic vars (REQUIRED before aborting)
			delete s.isShowing;
			delete s.isHiding;

			if (abort) return queueNext();

			doFX		= !noAnimation && !s.isClosed && (o.fxName_close != "none");
			s.isMoving	= true;
			s.isClosed	= true;
			s.isVisible	= false;
			// update isHidden BEFORE sizing panes
			if (isHiding) s.isHidden = true;
			else if (isShowing) s.isHidden = false;

			if (s.isSliding) // pane is being closed, so UNBIND trigger events
				bindStopSlidingEvents(pane, false); // will set isSliding=false
			else // resize panes adjacent to this one
				sizeMidPanes(_c[pane].dir === "horz" ? "" : "center", false); // false = NOT skipCallback

			// if this pane has a resizer bar, move it NOW - before animation
			setAsClosed(pane);

			// CLOSE THE PANE
			if (doFX) { // animate the close
				lockPaneForFX(pane, true);	// need to set left/top so animation will work
				$P.hide( o.fxName_close, o.fxSettings_close, o.fxSpeed_close, function () {
					lockPaneForFX(pane, false); // undo
					if (s.isClosed) close_2();
					queueNext();
				});
			}
			else { // hide the pane without animation
				_hidePane(pane);
				close_2();
				queueNext();
			};
		});

		// SUBROUTINE
		function close_2 () {
			s.isMoving	= false;
			bindStartSlidingEvents(pane, true); // will enable if o.slidable = true

			// if opposite-pane was autoClosed, see if it can be autoOpened now
			var altPane = _c.oppositeEdge[pane];
			if (state[ altPane ].noRoom) {
				setSizeLimits( altPane );
				makePaneFit( altPane );
			}

			if (!skipCallback && (state.initialized || o.triggerEventsOnLoad)) {
				// onclose callback - UNLESS just 'showing' a hidden pane as 'closed'
				if (!isShowing)	_runCallbacks("onclose_end", pane);
				// onhide OR onshow callback
				if (isShowing)	_runCallbacks("onshow_end", pane);
				if (isHiding)	_runCallbacks("onhide_end", pane);
			}
		}
	}

	/**
	* @param {string}	pane	The pane just closed, ie: north, south, east, or west
	*/
,	setAsClosed = function (pane) {
		if (!$Rs[pane]) return; // handles not initialized yet!
		var
			$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		,	$T		= $Ts[pane]
		,	o		= options[pane]
		,	s		= state[pane]
		,	side	= _c[pane].side
		,	rClass	= o.resizerClass
		,	tClass	= o.togglerClass
		,	_pane	= "-"+ pane // used for classNames
		,	_open	= "-open"
		,	_sliding= "-sliding"
		,	_closed	= "-closed"
		;
		$R
			.css(side, sC.inset[side]) // move the resizer
			.removeClass( rClass+_open +" "+ rClass+_pane+_open )
			.removeClass( rClass+_sliding +" "+ rClass+_pane+_sliding )
			.addClass( rClass+_closed +" "+ rClass+_pane+_closed )
		;
		// DISABLE 'resizing' when closed - do this BEFORE bindStartSlidingEvents?
		if (o.resizable && $.layout.plugins.draggable)
			$R
				.draggable("disable")
				.removeClass("ui-state-disabled") // do NOT apply disabled styling - not suitable here
				.css("cursor", "default")
				.attr("title","")
			;

		// if pane has a toggler button, adjust that too
		if ($T) {
			$T
				.removeClass( tClass+_open +" "+ tClass+_pane+_open )
				.addClass( tClass+_closed +" "+ tClass+_pane+_closed )
				.attr("title", o.tips.Open) // may be blank
			;
			// toggler-content - if exists
			$T.children(".content-open").hide();
			$T.children(".content-closed").css("display","block");
		}

		// sync any 'pin buttons'
		syncPinBtns(pane, false);

		if (state.initialized) {
			// resize 'length' and position togglers for adjacent panes
			sizeHandles();
		}
	}

	/**
	* Open the specified pane (animation optional), and resize all other panes as needed
	*
	* @param {(string|Object)}	evt_or_pane			The pane being opened, ie: north, south, east, or west
	* @param {boolean=}			[slide=false]
	* @param {boolean=}			[noAnimation=false]
	* @param {boolean=}			[noAlert=false]
	*/
,	open = function (evt_or_pane, slide, noAnimation, noAlert) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		,	$T	= $Ts[pane]
		,	o	= options[pane]
		,	s	= state[pane]
		,	c	= _c[pane]
		,	doFX, isShowing
		;
		// QUEUE in case another action/animation is in progress
		$N.queue(function( queueNext ){

			if ( !$P
			||	(!o.resizable && !o.closable && !s.isShowing)	// invalid request
			||	(s.isVisible && !s.isSliding)					// already open
			) return queueNext();

			// pane can ALSO be unhidden by just calling show(), so handle this scenario
			if (s.isHidden && !s.isShowing) {
				queueNext(); // call before show() because it needs the queue free
				show(pane, true);
				return;
			}

			if (s.autoResize && s.size != o.size) // resize pane to original size set in options
				sizePane(pane, o.size, true, true, true); // true=skipCallback/noAnimation/forceResize
			else
				// make sure there is enough space available to open the pane
				setSizeLimits(pane, slide);

			// onopen_start callback - will CANCEL open if returns false
			var cbReturn = _runCallbacks("onopen_start", pane);

			if (cbReturn === "abort")
				return queueNext();

			// update pane-state again in case options were changed in onopen_start
			if (cbReturn !== "NC") // NC = "No Callback"
				setSizeLimits(pane, slide);

			if (s.minSize > s.maxSize) { // INSUFFICIENT ROOM FOR PANE TO OPEN!
				syncPinBtns(pane, false); // make sure pin-buttons are reset
				if (!noAlert && o.tips.noRoomToOpen)
					alert(o.tips.noRoomToOpen);
				return queueNext(); // ABORT
			}

			if (slide) // START Sliding - will set isSliding=true
				bindStopSlidingEvents(pane, true); // BIND trigger events to close sliding-pane
			else if (s.isSliding) // PIN PANE (stop sliding) - open pane 'normally' instead
				bindStopSlidingEvents(pane, false); // UNBIND trigger events - will set isSliding=false
			else if (o.slidable)
				bindStartSlidingEvents(pane, false); // UNBIND trigger events

			s.noRoom = false; // will be reset by makePaneFit if 'noRoom'
			makePaneFit(pane);

			// transfer logic var to temp var
			isShowing = s.isShowing;
			// now clear the logic var
			delete s.isShowing;

			doFX		= !noAnimation && s.isClosed && (o.fxName_open != "none");
			s.isMoving	= true;
			s.isVisible	= true;
			s.isClosed	= false;
			// update isHidden BEFORE sizing panes - WHY??? Old?
			if (isShowing) s.isHidden = false;

			if (doFX) { // ANIMATE
				// mask adjacent panes with objects
				lockPaneForFX(pane, true);	// need to set left/top so animation will work
					$P.show( o.fxName_open, o.fxSettings_open, o.fxSpeed_open, function() {
					lockPaneForFX(pane, false); // undo
					if (s.isVisible) open_2(); // continue
					queueNext();
				});
			}
			else { // no animation
				_showPane(pane);// just show pane and...
				open_2();		// continue
				queueNext();
			};
		});

		// SUBROUTINE
		function open_2 () {
			s.isMoving	= false;

			// cure iframe display issues
			_fixIframe(pane);

			// NOTE: if isSliding, then other panes are NOT 'resized'
			if (!s.isSliding) { // resize all panes adjacent to this one
				sizeMidPanes(_c[pane].dir=="vert" ? "center" : "", false); // false = NOT skipCallback
			}

			// set classes, position handles and execute callbacks...
			setAsOpen(pane);
		};
	
	}

	/**
	* @param {string}	pane		The pane just opened, ie: north, south, east, or west
	* @param {boolean=}	[skipCallback=false]
	*/
,	setAsOpen = function (pane, skipCallback) {
		var 
			$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		,	$T		= $Ts[pane]
		,	o		= options[pane]
		,	s		= state[pane]
		,	side	= _c[pane].side
		,	rClass	= o.resizerClass
		,	tClass	= o.togglerClass
		,	_pane	= "-"+ pane // used for classNames
		,	_open	= "-open"
		,	_closed	= "-closed"
		,	_sliding= "-sliding"
		;
		$R
			.css(side, sC.inset[side] + getPaneSize(pane)) // move the resizer
			.removeClass( rClass+_closed +" "+ rClass+_pane+_closed )
			.addClass( rClass+_open +" "+ rClass+_pane+_open )
		;
		if (s.isSliding)
			$R.addClass( rClass+_sliding +" "+ rClass+_pane+_sliding )
		else // in case 'was sliding'
			$R.removeClass( rClass+_sliding +" "+ rClass+_pane+_sliding )

		removeHover( 0, $R ); // remove hover classes
		if (o.resizable && $.layout.plugins.draggable)
			$R	.draggable("enable")
				.css("cursor", o.resizerCursor)
				.attr("title", o.tips.Resize);
		else if (!s.isSliding)
			$R.css("cursor", "default"); // n-resize, s-resize, etc

		// if pane also has a toggler button, adjust that too
		if ($T) {
			$T	.removeClass( tClass+_closed +" "+ tClass+_pane+_closed )
				.addClass( tClass+_open +" "+ tClass+_pane+_open )
				.attr("title", o.tips.Close); // may be blank
			removeHover( 0, $T ); // remove hover classes
			// toggler-content - if exists
			$T.children(".content-closed").hide();
			$T.children(".content-open").css("display","block");
		}

		// sync any 'pin buttons'
		syncPinBtns(pane, !s.isSliding);

		// update pane-state dimensions - BEFORE resizing content
		$.extend(s, elDims($P));

		if (state.initialized) {
			// resize resizer & toggler sizes for all panes
			sizeHandles();
			// resize content every time pane opens - to be sure
			sizeContent(pane, true); // true = remeasure headers/footers, even if 'pane.isMoving'
		}

		if (!skipCallback && (state.initialized || o.triggerEventsOnLoad) && $P.is(":visible")) {
			// onopen callback
			_runCallbacks("onopen_end", pane);
			// onshow callback - TODO: should this be here?
			if (s.isShowing) _runCallbacks("onshow_end", pane);

			// ALSO call onresize because layout-size *may* have changed while pane was closed
			if (state.initialized)
				_runCallbacks("onresize_end", pane);
		}

		// TODO: Somehow sizePane("north") is being called after this point???
	}


	/**
	* slideOpen / slideClose / slideToggle
	*
	* Pass-though methods for sliding
	*/
,	slideOpen = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	evt		= evtObj(evt_or_pane)
		,	pane	= evtPane.call(this, evt_or_pane)
		,	s		= state[pane]
		,	delay	= options[pane].slideDelay_open
		;
		// prevent event from triggering on NEW resizer binding created below
		if (evt) evt.stopImmediatePropagation();

		if (s.isClosed && evt && evt.type === "mouseenter" && delay > 0)
			// trigger = mouseenter - use a delay
			timer.set(pane+"_openSlider", open_NOW, delay);
		else
			open_NOW(); // will unbind events if is already open

		/**
		* SUBROUTINE for timed open
		*/
		function open_NOW () {
			if (!s.isClosed) // skip if no longer closed!
				bindStopSlidingEvents(pane, true); // BIND trigger events to close sliding-pane
			else if (!s.isMoving)
				open(pane, true); // true = slide - open() will handle binding
		};
	}

,	slideClose = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	evt		= evtObj(evt_or_pane)
		,	pane	= evtPane.call(this, evt_or_pane)
		,	o		= options[pane]
		,	s		= state[pane]
		,	delay	= s.isMoving ? 1000 : 300 // MINIMUM delay - option may override
		;
		if (s.isClosed || s.isResizing)
			return; // skip if already closed OR in process of resizing
		else if (o.slideTrigger_close === "click")
			close_NOW(); // close immediately onClick
		else if (o.preventQuickSlideClose && s.isMoving)
			return; // handle Chrome quick-close on slide-open
		else if (o.preventPrematureSlideClose && evt && $.layout.isMouseOverElem(evt, $Ps[pane]))
			return; // handle incorrect mouseleave trigger, like when over a SELECT-list in IE
		else if (evt) // trigger = mouseleave - use a delay
			// 1 sec delay if 'opening', else .3 sec
			timer.set(pane+"_closeSlider", close_NOW, max(o.slideDelay_close, delay));
		else // called programically
			close_NOW();

		/**
		* SUBROUTINE for timed close
		*/
		function close_NOW () {
			if (s.isClosed) // skip 'close' if already closed!
				bindStopSlidingEvents(pane, false); // UNBIND trigger events - TODO: is this needed here?
			else if (!s.isMoving)
				close(pane); // close will handle unbinding
		};
	}

	/**
	* @param {(string|Object)}	evt_or_pane		The pane being opened, ie: north, south, east, or west
	*/
,	slideToggle = function (evt_or_pane) {
		var pane = evtPane.call(this, evt_or_pane);
		toggle(pane, true);
	}


	/**
	* Must set left/top on East/South panes so animation will work properly
	*
	* @param {string}	pane	The pane to lock, 'east' or 'south' - any other is ignored!
	* @param {boolean}	doLock  true = set left/top, false = remove
	*/
,	lockPaneForFX = function (pane, doLock) {
		var $P	= $Ps[pane]
		,	s	= state[pane]
		,	o	= options[pane]
		,	z	= options.zIndexes
		;
		if (doLock) {
			showMasks( pane, { animation: true, objectsOnly: true });
			$P.css({ zIndex: z.pane_animate }); // overlay all elements during animation
			if (pane=="south")
				$P.css({ top: sC.inset.top + sC.innerHeight - $P.outerHeight() });
			else if (pane=="east")
				$P.css({ left: sC.inset.left + sC.innerWidth - $P.outerWidth() });
		}
		else { // animation DONE - RESET CSS
			hideMasks();
			$P.css({ zIndex: (s.isSliding ? z.pane_sliding : z.pane_normal) });
			if (pane=="south")
				$P.css({ top: "auto" });
			// if pane is positioned 'off-screen', then DO NOT screw with it!
			else if (pane=="east" && !$P.css("left").match(/\-99999/))
				$P.css({ left: "auto" });
			// fix anti-aliasing in IE - only needed for animations that change opacity
			if (browser.msie && o.fxOpacityFix && o.fxName_open != "slide" && $P.css("filter") && $P.css("opacity") == 1)
				$P[0].style.removeAttribute('filter');
		}
	}


	/**
	* Toggle sliding functionality of a specific pane on/off by adding removing 'slide open' trigger
	*
	* @see  open(), close()
	* @param {string}	pane	The pane to enable/disable, 'north', 'south', etc.
	* @param {boolean}	enable	Enable or Disable sliding?
	*/
,	bindStartSlidingEvents = function (pane, enable) {
		var o		= options[pane]
		,	$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		,	evtName	= o.slideTrigger_open.toLowerCase()
		;
		if (!$R || (enable && !o.slidable)) return;

		// make sure we have a valid event
		if (evtName.match(/mouseover/))
			evtName = o.slideTrigger_open = "mouseenter";
		else if (!evtName.match(/(click|dblclick|mouseenter)/)) 
			evtName = o.slideTrigger_open = "click";

		// must remove double-click-toggle when using dblclick-slide
		if (o.resizerDblClickToggle && evtName.match(/click/)) {
			$R[enable ? "unbind" : "bind"]('dblclick.'+ sID, toggle)
		}

		$R
			// add or remove event
			[enable ? "bind" : "unbind"](evtName +'.'+ sID, slideOpen)
			// set the appropriate cursor & title/tip
			.css("cursor", enable ? o.sliderCursor : "default")
			.attr("title", enable ? o.tips.Slide : "")
		;
	}

	/**
	* Add or remove 'mouseleave' events to 'slide close' when pane is 'sliding' open or closed
	* Also increases zIndex when pane is sliding open
	* See bindStartSlidingEvents for code to control 'slide open'
	*
	* @see  slideOpen(), slideClose()
	* @param {string}	pane	The pane to process, 'north', 'south', etc.
	* @param {boolean}	enable	Enable or Disable events?
	*/
,	bindStopSlidingEvents = function (pane, enable) {
		var	o		= options[pane]
		,	s		= state[pane]
		,	c		= _c[pane]
		,	z		= options.zIndexes
		,	evtName	= o.slideTrigger_close.toLowerCase()
		,	action	= (enable ? "bind" : "unbind")
		,	$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		;
		timer.clear(pane+"_closeSlider"); // just in case

		if (enable) {
			s.isSliding = true;
			state.panesSliding[pane] = true;
			// remove 'slideOpen' event from resizer
			// ALSO will raise the zIndex of the pane & resizer
			bindStartSlidingEvents(pane, false);
		}
		else {
			s.isSliding = false;
			delete state.panesSliding[pane];
		}

		// RE/SET zIndex - increases when pane is sliding-open, resets to normal when not
		$P.css("zIndex", enable ? z.pane_sliding : z.pane_normal);
		$R.css("zIndex", enable ? z.pane_sliding+2 : z.resizer_normal); // NOTE: mask = pane_sliding+1

		// make sure we have a valid event
		if (!evtName.match(/(click|mouseleave)/))
			evtName = o.slideTrigger_close = "mouseleave"; // also catches 'mouseout'

		// add/remove slide triggers
		$R[action](evtName, slideClose); // base event on resize
		// need extra events for mouseleave
		if (evtName === "mouseleave") {
			// also close on pane.mouseleave
			$P[action]("mouseleave."+ sID, slideClose);
			// cancel timer when mouse moves between 'pane' and 'resizer'
			$R[action]("mouseenter."+ sID, cancelMouseOut);
			$P[action]("mouseenter."+ sID, cancelMouseOut);
		}

		if (!enable)
			timer.clear(pane+"_closeSlider");
		else if (evtName === "click" && !o.resizable) {
			// IF pane is not resizable (which already has a cursor and tip) 
			// then set the a cursor & title/tip on resizer when sliding
			$R.css("cursor", enable ? o.sliderCursor : "default");
			$R.attr("title", enable ? o.tips.Close : ""); // use Toggler-tip, eg: "Close Pane"
		}

		// SUBROUTINE for mouseleave timer clearing
		function cancelMouseOut (evt) {
			timer.clear(pane+"_closeSlider");
			evt.stopPropagation();
		}
	}


	/**
	* Hides/closes a pane if there is insufficient room - reverses this when there is room again
	* MUST have already called setSizeLimits() before calling this method
	*
	* @param {string}	pane					The pane being resized
	* @param {boolean=}	[isOpening=false]		Called from onOpen?
	* @param {boolean=}	[skipCallback=false]	Should the onresize callback be run?
	* @param {boolean=}	[force=false]
	*/
,	makePaneFit = function (pane, isOpening, skipCallback, force) {
		var	o	= options[pane]
		,	s	= state[pane]
		,	c	= _c[pane]
		,	$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		,	isSidePane 	= c.dir==="vert"
		,	hasRoom		= false
		;
		// special handling for center & east/west panes
		if (pane === "center" || (isSidePane && s.noVerticalRoom)) {
			// see if there is enough room to display the pane
			// ERROR: hasRoom = s.minHeight <= s.maxHeight && (isSidePane || s.minWidth <= s.maxWidth);
			hasRoom = (s.maxHeight >= 0);
			if (hasRoom && s.noRoom) { // previously hidden due to noRoom, so show now
				_showPane(pane);
				if ($R) $R.show();
				s.isVisible = true;
				s.noRoom = false;
				if (isSidePane) s.noVerticalRoom = false;
				_fixIframe(pane);
			}
			else if (!hasRoom && !s.noRoom) { // not currently hidden, so hide now
				_hidePane(pane);
				if ($R) $R.hide();
				s.isVisible = false;
				s.noRoom = true;
			}
		}

		// see if there is enough room to fit the border-pane
		if (pane === "center") {
			// ignore center in this block
		}
		else if (s.minSize <= s.maxSize) { // pane CAN fit
			hasRoom = true;
			if (s.size > s.maxSize) // pane is too big - shrink it
				sizePane(pane, s.maxSize, skipCallback, true, force); // true = noAnimation
			else if (s.size < s.minSize) // pane is too small - enlarge it
				sizePane(pane, s.minSize, skipCallback, true, force); // true = noAnimation
			// need s.isVisible because new pseudoClose method keeps pane visible, but off-screen
			else if ($R && s.isVisible && $P.is(":visible")) {
				// make sure resizer-bar is positioned correctly
				// handles situation where nested layout was 'hidden' when initialized
				var	pos = s.size + sC.inset[c.side];
				if ($.layout.cssNum( $R, c.side ) != pos) $R.css( c.side, pos );
			}

			// if was previously hidden due to noRoom, then RESET because NOW there is room
			if (s.noRoom) {
				// s.noRoom state will be set by open or show
				if (s.wasOpen && o.closable) {
					if (o.autoReopen)
						open(pane, false, true, true); // true = noAnimation, true = noAlert
					else // leave the pane closed, so just update state
						s.noRoom = false;
				}
				else
					show(pane, s.wasOpen, true, true); // true = noAnimation, true = noAlert
			}
		}
		else { // !hasRoom - pane CANNOT fit
			if (!s.noRoom) { // pane not set as noRoom yet, so hide or close it now...
				s.noRoom = true; // update state
				s.wasOpen = !s.isClosed && !s.isSliding;
				if (s.isClosed){} // SKIP
				else if (o.closable) // 'close' if possible
					close(pane, true, true); // true = force, true = noAnimation
				else // 'hide' pane if cannot just be closed
					hide(pane, true); // true = noAnimation
			}
		}
	}


	/**
	* manualSizePane is an exposed flow-through method allowing extra code when pane is 'manually resized'
	*
	* @param {(string|Object)}	evt_or_pane				The pane being resized
	* @param {number}			size					The *desired* new size for this pane - will be validated
	* @param {boolean=}			[skipCallback=false]	Should the onresize callback be run?
	* @param {boolean=}			[noAnimation=false]
	* @param {boolean=}			[force=false]			Force resizing even if does not seem necessary
	*/
,	manualSizePane = function (evt_or_pane, size, skipCallback, noAnimation, force) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	o	= options[pane]
		,	s	= state[pane]
		//	if resizing callbacks have been delayed and resizing is now DONE, force resizing to complete...
		,	forceResize = force || (o.livePaneResizing && !s.isResizing)
		;
		// ANY call to manualSizePane disables autoResize - ie, percentage sizing
		s.autoResize = false;
		// flow-through...
		sizePane(pane, size, skipCallback, noAnimation, forceResize); // will animate resize if option enabled
	}

	/**
	* sizePane is called only by internal methods whenever a pane needs to be resized
	*
	* @param {(string|Object)}	evt_or_pane				The pane being resized
	* @param {number}			size					The *desired* new size for this pane - will be validated
	* @param {boolean=}			[skipCallback=false]	Should the onresize callback be run?
	* @param {boolean=}			[noAnimation=false]
	* @param {boolean=}			[force=false]			Force resizing even if does not seem necessary
	*/
,	sizePane = function (evt_or_pane, size, skipCallback, noAnimation, force) {
		if (!isInitialized()) return;
		var	pane	= evtPane.call(this, evt_or_pane) // probably NEVER called from event?
		,	o		= options[pane]
		,	s		= state[pane]
		,	$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		,	side	= _c[pane].side
		,	dimName	= _c[pane].sizeType.toLowerCase()
		,	skipResizeWhileDragging = s.isResizing && !o.triggerEventsDuringLiveResize
		,	doFX	= noAnimation !== true && o.animatePaneSizing
		,	oldSize, newSize
		;
		// QUEUE in case another action/animation is in progress
		$N.queue(function( queueNext ){
			// calculate 'current' min/max sizes
			setSizeLimits(pane); // update pane-state
			oldSize = s.size;
			size = _parseSize(pane, size); // handle percentages & auto
			size = max(size, _parseSize(pane, o.minSize));
			size = min(size, s.maxSize);
			if (size < s.minSize) { // not enough room for pane!
				queueNext(); // call before makePaneFit() because it needs the queue free
				makePaneFit(pane, false, skipCallback);	// will hide or close pane
				return;
			}

			// IF newSize is same as oldSize, then nothing to do - abort
			if (!force && size === oldSize)
				return queueNext();

			s.newSize = size;

			// onresize_start callback CANNOT cancel resizing because this would break the layout!
			if (!skipCallback && state.initialized && s.isVisible)
				_runCallbacks("onresize_start", pane);

			// resize the pane, and make sure its visible
			newSize = cssSize(pane, size);

			if (doFX && $P.is(":visible")) { // ANIMATE
				var fx		= $.layout.effects.size[pane] || $.layout.effects.size.all
				,	easing	= o.fxSettings_size.easing || fx.easing
				,	z		= options.zIndexes
				,	props	= {};
				props[ dimName ] = newSize +'px';
				s.isMoving = true;
				// overlay all elements during animation
				$P.css({ zIndex: z.pane_animate })
				  .show().animate( props, o.fxSpeed_size, easing, function(){
					// reset zIndex after animation
					$P.css({ zIndex: (s.isSliding ? z.pane_sliding : z.pane_normal) });
					s.isMoving = false;
					delete s.newSize;
					sizePane_2(); // continue
					queueNext();
				});
			}
			else { // no animation
				$P.css( dimName, newSize );	// resize pane
				delete s.newSize;
				// if pane is visible, then 
				if ($P.is(":visible"))
					sizePane_2(); // continue
				else {
					// pane is NOT VISIBLE, so just update state data...
					// when pane is *next opened*, it will have the new size
					s.size = size;				// update state.size
					$.extend(s, elDims($P));	// update state dimensions
				}
				queueNext();
			};

		});

		// SUBROUTINE
		function sizePane_2 () {
			/*	Panes are sometimes not sized precisely in some browsers!?
			 *	This code will resize the pane up to 3 times to nudge the pane to the correct size
			 */
			var	actual	= dimName==='width' ? $P.outerWidth() : $P.outerHeight()
			,	tries	= [{
						   	pane:		pane
						,	count:		1
						,	target:		size
						,	actual:		actual
						,	correct:	(size === actual)
						,	attempt:	size
						,	cssSize:	newSize
						}]
			,	lastTry = tries[0]
			,	thisTry	= {}
			,	msg		= 'Inaccurate size after resizing the '+ pane +'-pane.'
			;
			while ( !lastTry.correct ) {
				thisTry = { pane: pane, count: lastTry.count+1, target: size };

				if (lastTry.actual > size)
					thisTry.attempt = max(0, lastTry.attempt - (lastTry.actual - size));
				else // lastTry.actual < size
					thisTry.attempt = max(0, lastTry.attempt + (size - lastTry.actual));

				thisTry.cssSize = cssSize(pane, thisTry.attempt);
				$P.css( dimName, thisTry.cssSize );

				thisTry.actual	= dimName=='width' ? $P.outerWidth() : $P.outerHeight();
				thisTry.correct	= (size === thisTry.actual);

				// log attempts and alert the user of this *non-fatal error* (if showDebugMessages)
				if ( tries.length === 1) {
					_log(msg, false, true);
					_log(lastTry, false, true);
				}
				_log(thisTry, false, true);
				// after 4 tries, is as close as its gonna get!
				if (tries.length > 3) break;

				tries.push( thisTry );
				lastTry = tries[ tries.length - 1 ];
			}
			// END TESTING CODE

			// update pane-state dimensions
			s.size	= size;
			$.extend(s, elDims($P));

			if (s.isVisible && $P.is(":visible")) {
				// reposition the resizer-bar
				if ($R) $R.css( side, size + sC.inset[side] );
				// resize the content-div
				sizeContent(pane);
			}

			if (!skipCallback && !skipResizeWhileDragging && state.initialized && s.isVisible)
				_runCallbacks("onresize_end", pane);

			// resize all the adjacent panes, and adjust their toggler buttons
			// when skipCallback passed, it means the controlling method will handle 'other panes'
			if (!skipCallback) {
				// also no callback if live-resize is in progress and NOT triggerEventsDuringLiveResize
				if (!s.isSliding) sizeMidPanes(_c[pane].dir=="horz" ? "" : "center", skipResizeWhileDragging, force);
				sizeHandles();
			}

			// if opposite-pane was autoClosed, see if it can be autoOpened now
			var altPane = _c.oppositeEdge[pane];
			if (size < oldSize && state[ altPane ].noRoom) {
				setSizeLimits( altPane );
				makePaneFit( altPane, false, skipCallback );
			}

			// DEBUG - ALERT user/developer so they know there was a sizing problem
			if (tries.length > 1)
				_log(msg +'\nSee the Error Console for details.', true, true);
		}
	}

	/**
	* @see  initPanes(), sizePane(), 	resizeAll(), open(), close(), hide()
	* @param {(Array.<string>|string)}	panes					The pane(s) being resized, comma-delmited string
	* @param {boolean=}					[skipCallback=false]	Should the onresize callback be run?
	* @param {boolean=}					[force=false]
	*/
,	sizeMidPanes = function (panes, skipCallback, force) {
		panes = (panes ? panes : "east,west,center").split(",");

		$.each(panes, function (i, pane) {
			if (!$Ps[pane]) return; // NO PANE - skip
			var 
				o		= options[pane]
			,	s		= state[pane]
			,	$P		= $Ps[pane]
			,	$R		= $Rs[pane]
			,	isCenter= (pane=="center")
			,	hasRoom	= true
			,	CSS		= {}
			//	if pane is not visible, show it invisibly NOW rather than for *each call* in this script
			,	visCSS	= $.layout.showInvisibly($P)

			,	newCenter	= calcNewCenterPaneDims()
			;

			// update pane-state dimensions
			$.extend(s, elDims($P));

			if (pane === "center") {
				if (!force && s.isVisible && newCenter.width === s.outerWidth && newCenter.height === s.outerHeight) {
					$P.css(visCSS);
					return true; // SKIP - pane already the correct size
				}
				// set state for makePaneFit() logic
				$.extend(s, cssMinDims(pane), {
					maxWidth:	newCenter.width
				,	maxHeight:	newCenter.height
				});
				CSS = newCenter;
				s.newWidth	= CSS.width;
				s.newHeight	= CSS.height;
				// convert OUTER width/height to CSS width/height 
				CSS.width	= cssW($P, CSS.width);
				// NEW - allow pane to extend 'below' visible area rather than hide it
				CSS.height	= cssH($P, CSS.height);
				hasRoom		= CSS.width >= 0 && CSS.height >= 0; // height >= 0 = ALWAYS TRUE NOW

				// during layout init, try to shrink east/west panes to make room for center
				if (!state.initialized && o.minWidth > newCenter.width) {
					var
						reqPx	= o.minWidth - s.outerWidth
					,	minE	= options.east.minSize || 0
					,	minW	= options.west.minSize || 0
					,	sizeE	= state.east.size
					,	sizeW	= state.west.size
					,	newE	= sizeE
					,	newW	= sizeW
					;
					if (reqPx > 0 && state.east.isVisible && sizeE > minE) {
						newE = max( sizeE-minE, sizeE-reqPx );
						reqPx -= sizeE-newE;
					}
					if (reqPx > 0 && state.west.isVisible && sizeW > minW) {
						newW = max( sizeW-minW, sizeW-reqPx );
						reqPx -= sizeW-newW;
					}
					// IF we found enough extra space, then resize the border panes as calculated
					if (reqPx === 0) {
						if (sizeE && sizeE != minE)
							sizePane('east', newE, true, true, force); // true = skipCallback/noAnimation - initPanes will handle when done
						if (sizeW && sizeW != minW)
							sizePane('west', newW, true, true, force); // true = skipCallback/noAnimation
						// now start over!
						sizeMidPanes('center', skipCallback, force);
						$P.css(visCSS);
						return; // abort this loop
					}
				}
			}
			else { // for east and west, set only the height, which is same as center height
				// set state.min/maxWidth/Height for makePaneFit() logic
				if (s.isVisible && !s.noVerticalRoom)
					$.extend(s, elDims($P), cssMinDims(pane))
				if (!force && !s.noVerticalRoom && newCenter.height === s.outerHeight) {
					$P.css(visCSS);
					return true; // SKIP - pane already the correct size
				}
				// east/west have same top, bottom & height as center
				CSS.top		= newCenter.top;
				CSS.bottom	= newCenter.bottom;
				s.newSize	= newCenter.height
				// NEW - allow pane to extend 'below' visible area rather than hide it
				CSS.height	= cssH($P, newCenter.height);
				s.maxHeight	= CSS.height;
				hasRoom		= (s.maxHeight >= 0); // ALWAYS TRUE NOW
				if (!hasRoom) s.noVerticalRoom = true; // makePaneFit() logic
			}

			if (hasRoom) {
				// resizeAll passes skipCallback because it triggers callbacks after ALL panes are resized
				if (!skipCallback && state.initialized)
					_runCallbacks("onresize_start", pane);

				$P.css(CSS); // apply the CSS to pane
				if (pane !== "center")
					sizeHandles(pane); // also update resizer length
				if (s.noRoom && !s.isClosed && !s.isHidden)
					makePaneFit(pane); // will re-open/show auto-closed/hidden pane
				if (s.isVisible) {
					$.extend(s, elDims($P)); // update pane dimensions
					if (state.initialized) sizeContent(pane); // also resize the contents, if exists
				}
			}
			else if (!s.noRoom && s.isVisible) // no room for pane
				makePaneFit(pane); // will hide or close pane

			// reset visibility, if necessary
			$P.css(visCSS);

			delete s.newSize;
			delete s.newWidth;
			delete s.newHeight;

			if (!s.isVisible)
				return true; // DONE - next pane

			/*
			* Extra CSS for IE6 or IE7 in Quirks-mode - add 'width' to NORTH/SOUTH panes
			* Normally these panes have only 'left' & 'right' positions so pane auto-sizes
			* ALSO required when pane is an IFRAME because will NOT default to 'full width'
			*	TODO: Can I use width:100% for a north/south iframe?
			*	TODO: Sounds like a job for $P.outerWidth( sC.innerWidth ) SETTER METHOD
			*/
			if (pane === "center") { // finished processing midPanes
				var fix = browser.isIE6 || !browser.boxModel;
				if ($Ps.north && (fix || state.north.tagName=="IFRAME")) 
					$Ps.north.css("width", cssW($Ps.north, sC.innerWidth));
				if ($Ps.south && (fix || state.south.tagName=="IFRAME"))
					$Ps.south.css("width", cssW($Ps.south, sC.innerWidth));
			}

			// resizeAll passes skipCallback because it triggers callbacks after ALL panes are resized
			if (!skipCallback && state.initialized)
				_runCallbacks("onresize_end", pane);
		});
	}


	/**
	* @see  window.onresize(), callbacks or custom code
	* @param {(Object|boolean)=}	evt_or_refresh	If 'true', then also reset pane-positioning
	*/
,	resizeAll = function (evt_or_refresh) {
		var	oldW	= sC.innerWidth
		,	oldH	= sC.innerHeight
		;
		// stopPropagation if called by trigger("layoutdestroy") - use evtPane utility 
		evtPane(evt_or_refresh);

		// cannot size layout when 'container' is hidden or collapsed
		if (!$N.is(":visible")) return;

		if (!state.initialized) {
			_initLayoutElements();
			return; // no need to resize since we just initialized!
		}

		if (evt_or_refresh === true && $.isPlainObject(options.outset)) {
			// update container CSS in case outset option has changed
			$N.css( options.outset );
		}
		// UPDATE container dimensions
		$.extend(sC, elDims( $N, options.inset ));
		if (!sC.outerHeight) return;

		// if 'true' passed, refresh pane & handle positioning too
		if (evt_or_refresh === true) {
			setPanePosition();
		}

		// onresizeall_start will CANCEL resizing if returns false
		// state.container has already been set, so user can access this info for calcuations
		if (false === _runCallbacks("onresizeall_start")) return false;

		var	// see if container is now 'smaller' than before
			shrunkH	= (sC.innerHeight < oldH)
		,	shrunkW	= (sC.innerWidth < oldW)
		,	$P, o, s
		;
		// NOTE special order for sizing: S-N-E-W
		$.each(["south","north","east","west"], function (i, pane) {
			if (!$Ps[pane]) return; // no pane - SKIP
			o = options[pane];
			s = state[pane];
			if (s.autoResize && s.size != o.size) // resize pane to original size set in options
				sizePane(pane, o.size, true, true, true); // true=skipCallback/noAnimation/forceResize
			else {
				setSizeLimits(pane);
				makePaneFit(pane, false, true, true); // true=skipCallback/forceResize
			}
		});

		sizeMidPanes("", true, true); // true=skipCallback/forceResize
		sizeHandles(); // reposition the toggler elements

		// trigger all individual pane callbacks AFTER layout has finished resizing
		$.each(_c.allPanes, function (i, pane) {
			$P = $Ps[pane];
			if (!$P) return; // SKIP
			if (state[pane].isVisible) // undefined for non-existent panes
				_runCallbacks("onresize_end", pane); // callback - if exists
		});

		_runCallbacks("onresizeall_end");
		//_triggerLayoutEvent(pane, 'resizeall');
	}

	/**
	* Whenever a pane resizes or opens that has a nested layout, trigger resizeAll
	*
	* @param {(string|Object)}	evt_or_pane		The pane just resized or opened
	*/
,	resizeChildren = function (evt_or_pane, skipRefresh) {
		var	pane = evtPane.call(this, evt_or_pane);

		if (!options[pane].resizeChildren) return;

		// ensure the pane-children are up-to-date
		if (!skipRefresh) refreshChildren( pane );
		var pC = children[pane];
		if ($.isPlainObject( pC )) {
			// resize one or more children
			$.each( pC, function (key, child) {
				if (!child.destroyed) child.resizeAll();
			});
		}
	}

	/**
	* IF pane has a content-div, then resize all elements inside pane to fit pane-height
	*
	* @param {(string|Object)}	evt_or_panes		The pane(s) being resized
	* @param {boolean=}			[remeasure=false]	Should the content (header/footer) be remeasured?
	*/
,	sizeContent = function (evt_or_panes, remeasure) {
		if (!isInitialized()) return;

		var panes = evtPane.call(this, evt_or_panes);
		panes = panes ? panes.split(",") : _c.allPanes;

		$.each(panes, function (idx, pane) {
			var
				$P	= $Ps[pane]
			,	$C	= $Cs[pane]
			,	o	= options[pane]
			,	s	= state[pane]
			,	m	= s.content // m = measurements
			;
			if (!$P || !$C || !$P.is(":visible")) return true; // NOT VISIBLE - skip

			// if content-element was REMOVED, update OR remove the pointer
			if (!$C.length) {
				initContent(pane, false);	// false = do NOT sizeContent() - already there!
				if (!$C) return;			// no replacement element found - pointer have been removed
			}

			// onsizecontent_start will CANCEL resizing if returns false
			if (false === _runCallbacks("onsizecontent_start", pane)) return;

			// skip re-measuring offsets if live-resizing
			if ((!s.isMoving && !s.isResizing) || o.liveContentResizing || remeasure || m.top == undefined) {
				_measure();
				// if any footers are below pane-bottom, they may not measure correctly,
				// so allow pane overflow and re-measure
				if (m.hiddenFooters > 0 && $P.css("overflow") === "hidden") {
					$P.css("overflow", "visible");
					_measure(); // remeasure while overflowing
					$P.css("overflow", "hidden");
				}
			}
			// NOTE: spaceAbove/Below *includes* the pane paddingTop/Bottom, but not pane.borders
			var newH = s.innerHeight - (m.spaceAbove - s.css.paddingTop) - (m.spaceBelow - s.css.paddingBottom);

			if (!$C.is(":visible") || m.height != newH) {
				// size the Content element to fit new pane-size - will autoHide if not enough room
				setOuterHeight($C, newH, true); // true=autoHide
				m.height = newH; // save new height
			};

			if (state.initialized)
				_runCallbacks("onsizecontent_end", pane);

			function _below ($E) {
				return max(s.css.paddingBottom, (parseInt($E.css("marginBottom"), 10) || 0));
			};

			function _measure () {
				var
					ignore	= options[pane].contentIgnoreSelector
				,	$Fs		= $C.nextAll().not(".ui-layout-mask").not(ignore || ":lt(0)") // not :lt(0) = ALL
				,	$Fs_vis	= $Fs.filter(':visible')
				,	$F		= $Fs_vis.filter(':last')
				;
				m = {
					top:			$C[0].offsetTop
				,	height:			$C.outerHeight()
				,	numFooters:		$Fs.length
				,	hiddenFooters:	$Fs.length - $Fs_vis.length
				,	spaceBelow:		0 // correct if no content footer ($E)
				}
					m.spaceAbove	= m.top; // just for state - not used in calc
					m.bottom		= m.top + m.height;
				if ($F.length)
					//spaceBelow = (LastFooter.top + LastFooter.height) [footerBottom] - Content.bottom + max(LastFooter.marginBottom, pane.paddingBotom)
					m.spaceBelow = ($F[0].offsetTop + $F.outerHeight()) - m.bottom + _below($F);
				else // no footer - check marginBottom on Content element itself
					m.spaceBelow = _below($C);
			};
		});
	}


	/**
	* Called every time a pane is opened, closed, or resized to slide the togglers to 'center' and adjust their length if necessary
	*
	* @see  initHandles(), open(), close(), resizeAll()
	* @param {(string|Object)=}		evt_or_panes	The pane(s) being resized
	*/
,	sizeHandles = function (evt_or_panes) {
		var panes = evtPane.call(this, evt_or_panes)
		panes = panes ? panes.split(",") : _c.borderPanes;

		$.each(panes, function (i, pane) {
			var 
				o	= options[pane]
			,	s	= state[pane]
			,	$P	= $Ps[pane]
			,	$R	= $Rs[pane]
			,	$T	= $Ts[pane]
			,	$TC
			;
			if (!$P || !$R) return;

			var
				dir			= _c[pane].dir
			,	_state		= (s.isClosed ? "_closed" : "_open")
			,	spacing		= o["spacing"+ _state]
			,	togAlign	= o["togglerAlign"+ _state]
			,	togLen		= o["togglerLength"+ _state]
			,	paneLen
			,	left
			,	offset
			,	CSS = {}
			;

			if (spacing === 0) {
				$R.hide();
				return;
			}
			else if (!s.noRoom && !s.isHidden) // skip if resizer was hidden for any reason
				$R.show(); // in case was previously hidden

			// Resizer Bar is ALWAYS same width/height of pane it is attached to
			if (dir === "horz") { // north/south
				//paneLen = $P.outerWidth(); // s.outerWidth || 
				paneLen = sC.innerWidth; // handle offscreen-panes
				s.resizerLength = paneLen;
				left = $.layout.cssNum($P, "left")
				$R.css({
					width:	cssW($R, paneLen) // account for borders & padding
				,	height:	cssH($R, spacing) // ditto
				,	left:	left > -9999 ? left : sC.inset.left // handle offscreen-panes
				});
			}
			else { // east/west
				paneLen = $P.outerHeight(); // s.outerHeight || 
				s.resizerLength = paneLen;
				$R.css({
					height:	cssH($R, paneLen) // account for borders & padding
				,	width:	cssW($R, spacing) // ditto
				,	top:	sC.inset.top + getPaneSize("north", true) // TODO: what if no North pane?
				//,	top:	$.layout.cssNum($Ps["center"], "top")
				});
			}

			// remove hover classes
			removeHover( o, $R );

			if ($T) {
				if (togLen === 0 || (s.isSliding && o.hideTogglerOnSlide)) {
					$T.hide(); // always HIDE the toggler when 'sliding'
					return;
				}
				else
					$T.show(); // in case was previously hidden

				if (!(togLen > 0) || togLen === "100%" || togLen > paneLen) {
					togLen = paneLen;
					offset = 0;
				}
				else { // calculate 'offset' based on options.PANE.togglerAlign_open/closed
					if (isStr(togAlign)) {
						switch (togAlign) {
							case "top":
							case "left":	offset = 0;
											break;
							case "bottom":
							case "right":	offset = paneLen - togLen;
											break;
							case "middle":
							case "center":
							default:		offset = round((paneLen - togLen) / 2); // 'default' catches typos
						}
					}
					else { // togAlign = number
						var x = parseInt(togAlign, 10); //
						if (togAlign >= 0) offset = x;
						else offset = paneLen - togLen + x; // NOTE: x is negative!
					}
				}

				if (dir === "horz") { // north/south
					var width = cssW($T, togLen);
					$T.css({
						width:	width  // account for borders & padding
					,	height:	cssH($T, spacing) // ditto
					,	left:	offset // TODO: VERIFY that toggler  positions correctly for ALL values
					,	top:	0
					});
					// CENTER the toggler content SPAN
					$T.children(".content").each(function(){
						$TC = $(this);
						$TC.css("marginLeft", round((width-$TC.outerWidth())/2)); // could be negative
					});
				}
				else { // east/west
					var height = cssH($T, togLen);
					$T.css({
						height:	height // account for borders & padding
					,	width:	cssW($T, spacing) // ditto
					,	top:	offset // POSITION the toggler
					,	left:	0
					});
					// CENTER the toggler content SPAN
					$T.children(".content").each(function(){
						$TC = $(this);
						$TC.css("marginTop", round((height-$TC.outerHeight())/2)); // could be negative
					});
				}

				// remove ALL hover classes
				removeHover( 0, $T );
			}

			// DONE measuring and sizing this resizer/toggler, so can be 'hidden' now
			if (!state.initialized && (o.initHidden || s.isHidden)) {
				$R.hide();
				if ($T) $T.hide();
			}
		});
	}


	/**
	* @param {(string|Object)}	evt_or_pane
	*/
,	enableClosable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$T	= $Ts[pane]
		,	o	= options[pane]
		;
		if (!$T) return;
		o.closable = true;
		$T	.bind("click."+ sID, function(evt){ evt.stopPropagation(); toggle(pane); })
			.css("visibility", "visible")
			.css("cursor", "pointer")
			.attr("title", state[pane].isClosed ? o.tips.Open : o.tips.Close) // may be blank
			.show();
	}
	/**
	* @param {(string|Object)}	evt_or_pane
	* @param {boolean=}			[hide=false]
	*/
,	disableClosable = function (evt_or_pane, hide) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$T	= $Ts[pane]
		;
		if (!$T) return;
		options[pane].closable = false;
		// is closable is disable, then pane MUST be open!
		if (state[pane].isClosed) open(pane, false, true);
		$T	.unbind("."+ sID)
			.css("visibility", hide ? "hidden" : "visible") // instead of hide(), which creates logic issues
			.css("cursor", "default")
			.attr("title", "");
	}


	/**
	* @param {(string|Object)}	evt_or_pane
	*/
,	enableSlidable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$R	= $Rs[pane]
		;
		if (!$R || !$R.data('draggable')) return;
		options[pane].slidable = true; 
		if (state[pane].isClosed)
			bindStartSlidingEvents(pane, true);
	}
	/**
	* @param {(string|Object)}	evt_or_pane
	*/
,	disableSlidable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$R	= $Rs[pane]
		;
		if (!$R) return;
		options[pane].slidable = false; 
		if (state[pane].isSliding)
			close(pane, false, true);
		else {
			bindStartSlidingEvents(pane, false);
			$R	.css("cursor", "default")
				.attr("title", "");
			removeHover(null, $R[0]); // in case currently hovered
		}
	}


	/**
	* @param {(string|Object)}	evt_or_pane
	*/
,	enableResizable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$R	= $Rs[pane]
		,	o	= options[pane]
		;
		if (!$R || !$R.data('draggable')) return;
		o.resizable = true; 
		$R.draggable("enable");
		if (!state[pane].isClosed)
			$R	.css("cursor", o.resizerCursor)
			 	.attr("title", o.tips.Resize);
	}
	/**
	* @param {(string|Object)}	evt_or_pane
	*/
,	disableResizable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$R	= $Rs[pane]
		;
		if (!$R || !$R.data('draggable')) return;
		options[pane].resizable = false; 
		$R	.draggable("disable")
			.css("cursor", "default")
			.attr("title", "");
		removeHover(null, $R[0]); // in case currently hovered
	}


	/**
	* Move a pane from source-side (eg, west) to target-side (eg, east)
	* If pane exists on target-side, move that to source-side, ie, 'swap' the panes
	*
	* @param {(string|Object)}	evt_or_pane1	The pane/edge being swapped
	* @param {string}			pane2			ditto
	*/
,	swapPanes = function (evt_or_pane1, pane2) {
		if (!isInitialized()) return;
		var pane1 = evtPane.call(this, evt_or_pane1);
		// change state.edge NOW so callbacks can know where pane is headed...
		state[pane1].edge = pane2;
		state[pane2].edge = pane1;
		// run these even if NOT state.initialized
		if (false === _runCallbacks("onswap_start", pane1)
		 ||	false === _runCallbacks("onswap_start", pane2)
		) {
			state[pane1].edge = pane1; // reset
			state[pane2].edge = pane2;
			return;
		}

		var
			oPane1	= copy( pane1 )
		,	oPane2	= copy( pane2 )
		,	sizes	= {}
		;
		sizes[pane1] = oPane1 ? oPane1.state.size : 0;
		sizes[pane2] = oPane2 ? oPane2.state.size : 0;

		// clear pointers & state
		$Ps[pane1] = false; 
		$Ps[pane2] = false;
		state[pane1] = {};
		state[pane2] = {};
		
		// ALWAYS remove the resizer & toggler elements
		if ($Ts[pane1]) $Ts[pane1].remove();
		if ($Ts[pane2]) $Ts[pane2].remove();
		if ($Rs[pane1]) $Rs[pane1].remove();
		if ($Rs[pane2]) $Rs[pane2].remove();
		$Rs[pane1] = $Rs[pane2] = $Ts[pane1] = $Ts[pane2] = false;

		// transfer element pointers and data to NEW Layout keys
		move( oPane1, pane2 );
		move( oPane2, pane1 );

		// cleanup objects
		oPane1 = oPane2 = sizes = null;

		// make panes 'visible' again
		if ($Ps[pane1]) $Ps[pane1].css(_c.visible);
		if ($Ps[pane2]) $Ps[pane2].css(_c.visible);

		// fix any size discrepancies caused by swap
		resizeAll();

		// run these even if NOT state.initialized
		_runCallbacks("onswap_end", pane1);
		_runCallbacks("onswap_end", pane2);

		return;

		function copy (n) { // n = pane
			var
				$P	= $Ps[n]
			,	$C	= $Cs[n]
			;
			return !$P ? false : {
				pane:		n
			,	P:			$P ? $P[0] : false
			,	C:			$C ? $C[0] : false
			,	state:		$.extend(true, {}, state[n])
			,	options:	$.extend(true, {}, options[n])
			}
		};

		function move (oPane, pane) {
			if (!oPane) return;
			var
				P		= oPane.P
			,	C		= oPane.C
			,	oldPane = oPane.pane
			,	c		= _c[pane]
			//	save pane-options that should be retained
			,	s		= $.extend(true, {}, state[pane])
			,	o		= options[pane]
			//	RETAIN side-specific FX Settings - more below
			,	fx		= { resizerCursor: o.resizerCursor }
			,	re, size, pos
			;
			$.each("fxName,fxSpeed,fxSettings".split(","), function (i, k) {
				fx[k +"_open"]  = o[k +"_open"];
				fx[k +"_close"] = o[k +"_close"];
				fx[k +"_size"]  = o[k +"_size"];
			});

			// update object pointers and attributes
			$Ps[pane] = $(P)
				.data({
					layoutPane:		Instance[pane]	// NEW pointer to pane-alias-object
				,	layoutEdge:		pane
				})
				.css(_c.hidden)
				.css(c.cssReq)
			;
			$Cs[pane] = C ? $(C) : false;

			// set options and state
			options[pane]	= $.extend(true, {}, oPane.options, fx);
			state[pane]		= $.extend(true, {}, oPane.state);

			// change classNames on the pane, eg: ui-layout-pane-east ==> ui-layout-pane-west
			re = new RegExp(o.paneClass +"-"+ oldPane, "g");
			P.className = P.className.replace(re, o.paneClass +"-"+ pane);

			// ALWAYS regenerate the resizer & toggler elements
			initHandles(pane); // create the required resizer & toggler

			// if moving to different orientation, then keep 'target' pane size
			if (c.dir != _c[oldPane].dir) {
				size = sizes[pane] || 0;
				setSizeLimits(pane); // update pane-state
				size = max(size, state[pane].minSize);
				// use manualSizePane to disable autoResize - not useful after panes are swapped
				manualSizePane(pane, size, true, true); // true/true = skipCallback/noAnimation
			}
			else // move the resizer here
				$Rs[pane].css(c.side, sC.inset[c.side] + (state[pane].isVisible ? getPaneSize(pane) : 0));


			// ADD CLASSNAMES & SLIDE-BINDINGS
			if (oPane.state.isVisible && !s.isVisible)
				setAsOpen(pane, true); // true = skipCallback
			else {
				setAsClosed(pane);
				bindStartSlidingEvents(pane, true); // will enable events IF option is set
			}

			// DESTROY the object
			oPane = null;
		};
	}


	/**
	* INTERNAL method to sync pin-buttons when pane is opened or closed
	* Unpinned means the pane is 'sliding' - ie, over-top of the adjacent panes
	*
	* @see  open(), setAsOpen(), setAsClosed()
	* @param {string}	pane   These are the params returned to callbacks by layout()
	* @param {boolean}	doPin  True means set the pin 'down', False means 'up'
	*/
,	syncPinBtns = function (pane, doPin) {
		if ($.layout.plugins.buttons)
			$.each(state[pane].pins, function (i, selector) {
				$.layout.buttons.setPinState(Instance, $(selector), pane, doPin);
			});
	}

;	// END var DECLARATIONS

	/**
	* Capture keys when enableCursorHotkey - toggle pane if hotkey pressed
	*
	* @see  document.keydown()
	*/
	function keyDown (evt) {
		if (!evt) return true;
		var code = evt.keyCode;
		if (code < 33) return true; // ignore special keys: ENTER, TAB, etc

		var
			PANE = {
				38: "north" // Up Cursor	- $.ui.keyCode.UP
			,	40: "south" // Down Cursor	- $.ui.keyCode.DOWN
			,	37: "west"  // Left Cursor	- $.ui.keyCode.LEFT
			,	39: "east"  // Right Cursor	- $.ui.keyCode.RIGHT
			}
		,	ALT		= evt.altKey // no worky!
		,	SHIFT	= evt.shiftKey
		,	CTRL	= evt.ctrlKey
		,	CURSOR	= (CTRL && code >= 37 && code <= 40)
		,	o, k, m, pane
		;

		if (CURSOR && options[PANE[code]].enableCursorHotkey) // valid cursor-hotkey
			pane = PANE[code];
		else if (CTRL || SHIFT) // check to see if this matches a custom-hotkey
			$.each(_c.borderPanes, function (i, p) { // loop each pane to check its hotkey
				o = options[p];
				k = o.customHotkey;
				m = o.customHotkeyModifier; // if missing or invalid, treated as "CTRL+SHIFT"
				if ((SHIFT && m=="SHIFT") || (CTRL && m=="CTRL") || (CTRL && SHIFT)) { // Modifier matches
					if (k && code === (isNaN(k) || k <= 9 ? k.toUpperCase().charCodeAt(0) : k)) { // Key matches
						pane = p;
						return false; // BREAK
					}
				}
			});

		// validate pane
		if (!pane || !$Ps[pane] || !options[pane].closable || state[pane].isHidden)
			return true;

		toggle(pane);

		evt.stopPropagation();
		evt.returnValue = false; // CANCEL key
		return false;
	};


/*
 * ######################################
 *	UTILITY METHODS
 *	called externally or by initButtons
 * ######################################
 */

	/**
	* Change/reset a pane overflow setting & zIndex to allow popups/drop-downs to work
	*
	* @param {Object=}   [el]	(optional) Can also be 'bound' to a click, mouseOver, or other event
	*/
	function allowOverflow (el) {
		if (!isInitialized()) return;
		if (this && this.tagName) el = this; // BOUND to element
		var $P;
		if (isStr(el))
			$P = $Ps[el];
		else if ($(el).data("layoutRole"))
			$P = $(el);
		else
			$(el).parents().each(function(){
				if ($(this).data("layoutRole")) {
					$P = $(this);
					return false; // BREAK
				}
			});
		if (!$P || !$P.length) return; // INVALID

		var
			pane	= $P.data("layoutEdge")
		,	s		= state[pane]
		;

		// if pane is already raised, then reset it before doing it again!
		// this would happen if allowOverflow is attached to BOTH the pane and an element 
		if (s.cssSaved)
			resetOverflow(pane); // reset previous CSS before continuing

		// if pane is raised by sliding or resizing, or its closed, then abort
		if (s.isSliding || s.isResizing || s.isClosed) {
			s.cssSaved = false;
			return;
		}

		var
			newCSS	= { zIndex: (options.zIndexes.resizer_normal + 1) }
		,	curCSS	= {}
		,	of		= $P.css("overflow")
		,	ofX		= $P.css("overflowX")
		,	ofY		= $P.css("overflowY")
		;
		// determine which, if any, overflow settings need to be changed
		if (of != "visible") {
			curCSS.overflow = of;
			newCSS.overflow = "visible";
		}
		if (ofX && !ofX.match(/(visible|auto)/)) {
			curCSS.overflowX = ofX;
			newCSS.overflowX = "visible";
		}
		if (ofY && !ofY.match(/(visible|auto)/)) {
			curCSS.overflowY = ofX;
			newCSS.overflowY = "visible";
		}

		// save the current overflow settings - even if blank!
		s.cssSaved = curCSS;

		// apply new CSS to raise zIndex and, if necessary, make overflow 'visible'
		$P.css( newCSS );

		// make sure the zIndex of all other panes is normal
		$.each(_c.allPanes, function(i, p) {
			if (p != pane) resetOverflow(p);
		});

	};
	/**
	* @param {Object=}   [el]	(optional) Can also be 'bound' to a click, mouseOver, or other event
	*/
	function resetOverflow (el) {
		if (!isInitialized()) return;
		if (this && this.tagName) el = this; // BOUND to element
		var $P;
		if (isStr(el))
			$P = $Ps[el];
		else if ($(el).data("layoutRole"))
			$P = $(el);
		else
			$(el).parents().each(function(){
				if ($(this).data("layoutRole")) {
					$P = $(this);
					return false; // BREAK
				}
			});
		if (!$P || !$P.length) return; // INVALID

		var
			pane	= $P.data("layoutEdge")
		,	s		= state[pane]
		,	CSS		= s.cssSaved || {}
		;
		// reset the zIndex
		if (!s.isSliding && !s.isResizing)
			$P.css("zIndex", options.zIndexes.pane_normal);

		// reset Overflow - if necessary
		$P.css( CSS );

		// clear var
		s.cssSaved = false;
	};

/*
 * #####################
 * CREATE/RETURN LAYOUT
 * #####################
 */

	// validate that container exists
	var $N = $(this).eq(0); // FIRST matching Container element
	if (!$N.length) {
		return _log( options.errors.containerMissing );
	};

	// Users retrieve Instance of a layout with: $N.layout() OR $N.data("layout")
	// return the Instance-pointer if layout has already been initialized
	if ($N.data("layoutContainer") && $N.data("layout"))
		return $N.data("layout"); // cached pointer

	// init global vars
	var 
		$Ps	= {}	// Panes x5		- set in initPanes()
	,	$Cs	= {}	// Content x5	- set in initPanes()
	,	$Rs	= {}	// Resizers x4	- set in initHandles()
	,	$Ts	= {}	// Togglers x4	- set in initHandles()
	,	$Ms	= $([])	// Masks - up to 2 masks per pane (IFRAME + DIV)
	//	aliases for code brevity
	,	sC	= state.container // alias for easy access to 'container dimensions'
	,	sID	= state.id // alias for unique layout ID/namespace - eg: "layout435"
	;

	// create Instance object to expose data & option Properties, and primary action Methods
	var Instance = {
	//	layout data
		options:			options			// property - options hash
	,	state:				state			// property - dimensions hash
	//	object pointers
	,	container:			$N				// property - object pointers for layout container
	,	panes:				$Ps				// property - object pointers for ALL Panes: panes.north, panes.center
	,	contents:			$Cs				// property - object pointers for ALL Content: contents.north, contents.center
	,	resizers:			$Rs				// property - object pointers for ALL Resizers, eg: resizers.north
	,	togglers:			$Ts				// property - object pointers for ALL Togglers, eg: togglers.north
	//	border-pane open/close
	,	hide:				hide			// method - ditto
	,	show:				show			// method - ditto
	,	toggle:				toggle			// method - pass a 'pane' ("north", "west", etc)
	,	open:				open			// method - ditto
	,	close:				close			// method - ditto
	,	slideOpen:			slideOpen		// method - ditto
	,	slideClose:			slideClose		// method - ditto
	,	slideToggle:		slideToggle		// method - ditto
	//	pane actions
	,	setSizeLimits:		setSizeLimits	// method - pass a 'pane' - update state min/max data
	,	_sizePane:			sizePane		// method -intended for user by plugins only!
	,	sizePane:			manualSizePane	// method - pass a 'pane' AND an 'outer-size' in pixels or percent, or 'auto'
	,	sizeContent:		sizeContent		// method - pass a 'pane'
	,	swapPanes:			swapPanes		// method - pass TWO 'panes' - will swap them
	,	showMasks:			showMasks		// method - pass a 'pane' OR list of panes - default = all panes with mask option set
	,	hideMasks:			hideMasks		// method - ditto'
	//	pane element methods
	,	initContent:		initContent		// method - ditto
	,	addPane:			addPane			// method - pass a 'pane'
	,	removePane:			removePane		// method - pass a 'pane' to remove from layout, add 'true' to delete the pane-elem
	,	createChildren:		createChildren	// method - pass a 'pane' and (optional) layout-options (OVERRIDES options[pane].children
	,	refreshChildren:	refreshChildren	// method - pass a 'pane' and a layout-instance
	//	special pane option setting
	,	enableClosable:		enableClosable	// method - pass a 'pane'
	,	disableClosable:	disableClosable	// method - ditto
	,	enableSlidable:		enableSlidable	// method - ditto
	,	disableSlidable:	disableSlidable	// method - ditto
	,	enableResizable:	enableResizable	// method - ditto
	,	disableResizable:	disableResizable// method - ditto
	//	utility methods for panes
	,	allowOverflow:		allowOverflow	// utility - pass calling element (this)
	,	resetOverflow:		resetOverflow	// utility - ditto
	//	layout control
	,	destroy:			destroy			// method - no parameters
	,	initPanes:			isInitialized	// method - no parameters
	,	resizeAll:			resizeAll		// method - no parameters
	//	callback triggering
	,	runCallbacks:		_runCallbacks	// method - pass evtName & pane (if a pane-event), eg: trigger("onopen", "west")
	//	alias collections of options, state and children - created in addPane and extended elsewhere
	,	hasParentLayout:	false			// set by initContainer()
	,	children:			children		// pointers to child-layouts, eg: Instance.children.west.layoutName
	,	north:				false			// alias group: { name: pane, pane: $Ps[pane], options: options[pane], state: state[pane], children: children[pane] }
	,	south:				false			// ditto
	,	west:				false			// ditto
	,	east:				false			// ditto
	,	center:				false			// ditto
	};

	// create the border layout NOW
	if (_create() === 'cancel') // onload_start callback returned false to CANCEL layout creation
		return null;
	else // true OR false -- if layout-elements did NOT init (hidden or do not exist), can auto-init later
		return Instance; // return the Instance object

}


})( jQuery );
// END Layout - keep internal vars internal!



// START Plugins - shared wrapper, no global vars
(function ($) {


/**
 * jquery.layout.state 1.0
 * $Date: 2011-07-16 08:00:00 (Sat, 16 July 2011) $
 *
 * Copyright (c) 2012 
 *   Kevin Dalman (http://allpro.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * @requires: UI Layout 1.3.0.rc30.1 or higher
 * @requires: $.ui.cookie (above)
 *
 * @see: http://groups.google.com/group/jquery-ui-layout
 */
/*
 *	State-management options stored in options.stateManagement, which includes a .cookie hash
 *	Default options saves ALL KEYS for ALL PANES, ie: pane.size, pane.isClosed, pane.isHidden
 *
 *	// STATE/COOKIE OPTIONS
 *	@example $(el).layout({
				stateManagement: {
					enabled:	true
				,	stateKeys:	"east.size,west.size,east.isClosed,west.isClosed"
				,	cookie:		{ name: "appLayout", path: "/" }
				}
			})
 *	@example $(el).layout({ stateManagement__enabled: true }) // enable auto-state-management using cookies
 *	@example $(el).layout({ stateManagement__cookie: { name: "appLayout", path: "/" } })
 *	@example $(el).layout({ stateManagement__cookie__name: "appLayout", stateManagement__cookie__path: "/" })
 *
 *	// STATE/COOKIE METHODS
 *	@example myLayout.saveCookie( "west.isClosed,north.size,south.isHidden", {expires: 7} );
 *	@example myLayout.loadCookie();
 *	@example myLayout.deleteCookie();
 *	@example var JSON = myLayout.readState();	// CURRENT Layout State
 *	@example var JSON = myLayout.readCookie();	// SAVED Layout State (from cookie)
 *	@example var JSON = myLayout.state.stateData;	// LAST LOADED Layout State (cookie saved in layout.state hash)
 *
 *	CUSTOM STATE-MANAGEMENT (eg, saved in a database)
 *	@example var JSON = myLayout.readState( "west.isClosed,north.size,south.isHidden" );
 *	@example myLayout.loadState( JSON );
 */

/**
 *	UI COOKIE UTILITY
 *
 *	A $.cookie OR $.ui.cookie namespace *should be standard*, but until then...
 *	This creates $.ui.cookie so Layout does not need the cookie.jquery.js plugin
 *	NOTE: This utility is REQUIRED by the layout.state plugin
 *
 *	Cookie methods in Layout are created as part of State Management 
 */
if (!$.ui) $.ui = {};
$.ui.cookie = {

	// cookieEnabled is not in DOM specs, but DOES works in all browsers,including IE6
	acceptsCookies: !!navigator.cookieEnabled

,	read: function (name) {
		var	c		= document.cookie
		,	cs		= c ? c.split(';') : []
		,	pair	// loop var
		;
		for (var i=0, n=cs.length; i < n; i++) {
			pair = $.trim(cs[i]).split('='); // name=value pair
			if (pair[0] == name) // found the layout cookie
				return decodeURIComponent(pair[1]);
		}
		return null;
	}

,	write: function (name, val, cookieOpts) {
		var	params	= ""
		,	date	= ""
		,	clear	= false
		,	o		= cookieOpts || {}
		,	x		= o.expires  || null
		,	t		= $.type(x)
		;
		if (t === "date")
			date = x;
		else if (t === "string" && x > 0) {
			x = parseInt(x,10);
			t = "number";
		}
		if (t === "number") {
			date = new Date();
			if (x > 0)
				date.setDate(date.getDate() + x);
			else {
				date.setFullYear(1970);
				clear = true;
			}
		}
		if (date)		params += ";expires="+ date.toUTCString();
		if (o.path)		params += ";path="+ o.path;
		if (o.domain)	params += ";domain="+ o.domain;
		if (o.secure)	params += ";secure";
		document.cookie = name +"="+ (clear ? "" : encodeURIComponent( val )) + params; // write or clear cookie
	}

,	clear: function (name) {
		$.ui.cookie.write(name, "", {expires: -1});
	}

};
// if cookie.jquery.js is not loaded, create an alias to replicate it
// this may be useful to other plugins or code dependent on that plugin
if (!$.cookie) $.cookie = function (k, v, o) {
	var C = $.ui.cookie;
	if (v === null)
		C.clear(k);
	else if (v === undefined)
		return C.read(k);
	else
		C.write(k, v, o);
};


// tell Layout that the state plugin is available
$.layout.plugins.stateManagement = true;

//	Add State-Management options to layout.defaults
$.layout.config.optionRootKeys.push("stateManagement");
$.layout.defaults.stateManagement = {
	enabled:		false	// true = enable state-management, even if not using cookies
,	autoSave:		true	// Save a state-cookie when page exits?
,	autoLoad:		true	// Load the state-cookie when Layout inits?
,	animateLoad:	true	// animate panes when loading state into an active layout
,	includeChildren: true	// recurse into child layouts to include their state as well
	// List state-data to save - must be pane-specific
,	stateKeys:	"north.size,south.size,east.size,west.size,"+
				"north.isClosed,south.isClosed,east.isClosed,west.isClosed,"+
				"north.isHidden,south.isHidden,east.isHidden,west.isHidden"
,	cookie: {
		name:	""	// If not specified, will use Layout.name, else just "Layout"
	,	domain:	""	// blank = current domain
	,	path:	""	// blank = current page, "/" = entire website
	,	expires: ""	// 'days' to keep cookie - leave blank for 'session cookie'
	,	secure:	false
	}
};
// Set stateManagement as a layout-option, NOT a pane-option
$.layout.optionsMap.layout.push("stateManagement");

/*
 *	State Management methods
 */
$.layout.state = {

	/**
	 * Get the current layout state and save it to a cookie
	 *
	 * myLayout.saveCookie( keys, cookieOpts )
	 *
	 * @param {Object}			inst
	 * @param {(string|Array)=}	keys
	 * @param {Object=}			cookieOpts
	 */
	saveCookie: function (inst, keys, cookieOpts) {
		var o	= inst.options
		,	sm	= o.stateManagement
		,	oC	= $.extend(true, {}, sm.cookie, cookieOpts || null)
		,	data = inst.state.stateData = inst.readState( keys || sm.stateKeys ) // read current panes-state
		;
		$.ui.cookie.write( oC.name || o.name || "Layout", $.layout.state.encodeJSON(data), oC );
		return $.extend(true, {}, data); // return COPY of state.stateData data
	}

	/**
	 * Remove the state cookie
	 *
	 * @param {Object}	inst
	 */
,	deleteCookie: function (inst) {
		var o = inst.options;
		$.ui.cookie.clear( o.stateManagement.cookie.name || o.name || "Layout" );
	}

	/**
	 * Read & return data from the cookie - as JSON
	 *
	 * @param {Object}	inst
	 */
,	readCookie: function (inst) {
		var o = inst.options;
		var c = $.ui.cookie.read( o.stateManagement.cookie.name || o.name || "Layout" );
		// convert cookie string back to a hash and return it
		return c ? $.layout.state.decodeJSON(c) : {};
	}

	/**
	 * Get data from the cookie and USE IT to loadState
	 *
	 * @param {Object}	inst
	 */
,	loadCookie: function (inst) {
		var c = $.layout.state.readCookie(inst); // READ the cookie
		if (c) {
			inst.state.stateData = $.extend(true, {}, c); // SET state.stateData
			inst.loadState(c); // LOAD the retrieved state
		}
		return c;
	}

	/**
	 * Update layout options from the cookie, if one exists
	 *
	 * @param {Object}		inst
	 * @param {Object=}		stateData
	 * @param {boolean=}	animate
	 */
,	loadState: function (inst, data, opts) {
		if (!$.isPlainObject( data ) || $.isEmptyObject( data )) return;

		// normalize data & cache in the state object
		data = inst.state.stateData = $.layout.transformData( data ); // panes = default subkey

		// add missing/default state-restore options
		var smo = inst.options.stateManagement;
		opts = $.extend({
			animateLoad:		false //smo.animateLoad
		,	includeChildren:	smo.includeChildren
		}, opts );

		if (!inst.state.initialized) {
			/*
			 *	layout NOT initialized, so just update its options
			 */
			// MUST remove pane.children keys before applying to options
			// use a copy so we don't remove keys from original data
			var o = $.extend(true, {}, data);
			//delete o.center; // center has no state-data - only children
			$.each($.layout.config.allPanes, function (idx, pane) {
				if (o[pane]) delete o[pane].children;		   
			 });
			// update CURRENT layout-options with saved state data
			$.extend(true, inst.options, o);
		}
		else {
			/*
			 *	layout already initialized, so modify layout's configuration
			 */
			var noAnimate = !opts.animateLoad
			,	o, c, h, state, open
			;
			$.each($.layout.config.borderPanes, function (idx, pane) {
				o = data[ pane ];
				if (!$.isPlainObject( o )) return; // no key, skip pane

				s	= o.size;
				c	= o.initClosed;
				h	= o.initHidden;
				ar	= o.autoResize
				state	= inst.state[pane];
				open	= state.isVisible;

				// reset autoResize
				if (ar)
					state.autoResize = ar;
				// resize BEFORE opening
				if (!open)
					inst._sizePane(pane, s, false, false, false); // false=skipCallback/noAnimation/forceResize
				// open/close as necessary - DO NOT CHANGE THIS ORDER!
				if (h === true)			inst.hide(pane, noAnimate);
				else if (c === true)	inst.close(pane, false, noAnimate);
				else if (c === false)	inst.open (pane, false, noAnimate);
				else if (h === false)	inst.show (pane, false, noAnimate);
				// resize AFTER any other actions
				if (open)
					inst._sizePane(pane, s, false, false, noAnimate); // animate resize if option passed
			});

			/*
			 *	RECURSE INTO CHILD-LAYOUTS
			 */
			if (opts.includeChildren) {
				var paneStateChildren, childState;
				$.each(inst.children, function (pane, paneChildren) {
					paneStateChildren = data[pane] ? data[pane].children : 0;
					if (paneStateChildren && paneChildren) {
						$.each(paneChildren, function (stateKey, child) {
							childState = paneStateChildren[stateKey];
							if (child && childState)
								child.loadState( childState );
						});
					}
				});
			}
		}
	}

	/**
	 * Get the *current layout state* and return it as a hash
	 *
	 * @param {Object=}		inst	// Layout instance to get state for
	 * @param {object=}		[opts]	// State-Managements override options
	 */
,	readState: function (inst, opts) {
		// backward compatility
		if ($.type(opts) === 'string') opts = { keys: opts };
		if (!opts) opts = {};
		var	sm		= inst.options.stateManagement
		,	ic		= opts.includeChildren
		,	recurse	= ic !== undefined ? ic : sm.includeChildren
		,	keys	= opts.stateKeys || sm.stateKeys
		,	alt		= { isClosed: 'initClosed', isHidden: 'initHidden' }
		,	state	= inst.state
		,	panes	= $.layout.config.allPanes
		,	data	= {}
		,	pair, pane, key, val
		,	ps, pC, child, array, count, branch
		;
		if ($.isArray(keys)) keys = keys.join(",");
		// convert keys to an array and change delimiters from '__' to '.'
		keys = keys.replace(/__/g, ".").split(',');
		// loop keys and create a data hash
		for (var i=0, n=keys.length; i < n; i++) {
			pair = keys[i].split(".");
			pane = pair[0];
			key  = pair[1];
			if ($.inArray(pane, panes) < 0) continue; // bad pane!
			val = state[ pane ][ key ];
			if (val == undefined) continue;
			if (key=="isClosed" && state[pane]["isSliding"])
				val = true; // if sliding, then *really* isClosed
			( data[pane] || (data[pane]={}) )[ alt[key] ? alt[key] : key ] = val;
		}

		// recurse into the child-layouts for each pane
		if (recurse) {
			$.each(panes, function (idx, pane) {
				pC = inst.children[pane];
				ps = state.stateData[pane];
				if ($.isPlainObject( pC ) && !$.isEmptyObject( pC )) {
					// ensure a key exists for this 'pane', eg: branch = data.center
					branch = data[pane] || (data[pane] = {});
					if (!branch.children) branch.children = {};
					$.each( pC, function (key, child) {
						// ONLY read state from an initialize layout
						if ( child.state.initialized )
							branch.children[ key ] = $.layout.state.readState( child );
						// if we have PREVIOUS (onLoad) state for this child-layout, KEEP IT!
						else if ( ps && ps.children && ps.children[ key ] ) {
							branch.children[ key ] = $.extend(true, {}, ps.children[ key ] );
						}
					});
				}
			});
		}

		return data;
	}

	/**
	 *	Stringify a JSON hash so can save in a cookie or db-field
	 */
,	encodeJSON: function (JSON) {
		return parse(JSON);
		function parse (h) {
			var D=[], i=0, k, v, t // k = key, v = value
			,	a = $.isArray(h)
			;
			for (k in h) {
				v = h[k];
				t = typeof v;
				if (t == 'string')		// STRING - add quotes
					v = '"'+ v +'"';
				else if (t == 'object')	// SUB-KEY - recurse into it
					v = parse(v);
				D[i++] = (!a ? '"'+ k +'":' : '') + v;
			}
			return (a ? '[' : '{') + D.join(',') + (a ? ']' : '}');
		};
	}

	/**
	 *	Convert stringified JSON back to a hash object
	 *	@see		$.parseJSON(), adding in jQuery 1.4.1
	 */
,	decodeJSON: function (str) {
		try { return $.parseJSON ? $.parseJSON(str) : window["eval"]("("+ str +")") || {}; }
		catch (e) { return {}; }
	}


,	_create: function (inst) {
		var _	= $.layout.state
		,	o	= inst.options
		,	sm	= o.stateManagement
		;
		//	ADD State-Management plugin methods to inst
		 $.extend( inst, {
		//	readCookie - update options from cookie - returns hash of cookie data
			readCookie:		function () { return _.readCookie(inst); }
		//	deleteCookie
		,	deleteCookie:	function () { _.deleteCookie(inst); }
		//	saveCookie - optionally pass keys-list and cookie-options (hash)
		,	saveCookie:		function (keys, cookieOpts) { return _.saveCookie(inst, keys, cookieOpts); }
		//	loadCookie - readCookie and use to loadState() - returns hash of cookie data
		,	loadCookie:		function () { return _.loadCookie(inst); }
		//	loadState - pass a hash of state to use to update options
		,	loadState:		function (stateData, opts) { _.loadState(inst, stateData, opts); }
		//	readState - returns hash of current layout-state
		,	readState:		function (keys) { return _.readState(inst, keys); }
		//	add JSON utility methods too...
		,	encodeJSON:		_.encodeJSON
		,	decodeJSON:		_.decodeJSON
		});

		// init state.stateData key, even if plugin is initially disabled
		inst.state.stateData = {};

		// autoLoad MUST BE one of: data-array, data-hash, callback-function, or TRUE
		if ( !sm.autoLoad ) return;

		//	When state-data exists in the autoLoad key USE IT,
		//	even if stateManagement.enabled == false
		if ($.isPlainObject( sm.autoLoad )) {
			if (!$.isEmptyObject( sm.autoLoad )) {
				inst.loadState( sm.autoLoad );
			}
		}
		else if ( sm.enabled ) {
			// update the options from cookie or callback
			// if options is a function, call it to get stateData
			if ($.isFunction( sm.autoLoad )) {
				var d = {};
				try {
					d = sm.autoLoad( inst, inst.state, inst.options, inst.options.name || '' ); // try to get data from fn
				} catch (e) {}
				if (d && $.isPlainObject( d ) && !$.isEmptyObject( d ))
					inst.loadState(d);
			}
			else // any other truthy value will trigger loadCookie
				inst.loadCookie();
		}
	}

,	_unload: function (inst) {
		var sm = inst.options.stateManagement;
		if (sm.enabled && sm.autoSave) {
			// if options is a function, call it to save the stateData
			if ($.isFunction( sm.autoSave )) {
				try {
					sm.autoSave( inst, inst.state, inst.options, inst.options.name || '' ); // try to get data from fn
				} catch (e) {}
			}
			else // any truthy value will trigger saveCookie
				inst.saveCookie();
		}
	}

};

// add state initialization method to Layout's onCreate array of functions
$.layout.onCreate.push( $.layout.state._create );
$.layout.onUnload.push( $.layout.state._unload );




/**
 * jquery.layout.buttons 1.0
 * $Date: 2011-07-16 08:00:00 (Sat, 16 July 2011) $
 *
 * Copyright (c) 2012 
 *   Kevin Dalman (http://allpro.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * @requires: UI Layout 1.3.0.rc30.1 or higher
 *
 * @see: http://groups.google.com/group/jquery-ui-layout
 *
 * Docs: [ to come ]
 * Tips: [ to come ]
 */

// tell Layout that the state plugin is available
$.layout.plugins.buttons = true;

//	Add buttons options to layout.defaults
$.layout.defaults.autoBindCustomButtons = false;
// Specify autoBindCustomButtons as a layout-option, NOT a pane-option
$.layout.optionsMap.layout.push("autoBindCustomButtons");

/*
 *	Button methods
 */
$.layout.buttons = {

	/**
	* Searches for .ui-layout-button-xxx elements and auto-binds them as layout-buttons
	*
	* @see  _create()
	*
	* @param  {Object}		inst	Layout Instance object
	*/
	init: function (inst) {
		var pre		= "ui-layout-button-"
		,	layout	= inst.options.name || ""
		,	name;
		$.each("toggle,open,close,pin,toggle-slide,open-slide".split(","), function (i, action) {
			$.each($.layout.config.borderPanes, function (ii, pane) {
				$("."+pre+action+"-"+pane).each(function(){
					// if button was previously 'bound', data.layoutName was set, but is blank if layout has no 'name'
					name = $(this).data("layoutName") || $(this).attr("layoutName");
					if (name == undefined || name === layout)
						inst.bindButton(this, action, pane);
				});
			});
		});
	}

	/**
	* Helper function to validate params received by addButton utilities
	*
	* Two classes are added to the element, based on the buttonClass...
	* The type of button is appended to create the 2nd className:
	*  - ui-layout-button-pin		// action btnClass
	*  - ui-layout-button-pin-west	// action btnClass + pane
	*  - ui-layout-button-toggle
	*  - ui-layout-button-open
	*  - ui-layout-button-close
	*
	* @param {Object}			inst		Layout Instance object
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}   		pane 		Name of the pane the button is for: 'north', 'south', etc.
	*
	* @return {Array.<Object>}	If both params valid, the element matching 'selector' in a jQuery wrapper - otherwise returns null
	*/
,	get: function (inst, selector, pane, action) {
		var $E	= $(selector)
		,	o	= inst.options
		,	err	= o.errors.addButtonError
		;
		if (!$E.length) { // element not found
			$.layout.msg(err +" "+ o.errors.selector +": "+ selector, true);
		}
		else if ($.inArray(pane, $.layout.config.borderPanes) < 0) { // invalid 'pane' sepecified
			$.layout.msg(err +" "+ o.errors.pane +": "+ pane, true);
			$E = $("");  // NO BUTTON
		}
		else { // VALID
			var btn = o[pane].buttonClass +"-"+ action;
			$E	.addClass( btn +" "+ btn +"-"+ pane )
				.data("layoutName", o.name); // add layout identifier - even if blank!
		}
		return $E;
	}


	/**
	* NEW syntax for binding layout-buttons - will eventually replace addToggle, addOpen, etc.
	*
	* @param {Object}			inst		Layout Instance object
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}			action
	* @param {string}			pane
	*/
,	bind: function (inst, selector, action, pane) {
		var _ = $.layout.buttons;
		switch (action.toLowerCase()) {
			case "toggle":			_.addToggle	(inst, selector, pane); break;	
			case "open":			_.addOpen	(inst, selector, pane); break;
			case "close":			_.addClose	(inst, selector, pane); break;
			case "pin":				_.addPin	(inst, selector, pane); break;
			case "toggle-slide":	_.addToggle	(inst, selector, pane, true); break;	
			case "open-slide":		_.addOpen	(inst, selector, pane, true); break;
		}
		return inst;
	}

	/**
	* Add a custom Toggler button for a pane
	*
	* @param {Object}			inst		Layout Instance object
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}  			pane 		Name of the pane the button is for: 'north', 'south', etc.
	* @param {boolean=}			slide 		true = slide-open, false = pin-open
	*/
,	addToggle: function (inst, selector, pane, slide) {
		$.layout.buttons.get(inst, selector, pane, "toggle")
			.click(function(evt){
				inst.toggle(pane, !!slide);
				evt.stopPropagation();
			});
		return inst;
	}

	/**
	* Add a custom Open button for a pane
	*
	* @param {Object}			inst		Layout Instance object
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}			pane 		Name of the pane the button is for: 'north', 'south', etc.
	* @param {boolean=}			slide 		true = slide-open, false = pin-open
	*/
,	addOpen: function (inst, selector, pane, slide) {
		$.layout.buttons.get(inst, selector, pane, "open")
			.attr("title", inst.options[pane].tips.Open)
			.click(function (evt) {
				inst.open(pane, !!slide);
				evt.stopPropagation();
			});
		return inst;
	}

	/**
	* Add a custom Close button for a pane
	*
	* @param {Object}			inst		Layout Instance object
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}   		pane 		Name of the pane the button is for: 'north', 'south', etc.
	*/
,	addClose: function (inst, selector, pane) {
		$.layout.buttons.get(inst, selector, pane, "close")
			.attr("title", inst.options[pane].tips.Close)
			.click(function (evt) {
				inst.close(pane);
				evt.stopPropagation();
			});
		return inst;
	}

	/**
	* Add a custom Pin button for a pane
	*
	* Four classes are added to the element, based on the paneClass for the associated pane...
	* Assuming the default paneClass and the pin is 'up', these classes are added for a west-pane pin:
	*  - ui-layout-pane-pin
	*  - ui-layout-pane-west-pin
	*  - ui-layout-pane-pin-up
	*  - ui-layout-pane-west-pin-up
	*
	* @param {Object}			inst		Layout Instance object
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}   		pane 		Name of the pane the pin is for: 'north', 'south', etc.
	*/
,	addPin: function (inst, selector, pane) {
		var	_	= $.layout.buttons
		,	$E	= _.get(inst, selector, pane, "pin");
		if ($E.length) {
			var s = inst.state[pane];
			$E.click(function (evt) {
				_.setPinState(inst, $(this), pane, (s.isSliding || s.isClosed));
				if (s.isSliding || s.isClosed) inst.open( pane ); // change from sliding to open
				else inst.close( pane ); // slide-closed
				evt.stopPropagation();
			});
			// add up/down pin attributes and classes
			_.setPinState(inst, $E, pane, (!s.isClosed && !s.isSliding));
			// add this pin to the pane data so we can 'sync it' automatically
			// PANE.pins key is an array so we can store multiple pins for each pane
			s.pins.push( selector ); // just save the selector string
		}
		return inst;
	}

	/**
	* Change the class of the pin button to make it look 'up' or 'down'
	*
	* @see  addPin(), syncPins()
	*
	* @param {Object}			inst	Layout Instance object
	* @param {Array.<Object>}	$Pin	The pin-span element in a jQuery wrapper
	* @param {string}			pane	These are the params returned to callbacks by layout()
	* @param {boolean}			doPin	true = set the pin 'down', false = set it 'up'
	*/
,	setPinState: function (inst, $Pin, pane, doPin) {
		var updown = $Pin.attr("pin");
		if (updown && doPin === (updown=="down")) return; // already in correct state
		var
			o		= inst.options[pane]
		,	pin		= o.buttonClass +"-pin"
		,	side	= pin +"-"+ pane
		,	UP		= pin +"-up "+	side +"-up"
		,	DN		= pin +"-down "+side +"-down"
		;
		$Pin
			.attr("pin", doPin ? "down" : "up") // logic
			.attr("title", doPin ? o.tips.Unpin : o.tips.Pin)
			.removeClass( doPin ? UP : DN ) 
			.addClass( doPin ? DN : UP ) 
		;
	}

	/**
	* INTERNAL function to sync 'pin buttons' when pane is opened or closed
	* Unpinned means the pane is 'sliding' - ie, over-top of the adjacent panes
	*
	* @see  open(), close()
	*
	* @param {Object}			inst	Layout Instance object
	* @param {string}	pane	These are the params returned to callbacks by layout()
	* @param {boolean}	doPin	True means set the pin 'down', False means 'up'
	*/
,	syncPinBtns: function (inst, pane, doPin) {
		// REAL METHOD IS _INSIDE_ LAYOUT - THIS IS HERE JUST FOR REFERENCE
		$.each(inst.state[pane].pins, function (i, selector) {
			$.layout.buttons.setPinState(inst, $(selector), pane, doPin);
		});
	}


,	_load: function (inst) {
		var	_	= $.layout.buttons;
		// ADD Button methods to Layout Instance
		// Note: sel = jQuery Selector string
		$.extend( inst, {
			bindButton:		function (sel, action, pane) { return _.bind(inst, sel, action, pane); }
		//	DEPRECATED METHODS
		,	addToggleBtn:	function (sel, pane, slide) { return _.addToggle(inst, sel, pane, slide); }
		,	addOpenBtn:		function (sel, pane, slide) { return _.addOpen(inst, sel, pane, slide); }
		,	addCloseBtn:	function (sel, pane) { return _.addClose(inst, sel, pane); }
		,	addPinBtn:		function (sel, pane) { return _.addPin(inst, sel, pane); }
		});

		// init state array to hold pin-buttons
		for (var i=0; i<4; i++) {
			var pane = $.layout.config.borderPanes[i];
			inst.state[pane].pins = [];
		}

		// auto-init buttons onLoad if option is enabled
		if ( inst.options.autoBindCustomButtons )
			_.init(inst);
	}

,	_unload: function (inst) {
		// TODO: unbind all buttons???
	}

};

// add initialization method to Layout's onLoad array of functions
$.layout.onLoad.push(  $.layout.buttons._load );
//$.layout.onUnload.push( $.layout.buttons._unload );



/**
 * jquery.layout.browserZoom 1.0
 * $Date: 2011-12-29 08:00:00 (Thu, 29 Dec 2011) $
 *
 * Copyright (c) 2012 
 *   Kevin Dalman (http://allpro.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * @requires: UI Layout 1.3.0.rc30.1 or higher
 *
 * @see: http://groups.google.com/group/jquery-ui-layout
 *
 * TODO: Extend logic to handle other problematic zooming in browsers
 * TODO: Add hotkey/mousewheel bindings to _instantly_ respond to these zoom event
 */

// tell Layout that the plugin is available
$.layout.plugins.browserZoom = true;

$.layout.defaults.browserZoomCheckInterval = 1000;
$.layout.optionsMap.layout.push("browserZoomCheckInterval");

/*
 *	browserZoom methods
 */
$.layout.browserZoom = {

	_init: function (inst) {
		// abort if browser does not need this check
		if ($.layout.browserZoom.ratio() !== false)
			$.layout.browserZoom._setTimer(inst);
	}

,	_setTimer: function (inst) {
		// abort if layout destroyed or browser does not need this check
		if (inst.destroyed) return;
		var o	= inst.options
		,	s	= inst.state
		//	don't need check if inst has parentLayout, but check occassionally in case parent destroyed!
		//	MINIMUM 100ms interval, for performance
		,	ms	= inst.hasParentLayout ?  5000 : Math.max( o.browserZoomCheckInterval, 100 )
		;
		// set the timer
		setTimeout(function(){
			if (inst.destroyed || !o.resizeWithWindow) return;
			var d = $.layout.browserZoom.ratio();
			if (d !== s.browserZoom) {
				s.browserZoom = d;
				inst.resizeAll();
			}
			// set a NEW timeout
			$.layout.browserZoom._setTimer(inst);
		}
		,	ms );
	}

,	ratio: function () {
		var w	= window
		,	s	= screen
		,	d	= document
		,	dE	= d.documentElement || d.body
		,	b	= $.layout.browser
		,	v	= b.version
		,	r, sW, cW
		;
		// we can ignore all browsers that fire window.resize event onZoom
		if ((b.msie && v > 8)
		||	!b.msie
		) return false; // don't need to track zoom

		if (s.deviceXDPI && s.systemXDPI) // syntax compiler hack
			return calc(s.deviceXDPI, s.systemXDPI);
		// everything below is just for future reference!
		if (b.webkit && (r = d.body.getBoundingClientRect))
			return calc((r.left - r.right), d.body.offsetWidth);
		if (b.webkit && (sW = w.outerWidth))
			return calc(sW, w.innerWidth);
		if ((sW = s.width) && (cW = dE.clientWidth))
			return calc(sW, cW);
		return false; // no match, so cannot - or don't need to - track zoom

		function calc (x,y) { return (parseInt(x,10) / parseInt(y,10) * 100).toFixed(); }
	}

};
// add initialization method to Layout's onLoad array of functions
$.layout.onReady.push( $.layout.browserZoom._init );


})( jQuery );
define("uilayout", function(){});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('libs/ace_mode_highlight_rules',['require','exports','module','ace/lib/oop','ace/mode/text_highlight_rules'],function(require, exports, module) {


var oop = require("ace/lib/oop");
var TextHighlightRules = require("ace/mode/text_highlight_rules").TextHighlightRules;

var MarkdownHighlightRules = function() {

    // regexp must not have capturing parentheses
    // regexps are ordered -> the first match is used

    this.$rules = {
        "basic" : [{
            token : "constant.language.escape",
            regex : /\\[\\`*_{}\[\]()#+\-.!]/
        }, { // code span `
            token : "code",
            regex : "(`+)(.*?[^`])(\\1)"
        }, { // reference
            token : ["text", "reference", "text", "markup.underline", "description", "text"],
            regex : "^([ ]{0,3}\\[)([^\\]]+)(\\]:\\s*)([^ ]+)(\\s*(?:[\"][^\"]+[\"])?(\\s*))$"
        }, { // link by reference
            token : ["text", "description", "text", "markup.underline", "text"],
            regex : "(\\[)((?:[[^\\]]*\\]|[^\\[\\]])*)(\\][ ]?(?:\\n[ ]*)?\\[)(.*?)(\\])"
        }, { // link by url
            token : ["text", "description", "text", "markup.underline", "string", "text"],
            regex : "(\\[)"+
                    "(\\[[^\\]]*\\]|[^\\[\\]]*)"+
                    "(\\]\\([ \\t]*)"+
                    "(<?(?:(?:[^\\(]*?\\([^\\)]*?\\)\\S*?)|(?:.*?))>?)"+
                    "((?:[ \t]*\"(?:.*?)\"[ \\t]*)?)"+
                    "(\\))"
        }, { // strong ** __
            token : "strong",
            regex : "([*]{2}|[_]{2}(?=\\S))(.*?\\S[*_]*)(\\1)"
        }, { // emphasis * _
            token : "emphasis",
            regex : "([*]|[_](?=\\S))(.*?\\S[*_]*)(\\1)"
        }, { //
            token : ["text", "url", "text"],
            regex : "(<)("+
                      "(?:https?|ftp|dict):[^'\">\\s]+"+
                      "|"+
                      "(?:mailto:)?[-.\\w]+\\@[-a-z0-9]+(?:\\.[-a-z0-9]+)*\\.[a-z]+"+
                    ")(>)"
        }],

        // code block
        "allowBlock": [
            {token : ["text", "code_block"], regex : "^( {4}|\\t)(.+)", next : "allowBlock"},
            {token : "empty", regex : "", next : "start"}
        ],

        "start" : [{
            token : "empty_line",
            regex : '^$',
            next: "allowBlock"
        }, { // h1
            token: "markup.heading.multi.1",
            regex: "^=+(?=\\s*$)"
        }, { // h2
            token: "markup.heading.multi.2",
            regex: "^\\-+(?=\\s*$)"
        }, {
            token : function(value) {
                return "markup.heading." + value.length;
            },
            regex : /^#{1,6}(?=\s*[^ #]|\s+#.)/,
            next : "header"
        },
        { // Github style block
            token : "code_block",
            regex : "^```\\s*[a-zA-Z]*(?:{.*?\\})?\\s*$",
            next  : "githubblock"
        }, { // block quote
            token : "blockquote",
            regex : "^\\s*>[ ].+$",
            next  : "blockquote"
        }, { // HR * - _
            token : "constant",
            regex : "^ {0,2}(?:(?: ?\\* ?){3,}|(?: ?\\- ?){3,}|(?: ?\\_ ?){3,})\\s*$",
            next: "allowBlock"
        }, { // list
            token : "markup.list",
            regex : "^\\s{0,3}(?:[*+-]|\\d+\\.)\\s+",
            next  : "listblock-start"
        }, {
            include : "basic"
        }],
        
        "header" : [{
            regex: "$",
            next : "start"
        }, {
            include: "basic"
        }, {
            defaultToken : "markup.heading"
        } ],

        "listblock-start" : [{
            token : "checkbox",
            regex : /(?:\[[ x]\])?/,
            next  : "listblock"
        }],

        "listblock" : [ { // Lists only escape on completely blank lines.
            token : "empty_line",
            regex : "^$",
            next  : "start"
        }, { // list
            token : "markup.list",
            regex : "^\\s{0,3}(?:[*+-]|\\d+\\.)\\s+",
            next  : "listblock-start"
        }, {
            include : "basic", noEscape: true
        }, {
            defaultToken : "markup.list"
        } ],

        "blockquote" : [ { // BLockquotes only escape on blank lines.
            token : "empty_line",
            regex : "^\\s*$",
            next  : "start"
        }, {
            token : "blockquote",
            regex : ".+"
        } ],

        "githubblock" : [ {
            token : "code_block",
            regex : "^```",
            next  : "start"
        }, {
            token : "code_block",
            regex : ".+"
        } ]
    };

    this.normalizeRules();
};
oop.inherits(MarkdownHighlightRules, TextHighlightRules);

exports.MarkdownHighlightRules = MarkdownHighlightRules;
});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/mode/folding/markdown',['require','exports','module','../../lib/oop','./fold_mode','../../range'],function(require, exports, module) {


var oop = require("../../lib/oop");
var BaseFoldMode = require("./fold_mode").FoldMode;
var Range = require("../../range").Range;

var FoldMode = exports.FoldMode = function() {};
oop.inherits(FoldMode, BaseFoldMode);

(function() {
    this.foldingStartMarker = /^(?:[=-]+\s*$|#{1,6} |`{3})/;

    this.getFoldWidget = function(session, foldStyle, row) {
        var line = session.getLine(row);
        if (!this.foldingStartMarker.test(line))
            return "";

        if (line[0] == "`") {
            if (session.bgTokenizer.getState(row) == "start")
                return "end";
            return "start";
        }

        return "start";
    };

    this.getFoldWidgetRange = function(session, foldStyle, row) {
        var line = session.getLine(row);
        var startColumn = line.length;
        var maxRow = session.getLength();
        var startRow = row;
        var endRow = row;
        if (!line.match(this.foldingStartMarker))
            return;

        if (line[0] == "`") {
            if (session.bgTokenizer.getState(row) !== "start") {
                while (++row < maxRow) {
                    line = session.getLine(row);
                    if (line[0] == "`" & line.substring(0, 3) == "```")
                        break;
                }
                return new Range(startRow, startColumn, row, 0);
            } else {
                while (row -- > 0) {
                    line = session.getLine(row);
                    if (line[0] == "`" & line.substring(0, 3) == "```")
                        break;
                }
                return new Range(row, line.length, startRow, 0);
            }
        }

        var token;
        function isHeading(row) {
            token = session.getTokens(row)[0];
            return token && token.type.lastIndexOf(heading, 0) === 0;
        }

        var heading = "markup.heading";
        function getLevel() {
            var ch = token.value[0];
            if (ch == "=") return 6;
            if (ch == "-") return 5;
            return 7 - token.value.search(/[^#]/);
        }

        if (isHeading(row)) {
            var startHeadingLevel = getLevel();
            while (++row < maxRow) {
                if (!isHeading(row))
                    continue;
                var level = getLevel();
                if (level >= startHeadingLevel)
                    break;
            }

            endRow = row - (!token || ["=", "-"].indexOf(token.value[0]) == -1 ? 1 : 2);

            if (endRow > startRow) {
                while (endRow > startRow && /^\s*$/.test(session.getLine(endRow)))
                    endRow--;
            }

            if (endRow > startRow) {
                var endColumn = session.getLine(endRow).length;
                return new Range(startRow, startColumn, endRow, endColumn);
            }
        }
    };

}).call(FoldMode.prototype);

});

/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('libs/ace_mode',['require','exports','module','ace/lib/oop','ace/mode/text','ace/tokenizer','./ace_mode_highlight_rules','ace/mode/folding/markdown'],function(require, exports, module) {


var oop = require("ace/lib/oop");
var TextMode = require("ace/mode/text").Mode;
var Tokenizer = require("ace/tokenizer").Tokenizer;
var MarkdownHighlightRules = require("./ace_mode_highlight_rules").MarkdownHighlightRules;
var MarkdownFoldMode = require("ace/mode/folding/markdown").FoldMode;

var Mode = function() {
    var highlighter = new MarkdownHighlightRules();
    
    this.$tokenizer = new Tokenizer(highlighter.getRules());
    this.$embeds = highlighter.getEmbeds();
    
    this.foldingRules = new MarkdownFoldMode();
};
oop.inherits(Mode, TextMode);

(function() {
    this.type = "text";
    this.lineCommentStart = ">";
    
    this.getNextLineIndent = function(state, line, tab) {
        if (state == "listblock") {
            var match = /^(\s*)(?:([-+*])|(\d+)\.)(\s+)/.exec(line);
            if (!match)
                return "";
            var marker = match[2];
            if (!marker)
                marker = parseInt(match[3], 10) + 1 + ".";
            return match[1] + marker + match[4];
        } else {
            return this.$getIndent(line);
        }
    };
}).call(Mode.prototype);

exports.Mode = Mode;
});

define('ace/ext/spellcheck',['require','exports','module','../lib/event','../editor','../config'],function(require, exports, module) {

var event = require("../lib/event");

exports.contextMenuHandler = function(e){
    var host = e.target;
    var text = host.textInput.getElement();
    if (!host.selection.isEmpty())
        return;
    var c = host.getCursorPosition();
    var r = host.session.getWordRange(c.row, c.column);
    var w = host.session.getTextRange(r);

    host.session.tokenRe.lastIndex = 0;
    if (!host.session.tokenRe.test(w))
        return;
    var PLACEHOLDER = "\x01\x01";
    var value = w + " " + PLACEHOLDER;
    text.value = value;
    text.setSelectionRange(w.length + 1, w.length + 1);
    text.setSelectionRange(0, 0);

    var afterKeydown = false;
    event.addListener(text, "keydown", function onKeydown() {
        event.removeListener(text, "keydown", onKeydown);
        afterKeydown = true;
    });

    host.textInput.setInputHandler(function(newVal) {
        console.log(newVal , value, text.selectionStart, text.selectionEnd)
        if (newVal == value)
            return '';
        if (newVal.lastIndexOf(value, 0) === 0)
            return newVal.slice(value.length);
        if (newVal.substr(text.selectionEnd) == value)
            return newVal.slice(0, -value.length);
        if (newVal.slice(-2) == PLACEHOLDER) {
            var val = newVal.slice(0, -2);
            if (val.slice(-1) == " ") {
                if (afterKeydown)
                    return val.substring(0, text.selectionEnd);
                val = val.slice(0, -1);
                host.session.replace(r, val);
                return "";
            }
        }

        return newVal;
    });
};
// todo support highlighting with typo.js
var Editor = require("../editor").Editor;
require("../config").defineOptions(Editor.prototype, "editor", {
    spellcheck: {
        set: function(val) {
            var text = this.textInput.getElement();
            text.spellcheck = !!val;
            if (!val)
                this.removeListener("nativecontextmenu", exports.contextMenuHandler);
            else
                this.on("nativecontextmenu", exports.contextMenuHandler);
        },
        value: true
    }
});

});


/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define('ace/ext/searchbox',['require','exports','module','../lib/dom','../lib/lang','../lib/event','../requirejs/text!./searchbox.css','../keyboard/hash_handler','../lib/keys'],function(require, exports, module) {


var dom = require("../lib/dom");
var lang = require("../lib/lang");
var event = require("../lib/event");
var searchboxCss = require("../requirejs/text!./searchbox.css");
var HashHandler = require("../keyboard/hash_handler").HashHandler;
var keyUtil = require("../lib/keys");

dom.importCssString(searchboxCss, "ace_searchbox");

var html = '<div class="ace_search right">\
    <button type="button" action="hide" class="ace_searchbtn_close"></button>\
    <div class="ace_search_form">\
        <input class="ace_search_field" placeholder="Search for" spellcheck="false"></input>\
        <button type="button" action="findNext" class="ace_searchbtn next"></button>\
        <button type="button" action="findPrev" class="ace_searchbtn prev"></button>\
    </div>\
    <div class="ace_replace_form">\
        <input class="ace_search_field" placeholder="Replace with" spellcheck="false"></input>\
        <button type="button" action="replaceAndFindNext" class="ace_replacebtn">Replace</button>\
        <button type="button" action="replaceAll" class="ace_replacebtn">All</button>\
    </div>\
    <div class="ace_search_options">\
        <span action="toggleRegexpMode" class="ace_button" title="RegExp Search">.*</span>\
        <span action="toggleCaseSensitive" class="ace_button" title="CaseSensitive Search">Aa</span>\
        <span action="toggleWholeWords" class="ace_button" title="Whole Word Search">\\b</span>\
    </div>\
</div>'.replace(/>\s+/g, ">");

var SearchBox = function(editor, range, showReplaceForm) {
    var div = dom.createElement("div");
    div.innerHTML = html;
    this.element = div.firstChild;

    this.$init();
    this.setEditor(editor);
};

(function() {
    this.setEditor = function(editor) {
        editor.searchBox = this;
        editor.container.appendChild(this.element);
        this.editor = editor;
    };

    this.$initElements = function(sb) {
        this.searchBox = sb.querySelector(".ace_search_form");
        this.replaceBox = sb.querySelector(".ace_replace_form");
        this.searchOptions = sb.querySelector(".ace_search_options");
        this.regExpOption = sb.querySelector("[action=toggleRegexpMode]");
        this.caseSensitiveOption = sb.querySelector("[action=toggleCaseSensitive]");
        this.wholeWordOption = sb.querySelector("[action=toggleWholeWords]");
        this.searchInput = this.searchBox.querySelector(".ace_search_field");
        this.replaceInput = this.replaceBox.querySelector(".ace_search_field");
    };
    
    this.$init = function() {
        var sb = this.element;
        
        this.$initElements(sb);
        
        var _this = this;
        event.addListener(sb, "mousedown", function(e) {
            setTimeout(function(){
                _this.activeInput.focus();
            }, 0);
            event.stopPropagation(e);
        });
        event.addListener(sb, "click", function(e) {
            var t = e.target || e.srcElement;
            var action = t.getAttribute("action");
            if (action && _this[action])
                _this[action]();
            else if (_this.$searchBarKb.commands[action])
                _this.$searchBarKb.commands[action].exec(_this);
            event.stopPropagation(e);
        });

        event.addCommandKeyListener(sb, function(e, hashId, keyCode) {
            var keyString = keyUtil.keyCodeToString(keyCode);
            var command = _this.$searchBarKb.findKeyCommand(hashId, keyString);
            if (command && command.exec) {
                command.exec(_this);
                event.stopEvent(e);
            }
        });

        this.$onChange = lang.delayedCall(function() {
            _this.find(false, false);
        });

        event.addListener(this.searchInput, "input", function() {
            _this.$onChange.schedule(20);
        });
        event.addListener(this.searchInput, "focus", function() {
            _this.activeInput = _this.searchInput;
            _this.searchInput.value && _this.highlight();
        });
        event.addListener(this.replaceInput, "focus", function() {
            _this.activeInput = _this.replaceInput;
            _this.searchInput.value && _this.highlight();
        });
    };

    //keybinging outsite of the searchbox
    this.$closeSearchBarKb = new HashHandler([{
        bindKey: "Esc",
        name: "closeSearchBar",
        exec: function(editor) {
            editor.searchBox.hide();
        }
    }]);

    //keybinging outsite of the searchbox
    this.$searchBarKb = new HashHandler();
    this.$searchBarKb.bindKeys({
        "Ctrl-f|Command-f|Ctrl-H|Command-Option-F": function(sb) {
            var isReplace = sb.isReplace = !sb.isReplace;
            sb.replaceBox.style.display = isReplace ? "" : "none";
            sb[isReplace ? "replaceInput" : "searchInput"].focus();
        },
        "Ctrl-G|Command-G": function(sb) {
            sb.findNext();
        },
        "Ctrl-Shift-G|Command-Shift-G": function(sb) {
            sb.findPrev();
        },
        "esc": function(sb) {
            setTimeout(function() { sb.hide();});
        },
        "Return": function(sb) {
            if (sb.activeInput == sb.replaceInput)
                sb.replace();
            sb.findNext();
        },
        "Shift-Return": function(sb) {
            if (sb.activeInput == sb.replaceInput)
                sb.replace();
            sb.findPrev();
        },
        "Tab": function(sb) {
            (sb.activeInput == sb.replaceInput ? sb.searchInput : sb.replaceInput).focus();
        }
    });

    this.$searchBarKb.addCommands([{
        name: "toggleRegexpMode",
        bindKey: {win: "Alt-R|Alt-/", mac: "Ctrl-Alt-R|Ctrl-Alt-/"},
        exec: function(sb) {
            sb.regExpOption.checked = !sb.regExpOption.checked;
            sb.$syncOptions();
        }
    }, {
        name: "toggleCaseSensitive",
        bindKey: {win: "Alt-C|Alt-I", mac: "Ctrl-Alt-R|Ctrl-Alt-I"},
        exec: function(sb) {
            sb.caseSensitiveOption.checked = !sb.caseSensitiveOption.checked;
            sb.$syncOptions();
        }
    }, {
        name: "toggleWholeWords",
        bindKey: {win: "Alt-B|Alt-W", mac: "Ctrl-Alt-B|Ctrl-Alt-W"},
        exec: function(sb) {
            sb.wholeWordOption.checked = !sb.wholeWordOption.checked;
            sb.$syncOptions();
        }
    }]);

    this.$syncOptions = function() {
        dom.setCssClass(this.regExpOption, "checked", this.regExpOption.checked);
        dom.setCssClass(this.wholeWordOption, "checked", this.wholeWordOption.checked);
        dom.setCssClass(this.caseSensitiveOption, "checked", this.caseSensitiveOption.checked);
        this.find(false, false);
    };

    this.highlight = function(re) {
        this.editor.session.highlight(re || this.editor.$search.$options.re);
        this.editor.renderer.updateBackMarkers()
    };
    this.find = function(skipCurrent, backwards) {
        var range = this.editor.find(this.searchInput.value, {
            skipCurrent: skipCurrent,
            backwards: backwards,
            wrap: true,
            regExp: this.regExpOption.checked,
            caseSensitive: this.caseSensitiveOption.checked,
            wholeWord: this.wholeWordOption.checked
        });
        var noMatch = !range && this.searchInput.value;
        dom.setCssClass(this.searchBox, "ace_nomatch", noMatch);
        this.editor._emit("findSearchBox", { match: !noMatch });
        this.highlight();
    };
    this.findNext = function() {
        this.find(true, false);
    };
    this.findPrev = function() {
        this.find(true, true);
    };
    this.replace = function() {
        if (!this.editor.getReadOnly())
            this.editor.replace(this.replaceInput.value);
    };    
    this.replaceAndFindNext = function() {
        if (!this.editor.getReadOnly()) {
            this.editor.replace(this.replaceInput.value);
            this.findNext()
        }
    };
    this.replaceAll = function() {
        if (!this.editor.getReadOnly())
            this.editor.replaceAll(this.replaceInput.value);
    };

    this.hide = function() {
        this.element.style.display = "none";
        this.editor.keyBinding.removeKeyboardHandler(this.$closeSearchBarKb);
        this.editor.focus();
    };
    this.show = function(value, isReplace) {
        this.element.style.display = "";
        this.replaceBox.style.display = isReplace ? "" : "none";

        this.isReplace = isReplace;

        if (value)
            this.searchInput.value = value;
        this.searchInput.focus();
        this.searchInput.select();

        this.editor.keyBinding.addKeyboardHandler(this.$closeSearchBarKb);
    };

}).call(SearchBox.prototype);

exports.SearchBox = SearchBox;

exports.Search = function(editor, isReplace) {
    var sb = editor.searchBox || new SearchBox(editor);
    sb.show(editor.session.getTextRange(), isReplace);
};

});


/* ------------------------------------------------------------------------------------------
 * TODO
 * --------------------------------------------------------------------------------------- */
/*
- move search form to the left if it masks current word
- includ all options that search has. ex: regex
- searchbox.searchbox is not that pretty. we should have just searchbox
- disable prev button if it makes sence
*/
;
define('core',[
    "jquery",
    "underscore",
    "crel",
    "ace",
    "utils",
    "settings",
    "eventMgr",
    "shortcutMgr",
    "mousetrap",
    "text!html/bodyIndex.html",
    "text!html/bodyViewer.html",
    "text!html/settingsTemplateTooltip.html",
    "text!html/settingsUserCustomExtensionTooltip.html",
    "storage",
    "config",
    "uilayout",
    'pagedown-ace',
    'libs/ace_mode',
    'ace/requirejs/text!ace/css/editor.css',
    'ace/requirejs/text!ace/theme/textmate.css',
    'ace/ext/spellcheck',
    'ace/ext/searchbox'

], function($, _, crel, ace, utils, settings, eventMgr, shortcutMgr, mousetrap, bodyIndexHTML, bodyViewerHTML, settingsTemplateTooltipHTML, settingsUserCustomExtensionTooltipHTML) {

    var core = {};

    // Used for periodic tasks
    var intervalId = undefined;

    // Used to detect user activity
    var isUserReal = false;
    var userActive = false;
    var windowUnique = true;
    var userLastActivity = 0;
    function setUserActive() {
        isUserReal = true;
        userActive = true;
        var currentTime = utils.currentTime;
        if(currentTime > userLastActivity + 1000) {
            userLastActivity = currentTime;
            eventMgr.onUserActive();
        }
    }

    function isUserActive() {
        if(userActive === true && utils.currentTime - userLastActivity > USER_IDLE_THRESHOLD) {
            userActive = false;
        }
        return userActive && windowUnique;
    }

    // Used to only have 1 window of the application in the same browser
    var windowId = undefined;
    function checkWindowUnique() {
        if(isUserReal === false || windowUnique === false) {
            return;
        }
        if(windowId === undefined) {
            windowId = utils.randomString();
            localStorage.frontWindowId = windowId;
        }
        var frontWindowId = localStorage.frontWindowId;
        if(frontWindowId != windowId) {
            windowUnique = false;
            if(intervalId !== undefined) {
                clearInterval(intervalId);
            }
            $(".modal").modal("hide");
            $('.modal-non-unique').modal("show");
        }
    }

    // Offline management
    var isOffline = false;
    var offlineTime = utils.currentTime;
    core.setOffline = function() {
        offlineTime = utils.currentTime;
        if(isOffline === false) {
            isOffline = true;
            eventMgr.onOfflineChanged(true);
        }
    };
    function setOnline() {
        if(isOffline === true) {
            isOffline = false;
            eventMgr.onOfflineChanged(false);
        }
    }
    function checkOnline() {
        // Try to reconnect if we are offline but we have some network
        if(isOffline === true && navigator.onLine === true && offlineTime + CHECK_ONLINE_PERIOD < utils.currentTime) {
            offlineTime = utils.currentTime;
            // Try to download anything to test the connection
            $.ajax({
                url: "//www.google.com/jsapi",
                timeout: AJAX_TIMEOUT,
                dataType: "script"
            }).done(function() {
                setOnline();
            });
        }
    }

    // Load settings in settings dialog
    var $themeInputElt = undefined;
    function loadSettings() {

        // Layout orientation
        utils.setInputRadio("radio-layout-orientation", settings.layoutOrientation);
        // Theme
        utils.setInputValue($themeInputElt, theme);
        $themeInputElt.change();
        // Lazy rendering
        utils.setInputChecked("#input-settings-lazy-rendering", settings.lazyRendering);
        // Editor font family
        utils.setInputValue("#input-settings-editor-font-family", settings.editorFontFamily);
        // Editor font size
        utils.setInputValue("#input-settings-editor-font-size", settings.editorFontSize);
        // Max width
        utils.setInputValue("#input-settings-max-width", settings.maxWidth);
        // Default content
        utils.setInputValue("#textarea-settings-default-content", settings.defaultContent);
        // Commit message
        utils.setInputValue("#input-settings-publish-commit-msg", settings.commitMsg);
        // Gdrive full access
        utils.setInputChecked("#input-settings-gdrive-full-access", settings.gdriveFullAccess);
        // Template
        utils.setInputValue("#textarea-settings-publish-template", settings.template);
        // PDF template
        utils.setInputValue("#textarea-settings-publish-pdf-template", settings.pdfTemplate);
        // SSH proxy
        utils.setInputValue("#input-settings-ssh-proxy", settings.sshProxy);
        
        // Load shortcuts settings
        shortcutMgr.loadSettings();

        // Load extension settings
        eventMgr.onLoadSettings();
    }

    // Save settings from settings dialog
    function saveSettings(event) {
        var newSettings = {};

        // Layout orientation
        newSettings.layoutOrientation = utils.getInputRadio("radio-layout-orientation");
        // Theme
        var theme = utils.getInputValue($themeInputElt);
        // Lazy Rendering
        newSettings.lazyRendering = utils.getInputChecked("#input-settings-lazy-rendering");
        // Editor font family
        newSettings.editorFontFamily = utils.getInputTextValue("#input-settings-editor-font-family", event);
        // Editor font size
        newSettings.editorFontSize = utils.getInputIntValue("#input-settings-editor-font-size", event, 1, 99);
        // Max width
        newSettings.maxWidth = utils.getInputIntValue("#input-settings-max-width", event, 1);
        // Default content
        newSettings.defaultContent = utils.getInputValue("#textarea-settings-default-content");
        // Commit message
        newSettings.commitMsg = utils.getInputTextValue("#input-settings-publish-commit-msg", event);
        // Gdrive full access
        newSettings.gdriveFullAccess = utils.getInputChecked("#input-settings-gdrive-full-access");
        // Template
        newSettings.template = utils.getInputTextValue("#textarea-settings-publish-template", event);
        // PDF template
        newSettings.pdfTemplate = utils.getInputTextValue("#textarea-settings-publish-pdf-template", event);
        // SSH proxy
        newSettings.sshProxy = utils.checkUrl(utils.getInputTextValue("#input-settings-ssh-proxy", event), true);

        // Save extension settings
        newSettings.extensionSettings = {};
        eventMgr.onSaveSettings(newSettings.extensionSettings, event);

        if(!event.isPropagationStopped()) {
            $.extend(settings, newSettings);
            localStorage.settings = JSON.stringify(settings);
            localStorage.theme = theme;
        }
    }

    // Set the panels visibility
    var layout = undefined;
    var $menuPanelElt = undefined;
    var $documentPanelElt = undefined;
    function setPanelVisibility(forceHide) {
        if(forceHide === true || layout.state.north.isClosed) {
            $menuPanelElt.hide();
            $documentPanelElt.hide();
        }
        else {
            $menuPanelElt.show();
            $documentPanelElt.show();
        }
    }

    // Set the preview button visibility
    var $previewButtonsElt = undefined;
    function setPreviewButtonsVisibility(forceHide) {
        if(forceHide === true || layout.state.east.isClosed) {
            $previewButtonsElt.hide();
        }
        else {
            $previewButtonsElt.show();
        }
    }

    // Create ACE editor
    var aceEditor = undefined;
    function createAceEditor() {
        if(lightMode) {
            // In light mode, we replace ACE with a textarea
            $('#wmd-input').replaceWith(function() {
                return $('<textarea id="wmd-input">').addClass(this.className).addClass('form-control');
            });
            return;
        }
        aceEditor = ace.edit("wmd-input");
        require('ace/ext/spellcheck');
        aceEditor.setOption("spellcheck", true);
        aceEditor.renderer.setShowGutter(false);
        aceEditor.renderer.setPrintMarginColumn(false);
        aceEditor.renderer.setPadding(EDITOR_DEFAULT_PADDING);
        aceEditor.session.setUseWrapMode(true);
        aceEditor.session.setNewLineMode("unix");
        aceEditor.session.setMode("libs/ace_mode");

        // Make bold titles...
        (function(self) {
            function checkLine(currentLine) {
                var line = self.lines[currentLine];
                if(line.length !== 0) {
                    if(line[0].type.indexOf("markup.heading.multi") === 0) {
                        _.each(self.lines[currentLine - 1], function(previousLineObject) {
                            previousLineObject.type = "markup.heading.prev.multi";
                        });
                    }
                }
            }
            function customWorker() {
                // Duplicate from background_tokenizer.js
                if(!self.running) {
                    return;
                }

                var workerStart = new Date();
                var currentLine = self.currentLine;
                var endLine = -1;
                var doc = self.doc;

                while (self.lines[currentLine]) {
                    currentLine++;
                }

                var startLine = currentLine;

                var len = doc.getLength();
                var processedLines = 0;
                self.running = false;
                while (currentLine < len) {
                    self.$tokenizeRow(currentLine);
                    endLine = currentLine;
                    do {
                        checkLine(currentLine); // benweet
                        currentLine++;
                    } while (self.lines[currentLine]);

                    // only check every 5 lines
                    processedLines++;
                    if((processedLines % 5 === 0) && (new Date() - workerStart) > 20) {
                        self.running = setTimeout(customWorker, 20); // benweet
                        self.currentLine = currentLine;
                        return;
                    }
                }
                self.currentLine = currentLine;

                if(startLine <= endLine)
                    self.fireUpdateEvent(startLine, endLine);
            }
            self.$worker = function() {
                self.lines.splice(0, self.lines.length);
                self.states.splice(0, self.states.length);
                self.currentLine = 0;
                customWorker();
            };

        })(aceEditor.session.bgTokenizer);

        shortcutMgr.configureAce(aceEditor);
        eventMgr.onAceCreated(aceEditor);
    }

    // Create the layout
    var $editorButtonsElt = undefined;
    function createLayout() {
        var layoutGlobalConfig = {
            closable: true,
            resizable: false,
            slidable: false,
            livePaneResizing: true,
            enableCursorHotkey: false,
            resizerDblClickToggle: false,
            north__spacing_open: 6,
            north__spacing_closed: 6,
            spacing_open: 35,
            spacing_closed: 35,
            togglerLength_open: 60,
            togglerLength_closed: 60,
            stateManagement__enabled: false,
            center__minWidth: 200,
            center__minHeight: 200,
            onopen: function() {
                setPanelVisibility();
                setPreviewButtonsVisibility();
            },
            onclose_start: function(paneName) {
                if(paneName == 'north') {
                    setPanelVisibility(true);
                }
                else if(paneName == 'east') {
                    setPreviewButtonsVisibility(true);
                }
            },
            onresize_end: function(paneName) {
                if(aceEditor !== undefined && paneName == 'center') {
                    aceEditor.resize();
                    var bottomMargin = (aceEditor.renderer.$size.scrollerHeight - aceEditor.renderer.lineHeight) / 2;
                    bottomMargin < 0 && (bottomMargin = 0);
                    aceEditor.renderer.setScrollMargin(0, bottomMargin, 0, 0);
                    setTimeout(function() {
                        var padding = (aceEditor.renderer.$size.scrollerWidth - settings.maxWidth) / 2;
                        if(padding < EDITOR_DEFAULT_PADDING) {
                            padding = EDITOR_DEFAULT_PADDING;
                        }
                        if(padding !== aceEditor.renderer.$padding) {
                            aceEditor.renderer.setPadding(padding);
                            aceEditor.resize(true);
                        }
                    }, 5);
                }
                eventMgr.onLayoutResize(paneName);
            },
        };
        eventMgr.onLayoutConfigure(layoutGlobalConfig);
        if(settings.layoutOrientation == "horizontal") {
            $(".ui-layout-south").remove();
            $(".preview-container").html('<div id="preview-contents"><div id="wmd-preview" class="preview-content"></div></div>');
            layout = $('body').layout($.extend(layoutGlobalConfig, {
                east__resizable: true,
                east__size: 0.5,
                east__minSize: 260
            }));
        }
        else if(settings.layoutOrientation == "vertical") {
            $(".ui-layout-east").remove();
            $(".preview-container").html('<div id="preview-contents"><div id="wmd-preview" class="preview-content"></div></div>');
            layout = $('body').layout($.extend(layoutGlobalConfig, {
                south__resizable: true,
                south__size: 0.5,
                south__minSize: 200
            }));
        }
        settings.maxWidth && $('#preview-contents').css('max-width', (settings.maxWidth + 30) + 'px');
        $(".navbar").click(function() {
            layout.allowOverflow('north');
        });
        $(".ui-layout-toggler-south").addClass("btn btn-info").html('<i class="icon-none"></i>');
        $(".ui-layout-toggler-east").addClass("btn btn-info").html('<i class="icon-none"></i>');
        var $northTogglerElt = $(".ui-layout-toggler-north").addClass("btn btn-info").html('<i class="icon-none"></i>');

        // We attach the preview buttons to the UI layout resizer in order to
        // have fixed position
        // We also move the north toggler to the east or south resizer as the
        // north resizer is very small
        // var $previewButtonsContainerElt = $('<div
        // class="preview-button-container">');
        var $resizerDecorator = $('<div class="resizer-decorator">');
        $previewButtonsElt = $('<div class="extension-preview-buttons">');
        $editorButtonsElt = $('<div class="extension-editor-buttons">');
        if(viewerMode || settings.layoutOrientation == "horizontal") {
            $('.ui-layout-resizer-north').append($resizerDecorator).append($previewButtonsElt);
            $('.ui-layout-resizer-east').append($northTogglerElt).append($editorButtonsElt);
        }
        else {
            $('.ui-layout-resizer-north').append($resizerDecorator);
            $('.ui-layout-resizer-south').append($previewButtonsElt).append($editorButtonsElt).append($northTogglerElt);
        }

        setPanelVisibility();
        setPreviewButtonsVisibility();

        eventMgr.onLayoutCreated(layout);
    }

    // Create the PageDown editor
    var editor = undefined;
    var $editorElt = undefined;
    var fileDesc = undefined;
    var documentContent = undefined;
    var UndoManager = require("ace/undomanager").UndoManager;
    core.initEditor = function(fileDescParam) {
        if(fileDesc !== undefined) {
            eventMgr.onFileClosed(fileDesc);
        }
        fileDesc = fileDescParam;
        documentContent = undefined;
        var initDocumentContent = fileDesc.content;

        if(aceEditor !== undefined) {
            aceEditor.setValue(initDocumentContent, -1);
            aceEditor.getSession().setUndoManager(new UndoManager());
        }
        else {
            $editorElt.val(initDocumentContent);
        }

        if(editor !== undefined) {
            // If the editor is already created
            aceEditor && aceEditor.selection.setSelectionRange(fileDesc.editorSelectRange);
            (aceEditor && aceEditor.focus()) || $editorElt.focus();
            editor.refreshPreview();
            return;
        }

        var $previewContainerElt = $(".preview-container");

        if(!lightMode) {
            // Store editor scrollTop on scroll event
            var saveScroll = _.debounce(function() {
                if(documentContent !== undefined) {
                    fileDesc.editorScrollTop = aceEditor.renderer.getScrollTop();
                }
            }, 100);
            aceEditor.session.on('changeScrollTop', saveScroll);
            // Store editor selection on change
            var saveSelection = _.debounce(function() {
                if(documentContent !== undefined) {
                    fileDesc.editorSelectRange = aceEditor.getSelectionRange();
                }
            }, 100);
            aceEditor.session.selection.on('changeSelection', saveSelection);
            aceEditor.session.selection.on('changeCursor', saveSelection);
            // Store preview scrollTop on scroll event
            $previewContainerElt.scroll(function() {
                if(documentContent !== undefined) {
                    fileDesc.previewScrollTop = $previewContainerElt.scrollTop();
                }
            });
        }

        // Create the converter and the editor
        var converter = new Markdown.Converter();

        function checkDocumentChanges() {
            var newDocumentContent = $editorElt.val();
            if(aceEditor !== undefined) {
                newDocumentContent = aceEditor.getValue();
            }
            if(documentContent !== undefined && documentContent != newDocumentContent) {
                fileDesc.content = newDocumentContent;
                eventMgr.onContentChanged(fileDesc);
            }
            documentContent = newDocumentContent;
        }

        if(!lightMode) {
            editor = new Markdown.Editor(converter);
            // Custom insert link dialog
            editor.hooks.set("insertLinkDialog", function(callback) {
                core.insertLinkCallback = callback;
                utils.resetModalInputs();
                $(".modal-insert-link").modal();
                return true;
            });
            // Custom insert image dialog
            editor.hooks.set("insertImageDialog", function(callback) {
                core.insertLinkCallback = callback;
                if(core.catchModal) {
                    return true;
                }
                utils.resetModalInputs();
                $(".modal-insert-image").modal();
                return true;
            });
        }
        else {
            // That's the light Markdown editor replacing the one from pagedown
            var $wmdPreviewElt = $('#wmd-preview');
            var hooks = new Markdown.HookCollection();
            hooks.addNoop("onPreviewRefresh");
            function makePreviewHtml() {
                var text = $editorElt.val();
                text = converter.makeHtml(text);
                $wmdPreviewElt.html(text);
                hooks.onPreviewRefresh();
            }
            var debouncedMakePreview = _.debounce(makePreviewHtml, 1000);
            var previewWrapper = function() {
                if(documentContent === undefined) {
                    makePreviewHtml();
                    eventMgr.onFileOpen(fileDesc);
                }
                else {
                    debouncedMakePreview();
                }
                checkDocumentChanges();
            };
            $editorElt.on("input propertychange", previewWrapper);
            editor = {
                hooks: hooks,
                getConverter: function() {
                    return converter;
                },
                run: previewWrapper,
                refreshPreview: previewWrapper
            };
        }

        var previewWrapper;
        if(settings.lazyRendering === true) {
            previewWrapper = function(makePreview) {
                var debouncedMakePreview = _.debounce(makePreview, 500);
                return function() {
                    if(documentContent === undefined) {
                        makePreview();
                        eventMgr.onFileOpen(fileDesc);
                        $previewContainerElt.scrollTop(fileDesc.previewScrollTop);
                        _.defer(function() {
                            aceEditor.renderer.scrollToY(fileDesc.editorScrollTop);
                        });
                    }
                    else {
                        debouncedMakePreview();
                    }
                    checkDocumentChanges();
                };
            };
        }
        else {
            previewWrapper = function(makePreview) {
                return function() {
                    makePreview();
                    if(documentContent === undefined) {
                        eventMgr.onFileOpen(fileDesc);
                        $previewContainerElt.scrollTop(fileDesc.previewScrollTop);
                        _.defer(function() {
                            aceEditor.renderer.scrollToY(fileDesc.editorScrollTop);
                        });
                    }
                    checkDocumentChanges();
                };
            };
        }
        eventMgr.onPagedownConfigure(editor);
        editor.hooks.chain("onPreviewRefresh", eventMgr.onAsyncPreview);
        editor.run(aceEditor, previewWrapper);
        aceEditor && aceEditor.selection.setSelectionRange(fileDesc.editorSelectRange);
        (aceEditor && aceEditor.focus()) || $editorElt.focus();

        // Hide default buttons
        $(".wmd-button-row li").addClass("btn btn-success").css("left", 0).find("span").hide();

        // Add customized buttons
        var $btnGroupElt = $('.wmd-button-group1');
        $("#wmd-bold-button").append($('<i class="icon-bold">')).appendTo($btnGroupElt);
        $("#wmd-italic-button").append($('<i class="icon-italic">')).appendTo($btnGroupElt);
        var $btnGroupElt = $('.wmd-button-group2');
        $("#wmd-link-button").append($('<i class="icon-globe">')).appendTo($btnGroupElt);
        $("#wmd-quote-button").append($('<i class="icon-indent-right">')).appendTo($btnGroupElt);
        $("#wmd-code-button").append($('<i class="icon-code">')).appendTo($btnGroupElt);
        $("#wmd-image-button").append($('<i class="icon-picture">')).appendTo($btnGroupElt);
        var $btnGroupElt = $('.wmd-button-group3');
        $("#wmd-olist-button").append($('<i class="icon-list-numbered">')).appendTo($btnGroupElt);
        $("#wmd-ulist-button").append($('<i class="icon-list-bullet">')).appendTo($btnGroupElt);
        $("#wmd-heading-button").append($('<i class="icon-text-height">')).appendTo($btnGroupElt);
        $("#wmd-hr-button").append($('<i class="icon-ellipsis">')).appendTo($btnGroupElt);
        var $btnGroupElt = $('.wmd-button-group4');
        $("#wmd-undo-button").append($('<i class="icon-reply">')).appendTo($btnGroupElt);
        $("#wmd-redo-button").append($('<i class="icon-forward">')).appendTo($btnGroupElt);
    };
    
    // Shows a dialog to force the user to click a button before opening oauth popup
    var oauthRedirectCallback = undefined;
    core.oauthRedirect = function(providerName, callback) {
        oauthRedirectCallback = callback;
        $('.oauth-redirect-provider').text(providerName);
        $('.modal-oauth-redirect').modal("show");
    };

    // Initialize multiple things and then fire eventMgr.onReady
    var isDocumentPanelShown = false;
    var isMenuPanelShown = false;
    core.onReady = function() {
        if(viewerMode === true) {
            document.body.innerHTML = bodyViewerHTML;
        }
        else {
            document.body.innerHTML = bodyIndexHTML;
        }
        
        // Populate shortcuts in settings
        shortcutMgr.addSettingEntries();

        // listen to online/offline events
        $(window).on('offline', core.setOffline);
        $(window).on('online', setOnline);
        if(navigator.onLine === false) {
            core.setOffline();
        }

        // Detect user activity
        $(document).mousemove(setUserActive).keypress(setUserActive);

        // Avoid dropdown to close when clicking on submenu
        $(".dropdown-submenu > a").click(function(e) {
            e.stopPropagation();
        });

        $menuPanelElt = $('.menu-panel').collapse({
            toggle: false
        });
        var menuPanelBackdropElt = undefined;
        $menuPanelElt.on('show.bs.collapse', function(e) {
            if(e.target === $menuPanelElt[0]) {
                isMenuPanelShown = true;
                menuPanelBackdropElt = utils.createBackdrop('collapse', '.menu-panel');
                $menuPanelElt.addClass('move-to-front');
            }
            else {
                // Close all open sub-menus when one submenu opens
                $menuPanelElt.find('.in').collapse('hide');
            }
        }).on('hide.bs.collapse', function(e) {
            if(e.target === $menuPanelElt[0]) {
                isMenuPanelShown = false;
                menuPanelBackdropElt.parentNode.removeChild(menuPanelBackdropElt);
                $menuPanelElt.removeClass('move-to-front');
                (aceEditor && aceEditor.focus()) || $editorElt.focus();
            }
        }).on('hidden.bs.collapse', function(e) {
            if(e.target === $menuPanelElt[0]) {
                // Close all open sub-menus when menu panel is closed
                $menuPanelElt.find('.in').collapse('hide');
            }
        });

        $documentPanelElt = $('.document-panel').collapse({
            toggle: false
        });
        var documentPanelBackdropElt = undefined;
        $documentPanelElt.on('show.bs.collapse', function(e) {
            if(e.target === $documentPanelElt[0]) {
                isDocumentPanelShown = true;
                documentPanelBackdropElt = utils.createBackdrop('collapse', '.document-panel');
                $documentPanelElt.addClass('move-to-front');
            }
            else {
                // Close all open sub-menus when one submenu opens
                $documentPanelElt.find('.in').collapse('hide');
            }
        }).on('hide.bs.collapse', function(e) {
            if(e.target === $documentPanelElt[0]) {
                isDocumentPanelShown = false;
                documentPanelBackdropElt.parentNode.removeChild(documentPanelBackdropElt);
                $documentPanelElt.removeClass('move-to-front');
                (aceEditor && aceEditor.focus()) || $editorElt.focus();
            }
        }).on('hidden.bs.collapse', function(e) {
            if(e.target === $documentPanelElt[0]) {
                // Close all open sub-menus when menu panel is closed
                $documentPanelElt.find('.in').collapse('hide');
            }
        });

        // ACE editor
        createAceEditor();

        // Editor's element
        $editorElt = $("#wmd-input").css({
            // Apply editor font
            "font-family": settings.editorFontFamily,
            "font-size": settings.editorFontSize + "px",
            "line-height": Math.round(settings.editorFontSize * (20 / 12)) + "px"
        });
        $editorElt.find('.ace_content').css({
            "background-size": "64px " + Math.round(settings.editorFontSize * (20 / 12)) + "px",
        });

        // UI layout
        createLayout();

        // Do periodic tasks
        intervalId = window.setInterval(function() {
            utils.updateCurrentTime();
            checkWindowUnique();
            if(isUserActive() === true || viewerMode === true) {
                eventMgr.onPeriodicRun();
                checkOnline();
            }
        }, 1000);

        eventMgr.onReady();
    };

    // Other initialization that are not prioritary
    eventMgr.addListener("onReady", function() {
        
        // In vertical mode, we have to offset the editor buttons otherwise they hide the editor buttons
        if(!viewerMode && settings.layoutOrientation == "vertical") {
            $previewButtonsElt.css('right', parseInt($previewButtonsElt.css('right')) + $editorButtonsElt.width());
        }

        var isModalShown = false;
        $('.modal').on('show.bs.modal', function() {
            // Close panel if open
            $menuPanelElt.collapse('hide');
            $documentPanelElt.collapse('hide');
            isModalShown = true;
        }).on('shown.bs.modal', function() {
            // Focus on the first input when modal opens
            var elt = $(this);
            setTimeout(function() {
                elt.find("input:enabled:visible:first").focus();
            }, 50);
        }).on('hidden.bs.modal', function() {
            // Focus on the editor when modal is gone
            isModalShown = false;
            (aceEditor && aceEditor.focus()) || $editorElt.focus();
            // Revert to current theme when settings modal is closed
            applyTheme(localStorage.theme);
        }).keyup(function(e) {
            // Handle enter key in modals
            if(e.which == 13 && !$(e.target).is("textarea")) {
                $(this).find(".modal-footer a:last").click();
            }
        });
        
        // Hide menu panel when clicking 'Save as' button
        $('.collapse-save-as a').click(function() {
            $menuPanelElt.collapse('hide');
        });

        // Configure Mousetrap
        mousetrap.stopCallback = function(e, element, combo) {
            return isMenuPanelShown || isDocumentPanelShown || isModalShown || $(element).is("input, select, textarea:not(.ace_text-input)");
        };

        // Click events on "insert link" and "insert image" dialog buttons
        $(".action-insert-link").click(function(e) {
            var value = utils.getInputTextValue($("#input-insert-link"), e);
            if(value !== undefined) {
                core.insertLinkCallback(value);
                core.insertLinkCallback = undefined;
            }
        });
        $(".action-insert-image").click(function(e) {
            var value = utils.getInputTextValue($("#input-insert-image"), e);
            if(value !== undefined) {
                core.insertLinkCallback(value);
                core.insertLinkCallback = undefined;
            }
        });

        // Hide events on "insert link" and "insert image" dialogs
        $(".modal-insert-link, .modal-insert-image").on('hidden.bs.modal', function() {
            if(core.insertLinkCallback !== undefined) {
                core.insertLinkCallback(null);
                core.insertLinkCallback = undefined;
            }
        });

        // Settings loading/saving
        $(".action-load-settings").click(function() {
            loadSettings();
        });
        $(".action-apply-settings").click(function(e) {
            saveSettings(e);
            if(!e.isPropagationStopped()) {
                window.location.reload();
            }
        });

        // Hot theme switcher in the settings
        var currentTheme = theme;
        function applyTheme(theme) {
            theme = theme || 'default';
            if(currentTheme != theme) {
                var themeModule = "less!themes/" + theme;
                if(baseDir.indexOf('-min') !== -1) {
                    themeModule = "css!themes/" + theme;
                }
                // Undefine the module in RequireJS
                requirejs.undef(themeModule);
                // Then reload the style
                require([
                    themeModule
                ]);
                currentTheme = theme;
            }
        }
        $themeInputElt = $("#input-settings-theme");
        $themeInputElt.on("change", function() {
            applyTheme(this.value);
        });

        // Import settings
        $(".action-import-settings").click(function(e) {
            $("#input-file-import-settings").click();
        });
        $("#input-file-import-settings").change(function(evt) {
            var files = (evt.dataTransfer || evt.target).files;
            $(".modal-settings").modal("hide");
            _.each(files, function(file) {
                var reader = new FileReader();
                reader.onload = (function(importedFile) {
                    return function(e) {
                        var content = e.target.result;
                        try {
                            JSON.parse(content);
                        }
                        catch(e) {
                            eventMgr.onError(importedFile.name + " is not a valid JSON file.");
                            return;
                        }
                        localStorage.settings = content;
                        window.location.reload();
                    };
                })(file);
                var blob = file.slice(0, IMPORT_FILE_MAX_CONTENT_SIZE);
                reader.readAsText(blob);
            });
        });
        // Export settings
        $(".action-export-settings").click(function(e) {
            utils.saveAs(JSON.stringify(settings), "StackEdit Settings.json");
        });

        $(".action-default-settings").click(function() {
            localStorage.removeItem("settings");
            localStorage.removeItem("theme");
            window.location.reload();
        });

        $(".action-app-reset").click(function() {
            localStorage.clear();
            window.location.reload();
        });

        // Reset inputs
        $(".action-reset-input").click(function() {
            utils.resetModalInputs();
        });

        // Tooltips
        $(".tooltip-lazy-rendering").tooltip({
            container: '.modal-settings',
            placement: 'right',
            trigger: 'hover',
            title: 'Disable preview rendering while typing in order to offload CPU. Refresh preview after 500 ms of inactivity.'
        });
        $(".tooltip-default-content").tooltip({
            html: true,
            container: '.modal-settings',
            placement: 'right',
            trigger: 'hover',
            title: 'Thanks for supporting StackEdit by adding a backlink in your documents!'
        });
        var tooltipOpen = false;
        $(".tooltip-usercustom-extension").tooltip({
            html: true,
            container: '.modal-settings',
            placement: 'right',
            trigger: 'manual',
            title: settingsUserCustomExtensionTooltipHTML
        }).click(function(e) {
            $(this).tooltip('show');
            $(document).on("click.tooltip-usercustom-extension", function(e) {
                tooltipOpen = false;
                $(".tooltip-usercustom-extension").tooltip('hide');
                $(document).off("click.tooltip-usercustom-extension");
            });
            !tooltipOpen && e.stopPropagation();
            tooltipOpen = true;
        });
        _.each(document.querySelectorAll(".tooltip-template"), function(tooltipElt) {
            var $tooltipElt = $(tooltipElt);
            $tooltipElt.tooltip({
                html: true,
                container: $tooltipElt.parents('.modal'),
                placement: 'right',
                trigger: 'manual',
                title: settingsTemplateTooltipHTML
            }).click(function(e) {
                $tooltipElt.tooltip('show');
                $(document).on("click.tooltip-template", function(e) {
                    tooltipOpen = false;
                    $(".tooltip-template").tooltip('hide');
                    $(document).off("click.tooltip-template");
                });
                !tooltipOpen && e.stopPropagation();
                tooltipOpen = true;
            });
        });

        // Avoid dropdown panels to close on click
        $("div.dropdown-menu").click(function(e) {
            e.stopPropagation();
        });

        // Non unique window dialog
        $('.modal-non-unique').modal({
            backdrop: "static",
            keyboard: false,
            show: false
        });
        
        // OAuth redirect dialog
        $('.modal-oauth-redirect').modal({
            backdrop: "static",
            keyboard: false,
            show: false
        });
        $('.action-oauth-redirect').click(function() {
            oauthRedirectCallback();
        });
        
        // Load images
        _.each(document.querySelectorAll('img'), function(imgElt) {
            var $imgElt = $(imgElt);
            var src = $imgElt.data('stackeditSrc');
            if(src) {
                $imgElt.attr('src', baseDir + '/img/' + src);
            }
        });

        if(viewerMode === false) {
            // Load theme list
            var themeOptions = _.reduce(THEME_LIST, function(themeOptions, name, value) {
                return themeOptions + '<option value="' + value + '">' + name + '</option>';
            }, '');
            document.getElementById('input-settings-theme').innerHTML = themeOptions;
        }

    });

    return core;
});

define('text!../WELCOME.md',[],function () { return '\nWelcome to StackEdit!\t{#welcome}\n=====================\n\n\nHello, I am your first Markdown document within **StackEdit**[^stackedit]. Don\'t delete me, I can be helpful. I can be recovered anyway in the `Utils` tab of the <i class="icon-cog"></i> `Settings` dialog.\n\n----------\n\n\nDocuments\n---------\n\n**StackEdit** stores your documents in the browser local storage, which means all your documents are automatically saved locally and are accessible offline.\n\n> **NOTE:** This also means that your documents are not shared between different browsers or computers and that clearing your browser\'s data may **delete all of them!**\n\n#### <i class="icon-file"></i> Create a document\n\nYou can create a new document by clicking the <i class="icon-file"></i> button in the navigation bar. This will switch from the current document to the new one.\n\n#### <i class="icon-folder-open"></i> Switch to another document\n\nYou can list all your local documents and switch from one to another by clicking the <i class="icon-folder-open"></i> button in the navigation bar.\n\n#### <i class="icon-pencil"></i> Rename a document\n\nYou can rename the current document by clicking the document title in the navigation bar.\n\n#### <i class="icon-trash"></i> Delete a document\n\nYou can delete the current document by clicking the <i class="icon-trash"></i> button in the navigation bar.\n\n#### <i class="icon-hdd"></i> Save a document\n\nYou can save the current document to a file using the <i class="icon-hdd"></i> `Save as...` sub-menu.\n\n> **NOTE:** See [<i class="icon-share"></i> Publish a document](#publish-a-document) section for a description of the different outputs.\n\n\n----------\n\n\nSynchronization\n---------------\n\n**StackEdit** can be combined with **Google Drive** and **Dropbox** to have your documents centralized in the *Cloud*. The synchronization mechanism will take care of uploading your modifications or downloading the latest version of your documents.\n\n> **NOTE:** Full access to **Google Drive** or **Dropbox** is required to be able to import any document in StackEdit. Imported documents are downloaded in your browser and are not transmitted to a server.\n\n#### <i class="icon-download"></i> Import a document\n\nYou can import a document from the *Cloud* by going to the <i class="icon-provider-gdrive"></i> `Google Drive` or the <i class="icon-provider-dropbox"></i> `Dropbox` sub-menu and by clicking `Import from...`. Once imported, your document will be automatically synchronized with the **Google Drive** / **Dropbox** file.\n\n#### <i class="icon-upload"></i> Export a document\n\nYou can export any document by going to the <i class="icon-provider-gdrive"></i> `Google Drive` or the <i class="icon-provider-dropbox"></i> `Dropbox` sub-menu and by clicking `Export to...`. Even if your document is already synchronized with **Google Drive** or **Dropbox**, you can export it to a another location. **StackEdit** can synchronize one document with multiple locations.\n\n#### <i class="icon-refresh"></i> Synchronize a document\n\nOnce your document is linked to a **Google Drive** or a **Dropbox** file, **StackEdit** will periodically (every 3 minutes) synchronize it by downloading/uploading any modification. Any conflict will be detected, and a local copy of your document will be created as a backup if necessary.\n\nIf you just have modified your document and you want to force the synchronization, click the <i class="icon-refresh"></i> button in the navigation bar.\n\n> **NOTE:** The <i class="icon-refresh"></i> button is disabled when:\n> \n> - you are offline,\n> - or the document is not synchronized with any location,\n> - or the document has not been modified since the last synchronization.\n\n#### <i class="icon-refresh"></i> Manage document synchronization\n\nSince one document can be synchronized with multiple locations, you can list and manage synchronized locations by clicking <i class="icon-refresh"></i> `Manage synchronization` in the <i class="icon-stackedit"></i> menu. This will open a dialog box allowing you to add or remove synchronization links that are associated to your document.\n\n> **NOTE:** If you delete the file from **Google Drive** or from **Dropbox**, the document will no longer be synchronized with that location.\n\n----------\n\n\nPublication\n-----------\n\nOnce you are happy with your document, you can publish it on different websites directly from **StackEdit**. As for now, **StackEdit** can publish on **Blogger**, **Dropbox**, **Gist**, **GitHub**, **Google Drive**, **Tumblr**, **WordPress** and on any SSH server.\n\n#### <i class="icon-share"></i> Publish a document\n\nYou can publish your document by going to the <i class="icon-share"></i> `Publish on` sub-menu and by choosing a website. In the dialog box, you can choose the publication format:\n\n- Markdown, to publish the Markdown text on a website that can interpret it (**GitHub** for instance),\n- HTML, to publish the document converted into HTML (on a blog for instance),\n- Template, to have a full control of the output.\n\n> **NOTE:** The default template is a simple webpage wrapping your document in HTML format. You can customize it in the `Publish` tab of the <i class="icon-cog"></i> `Settings` dialog.\n\n#### <i class="icon-share"></i> Update a publication\n\nAfter publishing, **StackEdit** will keep your document linked to that publish location so that you can update it easily. Once you have modified your document and you want to update your publication, click on the <i class="icon-share"></i> button in the navigation bar.\n\n> **NOTE:** The <i class="icon-share"></i> button is disabled when:\n> \n> - you are offline,\n> - or the document has not been published anywhere.\n\n#### <i class="icon-share"></i> Manage document publication\n\nSince one document can be published on multiple locations, you can list and manage publish locations by clicking <i class="icon-share"></i> `Manage publication` in the <i class="icon-stackedit"></i> menu. This will open a dialog box allowing you to remove publication links that are associated to your document.\n\n> **NOTE:** In some cases, if you remove the file from the website or the post from the blog, the document will no longer be published on that location.\n\n----------\n\n\nMarkdown Extra\n--------------\n\n**StackEdit** supports **Markdown Extra**, which extends **Markdown** syntax with some nice features.\n\n\n### Tables\n\n**Markdown Extra** has a special syntax for tables:\n\nItem      | Value\n--------- | -----\nComputer  | \\$1600\nPhone     | \\$12\nPipe      | \\$1\n\nYou can specify column alignment with one or two colons:\n\n| Item      |  Value | Qty  |\n| :-------- | ------:| :--: |\n| Computer  | \\$1600 |  5   |\n| Phone     |   \\$12 |  12  |\n| Pipe      |    \\$1 | 234  |\n\n\n### Definition Lists\n\n**Markdown Extra** has a special syntax for definition lists too:\n\nTerm 1\nTerm 2\n:   Definition A\n:   Definition B\n\nTerm 3\n\n:   Definition C\n\n:   Definition D\n\n\t> part of definition D\n\n\n### Fenced code blocks\n\n**GitHub**\'s fenced code blocks are also supported with **Prettify** syntax highlighting:\n\n```\n// Foo\nvar bar = 0;\n```\n\n> **NOTE:** To use **Highlight.js** instead of **Prettify**, just configure the `Markdown Extra` extension in the <i class="icon-cog"></i> `Settings` dialog.\n\n\n### Special Attributes\n\nWith **Markdown Extra**, you can specify `class` and `id` attributes on headers and fenced code blocks just like this:\n\n##### Header example {#my-header}\n\n``` {#my-id .my-class}\nvar foo = bar;\n```\n\nThen you can create cross-references like this: [beginning of the document](#welcome).\n\n\n### Footnotes\n\nYou can create footnotes like this[^footnote].\n\n  [^footnote]: Here is the *text* of the **footnote**.\n\n\n### Table of contents\n\nYou can insert a table of contents using the marker `[TOC]`:\n\n[TOC]\n\n\n### MathJax\n \nYou can render *LaTeX* mathematical expressions using **MathJax**, as on [math.stackexchange.com][1]:\n\nThe *Gamma function* satisfying $\\Gamma(n) = (n-1)!\\quad\\forall\nn\\in\\mathbb N$ is via through the Euler integral\n\n$$\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n$$\n\n> **NOTE:** When exporting, make sure you include MathJax to render mathematical expression correctly. Your page/template should include something like: \n\n```\n<script type="text/javascript" src="http://benweet.github.io/stackedit/lib/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>\n```\n\n> **NOTE:** You can find more information:\n>\n> - about **Markdown** syntax [here][2],\n> - about **Markdown Extra** extension [here][3],\n> - about **Prettify** syntax highlighting [here][4].\n> - about **Highlight.js** syntax highlighting [here][5].\n\n  [^stackedit]: StackEdit is a free, open-source Markdown editor based on PageDown, the Markdown library used by Stack Overflow and the other Stack Exchange sites.\n\n\n  [1]: http://math.stackexchange.com/\n  [2]: http://daringfireball.net/projects/markdown/syntax "Markdown"\n  [3]: https://github.com/jmcmanus/pagedown-extra "Pagedown Extra"\n  [4]: https://code.google.com/p/google-code-prettify/\n  [5]: http://softwaremaniacs.org/soft/highlight/en/';});

define('fileMgr',[
    "jquery",
    "underscore",
    "core",
    "utils",
    "settings",
    "eventMgr",
    "fileSystem",
    "classes/FileDescriptor",
    "text!../WELCOME.md"
], function($, _, core, utils, settings, eventMgr, fileSystem, FileDescriptor, welcomeContent) {

    var fileMgr = {};

    // Defines the current file
    fileMgr.currentFile = undefined;

    // Set the current file and refresh the editor
    fileMgr.selectFile = function(fileDesc) {
        fileDesc = fileDesc || fileMgr.currentFile;

        if(fileDesc === undefined) {
            var fileSystemSize = _.size(fileSystem);
            if(fileSystemSize === 0) {
                // If fileSystem empty create one file
                fileDesc = fileMgr.createFile(WELCOME_DOCUMENT_TITLE, welcomeContent);
            }
            else {
                // Select the last selected file
                fileDesc = _.max(fileSystem, function(fileDesc) {
                    return fileDesc.selectTime || 0;
                });
            }
        }

        if(fileMgr.currentFile !== fileDesc) {
            fileMgr.currentFile = fileDesc;
            fileDesc.selectTime = new Date().getTime();

            // Notify extensions
            eventMgr.onFileSelected(fileDesc);

            // Hide the viewer pencil button
            $(".action-edit-document").toggleClass("hide", fileDesc.fileIndex != TEMPORARY_FILE_INDEX);
        }

        // Refresh the editor (even if it's the same file)
        core.initEditor(fileDesc);
    };

    fileMgr.createFile = function(title, content, syncLocations, isTemporary) {
        content = content !== undefined ? content : settings.defaultContent;
        if(!title) {
            // Create a file title
            title = DEFAULT_FILE_TITLE;
            var indicator = 2;
            while (_.some(fileSystem, function(fileDesc) {
                return fileDesc.title == title;
            })) {
                title = DEFAULT_FILE_TITLE + indicator++;
            }
        }

        // Generate a unique fileIndex
        var fileIndex = TEMPORARY_FILE_INDEX;
        if(!isTemporary) {
            do {
                fileIndex = "file." + utils.randomString();
            } while (_.has(fileSystem, fileIndex));
        }

        // syncIndex associations
        syncLocations = syncLocations || {};
        var sync = _.reduce(syncLocations, function(sync, syncAttributes) {
            utils.storeAttributes(syncAttributes);
            return sync + syncAttributes.syncIndex + ";";
        }, ";");

        localStorage[fileIndex + ".title"] = title;
        localStorage[fileIndex + ".content"] = content;
        localStorage[fileIndex + ".sync"] = sync;
        localStorage[fileIndex + ".publish"] = ";";

        // Create the file descriptor
        var fileDesc = new FileDescriptor(fileIndex, title, syncLocations);

        // Add the index to the file list
        if(!isTemporary) {
            utils.appendIndexToArray("file.list", fileIndex);
            fileSystem[fileIndex] = fileDesc;
            eventMgr.onFileCreated(fileDesc);
        }
        return fileDesc;
    };

    fileMgr.deleteFile = function(fileDesc) {
        fileDesc = fileDesc || fileMgr.currentFile;

        // Remove the index from the file list
        utils.removeIndexFromArray("file.list", fileDesc.fileIndex);
        delete fileSystem[fileDesc.fileIndex];

        if(fileMgr.currentFile === fileDesc) {
            // Unset the current fileDesc
            fileMgr.currentFile = undefined;
            // Refresh the editor with another file
            fileMgr.selectFile();
        }

        // Remove synchronized locations from localStorage
        _.each(fileDesc.syncLocations, function(syncAttributes) {
            localStorage.removeItem(syncAttributes.syncIndex);
        });

        // Remove publish locations from localStorage
        _.each(fileDesc.publishLocations, function(publishAttributes) {
            localStorage.removeItem(publishAttributes.publishIndex);
        });

        localStorage.removeItem(fileDesc.fileIndex + ".title");
        localStorage.removeItem(fileDesc.fileIndex + ".content");
        localStorage.removeItem(fileDesc.fileIndex + ".sync");
        localStorage.removeItem(fileDesc.fileIndex + ".publish");
        localStorage.removeItem(fileDesc.fileIndex + ".selectTime");
        localStorage.removeItem(fileDesc.fileIndex + ".editorStart");
        localStorage.removeItem(fileDesc.fileIndex + ".editorEnd");
        localStorage.removeItem(fileDesc.fileIndex + ".editorScrollTop");
        localStorage.removeItem(fileDesc.fileIndex + ".previewScrollTop");

        eventMgr.onFileDeleted(fileDesc);
    };

    // Get the file descriptor associated to a syncIndex
    fileMgr.getFileFromSyncIndex = function(syncIndex) {
        return _.find(fileSystem, function(fileDesc) {
            return _.has(fileDesc.syncLocations, syncIndex);
        });
    };

    // Get syncAttributes from syncIndex
    fileMgr.getSyncAttributes = function(syncIndex) {
        var fileDesc = fileMgr.getFileFromSyncIndex(syncIndex);
        return fileDesc && fileDesc.syncLocations[syncIndex];
    };

    // Get the file descriptor associated to a publishIndex
    fileMgr.getFileFromPublishIndex = function(publishIndex) {
        return _.find(fileSystem, function(fileDesc) {
            return _.has(fileDesc.publishLocations, publishIndex);
        });
    };

    var aceEditor = undefined;
    eventMgr.addListener('onAceCreated', function(aceEditorParam) {
        aceEditor = aceEditorParam;
    });

    eventMgr.addListener("onReady", function() {
        $editorElt = $("#wmd-input")
        fileMgr.selectFile();

        var $fileTitleElt = $('.file-title-navbar');
        var $fileTitleInputElt = $(".input-file-title");
        $(".action-create-file").click(function() {
            var fileDesc = fileMgr.createFile();
            fileMgr.selectFile(fileDesc);
            $fileTitleElt.click();
        });
        $(".action-remove-file").click(function() {
            fileMgr.deleteFile();
        });
        $fileTitleElt.click(function() {
            if(viewerMode === true) {
                return;
            }
            $fileTitleElt.addClass('hide');
            var fileTitleInput = $fileTitleInputElt.removeClass('hide');
            _.defer(function() {
                fileTitleInput.focus().get(0).select();
            });
        });
        function applyTitle() {
            $fileTitleInputElt.addClass('hide');
            $fileTitleElt.removeClass('hide');
            var title = $.trim($fileTitleInputElt.val());
            var fileDesc = fileMgr.currentFile;
            if(title && title != fileDesc.title) {
                fileDesc.title = title;
                eventMgr.onTitleChanged(fileDesc);
            }
            $fileTitleInputElt.val(fileDesc.title);
            (aceEditor && aceEditor.focus()) || $editorElt.focus();
        }
        $fileTitleInputElt.blur(function() {
            applyTitle();
        }).keyup(function(e) {
            if(e.keyCode == 13) {
                applyTitle();
            }
            if(e.keyCode == 27) {
                $fileTitleInputElt.val("");
                applyTitle();
            }
        });
        $(".action-open-stackedit").click(function() {
            window.location.href = ".";
        });
        $(".action-edit-document").click(function() {
            var content = $editorElt.val();
            if(aceEditor !== undefined) {
                content = aceEditor.getValue();
            }
            var title = fileMgr.currentFile.title;
            var fileDesc = fileMgr.createFile(title, content);
            fileMgr.selectFile(fileDesc);
            window.location.href = ".";
        });
        $(".action-welcome-file").click(function() {
            var fileDesc = fileMgr.createFile(WELCOME_DOCUMENT_TITLE, welcomeContent);
            fileMgr.selectFile(fileDesc);
        });
    });

    eventMgr.onFileMgrCreated(fileMgr);
    return fileMgr;
});

define('classes/Provider',[],function() {
    
    function Provider(providerId, providerName) {
        this.providerId = providerId;
        this.providerName = providerName;
    }
    
    return Provider;
});
define('classes/AsyncTask',[
    "underscore",
    "utils",
    "eventMgr",
    "config"
], function(_, utils, eventMgr) {
    
    var taskQueue = [];
    
    function AsyncTask() {
        this.finished = false;
        this.timeout = ASYNC_TASK_DEFAULT_TIMEOUT;
        this.retryCounter = 0;
        this.runCallbacks = [];
        this.successCallbacks = [];
        this.errorCallbacks = [];
    }
    
    /**
     * onRun callbacks are called by chain(). These callbacks have to call
     * chain() themselves to chain with next onRun callback or error() to
     * throw an exception or retry() to restart the task.
     */
    AsyncTask.prototype.onRun = function(callback) {
        this.runCallbacks.push(callback);
    };
    
    /**
     * onSuccess callbacks are called when every onRun callbacks have
     * succeed.
     */
    AsyncTask.prototype.onSuccess = function(callback) {
        this.successCallbacks.push(callback);
    };
    
    /**
     * onError callbacks are called when error() is called in a onRun
     * callback.
     */
    AsyncTask.prototype.onError = function(callback) {
        this.errorCallbacks.push(callback);
    };
    
    /**
     * chain() calls the next onRun callback or the onSuccess callbacks when
     * finished. The optional callback parameter can be used to pass an
     * onRun callback during execution, bypassing the onRun queue.
     */
    var currentTaskStartTime = 0;
    AsyncTask.prototype.chain = function(callback) {
        currentTaskStartTime = utils.currentTime;
        utils.logStackTrace();
        if(this.finished === true) {
            return;
        }
        // If first execution
        if(this.queue === undefined) {
            // Create a copy of the onRun callbacks
            this.queue = this.runCallbacks.slice();
        }
        // If a callback is passed as a parameter
        if(callback !== undefined) {
            callback();
            return;
        }
        // If all callbacks have been run
        if(this.queue.length === 0) {
            // Run the onSuccess callbacks
            runSafe(this, this.successCallbacks);
            return;
        }
        // Run the next callback
        var runCallback = this.queue.shift();
        runCallback();
    };
    
    /**
     * error() calls the onError callbacks passing the error parameter and
     * ends the task by throwing an exception.
     */
    AsyncTask.prototype.error = function(error) {
        utils.logStackTrace();
        if(this.finished === true) {
            return;
        }
        error = error || new Error("Unknown error");
        if(error.message) {
            eventMgr.onError(error);
        }
        runSafe(this, this.errorCallbacks, error);
        // Exit the current call stack
        throw error;
    };
    
    /**
     * retry() can be called in an onRun callback to restart the task
     */
    var currentTaskRunning = false;
    AsyncTask.prototype.retry = function(error, maxRetryCounter) {
        if(this.finished === true) {
            return;
        }
        maxRetryCounter = maxRetryCounter || 5;
        this.queue = undefined;
        if(this.retryCounter >= maxRetryCounter) {
            this.error(error);
            return;
        }
        // Implement an exponential backoff
        var delay = Math.pow(2, this.retryCounter++) * 1000;
        currentTaskStartTime = utils.currentTime + delay;
        currentTaskRunning = false;
        runTask();
    };

    /**
     * enqueue() has to be called to add the task to the task queue
     */
    AsyncTask.prototype.enqueue = function() {
        taskQueue.push(this);
        runTask();
    };

    var asyncRunning = false;
    var currentTask = undefined;

    // Determine if user is real by listening to his activity
    var isUserReal = false;
    eventMgr.addListener("onUserActive", function() {
        isUserReal = true;
    });
    
    // Run the next task in the queue if any and no other running
    function runTask() {
        
        // Wait for user first interaction before running first task
        if(isUserReal === false) {
            return
        }
        
        // Use defer to avoid stack overflow
        //_.defer(function() {

            // If there is a task currently running
            if(currentTaskRunning === true) {
                // If the current task takes too long
                if(currentTaskStartTime + currentTask.timeout < utils.currentTime) {
                    currentTask.error(new Error("A timeout occurred."));
                }
                return;
            }

            if(currentTask === undefined) {
                // If no task in the queue
                if(taskQueue.length === 0) {
                    return;
                }

                // Dequeue an enqueued task
                currentTask = taskQueue.shift();
                currentTaskStartTime = utils.currentTime;
                if(asyncRunning === false) {
                    asyncRunning = true;
                    eventMgr.onAsyncRunning(true);
                }
            }

            // Run the task
            if(currentTaskStartTime <= utils.currentTime) {
                currentTaskRunning = true;
                currentTask.chain();
            }
        //});
    }
    
    // Call runTask periodically
    eventMgr.addListener("onPeriodicRun", runTask);

    function runSafe(task, callbacks, param) {
        try {
            _.each(callbacks, function(callback) {
                callback(param);
            });
        }
        finally {
            task.finished = true;
            if(currentTask === task) {
                currentTask = undefined;
                currentTaskRunning = false;
            }
            if(taskQueue.length === 0) {
                asyncRunning = false;
                eventMgr.onAsyncRunning(false);
            }
            else {
                runTask();
            }
        }
    }

    return AsyncTask;
});
define('helpers/dropboxHelper',[
    "jquery",
    "underscore",
    "core",
    "eventMgr",
    "classes/AsyncTask",
    "config",
], function($, _, core, eventMgr, AsyncTask) {

    var client = undefined;
    var authenticated = false;

    var dropboxHelper = {};
    
    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    // Try to connect dropbox by downloading client.js
    function connect(task) {
        task.onRun(function() {
            if(isOffline === true) {
                client = undefined;
                task.error(new Error("Operation not available in offline mode.|stopPublish"));
                return;
            }
            if(client !== undefined) {
                task.chain();
                return;
            }
            $.ajax({
                url: "lib/dropbox.min.js",
                dataType: "script",
                timeout: AJAX_TIMEOUT
            }).done(function() {
                client = new Dropbox.Client({
                    key: DROPBOX_APP_KEY,
                    secret: DROPBOX_APP_SECRET
                });
                client.authDriver(new Dropbox.Drivers.Popup({
                    receiverUrl: BASE_URL + "dropbox-oauth-receiver.html",
                    rememberUser: true
                }));
                task.chain();
            }).fail(function(jqXHR) {
                var error = {
                    status: jqXHR.status,
                    responseText: jqXHR.statusText
                };
                handleError(error, task);
            });
        });
    }

    // Try to authenticate with Oauth
    function authenticate(task) {
        task.onRun(function() {
            if(authenticated === true) {
                task.chain();
                return;
            }
            var immediate = true;
            function oauthRedirect() {
                core.oauthRedirect('Dropbox', function() {
                    task.chain(localAuthenticate);
                });
            }
            function localAuthenticate() {
                if(immediate === false) {
                    eventMgr.onMessage("Please make sure the Dropbox authorization popup is not blocked by your browser.");
                    // If not immediate we add time for user to enter his
                    // credentials
                    task.timeout = ASYNC_TASK_LONG_TIMEOUT;
                }
                client.authenticate({
                    interactive: !immediate
                }, function(error, client) {
                    // Success
                    if(client.authState === Dropbox.Client.DONE) {
                        authenticated = true;
                        task.chain();
                        return;
                    }
                    // If immediate did not work retry without immediate flag
                    if(immediate === true) {
                        immediate = false;
                        task.chain(oauthRedirect);
                        return;
                    }
                    // Error
                    task.error(new Error("Access to Dropbox account is not authorized."));
                });
            }
            task.chain(localAuthenticate);
        });
    }

    dropboxHelper.upload = function(path, content, callback) {
        var result = undefined;
        var task = new AsyncTask();
        connect(task);
        authenticate(task);
        task.onRun(function() {
            client.writeFile(path, content, function(error, stat) {
                if(!error) {
                    result = stat;
                    task.chain();
                    return;
                }
                // Handle error
                if(error.status === 400) {
                    error = 'Could not upload document into path "' + path + '".';
                }
                handleError(error, task);
            });
        });
        task.onSuccess(function() {
            callback(undefined, result);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    dropboxHelper.checkChanges = function(lastChangeId, callback) {
        var changes = [];
        var newChangeId = lastChangeId || 0;
        var task = new AsyncTask();
        connect(task);
        authenticate(task);
        task.onRun(function() {
            function retrievePageOfChanges() {
                client.pullChanges(newChangeId, function(error, pullChanges) {
                    if(error) {
                        handleError(error, task);
                        return;
                    }
                    // Retrieve success
                    newChangeId = pullChanges.cursor();
                    if(pullChanges.changes !== undefined) {
                        changes = changes.concat(pullChanges.changes);
                    }
                    if(pullChanges.shouldPullAgain) {
                        task.chain(retrievePageOfChanges);
                    }
                    else {
                        task.chain();
                    }
                });
            }
            task.chain(retrievePageOfChanges);
        });
        task.onSuccess(function() {
            callback(undefined, changes, newChangeId);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    dropboxHelper.downloadMetadata = function(paths, callback) {
        var result = [];
        var task = new AsyncTask();
        connect(task);
        authenticate(task);
        task.onRun(function() {
            function recursiveDownloadMetadata() {
                if(paths.length === 0) {
                    task.chain();
                    return;
                }
                var path = paths[0];
                client.stat(path, function(error, stat) {
                    if(stat) {
                        result.push(stat);
                        paths.shift();
                        task.chain(recursiveDownloadMetadata);
                        return;
                    }
                    handleError(error, task);
                });
            }
            task.chain(recursiveDownloadMetadata);
        });
        task.onSuccess(function() {
            callback(undefined, result);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    dropboxHelper.downloadContent = function(objects, callback) {
        var result = [];
        var task = new AsyncTask();
        connect(task);
        authenticate(task);
        task.onRun(function() {
            function recursiveDownloadContent() {
                if(objects.length === 0) {
                    task.chain();
                    return;
                }
                var object = objects[0];
                result.push(object);
                var file = undefined;
                // object may be a file
                if(object.isFile === true) {
                    file = object;
                }
                // object may be a change
                else if(object.wasRemoved !== undefined) {
                    file = object.stat;
                }
                if(!file) {
                    objects.shift();
                    task.chain(recursiveDownloadContent);
                    return;
                }
                client.readFile(file.path, function(error, data) {
                    if(data) {
                        file.content = data;
                        objects.shift();
                        task.chain(recursiveDownloadContent);
                        return;
                    }
                    handleError(error, task);
                });
            }
            task.chain(recursiveDownloadContent);
        });
        task.onSuccess(function() {
            callback(undefined, result);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    function handleError(error, task) {
        var errorMsg = true;
        if(error) {
            logger.error(error);
            // Try to analyze the error
            if(typeof error === "string") {
                errorMsg = error;
            }
            else {
                errorMsg = "Dropbox error (" + error.status + ": " + error.responseText + ").";

                if(error.status === 401 || error.status === 403) {
                    authenticated = false;
                    errorMsg = "Access to Dropbox account is not authorized.";
                    task.retry(new Error(errorMsg), 1);
                    return;
                }
                else if(error.status === 400 && error.responseText.indexOf("oauth_nonce") !== -1) {
                    // A bug I guess...
                    _.each(_.keys(localStorage), function(key) {
                        // We have to remove the Oauth cache from the
                        // localStorage
                        if(key.indexOf("dropbox-auth") === 0) {
                            localStorage.removeItem(key);
                        }
                    });
                    authenticated = false;
                    task.retry(new Error(errorMsg), 1);
                    return;
                }
                else if(error.status <= 0) {
                    client = undefined;
                    authenticated = false;
                    core.setOffline();
                    errorMsg = "|stopPublish";
                }
            }
        }
        task.error(new Error(errorMsg));
    }

    var pickerLoaded = false;
    function loadPicker(task) {
        task.onRun(function() {
            if(pickerLoaded === true) {
                task.chain();
                return;
            }
            $.ajax({
                url: "https://www.dropbox.com/static/api/1/dropbox.js",
                dataType: "script",
                timeout: AJAX_TIMEOUT
            }).done(function() {
                pickerLoaded = true;
                task.chain();
            }).fail(function(jqXHR) {
                var error = {
                    status: jqXHR.status,
                    responseText: jqXHR.statusText
                };
                handleError(error, task);
            });
        });
    }

    dropboxHelper.picker = function(callback) {
        var paths = [];
        var task = new AsyncTask();
        // Add some time for user to choose his files
        task.timeout = ASYNC_TASK_LONG_TIMEOUT;
        connect(task);
        loadPicker(task);
        task.onRun(function() {
            var options = {};
            options.multiselect = true;
            options.linkType = "direct";
            options.success = function(files) {
                for ( var i = 0; i < files.length; i++) {
                    var path = files[i].link;
                    path = path.replace(/.*\/view\/[^\/]*/, "");
                    paths.push(decodeURI(path));
                }
                task.chain();
            };
            options.cancel = function() {
                task.chain();
            };
            Dropbox.choose(options);
            eventMgr.onMessage("Please make sure the Dropbox chooser popup is not blocked by your browser.");
        });
        task.onSuccess(function() {
            callback(undefined, paths);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    return dropboxHelper;
});

define('providers/dropboxProvider',[
    "underscore",
    "utils",
    "classes/Provider",
    "eventMgr",
    "fileMgr",
    "helpers/dropboxHelper"
], function(_, utils, Provider, eventMgr, fileMgr, dropboxHelper) {

    var PROVIDER_DROPBOX = "dropbox";

    var dropboxProvider = new Provider(PROVIDER_DROPBOX, "Dropbox");
    dropboxProvider.defaultPublishFormat = "template";

    function checkPath(path) {
        if(path === undefined) {
            return undefined;
        }
        if(!path.match(/^[^\\<>:"\|?\*]+$/)) {
            eventMgr.onError('"' + path + '" contains invalid characters.');
            return undefined;
        }
        if(path.indexOf("/") !== 0) {
            return "/" + path;
        }
        return path;
    }

    function createSyncIndex(path) {
        return "sync." + PROVIDER_DROPBOX + "." + encodeURIComponent(path.toLowerCase());
    }

    function createSyncAttributes(path, versionTag, content) {
        var syncAttributes = {};
        syncAttributes.provider = dropboxProvider;
        syncAttributes.path = path;
        syncAttributes.version = versionTag;
        syncAttributes.contentCRC = utils.crc32(content);
        syncAttributes.syncIndex = createSyncIndex(path);
        return syncAttributes;
    }

    function importFilesFromPaths(paths) {
        dropboxHelper.downloadMetadata(paths, function(error, result) {
            if(error) {
                return;
            }
            dropboxHelper.downloadContent(result, function(error, result) {
                if(error) {
                    return;
                }
                var fileDescList = [];
                _.each(result, function(file) {
                    var syncAttributes = createSyncAttributes(file.path, file.versionTag, file.content);
                    var syncLocations = {};
                    syncLocations[syncAttributes.syncIndex] = syncAttributes;
                    var fileDesc = fileMgr.createFile(file.name, file.content, syncLocations);
                    fileMgr.selectFile(fileDesc);
                    fileDescList.push(fileDesc);
                });
                if(fileDescList.length !== 0) {
                    eventMgr.onSyncImportSuccess(fileDescList, dropboxProvider);
                }
            });
        });
    }

    dropboxProvider.importFiles = function() {
        dropboxHelper.picker(function(error, paths) {
            if(error || paths.length === 0) {
                return;
            }
            var importPaths = [];
            _.each(paths, function(path) {
                var syncIndex = createSyncIndex(path);
                var fileDesc = fileMgr.getFileFromSyncIndex(syncIndex);
                if(fileDesc !== undefined) {
                    eventMgr.onError('"' + fileDesc.title + '" was already imported.');
                    return;
                }
                importPaths.push(path);
            });
            importFilesFromPaths(importPaths);
        });
    };

    dropboxProvider.exportFile = function(event, title, content, callback) {
        var path = utils.getInputTextValue("#input-sync-export-dropbox-path", event);
        path = checkPath(path);
        if(path === undefined) {
            callback(true);
            return;
        }
        // Check that file is not synchronized with another one
        var syncIndex = createSyncIndex(path);
        var fileDesc = fileMgr.getFileFromSyncIndex(syncIndex);
        if(fileDesc !== undefined) {
            var existingTitle = fileDesc.title;
            eventMgr.onError('File path is already synchronized with "' + existingTitle + '".');
            callback(true);
            return;
        }
        dropboxHelper.upload(path, content, function(error, result) {
            if(error) {
                callback(error);
                return;
            }
            var syncAttributes = createSyncAttributes(result.path, result.versionTag, content);
            callback(undefined, syncAttributes);
        });
    };

    dropboxProvider.syncUp = function(uploadContent, uploadContentCRC, uploadTitle, uploadTitleCRC, syncAttributes, callback) {
        var syncContentCRC = syncAttributes.contentCRC;
        // Skip if CRC has not changed
        if(uploadContentCRC == syncContentCRC) {
            callback(undefined, false);
            return;
        }
        dropboxHelper.upload(syncAttributes.path, uploadContent, function(error, result) {
            if(error) {
                callback(error, true);
                return;
            }
            syncAttributes.version = result.versionTag;
            syncAttributes.contentCRC = uploadContentCRC;
            callback(undefined, true);
        });
    };

    dropboxProvider.syncDown = function(callback) {
        var lastChangeId = localStorage[PROVIDER_DROPBOX + ".lastChangeId"];
        dropboxHelper.checkChanges(lastChangeId, function(error, changes, newChangeId) {
            if(error) {
                callback(error);
                return;
            }
            var interestingChanges = [];
            _.each(changes, function(change) {
                var syncIndex = createSyncIndex(change.path);
                var syncAttributes = fileMgr.getSyncAttributes(syncIndex);
                if(syncAttributes === undefined) {
                    return;
                }
                // Store syncAttributes to avoid 2 times searching
                change.syncAttributes = syncAttributes;
                // Delete
                if(change.wasRemoved === true) {
                    interestingChanges.push(change);
                    return;
                }
                // Modify
                if(syncAttributes.version != change.stat.versionTag) {
                    interestingChanges.push(change);
                }
            });
            dropboxHelper.downloadContent(interestingChanges, function(error, changes) {
                if(error) {
                    callback(error);
                    return;
                }
                _.each(changes, function(change) {
                    var syncAttributes = change.syncAttributes;
                    var syncIndex = syncAttributes.syncIndex;
                    var fileDesc = fileMgr.getFileFromSyncIndex(syncIndex);
                    // No file corresponding (file may have been deleted
                    // locally)
                    if(fileDesc === undefined) {
                        return;
                    }
                    var localTitle = fileDesc.title;
                    // File deleted
                    if(change.wasRemoved === true) {
                        eventMgr.onError('"' + localTitle + '" has been removed from Dropbox.');
                        fileDesc.removeSyncLocation(syncAttributes);
                        eventMgr.onSyncRemoved(fileDesc, syncAttributes);
                        return;
                    }
                    var localContent = fileDesc.content;
                    var localContentChanged = syncAttributes.contentCRC != utils.crc32(localContent);
                    var file = change.stat;
                    var remoteContentCRC = utils.crc32(file.content);
                    var remoteContentChanged = syncAttributes.contentCRC != remoteContentCRC;
                    var fileContentChanged = localContent != file.content;
                    // Conflict detection
                    if(fileContentChanged === true && localContentChanged === true && remoteContentChanged === true) {
                        fileMgr.createFile(localTitle + " (backup)", localContent);
                        eventMgr.onMessage('Conflict detected on "' + localTitle + '". A backup has been created locally.');
                    }
                    // If file content changed
                    if(fileContentChanged && remoteContentChanged === true) {
                        fileDesc.content = file.content;
                        eventMgr.onContentChanged(fileDesc);
                        eventMgr.onMessage('"' + localTitle + '" has been updated from Dropbox.');
                        if(fileMgr.currentFile === fileDesc) {
                            fileMgr.selectFile(); // Refresh editor
                        }
                    }
                    // Update syncAttributes
                    syncAttributes.version = file.versionTag;
                    syncAttributes.contentCRC = remoteContentCRC;
                    utils.storeAttributes(syncAttributes);
                });
                localStorage[PROVIDER_DROPBOX + ".lastChangeId"] = newChangeId;
                callback();
            });
        });
    };

    dropboxProvider.publish = function(publishAttributes, frontMatter, title, content, callback) {
        var path = checkPath(publishAttributes.path);
        if(path === undefined) {
            callback(true);
            return;
        }
        dropboxHelper.upload(path, content, callback);
    };

    dropboxProvider.newPublishAttributes = function(event) {
        var publishAttributes = {};
        publishAttributes.path = utils.getInputTextValue("#input-publish-dropbox-path", event);
        if(event.isPropagationStopped()) {
            return undefined;
        }
        return publishAttributes;
    };

    return dropboxProvider;
});
define('helpers/googleHelper',[
    "underscore",
    "jquery",
    "core",
    "utils",
    "settings",
    "eventMgr",
    "classes/AsyncTask",
    "config"
], function(_, $, core, utils, settings, eventMgr, AsyncTask) {

    var connected = false;
    var permissionList = {};

    var googleHelper = {};

    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    // Try to connect Gdrive by downloading client.js
    function connect(task) {
        task.onRun(function() {
            if(isOffline === true) {
                connected = false;
                task.error(new Error("Operation not available in offline mode.|stopPublish"));
                return;
            }
            if(connected === true) {
                task.chain();
                return;
            }
            delayedFunction = function() {
                gapi.load("client,drive-realtime", function() {
                    connected = true;
                    task.chain();
                });
            };
            $.ajax({
                url: "https://apis.google.com/js/api.js?onload=runDelayedFunction",
                dataType: "script",
                timeout: AJAX_TIMEOUT
            }).fail(function(jqXHR) {
                var error = {
                    code: jqXHR.status,
                    message: jqXHR.statusText
                };
                handleError(error, task);
            });
        });
    }

    // Try to authenticate with Oauth
    function authenticate(task, permission) {
        task.onRun(function() {
            if(_.has(permissionList, permission)) {
                task.chain();
                return;
            }
            var scopes = undefined;
            if(permission == 'gdrive' && settings.gdriveFullAccess === true) {
                scopes = [
                    "https://www.googleapis.com/auth/drive.install",
                    "https://www.googleapis.com/auth/drive",
                ];
            } 
            else if(permission == 'gdrive' && settings.gdriveFullAccess === false) {
                scopes = [
                    "https://www.googleapis.com/auth/drive.install",
                    "https://www.googleapis.com/auth/drive.file",
                ];
            } 
            else if(permission == 'blogger') {
                scopes = [
                    "https://www.googleapis.com/auth/blogger",
                ];
            } 
            else if(permission == 'picasa') {
                scopes = [
                    "https://picasaweb.google.com/data/",
                ];
            } 
            var immediate = true;
            function oauthRedirect() {
                core.oauthRedirect('Google', function() {
                    task.chain(localAuthenticate);
                });
            }
            function localAuthenticate() {
                if(immediate === false) {
                    eventMgr.onMessage("Please make sure the Google authorization popup is not blocked by your browser.");
                    task.timeout = ASYNC_TASK_LONG_TIMEOUT;
                }
                gapi.auth.authorize({
                    'client_id': GOOGLE_CLIENT_ID,
                    'scope': scopes,
                    'immediate': immediate
                }, function(authResult) {
                    gapi.client.load('drive', 'v2', function() {
                        if(!authResult || authResult.error) {
                            // If immediate did not work retry without immediate
                            // flag
                            if(connected === true && immediate === true) {
                                immediate = false;
                                task.chain(oauthRedirect);
                                return;
                            }
                            // Error
                            task.error(new Error("Access to Google account is not authorized."));
                            return;
                        }
                        // Success
                        permissionList[permission] = true;
                        task.chain();
                    });
                });
            }
            task.chain(localAuthenticate);
        });
    }
    googleHelper.forceGdriveAuthenticate = function() {
        permissionList = _.omit(permissionList, 'gdrive') ;
        var task = new AsyncTask();
        connect(task);
        authenticate(task, 'gdrive');
        task.enqueue();
    };

    googleHelper.upload = function(fileId, parentId, title, content, contentType, etag, callback) {
        var result = undefined;
        var task = new AsyncTask();
        connect(task);
        authenticate(task, 'gdrive');
        task.onRun(function() {
            var boundary = '-------314159265358979323846';
            var delimiter = "\r\n--" + boundary + "\r\n";
            var close_delim = "\r\n--" + boundary + "--";
            contentType = contentType || 'text/x-markdown';
            var metadata = {
                title: title,
                mimeType: contentType
            };
            if(parentId) {
                // Specify the directory
                metadata.parents = [
                                    {
                                        kind: 'drive#fileLink',
                                        id: parentId
                                    }
                                    ];
            }
            var path = '/upload/drive/v2/files';
            var method = 'POST';
            if(fileId) {
                // If it's an update
                path += "/" + fileId;
                method = 'PUT';
            }
            var headers = {
                'Content-Type': 'multipart/mixed; boundary="' + boundary + '"',
            };
            // Sometimes we have error 412 from Google even with the correct
            // etag
            // if(etag !== undefined) {
            // headers["If-Match"] = etag;
            // }
            
            var base64Data = utils.encodeBase64(content);
            var multipartRequestBody = [
                                        delimiter,
                                        'Content-Type: application/json\r\n\r\n',
                                        JSON.stringify(metadata),
                                        delimiter,
                                        'Content-Type: ',
                                        contentType,
                                        '\r\n',
                                        'Content-Transfer-Encoding: base64\r\n',
                                        '\r\n',
                                        base64Data,
                                        close_delim
                                        ].join("");
            
            var request = gapi.client.request({
                'path': path,
                'method': method,
                'params': {
                    'uploadType': 'multipart',
                },
                'headers': headers,
                'body': multipartRequestBody,
            });
            request.execute(function(response) {
                if(response && response.id) {
                    // Upload success
                    result = response;
                    result.content = content;
                    task.chain();
                    return;
                }
                var error = response.error;
                // Handle error
                if(error !== undefined && fileId !== undefined) {
                    if(error.code === 404) {
                        error = 'File ID "' + fileId + '" not found on Google Drive.|removePublish';
                    }
                    else if(error.code === 412) {
                        // We may have missed a file update
                        localStorage.removeItem("gdrive.lastChangeId");
                        error = 'Conflict on file ID "' + fileId + '". Please restart the synchronization.';
                    }
                }
                handleError(error, task);
            });
        });
        task.onSuccess(function() {
            callback(undefined, result);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };
    
    googleHelper.rename = function(fileId, title, callback) {
        var result = undefined;
        var task = new AsyncTask();
        connect(task);
        authenticate(task, 'gdrive');
        task.onRun(function() {
            var body = {'title': title};
            var request = gapi.client.drive.files.patch({
                'fileId': fileId,
                'resource': body
              });
            request.execute(function(response) {
                if(response && response.id) {
                    // Rename success
                    result = response;
                    task.chain();
                    return;
                }
                var error = response.error;
                // Handle error
                if(error !== undefined && fileId !== undefined) {
                    if(error.code === 404) {
                        error = 'File ID "' + fileId + '" not found on Google Drive.|removePublish';
                    }
                }
                handleError(error, task);
            });
        });
        task.onSuccess(function() {
            callback(undefined, result);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    googleHelper.createRealtimeFile = function(parentId, title, callback) {
        var result = undefined;
        var task = new AsyncTask();
        connect(task);
        authenticate(task, 'gdrive');
        task.onRun(function() {
            var metadata = {
                title: title,
                mimeType: 'application/vnd.google-apps.drive-sdk',
            };
            if(parentId !== undefined) {
                // Specify the directory
                metadata.parents = [
                    {
                        kind: 'drive#fileLink',
                        id: parentId
                    }
                ];
            }
            var request = gapi.client.drive.files.insert({
                'resource': metadata
            });
            request.execute(function(response) {
                if(response && response.id) {
                    // Upload success
                    result = response;
                    task.chain();
                    return;
                }
                handleError(response.error, task);
            });
        });
        task.onSuccess(function() {
            callback(undefined, result);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    googleHelper.uploadImg = function(name, content, albumId, callback) {
        var result = undefined;
        var task = new AsyncTask();
        connect(task);
        authenticate(task, 'picasa');
        task.onRun(function() {
            var headers = {
                "Slug": name
            };
            if(name.match(/.jpe?g$/)) {
                headers["Content-Type"] = "image/jpeg";
            }
            else if(name.match(/.png$/)) {
                headers["Content-Type"] = "image/png";
            }
            else if(name.match(/.gif$/)) {
                headers["Content-Type"] = "image/gif";
            }
            var token = gapi.auth.getToken();
            if(token) {
                headers.Authorization = "Bearer " + token.access_token;
            }

            $.ajax({
                url: PICASA_PROXY_URL + "upload/" + albumId,
                headers: headers,
                data: content,
                processData: false,
                dataType: "xml",
                timeout: AJAX_TIMEOUT,
                type: "POST"
            }).done(function(data, textStatus, jqXHR) {
                result = data;
                task.chain();
            }).fail(function(jqXHR) {
                var error = {
                    code: jqXHR.status,
                    message: jqXHR.statusText
                };
                if(error.code == 200) {
                    error.message = jqXHR.responseText;
                }
                handleError(error, task);
            });
        });
        task.onSuccess(function() {
            callback(undefined, result);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    googleHelper.checkChanges = function(lastChangeId, callback) {
        var changes = [];
        var newChangeId = lastChangeId || 0;
        var task = new AsyncTask();
        connect(task);
        authenticate(task, 'gdrive');
        task.onRun(function() {
            var nextPageToken = undefined;
            function retrievePageOfChanges() {
                var request = undefined;
                if(nextPageToken === undefined) {
                    request = gapi.client.drive.changes.list({
                        'startChangeId': newChangeId + 1
                    });
                }
                else {
                    request = gapi.client.drive.changes.list({
                        'pageToken': nextPageToken
                    });
                }

                request.execute(function(response) {
                    if(!response || !response.largestChangeId) {
                        // Handle error
                        handleError(response.error, task);
                        return;
                    }
                    // Retrieve success
                    newChangeId = response.largestChangeId;
                    nextPageToken = response.nextPageToken;
                    if(response.items !== undefined) {
                        changes = changes.concat(response.items);
                    }
                    if(nextPageToken !== undefined) {
                        task.chain(retrievePageOfChanges);
                    }
                    else {
                        task.chain();
                    }
                });
            }
            task.chain(retrievePageOfChanges);
        });
        task.onSuccess(function() {
            callback(undefined, changes, newChangeId);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    googleHelper.downloadMetadata = function(ids, callback, skipAuth) {
        var result = [];
        var task = new AsyncTask();
        connect(task);
        if(!skipAuth) {
            authenticate(task, 'gdrive');
        }
        task.onRun(function() {
            function recursiveDownloadMetadata() {
                if(ids.length === 0) {
                    task.chain();
                    return;
                }
                var id = ids[0];
                var headers = {};
                var token = gapi.auth.getToken();
                if(token) {
                    headers.Authorization = "Bearer " + token.access_token;
                }
                $.ajax({
                    url: "https://www.googleapis.com/drive/v2/files/" + id,
                    headers: headers,
                    data: {
                        key: GOOGLE_API_KEY
                    },
                    dataType: "json",
                    timeout: AJAX_TIMEOUT
                }).done(function(data, textStatus, jqXHR) {
                    result.push(data);
                    ids.shift();
                    task.chain(recursiveDownloadMetadata);
                }).fail(function(jqXHR) {
                    var error = {
                        code: jqXHR.status,
                        message: jqXHR.statusText
                    };
                    // Handle error
                    if(error.code === 404) {
                        error = 'File ID "' + id + '" not found on Google Drive.';
                    }
                    handleError(error, task);
                });
            }
            task.chain(recursiveDownloadMetadata);
        });
        task.onSuccess(function() {
            callback(undefined, result);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    googleHelper.downloadContent = function(objects, callback, skipAuth) {
        var result = [];
        var task = new AsyncTask();
        // Add some time for user to choose his files
        task.timeout = ASYNC_TASK_LONG_TIMEOUT;
        connect(task);
        if(!skipAuth) {
            authenticate(task, 'gdrive');
        }
        task.onRun(function() {
            function recursiveDownloadContent() {
                if(objects.length === 0) {
                    task.chain();
                    return;
                }
                var object = objects[0];
                result.push(object);
                var file = undefined;
                // object may be a file
                if(object.kind == "drive#file") {
                    file = object;
                }
                // object may be a change
                else if(object.kind == "drive#change") {
                    file = object.file;
                }
                if(!file) {
                    objects.shift();
                    task.chain(recursiveDownloadContent);
                    return;
                }
                // if file is a real time document
                if(file.mimeType.indexOf("application/vnd.google-apps.drive-sdk") === 0) {
                    file.content = "";
                    file.isRealtime = true;
                    objects.shift();
                    task.chain(recursiveDownloadContent);
                    return;
                }
                var headers = {};
                var token = gapi.auth.getToken();
                if(token) {
                    headers.Authorization = "Bearer " + token.access_token;
                }
                $.ajax({
                    url: file.downloadUrl,
                    headers: headers,
                    data: {
                        key: GOOGLE_API_KEY
                    },
                    dataType: "text",
                    timeout: AJAX_TIMEOUT
                }).done(function(data, textStatus, jqXHR) {
                    file.content = data;
                    objects.shift();
                    task.chain(recursiveDownloadContent);
                }).fail(function(jqXHR) {
                    var error = {
                        code: jqXHR.status,
                        message: jqXHR.statusText
                    };
                    // Handle error
                    handleError(error, task);
                });
            }
            task.chain(recursiveDownloadContent);
        });
        task.onSuccess(function() {
            callback(undefined, result);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    googleHelper.loadRealtime = function(fileId, content, callback, errorCallback) {
        var doc = undefined;
        var task = new AsyncTask();
        connect(task);
        authenticate(task, 'gdrive');
        task.onRun(function() {
            gapi.drive.realtime.load(fileId, function(result) {
                // onFileLoaded
                doc = result;
                task.chain();
            }, function(model) {
                // initializeModel
                var string = model.createString(content);
                model.getRoot().set('content', string);
            }, function(err) {
                errorCallback(err);
                task.error(new Error(err.message));
            });
        });
        task.onSuccess(function() {
            callback(undefined, doc);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    function handleError(error, task) {
        var errorMsg = undefined;
        if(error) {
            logger.error(error);
            // Try to analyze the error
            if(typeof error === "string") {
                errorMsg = error;
            }
            else {
                errorMsg = "Google error (" + error.code + ": " + error.message + ").";
                if(error.code >= 500 && error.code < 600) {
                    // Retry as described in Google's best practices
                    task.retry(new Error(errorMsg));
                    return;
                }
                else if(error.code === 401 || error.code === 403 || error.code == "token_refresh_required") {
                    permissionList = {};
                    errorMsg = "Access to Google account is not authorized.";
                    task.retry(new Error(errorMsg), 1);
                    return;
                }
                else if(error.code === 0 || error.code === -1) {
                    connected = false;
                    permissionList = {};
                    core.setOffline();
                    errorMsg = "|stopPublish";
                }
            }
        }
        task.error(new Error(errorMsg));
    }

    var pickerLoaded = false;
    function loadPicker(task) {
        task.onRun(function() {
            if(pickerLoaded === true) {
                task.chain();
                return;
            }
            $.ajax({
                url: "//www.google.com/jsapi",
                data: {
                    key: GOOGLE_API_KEY
                },
                dataType: "script",
                timeout: AJAX_TIMEOUT
            }).done(function() {
                google.load('picker', '1', {
                    callback: function() {
                        task.chain();
                    }
                });
                pickerLoaded = true;
            }).fail(function(jqXHR) {
                var error = {
                    code: jqXHR.status,
                    message: jqXHR.statusText
                };
                handleError(error, task);
            });
        });
    }

    googleHelper.picker = function(callback, pickerType) {
        var docs = [];
        var picker = undefined;
        function hidePicker() {
            if(picker !== undefined) {
                picker.setVisible(false);
                $(".modal-backdrop, .picker").remove();
            }
        }
        var task = new AsyncTask();
        // Add some time for user to choose his files
        task.timeout = ASYNC_TASK_LONG_TIMEOUT;
        connect(task);
        loadPicker(task);
        task.onRun(function() {
            var pickerBuilder = new google.picker.PickerBuilder();
            pickerBuilder.setAppId(GOOGLE_DRIVE_APP_ID);
            if(pickerType == 'doc') {
                var view = new google.picker.DocsView(google.picker.ViewId.DOCS);
                view.setIncludeFolders(true);
                view.setMimeTypes([
                    "text/x-markdown",
                    "text/plain",
                    "application/octet-stream",
                    "application/vnd.google-apps.drive-sdk." + GOOGLE_DRIVE_APP_ID
                ].join(","));
                pickerBuilder.enableFeature(google.picker.Feature.NAV_HIDDEN);
                pickerBuilder.enableFeature(google.picker.Feature.MULTISELECT_ENABLED);
                pickerBuilder.addView(view);
            }
            else if(pickerType == 'folder') {
                var view = new google.picker.DocsView(google.picker.ViewId.FOLDERS);
                view.setIncludeFolders(true);
                view.setSelectFolderEnabled(true);
                view.setMimeTypes('application/vnd.google-apps.folder');
                pickerBuilder.enableFeature(google.picker.Feature.NAV_HIDDEN);
                pickerBuilder.addView(view);
            }
            else if(pickerType == 'img') {
                pickerBuilder.addView(google.picker.ViewId.PHOTOS);
                pickerBuilder.addView(google.picker.ViewId.PHOTO_UPLOAD);
            }
            pickerBuilder.setCallback(function(data) {
                if(data.action == google.picker.Action.PICKED || data.action == google.picker.Action.CANCEL) {
                    if(data.action == google.picker.Action.PICKED) {
                        docs = data.docs;
                    }
                    hidePicker();
                    task.chain();
                }
            });
            picker = pickerBuilder.build();
            $(utils.createBackdrop()).click(function() {
                hidePicker();
                task.chain();
            });
            picker.setVisible(true);
        });
        task.onSuccess(function() {
            callback(undefined, docs);
        });
        task.onError(function(error) {
            hidePicker();
            callback(error);
        });
        task.enqueue();
    };

    googleHelper.uploadBlogger = function(blogUrl, blogId, postId, labelList, title, content, callback) {
        var task = new AsyncTask();
        connect(task);
        authenticate(task, 'blogger');
        task.onRun(function() {
            var headers = {};
            var token = gapi.auth.getToken();
            if(token) {
                headers.Authorization = "Bearer " + token.access_token;
            }
            function publish() {
                var url = "https://www.googleapis.com/blogger/v3/blogs/" + blogId + "/posts/";
                var data = {
                    kind: "blogger#post",
                    blog: {
                        id: blogId
                    },
                    labels: labelList,
                    title: title,
                    content: content
                };
                var type = "POST";
                // If it's an update
                if(postId !== undefined) {
                    url += postId;
                    data.id = postId;
                    type = "PUT";
                }
                $.ajax({
                    url: url,
                    data: JSON.stringify(data),
                    headers: headers,
                    type: type,
                    contentType: "application/json",
                    dataType: "json",
                    timeout: AJAX_TIMEOUT
                }).done(function(post, textStatus, jqXHR) {
                    postId = post.id;
                    task.chain();
                }).fail(function(jqXHR) {
                    var error = {
                        code: jqXHR.status,
                        message: jqXHR.statusText
                    };
                    // Handle error
                    if(error.code === 404 && postId !== undefined) {
                        error = 'Post ' + postId + ' not found on Blogger.|removePublish';
                    }
                    handleError(error, task);
                });
            }
            function getBlogId() {
                if(blogId !== undefined) {
                    task.chain(publish);
                    return;
                }
                $.ajax({
                    url: "https://www.googleapis.com/blogger/v3/blogs/byurl",
                    data: {
                        url: blogUrl
                    },
                    headers: headers,
                    dataType: "json",
                    timeout: AJAX_TIMEOUT
                }).done(function(blog, textStatus, jqXHR) {
                    blogId = blog.id;
                    task.chain(publish);
                }).fail(function(jqXHR) {
                    var error = {
                        code: jqXHR.status,
                        message: jqXHR.statusText
                    };
                    // Handle error
                    if(error.code === 404) {
                        error = 'Blog "' + blogUrl + '" not found on Blogger.|removePublish';
                    }
                    handleError(error, task);
                });
            }
            task.chain(getBlogId);
        });
        task.onSuccess(function() {
            callback(undefined, blogId, postId);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    return googleHelper;
});

define('providers/gdriveProvider',[
    "underscore",
    "utils",
    "classes/Provider",
    "settings",
    "eventMgr",
    "fileMgr",
    "helpers/googleHelper"
], function(_, utils, Provider, settings, eventMgr, fileMgr, googleHelper) {

    var PROVIDER_GDRIVE = "gdrive";

    var gdriveProvider = new Provider(PROVIDER_GDRIVE, "Google Drive");
    gdriveProvider.defaultPublishFormat = "template";
    gdriveProvider.exportPreferencesInputIds = [
        "gdrive-parentid",
        "gdrive-realtime",
    ];

    function createSyncIndex(id) {
        return "sync." + PROVIDER_GDRIVE + "." + id;
    }

    function createSyncAttributes(id, etag, content, title) {
        var syncAttributes = {};
        syncAttributes.provider = gdriveProvider;
        syncAttributes.id = id;
        syncAttributes.etag = etag;
        syncAttributes.contentCRC = utils.crc32(content);
        syncAttributes.titleCRC = utils.crc32(title);
        syncAttributes.syncIndex = createSyncIndex(id);
        return syncAttributes;
    }

    function importFilesFromIds(ids) {
        googleHelper.downloadMetadata(ids, function(error, result) {
            if(error) {
                return;
            }
            googleHelper.downloadContent(result, function(error, result) {
                if(error) {
                    return;
                }
                var fileDescList = [];
                var fileDesc = undefined;
                _.each(result, function(file) {
                    var syncAttributes = createSyncAttributes(file.id, file.etag, file.content, file.title);
                    syncAttributes.isRealtime = file.isRealtime;
                    var syncLocations = {};
                    syncLocations[syncAttributes.syncIndex] = syncAttributes;
                    fileDesc = fileMgr.createFile(file.title, file.content, syncLocations);
                    fileDescList.push(fileDesc);
                });
                if(fileDesc !== undefined) {
                    eventMgr.onSyncImportSuccess(fileDescList, gdriveProvider);
                    fileMgr.selectFile(fileDesc);
                }
            });
        });
    }

    gdriveProvider.importFiles = function() {
        googleHelper.picker(function(error, docs) {
            if(error || docs.length === 0) {
                return;
            }
            var importIds = [];
            _.each(docs, function(doc) {
                var syncIndex = createSyncIndex(doc.id);
                var fileDesc = fileMgr.getFileFromSyncIndex(syncIndex);
                if(fileDesc !== undefined) {
                    eventMgr.onError('"' + fileDesc.title + '" was already imported.');
                    return;
                }
                importIds.push(doc.id);
            });
            importFilesFromIds(importIds);
        }, 'doc');
    };

    gdriveProvider.exportFile = function(event, title, content, callback) {
        var fileId = utils.getInputTextValue("#input-sync-export-gdrive-fileid");
        if(fileId) {
            // Check that file is not synchronized with another an existing
            // document
            var syncIndex = createSyncIndex(fileId);
            var fileDesc = fileMgr.getFileFromSyncIndex(syncIndex);
            if(fileDesc !== undefined) {
                eventMgr.onError('File ID is already synchronized with "' + fileDesc.title + '".');
                callback(true);
                return;
            }
        }
        var parentId = utils.getInputTextValue("#input-sync-export-gdrive-parentid");
        googleHelper.upload(fileId, parentId, title, content, undefined, undefined, function(error, result) {
            if(error) {
                callback(error);
                return;
            }
            var syncAttributes = createSyncAttributes(result.id, result.etag, content, title);
            callback(undefined, syncAttributes);
        });
    };

    gdriveProvider.exportRealtimeFile = function(event, title, content, callback) {
        var parentId = utils.getInputTextValue("#input-sync-export-gdrive-parentid");
        googleHelper.createRealtimeFile(parentId, title, function(error, result) {
            if(error) {
                callback(error);
                return;
            }
            var syncAttributes = createSyncAttributes(result.id, result.etag, content, title);
            callback(undefined, syncAttributes);
        });
    };

    gdriveProvider.syncUp = function(uploadContent, uploadContentCRC, uploadTitle, uploadTitleCRC, syncAttributes, callback) {
        // Skip if CRC has not changed
        if(uploadContentCRC == syncAttributes.contentCRC && uploadTitleCRC == syncAttributes.titleCRC) {
            callback(undefined, false);
            return;
        }
        googleHelper.upload(syncAttributes.id, undefined, uploadTitle, uploadContent, undefined, syncAttributes.etag, function(error, result) {
            if(error) {
                callback(error, true);
                return;
            }
            syncAttributes.etag = result.etag;
            syncAttributes.contentCRC = uploadContentCRC;
            syncAttributes.titleCRC = uploadTitleCRC;
            callback(undefined, true);
        });
    };

    gdriveProvider.syncUpRealtime = function(uploadContent, uploadContentCRC, uploadTitle, uploadTitleCRC, syncAttributes, callback) {
        // Skip if title CRC has not changed
        if(uploadTitleCRC == syncAttributes.titleCRC) {
            callback(undefined, false);
            return;
        }
        googleHelper.rename(syncAttributes.id, uploadTitle, function(error, result) {
            if(error) {
                callback(error, true);
                return;
            }
            syncAttributes.etag = result.etag;
            syncAttributes.titleCRC = uploadTitleCRC;
            callback(undefined, true);
        });
    };

    gdriveProvider.syncDown = function(callback) {
        var lastChangeId = parseInt(localStorage[PROVIDER_GDRIVE + ".lastChangeId"]);
        googleHelper.checkChanges(lastChangeId, function(error, changes, newChangeId) {
            if(error) {
                callback(error);
                return;
            }
            var interestingChanges = [];
            _.each(changes, function(change) {
                var syncIndex = createSyncIndex(change.fileId);
                var syncAttributes = fileMgr.getSyncAttributes(syncIndex);
                if(syncAttributes === undefined) {
                    return;
                }
                // Store syncAttributes to avoid 2 times searching
                change.syncAttributes = syncAttributes;
                // Delete
                if(change.deleted === true) {
                    interestingChanges.push(change);
                    return;
                }
                // Modify
                if(syncAttributes.etag != change.file.etag) {
                    interestingChanges.push(change);
                }
            });
            googleHelper.downloadContent(interestingChanges, function(error, changes) {
                if(error) {
                    callback(error);
                    return;
                }
                _.each(changes, function(change) {
                    var syncAttributes = change.syncAttributes;
                    var syncIndex = syncAttributes.syncIndex;
                    var fileDesc = fileMgr.getFileFromSyncIndex(syncIndex);
                    // No file corresponding (file may have been deleted
                    // locally)
                    if(fileDesc === undefined) {
                        return;
                    }
                    var localTitle = fileDesc.title;
                    // File deleted
                    if(change.deleted === true) {
                        eventMgr.onError('"' + localTitle + '" has been removed from Google Drive.');
                        fileDesc.removeSyncLocation(syncAttributes);
                        eventMgr.onSyncRemoved(fileDesc, syncAttributes);
                        if(syncAttributes.isRealtime === true && fileMgr.currentFile === fileDesc) {
                            gdriveProvider.stopRealtimeSync();
                        }
                        return;
                    }
                    var localTitleChanged = syncAttributes.titleCRC != utils.crc32(localTitle);
                    var localContent = fileDesc.content;
                    var localContentChanged = syncAttributes.contentCRC != utils.crc32(localContent);
                    var file = change.file;
                    var remoteTitleCRC = utils.crc32(file.title);
                    var remoteTitleChanged = syncAttributes.titleCRC != remoteTitleCRC;
                    var fileTitleChanged = localTitle != file.title;
                    var remoteContentCRC = utils.crc32(file.content);
                    var remoteContentChanged = syncAttributes.contentCRC != remoteContentCRC;
                    var fileContentChanged = localContent != file.content;
                    // Conflict detection
                    if((fileTitleChanged === true && localTitleChanged === true && remoteTitleChanged === true) || (!syncAttributes.isRealtime && fileContentChanged === true && localContentChanged === true && remoteContentChanged === true)) {
                        fileMgr.createFile(localTitle + " (backup)", localContent);
                        eventMgr.onMessage('Conflict detected on "' + localTitle + '". A backup has been created locally.');
                    }
                    // If file title changed
                    if(fileTitleChanged && remoteTitleChanged === true) {
                        fileDesc.title = file.title;
                        eventMgr.onTitleChanged(fileDesc);
                        eventMgr.onMessage('"' + localTitle + '" has been renamed to "' + file.title + '" on Google Drive.');
                    }
                    // If file content changed
                    if(!syncAttributes.isRealtime && fileContentChanged && remoteContentChanged === true) {
                        fileDesc.content = file.content;
                        eventMgr.onContentChanged(fileDesc);
                        eventMgr.onMessage('"' + file.title + '" has been updated from Google Drive.');
                        if(fileMgr.currentFile === fileDesc) {
                            fileMgr.selectFile(); // Refresh editor
                        }
                    }
                    // Update syncAttributes
                    syncAttributes.etag = file.etag;
                    if(!syncAttributes.isRealtime) {
                        syncAttributes.contentCRC = remoteContentCRC;
                    }
                    syncAttributes.titleCRC = remoteTitleCRC;
                    utils.storeAttributes(syncAttributes);
                });
                localStorage[PROVIDER_GDRIVE + ".lastChangeId"] = newChangeId;
                callback();
            });
        });
    };

    gdriveProvider.publish = function(publishAttributes, frontMatter, title, content, callback) {
        var contentType = publishAttributes.format != "markdown" ? 'text/html' : undefined;
        googleHelper.upload(publishAttributes.id, undefined, publishAttributes.fileName || title, content, contentType, undefined, function(error, result) {
            if(error) {
                callback(error);
                return;
            }
            publishAttributes.id = result.id;
            callback();
        });
    };

    gdriveProvider.newPublishAttributes = function(event) {
        var publishAttributes = {};
        publishAttributes.id = utils.getInputTextValue("#input-publish-gdrive-fileid");
        publishAttributes.fileName = utils.getInputTextValue("#input-publish-gdrive-filename");
        if(event.isPropagationStopped()) {
            return undefined;
        }
        return publishAttributes;
    };

    // Keep a link to the Pagedown editor
    var pagedownEditor = undefined;
    var undoExecute = undefined;
    var redoExecute = undefined;
    var setUndoRedoButtonStates = undefined;
    eventMgr.addListener("onPagedownConfigure", function(pagedownEditorParam) {
        pagedownEditor = pagedownEditorParam;
    });

    // Keep a link to the ACE editor
    var realtimeContext = undefined;
    var aceEditor = undefined;
    var isAceUpToDate = true;
    eventMgr.addListener('onAceCreated', function(aceEditorParam) {
        aceEditor = aceEditorParam;
        // Listen to editor's changes
        aceEditor.session.on('change', function(e) {
            // Update the real time model if any
            realtimeContext && realtimeContext.string && realtimeContext.string.setText(aceEditor.getValue());
        });
    });

    // Start realtime synchronization
    var Range = require('ace/range').Range;
    gdriveProvider.startRealtimeSync = function(fileDesc, syncAttributes) {
        var localContext = {};
        realtimeContext = localContext;
        googleHelper.loadRealtime(syncAttributes.id, fileDesc.content, function(err, doc) {
            if(err || !doc) {
                return;
            }

            // If user just switched to another document or file has just been
            // reselected
            if(localContext.isStopped === true) {
                doc.close();
                return;
            }

            logger.log("Starting Google Drive realtime synchronization");
            localContext.document = doc;
            var model = doc.getModel();
            var realtimeString = model.getRoot().get('content');

            // Saves model content checksum
            function updateContentState() {
                syncAttributes.contentCRC = utils.crc32(realtimeString.getText());
                utils.storeAttributes(syncAttributes);
            }

            var debouncedRefreshPreview = _.debounce(pagedownEditor.refreshPreview, 100);

            // Listen to insert text events
            realtimeString.addEventListener(gapi.drive.realtime.EventType.TEXT_INSERTED, function(e) {
                if(aceEditor !== undefined && (isAceUpToDate === false || e.isLocal === false)) {
                    // Update ACE editor
                    var position = aceEditor.session.doc.indexToPosition(e.index);
                    aceEditor.session.insert(position, e.text);
                    isAceUpToDate = true;
                }
                // If modifications come down from a collaborator
                if(e.isLocal === false) {
                    logger.log("Google Drive realtime document updated from server");
                    updateContentState();
                    aceEditor === undefined && debouncedRefreshPreview();
                }
            });
            // Listen to delete text events
            realtimeString.addEventListener(gapi.drive.realtime.EventType.TEXT_DELETED, function(e) {
                if(aceEditor !== undefined && (isAceUpToDate === false || e.isLocal === false)) {
                    // Update ACE editor
                    var range = (function(posStart, posEnd) {
                        return new Range(posStart.row, posStart.column, posEnd.row, posEnd.column);
                    })(aceEditor.session.doc.indexToPosition(e.index), aceEditor.session.doc.indexToPosition(e.index + e.text.length));
                    aceEditor.session.remove(range);
                    isAceUpToDate = true;
                }
                // If modifications come down from a collaborator
                if(e.isLocal === false) {
                    logger.log("Google Drive realtime document updated from server");
                    updateContentState();
                    aceEditor === undefined && debouncedRefreshPreview();
                }
            });
            doc.addEventListener(gapi.drive.realtime.EventType.DOCUMENT_SAVE_STATE_CHANGED, function(e) {
                // Save success event
                if(e.isPending === false && e.isSaving === false) {
                    logger.log("Google Drive realtime document successfully saved on server");
                    updateContentState();
                }
            });

            // Try to merge offline modifications
            var localContent = fileDesc.content;
            var localContentChanged = syncAttributes.contentCRC != utils.crc32(localContent);
            var remoteContent = realtimeString.getText();
            var remoteContentCRC = utils.crc32(remoteContent);
            var remoteContentChanged = syncAttributes.contentCRC != remoteContentCRC;
            var fileContentChanged = localContent != remoteContent;
            if(fileContentChanged === true && localContentChanged === true) {
                if(remoteContentChanged === true) {
                    // Conflict detected
                    fileMgr.createFile(fileDesc.title + " (backup)", localContent);
                    eventMgr.onMessage('Conflict detected on "' + fileDesc.title + '". A backup has been created locally.');
                }
                else {
                    // Add local modifications if no collaborators change
                    realtimeString.setText(localContent);
                }
            }

            if(aceEditor === undefined) {
                // Binds model with textarea
                localContext.binding = gapi.drive.realtime.databinding.bindString(realtimeString, document.getElementById("wmd-input"));
            }

            // Update content state according to collaborators changes
            if(remoteContentChanged === true) {
                logger.log("Google Drive realtime document updated from server");
                aceEditor !== undefined && aceEditor.setValue(remoteContent, -1);
                updateContentState();
                aceEditor === undefined && debouncedRefreshPreview();
            }

            if(aceEditor !== undefined) {
                // Tell ACE to update realtime string on each change
                localContext.string = realtimeString;

                // Save undo/redo buttons default actions
                undoExecute = pagedownEditor.uiManager.buttons.undo.execute;
                redoExecute = pagedownEditor.uiManager.buttons.redo.execute;
                setUndoRedoButtonStates = pagedownEditor.uiManager.setUndoRedoButtonStates;
                
                // Set temporary actions for undo/redo buttons
                pagedownEditor.uiManager.buttons.undo.execute = function() {
                    if(model.canUndo) {
                        // This flag is used to avoid replaying editor's own
                        // modifications (assuming it's synchronous)
                        isAceUpToDate = false;
                        model.undo();
                    }
                };
                pagedownEditor.uiManager.buttons.redo.execute = function() {
                    if(model.canRedo) {
                        // This flag is used to avoid replaying editor's own
                        // modifications (assuming it's synchronous)
                        isAceUpToDate = false;
                        model.redo();
                    }
                };

                // Add event handler for model's UndoRedoStateChanged events
                pagedownEditor.uiManager.setUndoRedoButtonStates = function() {
                    setTimeout(function() {
                        pagedownEditor.uiManager.setButtonState(pagedownEditor.uiManager.buttons.undo, model.canUndo);
                        pagedownEditor.uiManager.setButtonState(pagedownEditor.uiManager.buttons.redo, model.canRedo);
                    }, 50);
                };
                pagedownEditor.uiManager.setUndoRedoButtonStates();
                model.addEventListener(gapi.drive.realtime.EventType.UNDO_REDO_STATE_CHANGED, function() {
                    pagedownEditor.uiManager.setUndoRedoButtonStates();
                });
            }

        }, function(err) {
            console.error(err);
            if(err.type == "token_refresh_required") {
                googleHelper.forceGdriveAuthenticate();
            }
            else if(err.type == "not_found") {
                eventMgr.onError('"' + fileDesc.title + '" has been removed from Google Drive.');
                fileDesc.removeSyncLocation(syncAttributes);
                eventMgr.onSyncRemoved(fileDesc, syncAttributes);
                gdriveProvider.stopRealtimeSync();
            }
            else if(err.isFatal) {
                eventMgr.onError('An error has forced real time synchronization to stop.');
                gdriveProvider.stopRealtimeSync();
            }
        });
    };

    // Stop realtime synchronization
    gdriveProvider.stopRealtimeSync = function() {
        logger.log("Stopping Google Drive realtime synchronization");
        if(realtimeContext !== undefined) {
            realtimeContext.isStopped = true;
            realtimeContext.binding && realtimeContext.binding.unbind();
            realtimeContext.document && realtimeContext.document.close();
            realtimeContext = undefined;
        }

        if(setUndoRedoButtonStates !== undefined) {
            // Set back original undo/redo actions
            pagedownEditor.uiManager.buttons.undo.execute = undoExecute;
            pagedownEditor.uiManager.buttons.redo.execute = redoExecute;
            pagedownEditor.uiManager.setUndoRedoButtonStates = setUndoRedoButtonStates;
            pagedownEditor.uiManager.setUndoRedoButtonStates();
        }
    };

    eventMgr.addListener("onReady", function() {
        // Choose folder button in export modal
        $('.export-gdrive-choose-folder').click(function() {
            googleHelper.picker(function(error, docs) {
                if(error || docs.length === 0) {
                    return;
                }
                // Open export dialog
                $(".modal-upload-gdrive").modal();
                // Set parent ID
                utils.setInputValue('#input-sync-export-gdrive-parentid', docs[0].id);
            }, 'folder');
        });

        // On export, disable file ID input if realtime is checked
        var $realtimeCheckboxElt = $('#input-sync-export-gdrive-realtime');
        var $fileIdInputElt = $('#input-sync-export-gdrive-fileid');
        $('#input-sync-export-gdrive-realtime').change(function() {
            $fileIdInputElt.prop('disabled', $realtimeCheckboxElt.prop('checked'));
        });

        var state = utils.retrieveIgnoreError(PROVIDER_GDRIVE + ".state");
        if(state === undefined) {
            return;
        }
        localStorage.removeItem(PROVIDER_GDRIVE + ".state");
        if(state.action == "create") {
            googleHelper.upload(undefined, state.folderId, GDRIVE_DEFAULT_FILE_TITLE, settings.defaultContent, undefined, undefined, function(error, file) {
                if(error) {
                    return;
                }
                var syncAttributes = createSyncAttributes(file.id, file.etag, file.content, file.title);
                var syncLocations = {};
                syncLocations[syncAttributes.syncIndex] = syncAttributes;
                var fileDesc = fileMgr.createFile(file.title, file.content, syncLocations);
                fileMgr.selectFile(fileDesc);
                eventMgr.onMessage('"' + file.title + '" created successfully on Google Drive.');
            });
        }
        else if(state.action == "open") {
            var importIds = [];
            _.each(state.ids, function(id) {
                var syncIndex = createSyncIndex(id);
                var fileDesc = fileMgr.getFileFromSyncIndex(syncIndex);
                if(fileDesc !== undefined) {
                    fileDesc !== fileMgr.currentFile && fileMgr.selectFile(fileDesc);
                }
                else {
                    importIds.push(id);
                }
            });
            importFilesFromIds(importIds);
        }
    });

    return gdriveProvider;
});
define('synchronizer',[
    "jquery",
    "underscore",
    "utils",
    "eventMgr",
    "fileSystem",
    "fileMgr",
    "classes/Provider",
    "providers/dropboxProvider",
    "providers/gdriveProvider"
], function($, _, utils, eventMgr, fileSystem, fileMgr, Provider) {

    var synchronizer = {};

    // Create a map with providerId: providerModule
    var providerMap = _.chain(arguments).map(function(argument) {
        return argument instanceof Provider && [
            argument.providerId,
            argument
        ];
    }).compact().object().value();

    // Retrieve sync locations from localStorage
    _.each(fileSystem, function(fileDesc) {
        _.each(utils.retrieveIndexArray(fileDesc.fileIndex + ".sync"), function(syncIndex) {
            try {
                var syncAttributes = JSON.parse(localStorage[syncIndex]);
                // Store syncIndex
                syncAttributes.syncIndex = syncIndex;
                // Replace provider ID by provider module in attributes
                var provider = providerMap[syncAttributes.provider];
                if(!provider) {
                    throw new Error("Invalid provider ID: " + syncAttributes.provider);
                }
                syncAttributes.provider = provider;
                fileDesc.syncLocations[syncIndex] = syncAttributes;
            }
            catch(e) {
                // localStorage can be corrupted
                eventMgr.onError(e);
                // Remove sync location
                utils.removeIndexFromArray(fileDesc.fileIndex + ".sync", syncIndex);
                localStorage.removeItem(syncIndex);
            }
        });
    });
    
    // Returns true if at least one file has synchronized location
    synchronizer.hasSync = function(provider) {
        return _.some(fileSystem, function(fileDesc) {
            return _.some(fileDesc.syncLocations, function(syncAttributes) {
                return provider === undefined || syncAttributes.provider === provider;
            });
        });
    };

    /***************************************************************************
     * Standard synchronization
     **************************************************************************/

    // Recursive function to upload a single file on multiple locations
    var uploadSyncAttributesList = [];
    var uploadContent = undefined;
    var uploadContentCRC = undefined;
    var uploadTitle = undefined;
    var uploadTitleCRC = undefined;
    function locationUp(callback) {

        // No more synchronized location for this document
        if(uploadSyncAttributesList.length === 0) {
            fileUp(callback);
            return;
        }

        // Dequeue a synchronized location
        var syncAttributes = uploadSyncAttributesList.pop();

        var providerSyncUpFunction = syncAttributes.provider.syncUp;
        // Call a special function in case of a real time synchronized location
        if(syncAttributes.isRealtime === true) {
            providerSyncUpFunction = syncAttributes.provider.syncUpRealtime;
        }

        // Use the specified provider to perform the upload
        providerSyncUpFunction(uploadContent, uploadContentCRC, uploadTitle, uploadTitleCRC, syncAttributes, function(error, uploadFlag) {
            if(uploadFlag === true) {
                // If uploadFlag is true, request another upload cycle
                uploadCycle = true;
            }
            if(error) {
                callback(error);
                return;
            }
            if(uploadFlag) {
                // Update syncAttributes in localStorage
                utils.storeAttributes(syncAttributes);
            }
            locationUp(callback);
        });
    }

    // Recursive function to upload multiple files
    var uploadFileList = [];
    function fileUp(callback) {

        // No more fileDesc to synchronize
        if(uploadFileList.length === 0) {
            syncUp(callback);
            return;
        }

        // Dequeue a fileDesc to synchronize
        var fileDesc = uploadFileList.pop();
        uploadSyncAttributesList = _.values(fileDesc.syncLocations);
        if(uploadSyncAttributesList.length === 0) {
            fileUp(callback);
            return;
        }

        // Get document title/content
        uploadContent = fileDesc.content;
        uploadContentCRC = utils.crc32(uploadContent);
        uploadTitle = fileDesc.title;
        uploadTitleCRC = utils.crc32(uploadTitle);
        locationUp(callback);
    }

    // Entry point for up synchronization (upload changes)
    var uploadCycle = false;
    function syncUp(callback) {
        if(uploadCycle === true) {
            // New upload cycle
            uploadCycle = false;
            uploadFileList = _.values(fileSystem);
            fileUp(callback);
        }
        else {
            callback();
        }
    }

    // Recursive function to download changes from multiple providers
    var providerList = [];
    function providerDown(callback) {
        if(providerList.length === 0) {
            callback();
            return;
        }
        var provider = providerList.pop();

        // Check that provider has files to sync
        if(!synchronizer.hasSync(provider)) {
            providerDown(callback);
            return;
        }

        // Perform provider's syncDown
        provider.syncDown(function(error) {
            if(error) {
                callback(error);
                return;
            }
            providerDown(callback);
        });
    }

    // Entry point for down synchronization (download changes)
    function syncDown(callback) {
        providerList = _.values(providerMap);
        providerDown(callback);
    }

    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    // Main entry point for synchronization
    var syncRunning = false;
    synchronizer.sync = function() {
        // If sync is already running or offline
        if(syncRunning === true || isOffline === true) {
            return false;
        }
        syncRunning = true;
        eventMgr.onSyncRunning(true);
        uploadCycle = true;

        function isError(error) {
            if(error !== undefined) {
                syncRunning = false;
                eventMgr.onSyncRunning(false);
                return true;
            }
            return false;
        }

        syncDown(function(error) {
            if(isError(error)) {
                return;
            }
            syncUp(function(error) {
                if(isError(error)) {
                    return;
                }
                syncRunning = false;
                eventMgr.onSyncRunning(false);
                eventMgr.onSyncSuccess();
            });
        });
        return true;
    };

    /***************************************************************************
     * Realtime synchronization
     **************************************************************************/

    var realtimeFileDesc = undefined;
    var realtimeSyncAttributes = undefined;
    var isOnline = true;

    // Determines if open file has real time sync location and tries to start
    // real time sync
    function onFileOpen(fileDesc) {
        realtimeFileDesc = _.some(fileDesc.syncLocations, function(syncAttributes) {
            realtimeSyncAttributes = syncAttributes;
            return syncAttributes.isRealtime;
        }) ? fileDesc : undefined;
        tryStartRealtimeSync();
    }

    // Tries to start/stop real time sync on online/offline event
    function onOfflineChanged(isOfflineParam) {
        if(isOfflineParam === false) {
            isOnline = true;
            tryStartRealtimeSync();
        }
        else {
            synchronizer.tryStopRealtimeSync();
            isOnline = false;
        }
    }

    // Starts real time synchronization if:
    // 1. current file has real time sync location
    // 2. we are online
    function tryStartRealtimeSync() {
        if(realtimeFileDesc !== undefined && isOnline === true) {
            realtimeSyncAttributes.provider.startRealtimeSync(realtimeFileDesc, realtimeSyncAttributes);
        }
    }

    // Stops previously started synchronization if any
    synchronizer.tryStopRealtimeSync = function() {
        if(realtimeFileDesc !== undefined && isOnline === true) {
            realtimeSyncAttributes.provider.stopRealtimeSync();
        }
    };

    // Triggers realtime synchronization from eventMgr events
    if(viewerMode === false) {
        eventMgr.addListener("onFileOpen", onFileOpen);
        eventMgr.addListener("onFileClosed", synchronizer.tryStopRealtimeSync);
        eventMgr.addListener("onOfflineChanged", onOfflineChanged);
    }

    /***************************************************************************
     * Initialize module
     **************************************************************************/

    // Initialize the export dialog
    function initExportDialog(provider) {

        // Reset fields
        utils.resetModalInputs();

        // Load preferences
        var exportPreferences = utils.retrieveIgnoreError(provider.providerId + ".exportPreferences");
        if(exportPreferences) {
            _.each(provider.exportPreferencesInputIds, function(inputId) {
                var exportPreferenceValue = exportPreferences[inputId];
                if(_.isBoolean(exportPreferenceValue)) {
                    utils.setInputChecked("#input-sync-export-" + inputId, exportPreferenceValue);
                }
                else {
                    utils.setInputValue("#input-sync-export-" + inputId, exportPreferenceValue);
                }
            });
        }

        // Open dialog box
        $(".modal-upload-" + provider.providerId).modal();
    }

    eventMgr.addListener("onReady", function() {
        // Init each provider
        _.each(providerMap, function(provider) {
            // Provider's import button
            $(".action-sync-import-" + provider.providerId).click(function(event) {
                provider.importFiles(event);
            });
            // Provider's export action
            $(".action-sync-export-dialog-" + provider.providerId).click(function() {
                initExportDialog(provider);
            });
            $(".action-sync-export-" + provider.providerId).click(function(event) {
                var isRealtime = utils.getInputChecked("#input-sync-export-" + provider.providerId + "-realtime");
                var fileDesc = fileMgr.currentFile;

                if(isRealtime) {
                    if(_.size(fileDesc.syncLocations) > 0) {
                        eventMgr.onError("Real time collaborative document can't be synchronized with multiple locations");
                        return;
                    }
                    // Perform the provider's real time export
                    provider.exportRealtimeFile(event, fileDesc.title, fileDesc.content, function(error, syncAttributes) {
                        if(error) {
                            return;
                        }
                        syncAttributes.isRealtime = true;
                        fileDesc.addSyncLocation(syncAttributes);
                        eventMgr.onSyncExportSuccess(fileDesc, syncAttributes);

                        // Start the real time sync
                        realtimeFileDesc = fileDesc;
                        realtimeSyncAttributes = syncAttributes;
                        tryStartRealtimeSync();
                    });
                }
                else {
                    if(_.size(fileDesc.syncLocations) > 0 && _.first(_.values(fileDesc.syncLocations)).isRealtime) {
                        eventMgr.onError("Real time collaborative document can't be synchronized with multiple locations");
                        return;
                    }
                    // Perform the provider's standard export
                    provider.exportFile(event, fileDesc.title, fileDesc.content, function(error, syncAttributes) {
                        if(error) {
                            return;
                        }
                        fileDesc.addSyncLocation(syncAttributes);
                        eventMgr.onSyncExportSuccess(fileDesc, syncAttributes);
                    });
                }

                // Store input values as preferences for next time we open the
                // export dialog
                var exportPreferences = {};
                _.each(provider.exportPreferencesInputIds, function(inputId) {
                    var inputElt = document.getElementById("input-sync-export-" + inputId);
                    if(inputElt.type == 'checkbox') {
                        exportPreferences[inputId] = inputElt.checked;
                    }
                    else {
                        exportPreferences[inputId] = inputElt.value;
                    }
                });
                localStorage[provider.providerId + ".exportPreferences"] = JSON.stringify(exportPreferences);
            });
        });
    });

    eventMgr.onSynchronizerCreated(synchronizer);
    return synchronizer;
});

define('providers/downloadProvider',[
    "jquery",
    "eventMgr",
    "utils",
    "fileMgr",
    "classes/Provider",
    "classes/AsyncTask"
], function($, eventMgr, utils, fileMgr, Provider, AsyncTask) {

    var downloadProvider = new Provider("download");
    downloadProvider.sharingAttributes = [
        "url"
    ];

    downloadProvider.importPublic = function(importParameters, callback) {
        var title = undefined;
        var content = undefined;
        var task = new AsyncTask();
        task.onRun(function() {
            var url = importParameters.url;
            var slashUrl = url.lastIndexOf("/");
            if(slashUrl === -1) {
                task.error(new Error("Invalid URL parameter."));
                return;
            }
            title = url.substring(slashUrl + 1);
            $.ajax({
                url: DOWNLOAD_PROXY_URL + "download?url=" + url,
                type: "GET",
                dataType: "text",
                timeout: AJAX_TIMEOUT
            }).done(function(result, textStatus, jqXHR) {
                content = result;
                task.chain();
            }).fail(function(jqXHR) {
                task.error(new Error("Unable to access URL " + url));
            });
        });
        task.onSuccess(function() {
            callback(undefined, title, content);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    eventMgr.addListener("onReady", function() {
        $('.action-import-url').click(function(e) {
            var url = utils.getInputTextValue('#input-import-url', e);
            if(url) {
                downloadProvider.importPublic({
                    url: url
                }, function(error, title, content) {
                    if(error) {
                        return;
                    }
                    var fileDesc = fileMgr.createFile(title, content);
                    fileMgr.selectFile(fileDesc);
                });
            }
        });
    });

    return downloadProvider;
});
define('helpers/githubHelper',[
    "jquery",
    "core",
    "utils",
    "eventMgr",
    "classes/AsyncTask",
    "config"
], function($, core, utils, eventMgr, AsyncTask) {

    var connected = undefined;
    var github = undefined;

    var githubHelper = {};

    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    // Try to connect github by downloading js file
    function connect(task) {
        task.onRun(function() {
            if(isOffline === true) {
                connected = false;
                task.error(new Error("Operation not available in offline mode.|stopPublish"));
                return;
            }
            if(connected === true) {
                task.chain();
                return;
            }
            $.ajax({
                url: "lib/github.js",
                dataType: "script",
                timeout: AJAX_TIMEOUT
            }).done(function() {
                connected = true;
                task.chain();
            }).fail(function(jqXHR) {
                var error = {
                    error: jqXHR.status,
                    message: jqXHR.statusText
                };
                handleError(error, task);
            });
        });
    }

    // Try to authenticate with Oauth
    function authenticate(task) {
        var authWindow = undefined;
        var intervalId = undefined;
        task.onRun(function() {
            if(github !== undefined) {
                task.chain();
                return;
            }
            var token = localStorage.githubToken;
            if(token !== undefined) {
                github = new Github({
                    token: token,
                    auth: "oauth"
                });
                task.chain();
                return;
            }
            var errorMsg = "Failed to retrieve a token from GitHub.";
            // We add time for user to enter his credentials
            task.timeout = ASYNC_TASK_LONG_TIMEOUT;
            var code = undefined;
            function oauthRedirect() {
                core.oauthRedirect('GitHub', function() {
                    task.chain(getCode);
                });
            }
            function getCode() {
                eventMgr.onMessage("Please make sure the Github authorization popup is not blocked by your browser.");
                localStorage.removeItem("githubCode");
                authWindow = utils.popupWindow('github-oauth-client.html?client_id=' + GITHUB_CLIENT_ID, 'stackedit-github-oauth', 960, 600);
                authWindow.focus();
                intervalId = setInterval(function() {
                    if(authWindow.closed === true) {
                        clearInterval(intervalId);
                        authWindow = undefined;
                        intervalId = undefined;
                        code = localStorage.githubCode;
                        if(code === undefined) {
                            task.error(new Error(errorMsg));
                            return;
                        }
                        localStorage.removeItem("githubCode");
                        task.chain(getToken);
                    }
                }, 500);
            }
            function getToken() {
                $.getJSON(GATEKEEPER_URL + "authenticate/" + code, function(data) {
                    if(data.token !== undefined) {
                        token = data.token;
                        localStorage.githubToken = token;
                        github = new Github({
                            token: token,
                            auth: "oauth"
                        });
                        task.chain();
                    }
                    else {
                        task.error(new Error(errorMsg));
                    }
                });
            }
            task.chain(oauthRedirect);
        });
        task.onError(function() {
            if(intervalId !== undefined) {
                clearInterval(intervalId);
            }
            if(authWindow !== undefined) {
                authWindow.close();
            }
        });
    }

    githubHelper.upload = function(reponame, username, branch, path, content, commitMsg, callback) {
        var task = new AsyncTask();
        connect(task);
        authenticate(task);
        task.onRun(function() {
            function getUsername() {
                var user = github.getUser();
                user.show(undefined, function(err, result) {
                    if(err) {
                        handleError(err, task);
                        return;
                    }
                    username = result.login;
                    task.chain(write);
                });
            }
            function write() {
                var repo = github.getRepo(username, reponame);
                repo.write(branch, path, content, commitMsg, function(err) {
                    if(err) {
                        handleError(err, task);
                        return;
                    }
                    task.chain();
                });
            }
            if(username) {
                task.chain(write);
            }
            else {
                task.chain(getUsername);
            }
        });
        task.onSuccess(function() {
            callback();
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    githubHelper.uploadGist = function(gistId, filename, isPublic, title, content, callback) {
        var task = new AsyncTask();
        connect(task);
        authenticate(task);
        task.onRun(function() {
            var gist = github.getGist(gistId);
            var files = {};
            files[filename] = {
                content: content
            };
            githubFunction = gist.update;
            if(gistId === undefined) {
                githubFunction = gist.create;
            }
            githubFunction({
                description: title,
                "public": isPublic,
                files: files
            }, function(err, gist) {
                if(err) {
                    // Handle error
                    if(err.error === 404 && gistId !== undefined) {
                        err = 'Gist ' + gistId + ' not found on GitHub.|removePublish';
                    }
                    handleError(err, task);
                    return;
                }
                gistId = gist.id;
                task.chain();
            });
        });
        task.onSuccess(function() {
            callback(undefined, gistId);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    githubHelper.downloadGist = function(gistId, filename, callback) {
        var task = new AsyncTask();
        connect(task);
        // No need for authentication
        var title = undefined;
        var content = undefined;
        task.onRun(function() {
            var github = new Github({});
            var gist = github.getGist(gistId);
            gist.read(function(err, gist) {
                if(err) {
                    // Handle error
                    task.error(new Error('Error trying to access Gist ' + gistId + '.'));
                    return;
                }
                title = gist.description;
                var file = gist.files[filename];
                if(file === undefined) {
                    task.error(new Error('Gist ' + gistId + ' does not contain "' + filename + '".'));
                    return;
                }
                content = file.content;
                task.chain();
            });
        });
        task.onSuccess(function() {
            callback(undefined, title, content);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    function handleError(error, task) {
        var errorMsg = undefined;
        if(error) {
            logger.error(error);
            // Try to analyze the error
            if(typeof error === "string") {
                errorMsg = error;
            }
            else {
                errorMsg = "Could not publish on GitHub.";
                if(error.error === 401 || error.error === 403) {
                    github = undefined;
                    localStorage.removeItem("githubToken");
                    errorMsg = "Access to GitHub account is not authorized.";
                    task.retry(new Error(errorMsg), 1);
                    return;
                }
                else if(error.error <= 0) {
                    connected = false;
                    github = undefined;
                    core.setOffline();
                    errorMsg = "|stopPublish";
                }
            }
        }
        task.error(new Error(errorMsg));
    }

    return githubHelper;
});

define('providers/gistProvider',[
    "utils",
    "classes/Provider",
    "helpers/githubHelper"
], function(utils, Provider, githubHelper) {

    var gistProvider = new Provider("gist", "Gist");
    gistProvider.publishPreferencesInputIds = [
        "gist-public"
    ];
    gistProvider.sharingAttributes = [
        "gistId",
        "filename"
    ];

    gistProvider.publish = function(publishAttributes, frontMatter, title, content, callback) {
        githubHelper.uploadGist(publishAttributes.gistId, publishAttributes.filename, publishAttributes.isPublic, title, content, function(error, gistId) {
            if(error) {
                callback(error);
                return;
            }
            publishAttributes.gistId = gistId;
            callback();
        });
    };

    gistProvider.newPublishAttributes = function(event) {
        var publishAttributes = {};
        publishAttributes.gistId = utils.getInputTextValue("#input-publish-gist-id");
        publishAttributes.filename = utils.getInputTextValue("#input-publish-filename", event);
        publishAttributes.isPublic = utils.getInputChecked("#input-publish-gist-public");
        if(event.isPropagationStopped()) {
            return undefined;
        }
        return publishAttributes;
    };

    gistProvider.importPublic = function(importParameters, callback) {
        githubHelper.downloadGist(importParameters.gistId, importParameters.filename, callback);
    };

    return gistProvider;
});
define('sharing',[
    "jquery",
    "underscore",
    "utils",
    "eventMgr",
    "fileMgr",
    "classes/AsyncTask",
    "classes/Provider",
    "providers/downloadProvider",
    "providers/gistProvider"
], function($, _, utils, eventMgr, fileMgr, AsyncTask, Provider) {

    var sharing = {};

    // Create a map with providerId: providerModule
    var providerMap = _.chain(arguments).map(function(argument) {
        return argument instanceof Provider && [
            argument.providerId,
            argument
        ];
    }).compact().object().value();

    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    sharing.createLink = function(attributes, callback) {
        var provider = providerMap[attributes.provider.providerId];
        // Don't create link if link already exists or provider is not
        // compatible for sharing
        if(attributes.sharingLink !== undefined || provider === undefined
        // Or document is not published in markdown format
        || attributes.format != "markdown") {
            callback();
            return;
        }
        var task = new AsyncTask();
        var shortUrl = undefined;
        task.onRun(function() {
            if(isOffline === true) {
                task.chain();
                return;
            }
            var url = [
                MAIN_URL,
                'viewer.html?provider=',
                provider.providerId
            ];
            _.each(provider.sharingAttributes, function(attributeName) {
                url.push('&');
                url.push(attributeName);
                url.push('=');
                url.push(encodeURIComponent(attributes[attributeName]));
            });
            url = url.join("");
            $.getJSON("https://api-ssl.bitly.com/v3/shorten", {
                "access_token": BITLY_ACCESS_TOKEN,
                "longUrl": url
            }, function(response) {
                if(response.data) {
                    shortUrl = response.data.url;
                    attributes.sharingLink = shortUrl;
                }
                else {
                    eventMgr.onError("An error occured while creating sharing link.");
                    attributes.sharingLink = url;
                }
                task.chain();
            });
        });
        function onFinish() {
            callback();
        }
        task.onSuccess(onFinish);
        task.onError(onFinish);
        task.enqueue();
    };

    eventMgr.addListener("onReady", function() {
        if(viewerMode === false) {
            return;
        }
        // Check parameters to see if we have to download a shared document
        var providerId = utils.getURLParameter("provider");
        if(providerId === undefined) {
            providerId = "download";
        }
        var provider = providerMap[providerId];
        if(provider === undefined) {
            return;
        }
        var importParameters = {};
        _.each(provider.sharingAttributes, function(attributeName) {
            var parameter = utils.getURLParameter(attributeName);
            if(!parameter) {
                importParameters = undefined;
                return;
            }
            importParameters[attributeName] = parameter;
        });
        if(importParameters === undefined) {
            return;
        }
        $("#preview-contents, .navbar .file-title-navbar").hide();
        provider.importPublic(importParameters, function(error, title, content) {
            $("#preview-contents, .navbar .file-title-navbar").show();
            if(error) {
                return;
            }
            var fileDesc = fileMgr.createFile(title, content, undefined, true);
            fileMgr.selectFile(fileDesc);
        });
    });

    return sharing;
});
define('providers/bloggerProvider',[
    "underscore",
    "utils",
    "classes/Provider",
    "helpers/googleHelper"
], function(_, utils, Provider, googleHelper) {

    var bloggerProvider = new Provider("blogger", "Blogger");
    bloggerProvider.defaultPublishFormat = "html";
    bloggerProvider.publishPreferencesInputIds = [
        "blogger-url"
    ];

    bloggerProvider.publish = function(publishAttributes, frontMatter, title, content, callback) {
        var labelList = publishAttributes.labelList || [];
        if(frontMatter) {
            frontMatter.categories !== undefined && (labelList = frontMatter.categories);
            frontMatter.tags !== undefined && (labelList = frontMatter.tags);
        }
        _.isString(labelList) && (labelList = _.compact(labelList.split(/[\s,]/)));
        googleHelper.uploadBlogger(publishAttributes.blogUrl, publishAttributes.blogId, publishAttributes.postId, labelList, title, content, function(error, blogId, postId) {
            if(error) {
                callback(error);
                return;
            }
            publishAttributes.blogId = blogId;
            publishAttributes.postId = postId;
            callback();
        });
    };

    bloggerProvider.newPublishAttributes = function(event) {
        var publishAttributes = {};
        var blogUrl = utils.getInputTextValue("#input-publish-blogger-url", event);
        if(blogUrl !== undefined) {
            publishAttributes.blogUrl = utils.checkUrl(blogUrl);
        }
        publishAttributes.postId = utils.getInputTextValue("#input-publish-postid");
        if(event.isPropagationStopped()) {
            return undefined;
        }
        return publishAttributes;
    };

    return bloggerProvider;
});
define('providers/githubProvider',[
    "utils",
    "classes/Provider",
    "settings",
    "helpers/githubHelper"
], function(utils, Provider, settings, githubHelper) {

    var githubProvider = new Provider("github", "GitHub");
    githubProvider.publishPreferencesInputIds = [
        "github-reponame",
        "github-username",
        "github-branch"
    ];

    githubProvider.publish = function(publishAttributes, frontMatter, title, content, callback) {
        var commitMsg = settings.commitMsg;
        githubHelper.upload(publishAttributes.repository, publishAttributes.username, publishAttributes.branch, publishAttributes.path, content, commitMsg, callback);
    };

    githubProvider.newPublishAttributes = function(event) {
        var publishAttributes = {};
        publishAttributes.repository = utils.getInputTextValue("#input-publish-github-reponame", event);
        publishAttributes.username = utils.getInputTextValue("#input-publish-github-username");
        publishAttributes.branch = utils.getInputTextValue("#input-publish-github-branch", event);
        publishAttributes.path = utils.getInputTextValue("#input-publish-file-path", event);
        if(event.isPropagationStopped()) {
            return undefined;
        }
        return publishAttributes;
    };

    return githubProvider;
});
define('helpers/sshHelper',[
    "jquery",
    "core",
    "eventMgr",
    "settings",
    "classes/AsyncTask"
], function($, core, eventMgr, settings, AsyncTask) {

    var sshHelper = {};

    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    // Only used to check the offline status
    function connect(task) {
        task.onRun(function() {
            if(isOffline === true) {
                task.error(new Error("Operation not available in offline mode.|stopPublish"));
                return;
            }
            task.chain();
        });
    }

    sshHelper.upload = function(host, port, username, password, path, title, content, callback) {
        var task = new AsyncTask();
        connect(task);
        task.onRun(function() {
            var url = settings.sshProxy + "upload";
            var data = {
                host: host,
                port: port,
                username: username,
                password: password,
                path: path,
                title: title,
                content: content
            };
            $.ajax({
                url: url,
                data: data,
                type: "POST",
                dataType: "json",
                timeout: AJAX_TIMEOUT
            }).done(function(response, textStatus, jqXHR) {
                if(response.error === undefined) {
                    task.chain();
                    return;
                }
                handleError(response.error, task);
            }).fail(function(jqXHR) {
                var error = {
                    code: jqXHR.status,
                    message: jqXHR.statusText
                };
                handleError(error, task);
            });
        });
        task.onSuccess(function() {
            callback();
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    function handleError(error, task) {
        var errorMsg = undefined;
        if(error) {
            logger.error(error);
            // Try to analyze the error
            if(typeof error === "string") {
                errorMsg = "SSH error: " + error + ".";
            }
            else {
                errorMsg = "Could not publish on SSH server.";
                if(error.code <= 0) {
                    core.setOffline();
                    errorMsg = "|stopPublish";
                }
            }
        }
        task.error(new Error(errorMsg));
    }

    return sshHelper;
});

define('providers/sshProvider',[
    "utils",
    "classes/Provider",
    "helpers/sshHelper"
], function(utils, Provider, sshHelper) {

    var sshProvider = new Provider("ssh", "SSH server");
    sshProvider.publishPreferencesInputIds = [
        "ssh-host",
        "ssh-port",
        "ssh-username",
        "ssh-password"
    ];

    sshProvider.publish = function(publishAttributes, frontMatter, title, content, callback) {
        sshHelper.upload(publishAttributes.host, publishAttributes.port, publishAttributes.username, publishAttributes.password, publishAttributes.path, title, content, callback);
    };

    sshProvider.newPublishAttributes = function(event) {
        var publishAttributes = {};
        publishAttributes.host = utils.getInputTextValue("#input-publish-ssh-host", event, /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$/);
        publishAttributes.port = utils.getInputIntValue("#input-publish-ssh-port", undefined, 0);
        publishAttributes.username = utils.getInputTextValue("#input-publish-ssh-username", event);
        publishAttributes.password = utils.getInputTextValue("#input-publish-ssh-password", event);
        publishAttributes.path = utils.getInputTextValue("#input-publish-file-path", event);
        if(event.isPropagationStopped()) {
            return undefined;
        }
        return publishAttributes;
    };

    return sshProvider;
});
define('helpers/tumblrHelper',[
    "jquery",
    "core",
    "utils",
    "eventMgr",
    "classes/AsyncTask"
], function($, core, utils, eventMgr, AsyncTask) {

    var oauthParams = undefined;

    var tumblrHelper = {};

    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    // Only used to check the offline status
    function connect(task) {
        task.onRun(function() {
            if(isOffline === true) {
                task.error(new Error("Operation not available in offline mode.|stopPublish"));
                return;
            }
            task.chain();
        });
    }

    // Try to authenticate with OAuth
    function authenticate(task) {
        var authWindow = undefined;
        var intervalId = undefined;
        task.onRun(function() {
            if(oauthParams !== undefined) {
                task.chain();
                return;
            }
            var serializedOauthParams = localStorage.tumblrOauthParams;
            if(serializedOauthParams !== undefined) {
                oauthParams = JSON.parse(serializedOauthParams);
                task.chain();
                return;
            }
            var errorMsg = "Failed to retrieve a token from Tumblr.";
            // We add time for user to enter his credentials
            task.timeout = ASYNC_TASK_LONG_TIMEOUT;
            var oauth_object = undefined;
            function getOauthToken() {
                $.getJSON(TUMBLR_PROXY_URL + "request_token", function(data) {
                    if(data.oauth_token !== undefined) {
                        oauth_object = data;
                        task.chain(oauthRedirect);
                    }
                    else {
                        task.error(new Error(errorMsg));
                    }
                });
            }
            function oauthRedirect() {
                core.oauthRedirect('Tumblr', function() {
                    task.chain(getVerifier);
                });
            }
            function getVerifier() {
                eventMgr.onMessage("Please make sure the Tumblr authorization popup is not blocked by your browser.");
                localStorage.removeItem("tumblrVerifier");
                authWindow = utils.popupWindow('tumblr-oauth-client.html?oauth_token=' + oauth_object.oauth_token, 'stackedit-tumblr-oauth', 800, 600);
                authWindow.focus();
                intervalId = setInterval(function() {
                    if(authWindow.closed === true) {
                        clearInterval(intervalId);
                        authWindow = undefined;
                        intervalId = undefined;
                        oauth_object.oauth_verifier = localStorage.tumblrVerifier;
                        if(oauth_object.oauth_verifier === undefined) {
                            task.error(new Error(errorMsg));
                            return;
                        }
                        localStorage.removeItem("tumblrVerifier");
                        task.chain(getAccessToken);
                    }
                }, 500);
            }
            function getAccessToken() {
                $.getJSON(TUMBLR_PROXY_URL + "access_token", oauth_object, function(data) {
                    if(data.access_token !== undefined && data.access_token_secret !== undefined) {
                        localStorage.tumblrOauthParams = JSON.stringify(data);
                        oauthParams = data;
                        task.chain();
                    }
                    else {
                        task.error(new Error(errorMsg));
                    }
                });
            }
            task.chain(getOauthToken);
        });
        task.onError(function() {
            if(intervalId !== undefined) {
                clearInterval(intervalId);
            }
            if(authWindow !== undefined) {
                authWindow.close();
            }
        });
    }

    tumblrHelper.upload = function(blogHostname, postId, tags, format, title, content, callback) {
        var task = new AsyncTask();
        connect(task);
        authenticate(task);
        task.onRun(function() {
            var data = $.extend({
                blog_hostname: blogHostname,
                post_id: postId,
                tags: tags,
                format: format,
                title: title,
                content: content
            }, oauthParams);
            $.ajax({
                url: TUMBLR_PROXY_URL + "post",
                data: data,
                type: "POST",
                dataType: "json",
                timeout: AJAX_TIMEOUT
            }).done(function(post, textStatus, jqXHR) {
                postId = post.id;
                task.chain();
            }).fail(function(jqXHR) {
                var error = {
                    code: jqXHR.status,
                    message: jqXHR.statusText
                };
                // Handle error
                if(error.code === 404 && postId !== undefined) {
                    error = 'Post ' + postId + ' not found on Tumblr.|removePublish';
                }
                handleError(error, task);
            });
        });
        task.onSuccess(function() {
            callback(undefined, postId);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    function handleError(error, task) {
        var errorMsg = undefined;
        if(error) {
            logger.error(error);
            // Try to analyze the error
            if(typeof error === "string") {
                errorMsg = error;
            }
            else {
                errorMsg = "Could not publish on Tumblr.";
                if(error.code === 401 || error.code === 403) {
                    oauthParams = undefined;
                    localStorage.removeItem("tumblrOauthParams");
                    errorMsg = "Access to Tumblr account is not authorized.";
                    task.retry(new Error(errorMsg), 1);
                    return;
                }
                else if(error.code <= 0) {
                    core.setOffline();
                    errorMsg = "|stopPublish";
                }
            }
        }
        task.error(new Error(errorMsg));
    }

    return tumblrHelper;
});

define('providers/tumblrProvider',[
    "underscore",
    "utils",
    "classes/Provider",
    "helpers/tumblrHelper"
], function(_, utils, Provider, tumblrHelper) {

    var tumblrProvider = new Provider("tumblr", "Tumblr");
    tumblrProvider.publishPreferencesInputIds = [
        "tumblr-hostname"
    ];

    tumblrProvider.publish = function(publishAttributes, frontMatter, title, content, callback) {
        var labelList = publishAttributes.tags || [];
        if(frontMatter) {
            frontMatter.categories !== undefined && (labelList = frontMatter.categories);
            frontMatter.tags !== undefined && (labelList = frontMatter.tags);
        }
        _.isString(labelList) && (labelList = _.compact(labelList.split(/[\s,]/)));
        tumblrHelper.upload(publishAttributes.blogHostname, publishAttributes.postId, labelList.join(','), publishAttributes.format == "markdown" ? "markdown" : "html", title, content, function(error, postId) {
            if(error) {
                callback(error);
                return;
            }
            publishAttributes.postId = postId;
            callback();
        });
    };

    tumblrProvider.newPublishAttributes = function(event) {
        var publishAttributes = {};
        publishAttributes.blogHostname = utils.getInputTextValue("#input-publish-tumblr-hostname", event, /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$/);
        publishAttributes.postId = utils.getInputTextValue("#input-publish-postid");
        if(event.isPropagationStopped()) {
            return undefined;
        }
        return publishAttributes;
    };

    return tumblrProvider;
});
define('helpers/wordpressHelper',[
    "jquery",
    "core",
    "utils",
    "eventMgr",
    "classes/AsyncTask"
], function($, core, utils, eventMgr, AsyncTask) {

    var token = undefined;

    var wordpressHelper = {};

    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    // Only used to check the offline status
    function connect(task) {
        task.onRun(function() {
            if(isOffline === true) {
                task.error(new Error("Operation not available in offline mode.|stopPublish"));
                return;
            }
            task.chain();
        });
    }

    // Try to authenticate with OAuth
    function authenticate(task) {
        var authWindow = undefined;
        var intervalId = undefined;
        task.onRun(function() {
            token = localStorage.wordpressToken;
            if(token !== undefined) {
                task.chain();
                return;
            }
            var errorMsg = "Failed to retrieve a token from Wordpress.";
            // We add time for user to enter his credentials
            task.timeout = ASYNC_TASK_LONG_TIMEOUT;
            var code = undefined;
            function oauthRedirect() {
                core.oauthRedirect('WordPress', function() {
                    task.chain(getCode);
                });
            }
            function getCode() {
                eventMgr.onMessage("Please make sure the Wordpress authorization popup is not blocked by your browser.");
                localStorage.removeItem("wordpressCode");
                authWindow = utils.popupWindow('wordpress-oauth-client.html?client_id=' + WORDPRESS_CLIENT_ID, 'stackedit-wordpress-oauth', 960, 600);
                authWindow.focus();
                intervalId = setInterval(function() {
                    if(authWindow.closed === true) {
                        clearInterval(intervalId);
                        authWindow = undefined;
                        intervalId = undefined;
                        code = localStorage.wordpressCode;
                        if(code === undefined) {
                            task.error(new Error(errorMsg));
                            return;
                        }
                        localStorage.removeItem("wordpressCode");
                        task.chain(getToken);
                    }
                }, 500);
            }
            function getToken() {
                $.getJSON(WORDPRESS_PROXY_URL + "authenticate/" + code, function(data) {
                    if(data.token !== undefined) {
                        token = data.token;
                        localStorage.wordpressToken = token;
                        task.chain();
                    }
                    else {
                        task.error(new Error(errorMsg));
                    }
                });
            }
            task.chain(oauthRedirect);
        });
        task.onError(function() {
            if(intervalId !== undefined) {
                clearInterval(intervalId);
            }
            if(authWindow !== undefined) {
                authWindow.close();
            }
        });
    }

    wordpressHelper.upload = function(site, postId, tags, title, content, callback) {
        var task = new AsyncTask();
        connect(task);
        authenticate(task);
        task.onRun(function() {
            var url = WORDPRESS_PROXY_URL + "post";
            var data = {
                token: token,
                site: site,
                postId: postId,
                tags: tags,
                title: title,
                content: content
            };
            $.ajax({
                url: url,
                data: data,
                type: "POST",
                dataType: "json",
                timeout: AJAX_TIMEOUT
            }).done(function(response, textStatus, jqXHR) {
                if(response.body.ID) {
                    postId = response.body.ID;
                    task.chain();
                    return;
                }
                var error = {
                    code: response.code,
                    message: response.body.error
                };
                // Handle error
                if(error.code === 404) {
                    if(error.message == "unknown_blog") {
                        error = 'Site "' + site + '" not found on WordPress.|removePublish';
                    }
                    else if(error.message == "unknown_post") {
                        error = 'Post ' + postId + ' not found on WordPress.|removePublish';
                    }
                }
                handleError(error, task);
            }).fail(function(jqXHR) {
                var error = {
                    code: jqXHR.status,
                    message: jqXHR.statusText
                };
                handleError(error, task);
            });
        });
        task.onSuccess(function() {
            callback(undefined, postId);
        });
        task.onError(function(error) {
            callback(error);
        });
        task.enqueue();
    };

    function handleError(error, task) {
        var errorMsg = undefined;
        if(error) {
            logger.error(error);
            // Try to analyze the error
            if(typeof error === "string") {
                errorMsg = error;
            }
            else {
                errorMsg = "Could not publish on WordPress.";
                if((error.code === 400 && error.message == "invalid_token") || error.code === 401 || error.code === 403) {
                    localStorage.removeItem("wordpressToken");
                    errorMsg = "Access to WordPress account is not authorized.";
                    task.retry(new Error(errorMsg), 1);
                    return;
                }
                else if(error.code <= 0) {
                    core.setOffline();
                    errorMsg = "|stopPublish";
                }
            }
        }
        task.error(new Error(errorMsg));
    }

    return wordpressHelper;
});

define('providers/wordpressProvider',[
    "underscore",
    "utils",
    "classes/Provider",
    "helpers/wordpressHelper"
], function(_, utils, Provider, wordpressHelper) {

    var wordpressProvider = new Provider("wordpress", "WordPress");
    wordpressProvider.defaultPublishFormat = "html";
    wordpressProvider.publishPreferencesInputIds = [
        "wordpress-site"
    ];

    wordpressProvider.publish = function(publishAttributes, frontMatter, title, content, callback) {
        var labelList = publishAttributes.tags || [];
        if(frontMatter) {
            frontMatter.categories !== undefined && (labelList = frontMatter.categories);
            frontMatter.tags !== undefined && (labelList = frontMatter.tags);
        }
        _.isString(labelList) && (labelList = _.compact(labelList.split(/[\s,]/)));
        wordpressHelper.upload(publishAttributes.site, publishAttributes.postId, labelList.join(','), title, content, function(error, postId) {
            if(error) {
                callback(error);
                return;
            }
            publishAttributes.postId = postId;
            callback();
        });
    };

    wordpressProvider.newPublishAttributes = function(event) {
        var publishAttributes = {};
        publishAttributes.site = utils.getInputTextValue("#input-publish-wordpress-site", event, /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$/);
        publishAttributes.postId = utils.getInputTextValue("#input-publish-postid");
        if(event.isPropagationStopped()) {
            return undefined;
        }
        return publishAttributes;
    };

    return wordpressProvider;
});
define('publisher',[
    "jquery",
    "underscore",
    "utils",
    "settings",
    "eventMgr",
    "fileSystem",
    "fileMgr",
    "sharing",
    "classes/Provider",
    "classes/AsyncTask",
    "config",
    "providers/bloggerProvider",
    "providers/dropboxProvider",
    "providers/gistProvider",
    "providers/githubProvider",
    "providers/gdriveProvider",
    "providers/sshProvider",
    "providers/tumblrProvider",
    "providers/wordpressProvider"
], function($, _, utils, settings, eventMgr, fileSystem, fileMgr, sharing, Provider, AsyncTask) {

    var publisher = {};

    // Create a map with providerId: providerModule
    var providerMap = _.chain(arguments).map(function(argument) {
        return argument instanceof Provider && [
            argument.providerId,
            argument
        ];
    }).compact().object().value();

    // Retrieve publish locations from localStorage
    _.each(fileSystem, function(fileDesc) {
        _.each(utils.retrieveIndexArray(fileDesc.fileIndex + ".publish"), function(publishIndex) {
            try {
                var publishAttributes = JSON.parse(localStorage[publishIndex]);
                // Store publishIndex
                publishAttributes.publishIndex = publishIndex;
                // Replace provider ID by provider module in attributes
                var provider = providerMap[publishAttributes.provider];
                if(!provider) {
                    throw new Error("Invalid provider ID: " + publishAttributes.provider);
                }
                publishAttributes.provider = provider;
                fileDesc.publishLocations[publishIndex] = publishAttributes;
            }
            catch(e) {
                // localStorage can be corrupted
                eventMgr.onError(e);
                // Remove publish location
                utils.removeIndexFromArray(fileDesc.fileIndex + ".publish", publishIndex);
                localStorage.removeItem(publishIndex);
            }
        });
    });

    // Apply template to the current document
    publisher.applyTemplate = function(fileDesc, publishAttributes, html) {
        try {
            var template = (publishAttributes && publishAttributes.customTmpl) || settings.template;
            return _.template(template, {
                documentTitle: fileDesc.title,
                documentMarkdown: fileDesc.content,
                documentHTML: html,
                frontMatter: fileDesc.frontMatter,
                publishAttributes: publishAttributes
            });
        }
        catch(e) {
            eventMgr.onError(e);
            return e.message;
        }
    };

    // Used to get content to publish
    function getPublishContent(fileDesc, publishAttributes, html) {
        if(publishAttributes.format === undefined) {
            publishAttributes.format = utils.getInputRadio("radio-publish-format");
            if(publishAttributes.format == 'template' && utils.getInputChecked("#checkbox-publish-custom-template")) {
                publishAttributes.customTmpl = utils.getInputValue('#textarea-publish-custom-template');
            }
        }
        if(publishAttributes.format == "markdown") {
            return fileDesc.content;
        }
        else if(publishAttributes.format == "html") {
            return html;
        }
        else {
            return publisher.applyTemplate(fileDesc, publishAttributes, html);
        }
    }

    // Recursive function to publish a file on multiple locations
    var publishAttributesList = [];
    var publishFileDesc = undefined;
    var publishHTML = undefined;
    function publishLocation(callback, errorFlag) {

        // No more publish location for this document
        if(publishAttributesList.length === 0) {
            callback(errorFlag);
            return;
        }

        // Dequeue a synchronized location
        var publishAttributes = publishAttributesList.pop();

        // Format the content
        var content = getPublishContent(publishFileDesc, publishAttributes, publishHTML);
        var title = (publishFileDesc.frontMatter || {}).title || publishFileDesc.title;

        // Call the provider
        publishAttributes.provider.publish(publishAttributes, publishFileDesc.frontMatter, title, content, function(error) {
            if(error !== undefined) {
                var errorMsg = error.toString();
                if(errorMsg.indexOf("|removePublish") !== -1) {
                    publishFileDesc.removePublishLocation(publishAttributes);
                    eventMgr.onPublishRemoved(publishFileDesc, publishAttributes);
                }
                if(errorMsg.indexOf("|stopPublish") !== -1) {
                    callback(error);
                    return;
                }
            }
            publishLocation(callback, errorFlag || error);
        });
    }

    // Get the html from the onPreviewFinished callback
    var previewHtml = undefined;
    eventMgr.addListener("onPreviewFinished", function(html) {
        previewHtml = html;
    });

    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    var publishRunning = false;
    publisher.publish = function() {
        // If publish is running or offline
        if(publishRunning === true || isOffline === true) {
            return;
        }

        publishRunning = true;
        eventMgr.onPublishRunning(true);
        publishFileDesc = fileMgr.currentFile;
        publishHTML = previewHtml;
        publishAttributesList = _.values(publishFileDesc.publishLocations);
        publishLocation(function(errorFlag) {
            publishRunning = false;
            eventMgr.onPublishRunning(false);
            if(errorFlag === undefined) {
                eventMgr.onPublishSuccess(publishFileDesc);
            }
        });
    };

    // Generate a publishIndex associated to a file and store publishAttributes
    function createPublishIndex(fileDesc, publishAttributes) {
        var publishIndex = undefined;
        do {
            publishIndex = "publish." + utils.randomString();
        } while (_.has(localStorage, publishIndex));
        publishAttributes.publishIndex = publishIndex;
        fileDesc.addPublishLocation(publishAttributes);
        eventMgr.onNewPublishSuccess(fileDesc, publishAttributes);
    }

    // Initialize the "New publication" dialog
    var newLocationProvider = undefined;
    function initNewLocation(provider) {
        var defaultPublishFormat = provider.defaultPublishFormat || "markdown";
        newLocationProvider = provider;
        $(".publish-provider-name").text(provider.providerName);

        // Show/hide controls depending on provider
        $('.modal-publish [class*=" modal-publish-"]').hide().filter(".modal-publish-" + provider.providerId).show();

        // Reset fields
        utils.resetModalInputs();
        utils.setInputRadio("radio-publish-format", defaultPublishFormat);
        utils.setInputChecked("#checkbox-publish-custom-template", false);
        utils.setInputValue('#textarea-publish-custom-template', settings.template);

        // Load preferences
        var publishPreferences = utils.retrieveIgnoreError(provider.providerId + ".publishPreferences");
        if(publishPreferences) {
            _.each(provider.publishPreferencesInputIds, function(inputId) {
                var publishPreferenceValue = publishPreferences[inputId];
                if(_.isBoolean(publishPreferenceValue)) {
                    utils.setInputChecked("#input-publish-" + inputId, publishPreferenceValue);
                }
                else {
                    utils.setInputValue("#input-publish-" + inputId, publishPreferenceValue);
                }
            });
            utils.setInputRadio("radio-publish-format", publishPreferences.format);
            utils.setInputChecked("#checkbox-publish-custom-template", publishPreferences.customTmpl !== undefined);
            utils.setInputValue('#textarea-publish-custom-template', publishPreferences.customTmpl || settings.template);
        }

        // Open dialog box
        $(".modal-publish").modal();
    }

    // Add a new publish location to a local document
    function performNewLocation(event) {
        var provider = newLocationProvider;
        var publishAttributes = provider.newPublishAttributes(event);
        if(publishAttributes === undefined) {
            return;
        }

        // Perform provider's publishing
        var fileDesc = fileMgr.currentFile;
        var html = previewHtml;
        var content = getPublishContent(fileDesc, publishAttributes, html);
        var title = (fileDesc.frontMatter && fileDesc.frontMatter.title) || fileDesc.title;
        provider.publish(publishAttributes, fileDesc.frontMatter, title, content, function(error) {
            if(error === undefined) {
                publishAttributes.provider = provider;
                sharing.createLink(publishAttributes, function() {
                    createPublishIndex(fileDesc, publishAttributes);
                });
            }
        });

        // Store input values as preferences for next time we open the publish
        // dialog
        var publishPreferences = {};
        _.each(provider.publishPreferencesInputIds, function(inputId) {
            var inputElt = document.getElementById("input-publish-" + inputId);
            if(inputElt.type == 'checkbox') {
                publishPreferences[inputId] = inputElt.checked;
            }
            else {
                publishPreferences[inputId] = inputElt.value;
            }
        });
        publishPreferences.format = publishAttributes.format;
        publishPreferences.customTmpl = publishAttributes.customTmpl;
        localStorage[provider.providerId + ".publishPreferences"] = JSON.stringify(publishPreferences);
    }

    // Listen to offline status changes
    var isOffline = false;
    eventMgr.addListener("onOfflineChanged", function(isOfflineParam) {
        isOffline = isOfflineParam;
    });

    var initPublishButtonTmpl = [
        '<li>',
        '   <a href="#"',
        '    class="action-init-publish-<%= provider.providerId %>">',
        '       <i class="icon-provider-<%= provider.providerId %>"></i> <%= provider.providerName %>',
        '   </a>',
        '</li>'
    ].join('');
    eventMgr.addListener("onReady", function() {
        if(viewerMode === false) {
            // Add every provider in the panel menu
            var publishMenuElt = document.querySelector('.menu-panel .collapse-publish-on .nav');
            var publishMenuHtml = _.reduce(providerMap, function(result, provider) {
                return result + _.template(initPublishButtonTmpl, {
                    provider: provider
                });
            }, '');
            publishMenuElt.innerHTML = publishMenuHtml;
            _.each(providerMap, function(provider) {
                // Click on open publish dialog
                $(publishMenuElt.querySelector('.action-init-publish-' + provider.providerId)).click(function() {
                    initNewLocation(provider);
                });
                // Click on perform new publication
                $(".action-publish-" + provider.providerId).click(function() {
                    initNewLocation(provider);
                });
            });
        }

        // 
        $(".action-process-publish").click(performNewLocation);

        var $customTmplCollapseElt = $('.publish-custom-template-collapse').collapse({
            toggle: false
        });
        var $customTmplTextareaElt = $('#textarea-publish-custom-template');
        var doCustomTmplCollapse = _.debounce(function() {
            $customTmplCollapseElt.collapse(utils.getInputRadio("radio-publish-format") == 'template' ? 'show' : 'hide');
        }, 100);
        $("#checkbox-publish-custom-template").change(function() {
            $customTmplTextareaElt.prop('disabled', !this.checked);
        });
        $("input:radio[name=radio-publish-format]").change(function() {
            doCustomTmplCollapse();
        });
        $('.modal-publish').on('hidden.bs.modal', function() {
            $customTmplCollapseElt.collapse('hide');
        });

        // Save As menu items
        $(".action-download-md").click(function() {
            var content = fileMgr.currentFile.content;
            var title = fileMgr.currentFile.title;
            utils.saveAs(content, title + ".md");
        });
        $(".action-download-html").click(function() {
            var title = fileMgr.currentFile.title;
            utils.saveAs(previewHtml, title + ".html");
        });
        $(".action-download-template").click(function() {
            var fileDesc = fileMgr.currentFile;
            var content = publisher.applyTemplate(fileDesc, undefined, previewHtml);
            utils.saveAs(content, fileDesc.title + (settings.template.indexOf("documentHTML") === -1 ? ".md" : ".html"));
        });
        $(".action-download-pdf").click(function() {
            var fileDesc = fileMgr.currentFile;
            var content = publisher.applyTemplate(fileDesc, {
                customTmpl: settings.pdfTemplate
            }, previewHtml);
            var task = new AsyncTask();
            var pdf = undefined;
            task.onRun(function() {
                if(isOffline === true) {
                    eventMgr.onError("Operation not available in offline mode.");
                    task.chain();
                    return;
                }
                var xhr = new XMLHttpRequest();
                xhr.open('POST', HTMLTOPDF_URL, true);
                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                xhr.responseType = 'blob';
                xhr.onreadystatechange = function() {
                    if(this.readyState == 4) {
                        if(this.status == 200) {
                            pdf = this.response;
                        }
                        else {
                            eventMgr.onError("Error when trying to generate PDF: " + this.status);
                        }
                        task.chain();
                    }
                };
                xhr.send(content);
            });
            task.onSuccess(function() {
                if(pdf !== undefined) {
                    utils.saveAs(pdf, fileMgr.currentFile.title + ".pdf");
                }
            });
            task.enqueue();
        });
    });

    eventMgr.onPublisherCreated(publisher);
    return publisher;
});
define('providers/gplusProvider',[
    "underscore",
    "utils",
    "classes/Provider",
    "eventMgr",
    "helpers/googleHelper"
], function(_, utils, Provider, eventMgr, googleHelper) {

    var PROVIDER_GPLUS = "gplus";

    var gplusProvider = new Provider(PROVIDER_GPLUS, "Google+");

    function getThumbnailUrl(doc, size) {
        var result = undefined;
        _.find(doc.thumbnails, function(thumbnail) {
            var found = false;
            thumbnail.url.replace(/(.*\/s)\d.*?(\/[^\/]+)/, function(match, sub1, sub2) {
                result = sub1 + size + sub2;
                found = true;
            });
            return found;
        });
        return result;
    }
    
    var imageDoc = undefined;
    var importImagePreferences = utils.retrieveIgnoreError(PROVIDER_GPLUS + ".importImagePreferences");
    function showImportImgDialog() {
        if(!imageDoc.thumbnails) {
            eventMgr.onError("Image " + imageDoc.name + " is not accessible.");
            callback(true);
            return;
        }
        utils.resetModalInputs();
        $(".modal-import-image img").prop("src", getThumbnailUrl(imageDoc, 128));
        utils.setInputValue("#input-import-image-title", imageDoc.name);

        // Load preferences
        if(importImagePreferences) {
            utils.setInputValue("#input-import-image-size", importImagePreferences.size);
        }

        $(".modal-import-image").modal();
    }

    var importImageCallback = undefined;
    gplusProvider.importImage = function(callback) {
        importImageCallback = callback;
        googleHelper.picker(function(error, docs) {
            if(error || docs.length === 0) {
                callback(error);
                return;
            }
            imageDoc = docs[0];
            showImportImgDialog();
        }, 'img');
    };
    
    gplusProvider.uploadImage = function(imgName, imgContent, callback) {
        importImageCallback = callback;
        googleHelper.uploadImg(imgName, imgContent, "default", function(error, image) {
            if(error || !image) {
                callback(error);
                return;
            }
            imageDoc = {
                name: imgName,
                thumbnails: []
            };
            $(image).find("thumbnail").each(function() {
                imageDoc.thumbnails.push({
                    url: $(this).attr("url")
                });
            });            
            showImportImgDialog();
        });
    };

    eventMgr.addListener("onReady", function() {
        $(".action-import-image").click(function(e) {
            var size = utils.getInputIntValue("#input-import-image-size", undefined, 0) || 0;
            var title = utils.getInputTextValue("#input-import-image-title");
            var image = getThumbnailUrl(imageDoc, size);
            if(title) {
                image += ' \"' + title + '"';
            }
            importImageCallback(undefined, image);

            // Store import preferences for next time
            importImagePreferences = {};
            if(size) {
                importImagePreferences.size = size;
            }
            localStorage[PROVIDER_GPLUS + ".importImagePreferences"] = JSON.stringify(importImagePreferences);
        });
    });

    return gplusProvider;
});

define('mediaImporter',[
    "jquery",
    "underscore",
    "classes/Provider",
    "core",
    "eventMgr",
    "providers/gplusProvider"
], function($, _, Provider, core, eventMgr) {

    var mediaImporter = {};

    // Create a map with providerId: providerModule
    var providerMap = _.chain(arguments).map(function(argument) {
        return argument instanceof Provider && [
            argument.providerId,
            argument
        ];
    }).compact().object().value();

    eventMgr.addListener("onReady", function() {
        _.each(providerMap, function(provider) {
            // Import image action links (if any)
            $(".action-import-image-" + provider.providerId).click(function() {
                // Take the insertLinkCallback from core module
                var insertLinkCallback = core.insertLinkCallback;
                // Unset it to be sure core module will not call it
                core.insertLinkCallback = undefined;
                provider.importImage(function(error, imageLink) {
                    if(error) {
                        insertLinkCallback(null);
                        return;
                    }
                    insertLinkCallback(imageLink || null);
                });
            });
        });

        function handleImgImport(evt) {
            var files = (evt.dataTransfer || evt.target).files;
            var file = _.first(files);
            if(file.name.match(/.(jpe?g|png|gif)$/)) {
                evt.stopPropagation();
                evt.preventDefault();
                var reader = new FileReader();
                reader.onload = (function(importedFile) {
                    return function(e) {
                        var content = new Uint8Array(e.target.result);
                        providerMap["gplus"].uploadImage(file.name, content, function(error, imageLink) {
                            if(error) {
                                return;
                            }
                            // Generate an insertLinkCallback by clicking the
                            // pagedown button but without showing the dialog
                            core.catchModal = true;
                            $("#wmd-image-button").click();
                            core.catchModal = false;
                            // Take the insertLinkCallback from core module
                            var insertLinkCallback = core.insertLinkCallback;
                            // Unset it to be sure core module will not call it
                            core.insertLinkCallback = undefined;
                            insertLinkCallback(imageLink || null);
                        });
                    };
                })(file);
                var blob = file.slice(0, IMPORT_IMG_MAX_CONTENT_SIZE);
                reader.readAsArrayBuffer(blob);
            }
        }

        function handleDragOver(evt) {
            evt.stopPropagation();
            evt.preventDefault();
            evt.dataTransfer.dropEffect = 'copy';
        }

        $('#wmd-input').each(function() {
            this.addEventListener('dragover', handleDragOver, false);
            this.addEventListener('drop', handleImgImport, false);
        });

    });

    return mediaImporter;
});
/*
 * css.normalize.js
 *
 * CSS Normalization
 *
 * CSS paths are normalized based on an optional basePath and the RequireJS config
 *
 * Usage:
 *   normalize(css, fromBasePath, toBasePath);
 *
 * css: the stylesheet content to normalize
 * fromBasePath: the absolute base path of the css relative to any root (but without ../ backtracking)
 * toBasePath: the absolute new base path of the css relative to the same root
 * 
 * Absolute dependencies are left untouched.
 *
 * Urls in the CSS are picked up by regular expressions.
 * These will catch all statements of the form:
 *
 * url(*)
 * url('*')
 * url("*")
 * 
 * @import '*'
 * @import "*"
 *
 * (and so also @import url(*) variations)
 *
 * For urls needing normalization
 *
 */

define('css/normalize',['require', 'module'], function(require, module) {
  
  // regular expression for removing double slashes
  // eg http://www.example.com//my///url/here -> http://www.example.com/my/url/here
  var slashes = /([^:])\/+/g
  var removeDoubleSlashes = function(uri) {
    return uri.replace(slashes, '$1/');
  }

  // given a relative URI, and two absolute base URIs, convert it from one base to another
  var protocolRegEx = /[^\:\/]*:\/\/([^\/])*/
  function convertURIBase(uri, fromBase, toBase) {
    if(uri.indexOf("data:") === 0)
      return uri;
    uri = removeDoubleSlashes(uri);
    // absolute urls are left in tact
    if (uri.match(/^\//) || uri.match(protocolRegEx))
      return uri;
    // if toBase specifies a protocol path, ensure this is the same protocol as fromBase, if not
    // use absolute path at fromBase
    var toBaseProtocol = toBase.match(protocolRegEx);
    var fromBaseProtocol = fromBase.match(protocolRegEx);
    if (fromBaseProtocol && (!toBaseProtocol || toBaseProtocol[1] != fromBaseProtocol[1] || toBaseProtocol[2] != fromBaseProtocol[2]))
      return absoluteURI(uri, fromBase);
    
    else {
      return relativeURI(absoluteURI(uri, fromBase), toBase);
    }
  };
  
  // given a relative URI, calculate the absolute URI
  function absoluteURI(uri, base) {
    if (uri.substr(0, 2) == './')
      uri = uri.substr(2);    
    
    var baseParts = base.split('/');
    var uriParts = uri.split('/');
    
    baseParts.pop();
    
    while (curPart = uriParts.shift())
      if (curPart == '..')
        baseParts.pop();
      else
        baseParts.push(curPart);
    
    return baseParts.join('/');
  };


  // given an absolute URI, calculate the relative URI
  function relativeURI(uri, base) {
    
    // reduce base and uri strings to just their difference string
    var baseParts = base.split('/');
    baseParts.pop();
    base = baseParts.join('/') + '/';
    i = 0;
    while (base.substr(i, 1) == uri.substr(i, 1))
      i++;
    while (base.substr(i, 1) != '/')
      i--;
    base = base.substr(i + 1);
    uri = uri.substr(i + 1);

    // each base folder difference is thus a backtrack
    baseParts = base.split('/');
    var uriParts = uri.split('/');
    out = '';
    while (baseParts.shift())
      out += '../';
    
    // finally add uri parts
    while (curPart = uriParts.shift())
      out += curPart + '/';
    
    return out.substr(0, out.length - 1);
  };
  
  var normalizeCSS = function(source, fromBase, toBase, cssBase) {

    fromBase = removeDoubleSlashes(fromBase);
    toBase = removeDoubleSlashes(toBase);

    var urlRegEx = /@import\s*("([^"]*)"|'([^']*)')|url\s*\(\s*(\s*"([^"]*)"|'([^']*)'|[^\)]*\s*)\s*\)/ig;
    var result, url, source;

    while (result = urlRegEx.exec(source)) {
      url = result[3] || result[2] || result[5] || result[6] || result[4];
      var newUrl;
      if (cssBase && url.substr(0, 1) == '/')
        newUrl = cssBase + url;
      else
        newUrl = convertURIBase(url, fromBase, toBase);
      var quoteLen = result[5] || result[6] ? 1 : 0;
      source = source.substr(0, urlRegEx.lastIndex - url.length - quoteLen - 1) + newUrl + source.substr(urlRegEx.lastIndex - quoteLen - 1);
      urlRegEx.lastIndex = urlRegEx.lastIndex + (newUrl.length - url.length);
    }
    
    return source;
  };
  
  normalizeCSS.convertURIBase = convertURIBase;
  
  return normalizeCSS;
});

/*
 * Require-CSS RequireJS css! loader plugin
 * 0.0.8
 * Guy Bedford 2013
 * MIT
 */

/*
 *
 * Usage:
 *  require(['css!./mycssFile']);
 *
 * NB leave out the '.css' extension.
 *
 * - Fully supports cross origin CSS loading
 * - Works with builds
 *
 * Tested and working in (up to latest versions as of March 2013):
 * Android
 * iOS 6
 * IE 6 - 10
 * Chome 3 - 26
 * Firefox 3.5 - 19
 * Opera 10 - 12
 * 
 * browserling.com used for virtual testing environment
 *
 * Credit to B Cavalier & J Hann for the elegant IE 6 - 9 hack.
 * 
 * Sources that helped along the way:
 * - https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent
 * - http://www.phpied.com/when-is-a-stylesheet-really-loaded/
 * - https://github.com/cujojs/curl/blob/master/src/curl/plugin/css.js
 *
 */

define('css/css',['./normalize'], function(normalize) {
  function indexOf(a, e) { for (var i=0, l=a.length; i < l; i++) if (a[i] === e) return i; return -1 }

  if (typeof window == 'undefined')
    return { load: function(n, r, load){ load() } };

  // set to true to enable test prompts for device testing
  var testing = false;
  
  var head = document.getElementsByTagName('head')[0];

  var engine = window.navigator.userAgent.match(/Trident\/([^ ;]*)|AppleWebKit\/([^ ;]*)|Opera\/([^ ;]*)|rv\:([^ ;]*)(.*?)Gecko\/([^ ;]*)|MSIE\s([^ ;]*)/);
  var hackLinks = false;

  if (!engine) {}
  else if (engine[1] || engine[7]) {
    hackLinks = parseInt(engine[1]) < 6 || parseInt(engine[7]) <= 9;
    engine = 'trident';
  }
  else if (engine[2]) {
    // unfortunately style querying still doesnt work with onload callback in webkit
    hackLinks = true;
    engine = 'webkit';
  }
  else if (engine[3]) {
    // engine = 'opera';
  }
  else if (engine[4]) {
    hackLinks = parseInt(engine[4]) < 18;
    engine = 'gecko';
  }
  else if (testing)
    alert('Engine detection failed');
  
  //main api object
  var cssAPI = {};

  var absUrlRegEx = /^\/|([^\:\/]*:)/;
  
  cssAPI.pluginBuilder = './css-builder';

  // used by layer builds to register their css buffers
  
  // the current layer buffer items (from addBuffer)
  var curBuffer = [];

  // the callbacks for buffer loads
  var onBufferLoad = {};

  // the full list of resources in the buffer
  var bufferResources = [];

  cssAPI.addBuffer = function(resourceId) {
    // just in case layer scripts are included twice, also check
    // against the previous buffers
    if (indexOf(curBuffer, resourceId) != -1)
      return;
    if (indexOf(bufferResources, resourceId) != -1)
      return;
    curBuffer.push(resourceId);
    bufferResources.push(resourceId);
  }
  cssAPI.setBuffer = function(css, isLess) {
    var pathname = window.location.pathname.split('/');
    pathname.pop();
    pathname = pathname.join('/') + '/';

    var baseParts = require.toUrl('base_url').split('/');
    baseParts.pop();
    var baseUrl = baseParts.join('/') + '/';
    baseUrl = normalize.convertURIBase(baseUrl, pathname, '/');
    if (!baseUrl.match(absUrlRegEx))
      baseUrl = '/' + baseUrl;
    if (baseUrl.substr(baseUrl.length - 1, 1) != '/')
      baseUrl = baseUrl + '/';

    cssAPI.inject(normalize(css, baseUrl, pathname));

    // set up attach callback if registered
    // clear the current buffer for the next layer
    // (just the less or css part as we have two buffers in one effectively)
    for (var i = 0; i < curBuffer.length; i++) {
      // find the resources in the less or css buffer dependening which one this is
      if ((isLess && curBuffer[i].substr(curBuffer[i].length - 5, 5) == '.less') ||
        (!isLess && curBuffer[i].substr(curBuffer[i].length - 4, 4) == '.css')) {
        (function(resourceId) {
          // mark that the onBufferLoad is about to be called (set to true if not already a callback function)
          onBufferLoad[resourceId] = onBufferLoad[resourceId] || true;

          // set a short timeout (as injection isn't instant in Chrome), then call the load
          setTimeout(function() {
            if (typeof onBufferLoad[resourceId] == 'function')
              onBufferLoad[resourceId]();
            // remove from onBufferLoad to indicate loaded
            delete onBufferLoad[resourceId];
          }, 7);
        })(curBuffer[i]);

        // remove the current resource from the buffer
        curBuffer.splice(i--, 1);
      }
    }
  }
  cssAPI.attachBuffer = function(resourceId, load) {
    // attach can happen during buffer collecting, or between injection and callback
    // we assume it is not possible to attach multiple callbacks
    // requirejs plugin load function ensures this by queueing duplicate calls

    // check if the resourceId is in the current buffer
    for (var i = 0; i < curBuffer.length; i++)
      if (curBuffer[i] == resourceId) {
        onBufferLoad[resourceId] = load;
        return true;
      }

    // check if the resourceId is waiting for injection callback
    // (onBufferLoad === true is a shortcut indicator for this)
    if (onBufferLoad[resourceId] === true) {
      onBufferLoad[resourceId] = load;
      return true;
    }

    // if it's in the full buffer list and not either of the above, its loaded already
    if (indexOf(bufferResources, resourceId) != -1) {
      load();
      return true;
    }
  }

  var webkitLoadCheck = function(link, callback) {
    setTimeout(function() {
      for (var i = 0; i < document.styleSheets.length; i++) {
        var sheet = document.styleSheets[i];
        if (sheet.href == link.href)
          return callback();
      }
      webkitLoadCheck(link, callback);
    }, 10);
  }

  var mozillaLoadCheck = function(style, callback) {
    setTimeout(function() {
      try {
        style.sheet.cssRules;
        return callback();
      } catch (e){}
      mozillaLoadCheck(style, callback);
    }, 10);
  }

  // ie link detection, as adapted from https://github.com/cujojs/curl/blob/master/src/curl/plugin/css.js
  if (engine == 'trident' && hackLinks) {
    var ieStyles = [],
      ieQueue = [],
      ieStyleCnt = 0;
    var ieLoad = function(url, callback) {
      var style;
      ieQueue.push({
        url: url,
        cb: callback
      });
      style = ieStyles.shift();
      if (!style && ieStyleCnt++ < 31) {
        style = document.createElement('style');
        head.appendChild(style);
      }
      if (style)
        ieLoadNextImport(style);
    }
    var ieLoadNextImport = function(style) {
      var curImport = ieQueue.shift();
      if (!curImport) {
        style.onload = noop;
        ieStyles.push(style);
        return;  
      }
      style.onload = function() {
        curImport.cb(curImport.ss);
        ieLoadNextImport(style);
      };
      var curSheet = style.styleSheet;
      curImport.ss = curSheet.imports[curSheet.addImport(curImport.url)];
    }
  }

  // uses the <link> load method
  var createLink = function(url) {
    var link = document.createElement('link');
    link.type = 'text/css';
    link.rel = 'stylesheet';
    link.href = url;
    return link;
  }

  var noop = function(){}

  cssAPI.linkLoad = function(url, callback) {
    var timeout = setTimeout(function() {
      if (testing) alert('timeout');
      callback();
    }, waitSeconds * 1000 - 100);
    var _callback = function() {
      clearTimeout(timeout);
      if (link)
        link.onload = noop;
      // for style querying, a short delay still seems necessary
      setTimeout(callback, 7);
    }
    if (!hackLinks) {
      var link = createLink(url);
      link.onload = _callback;
      head.appendChild(link);
    }
    // hacks
    else {
      if (engine == 'webkit') {
        var link = createLink(url);
        webkitLoadCheck(link, _callback);
        head.appendChild(link);
      }
      else if (engine == 'gecko') {
        var style = document.createElement('style');
        style.textContent = '@import "' + url + '"';
        mozillaLoadCheck(style, _callback);
        head.appendChild(style);
      }
      else if (engine == 'trident')
        ieLoad(url, _callback);
    }
  }

  /* injection api */
  var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];
  var fileCache = {};
  var get = function(url, callback, errback) {
    if (fileCache[url]) {
      callback(fileCache[url]);
      return;
    }

    var xhr, i, progId;
    if (typeof XMLHttpRequest !== 'undefined')
      xhr = new XMLHttpRequest();
    else if (typeof ActiveXObject !== 'undefined')
      for (i = 0; i < 3; i += 1) {
        progId = progIds[i];
        try {
          xhr = new ActiveXObject(progId);
        }
        catch (e) {}
  
        if (xhr) {
          progIds = [progId];  // so faster next time
          break;
        }
      }
    
    xhr.open('GET', url, requirejs.inlineRequire ? false : true);
  
    xhr.onreadystatechange = function (evt) {
      var status, err;
      //Do not explicitly handle errors, those should be
      //visible via console output in the browser.
      if (xhr.readyState === 4) {
        status = xhr.status;
        if (status > 399 && status < 600) {
          //An http 4xx or 5xx error. Signal an error.
          err = new Error(url + ' HTTP status: ' + status);
          err.xhr = xhr;
          errback(err);
        }
        else {
          fileCache[url] = xhr.responseText;
          callback(xhr.responseText);
        }
      }
    };
    
    xhr.send(null);
  }
  //uses the <style> load method
  var styleCnt = 0;
  var curStyle;
  cssAPI.inject = function(css) {
    if (styleCnt < 31) {
      curStyle = document.createElement('style');
      curStyle.type = 'text/css';
      head.appendChild(curStyle);
      styleCnt++;
    }
    if (curStyle.styleSheet)
      curStyle.styleSheet.cssText += css;
    else
      curStyle.appendChild(document.createTextNode(css));
  }
  
  // NB add @media query support for media imports
  var importRegEx = /@import\s*(url)?\s*(('([^']*)'|"([^"]*)")|\(('([^']*)'|"([^"]*)"|([^\)]*))\))\s*;?/g;

  var pathname = window.location.pathname.split('/');
  pathname.pop();
  pathname = pathname.join('/') + '/';

  var loadCSS = function(fileUrl, callback, errback) {

    //make file url absolute
    if (!fileUrl.match(absUrlRegEx))
      fileUrl = '/' + normalize.convertURIBase(fileUrl, pathname, '/');

    get(fileUrl, function(css) {

      // normalize the css (except import statements)
      css = normalize(css, fileUrl, pathname);

      // detect all import statements in the css and normalize
      var importUrls = [];
      var importIndex = [];
      var importLength = [];
      var match;
      while (match = importRegEx.exec(css)) {
        var importUrl = match[4] || match[5] || match[7] || match[8] || match[9];

        importUrls.push(importUrl);
        importIndex.push(importRegEx.lastIndex - match[0].length);
        importLength.push(match[0].length);
      }

      // load the import stylesheets and substitute into the css
      var completeCnt = 0;
      for (var i = 0; i < importUrls.length; i++)
        (function(i) {
          loadCSS(importUrls[i], function(importCSS) {
            css = css.substr(0, importIndex[i]) + importCSS + css.substr(importIndex[i] + importLength[i]);
            var lenDiff = importCSS.length - importLength[i];
            for (var j = i + 1; j < importUrls.length; j++)
              importIndex[j] += lenDiff;
            completeCnt++;
            if (completeCnt == importUrls.length) {
              callback(css);
            }
          }, errback);
        })(i);

      if (importUrls.length == 0)
        callback(css);
    }, errback);
  }

  
  cssAPI.normalize = function(name, normalize) {
    if (name.substr(name.length - 4, 4) == '.css')
      name = name.substr(0, name.length - 4);
    
    return normalize(name);
  }
  
  var waitSeconds;
  var alerted = false;
  cssAPI.load = function(cssId, req, load, config, parse) {
    
    waitSeconds = waitSeconds || config.waitSeconds || 7;

    var resourceId = cssId + (!parse ? '.css' : '.less');

    // attach the load function to a buffer if there is one in registration
    // if not, we do a full injection load
    if (cssAPI.attachBuffer(resourceId, load))
      return;

    var fileUrl = req.toUrl(resourceId);
    
    if (!alerted && testing) {
      alert(hackLinks ? 'hacking links' : 'not hacking');
      alerted = true;
    }

    if (!parse) {
      cssAPI.linkLoad(fileUrl, load);
    }
    else {
      loadCSS(fileUrl, function(css) {
        // run parsing after normalization - since less is a CSS subset this works fine
        if (parse)
          css = parse(css, function(css) {
            cssAPI.inject(css);
            setTimeout(load, 7);
          });
      });
    }
  }

  if (testing)
    cssAPI.inspect = function() {
      if (stylesheet.styleSheet)
        return stylesheet.styleSheet.cssText;
      else if (stylesheet.innerHTML)
        return stylesheet.innerHTML;
    }
  
  return cssAPI;
});

define('css', ['css/css'], function (main) { return main; });

// RequireJS configuration
requirejs.config({
    waitSeconds: 0,
    packages: [
        {
            name: 'ace',
            location: 'bower-libs/ace/lib/ace',
            main: 'ace'
        },
        {
            name: 'css',
            location: 'bower-libs/require-css',
            main: 'css'
        },
        {
            name: 'less',
            location: 'bower-libs/require-less',
            main: 'less'
        }
    ],
    paths: {
        jquery: 'bower-libs/jquery/jquery',
        underscore: 'bower-libs/underscore/underscore',
        crel: 'bower-libs/crel/crel',
        jgrowl: 'bower-libs/jgrowl/jquery.jgrowl',
        mousetrap: 'bower-libs/mousetrap/mousetrap',
        'mousetrap-record': 'bower-libs/mousetrap/plugins/record/mousetrap-record',
        toMarkdown: 'bower-libs/to-markdown/src/to-markdown',
        text: 'bower-libs/requirejs-text/text',
        mathjax: '../lib/MathJax/MathJax.js?config=TeX-AMS_HTML',
        bootstrap: 'bower-libs/bootstrap/dist/js/bootstrap',
        requirejs: 'bower-libs/requirejs/require',
        'google-code-prettify': 'bower-libs/google-code-prettify/src/prettify',
        highlightjs: 'bower-libs/highlightjs/highlight.pack',
        'jquery-waitforimages': 'bower-libs/waitForImages/src/jquery.waitforimages',
        'jquery-ui': 'bower-libs/jquery-ui/ui/jquery-ui',
        'jquery-ui-core': 'bower-libs/jquery-ui/ui/jquery.ui.core',
        'jquery-ui-widget': 'bower-libs/jquery-ui/ui/jquery.ui.widget',
        'jquery-ui-mouse': 'bower-libs/jquery-ui/ui/jquery.ui.mouse',
        'jquery-ui-draggable': 'bower-libs/jquery-ui/ui/jquery.ui.draggable',
        'jquery-ui-effect': 'bower-libs/jquery-ui/ui/jquery.ui.effect',
        'jquery-ui-effect-slide': 'bower-libs/jquery-ui/ui/jquery.ui.effect-slide',
        uilayout: 'libs/layout',
        FileSaver: 'bower-libs/FileSaver/FileSaver',
        stacktrace: 'bower-libs/stacktrace/stacktrace',
        'requirejs-text': 'bower-libs/requirejs-text/text',
        'bootstrap-tour': 'bower-libs/bootstrap-tour/build/js/bootstrap-tour',
        css_browser_selector: 'bower-libs/css_browser_selector/css_browser_selector',
        'jquery-mousewheel': 'bower-libs/jquery-mousewheel/jquery.mousewheel',
        'pagedown-ace': 'bower-libs/pagedown-ace/Markdown.Editor',
        'pagedown-extra': 'bower-libs/pagedown-extra/Markdown.Extra',
        'ace/requirejs/text': 'libs/ace_text',
        'ace/commands/default_commands': 'libs/ace_commands',
        'require-css': 'bower-libs/require-css/css',
        Typo: 'bower-libs/Typo.js',
        'typo-js': 'bower-libs/Typo.js/typo/typo',
        xregexp: 'bower-libs/xregexp/xregexp-all',
        'Typo.js': 'bower-libs/Typo.js',
        yaml: 'bower-libs/yaml.js',
        'yaml.js': 'bower-libs/yaml.js',
        'yaml-js': 'bower-libs/yaml.js/bin/yaml'
    },
    shim: {
        underscore: {
            exports: '_'
        },
        mathjax: [
            'libs/mathjax_init'
        ],
        jgrowl: {
            deps: [
                'jquery'
            ],
            exports: 'jQuery.jGrowl'
        },
        mousetrap: {
            exports: 'Mousetrap'
        },
        'typo-js': {
            exports: 'Typo'
        },
        'yaml-js': {
            exports: 'YAML'
        },
        'bootstrap-record': [
            'mousetrap'
        ],
        toMarkdown: {
            deps: [
                'jquery'
            ],
            exports: 'toMarkdown'
        },
        'bootstrap-tour': [
            'bootstrap'
        ],
        bootstrap: [
            'jquery'
        ],
        'jquery-waitforimages': [
            'jquery'
        ],
        'jquery-mousewheel': [
            'jquery'
        ],
        uilayout: [
            'jquery-ui-effect-slide'
        ],
        'jquery-ui-effect-slide': [
            'jquery-ui-effect'
        ],
        'jquery-ui-effect': [
            'jquery-ui-draggable'
        ],
        'jquery-ui-draggable': [
            'jquery-ui-mouse'
        ],
        'jquery-ui-mouse': [
            'jquery-ui-widget'
        ],
        'jquery-ui-widget': [
            'jquery-ui-core'
        ],
        'jquery-ui-core': [
            'jquery'
        ],
        'pagedown-extra': [
            'pagedown-ace',
            'google-code-prettify',
            'highlightjs'
        ],
        'pagedown-ace': [
            'bower-libs/pagedown-ace/Markdown.Converter'
        ]
    }
});

// Defines the logger object
var logger = {
    log: function() {
    },
    info: function() {
    },
    warn: function() {
    },
    error: function() {
    }
};
// We can run StackEdit with http://.../?console to print logs in the console
if(/(\?|&)console($|&)/.test(location.search)) {
    logger = console;
}

// Viewer mode is deduced from the body class
var viewerMode = /(^| )viewer($| )/.test(document.body.className);

// Light mode is for mobile or viewer
var lightMode =
    viewerMode
        || /(\?|&)light($|&)/.test(location.search)
        || (function(a) {
            if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)
                || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i
                    .test(a.substr(0, 4)))
                return true;
        })(navigator.userAgent || navigator.vendor || window.opera);

// Keep the theme in a global variable
var theme = localStorage.theme || 'default';
var themeModule = "less!themes/" + theme;
if(baseDir.indexOf('-min') !== -1) {
    themeModule = "css!themes/" + theme;
}

// RequireJS entry point. By requiring synchronizer, publisher and
// media-importer, we are actually loading all the modules
require([
    "jquery",
    "core",
    "eventMgr",
    "synchronizer",
    "publisher",
    "mediaImporter",
    "css",
    themeModule,
], function($, core, eventMgr) {

    $(function() {

        // Here, all the modules are loaded and the DOM is ready
        core.onReady();

        // If browser has detected a new application cache.
        if(window.applicationCache) {
            window.applicationCache.addEventListener('updateready', function(e) {
                if(window.applicationCache.status === window.applicationCache.UPDATEREADY) {
                    window.applicationCache.swapCache();
                    eventMgr.onMessage('New version available!\nJust refresh the page to upgrade.');
                }
            }, false);
        }
    });

});

define("main", function(){});
